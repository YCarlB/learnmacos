Gadgets information
============================================================
0xffffff80008e4674 : adc ah, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0xb948
0xffffff80004fbb48 : adc ah, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80005abf82 : adc ah, byte ptr [rdx + 0x57] ; add byte ptr [rcx], dh ; imul al ; ret
0xffffff8000b4872e : adc ah, byte ptr [rip - 0x77bbd6dc] ; ret 0xd200
0xffffff8000701333 : adc ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff800065f59c : adc ah, ch ; ret 0x48ff
0xffffff800054dbff : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800050bf90 : adc al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004e153d : adc al, 0 ; add byte ptr [rbp - 0x17], bl ; mov cl, bl ; ret 0x66ff
0xffffff8000b4a07d : adc al, 0 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0xffffff80006a1ea4 : adc al, 0 ; add byte ptr [rcx], dh ; shr al, cl ; add bl, byte ptr [rsi] ; ret
0xffffff800058ba28 : adc al, 0 ; add dh, dh ; ret 0x7502
0xffffff8000679c8b : adc al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006d7df3 : adc al, 0 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f1e75 : adc al, 0 ; mov esi, 0x210 ; call 0xffffff800028e159
0xffffff80008e24d0 : adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a8c0b : adc al, 0 ; mov rdi, rbx ; call r14
0xffffff80008b0a8f : adc al, 0 ; movzx eax, al ; pop rbp ; ret
0xffffff80002505a7 : adc al, 0 ; pop rbp ; ret
0xffffff80002a9903 : adc al, 0 ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff80008a23ed : adc al, 0x10 ; add byte ptr [rip - 0x17000000], dl ; ret
0xffffff800074a3e2 : adc al, 0x19 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000835458 : adc al, 0x24 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003abdc4 : adc al, 0x25 ; sbb al, 0 ; add byte ptr [rax], al ; and edx, ebx ; call rax
0xffffff80004606dc : adc al, 0x2f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000477a97 : adc al, 0x31 ; leave ; pop rbp ; jmp r9
0xffffff80005e03d2 : adc al, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80005e0440 : adc al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800065ad88 : adc al, 0x37 ; ret
0xffffff80005b5f49 : adc al, 0x39 ; ret 0x8c0f
0xffffff800076ea42 : adc al, 0x3c ; add al, ch ; out 0x3e, al ; ret 0xffff
0xffffff800028bcd4 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800055fc54 : adc al, 0x48 ; mov edx, dword ptr [rbp - 0x40] ; call rax
0xffffff800055eeb7 : adc al, 0x48 ; mov edx, dword ptr [rbp - 0x50] ; call rcx
0xffffff80004d9d28 : adc al, 0x4a ; fdivp st(7) ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80005562e2 : adc al, 0x4b ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff800061d9b2 : adc al, 0x4c ; mov edi, ebp ; call rax
0xffffff800090970f : adc al, 0x4c ; mov edi, edi ; mov esi, r14d ; call rcx
0xffffff8000654058 : adc al, 0x4e ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rbx ; call qword ptr [rax]
0xffffff80005671a5 : adc al, 0x57 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000566cb8 : adc al, 0x57 ; add byte ptr [rcx + rcx*4 + 0x73], cl ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80004e0d1b : adc al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80002a9a33 : adc al, 0x5d ; ret
0xffffff8000872808 : adc al, 0x61 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000657a98 : adc al, 0x67 ; ret
0xffffff800076c528 : adc al, 0x6b ; ret 0xebff
0xffffff800061a8ef : adc al, 0x76 ; add al, 0x44 ; mov dword ptr [rsi + 0x14], eax ; pop rbp ; ret
0xffffff800054a810 : adc al, 0x77 ; adc dword ptr [rax + 0x63], ecx ; ret 0x8d48
0xffffff8000338e88 : adc al, 0x7c ; add byte ptr [rdi + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80002db490 : adc al, 0x7e ; and byte ptr [rax + 0x63], cl ; ret 0x8b48
0xffffff8000368457 : adc al, 0x7f ; mov ecx, dword ptr [rcx + rdx*4 + 4] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80003683f7 : adc al, 0x7f ; mov ecx, dword ptr [rcx + rdx*4] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000291004 : adc al, 0x81 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000512c05 : adc al, 0x81 ; add rdx, rcx ; jmp rdx
0xffffff8000504ae9 : adc al, 0x83 ; loopne 0xffffff8000504af3 ; pop rbp ; ret
0xffffff8000528ea3 : adc al, 0x83 ; loopne 0xffffff8000528eb0 ; add eax, 3 ; pop rbp ; ret
0xffffff8000283713 : adc al, 0x83 ; ret
0xffffff80003947cc : adc al, 0x86 ; add rdx, rsi ; jmp rdx
0xffffff8000572a18 : adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff80003b1e31 : adc al, 0x88 ; ret
0xffffff800066f3d8 : adc al, 0x89 ; add al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800051f8c3 : adc al, 0x89 ; add rdx, r9 ; mov ecx, eax ; jmp rdx
0xffffff80004af637 : adc al, 0x89 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0xffffff80007be394 : adc al, 0x89 ; ret 0x2944
0xffffff8000436b09 : adc al, 0x89 ; ret 0x5303
0xffffff80007b1e11 : adc al, 0x89 ; ret 0xca0f
0xffffff8000b3c0e7 : adc al, 0x89 ; ret 0xca21
0xffffff80004892fa : adc al, 0x89 ; ret 0xeac1
0xffffff80006d1138 : adc al, 0x89 ; sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff800079d5a0 : adc al, 0x8a ; or ecx, dword ptr [rax - 1] ; ret
0xffffff800058e8ec : adc al, 0x8b ; push rcx ; add al, 0x21 ; ret 0xd0f7
0xffffff8000594744 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff8000272c23 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0xffffff800028684e : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0xffffff800059b7c1 : adc al, 0x92 ; add rdx, r10 ; jmp rdx
0xffffff800059b831 : adc al, 0x93 ; add rdx, r11 ; jmp rdx
0xffffff800035a346 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0xffffff800056ec8c : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0xffffff80003b15ae : adc al, 0x99 ; add rdx, rcx ; jmp rdx
0xffffff800076b76c : adc al, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800067ef53 : adc al, 0xa1 ; add rdx, rcx ; jmp rdx
0xffffff80006eee7b : adc al, 0xa9 ; add rdx, rcx ; jmp rdx
0xffffff800039b8b9 : adc al, 0xb0 ; add rdx, rax ; jmp rdx
0xffffff800028fe6e : adc al, 0xb1 ; add rdx, rcx ; jmp rdx
0xffffff8000b49172 : adc al, 0xb5 ; pop rbx ; ret
0xffffff80003925d9 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff800080f453 : adc al, 0xb8 ; add rdx, rax ; jmp rdx
0xffffff8000717425 : adc al, 0xbc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080679d : adc al, 0xbe ; add rdx, rsi ; jmp rdx
0xffffff800084d1fe : adc al, 0xbe ; add rdx, rsi ; mov rdi, qword ptr [rbp + 0x20] ; jmp rdx
0xffffff80007f0ef7 : adc al, 0xbf ; add rdx, rdi ; jmp rdx
0xffffff8000254404 : adc al, 0xc2 ; jmp 0xffffff800025441b
0xffffff8000258154 : adc al, 0xc2 ; jmp 0xffffff800025816b
0xffffff8000423a99 : adc al, 0xc2 ; jmp 0xffffff8000423aab
0xffffff800049549f : adc al, 0xc7 ; pop rbp ; ret
0xffffff8000609246 : adc al, 0xd9 ; dec dword ptr [rax + 1] ; ret
0xffffff80004e36a8 : adc al, 0xe5 ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000467431 : adc al, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004e1b74 : adc al, 0xeb ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80005dde35 : adc al, 0xef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000366368 : adc al, 0xef ; cli ; inc dword ptr [rbp + 0x5d0275c0] ; ret
0xffffff80005e8b24 : adc al, 0xf ; add byte ptr [r8 - 0x77], r9b ; ret 0xb0e8
0xffffff80007ae3f4 : adc al, 0xf ; and edx, eax ; mov byte ptr [rdi + rcx], dl ; pop rbp ; ret
0xffffff80008970ac : adc al, 0xf ; mov al, 1 ; pop rbp ; ret
0xffffff80007ae3f9 : adc al, 0xf ; pop rbp ; ret
0xffffff80008e23f3 : adc al, 0xf ; xchg eax, ebp ; ret 0xb60f
0xffffff800039742e : adc al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b54b4 : adc al, 0xf6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000727ffc : adc al, 0xf6 ; ret 0x4104
0xffffff8000411b64 : adc al, 0xf8 ; push rsi ; ret
0xffffff8000568c08 : adc al, 0xfb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b8425 : adc al, 0xfe ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003a4bc7 : adc al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033d863 : adc al, 0xff ; ret 0x8b41
0xffffff80002a03a6 : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002af47b : adc al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c0f98 : adc al, 1 ; ret
0xffffff80007587c0 : adc al, 1 ; test dl, 0x10 ; jne 0xffffff80007587d1 ; pop rbp ; ret
0xffffff800061e503 : adc al, 2 ; add byte ptr [rax], al ; and byte ptr [rdi], cl ; ret 0x28b9
0xffffff800026cc56 : adc al, 2 ; add cl, ch ; ret
0xffffff800066b758 : adc al, 3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a8870 : adc al, 7 ; add byte ptr [rax], al ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80008b0799 : adc al, 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008989a8 : adc al, 8 ; mov al, 1 ; pop rbp ; ret
0xffffff80007aaba9 : adc al, 8 ; pop rbp ; ret
0xffffff80007f448a : adc al, 8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008903a7 : adc al, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000623711 : adc al, byte ptr [r8] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800062ee4d : adc al, byte ptr [rax + rax + 0x5d] ; ret
0xffffff8000437276 : adc al, byte ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b1df0 : adc al, byte ptr [rax + rcx*4] ; ret
0xffffff80002d2f85 : adc al, byte ptr [rax] ; add al, ch ; ret
0xffffff8000498dff : adc al, byte ptr [rax] ; add bh, bh ; ret
0xffffff8000625331 : adc al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000320b67 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006f2cd4 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff8000587a76 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff80004be727 : adc al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000623712 : adc al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000268df7 : adc al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008d64b6 : adc al, byte ptr [rax] ; mov rdi, r14 ; call rax
0xffffff8000268ea4 : adc al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d8eda : adc al, byte ptr [rbp - 0x76b7000d] ; ret
0xffffff80004cbd0d : adc al, byte ptr [rbx + rbx*8 - 0xb7e78c] ; ret 0x8348
0xffffff8000b3c952 : adc al, byte ptr [rcx - 0x77] ; ret 0x8341
0xffffff80005cfd90 : adc al, byte ptr [rcx - 0x7f] ; call qword ptr [rax]
0xffffff80002a20c4 : adc al, byte ptr [rcx - 2] ; ret 0x8944
0xffffff800086eb74 : adc al, byte ptr [rcx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80002cd250 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call 0xffffff800028e158
0xffffff80002b29ba : adc al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000883b7b : adc al, ch ; call rbx
0xffffff800031f6ef : adc al, ch ; fld xword ptr [rip - 0x7cb7fff9] ; ret
0xffffff80004988df : adc al, ch ; jmp 0xffffff80004988f3
0xffffff80008ce87b : adc al, ch ; jmp qword ptr [rsi]
0xffffff80007fab6e : adc al, ch ; jo 0xffffff80007fab70 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a2d0e : adc al, ch ; lodsb al, byte ptr [rsi] ; out dx, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007039a0 : adc al, ch ; or cl, byte ptr [rbx - 0x25] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000377bc7 : adc al, ch ; ret
0xffffff80004da5e8 : adc al, ch ; ret 0x2541
0xffffff80007dc478 : adc al, ch ; ret 0xbb65
0xffffff8000492788 : adc al, ch ; ret 0xf071
0xffffff800043a8b8 : adc al, ch ; ret 0xffc9
0xffffff8000894d2e : adc al, ch ; ret 2
0xffffff800031aecf : adc al, ch ; sub esi, dword ptr [rdi + 7] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007984a6 : adc al, ch ; test byte ptr [rdx - 2], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800031ad65 : adc al, ch ; xchg eax, ebp ; js 0xffffff800031ad79 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002996ed : adc al, dh ; and dword ptr [rax], 0xffffffdf ; xor eax, eax ; pop rbp ; ret
0xffffff8000371633 : adc al, dh ; loope 0xffffff800037160d ; ret
0xffffff80007a2d0d : adc al, r13b ; lodsb al, byte ptr [rsi] ; out dx, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008903a6 : adc al, r15b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a1f68 : adc bh, al ; add eax, 0x84a661 ; push rax ; ret
0xffffff80003b7bb1 : adc bh, bh ; ret 0x502b
0xffffff800033d401 : adc bh, bh ; ret 0x7b8b
0xffffff800058b91f : adc bh, bh ; ret 0xd139
0xffffff80002ee1fe : adc bh, bh ; ret 0xed75
0xffffff8000833d76 : adc bh, bh ; ret 0xff49
0xffffff80007d23e5 : adc bh, bl ; ljmp [rcx] ; ret
0xffffff8000348854 : adc bh, byte ptr [rcx] ; ret 0xf772
0xffffff8000369956 : adc bh, byte ptr [rsi] ; add cl, ch ; ret 0xfffe
0xffffff80007b3eaa : adc bh, ch ; xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff800064e68a : adc bh, dh ; ret
0xffffff80003e56cd : adc bh, dh ; ret 0
0xffffff800066de3a : adc bl, bpl ; ret 0x894c
0xffffff80008f1bc4 : adc bl, byte ptr [rbp + 0x5dc031ff] ; ret
0xffffff800055063f : adc bl, byte ptr [rbp] ; pop rbp ; ret
0xffffff80003c7c3a : adc bl, byte ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800025863a : adc bl, byte ptr [rbx + 3] ; add bl, ch ; ret 0x4855
0xffffff800055063e : adc bl, byte ptr es:[rbp] ; pop rbp ; ret
0xffffff80004aca13 : adc bl, ch ; or cl, byte ptr [rax - 0x7d] ; ret 0x6608
0xffffff80004ac8f4 : adc bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0xffffff80004aca94 : adc bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret 0xf08
0xffffff800058fc46 : adc bl, ch ; push rdx ; mov dl, r8b ; jmp 0xffffff800058fc60
0xffffff80003464aa : adc bl, ch ; ret
0xffffff800066de3b : adc bl, ch ; ret 0x894c
0xffffff800065068a : adc bl, dh ; ret
0xffffff80008a414e : adc bp, word ptr [rcx] ; add byte ptr [rbp - 0x75], cl ; insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff8000b3c39b : adc bpl, byte ptr [r9] ; ret 0xe281
0xffffff80004576d1 : adc bpl, r8b ; dec dword ptr [rax - 0x77] ; ret
0xffffff800026dbce : adc byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800089d7c0 : adc byte ptr [r11 + 0xf01687b], al ; xchg eax, esp ; ret 0xb60f
0xffffff8000870797 : adc byte ptr [r11 + r9*4 + 0x43], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0xff41
0xffffff80007953c1 : adc byte ptr [r8 + 0x29], r9b ; enter -0x67b8, 0x5d ; ret
0xffffff800031b2fd : adc byte ptr [r8 + 0x39], r9b ; ret
0xffffff800031b1e0 : adc byte ptr [r8 - 0x39], cl ; ret 0xf000
0xffffff80005d13f0 : adc byte ptr [r8 - 0x39], r9b ; ret 0xffff
0xffffff800076a12b : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076a14a ; call 0xffffff8000392a49
0xffffff800076a196 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076a1b5 ; call 0xffffff8000392a49
0xffffff800076a766 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076a785 ; call 0xffffff8000392a49
0xffffff800076a9f0 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076aa0f ; call 0xffffff8000392a49
0xffffff800076aaea : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076ab09 ; call 0xffffff8000392a49
0xffffff800076ac45 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076ac64 ; call 0xffffff8000392a49
0xffffff800076af0d : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076af2c ; call 0xffffff8000392a49
0xffffff800076b2b2 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076b2d1 ; call 0xffffff8000392a49
0xffffff800076b305 : adc byte ptr [r8 - 0x75], cl ; js 0xffffff800076b324 ; call 0xffffff8000392a49
0xffffff80007f682f : adc byte ptr [r8 - 0x75], cl ; js 0xffffff80007f684d ; call 0xffffff8000392a48
0xffffff80005c90a4 : adc byte ptr [r8 - 0x75], r9b ; or byte ptr [r8 - 0x7d], cl ; ret
0xffffff800066de36 : adc byte ptr [r8 - 0x77], cl ; adc bl, bpl ; ret 0x894c
0xffffff800026db53 : adc byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800031a32a : adc byte ptr [r8 - 0x77], cl ; ret 0x294c
0xffffff8000884feb : adc byte ptr [r8 - 0x77], r9b ; ret 0x3948
0xffffff80003ed6cc : adc byte ptr [r8 - 0x77], r9b ; ret 0xc148
0xffffff800062647f : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000626478 ; pop rbp ; ret
0xffffff800062653b : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000626538 ; pop rbp ; ret
0xffffff8000811b90 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000811b88 ; pop rbp ; ret
0xffffff8000813320 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000813318 ; pop rbp ; ret
0xffffff8000814400 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008143f8 ; pop rbp ; ret
0xffffff8000814e00 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000814df8 ; pop rbp ; ret
0xffffff8000816360 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000816358 ; pop rbp ; ret
0xffffff8000818e90 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000818e88 ; pop rbp ; ret
0xffffff800082b680 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800082b678 ; pop rbp ; ret
0xffffff800082c2a0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800082c298 ; pop rbp ; ret
0xffffff800082e180 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800082e178 ; pop rbp ; ret
0xffffff800082ecc0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800082ecb8 ; pop rbp ; ret
0xffffff800082f7d0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800082f7c8 ; pop rbp ; ret
0xffffff8000830b10 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000830b08 ; pop rbp ; ret
0xffffff8000832a90 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000832a88 ; pop rbp ; ret
0xffffff8000858f20 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000858f18 ; pop rbp ; ret
0xffffff800085ce50 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800085ce48 ; pop rbp ; ret
0xffffff800085d0b0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800085d0a8 ; pop rbp ; ret
0xffffff8000860fb0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000860fa8 ; pop rbp ; ret
0xffffff8000862840 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000862838 ; pop rbp ; ret
0xffffff8000862ad0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000862ac8 ; pop rbp ; ret
0xffffff8000862d30 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000862d28 ; pop rbp ; ret
0xffffff8000862f90 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000862f88 ; pop rbp ; ret
0xffffff80008631f0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008631e8 ; pop rbp ; ret
0xffffff8000863450 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000863448 ; pop rbp ; ret
0xffffff80008636b0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008636a8 ; pop rbp ; ret
0xffffff80008813c0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008813b8 ; pop rbp ; ret
0xffffff80008816e0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008816d8 ; pop rbp ; ret
0xffffff8000881af0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000881ae8 ; pop rbp ; ret
0xffffff8000882100 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008820f8 ; pop rbp ; ret
0xffffff8000882480 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000882478 ; pop rbp ; ret
0xffffff8000884780 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000884778 ; pop rbp ; ret
0xffffff8000884ec0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000884eb8 ; pop rbp ; ret
0xffffff80008857f0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008857e8 ; pop rbp ; ret
0xffffff8000886080 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000886078 ; pop rbp ; ret
0xffffff8000887ef0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000887ee8 ; pop rbp ; ret
0xffffff8000889d50 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000889d48 ; pop rbp ; ret
0xffffff800088a980 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800088a978 ; pop rbp ; ret
0xffffff800088cc00 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800088cbf8 ; pop rbp ; ret
0xffffff800088eed0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800088eec8 ; pop rbp ; ret
0xffffff8000890150 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000890148 ; pop rbp ; ret
0xffffff80008912b0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008912a8 ; pop rbp ; ret
0xffffff8000891970 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000891968 ; pop rbp ; ret
0xffffff8000892510 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000892508 ; pop rbp ; ret
0xffffff8000893100 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008930f8 ; pop rbp ; ret
0xffffff8000893f30 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000893f28 ; pop rbp ; ret
0xffffff80008951b0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008951a8 ; pop rbp ; ret
0xffffff80008967d0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008967c8 ; pop rbp ; ret
0xffffff80008990a0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff8000899098 ; pop rbp ; ret
0xffffff800089b0e0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800089b0d8 ; pop rbp ; ret
0xffffff800089b700 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800089b6f8 ; pop rbp ; ret
0xffffff800089ba30 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800089ba28 ; pop rbp ; ret
0xffffff800089bd60 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800089bd58 ; pop rbp ; ret
0xffffff800089d210 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff800089d208 ; pop rbp ; ret
0xffffff80008a2aa0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008a2a98 ; pop rbp ; ret
0xffffff80008a5370 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008a5368 ; pop rbp ; ret
0xffffff80008a6300 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008a62f8 ; pop rbp ; ret
0xffffff80008a7200 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008a71f8 ; pop rbp ; ret
0xffffff80008a7c10 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008a7c08 ; pop rbp ; ret
0xffffff80008aaba0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008aab98 ; pop rbp ; ret
0xffffff80008ab1e0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008ab1d8 ; pop rbp ; ret
0xffffff80008ab540 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008ab538 ; pop rbp ; ret
0xffffff80008ae0e0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008ae0d8 ; pop rbp ; ret
0xffffff80008af3f0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008af3e8 ; pop rbp ; ret
0xffffff80008b3e40 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008b3e38 ; pop rbp ; ret
0xffffff80008b5180 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008b5178 ; pop rbp ; ret
0xffffff80008b5d70 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008b5d68 ; pop rbp ; ret
0xffffff80008b63c0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008b63b8 ; pop rbp ; ret
0xffffff80008c0b90 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008c0b88 ; pop rbp ; ret
0xffffff80008c2ae0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008c2ad8 ; pop rbp ; ret
0xffffff80008c3770 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008c3768 ; pop rbp ; ret
0xffffff80008c4240 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008c4238 ; pop rbp ; ret
0xffffff80008cc420 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008cc418 ; pop rbp ; ret
0xffffff80008ce220 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008ce218 ; pop rbp ; ret
0xffffff80008cebc0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008cebb8 ; pop rbp ; ret
0xffffff80008d07f0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d07e8 ; pop rbp ; ret
0xffffff80008d18b0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d18a8 ; pop rbp ; ret
0xffffff80008d4b50 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d4b48 ; pop rbp ; ret
0xffffff80008d5b50 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d5b48 ; pop rbp ; ret
0xffffff80008d6b40 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d6b38 ; pop rbp ; ret
0xffffff80008d74e0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d74d8 ; pop rbp ; ret
0xffffff80008d7750 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d7748 ; pop rbp ; ret
0xffffff80008d79c0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008d79b8 ; pop rbp ; ret
0xffffff80008e2650 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008e2648 ; pop rbp ; ret
0xffffff80008e55c0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008e55b8 ; pop rbp ; ret
0xffffff80008e6af0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008e6ae8 ; pop rbp ; ret
0xffffff80008e6db0 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008e6da8 ; pop rbp ; ret
0xffffff80008e7640 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008e7638 ; pop rbp ; ret
0xffffff800048d419 : adc byte ptr [r8 - 0x7d], cl ; ret
0xffffff80006df22f : adc byte ptr [r8 - 0x7d], r9b ; ret
0xffffff8000370568 : adc byte ptr [r8 - 0x7d], r9b ; ret 0x4840
0xffffff800046460c : adc byte ptr [r8 - 1], r9b ; ret
0xffffff8000516504 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005e91e8 : adc byte ptr [r8], al ; add cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000462ad2 : adc byte ptr [r8], r8b ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800054c394 : adc byte ptr [r9 + 0x39], r8b ; ret 0x4a75
0xffffff8000781795 : adc byte ptr [r9 + 0x5dc03102], r9b ; ret
0xffffff800048d682 : adc byte ptr [r9 - 0x39], r9b ; ret
0xffffff8000881e9f : adc byte ptr [r9 - 0x75], r9b ; sbb byte ptr [r8 + 0x39], r9b ; ret 0x674
0xffffff80003150a2 : adc byte ptr [r9 - 0x75], r9b ; sbb byte ptr [r8 - 0x77], r9b ; ret 0x294c
0xffffff800083030a : adc byte ptr [r9 - 0x7a0fce28], r9b ; ret 0xf74
0xffffff80008a6578 : adc byte ptr [r9], dil ; ret 0x975
0xffffff80007953c2 : adc byte ptr [rax + 0x29], cl ; enter -0x67b8, 0x5d ; ret
0xffffff8000662cb3 : adc byte ptr [rax + 0x29], cl ; ret
0xffffff80002611bd : adc byte ptr [rax + 0x29], cl ; ret 0x14c
0xffffff800079d964 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0xffffff8000855607 : adc byte ptr [rax + 0x2b], cl ; push rax ; or byte ptr [rax + 0x69], cl ; ret 0xca00
0xffffff8000328993 : adc byte ptr [rax + 0x39], cl ; push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0xffffff8000318219 : adc byte ptr [rax + 0x39], cl ; ret
0xffffff80002ccf82 : adc byte ptr [rax + 0x39], cl ; ret 0x3175
0xffffff80008574a7 : adc byte ptr [rax + 0x39], cl ; ret 0x674
0xffffff800034ac8f : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff80004dd1dd : adc byte ptr [rax + 0x39], cl ; ret 0xbd72
0xffffff8000345e0e : adc byte ptr [rax + 0x39], cl ; ret 0xd74
0xffffff800088b82a : adc byte ptr [rax + 0x39], cl ; ret 0xf073
0xffffff800074d307 : adc byte ptr [rax + 0x39], r9b ; ret
0xffffff80002703d1 : adc byte ptr [rax + 0x63], cl ; ret
0xffffff800025f262 : adc byte ptr [rax + 0x63], cl ; ret 0x8b48
0xffffff80003a8536 : adc byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff800035c750 : adc byte ptr [rax + 1], cl ; ret
0xffffff8000630d59 : adc byte ptr [rax + 1], cl ; ret 0x148
0xffffff800049a52b : adc byte ptr [rax + 1], cl ; ret 0x748b
0xffffff800065c816 : adc byte ptr [rax + 1], cl ; ret 0x8b41
0xffffff800028a8d2 : adc byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff80002b8e0b : adc byte ptr [rax + 9], cl ; ret 0x8348
0xffffff80004af531 : adc byte ptr [rax - 0x2a373], al ; call qword ptr [rax]
0xffffff8000356be1 : adc byte ptr [rax - 0x39], cl ; ret
0xffffff800031b1e1 : adc byte ptr [rax - 0x39], cl ; ret 0xf000
0xffffff80005d13f1 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80005d1a26 : adc byte ptr [rax - 0x39], r9b ; ret 0xffff
0xffffff80006f410c : adc byte ptr [rax - 0x42], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082edfe : adc byte ptr [rax - 0x75], cl ; ja 0xffffff800082ee24 ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff8000389858 : adc byte ptr [rax - 0x75], cl ; jae 0xffffff800038987a ; call qword ptr [rax]
0xffffff800051cf59 : adc byte ptr [rax - 0x75], cl ; jge 0xffffff800051cefe ; mov rdx, r15 ; call rax
0xffffff80008f1791 : adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f173b ; call rbx
0xffffff80008f181a : adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f17c4 ; call rcx
0xffffff800054dfa5 : adc byte ptr [rax - 0x75], cl ; jne 0xffffff800054df7a ; mov rbx, rdx ; call rbx
0xffffff8000840414 : adc byte ptr [rax - 0x75], cl ; jnp 0xffffff800084046e ; call rcx
0xffffff800076a12c : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076a149 ; call 0xffffff8000392a48
0xffffff800076a197 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076a1b4 ; call 0xffffff8000392a48
0xffffff800076a767 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076a784 ; call 0xffffff8000392a48
0xffffff800076a9f1 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076aa0e ; call 0xffffff8000392a48
0xffffff800076aaeb : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076ab08 ; call 0xffffff8000392a48
0xffffff800076ac46 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076ac63 ; call 0xffffff8000392a48
0xffffff800076af0e : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076af2b ; call 0xffffff8000392a48
0xffffff800076b2b3 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076b2d0 ; call 0xffffff8000392a48
0xffffff800076b306 : adc byte ptr [rax - 0x75], cl ; js 0xffffff800076b323 ; call 0xffffff8000392a48
0xffffff80007f6830 : adc byte ptr [rax - 0x75], cl ; js 0xffffff80007f684c ; call 0xffffff8000392a47
0xffffff80005802eb : adc byte ptr [rax - 0x75], cl ; nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff80005c90a5 : adc byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0xffffff800049a518 : adc byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0x708b
0xffffff8000321430 : adc byte ptr [rax - 0x75], cl ; push rbp ; ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret
0xffffff80002701f4 : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff800071fd8b : adc byte ptr [rax - 0x75], cl ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000580a9e : adc byte ptr [rax - 0x75], cl ; xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff800066de37 : adc byte ptr [rax - 0x77], cl ; adc bl, bpl ; ret 0x894c
0xffffff80008b77ba : adc byte ptr [rax - 0x77], cl ; adc ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800026db54 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800063e924 : adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff800056f871 : adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0
0xffffff80002f9db2 : adc byte ptr [rax - 0x77], cl ; ja 0xffffff80002f9dc5 ; pop rbp ; ret
0xffffff800026dafb : adc byte ptr [rax - 0x77], cl ; jno 0xffffff800026db0e ; pop rbp ; ret
0xffffff800026dd3e : adc byte ptr [rax - 0x77], cl ; jp 0xffffff800026dd51 ; pop rbp ; ret
0xffffff8000767902 : adc byte ptr [rax - 0x77], cl ; pop r8 ; pop rbp ; ret
0xffffff800031804a : adc byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rax + 0x39], 1 ; ret 0x840f
0xffffff80004b5bf7 : adc byte ptr [rax - 0x77], cl ; push rcx ; sbb bl, ch ; ret 0x8a41
0xffffff80003cf34b : adc byte ptr [rax - 0x77], cl ; ret
0xffffff800084944a : adc byte ptr [rax - 0x77], cl ; ret 0x148
0xffffff80008c9fb1 : adc byte ptr [rax - 0x77], cl ; ret 0x1774
0xffffff8000328353 : adc byte ptr [rax - 0x77], cl ; ret 0x1874
0xffffff8000530e36 : adc byte ptr [rax - 0x77], cl ; ret 0x1974
0xffffff80005e87e6 : adc byte ptr [rax - 0x77], cl ; ret 0x1b74
0xffffff8000885079 : adc byte ptr [rax - 0x77], cl ; ret 0x1f0f
0xffffff800031a32b : adc byte ptr [rax - 0x77], cl ; ret 0x294c
0xffffff8000884fec : adc byte ptr [rax - 0x77], cl ; ret 0x3948
0xffffff8000318f96 : adc byte ptr [rax - 0x77], cl ; ret 0x61e8
0xffffff80006222dd : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff80003ed6cd : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80002da23e : adc byte ptr [rax - 0x77], cl ; test al, 0x89 ; ret 0xc148
0xffffff8000767901 : adc byte ptr [rax - 0x77], r9b ; pop r8 ; pop rbp ; ret
0xffffff80008c9fb0 : adc byte ptr [rax - 0x77], r9b ; ret 0x1774
0xffffff8000328352 : adc byte ptr [rax - 0x77], r9b ; ret 0x1874
0xffffff8000530e35 : adc byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff8000885078 : adc byte ptr [rax - 0x77], r9b ; ret 0x1f0f
0xffffff8000451821 : adc byte ptr [rax - 0x7b], cl ; div byte ptr [rbp - 0x17] ; pop rbp ; ret
0xffffff8000626480 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000626477 ; pop rbp ; ret
0xffffff800062653c : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000626537 ; pop rbp ; ret
0xffffff8000811b91 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000811b87 ; pop rbp ; ret
0xffffff8000813321 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000813317 ; pop rbp ; ret
0xffffff8000814401 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008143f7 ; pop rbp ; ret
0xffffff8000814e01 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000814df7 ; pop rbp ; ret
0xffffff8000816361 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000816357 ; pop rbp ; ret
0xffffff8000818e91 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000818e87 ; pop rbp ; ret
0xffffff800082b681 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800082b677 ; pop rbp ; ret
0xffffff800082c2a1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800082c297 ; pop rbp ; ret
0xffffff800082e181 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800082e177 ; pop rbp ; ret
0xffffff800082ecc1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800082ecb7 ; pop rbp ; ret
0xffffff800082f7d1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800082f7c7 ; pop rbp ; ret
0xffffff8000830b11 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000830b07 ; pop rbp ; ret
0xffffff8000832a91 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000832a87 ; pop rbp ; ret
0xffffff8000858f21 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000858f17 ; pop rbp ; ret
0xffffff800085ce51 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800085ce47 ; pop rbp ; ret
0xffffff800085d0b1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800085d0a7 ; pop rbp ; ret
0xffffff8000860fb1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000860fa7 ; pop rbp ; ret
0xffffff8000862841 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000862837 ; pop rbp ; ret
0xffffff8000862ad1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000862ac7 ; pop rbp ; ret
0xffffff8000862d31 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000862d27 ; pop rbp ; ret
0xffffff8000862f91 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000862f87 ; pop rbp ; ret
0xffffff80008631f1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008631e7 ; pop rbp ; ret
0xffffff8000863451 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000863447 ; pop rbp ; ret
0xffffff80008636b1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008636a7 ; pop rbp ; ret
0xffffff80008813c1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008813b7 ; pop rbp ; ret
0xffffff80008816e1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008816d7 ; pop rbp ; ret
0xffffff8000881af1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000881ae7 ; pop rbp ; ret
0xffffff8000882101 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008820f7 ; pop rbp ; ret
0xffffff8000882481 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000882477 ; pop rbp ; ret
0xffffff8000884781 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000884777 ; pop rbp ; ret
0xffffff8000884ec1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000884eb7 ; pop rbp ; ret
0xffffff80008857f1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008857e7 ; pop rbp ; ret
0xffffff8000886081 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000886077 ; pop rbp ; ret
0xffffff8000887ef1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000887ee7 ; pop rbp ; ret
0xffffff8000889d51 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000889d47 ; pop rbp ; ret
0xffffff800088a981 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800088a977 ; pop rbp ; ret
0xffffff800088cc01 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800088cbf7 ; pop rbp ; ret
0xffffff800088eed1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800088eec7 ; pop rbp ; ret
0xffffff8000890151 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000890147 ; pop rbp ; ret
0xffffff80008912b1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008912a7 ; pop rbp ; ret
0xffffff8000891971 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000891967 ; pop rbp ; ret
0xffffff8000892511 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000892507 ; pop rbp ; ret
0xffffff8000893101 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008930f7 ; pop rbp ; ret
0xffffff8000893f31 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000893f27 ; pop rbp ; ret
0xffffff80008951b1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008951a7 ; pop rbp ; ret
0xffffff80008967d1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008967c7 ; pop rbp ; ret
0xffffff80008990a1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff8000899097 ; pop rbp ; ret
0xffffff800089b0e1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800089b0d7 ; pop rbp ; ret
0xffffff800089b701 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800089b6f7 ; pop rbp ; ret
0xffffff800089ba31 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800089ba27 ; pop rbp ; ret
0xffffff800089bd61 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800089bd57 ; pop rbp ; ret
0xffffff800089d211 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800089d207 ; pop rbp ; ret
0xffffff80008a2aa1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008a2a97 ; pop rbp ; ret
0xffffff80008a5371 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008a5367 ; pop rbp ; ret
0xffffff80008a6301 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008a62f7 ; pop rbp ; ret
0xffffff80008a7201 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008a71f7 ; pop rbp ; ret
0xffffff80008a7c11 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008a7c07 ; pop rbp ; ret
0xffffff80008aaba1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008aab97 ; pop rbp ; ret
0xffffff80008ab1e1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008ab1d7 ; pop rbp ; ret
0xffffff80008ab541 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008ab537 ; pop rbp ; ret
0xffffff80008ae0e1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008ae0d7 ; pop rbp ; ret
0xffffff80008af3f1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008af3e7 ; pop rbp ; ret
0xffffff80008b3e41 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008b3e37 ; pop rbp ; ret
0xffffff80008b5181 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008b5177 ; pop rbp ; ret
0xffffff80008b5d71 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008b5d67 ; pop rbp ; ret
0xffffff80008b63c1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008b63b7 ; pop rbp ; ret
0xffffff80008c0b91 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008c0b87 ; pop rbp ; ret
0xffffff80008c2ae1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008c2ad7 ; pop rbp ; ret
0xffffff80008c3771 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008c3767 ; pop rbp ; ret
0xffffff80008c4241 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008c4237 ; pop rbp ; ret
0xffffff80008cc421 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008cc417 ; pop rbp ; ret
0xffffff80008ce221 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008ce217 ; pop rbp ; ret
0xffffff80008cebc1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008cebb7 ; pop rbp ; ret
0xffffff80008d07f1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d07e7 ; pop rbp ; ret
0xffffff80008d18b1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d18a7 ; pop rbp ; ret
0xffffff80008d4b51 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d4b47 ; pop rbp ; ret
0xffffff80008d5b51 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d5b47 ; pop rbp ; ret
0xffffff80008d6b41 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d6b37 ; pop rbp ; ret
0xffffff80008d74e1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d74d7 ; pop rbp ; ret
0xffffff80008d7751 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d7747 ; pop rbp ; ret
0xffffff80008d79c1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008d79b7 ; pop rbp ; ret
0xffffff80008e2651 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008e2647 ; pop rbp ; ret
0xffffff80008e55c1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008e55b7 ; pop rbp ; ret
0xffffff80008e6af1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008e6ae7 ; pop rbp ; ret
0xffffff80008e6db1 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008e6da7 ; pop rbp ; ret
0xffffff80008e7641 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008e7637 ; pop rbp ; ret
0xffffff800080fe61 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x17] ; pop rbp ; ret
0xffffff8000767b73 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rax - 0x18] ; ret 0xc2ae
0xffffff80007ac78a : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 4
0xffffff8000811bd1 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], 0x5d ; ret
0xffffff80008babb8 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xb8 ; ret 2
0xffffff80008aadf8 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xbb ; ret 2
0xffffff80008bf3b8 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xe9 ; ret
0xffffff800081b499 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xe9 ; ret 0
0xffffff80008b7119 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xeb ; ret
0xffffff80005284db : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rbp*8 - 9], cl ; ret
0xffffff8000278215 : adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80002611b9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff80003c8932 : adc byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff8000540213 : adc byte ptr [rax - 0x7d], cl ; ret 0x481c
0xffffff8000370569 : adc byte ptr [rax - 0x7d], cl ; ret 0x4840
0xffffff800028d0b9 : adc byte ptr [rax - 0x7d], cl ; ret 0x8340
0xffffff800025d96b : adc byte ptr [rax - 0x7d], cl ; ret 0xeb02
0xffffff80008b79a9 : adc byte ptr [rax - 0x7d], cl ; shl byte ptr [rax], 0x83 ; ret
0xffffff80002ee19d : adc byte ptr [rax - 0x7d], cl ; shl dword ptr [rax], 0x83 ; ret 0x75fe
0xffffff8000451657 : adc byte ptr [rax - 0x7f], cl ; ret
0xffffff800077c56a : adc byte ptr [rax - 0x7f], cl ; ret 0x2d4
0xffffff80003937d0 : adc byte ptr [rax - 0x7f], cl ; ret 0x3000
0xffffff80003c9059 : adc byte ptr [rax - 0x7f], cl ; ret 0xe00
0xffffff800040bc0f : adc byte ptr [rax - 0x7f], cl ; ret 0xf0
0xffffff800076f002 : adc byte ptr [rax - 0xb7e8e4], cl ; ret 0xdb84
0xffffff80008a6c0f : adc byte ptr [rax - 1], cl ; leave ; jne 0xffffff80008a6c07 ; pop rbp ; ret
0xffffff800046460d : adc byte ptr [rax - 1], cl ; ret
0xffffff8000298b84 : adc byte ptr [rax - 1], cl ; ret 0xc748
0xffffff8000772407 : adc byte ptr [rax - 1], cl ; ret 0xdb84
0xffffff800083530f : adc byte ptr [rax - 1], cl ; ret 0xf983
0xffffff8000569d5e : adc byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000269f3a : adc byte ptr [rax], 0x5d ; ret
0xffffff80002b730f : adc byte ptr [rax], 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008a23ee : adc byte ptr [rax], al ; adc eax, 0xe9000000 ; ret
0xffffff80003777e6 : adc byte ptr [rax], al ; add al, ch ; ret 0xf5c4
0xffffff800035d7ff : adc byte ptr [rax], al ; add bh, bh ; ret
0xffffff80003b6e13 : adc byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0xffffff8000399741 : adc byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3948
0xffffff8000473f59 : adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80002da453 : adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1b2
0xffffff80002da3b3 : adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff80003c4066 : adc byte ptr [rax], al ; add byte ptr [rax + 0x69], cl ; ret
0xffffff80008067de : adc byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80003093ea : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002e5d2a : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800032c2b7 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800033d021 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xf000
0xffffff80003c8cab : adc byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff8000462ad3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000516505 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007474d8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000571e51 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff800010e0d6
0xffffff8000862f28 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff800080f1a6
0xffffff80008d2536 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rax ; jmp 0xffffff80008d2590
0xffffff80006bbebe : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80007b8129
0xffffff8000359810 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800028721c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035c9d2 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004bc63b : adc byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; fisttp word ptr [rax + 9] ; ret
0xffffff80006077b6 : adc byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x177f
0xffffff800060664a : adc byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1f7f
0xffffff800053aa35 : adc byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x247f
0xffffff80004b62fa : adc byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xcf7c
0xffffff80004c05a2 : adc byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0xffffff80004c486e : adc byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff80003b7238 : adc byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd139
0xffffff80007b6ad5 : adc byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff800033f467 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x894c
0xffffff80005e904f : adc byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret
0xffffff80007c0b86 : adc byte ptr [rax], al ; add dh, dh ; ret
0xffffff80007a0dfe : adc byte ptr [rax], al ; add dh, dh ; rol dword ptr [rdx], 0xf ; ret 0x57eb
0xffffff80004bc535 : adc byte ptr [rax], al ; cmovae eax, edx ; pop rbp ; ret
0xffffff8000683d32 : adc byte ptr [rax], al ; je 0xffffff8000683d4d ; movzx eax, byte ptr [rax + 0x30] ; pop rbp ; ret
0xffffff80003a49ad : adc byte ptr [rax], al ; jne 0xffffff80003a49ad ; ret
0xffffff80004cb297 : adc byte ptr [rax], al ; jne 0xffffff80004cb2a4 ; xor eax, eax ; pop rbp ; ret
0xffffff80004bc530 : adc byte ptr [rax], al ; mov eax, 0x100000 ; cmovae eax, edx ; pop rbp ; ret
0xffffff8000291d60 : adc byte ptr [rax], al ; mov eax, 1 ; pop rbp ; ret
0xffffff8000831f00 : adc byte ptr [rax], al ; mov esi, 0x25d ; call 0xffffff800028e159
0xffffff8000291dfc : adc byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3869 : adc byte ptr [rax], al ; pop rbp ; ret
0xffffff80005f4dc3 : adc byte ptr [rax], al ; sbb byte ptr [rax], al ; pop rbp ; ret
0xffffff800056ca96 : adc byte ptr [rax], al ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff8000289060 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000287d47 : adc byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035c9d1 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000751d61 : adc byte ptr [rbp + 0x13], dh ; mov eax, 2 ; pop rbp ; ret
0xffffff800043953e : adc byte ptr [rbp + 0x31], al ; idiv byte ptr [rcx] ; ret
0xffffff8000516460 : adc byte ptr [rbp + 0xf], dh ; dec dword ptr [rdi + 8] ; je 0xffffff8000516473 ; pop rbp ; ret
0xffffff80007587c4 : adc byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80004cd159 : adc byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80007ceada : adc byte ptr [rbp + r8 + 0x5b], r14b ; pop r14 ; pop rbp ; ret
0xffffff80007ceadb : adc byte ptr [rbp + rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff800028f7f4 : adc byte ptr [rbp + rax - 0x48], dh ; add eax, 0x5d000000 ; ret
0xffffff800083b174 : adc byte ptr [rbp - 0x17], dh ; pop rbp ; ret
0xffffff800083b2e7 : adc byte ptr [rbp - 0x1a], dh ; pop rbp ; ret
0xffffff8000821d6a : adc byte ptr [rbp - 0x1d], dh ; pop rbp ; ret
0xffffff8000706ac1 : adc byte ptr [rbp - 0x22], dh ; pop rbp ; ret
0xffffff800055fe13 : adc byte ptr [rbp - 0x3d], bl ; lock add qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff800049e46c : adc byte ptr [rbp - 0x3d], bl ; nop ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff80002ceb42 : adc byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff80002ceb41 : adc byte ptr [rbp - 0x3d], r11b ; pop rbp ; ret
0xffffff80007e2638 : adc byte ptr [rbp - 0x73], al ; push qword ptr [rcx] ; rol byte ptr [rcx - 0xa], cl ; ret 0x7403
0xffffff8000511b87 : adc byte ptr [rbp - 0x75], cl ; xor byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3e], 0x5d ; ret
0xffffff8000483638 : adc byte ptr [rbp - 0x77], al ; ret
0xffffff800031134f : adc byte ptr [rbp - 0x77], cl ; je 0xffffff8000311380 ; sbb byte ptr [rsi - 9], ah ; ret
0xffffff80005cf557 : adc byte ptr [rbp - 0x77], cl ; ret 0x8948
0xffffff800060be67 : adc byte ptr [rbp - 0x77], cl ; ret 0xc889
0xffffff80003a8168 : adc byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80003a806c : adc byte ptr [rbp - 0x7b], al ; in al, 0xf ; xchg eax, esp ; ret 0xb60f
0xffffff800085bcd1 : adc byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000672039 : adc byte ptr [rbp - 0xc], dh ; pop rbp ; ret
0xffffff800080ddac : adc byte ptr [rbp - 0xf], dh ; movzx eax, ax ; pop rbp ; ret
0xffffff800080dd4c : adc byte ptr [rbp - 0xf], dh ; movzx eax, si ; pop rbp ; ret
0xffffff8000561de7 : adc byte ptr [rbx + 0x1890840], cl ; xor eax, eax ; pop rbp ; ret
0xffffff8000584f0e : adc byte ptr [rbx + 0x21168b02], cl ; ret 0xd0f7
0xffffff800088de74 : adc byte ptr [rbx + 0x2a], dh ; add al, ch ; ret
0xffffff8000612544 : adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rcx
0xffffff8000253364 : adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003ad981 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff80003aae3f : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800025036e : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000525e61 : adc byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff800070ec5a : adc byte ptr [rbx + 0x4ec81], cl ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff800089d7c1 : adc byte ptr [rbx + 0xf01687b], al ; xchg eax, esp ; ret 0xb60f
0xffffff800084c09e : adc byte ptr [rbx + rax + 0x70], cl ; or byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0xffffff80008a0c32 : adc byte ptr [rbx + rbp*2 - 0x7d], dh ; jmp qword ptr [rax]
0xffffff80004fd216 : adc byte ptr [rbx + rbx*8 - 0xb7c18c], al ; ret 0x3948
0xffffff8000525c25 : adc byte ptr [rbx + rbx*8 - 0xb7d78c], al ; ret 0x8348
0xffffff80004fd0e5 : adc byte ptr [rbx + rbx*8 - 0xb7e18c], al ; ret 0x3948
0xffffff80008eb51a : adc byte ptr [rbx + rcx*4 + 0x35], cl ; pop rsi ; ret 0x24
0xffffff8000870798 : adc byte ptr [rbx + rcx*4 + 0x43], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0xff41
0xffffff800048d416 : adc byte ptr [rbx + rcx*4 + 0x4b], al ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff8000260228 : adc byte ptr [rbx - 0x173eef20], al ; add al, 8 ; ret 0xb60f
0xffffff800081506e : adc byte ptr [rbx - 0x36cedfb0], cl ; call 0xffffff80008c12a8
0xffffff800087260c : adc byte ptr [rbx - 0x5a], ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000272fed : adc byte ptr [rbx - 0x6af0fb02], al ; ret 0xb60f
0xffffff8000284e20 : adc byte ptr [rbx - 0x6af0fb05], al ; ret 0xb60f
0xffffff800055060b : adc byte ptr [rbx - 0x76b3eb08], al ; ret
0xffffff80004aa0dc : adc byte ptr [rbx - 0x76b72bbb], cl ; ret
0xffffff8000745461 : adc byte ptr [rbx - 0x7bf00006], al ; ret
0xffffff80004c32a0 : adc byte ptr [rbx - 0x9b6b], cl ; dec dword ptr [rax + 1] ; ret 0x394c
0xffffff8000756db6 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; and eax, 0xc ; pop rbp ; ret
0xffffff80003a1730 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; je 0xffffff80003a173f ; pop rbp ; ret
0xffffff80002b7310 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800054c395 : adc byte ptr [rcx + 0x39], al ; ret 0x4a75
0xffffff800065f6b6 : adc byte ptr [rcx + 0x39], al ; ret 0x830f
0xffffff80004950cb : adc byte ptr [rcx + 0x39], cl ; ret 0xb75
0xffffff80006d1135 : adc byte ptr [rcx + 0x43891443], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff8000781796 : adc byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff8000603408 : adc byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff8000375204 : adc byte ptr [rcx + 0x63], cl ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0xffffff800058bbe5 : adc byte ptr [rcx + 0xf], al ; mov bh, 0x53 ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff80003b4482 : adc byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; fadd dword ptr [rcx] ; ret
0xffffff80008ecd30 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0xffffff8000499f6c : adc byte ptr [rcx + 1], cl ; ret 0x3944
0xffffff80006d0e6c : adc byte ptr [rcx + 9], al ; ret 0x8945
0xffffff8000290d4f : adc byte ptr [rcx + rcx*4 + 0x74], cl ; ret
0xffffff80005cb95d : adc byte ptr [rcx + rcx*4 - 0x40], al ; add qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff800060e5a8 : adc byte ptr [rcx + rcx*4 - 0xa], cl ; lea rdx, [rbp - 0x78] ; call rcx
0xffffff80003753ac : adc byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800060fc90 : adc byte ptr [rcx + rcx*4 - 2], cl ; mov rdx, r14 ; call rax
0xffffff800060ec21 : adc byte ptr [rcx + rcx*4 - 2], cl ; mov rdx, r14 ; call rcx
0xffffff8000764093 : adc byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e7
0xffffff800078cc63 : adc byte ptr [rcx + rdi - 0x3f], cl ; jl 0xffffff800078cc57 ; pop rbp ; ret
0xffffff800048d683 : adc byte ptr [rcx - 0x39], cl ; ret
0xffffff800079527a : adc byte ptr [rcx - 0x3fcee7a9], cl ; pop rbp ; ret
0xffffff8000881ea0 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 0x39], r9b ; ret 0x674
0xffffff80003150a3 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x77], r9b ; ret 0x294c
0xffffff8000b452c1 : adc byte ptr [rcx - 0x77], al ; ret
0xffffff80004a55a9 : adc byte ptr [rcx - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0xffffff8000880db2 : adc byte ptr [rcx - 0x77], cl ; pop rsi ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083030b : adc byte ptr [rcx - 0x7a0fce28], cl ; ret 0xf74
0xffffff800028738a : adc byte ptr [rcx - 0x7cb7abb5], cl ; ret
0xffffff80005f4356 : adc byte ptr [rcx - 0x7cb7fb8e], cl ; ret 0x4828
0xffffff80004aa602 : adc byte ptr [rcx - 0x7d], al ; ret
0xffffff800082a98d : adc byte ptr [rcx - 0x7d], cl ; ret 0x4510
0xffffff800082aa5d : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0xffffff80003b3c9e : adc byte ptr [rcx - 0x7f], al ; ret
0xffffff80003b3e9c : adc byte ptr [rcx - 0x7f], al ; ret 0x8000
0xffffff80008be511 : adc byte ptr [rcx - 0xa], al ; ret 0x7401
0xffffff8000420278 : adc byte ptr [rcx - 0xa], al ; ret 0x7501
0xffffff80005fb119 : adc byte ptr [rcx - 0xb76ff4], cl ; ret 0x728d
0xffffff8000b4567c : adc byte ptr [rcx], ah ; ret 0xd201
0xffffff80004e4faf : adc byte ptr [rcx], al ; add byte ptr [rax], al ; call 0xffffff800010e147
0xffffff800038df72 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000788e6f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80004a9968 : adc byte ptr [rcx], al ; je 0xffffff80004a9979 ; mov eax, dword ptr [rcx + rdx + 0x14] ; pop rbp ; ret
0xffffff800059c04c : adc byte ptr [rcx], al ; ret
0xffffff80005962c2 : adc byte ptr [rcx], al ; ret 0x4166
0xffffff8000584423 : adc byte ptr [rcx], al ; ret 0x8366
0xffffff80005adcac : adc byte ptr [rcx], al ; ret 0x8966
0xffffff800061adc1 : adc byte ptr [rcx], al ; ret 0xb70f
0xffffff80006c11bc : adc byte ptr [rcx], al ; ret 0xd129
0xffffff80005f4df3 : adc byte ptr [rcx], al ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff800049c285 : adc byte ptr [rcx], bh ; ret
0xffffff8000790382 : adc byte ptr [rcx], bh ; ret 0x4d0f
0xffffff80008a6579 : adc byte ptr [rcx], bh ; ret 0x975
0xffffff800058bbea : adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff80002ea04f : adc byte ptr [rcx], ch ; ret
0xffffff800062e9c4 : adc byte ptr [rcx], ch ; ret 0x2772
0xffffff80008aa826 : adc byte ptr [rcx], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80004c09f4 : adc byte ptr [rcx], cl ; ret
0xffffff8000288ea9 : adc byte ptr [rcx], cl ; ret 0x394c
0xffffff80007aa26c : adc byte ptr [rcx], cl ; ret 0x8941
0xffffff800084f18a : adc byte ptr [rcx], cl ; ret 0xc6f6
0xffffff800067ca92 : adc byte ptr [rcx], dh ; mul byte ptr [rsi - 9] ; ret 0xc00f
0xffffff800051eaf8 : adc byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff80003a84ae : adc byte ptr [rdi + 0xb], bh ; xor esi, esi ; pop rbp ; jmp rax
0xffffff800081a419 : adc byte ptr [rdi + rcx + 0x45], cl ; ret 0x8d48
0xffffff8000543995 : adc byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008c417e : adc byte ptr [rdi], ah ; add byte ptr [rax], ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005d1ef2 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff800073786a : adc byte ptr [rdi], cl ; mov bh, 0xc2 ; pop rbp ; ret
0xffffff800058467e : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000737656 : adc byte ptr [rdi], cl ; mov dh, 0xc2 ; pop rbp ; ret
0xffffff80008df2ae : adc byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80003b0c15 : adc byte ptr [rdi], cl ; test edi, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff80004f97dd : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000264168 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80004eb9ec : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xda08
0xffffff80006407fc : adc byte ptr [rdx + 0x4e], al ; add dh, dh ; ret 0x7406
0xffffff800063ed10 : adc byte ptr [rdx + 0x9d90], cl ; add dh, dh ; ret 0x7401
0xffffff800051eea3 : adc byte ptr [rdx + 3], bh ; call rax
0xffffff800072f14d : adc byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800061026d : adc byte ptr [rdx + rax*2 - 0x77], dh ; ret 0xe283
0xffffff8000567363 : adc byte ptr [rdx + rdx*8 - 0xb7de8c], al ; ret
0xffffff80004841da : adc byte ptr [rdx + rdx*8 - 0xb7e88c], al ; ret
0xffffff80004b1e5e : adc byte ptr [rdx - 0x6376b], cl ; jmp qword ptr [rax]
0xffffff80008a0b7b : adc byte ptr [rdx - 0x7d], dh ; jmp qword ptr [rax]
0xffffff8000341f06 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff800066b35e : adc byte ptr [rdx], al ; add byte ptr [rax], al ; call 0xffffff800028e157
0xffffff80006302af : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800083ca13 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a8853 : adc byte ptr [rdx], al ; jne 0xffffff80004a8860 ; xor eax, eax ; pop rbp ; ret
0xffffff8000b412ee : adc byte ptr [rdx], ch ; add byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0xffffff800089336a : adc byte ptr [rip + 0x5b000000], al ; pop r14 ; pop rbp ; ret
0xffffff80008d49ef : adc byte ptr [rip + 0x7894800], dl ; pop rbp ; ret
0xffffff8000659599 : adc byte ptr [rip - 0x173fcf00], dh ; std ; ret
0xffffff8000659598 : adc byte ptr [rip - 0x173fcf00], sil ; std ; ret
0xffffff8000664626 : adc byte ptr [rip - 0x3fcf0000], al ; call 0xffffff800028e1b9
0xffffff8000536561 : adc byte ptr [rip - 0x7ab80000], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a228b : adc byte ptr [rsi + 0x415b0098], 0x5e ; pop rbp ; ret
0xffffff80005cd8f5 : adc byte ptr [rsi + 0xf480098], 0x45 ; ret 0x81f6
0xffffff80008511af : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0xffffff80006119c2 : adc byte ptr [rsi - 0x39], ah ; ret 0
0xffffff800073a6ea : adc byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff8000701321 : adc byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff800028a594 : adc byte ptr [rsi - 0x3fceff68], 0x5d ; ret
0xffffff800068f596 : adc byte ptr [rsi - 0x75], ah ; push rbx ; or ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff8000631099 : adc byte ptr [rsi - 0x77], ah ; ret 0x8966
0xffffff8000500b91 : adc byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff80003798f8 : adc byte ptr [rsi], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff8000273e26 : adc byte ptr [rsi], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800067ad63 : adc byte ptr [rsi], al ; mov rdi, rcx ; pop rbp ; jmp r8
0xffffff80008d1374 : adc byte ptr [rsi], bh ; add al, ch ; ret
0xffffff8000345e0d : adc byte ptr ds:[rax + 0x39], cl ; ret 0xd74
0xffffff8000457669 : adc ch, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004fbb70 : adc ch, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002b1120 : adc ch, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80003a35af : adc ch, byte ptr [rcx - 0x3e] ; verw word ptr [rcx] ; ret
0xffffff8000b3c39c : adc ch, byte ptr [rcx] ; ret 0xe281
0xffffff8000441879 : adc ch, dh ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; pop rsp ; ret
0xffffff800026022b : adc cl, al ; call 0xffffff800fe80a3b
0xffffff80003d3d6e : adc cl, al ; out 3, eax ; or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff8000372888 : adc cl, al ; ret
0xffffff80005d1762 : adc cl, byte ptr [rax + 0x39] ; ret 0xe87c
0xffffff80002869f8 : adc cl, byte ptr [rax + 0x63] ; ret
0xffffff80003b1e10 : adc cl, byte ptr [rax + rcx*4] ; ret
0xffffff8000843542 : adc cl, byte ptr [rax - 0x278af5e4] ; pop rbx ; pop rbp ; ret
0xffffff8000254407 : adc cl, byte ptr [rax - 0x73] ; push rsp ; ret 0x4808
0xffffff80008808ad : adc cl, byte ptr [rax - 0x75] ; jnp 0xffffff800088090b ; mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff800037c05d : adc cl, byte ptr [rax - 0x77] ; ret
0xffffff8000277481 : adc cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000622d91 : adc cl, byte ptr [rax - 0x7f] ; ret
0xffffff80003b0d8a : adc cl, byte ptr [rax - 1] ; ret
0xffffff80008387fa : adc cl, byte ptr [rax - 1] ; ret 0x8141
0xffffff80005ebd1d : adc cl, byte ptr [rax - 1] ; ret 0x8148
0xffffff80005bf67d : adc cl, byte ptr [rax - 1] ; ret 0x8348
0xffffff80003461da : adc cl, byte ptr [rax - 1] ; ret 0x8949
0xffffff80005b0f4d : adc cl, byte ptr [rax - 1] ; ret 0xc984
0xffffff80003f57a5 : adc cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff8000898302 : adc cl, byte ptr [rbx + 0x19470715] ; add byte ptr [rcx], ah ; ret 0x8941
0xffffff8000423c13 : adc cl, byte ptr [rbx + 0x63693a05] ; add byte ptr [rcx], bh ; ret 0x4c0f
0xffffff800058cb11 : adc cl, byte ptr [rbx - 0x14373] ; call rbx
0xffffff800081ca2a : adc cl, byte ptr [rcx - 0x76b70001] ; ret
0xffffff800085065b : adc cl, byte ptr [rcx - 1] ; ret 0x3b4c
0xffffff800066cec4 : adc cl, byte ptr [rdi] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80004f9159 : adc cl, byte ptr [rdi] ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80008d2321 : adc cl, byte ptr [rdi] ; mov esi, 0x148010c ; ret
0xffffff800052ee44 : adc cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff800033fba9 : adc cl, ch ; ret
0xffffff800029a628 : adc cl, ch ; ret 0
0xffffff800048200f : adc cl, dh ; dec dword ptr [rax + 0x63] ; ret
0xffffff80002f784a : adc dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d059b : adc dh, bh ; ret 0
0xffffff8000455a11 : adc dh, byte ptr [rcx] ; div bh ; ret
0xffffff80005c32ad : adc dh, byte ptr [rcx] ; test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff80005ed746 : adc dh, byte ptr [rcx] ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r14 ; call rax
0xffffff800065924a : adc dh, byte ptr [rip - 0x173fcf00] ; push rdx ; ret
0xffffff800045377c : adc dh, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000658800 : adc dh, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xa6 ; pop rcx ; ret
0xffffff800029b42b : adc dh, dh ; ret
0xffffff80002c55b7 : adc dh, dh ; ret 0x4820
0xffffff80004caaa1 : adc dh, dh ; ret 0x4901
0xffffff80002bd257 : adc dh, dh ; ret 0x4cc0
0xffffff80003999d7 : adc dh, dh ; ret 0x7401
0xffffff80007cff3d : adc dh, dh ; ret 0x7440
0xffffff80002bad9b : adc dh, dh ; ret 0x7501
0xffffff800032762c : adc dh, dh ; ret 0xf01
0xffffff8000272859 : adc dh, dh ; ret 0xf04
0xffffff80003d8c53 : adc dh, dh ; ret 0xf10
0xffffff800037458b : adc dh, dl ; shl dword ptr [rdx - 0x36], 0xc1 ; ret
0xffffff80003b1e30 : adc dl, byte ptr [rax + rcx*4] ; ret
0xffffff8000804c13 : adc dword ptr [r15], ecx ; mov dh, 0x51 ; adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff80005a5245 : adc dword ptr [r8], r8d ; add bh, bh ; ret
0xffffff80005e4d67 : adc dword ptr [r9], r8d ; pop rbp ; ret
0xffffff80003c1f35 : adc dword ptr [rax + 0x29], ecx ; ret
0xffffff80002b2611 : adc dword ptr [rax + 0x4c000001], -0x77 ; imul eax ; ret 0xdfd
0xffffff800062f0ab : adc dword ptr [rax + 0x4f], ebx ; add byte ptr [rax - 0x77], cl ; ret 0x29e8
0xffffff800037c5ef : adc dword ptr [rax + 0x63], ecx ; ret
0xffffff800054a812 : adc dword ptr [rax + 0x63], ecx ; ret 0x8d48
0xffffff800050cdad : adc dword ptr [rax + 1], ecx ; ret 0x834a
0xffffff800066ce16 : adc dword ptr [rax + rax], esi ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800081cdad : adc dword ptr [rax - 0x75], ecx ; jge 0xffffff800081cd6a ; mov rsi, rax ; call rcx
0xffffff8000845557 : adc dword ptr [rax - 0x75], ecx ; jge 0xffffff8000845534 ; mov rsi, rax ; call rcx
0xffffff8000845595 : adc dword ptr [rax - 0x75], ecx ; jge 0xffffff8000845572 ; mov rsi, rax ; call rcx
0xffffff800084233d : adc dword ptr [rax - 0x75], ecx ; jnp 0xffffff800084239a ; mov rsi, rax ; call rcx
0xffffff8000328520 : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x7d], cl ; ret 0x48e0
0xffffff800079a334 : adc dword ptr [rax - 0x77], ecx ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80005341ba : adc dword ptr [rax - 0x77], ecx ; ret
0xffffff800057984c : adc dword ptr [rax - 0x77], ecx ; ret 0xc749
0xffffff80006de553 : adc dword ptr [rax - 0x7af00001], eax ; ret
0xffffff8000281298 : adc dword ptr [rax - 0x7d], ecx ; ret
0xffffff80005d066f : adc dword ptr [rax - 1], ecx ; ret
0xffffff80003c9d19 : adc dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff8000528cce : adc dword ptr [rax - 1], ecx ; ret 0xd189
0xffffff80005d066e : adc dword ptr [rax - 1], r9d ; ret
0xffffff80005a5246 : adc dword ptr [rax], eax ; add bh, bh ; ret
0xffffff80005e7da3 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006f2d6b : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80006cef20 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xffffff80006ceed5
0xffffff80006de492 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xffffff80006de460
0xffffff800035a0ce : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; push rdx ; cmp dh, dh ; ret 0xf02
0xffffff80003129b5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0xffffff800061c1b0 : adc dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8389
0xffffff8000289f56 : adc dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800027fd25 : adc dword ptr [rax], eax ; cmp eax, 1 ; jbe 0xffffff800027fd36 ; pop rbp ; ret
0xffffff80002806f4 : adc dword ptr [rax], eax ; jmp 0xffffff8000280723
0xffffff80002796bf : adc dword ptr [rax], eax ; mov eax, 1 ; pop rbp ; ret
0xffffff80008e1f39 : adc dword ptr [rax], eax ; mov esi, 0x148d ; call 0xffffff800028e159
0xffffff80008deb96 : adc dword ptr [rax], eax ; mov rdi, r13 ; call r15
0xffffff8000802b69 : adc dword ptr [rax], eax ; movzx ebx, byte ptr [rax + rcx] ; jmp 0xffffff8000802b7d
0xffffff8000289e7e : adc dword ptr [rax], eax ; pop rbp ; ret
0xffffff80006b1467 : adc dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002db4ac : adc dword ptr [rax], ebx ; sub rax, qword ptr [rcx + rdx + 0x20] ; pop rbp ; ret
0xffffff8000252ae8 : adc dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007aab23 : adc dword ptr [rax], ecx ; mov qword ptr [rcx + rdx], rdi ; pop rbp ; ret
0xffffff8000377085 : adc dword ptr [rax], ecx ; pop rbp ; ret
0xffffff80004a8852 : adc dword ptr [rax], edx ; add dh, byte ptr [rbp + 2] ; xor eax, eax ; pop rbp ; ret
0xffffff80002996ec : adc dword ptr [rax], edx ; lock and dword ptr [rax], 0xffffffdf ; xor eax, eax ; pop rbp ; ret
0xffffff80004a6913 : adc dword ptr [rax], edx ; pop rbp ; ret
0xffffff80002db4b1 : adc dword ptr [rax], esp ; pop rbp ; ret
0xffffff80004a8851 : adc dword ptr [rax], r10d ; add dh, byte ptr [rbp + 2] ; xor eax, eax ; pop rbp ; ret
0xffffff80004a6912 : adc dword ptr [rax], r10d ; pop rbp ; ret
0xffffff80002db4ab : adc dword ptr [rax], r11d ; sub rax, qword ptr [rcx + rdx + 0x20] ; pop rbp ; ret
0xffffff80002db4b0 : adc dword ptr [rax], r12d ; pop rbp ; ret
0xffffff8000377084 : adc dword ptr [rax], r9d ; pop rbp ; ret
0xffffff80008c45eb : adc dword ptr [rbp + rdi*8 + 0x5dc031ff], esp ; ret
0xffffff80004f3cec : adc dword ptr [rbp - 0x1f], esi ; pop rbp ; ret
0xffffff80003606ee : adc dword ptr [rbp], -0x77 ; ret
0xffffff8000550668 : adc dword ptr [rbp], ebx ; pop rbp ; ret
0xffffff80002b9a82 : adc dword ptr [rbp], esp ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000831eea : adc dword ptr [rbx + 0x30], 0x415b2000 ; pop rsi ; pop rbp ; ret
0xffffff8000709765 : adc dword ptr [rbx + rbx*8 - 0xb7c78c], eax ; ret 0x8148
0xffffff80007097f9 : adc dword ptr [rbx + rbx*8 - 0xb7d48c], eax ; ret 0x8148
0xffffff8000832479 : adc dword ptr [rbx + rbx*8 - 0xb7d68c], eax ; ret 0xff48
0xffffff80007a18a2 : adc dword ptr [rbx + rcx*4 + 0x24], ecx ; ret 0x854d
0xffffff80007ddba2 : adc dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret 0x854d
0xffffff800074260b : adc dword ptr [rbx - 0x47], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000293443 : adc dword ptr [rbx - 0x6af0fb01], eax ; ret
0xffffff800066b494 : adc dword ptr [rbx - 0x6bf0d106], eax ; ret 0xb60f
0xffffff80007818ab : adc dword ptr [rbx], eax ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076cf83 : adc dword ptr [rbx], esp ; cmp al, 0 ; call 0xffffff8000392a47
0xffffff8000394eab : adc dword ptr [rcx + 0xdff4807], ecx ; sti ; ret
0xffffff80007eaf6e : adc dword ptr [rcx + rcx*4 - 1], ecx ; mov rsi, r14 ; call rbx
0xffffff800083b85e : adc dword ptr [rcx + rcx*8 - 0xb7ba8c], eax ; ret
0xffffff800064189b : adc dword ptr [rcx + rcx*8], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004af633 : adc dword ptr [rcx - 0x75], eax ; adc al, 0x89 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0xffffff800056e5f3 : adc dword ptr [rcx - 0x76b7ffaa], esp ; ret 0xe1e8
0xffffff80003876d2 : adc dword ptr [rcx - 0x7b], ecx ; sal dword ptr [rax + rcx - 1], cl ; ret
0xffffff8000284b9d : adc dword ptr [rcx - 0x7d], eax ; inc dword ptr [rdi + rcx] ; xchg eax, ebp ; ret 0xb60f
0xffffff800042181c : adc dword ptr [rcx - 0x7d], ecx ; jg 0xffffff8000421879 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x844
0xffffff8000728445 : adc dword ptr [rcx - 1], eax ; ret
0xffffff80008ebe1e : adc dword ptr [rcx - 1], ecx ; ret
0xffffff80003f23ab : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0xffffff80005e4d68 : adc dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80005014e9 : adc dword ptr [rcx], eax ; ret 0xe0c1
0xffffff800066910c : adc dword ptr [rcx], edi ; ret 0x1375
0xffffff80007555ed : adc dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x189
0xffffff800073db6a : adc dword ptr [rcx], esi ; ret
0xffffff80006bc557 : adc dword ptr [rcx], esi ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x322a
0xffffff80005c2adc : adc dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff800063c13e : adc dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r13 ; call rax
0xffffff800058e8db : adc dword ptr [rcx], esp ; ret 0xd0f7
0xffffff8000b3b5eb : adc dword ptr [rdi - 0x76b70033], ecx ; ret
0xffffff800048b653 : adc dword ptr [rdi - 0x76b7ff98], ebx ; ret
0xffffff80008a291f : adc dword ptr [rdi], 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80005d1f1a : adc dword ptr [rdi], eax ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000719a6a : adc dword ptr [rdi], ecx ; mov dh, 0x13 ; inc rdx ; jmp 0xffffff8000719a89
0xffffff8000804c14 : adc dword ptr [rdi], ecx ; mov dh, 0x51 ; adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff8000566645 : adc dword ptr [rdi], ecx ; mov dh, 0x83 ; ret
0xffffff80005baa8e : adc dword ptr [rdi], ecx ; ret
0xffffff8000467ccd : adc dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; fdivr st(7) ; ret
0xffffff8000543945 : adc dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004a6452 : adc dword ptr [rdx + rax], ecx ; jne 0xffffff80004a6461 ; xor eax, eax ; pop rbp ; ret
0xffffff80004a6451 : adc dword ptr [rdx + rax], r9d ; jne 0xffffff80004a6462 ; xor eax, eax ; pop rbp ; ret
0xffffff80005dd29b : adc dword ptr [rdx - 0x31], ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076062b : adc dword ptr [rdx], ebp ; ret
0xffffff8000742a57 : adc dword ptr [rdx], edi ; add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff800078327b : adc dword ptr [rip + 0x3948fffd], eax ; ret
0xffffff80008d49cf : adc dword ptr [rip + 0x7894800], edx ; pop rbp ; ret
0xffffff8000851151 : adc dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0xffffff8000851137 : adc dword ptr [rsi + 0xf], esp ; out dx, eax ; ret 0xf66
0xffffff800079aa2d : adc dword ptr [rsi + 3], edi ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff800073a743 : adc dword ptr [rsi - 0x3f], esp ; ret 0x6608
0xffffff80004a391b : adc dword ptr [rsi - 0x76b7ffd3], edx ; ret
0xffffff80007b3950 : adc dword ptr [rsi - 0x7b], esp ; ror byte ptr [rax - 0x77], cl ; ret 0xf48
0xffffff8000658951 : adc dword ptr [rsi], esi ; add byte ptr [rcx], dh ; shr al, 0x55 ; pop rax ; ret
0xffffff80008a291e : adc dword ptr cs:[rdi], 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80006d648e : adc eax, 0 ; pop rbp ; ret
0xffffff8000699e8a : adc eax, 0x119fb0e8 ; add byte ptr [rax - 0x77], cl ; ret 0x8d4c
0xffffff80008c1ec8 : adc eax, 0x136570 ; call 0xffffff800028e157
0xffffff800089a462 : adc eax, 0x153d8d48 ; ret
0xffffff800025e1e7 : adc eax, 0x1b800 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008e21d2 : adc eax, 0x202001 ; mov rdi, rbx ; call rax
0xffffff80007c1f10 : adc eax, 0x21c361 ; call 0xffffff800028e1b7
0xffffff80007c1ee5 : adc eax, 0x21c38c ; call 0xffffff800028e1b7
0xffffff80007c1ebe : adc eax, 0x21c3b3 ; call 0xffffff800028e1b7
0xffffff800087e85e : adc eax, 0x265975 ; mov esi, r13d ; call rax
0xffffff800087e541 : adc eax, 0x265c92 ; mov esi, r13d ; call rax
0xffffff8000705ddd : adc eax, 0x2846b70f ; pop rbp ; ret
0xffffff80003c1c9f : adc eax, 0x29007433 ; ret 0xaf0f
0xffffff80007fce61 : adc eax, 0x2da2c2 ; lea rsi, [rbp - 0x30] ; call rax
0xffffff800066241a : adc eax, 0x2dae7b ; call 0xffffff800028e158
0xffffff8000657a91 : adc eax, 0x31003523 ; shr al, 0x14 ; ret
0xffffff80006a1ecd : adc eax, 0x3137d3 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800070715a : adc eax, 0x3cffc9 ; lea rsi, [rbp - 0x30] ; call rax
0xffffff800061d6c4 : adc eax, 0x3d8b4800 ; ret
0xffffff80006dba1e : adc eax, 0x3fb705 ; call rax
0xffffff80008c9a56 : adc eax, 0x415c415b ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80005c9a17 : adc eax, 0x433d8d48 ; ret
0xffffff800068d16a : adc eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f0a67 : adc eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000303a37 : adc eax, 0x48fff9ae ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000498370 : adc eax, 0x49b237 ; jmp 0xffffff80004983b0
0xffffff80003707c8 : adc eax, 0x4f3d8d48 ; ret 0x5e
0xffffff800038c536 : adc eax, 0x558b0056 ; ror byte ptr [rdi], 0xb6 ; ret 0x589
0xffffff800083847c : adc eax, 0x5590ffff ; mov rbp, rsp ; pop rbp ; ret
0xffffff80005e4f05 : adc eax, 0x583d8d48 ; ret 0x3c
0xffffff800025dc20 : adc eax, 0x58b6600 ; ret
0xffffff8000454d07 : adc eax, 0x5b0002da ; pop r14 ; pop rbp ; ret
0xffffff80008661b7 : adc eax, 0x5d0027f4 ; ret
0xffffff80007b3da7 : adc eax, 0x5d0032fe ; ret
0xffffff80005590c7 : adc eax, 0x5d0050fb ; jmp rax
0xffffff80002a0417 : adc eax, 0x5d0084c0 ; ret
0xffffff800025d9a1 : adc eax, 0x5dc03100 ; ret
0xffffff80004eb920 : adc eax, 0x5eb803 ; mov rdi, r13 ; call rax
0xffffff80004e4df3 : adc eax, 0x5f2330 ; mov rdi, r14 ; call rax
0xffffff8000351e7b : adc eax, 0x6071ee ; call 0xffffff800028e157
0xffffff80004cc1c2 : adc eax, 0x60af61 ; call rax
0xffffff80004cc09e : adc eax, 0x60b085 ; call rax
0xffffff80004cc04d : adc eax, 0x60b0d6 ; call rcx
0xffffff800050fbf1 : adc eax, 0x611682 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000448a86 : adc eax, 0x61bc35 ; or eax, dword ptr [rdx + rcx*4] ; pop rbp ; ret
0xffffff80002cefa5 : adc eax, 0x6748c5 ; call 0xffffff800028e159
0xffffff8000423a92 : adc eax, 0x6f0489 ; mov rdx, qword ptr [rdx + r8*8] ; jmp 0xffffff8000423ab2
0xffffff8000251ecb : adc eax, 0x6f6835 ; call 0xffffff800028e157
0xffffff8000251eaa : adc eax, 0x6f6841 ; call 0xffffff800028e157
0xffffff8000251f0d : adc eax, 0x6f6845 ; call 0xffffff800028e157
0xffffff8000251eec : adc eax, 0x6f6856 ; call 0xffffff800028e157
0xffffff8000251f2e : adc eax, 0x6f6e0a ; call 0xffffff800028e157
0xffffff80004196f8 : adc eax, 0x6fa76b ; mov rsi, qword ptr [rdx + rax*8] ; jmp 0xffffff800041971c
0xffffff80003a853c : adc eax, 0x72948f ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff80004a1a9a : adc eax, 0x74f68440 ; and byte ptr [rax - 1], cl ; ret
0xffffff80004950c6 : adc eax, 0x75c33949 ; adc byte ptr [rcx + 0x39], cl ; ret 0xb75
0xffffff80004f28d6 : adc eax, 0x75f73900 ; or cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff80004f27e7 : adc eax, 0x75fb3900 ; or cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff800056ee89 : adc eax, 0x75fe3990 ; or ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff800056edad : adc eax, 0x75fe39a0 ; or ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff8000613a58 : adc eax, 0x75fe39a8 ; adc cl, byte ptr [rax - 1] ; ret 0x8348
0xffffff8000613c38 : adc eax, 0x75fe39c0 ; adc cl, byte ptr [rax - 1] ; ret 0x8348
0xffffff80003950be : adc eax, 0x769e69 ; pop rbp ; ret
0xffffff8000393172 : adc eax, 0x782339 ; leave ; ret
0xffffff8000393138 : adc eax, 0x782373 ; leave ; ret
0xffffff8000392b4d : adc eax, 0x78295e ; leave ; ret
0xffffff8000392b13 : adc eax, 0x782998 ; leave ; ret
0xffffff800039299d : adc eax, 0x782b0e ; leave ; ret
0xffffff8000392658 : adc eax, 0x782e53 ; leave ; ret
0xffffff8000392524 : adc eax, 0x782f87 ; leave ; ret
0xffffff80008cc2a0 : adc eax, 0x7894800 ; pop rbp ; ret
0xffffff80005e3699 : adc eax, 0x7964158b ; add byte ptr [rax + 1], cl ; ret 0x3948
0xffffff800050eff7 : adc eax, 0x7d00580a ; xor cl, byte ptr [rax + 0x6b] ; ret
0xffffff80002fb5bb : adc eax, 0x7f8480 ; pop rbp ; ret
0xffffff80003b3954 : adc eax, 0x80046349 ; add rax, r8 ; jmp rax
0xffffff80007c3951 : adc eax, 0x81048b00 ; pop rbp ; ret
0xffffff800057cba0 : adc eax, 0x8148ffb9 ; ret
0xffffff800026262a : adc eax, 0x8348c7ff ; ret 0x3920
0xffffff800064ee37 : adc eax, 0x83ffabf2 ; ret
0xffffff80008b9a97 : adc eax, 0x850004d5 ; ror byte ptr [rdi], 0x84 ; ret 0
0xffffff8000300287 : adc eax, 0x8900038c ; ret
0xffffff80003ddb87 : adc eax, 0x890006b9 ; ret
0xffffff800029c0c7 : adc eax, 0x89000733 ; ret
0xffffff800030f6c0 : adc eax, 0x89480000 ; ret
0xffffff80003820d2 : adc eax, 0x89480000 ; ret 0x6348
0xffffff800074064b : adc eax, 0x89480001 ; ret
0xffffff8000653eee : adc eax, 0x8948004e ; fisttp word ptr [rcx + rcx*4 - 2] ; call qword ptr [rax]
0xffffff80005ed535 : adc eax, 0x8948f631 ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff8000559b2b : adc eax, 0x8948f631 ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0xffffff800062910c : adc eax, 0x8948ffd7 ; ret
0xffffff8000726f16 : adc eax, 0x8948ffd9 ; ret
0xffffff80008dfe73 : adc eax, 0x8948fff3 ; ret 0x42c7
0xffffff80008b53ef : adc eax, 0x8948fff6 ; ret
0xffffff80008a2f37 : adc eax, 0x8948fff7 ; ret
0xffffff800086a3e8 : adc eax, 0x8948fffc ; ret
0xffffff800080ab4a : adc eax, 0x894c0000 ; ret
0xffffff80007c57da : adc eax, 0x894cf631 ; out 0x48, eax ; mov edx, ebx ; call rax
0xffffff80007dd4f2 : adc eax, 0x894cf631 ; out 0x4c, eax ; mov edx, esi ; call rax
0xffffff8000859287 : adc eax, 0x89ffa41f ; ret
0xffffff80008f1967 : adc eax, 0x89ffaa52 ; ret
0xffffff80007a2047 : adc eax, 0x89ffaf80 ; ret
0xffffff800070ca17 : adc eax, 0x89fffbd2 ; ret
0xffffff800062c077 : adc eax, 0x89fffc1b ; ret
0xffffff8000546da2 : adc eax, 0x96e80059 ; ret 0xffe4
0xffffff8000722fb2 : adc eax, 0x9e058b48 ; ret 0x40
0xffffff800032ff99 : adc eax, 0x9fffffb9 ; jmp qword ptr [rbx]
0xffffff80008d01ba : adc eax, 0xa53fe800 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cfd24 : adc eax, 0xa9d5e800 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret 0x8041
0xffffff8000591f3d : adc eax, 0xc0310000 ; call 0xffffff800028e1b7
0xffffff800054fc38 : adc eax, 0xc0310028 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e43b6 : adc eax, 0xc031fffa ; pop rbp ; ret
0xffffff80004db013 : adc eax, 0xd03d8d48 ; ret
0xffffff800051b110 : adc eax, 0xd33d8d48 ; ret 0x4b
0xffffff800084e687 : adc eax, 0xe283c289 ; add esi, edi ; ret 0xffff
0xffffff800084e6df : adc eax, 0xe283c289 ; or bh, dh ; ret 0xffff
0xffffff80008a0ee5 : adc eax, 0xe8c03100 ; ret 0x9ed2
0xffffff80008a23f0 : adc eax, 0xe9000000 ; ret
0xffffff80003c9ae5 : adc eax, 0xeb005a05 ; or al, 0xff ; ret 0x5589
0xffffff800025d966 : adc eax, 0xebc2ff48 ; adc byte ptr [rax - 0x7d], cl ; ret 0xeb02
0xffffff80008db661 : adc eax, 0xf098e800 ; stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3d367 : adc eax, 0xf781f731 ; ret
0xffffff800031643a : adc eax, 0xfd28566 ; xchg eax, ebp ; ret 0xfeb
0xffffff80008f63a3 : adc eax, 0xff480024 ; ret
0xffffff8000781838 : adc eax, 0xffb6f2e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004654e3 : adc eax, 0xffffffb8 ; dec dword ptr [rax + 0x21] ; ret 0x148
0xffffff8000498d06 : adc eax, dword ptr [rax] ; add bh, bh ; ret
0xffffff800029d46f : adc eax, dword ptr [rax] ; add byte ptr [rax + 0xe], bh ; pop rbp ; ret
0xffffff8000359f40 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x4a], al ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0xffffff800067ad99 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004a5f08 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovb eax, ecx ; pop rbp ; ret
0xffffff800079dcb5 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003355cf : adc eax, dword ptr [rax] ; add byte ptr [rbp + 0x31], al ; push rdi ; ret 0xfff7
0xffffff80008c1ecb : adc eax, dword ptr [rax] ; call 0xffffff800028e154
0xffffff80007f8927 : adc eax, dword ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80008b9621 : adc eax, dword ptr [rax] ; test cl, cl ; cmovne rax, rdx ; jmp 0xffffff80008b9694
0xffffff800025d6c4 : adc eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007972e4 : adc eax, dword ptr [rbx + 0x3e891fe7] ; xor eax, eax ; pop rbp ; ret
0xffffff80008ecab4 : adc eax, dword ptr [rbx - 0x76b2a007] ; ret
0xffffff800087e52b : adc eax, dword ptr [rcx + rcx*4 - 0x12] ; mov rdx, r15 ; call rax
0xffffff8000b3e497 : adc eax, dword ptr [rcx - 0x7f] ; ret
0xffffff80004f2b54 : adc eax, dword ptr [rcx - 1] ; ret 0x3945
0xffffff800086ed5f : adc eax, dword ptr [rcx] ; add byte ptr [rax - 1], cl ; ret
0xffffff800054f3e6 : adc eax, dword ptr [rdx] ; jne 0xffffff800054f3fc ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008c1eca : adc eax, dword ptr gs:[rax] ; call 0xffffff800028e155
0xffffff80003a08a5 : adc eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a08a4 : adc eax, r15d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008a414f : adc ebp, dword ptr [rcx] ; add byte ptr [rbp - 0x75], cl ; insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff800081bdb9 : adc ebp, dword ptr [rdi + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000511f09 : adc ebp, dword ptr [rdx - 0x24] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000893e6e : adc ebp, dword ptr [rdx] ; add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff80003b0fa7 : adc ebp, dword ptr [rdx] ; pop rbp ; ret
0xffffff8000893e6d : adc ebp, dword ptr cs:[rdx] ; add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff8000457600 : adc ebp, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007636c9 : adc ebp, ebp ; ret 0x41ff
0xffffff800069c7e2 : adc ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80005496e6 : adc ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008179d9 : adc ebx, dword ptr [rdx - 0x76b70001] ; ret
0xffffff8000764a79 : adc ebx, ebp ; ret 0x44ff
0xffffff800065169b : adc ebx, ecx ; ret
0xffffff80002e9d0e : adc ecx, dword ptr [rax + 0x21] ; ret
0xffffff8000579242 : adc ecx, dword ptr [rax + 0x21] ; ret 0x894c
0xffffff8000579234 : adc ecx, dword ptr [rax + 0x21] ; ret 0x8b48
0xffffff800057924c : adc ecx, dword ptr [rax + 0x21] ; ret 0x8d48
0xffffff8000719359 : adc ecx, dword ptr [rax + 0x29] ; ret 0xe7c
0xffffff80006035ec : adc ecx, dword ptr [rax + 0x63] ; ret 0x4166
0xffffff800039eee3 : adc ecx, dword ptr [rax + 0x69] ; ret 0xca00
0xffffff8000567361 : adc ecx, dword ptr [rax + 0x74d28410] ; and dword ptr [rax - 1], ecx ; ret
0xffffff80002a5e19 : adc ecx, dword ptr [rax - 0x77] ; or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008650b5 : adc ecx, dword ptr [rax - 0x77] ; ret
0xffffff800036c32b : adc ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000719a7e : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4802
0xffffff800076b726 : adc ecx, dword ptr [rax - 0x7f] ; ret
0xffffff80008791f1 : adc ecx, dword ptr [rax - 0x7f] ; ret 0x238
0xffffff80007717d2 : adc ecx, dword ptr [rax - 0xb7e9f4] ; ret 0xc984
0xffffff80004a0f4b : adc ecx, dword ptr [rax - 1] ; ret
0xffffff8000719a6d : adc ecx, dword ptr [rax - 1] ; ret 0x10eb
0xffffff80004baa4c : adc ecx, dword ptr [rax - 1] ; ret 0x3949
0xffffff80005ebdec : adc ecx, dword ptr [rax - 1] ; ret 0x8148
0xffffff80003c8dc2 : adc ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff80005b23dc : adc ecx, dword ptr [rax - 1] ; ret 0xc984
0xffffff80005487dc : adc ecx, dword ptr [rax - 1] ; ret 0xff48
0xffffff800034cdb0 : adc ecx, dword ptr [rax] ; ret 0x840f
0xffffff8000525b39 : adc ecx, dword ptr [rbp - 0x3fce0029] ; pop rbp ; ret
0xffffff800082dc2c : adc ecx, dword ptr [rbp - 0x77] ; iretd ; call rax
0xffffff80003b2234 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff80008f240c : adc ecx, dword ptr [rcx - 1] ; ret
0xffffff80006c3705 : adc ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b4076d : adc ecx, dword ptr [rsi] ; ret 0x441d
0xffffff8000781872 : adc ecx, eax ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff8000437860 : adc edi, dword ptr [rax + 2] ; pop rbp ; ret
0xffffff800043786c : adc edi, dword ptr [rax + 4] ; pop rbp ; ret
0xffffff8000804c18 : adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff80004af5e5 : adc edi, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff80004936d6 : adc edi, edi ; inc dword ptr [rax + rax*8 - 0xb7f18c] ; ret
0xffffff8000451718 : adc edi, edi ; push rsi ; xor byte ptr [rax - 0x77], cl ; ret
0xffffff800034900e : adc edi, edi ; ret
0xffffff80004a160e : adc edi, edi ; ret 0xf2eb
0xffffff80006295c1 : adc edi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000602d90 : adc edi, esi ; ret
0xffffff80006ac632 : adc edi, esp ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80006e8ba9 : adc edx, dword ptr [rax - 0x76b7fffa] ; ret
0xffffff80006e84a9 : adc edx, dword ptr [rdi - 0x76b7fffa] ; ret
0xffffff80005d8361 : adc edx, dword ptr [rsi] ; push rax ; add byte ptr [rax - 0x77], cl ; ret 0x73e8
0xffffff8000670c43 : adc edx, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800075482b : adc edx, esp ; ret
0xffffff8000669a49 : adc esi, dword ptr [rax - 0x76b7ffec] ; ret
0xffffff800068d7d0 : adc esi, dword ptr [rcx] ; imul al ; cwde ; ret
0xffffff8000310599 : adc esi, dword ptr [rdi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000453705 : adc esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002c6893 : adc esi, esi ; ret
0xffffff80005f2017 : adc esi, esi ; ret 0x7420
0xffffff80008e45f2 : adc esp, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0xb948
0xffffff80008ed6b5 : adc esp, dword ptr [rcx + 0x24] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800072d0ef : adc esp, dword ptr [rcx] ; ret 0xf641
0xffffff8000770329 : adc esp, dword ptr [rdi] ; ret 0x48ff
0xffffff8000701270 : adc esp, dword ptr [rsi - 0x3f] ; ret 0x6608
0xffffff80006fed2d : adc esp, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065fe99 : adc esp, ebx ; ret 0x49ff
0xffffff800058fc45 : adc r11b, bpl ; push rdx ; mov dl, r8b ; jmp 0xffffff800058fc61
0xffffff80003464a9 : adc r11b, bpl ; ret
0xffffff80003355ce : adc r8, qword ptr [rax] ; add byte ptr [rbp + 0x31], al ; push rdi ; ret 0xfff7
0xffffff8000498e60 : adc r8b, byte ptr [rax] ; add bh, bh ; ret
0xffffff800070399f : adc r8b, r13b ; or cl, byte ptr [rbx - 0x25] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000371632 : adc r8b, r14b ; loope 0xffffff800037160e ; ret
0xffffff800054f3e5 : adc r8d, dword ptr [r10] ; jne 0xffffff800054f3fd ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000359f3f : adc r8d, dword ptr [rax] ; add byte ptr [rax - 0x4a], al ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0xffffff80008d066f : adc rax, 0x7894800 ; pop rbp ; ret
0xffffff80004caaa0 : adc sil, r14b ; ret 0x4901
0xffffff8000716f8f : add ah, al ; add eax, edi ; pop rbp ; ret
0xffffff80008232ec : add ah, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008230fc : add ah, bl ; jmp 0xffffff80008230c6
0xffffff8000828b0d : add ah, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000886cd0 : add ah, bl ; setne al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c615a : add ah, byte ptr [rbp*8 + 0x58948ff] ; ret
0xffffff8000b49896 : add ah, byte ptr [rcx] ; ret 0xd201
0xffffff80003ec93a : add ah, byte ptr [rdi - 6] ; push rsi ; ret
0xffffff800062f94d : add ah, byte ptr [rsi - 0x3f] ; ret
0xffffff800060646c : add ah, byte ptr [rsi - 0x3f] ; ret 0x4408
0xffffff800058a7de : add ah, byte ptr [rsi - 0x3f] ; ret 0x6608
0xffffff80005aa1e9 : add ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff8000601d04 : add ah, byte ptr [rsi - 0x77] ; or cl, byte ptr [rax - 0x7d] ; ret 0xff04
0xffffff8000558177 : add ah, byte ptr [rsi - 0x77] ; ret 0x408b
0xffffff800062d652 : add ah, byte ptr [rsi - 0x77] ; ret 0x8b41
0xffffff80008d545a : add ah, byte ptr [rsi] ; add dword ptr [rax], eax ; jmp 0xffffff80008d54d7
0xffffff80003b6177 : add ah, dh ; pop rbp ; ret
0xffffff8000321eaf : add al, 0 ; add al, ch ; cdq ; ret 0xfff6
0xffffff800029c049 : add al, 0 ; add al, ch ; jmp qword ptr [rax]
0xffffff8000281ee2 : add al, 0 ; add al, ch ; ret 0
0xffffff8000280d86 : add al, 0 ; add al, ch ; ret 0xd3
0xffffff80005b6251 : add al, 0 ; add bh, bh ; ret
0xffffff8000895302 : add al, 0 ; add bh, dh ; ret
0xffffff800084d9a7 : add al, 0 ; add bh, dh ; ret 0xffff
0xffffff8000497d30 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80003a1e50 : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800072e597 : add al, 0 ; add byte ptr [rax + 0x5d01344f], al ; ret
0xffffff800072e5a8 : add al, 0 ; add byte ptr [rax + 0x5d02344f], al ; ret
0xffffff800072e5d4 : add al, 0 ; add byte ptr [rax + 0x5d08314f], al ; ret
0xffffff800072e547 : add al, 0 ; add byte ptr [rax + 0x5d08344f], al ; ret
0xffffff800072eb07 : add al, 0 ; add byte ptr [rax + 0x5d10354f], al ; ret
0xffffff800072eb17 : add al, 0 ; add byte ptr [rax + 0x5d20354f], al ; ret
0xffffff800072e557 : add al, 0 ; add byte ptr [rax + 0x5d40334f], al ; ret
0xffffff80006cefca : add al, 0 ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0xffffff80006fbf28 : add al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0x8b66
0xffffff80004b300f : add al, 0 ; add byte ptr [rax + 1], cl ; ret 0x348
0xffffff800043a2bc : add al, 0 ; add byte ptr [rax + 1], cl ; ret 0x8b41
0xffffff80002b1215 : add al, 0 ; add byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff80002bce8a : add al, 0 ; add byte ptr [rax + 9], cl ; ret
0xffffff80002b8e1c : add al, 0 ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff8000464f0a : add al, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0xffffff80005a655f : add al, 0 ; add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff80006c775b : add al, 0 ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80005aa0fb : add al, 0 ; add byte ptr [rax - 0x77], cl ; and r9b, bpl ; ret 4
0xffffff80004ea6e6 : add al, 0 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff80003074fa : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000383f12 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff8000808a3f : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff80005364f0 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027b5bf : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000345bca : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800046a132 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x4e3
0xffffff8000497d39 : add al, 0 ; add byte ptr [rax - 1], cl ; ret
0xffffff80004d210a : add al, 0 ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80006a196b : add al, 0 ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80003f1e1d : add al, 0 ; add byte ptr [rax - 9], cl ; ret 0
0xffffff80003b6721 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004a2212 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004a2378 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006b48ee : add al, 0 ; add byte ptr [rax], al ; call 0xffffff8000370bc6
0xffffff8000742590 : add al, 0 ; add byte ptr [rax], al ; call 0xffffff8000370bc7
0xffffff80003cca16 : add al, 0 ; add byte ptr [rax], al ; call 0xffffff8000448c56
0xffffff80003cd1e6 : add al, 0 ; add byte ptr [rax], al ; call 0xffffff80004494a6
0xffffff80002afe23 : add al, 0 ; add byte ptr [rax], al ; call 0xffffff80008ec096
0xffffff8000622d9e : add al, 0 ; add byte ptr [rax], al ; jmp 0xffffff8000622dbc
0xffffff80002b5de3 : add al, 0 ; add byte ptr [rax], al ; jmp rax
0xffffff8000286d7b : add al, 0 ; add byte ptr [rax], al ; jmp rcx
0xffffff800030216e : add al, 0 ; add byte ptr [rax], al ; jmp rdx
0xffffff8000601ef9 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff800010e149
0xffffff8000601eb4 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff800010e149
0xffffff800078f4b9 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0xffffff800078f3a0 : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff80003cd238 : add al, 0 ; add byte ptr [rax], al ; mov rdx, r14 ; call 0xffffff80004494a9
0xffffff8000285bab : add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002b58bb : add al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a0b33 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800049d3ab : add al, 0 ; add byte ptr [rax], dl ; je 0xffffff800049d3bc ; xor eax, eax ; pop rbp ; ret
0xffffff8000389dd7 : add al, 0 ; add byte ptr [rbp + 5], dh ; mov dword ptr [rax + 0x48], esi ; pop rbp ; ret
0xffffff8000389d67 : add al, 0 ; add byte ptr [rbp + 5], dh ; mov dword ptr [rax + 0x54], esi ; pop rbp ; ret
0xffffff800039cd81 : add al, 0 ; add byte ptr [rbp + 5], dh ; mov eax, dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff8000550949 : add al, 0 ; add byte ptr [rbp + rcx*4 - 0x4c], cl ; ret
0xffffff800039667d : add al, 0 ; add byte ptr [rbp - 0x32], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000607e74 : add al, 0 ; add byte ptr [rbp - 0x7b], al ; in al, 0xf ; xchg eax, ebp ; ret 0x8548
0xffffff800027c599 : add al, 0 ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 2
0xffffff8000509ed8 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80004b3026 : add al, 0 ; add byte ptr [rbx - 0x6af00007], al ; ret 0xf981
0xffffff8000391546 : add al, 0 ; add byte ptr [rbx - 0x6bf0f0c8], al ; ret
0xffffff80003cb1f0 : add al, 0 ; add byte ptr [rcx + 0x1d0f7f8], cl ; ret 0x8b41
0xffffff80002eb36b : add al, 0 ; add byte ptr [rcx + 0x29], al ; fmul qword ptr [rax + 0x63] ; ret
0xffffff8000756fe7 : add al, 0 ; add byte ptr [rcx + 0x5dc03107], cl ; ret
0xffffff80007aafed : add al, 0 ; add byte ptr [rcx + rcx*4 - 0x19], al ; call rcx
0xffffff800051b980 : add al, 0 ; add byte ptr [rcx - 0x3a], al ; add al, 0x24 ; add al, ch ; ret
0xffffff80003b7dbc : add al, 0 ; add byte ptr [rcx - 0x3fce8bb9], cl ; pop rbp ; ret
0xffffff80003e2a3e : add al, 0 ; add byte ptr [rcx - 0x50], al ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff8000844d71 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff8000464f97 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x8b49
0xffffff800070ec5e : add al, 0 ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff8000426321 : add al, 0 ; add byte ptr [rcx], ch ; ret
0xffffff80003fb897 : add al, 0 ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff8000426328 : add al, 0 ; add byte ptr [rcx], ch ; ret 0xe283
0xffffff8000389fb3 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003ba504 : add al, 0 ; add byte ptr [rdi], cl ; xor dh, bh ; ret 0
0xffffff80003ba51e : add al, 0 ; add byte ptr [rdi], cl ; xor dh, dh ; ret 0x7402
0xffffff80004c4b5d : add al, 0 ; add byte ptr [rsi - 0x77], ah ; ret 0x4104
0xffffff80005bae92 : add al, 0 ; add dh, dh ; ret 0xf01
0xffffff80003495aa : add al, 0 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002501e2 : add al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800079db67 : add al, 0 ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff8000345509 : add al, 0 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000765064 : add al, 0 ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff80007fefce : add al, 0 ; pop rbp ; jmp rax
0xffffff80004b36d9 : add al, 0 ; pop rbp ; ret
0xffffff800069e3f1 : add al, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f9155 : add al, 0 ; shr eax, 0x12 ; movzx eax, al ; pop rbp ; ret
0xffffff800025dee3 : add al, 0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000258bef : add al, 0 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004873f2 : add al, 0x12 ; add byte ptr [rax - 1], cl ; ret 0xc9ff
0xffffff800065d098 : add al, 0x14 ; ret
0xffffff80006645b5 : add al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800082aa9c : add al, 0x16 ; and dword ptr [rcx - 0x7d], eax ; ret
0xffffff8000870958 : add al, 0x16 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000761a38 : add al, 0x16 ; ret
0xffffff80004402e5 : add al, 0x18 ; shl byte ptr [rax], cl ; ret 0x8545
0xffffff800058e8ef : add al, 0x21 ; ret 0xd0f7
0xffffff800072d756 : add al, 0x21 ; ret 0xd109
0xffffff8000770e38 : add al, 0x22 ; ret 0x65ff
0xffffff80007dbc68 : add al, 0x23 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800051b985 : add al, 0x24 ; add al, ch ; ret
0xffffff80008d43f1 : add al, 0x24 ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff80008bc050 : add al, 0x24 ; call r10
0xffffff80002cf321 : add al, 0x24 ; jmp 0xffffff80002cef22
0xffffff80008bbee1 : add al, 0x24 ; lea rsi, [rbp - 0x70] ; call r10
0xffffff80008f5e21 : add al, 0x24 ; mov rsi, r15 ; mov r9, r13 ; call rbx
0xffffff800082d742 : add al, 0x24 ; test rax, rax ; je 0xffffff800082d757 ; call rax
0xffffff80003a269c : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000367577 : add al, 0x25 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000366e16 : add al, 0x25 ; sbb al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000366e76 : add al, 0x25 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003933e2 : add al, 0x25 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff80007aaba4 : add al, 0x26 ; add byte ptr [rax - 0x77], cl ; adc al, 8 ; pop rbp ; ret
0xffffff800066733d : add al, 0x27 ; add byte ptr [rax], al ; call 0xffffff800028e1b7
0xffffff8000b4a399 : add al, 0x29 ; ret 0xe281
0xffffff800028e136 : add al, 0x2b ; add al, 0x5d ; ret
0xffffff8000b481ff : add al, 0x2b ; ret 0x4974
0xffffff80007cb8a3 : add al, 0x2c ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4689
0xffffff800080eab9 : add al, 0x2f ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80004aa837 : add al, 0x30 ; ret 0x4074
0xffffff80004aa7c7 : add al, 0x30 ; ret 0x4374
0xffffff80005c0ba9 : add al, 0x31 ; fadd dword ptr [rcx] ; shr dword ptr [rcx], 1 ; ret 0xc389
0xffffff80005ef0dc : add al, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800073db75 : add al, 0x31 ; ret
0xffffff80005f81fc : add al, 0x31 ; ret 0xca31
0xffffff8000399208 : add al, 0x31 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff800028a559 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800028a5c3 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002765e7 : add al, 0x31 ; shr bl, cl ; jae 0xffffff800027657c ; ret 0xeac1
0xffffff8000814d3e : add al, 0x32 ; add byte ptr [rax], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000484a66 : add al, 0x33 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005cb4a7 : add al, 0x37 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0xffffff80007b4176 : add al, 0x38 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003a8d8f : add al, 0x38 ; pop rbp ; ret
0xffffff800036a2b9 : add al, 0x39 ; ret
0xffffff80006d8893 : add al, 0x39 ; ret 0x3373
0xffffff8000436859 : add al, 0x39 ; ret 0x4c7e
0xffffff800038b791 : add al, 0x39 ; ret 0x840f
0xffffff80004d26a7 : add al, 0x3e ; or rax, rdx ; pop rbp ; ret
0xffffff80007b04ba : add al, 0x40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800036841e : add al, 0x40 ; mov dword ptr [rcx + rax*4 + 4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800036848e : add al, 0x40 ; mov dword ptr [rcx + rax*4 + 8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003683b8 : add al, 0x40 ; mov dword ptr [rcx + rax*4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000757afa : add al, 0x40 ; mov rsi, rbx ; call r15
0xffffff800050fcf4 : add al, 0x40 ; or dh, cl ; mov dl, sil ; movzx eax, dl ; pop rbp ; ret
0xffffff80008cb13b : add al, 0x40 ; pop rbp ; ret
0xffffff80007f3e83 : add al, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006f0371 : add al, 0x40 ; xor ecx, ecx ; mov r8, r13 ; call 0xffffff80004fc589
0xffffff80006d8032 : add al, 0x41 ; inc edx ; jmp 0xffffff80006d8047
0xffffff80003ae43b : add al, 0x41 ; mov cr4, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e1a25 : add al, 0x41 ; mov dword ptr [rax], eax ; pop rbp ; ret
0xffffff800039ef05 : add al, 0x41 ; mov dword ptr [rsi], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000737772 : add al, 0x41 ; movzx esi, word ptr [rax] ; movzx eax, si ; pop rbp ; ret
0xffffff80006265bf : add al, 0x41 ; or byte ptr [rsi], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007820e0 : add al, 0x41 ; or byte ptr [rsi], 2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000738198 : add al, 0x41 ; pop rbp ; ret
0xffffff800061a8f1 : add al, 0x44 ; mov dword ptr [rsi + 0x14], eax ; pop rbp ; ret
0xffffff800087c4d4 : add al, 0x44 ; mov ecx, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff8000879ed6 : add al, 0x44 ; mov ecx, dword ptr [rsi + 0x60] ; mov rsi, r14 ; call rax
0xffffff8000879a0c : add al, 0x44 ; mov ecx, dword ptr [rsi + 0x60] ; mov rsi, rbx ; call rax
0xffffff80002bf629 : add al, 0x45 ; mov dword ptr [rax], ecx ; mov dword ptr [r8 + 4], ecx ; pop rbp ; ret
0xffffff800084e654 : add al, 0x48 ; add eax, 0x10 ; pop rbp ; ret
0xffffff80002cb0b5 : add al, 0x48 ; add eax, dword ptr [rip + 0x7616ab] ; pop rbp ; ret
0xffffff80002cb08b : add al, 0x48 ; add eax, dword ptr [rip + 0x7616d5] ; pop rbp ; ret
0xffffff800066db37 : add al, 0x48 ; add eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035d9f9 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002d2d21 : add al, 0x48 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800078c9c8 : add al, 0x48 ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff800078c958 : add al, 0x48 ; mov dword ptr [rdi + 0x20], esi ; pop rbp ; ret
0xffffff80002fb5b8 : add al, 0x48 ; mov dword ptr [rip + 0x7f8480], edx ; pop rbp ; ret
0xffffff800039076e : add al, 0x48 ; mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff80007af880 : add al, 0x48 ; mov eax, dword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80005c132f : add al, 0x48 ; mov eax, dword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007b11e0 : add al, 0x48 ; mov eax, dword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff8000756bb6 : add al, 0x48 ; mov eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80002cd19e : add al, 0x48 ; mov eax, dword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80005630da : add al, 0x48 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005630fa : add al, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800078c5aa : add al, 0x48 ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff800056584a : add al, 0x48 ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80005659fa : add al, 0x48 ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff800027fc6d : add al, 0x48 ; mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b3cae : add al, 0x48 ; mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80008850ba : add al, 0x48 ; mov eax, dword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff80002f7ce0 : add al, 0x48 ; mov ecx, dword ptr [rdx + 0x50] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800074672a : add al, 0x48 ; movsxd rax, dword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff80008172e5 : add al, 0x49 ; mov eax, dword ptr [rax + rax + 8] ; pop rbp ; ret
0xffffff8000822910 : add al, 0x49 ; mov edi, dword ptr [rsi + 0x48] ; xor esi, esi ; call r15
0xffffff80008985af : add al, 0x49 ; mov esi, dword ptr [rdi + 0x48] ; mov rdx, r15 ; call rax
0xffffff8000765d9d : add al, 0x4c ; mov edi, ebp ; call 0xffffff80003923e7
0xffffff8000771555 : add al, 0x4c ; mov edi, ebp ; call 0xffffff8000393047
0xffffff800076680b : add al, 0x4c ; mov edi, edi ; call 0xffffff80003923e7
0xffffff8000389468 : add al, 0x50 ; add byte ptr [rax], al ; add bl, cl ; call rdi
0xffffff80007656f8 : add al, 0x50 ; ret
0xffffff8000652f18 : add al, 0x5a ; enter 0x48ff, -0x77 ; ret
0xffffff8000842766 : add al, 0x5b ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005f083a : add al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80007b4090 : add al, 0x5b ; pop rbp ; jmp rax
0xffffff8000271e15 : add al, 0x5d ; ret
0xffffff80007ff13c : add al, 0x5f ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800041ea68 : add al, 0x63 ; imul eax, dword ptr [rax], 0x5d ; ret
0xffffff8000725ecf : add al, 0x66 ; mov eax, 0x5d980005 ; ret
0xffffff8000289225 : add al, 0x69 ; ret 0x3e8
0xffffff8000b494e2 : add al, 0x6b ; ret 0x291e
0xffffff8000b4542b : add al, 0x6b ; ret 0x4118
0xffffff8000b4b837 : add al, 0x6b ; ret 0x8d17
0xffffff8000423a94 : add al, 0x6f ; add byte ptr [rdx - 0x75], cl ; adc al, 0xc2 ; jmp 0xffffff8000423ab0
0xffffff80003c9d17 : add al, 0x72 ; adc dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff8000657298 : add al, 0x72 ; ret
0xffffff80003d3d28 : add al, 0x73 ; add al, 0x89 ; clc ; pop rbp ; ret
0xffffff8000437845 : add al, 0x73 ; and byte ptr [rax + 3], bh ; pop rbp ; ret
0xffffff8000439796 : add al, 0x73 ; push 0x3b9 ; add cl, ch ; ret 5
0xffffff800084e6dd : add al, 0x74 ; adc eax, 0xe283c289 ; or bh, dh ; ret 0xffff
0xffffff80003881b9 : add al, 0x74 ; add al, 0xcd ; lcall [rbp - 0x3d] ; pop rbp ; ret
0xffffff800038871d : add al, 0x74 ; add cl, ch ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800040fc17 : add al, 0x74 ; add eax, 0x5d5e415b ; ret
0xffffff8000660c8d : add al, 0x74 ; or dword ptr [rbx - 0x7af0d605], eax ; ret 0
0xffffff8000660f2f : add al, 0x74 ; or dword ptr [rbx - 0x7af0d608], eax ; ret
0xffffff80002bad99 : add al, 0x75 ; adc dh, dh ; ret 0x7501
0xffffff80003b12ec : add al, 0x75 ; add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x7504
0xffffff80006c5be9 : add al, 0x75 ; add dh, byte ptr [rcx] ; div bh ; ret 0x8000
0xffffff800034dee8 : add al, 0x75 ; add eax, 0x5d5e415b ; ret
0xffffff8000340956 : add al, 0x75 ; cmp edi, edi ; ret 0xb70f
0xffffff80007ae216 : add al, 0x75 ; mov bh, 0x5b ; pop rbp ; ret
0xffffff8000275c17 : add al, 0x75 ; or esi, esi ; ret 0x7401
0xffffff800041b42a : add al, 0x75 ; ret
0xffffff8000455a4c : add al, 0x7c ; jge 0xffffff8000455a4b ; ret
0xffffff800055fdcd : add al, 0x7c ; loopne 0xffffff800055fe33 ; pop r14 ; pop rbp ; ret
0xffffff800058e600 : add al, 0x7f ; fucomip st(3) ; or dword ptr [rax - 0x7d], ecx ; ret
0xffffff80003d5f5c : add al, 0x80 ; add qword ptr [rax + 0x5d], r8 ; ret
0xffffff80003b3957 : add al, 0x80 ; add rax, r8 ; jmp rax
0xffffff800073c40f : add al, 0x80 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003b8ea1 : add al, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029d243 : add al, 0x80 ; jmp 0xffffff800029d25e
0xffffff80003c60b9 : add al, 0x80 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80004d01f6 : add al, 0x80 ; movsxd rcx, dword ptr [rax] ; jg 0xffffff80004d0260 ; pop r14 ; pop rbp ; ret
0xffffff8000824839 : add al, 0x80 ; movsxd rsi, dword ptr [rax - 3] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000338166 : add al, 0x80 ; pop rbp ; ret
0xffffff80002f6d8f : add al, 0x80 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b41c75 : add al, 0x80 ; ret 0x440e
0xffffff80008cb203 : add al, 0x81 ; add rax, r9 ; jmp rax
0xffffff80006ff903 : add al, 0x81 ; add rax, rcx ; jmp rax
0xffffff80005d19a4 : add al, 0x81 ; add rax, rcx ; mov rcx, qword ptr [rbp - 0x38] ; jmp rax
0xffffff80004578e4 : add al, 0x81 ; add rax, rcx ; mov rcx, r14 ; jmp rax
0xffffff800027266d : add al, 0x81 ; add rax, rcx ; mov rsi, qword ptr [rbp - 0x38] ; jmp rax
0xffffff80003b642b : add al, 0x81 ; add rax, rcx ; xor esi, esi ; jmp rax
0xffffff8000545f06 : add al, 0x81 ; add rax, rcx ; xor r13d, r13d ; jmp rax
0xffffff800067ec35 : add al, 0x81 ; add rax, rcx ; xor r15d, r15d ; jmp rax
0xffffff80002fc1e8 : add al, 0x81 ; jrcxz 0xffffff80002fc1f3 ; inc dword ptr [rdi] ; add byte ptr [rcx], cl ; ret
0xffffff80002eabcc : add al, 0x81 ; mov dword ptr [rip + 0x80645c], eax ; pop rbp ; ret
0xffffff800028a5ff : add al, 0x81 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000274597 : add al, 0x81 ; pop rbp ; ret
0xffffff80004bb534 : add al, 0x81 ; ret
0xffffff8000506b76 : add al, 0x81 ; ret 0xffff
0xffffff8000270150 : add al, 0x82 ; add rax, rdx ; jmp rax
0xffffff80002ff9f0 : add al, 0x82 ; inc dword ptr [rip + 0x7f8120] ; pop rbp ; ret
0xffffff8000281f2c : add al, 0x83 ; add rax, rbx ; jmp rax
0xffffff800059ec6d : add al, 0x83 ; call qword ptr [rax]
0xffffff80002b768c : add al, 0x83 ; loopne 0xffffff80002b7696 ; pop rbp ; ret
0xffffff80002cb148 : add al, 0x83 ; loopne 0xffffff80002cb152 ; pop rbp ; ret
0xffffff80003426c1 : add al, 0x83 ; loopne 0xffffff80003426cb ; pop rbp ; ret
0xffffff8000388838 : add al, 0x83 ; loopne 0xffffff8000388845 ; or eax, ecx ; pop rbp ; ret
0xffffff80004b3a78 : add al, 0x83 ; loopne 0xffffff80004b3a82 ; pop rbp ; ret
0xffffff80004fa159 : add al, 0x83 ; loopne 0xffffff80004fa163 ; pop rbp ; ret
0xffffff80004fa860 : add al, 0x83 ; loopne 0xffffff80004fa86a ; pop rbp ; ret
0xffffff8000797245 : add al, 0x83 ; loopne 0xffffff800079724f ; pop rbp ; ret
0xffffff8000655f31 : add al, 0x83 ; or al, 1 ; ret
0xffffff800027f120 : add al, 0x83 ; ret
0xffffff8000849935 : add al, 0x83 ; ret 0x4148
0xffffff800042086e : add al, 0x83 ; ret 0x75fc
0xffffff80002715ee : add al, 0x84 ; add rax, r12 ; jmp rax
0xffffff800076a638 : add al, 0x84 ; ret 0x49ff
0xffffff8000656a7d : add al, 0x85 ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000652355 : add al, 0x85 ; or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000325f12 : add al, 0x85 ; test byte ptr [rdi], 0x44 ; ret 0xd285
0xffffff80005f6df6 : add al, 0x86 ; add rax, r14 ; jmp rax
0xffffff80003b38cd : add al, 0x86 ; add rax, rsi ; jmp rax
0xffffff8000309624 : add al, 0x87 ; add rax, r15 ; jmp rax
0xffffff800027f670 : add al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003b1df1 : add al, 0x88 ; ret
0xffffff800074500d : add al, 0x89 ; add eax, 0x398424 ; pop rbp ; ret
0xffffff80004a8049 : add al, 0x89 ; add eax, 0x6353e8 ; pop rbp ; ret
0xffffff80003d3d2a : add al, 0x89 ; clc ; pop rbp ; ret
0xffffff800089bdf9 : add al, 0x89 ; cmp al, 2 ; mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff80003b2724 : add al, 0x89 ; fisub dword ptr [rcx] ; ret 0xd0f7
0xffffff800061c689 : add al, 0x89 ; fisubr dword ptr [rcx] ; ret 0xd285
0xffffff80002bd236 : add al, 0x89 ; ret
0xffffff80003b269b : add al, 0x89 ; ret 0x29eb
0xffffff8000539463 : add al, 0x89 ; ret 0x894c
0xffffff80007c704d : add al, 0x89 ; ret 0xb8
0xffffff80002bb88c : add al, 0x89 ; ret 0xe2c1
0xffffff8000627a4f : add al, 0x89 ; shr dword ptr [rcx], cl ; ret
0xffffff80004d0fb8 : add al, 0x89 ; sub al, 0x8b ; sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff80003a8dad : add al, 0x89 ; xor al, 0x38 ; pop rbp ; ret
0xffffff80003820da : add al, 0x8a ; add rax, rdx ; jmp rax
0xffffff8000448a8c : add al, 0x8a ; pop rbp ; ret
0xffffff80004a6910 : add al, 0x8b ; adc dword ptr [rax], r10d ; pop rbp ; ret
0xffffff800072d0ed : add al, 0x8b ; adc esp, dword ptr [rcx] ; ret 0xf641
0xffffff80003a8d8d : add al, 0x8b ; add al, 0x38 ; pop rbp ; ret
0xffffff80006e1769 : add al, 0x8b ; add cl, byte ptr [rcx + 0x5dc03106] ; ret
0xffffff8000284e36 : add al, 0x8b ; push rsp ; xor dword ptr [rcx + rax], eax ; ret 0x894c
0xffffff80004b05ac : add al, 0x8b ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8518
0xffffff8000855146 : add al, 0x8c ; add rax, r12 ; jmp rax
0xffffff80004be37c : add al, 0x8e ; add rax, rsi ; jmp rax
0xffffff8000395233 : add al, 0x8e ; pop rbp ; ret
0xffffff800055656c : add al, 0x91 ; add rax, rcx ; jmp rax
0xffffff800078c49f : add al, 0x96 ; add rax, rsi ; jmp rax
0xffffff8000395276 : add al, 0x96 ; pop rbp ; ret
0xffffff800048657b : add al, 0x99 ; add rax, rcx ; jmp rax
0xffffff8000491ec1 : add al, 0x9c ; add rax, r12 ; jmp rax
0xffffff80003be309 : add al, 0x9d ; sub al, 2 ; add byte ptr [rax], al ; jmp rdx
0xffffff80003a09f8 : add al, 0x9e ; add rax, rsi ; jmp rax
0xffffff800072bb02 : add al, 0xa1 ; add rax, rcx ; jmp rax
0xffffff8000653da8 : add al, 0xa4 ; ret
0xffffff800089e949 : add al, 0xa6 ; add rax, r14 ; jmp rax
0xffffff80006ecd94 : add al, 0xa9 ; add rax, rcx ; jmp rax
0xffffff800082a550 : add al, 0xae ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff800065d6a8 : add al, 0xb ; ret
0xffffff80005ff105 : add al, 0xb0 ; add rax, r8 ; jmp rax
0xffffff80007ea669 : add al, 0xb1 ; add rax, rcx ; jmp rax
0xffffff80003c1c50 : add al, 0xb2 ; add rax, rdx ; jmp rax
0xffffff80004f9f82 : add al, 0xb8 ; pop rbp ; ret
0xffffff800085cc7a : add al, 0xba ; pop rbp ; ret
0xffffff80007779a3 : add al, 0xbc ; add rax, r12 ; jmp rax
0xffffff800085cc77 : add al, 0xbe ; sub eax, dword ptr [rdx + rdi*4] ; pop rbp ; ret
0xffffff800073c48d : add al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800057002d : add al, 0xc0 ; call 0xffffff803159eb3f
0xffffff800049fc19 : add al, 0xc0 ; mov qword ptr [rdx + rax*8], rdi ; xor eax, eax ; pop rbp ; ret
0xffffff80003910a0 : add al, 0xc1 ; add rax, 0x68 ; pop rbp ; ret
0xffffff800038c0e0 : add al, 0xc1 ; mov eax, dword ptr [rax + 0xa838] ; pop rbp ; ret
0xffffff800038c100 : add al, 0xc1 ; mov eax, dword ptr [rax + 0xa83c] ; pop rbp ; ret
0xffffff800038c120 : add al, 0xc1 ; mov eax, dword ptr [rax + 0xa840] ; pop rbp ; ret
0xffffff80003a31a0 : add al, 0xc1 ; mov eax, dword ptr [rax + 0xa84c] ; pop rbp ; ret
0xffffff800049e180 : add al, 0xc1 ; pop rbp ; ret
0xffffff80008adba6 : add al, 0xc1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003728af : add al, 0xc1 ; ret 0x11e
0xffffff800080d2be : add al, 0xc1 ; xor eax, eax ; pop rbp ; ret
0xffffff80008cb038 : add al, 0xc3 ; add cl, al ; loopne 0xffffff80008cb04c ; pop rbp ; ret
0xffffff8000342758 : add al, 0xc7 ; pop rbp ; ret
0xffffff8000812815 : add al, 0xc8 ; pop rbp ; ret
0xffffff80003881bb : add al, 0xcd ; lcall [rbp - 0x3d] ; pop rbp ; ret
0xffffff80005d37c6 : add al, 0xd0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066b6d6 : add al, 0xd1 ; pop rbp ; ret
0xffffff800065eab0 : add al, 0xd3 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80005784fc : add al, 0xd6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800071ead8 : add al, 0xe ; pop rbp ; ret
0xffffff8000310ba8 : add al, 0xe7 ; jp 0xffffff8000310bb1 ; pop rbp ; ret
0xffffff8000507778 : add al, 0xe8 ; ret 0xd903
0xffffff8000284e34 : add al, 0xeb ; add al, 0x8b ; push rsp ; xor dword ptr [rcx + rax], eax ; ret 0x894c
0xffffff800049d37a : add al, 0xf ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800035d6b7 : add al, 0xf ; mov dh, 0xc1 ; lea eax, [rax + rax*4 + 2] ; pop rbp ; ret
0xffffff80003d73a5 : add al, 0xf ; ret
0xffffff80006c6788 : add al, 0xf ; ret 0x508d
0xffffff800064a00e : add al, 0xf ; ret 0x8941
0xffffff80006c6715 : add al, 0xf ; ret 0x8b41
0xffffff80008dad92 : add al, 0xf ; test al, ah ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0xffffff8000441d4c : add al, 0xf ; test dword ptr [rdi - 0x7d000000], ebx ; ret
0xffffff800027282b : add al, 0xf ; xchg eax, ebp ; ret
0xffffff8000272ff0 : add al, 0xf ; xchg eax, ebp ; ret 0xb60f
0xffffff80004127a5 : add al, 0xf ; xchg eax, ebp ; ret 0xca20
0xffffff800057240a : add al, 0xf ; xchg eax, edi ; ret
0xffffff800044135d : add al, 0xf ; xchg eax, edx ; ret
0xffffff8000415826 : add al, 0xf ; xchg eax, edx ; ret 0xbe41
0xffffff80003d33e6 : add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff80002d8a86 : add al, 0xf ; xchg eax, esp ; ret
0xffffff80006ebb42 : add al, 0xf ; xchg eax, esp ; ret 0xb70f
0xffffff800057097f : add al, 0xf ; xchg eax, esp ; shr bl, 2 ; xor eax, eax ; pop rbp ; ret
0xffffff800039261f : add al, 0xf0 ; cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392666 ; ret
0xffffff8000257e21 : add al, 0xf1 ; pop rbp ; ret
0xffffff8000421249 : add al, 0xf6 ; ret
0xffffff80006c636c : add al, 0xf6 ; ret 0x7402
0xffffff80006c5e5c : add al, 0xf6 ; ret 0x7404
0xffffff80006c5ea3 : add al, 0xf6 ; ret 0x7410
0xffffff80006c5eb4 : add al, 0xf6 ; ret 0x7420
0xffffff80004c8d4d : add al, 0xf6 ; ret 0x7540
0xffffff80007cffe0 : add al, 0xf6 ; ret 0x7580
0xffffff80006c6761 : add al, 0xf6 ; ror dword ptr [rax], 0xf ; ret 0x508d
0xffffff80006c6773 : add al, 0xf6 ; shl dword ptr [rax], 0xf ; ret 0x508d
0xffffff80006c60ef : add al, 0xf7 ; ret 0
0xffffff80004125d5 : add al, 0xf8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008dc63a : add al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000252d1c : add al, 0xff ; ret
0xffffff8000287d01 : add al, 0xff ; ret 0x6666
0xffffff8000506eb3 : add al, 0xff ; ret 0x8941
0xffffff800058b90c : add al, 0xff ; ret 0xd139
0xffffff800025c85a : add al, 0xff ; ret 0xd389
0xffffff8000709180 : add al, 0xff ; ret 0xd689
0xffffff80008bbc6c : add al, 0xff ; ret 0xef75
0xffffff8000288119 : add al, 0xff ; ret 0xf275
0xffffff800072d9c6 : add al, 1 ; add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x80 ; pop rbp ; ret
0xffffff800075884d : add al, 1 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80007674f6 : add al, 1 ; jne 0xffffff8000767507 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007674f5 : add al, 1 ; jne 0xffffff8000767508 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000707303 : add al, 1 ; ret 0x341
0xffffff8000284e3a : add al, 1 ; ret 0x894c
0xffffff8000284ce0 : add al, 1 ; ret 0x8b48
0xffffff800036e8b9 : add al, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800052028f : add al, 6 ; bswap eax ; pop rbp ; ret
0xffffff8000859a27 : add al, 8 ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80007a5bf4 : add al, 8 ; enter 0x3175, -0xa ; ret 0xf04
0xffffff8000480ed6 : add al, 8 ; movsx eax, al ; pop rbp ; ret
0xffffff80003af732 : add al, 8 ; ret
0xffffff8000776378 : add al, 8 ; ret 0x48ff
0xffffff800026022e : add al, 8 ; ret 0xb60f
0xffffff80003af485 : add al, 9 ; ret
0xffffff80007a802a : add al, 9 ; ret 0x7374
0xffffff80007a7ff0 : add al, 9 ; ret 0x840f
0xffffff80006036ba : add al, 9 ; ret 0x8841
0xffffff80003a056d : add al, 9 ; ret 0xca83
0xffffff80008a7b56 : add al, ah ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800026ff1f : add al, ah ; dec dword ptr [rcx + 0x39] ; ret 0x970f
0xffffff8000360540 : add al, ah ; jmp 0xffffff800036057d
0xffffff80008aae01 : add al, ah ; jmp 0xffffff80008aae7f
0xffffff80008be034 : add al, ah ; jmp 0xffffff80008be19c
0xffffff80008bf8bd : add al, ah ; jmp 0xffffff80008bf887
0xffffff80008cfdf0 : add al, ah ; jmp 0xffffff80008cfef6
0xffffff800085b7b7 : add al, ah ; pop rbp ; ret
0xffffff80008cdc15 : add al, ah ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ba5c8 : add al, ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008be348 : add al, ah ; test al, al ; jne 0xffffff80008be315 ; jmp 0xffffff80008be367
0xffffff8000b4a49e : add al, ah ; xchg eax, edx ; push rax ; push rcx ; ret 0x8a41
0xffffff80008d5a96 : add al, al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008b6926 : add al, bl ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008cc313 : add al, bl ; sbb eax, 0xd8d4800 ; push rdx ; ret 0x1d
0xffffff80005e6741 : add al, bpl ; clc ; ret 0xffda
0xffffff80006295bd : add al, bpl ; cmp al, 0x11 ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000629108 : add al, bpl ; int1 ; adc eax, 0x8948ffd7 ; ret
0xffffff80006349c6 : add al, bpl ; ret
0xffffff80005e60d0 : add al, bpl ; stc ; ret
0xffffff800076e2f5 : add al, byte ptr [eax] ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0xffffff800084fefd : add al, byte ptr [eax] ; add byte ptr [rcx - 9], al ; ret 0xffff
0xffffff80008507e0 : add al, byte ptr [r9 - 0x78] ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4803
0xffffff8000837e70 : add al, byte ptr [rax + 0x415bdc00] ; pop rsi ; pop rbp ; ret
0xffffff80007054f3 : add al, byte ptr [rax + rax*8 - 0x926baf1] ; ret
0xffffff8000849a81 : add al, byte ptr [rax + rax*8 - 0xb7d88c] ; ret 0xff48
0xffffff80006a196a : add al, byte ptr [rax + rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80002638d6 : add al, byte ptr [rax - 0x76b6ffc6] ; ror dword ptr [rax - 0x77], 1 ; ret 0xee75
0xffffff8000746e46 : add al, byte ptr [rax - 0x76b7ffc5] ; fimul dword ptr [rax - 0x77] ; ret
0xffffff8000263676 : add al, byte ptr [rax - 0x76b7ffc8] ; ret
0xffffff800025f7b6 : add al, byte ptr [rax - 0x76b7ffc8] ; ret 0x8948
0xffffff8000653a07 : add al, byte ptr [rax] ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000358380 : add al, byte ptr [rax] ; add al, ch ; enter -0xca3, -1 ; jmp 0xffffff8000358355
0xffffff800066b35f : add al, byte ptr [rax] ; add al, ch ; jmp 0xffffff7fea66759b
0xffffff800055bfbe : add al, byte ptr [rax] ; add al, ch ; mov ah, byte ptr [rcx] ; sar edi, cl ; jmp 0xffffff800055bf93
0xffffff8000274789 : add al, byte ptr [rax] ; add al, ch ; mov edi, 0x83000199 ; ret
0xffffff800073d38e : add al, byte ptr [rax] ; add al, ch ; mov edx, 0xe9ffb50d ; ret 0xfffc
0xffffff80006534ee : add al, byte ptr [rax] ; add al, ch ; pop rdx ; lodsb al, byte ptr [rsi] ; ret
0xffffff800025be85 : add al, byte ptr [rax] ; add al, ch ; ret
0xffffff800036c986 : add al, byte ptr [rax] ; add al, ch ; ret 0xf217
0xffffff800029b086 : add al, byte ptr [rax] ; add al, ch ; ret 0xff30
0xffffff800029ab86 : add al, byte ptr [rax] ; add al, ch ; ret 0xff35
0xffffff8000299686 : add al, byte ptr [rax] ; add al, ch ; ret 0xff4a
0xffffff8000831f04 : add al, byte ptr [rax] ; add al, ch ; ret 0xffa5
0xffffff8000341f07 : add al, byte ptr [rax] ; add al, ch ; ret 0xfff4
0xffffff80002d455a : add al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80002d6fad : add al, byte ptr [rax] ; add bh, bh ; ret 0xda39
0xffffff800064faef : add al, byte ptr [rax] ; add bh, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061cfd4 : add al, byte ptr [rax] ; add bh, ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800062e0d8 : add al, byte ptr [rax] ; add bh, ch ; xor eax, eax ; pop rbp ; ret
0xffffff8000455a9d : add al, byte ptr [rax] ; add bh, dh ; ret
0xffffff800062e7a0 : add al, byte ptr [rax] ; add bh, dh ; ret 0
0xffffff8000468758 : add al, byte ptr [rax] ; add bl, ch ; ret
0xffffff800030e2ea : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800043c345 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0xffffff800043cb40 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x9d0f
0xffffff800040eee9 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5d027502], ch ; ret
0xffffff800072dd73 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5d10344f], al ; ret
0xffffff800064e636 : add al, byte ptr [rax] ; add byte ptr [rax + 0x6348cb45], cl ; ret
0xffffff80006b9705 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff80005daf5f : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80004ffac7 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff80002b1473 : add al, byte ptr [rax] ; add byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff80002a33f6 : add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff800084c38b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0xffffff8000748140 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rbp ; mov bh, bh ; ret
0xffffff80002ac567 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rbx ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80004b3167 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x820f
0xffffff80006c7743 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80007d78c3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 1] ; ret 0x3948
0xffffff8000770634 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; add dword ptr [rdx], ebp ; ret 0x8aff
0xffffff800076b4f9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; cmp al, 0x7b ; ret 0x41ff
0xffffff800039a44a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800088b94a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff8000712034 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x5dbb
0xffffff80003c1c48 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff800039bba2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0xffffff800084a8f8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0xffffff80008232c9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret
0xffffff80008226f8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cb4
0xffffff800081cd0f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cfc
0xffffff800026e8a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0xffffff8000284cae : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002ac542 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800078511e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0xffffff8000509587 : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000511c16 : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80003f382c : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000532847 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; or bh, bh ; ret 0x4166
0xffffff80004af518 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff80004af31e : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff8000726521 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80007889c9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000297e3a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff800038b852 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0xffffff800032fa91 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xffffff800029bce6
0xffffff80005d659f : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xffffff80003928a6
0xffffff80007696d9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xffffff80003928a7
0xffffff800028ed6a : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0xffffff80006b169d : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80008e826f : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0xffffff80008e827e ; pop rbp ; ret
0xffffff8000427ad8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0xffffff8000427b17
0xffffff80004c857b : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0xffffff80004c858c ; xor eax, eax ; pop rbp ; ret
0xffffff80008d2568 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov r10, rax ; jmp 0xffffff80008d2590
0xffffff80005365ae : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, rax ; call 0xffffff80003928a9
0xffffff80005d9268 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80005e5499
0xffffff80005cf5d2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000273ba1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002d2f9a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065e520 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000749535 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor edx, edx ; call qword ptr [rbx]
0xffffff80005526a0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor edx, edx ; mov rsi, rax ; call rcx
0xffffff8000266b22 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; xor edx, edx ; call r14
0xffffff800029e067 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x7b], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0xffffff8000388d98 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x5d], dh ; pop rbp ; ret
0xffffff8000800902 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff8000624d90 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000552498 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x49], cl ; and cl, ch ; ret 2
0xffffff80005723d5 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x68f0fc08], al ; ret
0xffffff80004f97d8 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6af0ef06], al ; ret 0xb60f
0xffffff800033e7f8 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6bf0df20], al ; ret 0x8d8b
0xffffff8000468eac : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6bf0fd02], al ; ret 0xb60f
0xffffff800072cd43 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x72f0fd08], al ; ret
0xffffff800071713c : add al, byte ptr [rax] ; add byte ptr [rbx - 0x73d413b3], cl ; ret
0xffffff80005982df : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf00008], al ; ret
0xffffff8000716942 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x8f43], al ; jmp qword ptr [rax]
0xffffff8000272adc : add al, byte ptr [rax] ; add byte ptr [rbx], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff80004edec9 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0xffffff800062ebc2 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; rol byte ptr [rdi + rcx + 0x46], 1 ; ret 0xd141
0xffffff8000532484 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff8000566231 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80003924d8
0xffffff80006359a8 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov edx, r14d ; call rax
0xffffff800077098a : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000393049
0xffffff800052b090 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff800054c88b : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret
0xffffff80005231d3 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x54], cl ; ret
0xffffff80005211ce : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0xffffff800076d4c3 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000393049
0xffffff800076e2f6 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0xffffff80007ccfa4 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r12 ; call rax
0xffffff800076e66f : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393049
0xffffff800090431c : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff800087fe23 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff80003dafc1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x4f], al ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003dc3e6 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x4f], al ; add dword ptr [rcx - 0x77], eax ; ret 0x24eb
0xffffff8000287fdd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rsi ; sbb byte ptr [rax + 0x39], cl ; ret 0x974
0xffffff8000649ffd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; and al, 0x89 ; ret 0xe283
0xffffff8000452d34 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; pop rsi ; or bh, bh ; ret
0xffffff8000603861 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; push rsi ; xor al, 0xe9 ; ret
0xffffff800038b86a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xa902
0xffffff80006f3878 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7f], al ; jmp qword ptr [rcx]
0xffffff800083fe27 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf40
0xffffff800084fefe : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xffff
0xffffff8000726d74 : add al, byte ptr [rax] ; add byte ptr [rcx], al ; ret 0x3944
0xffffff80006949fe : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0xffffff800043d051 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x428d
0xffffff80004185cd : add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0xffffff80003f976a : add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff8000727e5d : add al, byte ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5589
0xffffff8000458918 : add al, byte ptr [rax] ; add byte ptr [rcx], cl ; ret 0xc889
0xffffff800078bea7 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff80007cbd76 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ret
0xffffff8000646d80 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff80003a90ee : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff8000641f7c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x2a ; ret 0xffc4
0xffffff8000663a57 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x4f ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x41ff
0xffffff8000721e4b : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x5b ; ret
0xffffff8000721e2e : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x78 ; ret
0xffffff8000641f16 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x90 ; ret 0xffc4
0xffffff800066149e : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 8 ; int 0xc2
0xffffff800088238a : add al, byte ptr [rax] ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008823d9
0xffffff80008d78ca : add al, byte ptr [rax] ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d7919
0xffffff80006487f8 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx], al ; xchg eax, esp ; ret
0xffffff80006051b1 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x57 ; add bh, byte ptr [rcx] ; ret 0x850f
0xffffff8000456695 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 1], ecx ; ret
0xffffff80008d31ea : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov esi, 0x80ca88c8 ; ret 0xfd0
0xffffff80004cf56d : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff80002d3e94 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; ret 0xc749
0xffffff8000894a1b : add al, byte ptr [rax] ; add byte ptr [rdx + 0x3e8], bh ; pop rbp ; jmp rax
0xffffff800059b7dc : add al, byte ptr [rax] ; add byte ptr [rdx + 0x63], cl ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff80008949db : add al, byte ptr [rax] ; add byte ptr [rdx + 0x989680], bh ; pop rbp ; jmp rax
0xffffff80008949fb : add al, byte ptr [rax] ; add byte ptr [rdx + 0xf4240], bh ; pop rbp ; jmp rax
0xffffff800062e0cb : add al, byte ptr [rax] ; add byte ptr [rip + 0x100000], ah ; pop rbp ; ret
0xffffff8000272ae8 : add al, byte ptr [rax] ; add byte ptr [rip + 0x5d100040], al ; ret
0xffffff80003a9260 : add al, byte ptr [rax] ; add byte ptr [rsi + 1], bh ; call rax
0xffffff800068ad72 : add al, byte ptr [rax] ; add byte ptr [rsi - 0x3f], ah ; ret
0xffffff80008df306 : add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret
0xffffff8000314b0b : add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret 0xfff0
0xffffff8000272af4 : add al, byte ptr [rax] ; add byte ptr [rsi], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff800027894d : add al, byte ptr [rax] ; add cl, ch ; ret
0xffffff80007181d1 : add al, byte ptr [rax] ; add cl, ch ; ret 0
0xffffff80006281a8 : add al, byte ptr [rax] ; add dh, bh ; ret 0x8841
0xffffff800025e8fb : add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff800040edcc : add al, byte ptr [rax] ; add dh, dh ; ret 0x4c08
0xffffff800040ee87 : add al, byte ptr [rax] ; add dh, dh ; ret 0x4d08
0xffffff80007a5c1e : add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0xffffff8000627ecc : add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0xffffff800026d6ae : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000796633 : add al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800079dbd7 : add al, byte ptr [rax] ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800077c910 : add al, byte ptr [rax] ; cmovbe eax, ecx ; mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff800029d0e7 : add al, byte ptr [rax] ; jmp 0xffffff800029d10b
0xffffff80007a13e6 : add al, byte ptr [rax] ; jmp 0xffffff80007a1527
0xffffff800035dd3d : add al, byte ptr [rax] ; loopne 0xffffff800035dcfd ; ret 2
0xffffff80003602cf : add al, byte ptr [rax] ; loopne 0xffffff800036028f ; ret 2
0xffffff800036053f : add al, byte ptr [rax] ; loopne 0xffffff8000360534 ; xor al, 0xb9 ; ret 2
0xffffff800085b7b6 : add al, byte ptr [rax] ; loopne 0xffffff800085b81b ; ret
0xffffff800085df36 : add al, byte ptr [rax] ; loopne 0xffffff800085df9b ; ret
0xffffff8000866c16 : add al, byte ptr [rax] ; loopne 0xffffff8000866c7b ; ret
0xffffff800086b6f4 : add al, byte ptr [rax] ; loopne 0xffffff800086b759 ; ret
0xffffff800086cfb6 : add al, byte ptr [rax] ; loopne 0xffffff800086d01b ; ret
0xffffff800086dba6 : add al, byte ptr [rax] ; loopne 0xffffff800086dc0b ; ret
0xffffff800086dbb6 : add al, byte ptr [rax] ; loopne 0xffffff800086dc1b ; ret
0xffffff800086ddf6 : add al, byte ptr [rax] ; loopne 0xffffff800086de5b ; ret
0xffffff800087996f : add al, byte ptr [rax] ; loopne 0xffffff80008799d4 ; ret
0xffffff8000892824 : add al, byte ptr [rax] ; loopne 0xffffff8000892889 ; ret
0xffffff8000892864 : add al, byte ptr [rax] ; loopne 0xffffff80008928c9 ; ret
0xffffff80008928cd : add al, byte ptr [rax] ; loopne 0xffffff8000892932 ; ret
0xffffff8000892914 : add al, byte ptr [rax] ; loopne 0xffffff8000892979 ; ret
0xffffff800089294d : add al, byte ptr [rax] ; loopne 0xffffff80008929b2 ; ret
0xffffff8000898926 : add al, byte ptr [rax] ; loopne 0xffffff800089893e ; ret
0xffffff80008a2e16 : add al, byte ptr [rax] ; loopne 0xffffff80008a2e7b ; ret
0xffffff80008aa76f : add al, byte ptr [rax] ; loopne 0xffffff80008aa7d4 ; ret
0xffffff80008aa79f : add al, byte ptr [rax] ; loopne 0xffffff80008aa804 ; ret
0xffffff80008aa7cf : add al, byte ptr [rax] ; loopne 0xffffff80008aa834 ; ret
0xffffff80008aa7ff : add al, byte ptr [rax] ; loopne 0xffffff80008aa864 ; ret
0xffffff80008aa84f : add al, byte ptr [rax] ; loopne 0xffffff80008aa8b4 ; ret
0xffffff80008aa87f : add al, byte ptr [rax] ; loopne 0xffffff80008aa8e4 ; ret
0xffffff80008aae00 : add al, byte ptr [rax] ; loopne 0xffffff80008aadf5 ; jne 0xffffff80008aadc7 ; ret 2
0xffffff80008b0776 : add al, byte ptr [rax] ; loopne 0xffffff80008b07db ; ret
0xffffff80008b0786 : add al, byte ptr [rax] ; loopne 0xffffff80008b07eb ; ret
0xffffff80008b1ad6 : add al, byte ptr [rax] ; loopne 0xffffff80008b1b3b ; ret
0xffffff80008b1ae6 : add al, byte ptr [rax] ; loopne 0xffffff80008b1b4b ; ret
0xffffff80008b6a96 : add al, byte ptr [rax] ; loopne 0xffffff80008b6afb ; ret
0xffffff80008b7496 : add al, byte ptr [rax] ; loopne 0xffffff80008b74fb ; ret
0xffffff80008b74b6 : add al, byte ptr [rax] ; loopne 0xffffff80008b751b ; ret
0xffffff80008b74e6 : add al, byte ptr [rax] ; loopne 0xffffff80008b754b ; ret
0xffffff80008b74f6 : add al, byte ptr [rax] ; loopne 0xffffff80008b755b ; ret
0xffffff80008b7506 : add al, byte ptr [rax] ; loopne 0xffffff80008b756b ; ret
0xffffff80008ba5c7 : add al, byte ptr [rax] ; loopne 0xffffff80008ba62d ; pop r14 ; pop rbp ; ret
0xffffff80008ba62d : add al, byte ptr [rax] ; loopne 0xffffff80008ba693 ; pop r14 ; pop rbp ; ret
0xffffff80008be790 : add al, byte ptr [rax] ; loopne 0xffffff80008be78e ; ret 0xf10
0xffffff80008bf8bc : add al, byte ptr [rax] ; loopne 0xffffff80008bf8af ; ret
0xffffff80008c2c16 : add al, byte ptr [rax] ; loopne 0xffffff80008c2c7b ; ret
0xffffff80008cdc14 : add al, byte ptr [rax] ; loopne 0xffffff80008cdc7c ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008cf6a2 : add al, byte ptr [rax] ; loopne 0xffffff80008cf6ba ; ret 0x567e
0xffffff80008cf872 : add al, byte ptr [rax] ; loopne 0xffffff80008cf88a ; ret 0x567e
0xffffff80008d505e : add al, byte ptr [rax] ; loopne 0xffffff80008d50c4 ; pop r14 ; pop rbp ; ret
0xffffff80008d644e : add al, byte ptr [rax] ; loopne 0xffffff80008d63df ; sal byte ptr [rbp + 0x78], 0xbb ; ret 2
0xffffff80008d7b06 : add al, byte ptr [rax] ; loopne 0xffffff80008d7b6b ; ret
0xffffff80008d7b16 : add al, byte ptr [rax] ; loopne 0xffffff80008d7b7b ; ret
0xffffff80008d7b26 : add al, byte ptr [rax] ; loopne 0xffffff80008d7b8b ; ret
0xffffff80008d7b36 : add al, byte ptr [rax] ; loopne 0xffffff80008d7b9b ; ret
0xffffff80008de775 : add al, byte ptr [rax] ; loopne 0xffffff80008de7db ; pop r14 ; pop rbp ; ret
0xffffff80008de7c5 : add al, byte ptr [rax] ; loopne 0xffffff80008de82b ; pop r14 ; pop rbp ; ret
0xffffff800079db8a : add al, byte ptr [rax] ; mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff800079719e : add al, byte ptr [rax] ; mov eax, 0x16 ; pop rbp ; ret
0xffffff800030343b : add al, byte ptr [rax] ; mov eax, 4 ; pop rbp ; ret
0xffffff80007c5ca6 : add al, byte ptr [rax] ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028429d : add al, byte ptr [rax] ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b49ff : add al, byte ptr [rax] ; mov rdi, rbx ; mov rsi, r14 ; call r12
0xffffff800030349b : add al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000368edd : add al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b36a9 : add al, byte ptr [rax] ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff8000301def : add al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff800052b27e : add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b7ad5 : add al, byte ptr [rbp - 0x38bbf001] ; pop rbp ; ret
0xffffff800072548e : add al, byte ptr [rbp - 0x3f6bf002] ; pop rbp ; ret
0xffffff8000b3e425 : add al, byte ptr [rbp] ; fiadd dword ptr [rcx - 0x80] ; ret 0x45cd
0xffffff800051592a : add al, byte ptr [rbx + rdi*8 + 0x5dc031ff] ; ret
0xffffff8000387f54 : add al, byte ptr [rbx - 0x3776fe1f] ; pop rbp ; ret
0xffffff8000776b2f : add al, byte ptr [rbx - 0x3d8afc07] ; jmp 0xffffff8000776b58
0xffffff8000776b2e : add al, byte ptr [rbx - 0x3d8afc07] ; jmp 0xffffff8000776b59
0xffffff800089d702 : add al, byte ptr [rbx - 0x6af0fd02] ; ret
0xffffff80002696c5 : add al, byte ptr [rbx - 0x7abafe1f] ; test byte ptr [rdi], 0x95 ; ret 0xb60f
0xffffff800027f116 : add al, byte ptr [rbx - 0x7cb7fb40] ; ret 0x8360
0xffffff8000655f2e : add al, byte ptr [rbx - 0xc7cfb1d] ; or al, 1 ; ret
0xffffff80002601fc : add al, byte ptr [rbx - 0xdc6fc1a] ; setl dl ; jmp 0xffffff800026022c
0xffffff80004b43f7 : add al, byte ptr [rcx + 0x2000e3] ; add byte ptr [rcx], cl ; ret
0xffffff8000b45964 : add al, byte ptr [rcx + 0x28] ; fbld tbyte ptr [rax] ; ret
0xffffff800060b1bf : add al, byte ptr [rcx + 0x29] ; ret 0x4566
0xffffff800038b983 : add al, byte ptr [rcx + 0x3ffe2] ; add byte ptr [rcx - 1], cl ; ret 0x8966
0xffffff80003422be : add al, byte ptr [rcx + 0x4000c1] ; add byte ptr [rax - 0x7d], cl ; ret 0x3920
0xffffff80005b00ee : add al, byte ptr [rcx + 0x69] ; ret 0x2bb1
0xffffff8000661dd4 : add al, byte ptr [rcx - 0x75] ; xor byte ptr [r9], r15b ; ret
0xffffff8000b3c504 : add al, byte ptr [rcx - 0x77] ; ret 0x2141
0xffffff80005d3e80 : add al, byte ptr [rcx - 0x77] ; xor byte ptr [r13 + rsi*2 - 9], sil ; ret 0
0xffffff80008507e1 : add al, byte ptr [rcx - 0x78] ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4803
0xffffff800085092e : add al, byte ptr [rcx - 0x78] ; add cl, byte ptr [rcx - 1] ; ret 0xfb83
0xffffff8000b3c7ae : add al, byte ptr [rcx - 0x78] ; ret 0x8041
0xffffff80005a2053 : add al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff80003eae24 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff800037c76a : add al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000b4a2f2 : add al, byte ptr [rcx] ; ret 0x8944
0xffffff8000b40352 : add al, byte ptr [rcx] ; ret 0xc26b
0xffffff80005070ef : add al, byte ptr [rcx] ; ret 0xe0c1
0xffffff800044c80a : add al, byte ptr [rcx] ; ret 0xf41
0xffffff8000382d24 : add al, byte ptr [rdi + rcx + 0x45] ; loopne 0xffffff8000382d26 ; ret 0x4402
0xffffff80003d73a4 : add al, byte ptr [rdi + rcx] ; ret
0xffffff80008e725a : add al, byte ptr [rdi - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089e2bd : add al, byte ptr [rip - 0x40bf0000] ; ret 2
0xffffff80008b0a8c : add al, byte ptr [rsi + 0xf] ; adc al, 0 ; movzx eax, al ; pop rbp ; ret
0xffffff800040fc16 : add al, byte ptr [rsp + rsi*2] ; add eax, 0x5d5e415b ; ret
0xffffff80007aeb3e : add al, byte ptr cs:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000532846 : add al, byte ptr ds:[rax] ; add byte ptr [rax], al ; add bl, ch ; or bh, bh ; ret 0x4166
0xffffff800030e2e9 : add al, byte ptr es:[rax] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800084c38a : add al, byte ptr gs:[rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0xffffff8000835456 : add al, ch ; adc al, 0x24 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d8ed8 : add al, ch ; adc al, byte ptr [rbp - 0x76b7000d] ; ret
0xffffff80002b29b7 : add al, ch ; adc al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008903a4 : add al, ch ; adc al, r15b ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000258638 : add al, ch ; adc bl, byte ptr [rbx + 3] ; add bl, ch ; ret 0x4855
0xffffff8000641899 : add al, ch ; adc dword ptr [rcx + rcx*8], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800064ee35 : add al, ch ; adc eax, 0x83ffabf2 ; ret
0xffffff80008179d7 : add al, ch ; adc ebx, dword ptr [rdx - 0x76b70001] ; ret
0xffffff8000764a77 : add al, ch ; adc ebx, ebp ; ret 0x44ff
0xffffff8000754829 : add al, ch ; adc edx, esp ; ret
0xffffff8000310597 : add al, ch ; adc esi, dword ptr [rdi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000498e5e : add al, ch ; adc r8b, byte ptr [rax] ; add bh, bh ; ret
0xffffff8000870956 : add al, ch ; add al, 0x16 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076a636 : add al, ch ; add al, 0x84 ; ret 0x49ff
0xffffff80008e7258 : add al, ch ; add al, byte ptr [rdi - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008959e8 : add al, ch ; add bh, byte ptr [rdx - 0x76b70009] ; ret
0xffffff800075613a : add al, ch ; add bh, cl ; ret
0xffffff80008950f6 : add al, ch ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000745df3 : add al, ch ; add byte ptr [rax], r8b ; jmp 0xffffff8000745dc5
0xffffff80004bc478 : add al, ch ; add dh, byte ptr [rax - 0x13] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002fcb65 : add al, ch ; add eax, 0x89000006 ; ret
0xffffff800037b5d7 : add al, ch ; add eax, dword ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000391386 : add al, ch ; and al, 0x29 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000769516 : add al, ch ; and al, 0x9b ; ret 0x49ff
0xffffff8000742088 : add al, ch ; and bl, byte ptr [rcx + rdi*4] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000349288 : add al, ch ; and ch, byte ptr [rdx - 0x76b70008] ; ret
0xffffff800082c5c8 : add al, ch ; and cl, byte ptr [rsi - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ce2c8 : add al, ch ; and dh, byte ptr [rcx] ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030bcb7 : add al, ch ; and eax, dword ptr [rax] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000785197 : add al, ch ; and ecx, edx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086a562 : add al, ch ; call 0xffffff80328647ad
0xffffff80005f334b : add al, ch ; call qword ptr [rax]
0xffffff80007f163b : add al, ch ; call qword ptr [rbx]
0xffffff8000389a3b : add al, ch ; call qword ptr [rcx]
0xffffff800087193b : add al, ch ; call qword ptr [rsi]
0xffffff800056852f : add al, ch ; call r10
0xffffff800088209b : add al, ch ; call rax
0xffffff8000321eb1 : add al, ch ; cdq ; ret 0xfff6
0xffffff80005e6742 : add al, ch ; clc ; ret 0xffda
0xffffff80005d65a2 : add al, ch ; clc ; ret 0xffdb
0xffffff80002cb4b2 : add al, ch ; clc ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000882860 : add al, ch ; cli ; nop ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004964a0 : add al, ch ; cli ; ret
0xffffff8000536490 : add al, ch ; cli ; ret 0xffe5
0xffffff80003c1e55 : add al, ch ; cmc ; ret 0xffec
0xffffff800088597e : add al, ch ; cmp al, 0x10 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006295be : add al, ch ; cmp al, 0x11 ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000896ab2 : add al, ch ; cmp byte ptr [rcx - 0x76b70009], ch ; ret
0xffffff80007f9982 : add al, ch ; cmp byte ptr [rdx - 0x76b7000b], al ; ret
0xffffff80007a7582 : add al, ch ; cmp byte ptr [rsi - 0x76b70006], ah ; ret
0xffffff80008dca20 : add al, ch ; cmp ch, bh ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800046d001 : add al, ch ; cmp dword ptr [rax - 0xe], esp ; push rdi ; ret
0xffffff80008e721f : add al, ch ; cmp eax, dword ptr [rdi - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800084727f : add al, ch ; cmp eax, dword ptr [rsi] ; add bh, bh ; ret
0xffffff80004d9047 : add al, ch ; cmp edi, r15d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000641614 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; and dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800034b614 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002c43a4 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; popfq ; cld ; dec dword ptr [rax + 0x69] ; ret
0xffffff80005a6214 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80005c7833 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivp st(7) ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000653a09 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000353533 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg esp, esi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007697d3 : add al, ch ; cwde ; ret 0xbbff
0xffffff80002f84e3 : add al, ch ; div dword ptr [rdi] ; cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000358382 : add al, ch ; enter -0xca3, -1 ; jmp 0xffffff8000358353
0xffffff800035d842 : add al, ch ; enter 0x26b, 0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000421c92 : add al, ch ; fadd dword ptr [rcx - 0x76b7fff7] ; ret
0xffffff80007760eb : add al, ch ; fbld tbyte ptr [rsi] ; ret 0x48ff
0xffffff80008c380e : add al, ch ; fcomp st(0), st(3) ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025ed62 : add al, ch ; fdivr dword ptr [rbx + rdx] ; add dh, dh ; ret
0xffffff800089580e : add al, ch ; fdivr qword ptr [rbx - 0x76b70009] ; ret
0xffffff80007feed0 : add al, ch ; fidiv dword ptr [rdi - 0x3fce0052] ; pop rbp ; ret
0xffffff800076741c : add al, ch ; fidiv word ptr [rdx] ; ret
0xffffff80004ebddf : add al, ch ; fistp dword ptr [rbp + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003000cb : add al, ch ; fistp qword ptr [rbx] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c364b : add al, ch ; fisttp word ptr [rsi - 0x76b7fff1] ; ret
0xffffff80008dfd7c : add al, ch ; fisub word ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030d3cc : add al, ch ; fisubr word ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006784bc : add al, ch ; fisubr word ptr [rdx] ; ret 0x48ff
0xffffff80007b4521 : add al, ch ; fldenv [rcx - 0x42] ; dec dword ptr [rax + 1] ; ret
0xffffff800075475f : add al, ch ; fnclex ; ret
0xffffff8000411b61 : add al, ch ; fst dword ptr [rax + rdi*8] ; push rsi ; ret
0xffffff8000783c51 : add al, ch ; fst dword ptr [rdx - 0x76b70001] ; ret
0xffffff80004e105d : add al, ch ; fst st(0) ; ret 0xc7ff
0xffffff80007a2cde : add al, ch ; fsub st(6), st(0) ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000273272 : add al, ch ; fsubr dword ptr [rbp - 0x7cb70017] ; ret
0xffffff8000754262 : add al, ch ; fsubr st(5) ; ret
0xffffff800086cb16 : add al, ch ; hlt ; popfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800063f704 : add al, ch ; imul byte ptr [rdi + 0x148ffd5] ; ret
0xffffff800026d3b3 : add al, ch ; imul dword ptr [rax + 6] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000671d11 : add al, ch ; imul eax, ebx, 0x8348ffa9 ; ret
0xffffff80002cc621 : add al, ch ; imul edi, dword ptr [rbx], 0x89480000 ; ret
0xffffff800066145f : add al, ch ; imul edx, dword ptr [rsi], 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000778f76 : add al, ch ; in al, 0x43 ; ret 0x4dff
0xffffff80008d34b6 : add al, ch ; in al, 0xb3 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000753156 : add al, ch ; in al, 0xf8 ; ret
0xffffff80006416ce : add al, ch ; in al, dx ; and dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800037664e : add al, ch ; in al, dx ; ret
0xffffff80008e7175 : add al, ch ; in eax, 0x47 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004e5455 : add al, ch ; in eax, 0x8c ; ret 0x8bff
0xffffff80002d2a65 : add al, ch ; in eax, 0xb6 ; sti ; jmp qword ptr [rbx]
0xffffff80006628ad : add al, ch ; in eax, dx ; call rdx
0xffffff800053e1bd : add al, ch ; in eax, dx ; call rsp
0xffffff8000828a1d : add al, ch ; in eax, dx ; fdivp st(6) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008db04d : add al, ch ; in eax, dx ; jg 0xffffff80008db004 ; push rsi ; ret
0xffffff80005f041d : add al, ch ; in eax, dx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004bb1ad : add al, ch ; in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800088266d : add al, ch ; in eax, dx ; xchg eax, edx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d9b8e : add al, ch ; insb byte ptr [rdi], dx ; or ebx, esp ; dec dword ptr [rax + 1] ; ret
0xffffff8000664357 : add al, ch ; insb byte ptr [rdi], dx ; ret
0xffffff80005d9cbe : add al, ch ; insb byte ptr [rdi], dx ; sub byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075dbcd : add al, ch ; insd dword ptr [rdi], dx ; push rsp ; ret
0xffffff80006b484d : add al, ch ; insd dword ptr [rdi], dx ; ret
0xffffff8000629109 : add al, ch ; int1 ; adc eax, 0x8948ffd7 ; ret
0xffffff8000377ae9 : add al, ch ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004ebc43 : add al, ch ; ja 0xffffff80004ebcae ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80007a7543 : add al, ch ; ja 0xffffff80007a74f5 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033d167 : add al, ch ; jae 0xffffff800033d15e ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008e71e7 : add al, ch ; jae 0xffffff80008e723a ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000786248 : add al, ch ; jb 0xffffff800078620d ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007cf228 : add al, ch ; jb 0xffffff80007cf1e3 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000888be4 : add al, ch ; jbe 0xffffff8000888c1d ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028c85b : add al, ch ; je 0xffffff800028c86c ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000422a1d : add al, ch ; je 0xffffff8000422a33 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003f1f28 : add al, ch ; jg 0xffffff80003f1f41 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007691bb : add al, ch ; jg 0xffffff8000769161 ; ret 0x4aff
0xffffff8000769cbb : add al, ch ; jg 0xffffff8000769c50 ; ret 0x48ff
0xffffff800086cc8b : add al, ch ; jg 0xffffff800086cc33 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007696bd : add al, ch ; jge 0xffffff800076965e ; ret 0x49ff
0xffffff800076a4bd : add al, ch ; jge 0xffffff800076a450 ; ret 0x41ff
0xffffff800086aadd : add al, ch ; jge 0xffffff800086aaf7 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cec6e : add al, ch ; jl 0xffffff80008ceca1 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076931c : add al, ch ; jle 0xffffff80007692b9 ; ret 0x48ff
0xffffff800076eabc : add al, ch ; jle 0xffffff800076eb09 ; ret 0x83ff
0xffffff800076eabb : add al, ch ; jle 0xffffff800076eb0a ; ret 0x83ff
0xffffff80008cd7dc : add al, ch ; jle 0xffffff80008cd7c9 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066b361 : add al, ch ; jmp 0xffffff7fea667599
0xffffff800065fd00 : add al, ch ; jmp 0xffffff800065fccc
0xffffff800074b74f : add al, ch ; jmp 0xffffff800074b780
0xffffff8000767951 : add al, ch ; jmp 0xffffff8045763c12
0xffffff800029c04b : add al, ch ; jmp qword ptr [rax]
0xffffff800045056b : add al, ch ; jmp qword ptr [rdi]
0xffffff800078073b : add al, ch ; jmp qword ptr [rdx]
0xffffff80008c4c3b : add al, ch ; jmp rbx
0xffffff80002fff4b : add al, ch ; jmp rcx
0xffffff800089fc4b : add al, ch ; jmp rsp
0xffffff800076aac5 : add al, ch ; jne 0xffffff800076aa52 ; ret 0x4cff
0xffffff8000863f75 : add al, ch ; jne 0xffffff8000863f55 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086a3e5 : add al, ch ; jne 0xffffff800086a406 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007546c9 : add al, ch ; jno 0xffffff80007546ba ; ret
0xffffff80007558c9 : add al, ch ; jno 0xffffff80007558a2 ; ret
0xffffff800073aacf : add al, ch ; jnp 0xffffff800073ab10 ; popfq ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007698bf : add al, ch ; jnp 0xffffff800076985e ; ret 0x45ff
0xffffff8000660731 : add al, ch ; jns 0xffffff8000660713 ; ret 0x66ff
0xffffff8000756821 : add al, ch ; jns 0xffffff80007567e9 ; ret
0xffffff8000764751 : add al, ch ; jns 0xffffff8000764736 ; ret 0x44ff
0xffffff8000764751 : add al, ch ; jns 0xffffff800076473b ; ret 0x44ff
0xffffff8000798d41 : add al, ch ; jns 0xffffff8000798cdb ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7641 : add al, ch ; jns 0xffffff80007a75f2 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000859aa8 : add al, ch ; jns 0xffffff8000859ab0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002eb96a : add al, ch ; jo 0xffffff80002eb946 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c2b7a : add al, ch ; jo 0xffffff80008c2b6e ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800045ff50 : add al, ch ; jp 0xffffff800045fee4 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000767ec0 : add al, ch ; jp 0xffffff8000767e73 ; ret 0x41ff
0xffffff80008dfe70 : add al, ch ; jp 0xffffff80008dfe91 ; dec dword ptr [rax - 0x77] ; ret 0x42c7
0xffffff80004e2957 : add al, ch ; jrcxz 0xffffff80004e2916 ; ret 0xc7ff
0xffffff80007549c2 : add al, ch ; js 0xffffff80007549aa ; ret
0xffffff800053e20b : add al, ch ; lahf ; call rsp
0xffffff80006e684b : add al, ch ; lahf ; fdivp st(7) ; xor eax, eax ; pop rbp ; ret
0xffffff8000881dab : add al, ch ; lahf ; ret
0xffffff800087735b : add al, ch ; lahf ; sar ecx, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000697681 : add al, ch ; leave ; jno 0xffffff800069764e ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006b48f1 : add al, ch ; leave ; ret 0xffcb
0xffffff8000753071 : add al, ch ; leave ; stc ; ret
0xffffff80008e71ae : add al, ch ; lodsb al, byte ptr [rsi] ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c043e : add al, ch ; lodsb al, byte ptr [rsi] ; mov dl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000693e4e : add al, ch ; lodsb al, byte ptr [rsi] ; push 0x148ffd0 ; ret
0xffffff80007c47ce : add al, ch ; lodsb al, byte ptr [rsi] ; ret
0xffffff80003c1e9e : add al, ch ; lodsb al, byte ptr [rsi] ; ret 0xffec
0xffffff800082fb3e : add al, ch ; lodsb al, byte ptr [rsi] ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a341d : add al, ch ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c312d : add al, ch ; lodsd eax, dword ptr [rsi] ; and eax, 0x81480000 ; ret
0xffffff80006418fd : add al, ch ; lodsd eax, dword ptr [rsi] ; and ecx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027724d : add al, ch ; lodsd eax, dword ptr [rsi] ; call qword ptr [rcx]
0xffffff80003db09d : add al, ch ; lodsd eax, dword ptr [rsi] ; fild dword ptr [rsi] ; add byte ptr [rcx - 0x77], al ; ret
0xffffff8000300f2d : add al, ch ; lodsd eax, dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000767a64 : add al, ch ; lodsd eax, dword ptr es:[rsi] ; ret 0x31ff
0xffffff80003fbc25 : add al, ch ; loop 0xffffff80003fbc3d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000754959 : add al, ch ; loope 0xffffff8000754941 ; ret
0xffffff800088257a : add al, ch ; loopne 0xffffff8000882519 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008933a2 : add al, ch ; loopne 0xffffff80008933a6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076cf86 : add al, ch ; mov ah, 0x5a ; ret 0x49ff
0xffffff800055bfc0 : add al, ch ; mov ah, byte ptr [rcx] ; sar edi, cl ; jmp 0xffffff800055bf91
0xffffff800086b33a : add al, ch ; mov al, 0x60 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000754e8a : add al, ch ; mov al, 0xdb ; ret
0xffffff8000745d83 : add al, ch ; mov bh, 0x4e ; add byte ptr [rax], al ; jmp 0xffffff8000745d55
0xffffff800076d383 : add al, ch ; mov bh, 0x56 ; ret 0x41ff
0xffffff800030ae23 : add al, ch ; mov bh, 0xe ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800076a687 : add al, ch ; mov bl, 0x89 ; ret 0x44ff
0xffffff8000769c87 : add al, ch ; mov bl, 0x93 ; ret 0xbeff
0xffffff8000421be2 : add al, ch ; mov byte ptr [rdx - 0x76b7fff7], al ; ret
0xffffff80004ebd32 : add al, ch ; mov byte ptr [rsi + 0x26], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000294422 : add al, ch ; mov byte ptr [rsi + rdi*8], dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000769b85 : add al, ch ; mov ch, 0x8e ; ret 0x45ff
0xffffff800030c625 : add al, ch ; mov ch, 0xf6 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000291570 : add al, ch ; mov ch, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000439a99 : add al, ch ; mov cl, 0x32 ; add byte ptr ss:[rcx], ch ; ret
0xffffff80002f89f9 : add al, ch ; mov cl, 0xb2 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000605ab4 : add al, ch ; mov dh, 0x1d ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008889a4 : add al, ch ; mov dh, 0x2f ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000755c88 : add al, ch ; mov dl, 0xd3 ; ret
0xffffff800030b928 : add al, ch ; mov dl, 3 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000802631 : add al, ch ; mov dword ptr [rbx + 5], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002b1371 : add al, ch ; mov dword ptr [rbx - 0x76b7fff2], edx ; ret 0x148
0xffffff80007541b1 : add al, ch ; mov eax, ebp ; ret
0xffffff80003ded8d : add al, ch ; mov ebp, 0x8900069e ; ret
0xffffff800073790f : add al, ch ; mov ebx, 0x69ffc5ab ; ret
0xffffff80003eba8f : add al, ch ; mov ebx, 0x890005d1 ; ret
0xffffff800028beb7 : add al, ch ; mov ecx, 0x8948fffe ; ret
0xffffff800027478b : add al, ch ; mov edi, 0x83000199 ; ret
0xffffff8000886573 : add al, ch ; mov edx, 0x8948fff8 ; ret
0xffffff800073d390 : add al, ch ; mov edx, 0xe9ffb50d ; ret 0xfffc
0xffffff8000764f3f : add al, ch ; mov edx, ebp ; ret 0x48ff
0xffffff80003c206c : add al, ch ; mov es, word ptr [rsi - 0x76b70003] ; ret
0xffffff80008e48cf : add al, ch ; mov esi, dword ptr [rax - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007dae1f : add al, ch ; mov esi, dword ptr [rbx] ; stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x63] ; ret
0xffffff80006000df : add al, ch ; mov esi, dword ptr [rdi - 0x37] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800074557e : add al, ch ; mov esp, 0x89ffbc88 ; ret
0xffffff80007844e4 : add al, ch ; mov r15b, dil ; dec dword ptr [rax - 0x77] ; ret
0xffffff800044d56c : add al, ch ; mov ss, ecx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c8e4c : add al, ch ; mov ss, word ptr [rbx + 0x58bffff] ; ret 0x73
0xffffff80005929a6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000769096 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; ret 0x48ff
0xffffff800076dd96 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; push rdx ; ret 0x4dff
0xffffff8000331ea6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff5
0xffffff800075f226 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; ret
0xffffff8000765555 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; push rcx ; ret
0xffffff8000698515 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff8000767f95 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; stosb byte ptr [rdi], al ; ret 0x8bff
0xffffff80007ad537 : add al, ch ; movsxd rcx, esp ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000882914 : add al, ch ; nop ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008826ca : add al, ch ; nop ; xchg eax, edx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004a33e4 : add al, ch ; not byte ptr [rcx - 0x11] ; dec dword ptr [rax + 0x63] ; ret
0xffffff800026cc53 : add al, ch ; not dword ptr [rdx + rax] ; add cl, ch ; ret
0xffffff80008d92de : add al, ch ; or al, 0x81 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d6bde : add al, ch ; or al, 0xa8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000766f2e : add al, ch ; or al, 0xc1 ; ret 0x48ff
0xffffff80008c42de : add al, ch ; or al, 0xd1 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000605a60 : add al, ch ; or bl, byte ptr [rsi] ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075136b : add al, ch ; or byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055c8e2 : add al, ch ; or byte ptr [rdx - 0x76b7002d], bh ; ret
0xffffff80005677f8 : add al, ch ; or dl, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002805f1 : add al, ch ; or dword ptr [rax - 1], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bed61 : add al, ch ; or dword ptr [rbx - 0x76b70053], ecx ; ret
0xffffff8000586761 : add al, ch ; or dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d9051 : add al, ch ; or dword ptr [rcx], ebp ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003ae52d : add al, ch ; or eax, 0x89fff5f9 ; ret
0xffffff80003b653d : add al, ch ; or eax, 0xe9ffed7c ; ret 0xfffe
0xffffff800074472f : add al, ch ; or eax, dword ptr [rdi + 3] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006603a1 : add al, ch ; or esi, ebx ; ret 0x66ff
0xffffff80008d08a9 : add al, ch ; or esi, r12d ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ad585 : add al, ch ; or r15d, r11d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000888c74 : add al, ch ; out 0x2c, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f83f3 : add al, ch ; out 0x38, eax ; cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800076ea44 : add al, ch ; out 0x3e, al ; ret 0xffff
0xffffff800075a754 : add al, ch ; out 0x88, al ; ret
0xffffff8000754553 : add al, ch ; out 0xea, eax ; ret
0xffffff80002957bc : add al, ch ; out dx, al ; and dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008192cc : add al, ch ; out dx, al ; jg 0xffffff80008192da ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075664c : add al, ch ; out dx, al ; leave ; ret
0xffffff800036be7c : add al, ch ; out dx, al ; mov ecx, 0x8948fff2 ; ret
0xffffff80006b47cc : add al, ch ; out dx, al ; ret
0xffffff800085e0fc : add al, ch ; out dx, al ; xor bh, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b664b : add al, ch ; out dx, eax ; ret
0xffffff800028c53c : add al, ch ; outsb dx, byte ptr [rsi] ; mov bl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008dc93c : add al, ch ; outsb dx, byte ptr [rsi] ; mov ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800050f22b : add al, ch ; outsd dx, dword ptr [rsi] ; mov ebp, 0x8948ffd8 ; ret 0x8948
0xffffff800075e0cb : add al, ch ; outsd dx, dword ptr [rsi] ; ret
0xffffff8000862f2b : add al, ch ; outsd dx, dword ptr [rsi] ; ret 0xfffa
0xffffff80008c4e9b : add al, ch ; pop qword ptr [rbx] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000489172 : add al, ch ; pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000346de2 : add al, ch ; pop rax ; ret 4
0xffffff800085735d : add al, ch ; pop rbp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fd8fd : add al, ch ; pop rbp ; ret
0xffffff80008bb6ed : add al, ch ; pop rbp ; sub bl, byte ptr [rbp - 0x76277601] ; ret
0xffffff800087bddf : add al, ch ; pop rbx ; jb 0xffffff800087bd9c ; push rsi ; ret
0xffffff80008f6c7f : add al, ch ; pop rbx ; pop rdi ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80005d616f : add al, ch ; pop rbx ; ret
0xffffff80004e85f0 : add al, ch ; pop rbx ; ret 0x48ff
0xffffff80007699df : add al, ch ; pop rbx ; xchg eax, esi ; ret 0x44ff
0xffffff80006129ff : add al, ch ; pop rbx ; xlatb ; sbb eax, dword ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80008b54b1 : add al, ch ; pop rcx ; adc al, 0xf6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006534f0 : add al, ch ; pop rdx ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000566ce0 : add al, ch ; pop rdx ; ret
0xffffff8000251ef0 : add al, ch ; pop rdx ; ret 3
0xffffff80003c2c9c : add al, ch ; pop rsi ; jp 0xffffff80003c2ca6 ; dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff80003c2c9b : add al, ch ; pop rsi ; jp 0xffffff80003c2ca7 ; dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff80006b67dc : add al, ch ; pop rsi ; ret 0xffcd
0xffffff80005926ee : add al, ch ; pop rsp ; add edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007693de : add al, ch ; pop rsp ; pushfq ; ret 0x49ff
0xffffff800085aa4e : add al, ch ; pop rsp ; test al, 0xfb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ada9d : add al, ch ; popfq ; js 0xffffff80008adaa0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b64fd : add al, ch ; popfq ; ret
0xffffff80008b8692 : add al, ch ; push -0x76005a2b ; ret
0xffffff8000291596 : add al, ch ; push -0x76b70002 ; ret
0xffffff800026d443 : add al, ch ; push -0x76b7fffa ; ret
0xffffff800040a732 : add al, ch ; push -0x76ffff8f ; ret
0xffffff800030d25c : add al, ch ; push -4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000310540 : add al, ch ; push 0x37 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000667340 : add al, ch ; push 0x6e ; ret 0x66ff
0xffffff80008534fb : add al, ch ; push qword ptr [rcx - 0x4c] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d36bb : add al, ch ; push qword ptr [rdx] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800064195a : add al, ch ; push rax ; and ecx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800088cf9a : add al, ch ; push rax ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b8daa : add al, ch ; push rax ; sbb esi, ecx ; dec dword ptr [rax + 1] ; ret
0xffffff80006986a5 : add al, ch ; push rbp ; and al, dl ; dec dword ptr [rax + 1] ; ret
0xffffff80006e0ef5 : add al, ch ; push rbp ; jnp 0xffffff80006e0ee3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000422615 : add al, ch ; push rbp ; js 0xffffff800042262b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075c4e5 : add al, ch ; push rbp ; ret
0xffffff80007a5827 : add al, ch ; push rbx ; mov bl, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000778297 : add al, ch ; push rbx ; ret 0x49ff
0xffffff80004e8dd5 : add al, ch ; push rbx ; ret 0xc7ff
0xffffff8000858869 : add al, ch ; push rcx ; loope 0xffffff8000858875 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000801de9 : add al, ch ; push rcx ; ret
0xffffff8000769be9 : add al, ch ; push rcx ; xchg eax, esp ; ret 0x45ff
0xffffff8000769449 : add al, ch ; push rcx ; xchg eax, esp ; ret 0x48ff
0xffffff80007fcfe4 : add al, ch ; push rdi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a2ba3 : add al, ch ; push rdi ; jnp 0xffffff80003a2baf ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007691e8 : add al, ch ; push rdx ; cwde ; ret 0x4dff
0xffffff80004a7e58 : add al, ch ; push rdx ; mov esi, 0x8948ffe2 ; ret
0xffffff80008c3894 : add al, ch ; push rsi ; fcomi st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000885894 : add al, ch ; push rsi ; mov ebx, 0x8948fff8 ; ret
0xffffff800068c384 : add al, ch ; push rsi ; ret 0xffd0
0xffffff80002cd534 : add al, ch ; push rsi ; sub al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000805a86 : add al, ch ; push rsp ; jno 0xffffff8000805a93 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800083124e : add al, ch ; pushfq ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d194e : add al, ch ; pushfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800059ecfe : add al, ch ; pushfq ; ret 0xffcf
0xffffff8000251eae : add al, ch ; pushfq ; ret 3
0xffffff8000816a4e : add al, ch ; pushfq ; test eax, 0x8948ffff ; ret
0xffffff8000755569 : add al, ch ; rcr edx, 1 ; ret
0xffffff8000254c77 : add al, ch ; ret
0xffffff8000281ee4 : add al, ch ; ret 0
0xffffff8000290738 : add al, ch ; ret 0x106a
0xffffff800028ff38 : add al, ch ; ret 0x1072
0xffffff800028b618 : add al, ch ; ret 0x10cf
0xffffff80002751c8 : add al, ch ; ret 0x11e2
0xffffff8000269118 : add al, ch ; ret 0x1292
0xffffff800027b488 : add al, ch ; ret 0x12c
0xffffff8000258478 : add al, ch ; ret 0x13ab
0xffffff8000661368 : add al, ch ; ret 0x15b1
0xffffff800036c7c8 : add al, ch ; ret 0x1f9
0xffffff80003679b8 : add al, ch ; ret 0x21
0xffffff8000269e88 : add al, ch ; ret 0x242
0xffffff8000268788 : add al, ch ; ret 0x259
0xffffff8000446588 : add al, ch ; ret 0x26
0xffffff800036c078 : add al, ch ; ret 0x269
0xffffff8000423d88 : add al, ch ; ret 0x297
0xffffff80004b7a88 : add al, ch ; ret 0x2d57
0xffffff8000418f88 : add al, ch ; ret 0x2fc
0xffffff80004788e8 : add al, ch ; ret 0x31d1
0xffffff800046c7e8 : add al, ch ; ret 0x3292
0xffffff8000744e78 : add al, ch ; ret 0x33f
0xffffff8000736418 : add al, ch ; ret 0x34
0xffffff800042066b : add al, ch ; ret 0x36
0xffffff800081e158 : add al, ch ; ret 0x3a8
0xffffff800081dd38 : add al, ch ; ret 0x3ab
0xffffff80007760d7 : add al, ch ; ret 0x49ff
0xffffff80003b19c8 : add al, ch ; ret 0x53a6
0xffffff80002d4ac8 : add al, ch ; ret 0x6175
0xffffff80002afe26 : add al, ch ; ret 0x63
0xffffff80003e4f88 : add al, ch ; ret 0x63c
0xffffff80003e4088 : add al, ch ; ret 0x64b
0xffffff80003d89d8 : add al, ch ; ret 0x70a
0xffffff8000731018 : add al, ch ; ret 0x74
0xffffff800078b468 : add al, ch ; ret 0x74e
0xffffff80008e0278 : add al, ch ; ret 0x82de
0xffffff8000564f68 : add al, ch ; ret 0x8d2
0xffffff80002fdc78 : add al, ch ; ret 0x953
0xffffff800077dcb8 : add al, ch ; ret 0x9903
0xffffff800073c878 : add al, ch ; ret 0x9d18
0xffffff80008a0888 : add al, ch ; ret 0x9ed8
0xffffff80008d6cb8 : add al, ch ; ret 0xabc7
0xffffff800079b588 : add al, ch ; ret 0xaf2b
0xffffff8000608e78 : add al, ch ; ret 0xb052
0xffffff800074d5e8 : add al, ch ; ret 0xb40b
0xffffff80007435f8 : add al, ch ; ret 0xb574
0xffffff800080eb78 : add al, ch ; ret 0xb844
0xffffff800072c5e8 : add al, ch ; ret 0xba76
0xffffff8000553678 : add al, ch ; ret 0xbbaa
0xffffff8000787478 : add al, ch ; ret 0xc0bb
0xffffff800077f378 : add al, ch ; ret 0xc136
0xffffff8000769778 : add al, ch ; ret 0xc292
0xffffff8000742538 : add al, ch ; ret 0xc581
0xffffff8000706c38 : add al, ch ; ret 0xc93a
0xffffff80006c2438 : add al, ch ; ret 0xcd82
0xffffff80006b4fd8 : add al, ch ; ret 0xcdd8
0xffffff800069c6d8 : add al, ch ; ret 0xcf61
0xffffff800069bed8 : add al, ch ; ret 0xcf69
0xffffff8000699778 : add al, ch ; ret 0xcf98
0xffffff80003e9ea8 : add al, ch ; ret 0xcff
0xffffff8000280d88 : add al, ch ; ret 0xd3
0xffffff80003d92b8 : add al, ch ; ret 0xd34d
0xffffff800065d9d8 : add al, ch ; ret 0xd34e
0xffffff8000629f78 : add al, ch ; ret 0xd68a
0xffffff8000758208 : add al, ch ; ret 0xd777
0xffffff80005f4078 : add al, ch ; ret 0xd9e9
0xffffff800051f578 : add al, ch ; ret 0xda52
0xffffff80005c2038 : add al, ch ; ret 0xdd05
0xffffff800059fb78 : add al, ch ; ret 0xdf34
0xffffff80002ae407 : add al, ch ; ret 0xe
0xffffff80005506d8 : add al, ch ; ret 0xe421
0xffffff8000547878 : add al, ch ; ret 0xe4b1
0xffffff8000761ae8 : add al, ch ; ret 0xe52
0xffffff80002aeb38 : add al, ch ; ret 0xe86
0xffffff80003fede8 : add al, ch ; ret 0xe8f3
0xffffff8000265ab8 : add al, ch ; ret 0xea85
0xffffff80004cbf78 : add al, ch ; ret 0xec6a
0xffffff80004cad78 : add al, ch ; ret 0xec7c
0xffffff800048b278 : add al, ch ; ret 0xf07d
0xffffff8000385c88 : add al, ch ; ret 0xf084
0xffffff800036c988 : add al, ch ; ret 0xf217
0xffffff8000355388 : add al, ch ; ret 0xf38d
0xffffff800034b788 : add al, ch ; ret 0xf429
0xffffff80008d8688 : add al, ch ; ret 0xf5a6
0xffffff80003777e8 : add al, ch ; ret 0xf5c4
0xffffff80008b3628 : add al, ch ; ret 0xf5dd
0xffffff8000333018 : add al, ch ; ret 0xf68c
0xffffff800089be28 : add al, ch ; ret 0xf755
0xffffff800089bd28 : add al, ch ; ret 0xf756
0xffffff800040c778 : add al, ch ; ret 0xf868
0xffffff800040bb78 : add al, ch ; ret 0xf86e
0xffffff8000863a88 : add al, ch ; ret 0xfcf2
0xffffff80003aae18 : add al, ch ; ret 0xfe75
0xffffff800029b088 : add al, ch ; ret 0xff30
0xffffff800029ab88 : add al, ch ; ret 0xff35
0xffffff8000299688 : add al, ch ; ret 0xff4a
0xffffff8000455088 : add al, ch ; ret 0xff84
0xffffff8000831f06 : add al, ch ; ret 0xffa5
0xffffff8000816328 : add al, ch ; ret 0xffb0
0xffffff800044bd88 : add al, ch ; ret 0xffce
0xffffff80008115d8 : add al, ch ; ret 0xffdb
0xffffff80004d6d47 : add al, ch ; ret 0xffeb
0xffffff80004b6df7 : add al, ch ; ret 0xffed
0xffffff8000341f09 : add al, ch ; ret 0xfff4
0xffffff800032fa94 : add al, ch ; ret 0xfff6
0xffffff8000892f4b : add al, ch ; ret 0xfff7
0xffffff80003767f5 : add al, ch ; ret 1
0xffffff80003fc9ff : add al, ch ; ret 4
0xffffff80008c0c2a : add al, ch ; rol byte ptr [rdi], 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800034daa7 : add al, ch ; rol dword ptr [rcx - 0x76b70008], cl ; ret
0xffffff800081d787 : add al, ch ; rol dword ptr [rdi - 1], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ea767 : add al, ch ; rol dword ptr [rdx - 0x7cb60046], cl ; jmp qword ptr [rax]
0xffffff80007c1c0a : add al, ch ; ror bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089ee4c : add al, ch ; sahf ; and eax, 0x8948fff7 ; ret
0xffffff800030c73c : add al, ch ; sahf ; cmc ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006b481c : add al, ch ; sahf ; ret
0xffffff80006777d9 : add al, ch ; sal dword ptr [rax - 0x74b7002f], 0x3d ; ret 0x3f14
0xffffff800030bdbe : add al, ch ; sbb al, 0xff ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008be412 : add al, ch ; sbb byte ptr [rsp + rdi*8 + 0x5dc031ff], cl ; ret
0xffffff800033cdc0 : add al, ch ; sbb ch, bh ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002a08e0 : add al, ch ; sbb dh, byte ptr [rbp - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006aea2d : add al, ch ; sbb eax, 0x89ffea5a ; ret
0xffffff80008dac1d : add al, ch ; sbb eax, 0xf6ffab84 ; ret
0xffffff80008d8df1 : add al, ch ; sbb ebx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035069f : add al, ch ; sbb esi, dword ptr [rbx - 0x76b70001] ; ret
0xffffff8000762cd1 : add al, ch ; sbb esi, esi ; ret 0x49ff
0xffffff8000498dfc : add al, ch ; scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80007420ac : add al, ch ; scasb al, byte ptr [rdi] ; fdivr st(7) ; call 0xffffff80007fe358
0xffffff80003c364c : add al, ch ; scasb al, byte ptr [rdi] ; jo 0xffffff80003c3656 ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80003c364b : add al, ch ; scasb al, byte ptr [rdi] ; jo 0xffffff80003c3657 ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80003cc59c : add al, ch ; scasb al, byte ptr [rdi] ; mov dword ptr [rdi], 0x89c08500 ; ret
0xffffff80002cd49c : add al, ch ; scasb al, byte ptr [rdi] ; or al, 0xfc ; inc dword ptr [rbx + 0x35] ; ret
0xffffff80007336dc : add al, ch ; scasb al, byte ptr [rdi] ; push rbp ; add byte ptr [rax], al ; jmp 0xffffff800072f9af
0xffffff80005a65ec : add al, ch ; scasb al, byte ptr [rdi] ; ret 0xffde
0xffffff800076162b : add al, ch ; scasd eax, dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; ret
0xffffff800089ed29 : add al, ch ; shl dword ptr [rsi], 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000754369 : add al, ch ; shr esp, 1 ; ret
0xffffff8000835271 : add al, ch ; stc ; and eax, 0x8948ffa6 ; ret
0xffffff80008a6b61 : add al, ch ; stc ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000784631 : add al, ch ; stc ; mov bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e60d1 : add al, ch ; stc ; ret
0xffffff80002bbb04 : add al, ch ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0xffffff800042266f : add al, ch ; sti ; ja 0xffffff8000422685 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800089eaef : add al, ch ; sti ; sub bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075bd90 : add al, ch ; stosb byte ptr [rdi], al ; insb byte ptr [rdi], dx ; ret
0xffffff80004822c0 : add al, ch ; stosb byte ptr [rdi], al ; jnp 0xffffff80004822d0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000291a50 : add al, ch ; stosb byte ptr [rdi], al ; movsxd rdi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000482cb0 : add al, ch ; stosb byte ptr [rdi], al ; ret
0xffffff80004ebf0f : add al, ch ; stosd dword ptr [rdi], eax ; pop rsp ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000767f0e : add al, ch ; sub al, 0xb1 ; ret 0x44ff
0xffffff800066241e : add al, ch ; sub al, 0xbd ; ret 0xebff
0xffffff800026d482 : add al, ch ; sub byte ptr [rax + 6], ch ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008b9772 : add al, ch ; sub byte ptr [rcx - 9], dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030b2b2 : add al, ch ; sub byte ptr [rdx], cl ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007ea890 : add al, ch ; sub dh, byte ptr [rbx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089ebaa : add al, ch ; sub dil, sil ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003093b1 : add al, ch ; sub dword ptr [rcx], ebp ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800075fd9d : add al, ch ; sub eax, 0x89001a92 ; ret
0xffffff80002f8be7 : add al, ch ; sub esp, -7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008827b2 : add al, ch ; test al, 0x91 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008825b2 : add al, ch ; test al, 0x93 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000866c42 : add al, ch ; test al, 0xa7 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030bd32 : add al, ch ; test al, 0xff ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008c0dd6 : add al, ch ; test byte ptr [rbx - 0x76b7000a], ch ; ret
0xffffff8000767576 : add al, ch ; test byte ptr [rcx], dh ; ret
0xffffff8000896c66 : add al, ch ; test byte ptr [rdi - 0x76b70009], ah ; ret
0xffffff80007fc0e6 : add al, ch ; test byte ptr [rdi - 0x76b70057], dh ; ret
0xffffff80004c6846 : add al, ch ; test byte ptr [rdi], bl ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80008598b5 : add al, ch ; test dword ptr [rcx - 3], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000437e71 : add al, ch ; test eax, 0x89003b3d ; ret
0xffffff80007f9b6f : add al, ch ; wait ; test al, 0xb5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c4364 : add al, ch ; xchg al, dl ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c1594 : add al, ch ; xchg ax, cx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000760114 : add al, ch ; xchg byte ptr [rdi], ah ; ret
0xffffff80008aeb33 : add al, ch ; xchg dword ptr [rsi - 6], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004020b5 : add al, ch ; xchg eax, ebp ; imul eax, dword ptr [rax + rax], -0x77 ; ret
0xffffff8000379577 : add al, ch ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000273ab9 : add al, ch ; xchg eax, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; jmp 0xffffff8000273a8b
0xffffff8000281eb9 : add al, ch ; xchg eax, ecx ; ret 0
0xffffff80004e4ea9 : add al, ch ; xchg eax, ecx ; xchg eax, edx ; ret 0x41ff
0xffffff8000310613 : add al, ch ; xchg eax, edi ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ee105 : add al, ch ; xchg eax, edi ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007690a7 : add al, ch ; xchg eax, edi ; ret 0x48ff
0xffffff80007682a8 : add al, ch ; xchg eax, edx ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0xffffff8000831354 : add al, ch ; xchg eax, esi ; add dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800034b6e4 : add al, ch ; xchg eax, esi ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007c1f14 : add al, ch ; xchg eax, esi ; ret 0xffac
0xffffff8000546da4 : add al, ch ; xchg eax, esi ; ret 0xffe4
0xffffff800086cb76 : add al, ch ; xchg eax, esp ; popfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035ba66 : add al, ch ; xchg eax, esp ; ret
0xffffff80004b6696 : add al, ch ; xchg eax, esp ; ret 0xffed
0xffffff8000882813 : add al, ch ; xchg eax, r9d ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c1f07 : add al, ch ; xchg ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000855dc3 : add al, ch ; xchg edi, ecx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a74e3 : add al, ch ; xlatb ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076503f : add al, ch ; xlatb ; ret 0x31ff
0xffffff8000888883 : add al, ch ; xlatb ; xor dl, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000772ac6 : add al, ch ; xor al, 0x7c ; ret 0x49ff
0xffffff80002b0864 : add al, ch ; xor al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075490a : add al, ch ; xor bh, ah ; ret
0xffffff8000700d68 : add al, ch ; xor bl, byte ptr [rsi - 0x3fce001f] ; pop rbp ; ret
0xffffff8000742e3a : add al, ch ; xor byte ptr [rdx - 0x4b], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055714e : add al, ch ; xor byte ptr [rdx], r12b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800030bea9 : add al, ch ; xor esi, edi ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000797987 : add al, ch ; xor esp, dword ptr [rdx - 0x76b70005] ; ret
0xffffff8000888913 : add al, ch ; xor r10b, r15b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b3d86 : add al, cl ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008a9f16 : add al, dh ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000750393 : add al, dh ; and dword ptr [rdi], 0xffffffdf ; pop rbp ; ret
0xffffff8000327357 : add al, dh ; cmpxchg qword ptr [r8], rcx ; xor eax, eax ; pop rbp ; ret
0xffffff80007ce565 : add al, dh ; inc dword ptr [rip + 0x366107] ; pop rbp ; ret
0xffffff80006306de : add al, dh ; inc dword ptr [rip + 0x43fbda] ; pop rbp ; ret
0xffffff800062e589 : add al, dh ; inc dword ptr [rip + 0x441aaf] ; pop rbp ; ret
0xffffff800055063a : add al, dh ; inc dword ptr [rip + 0x5d1226] ; pop rbp ; ret
0xffffff8000750373 : add al, dh ; or dword ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80005e707a : add al, dh ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff800080df88 : add al, dh ; xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000899c56 : add al, dl ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006784bb : add al, r13b ; fisubr word ptr [rdx] ; ret 0x48ff
0xffffff800053e1bc : add al, r13b ; in eax, dx ; call rsp
0xffffff800053e20a : add al, r13b ; lahf ; call rsp
0xffffff80006000de : add al, r13b ; mov esi, dword ptr [rdi - 0x37] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800068c383 : add al, r13b ; push rsi ; ret 0xffd0
0xffffff80004b5e96 : add al, r13b ; ret
0xffffff800059fb77 : add al, r13b ; ret 0xdf34
0xffffff8000827d7c : add bh, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004af5b1 : add bh, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff80006db6b5 : add bh, al ; add eax, 0x399cd8 ; push rax ; ret
0xffffff80005a902d : add bh, al ; add eax, 0x5301f0 ; push rax ; ret
0xffffff800028810f : add bh, al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002ba31a : add bh, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fcca9 : add bh, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000278a1c : add bh, al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800048ab4b : add bh, al ; test dword ptr [rbp + rdi*8 - 1], eax ; call qword ptr [rsi]
0xffffff800044fc77 : add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rax]
0xffffff8000553bf6 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0xffffff8000557bb8 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0xffffff80005639d0 : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0xffffff8000563d3f : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0xffffff80004b22eb : add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff80004ac5e6 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rcx]
0xffffff80004e06d6 : add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rdi]
0xffffff80004ddbef : add bh, al ; test dword ptr [rsi + rdi*8 - 1], ecx ; call qword ptr [rcx]
0xffffff8000393170 : add bh, bh ; adc eax, 0x782339 ; leave ; ret
0xffffff8000393136 : add bh, bh ; adc eax, 0x782373 ; leave ; ret
0xffffff8000392b4b : add bh, bh ; adc eax, 0x78295e ; leave ; ret
0xffffff8000392b11 : add bh, bh ; adc eax, 0x782998 ; leave ; ret
0xffffff800039299b : add bh, bh ; adc eax, 0x782b0e ; leave ; ret
0xffffff8000392656 : add bh, bh ; adc eax, 0x782e53 ; leave ; ret
0xffffff8000392522 : add bh, bh ; adc eax, 0x782f87 ; leave ; ret
0xffffff80002b7b18 : add bh, bh ; add byte ptr [rbp - 0x38bbf001], al ; pop rbp ; ret
0xffffff80003b2399 : add bh, bh ; add byte ptr [rdi], cl ; ret 0xf41
0xffffff80002ea93b : add bh, bh ; add eax, 0x8066d6 ; pop rbp ; ret
0xffffff80006a1f84 : add bh, bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800037fc84 : add bh, bh ; dec dword ptr [rax + 0x39] ; ret 0xbb
0xffffff800083bbd1 : add bh, bh ; dec dword ptr [rax + 0xf] ; ret 0x148
0xffffff80005929a9 : add bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800047f866 : add bh, bh ; dec dword ptr [rax - 0x7f] ; ret 0xffff
0xffffff80003a48a5 : add bh, bh ; dec ecx ; ret
0xffffff80003b281f : add bh, bh ; enter -0x638b, 0x5d ; ret
0xffffff8000322b6d : add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x4f74
0xffffff8000322ae5 : add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0xffffff800025a57e : add bh, bh ; jmp qword ptr [rbx]
0xffffff800085ea12 : add bh, bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000820946 : add bh, bh ; nop ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008be614 : add bh, bh ; nop ; or qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0xc7b8
0xffffff800053edfd : add bh, bh ; or byte ptr [r8 - 0x7d], r9b ; ret
0xffffff80006d7a29 : add bh, bh ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000842bef : add bh, bh ; push rdi ; ret
0xffffff800026885f : add bh, bh ; ret
0xffffff8000285999 : add bh, bh ; ret 0x12b8
0xffffff80003b4730 : add bh, bh ; ret 0x1589
0xffffff800026ab5d : add bh, bh ; ret 0x3145
0xffffff800084d66f : add bh, bh ; ret 0x3944
0xffffff80007944e8 : add bh, bh ; ret 0x5439
0xffffff800051d51f : add bh, bh ; ret 0x5589
0xffffff80005a0543 : add bh, bh ; ret 0x5789
0xffffff800026651c : add bh, bh ; ret 0x8348
0xffffff8000844f58 : add bh, bh ; ret 0x850f
0xffffff80005c6378 : add bh, bh ; ret 0x8941
0xffffff8000496f26 : add bh, bh ; ret 0x8948
0xffffff80005739ee : add bh, bh ; ret 0x894c
0xffffff800048780f : add bh, bh ; ret 0x8b48
0xffffff800084f67f : add bh, bh ; ret 0x8b49
0xffffff800053a4ff : add bh, bh ; ret 0x8b4d
0xffffff8000394c76 : add bh, bh ; ret 0xc148
0xffffff80005f2135 : add bh, bh ; ret 0xc985
0xffffff80007a239f : add bh, bh ; ret 0xd089
0xffffff80007c09d8 : add bh, bh ; ret 0xd139
0xffffff80002d6faf : add bh, bh ; ret 0xda39
0xffffff80004eefed : add bh, bh ; ret 0xee75
0xffffff80002d6f29 : add bh, bh ; ret 0xf239
0xffffff800084d8ff : add bh, bh ; ret 0xfa39
0xffffff800071c3ab : add bh, bh ; ret 0xff81
0xffffff80008ef4c1 : add bh, bh ; sar bh, 1 ; ret
0xffffff800034d935 : add bh, bh ; shr cl, 1 ; ret
0xffffff800062d4fb : add bh, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006c8468 : add bh, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007715aa : add bh, bl ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff800064faf1 : add bh, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065e99a : add bh, bl ; ret 0x66ff
0xffffff8000680322 : add bh, byte ptr [rax + 0x16] ; cmove eax, edx ; jmp 0xffffff80006802d8
0xffffff80002d17e2 : add bh, byte ptr [rax + 1] ; pop rbp ; ret
0xffffff80002a581e : add bh, byte ptr [rax + 2] ; pop rbp ; ret
0xffffff80002a57a7 : add bh, byte ptr [rax + 3] ; pop rbp ; ret
0xffffff800078c6f8 : add bh, byte ptr [rbp - 0x1b] ; pop rbp ; ret
0xffffff8000827264 : add bh, byte ptr [rcx + 0x1c] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0xffffff8000451efe : add bh, byte ptr [rcx] ; bnd jle 0xffffff8000451ef9 ; movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff800061d520 : add bh, byte ptr [rcx] ; ret 0x470f
0xffffff80006051b7 : add bh, byte ptr [rcx] ; ret 0x850f
0xffffff80004489f1 : add bh, byte ptr [rdi + 2] ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff80008959ea : add bh, byte ptr [rdx - 0x76b70009] ; ret
0xffffff80002f23ea : add bh, byte ptr [rdx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066daef : add bh, byte ptr [rdx] ; inc rdx ; jmp 0xffffff800066db14
0xffffff80007b0942 : add bh, byte ptr [rsi + rdx - 0x18] ; xchg eax, esi ; ret 5
0xffffff80005f5612 : add bh, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007818ec : add bh, ch ; dec dword ptr [rax - 0x77] ; ret
0xffffff800061cfd6 : add bh, ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800062e0da : add bh, ch ; xor eax, eax ; pop rbp ; ret
0xffffff800075613c : add bh, cl ; ret
0xffffff8000624cfc : add bh, dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007e1b24 : add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b40add : add bh, dh ; fdivr dword ptr [rcx] ; ret 0xb60f
0xffffff800025f3b7 : add bh, dh ; ret
0xffffff80002637d3 : add bh, dh ; ret 0
0xffffff8000796178 : add bh, dh ; ret 0x80b9
0xffffff80007c9d23 : add bh, dh ; ret 0xff3d
0xffffff80003355c5 : add bh, dh ; ret 0xfff7
0xffffff800084d9a9 : add bh, dh ; ret 0xffff
0xffffff800078a897 : add bh, dh ; shl byte ptr [rcx], 1 ; ret 0x8b41
0xffffff80002886bc : add bh, dh ; xlatb ; and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff8000392882 : add bl, al ; xor eax, eax ; ret
0xffffff80005f0019 : add bl, bh ; pop rbp ; ret
0xffffff80003a24d3 : add bl, bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006b1728 : add bl, byte ptr [rbp - 0x3d] ; mov eax, 0xe ; pop rbp ; ret
0xffffff80007820e4 : add bl, byte ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000604765 : add bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d2c0a : add bl, byte ptr [rsi - 0x76b70007] ; ret
0xffffff80006a1eaa : add bl, byte ptr [rsi] ; ret
0xffffff8000622da1 : add bl, ch ; adc byte ptr [rax - 0x7f], cl ; ret
0xffffff800025c858 : add bl, ch ; add al, 0xff ; ret 0xd389
0xffffff80008f5f7d : add bl, ch ; add bh, bh ; ret
0xffffff8000815221 : add bl, ch ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006077b1 : add bl, ch ; add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x177f
0xffffff8000606645 : add bl, ch ; add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x1f7f
0xffffff800053aa30 : add bl, ch ; add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x247f
0xffffff80008f569a : add bl, ch ; add eax, 0xff001f0f ; ret
0xffffff8000494ffd : add bl, ch ; add eax, 0xff48028a ; ret 0xbe0f
0xffffff80002b4acd : add bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0xffffff800035d77a : add bl, ch ; and cl, byte ptr [rax + 0x63] ; ret
0xffffff80006ec6f5 : add bl, ch ; enter -0x479a, 0x15 ; add bl, ch ; ret 0x9066
0xffffff800088d3c5 : add bl, ch ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000749c92 : add bl, ch ; jmp 0xffffff7fe674bbb1
0xffffff8000749fab : add bl, ch ; jmp 0xffffff80005c3020
0xffffff8000749ecd : add bl, ch ; jmp 0xffffff8000749ec3
0xffffff8000334b4a : add bl, ch ; jo 0xffffff8000334b9f ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008d545d : add bl, ch ; jo 0xffffff80008d5420 ; ret 2
0xffffff8000292bb0 : add bl, ch ; mov esi, 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff800044fb35 : add bl, ch ; mov rsi, qword ptr [r9 + 0x68] ; mov rdi, r14 ; call rdx
0xffffff80003c9ae8 : add bl, ch ; or al, 0xff ; ret 0x5589
0xffffff800077869d : add bl, ch ; or bh, bh ; ret 0x1589
0xffffff800053284b : add bl, ch ; or bh, bh ; ret 0x4166
0xffffff800025c5b9 : add bl, ch ; or bh, bh ; ret 0xd089
0xffffff80002a50d6 : add bl, ch ; or byte ptr [rax - 0x77], cl ; fucomip st(0) ; call rdx
0xffffff8000289eef : add bl, ch ; or byte ptr [rax - 0x77], cl ; ret 0xf6e8
0xffffff800041427b : add bl, ch ; or cl, byte ptr [rax - 0x77] ; ret 0x8148
0xffffff800058e59d : add bl, ch ; or cl, byte ptr [rax - 0x7f] ; ret
0xffffff800039b356 : add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret 0xbe08
0xffffff80007602de : add bl, ch ; or eax, 0xe8df8948 ; mul dword ptr [rax] ; ret
0xffffff800025c91c : add bl, ch ; or edi, edi ; ret 0xd089
0xffffff800080f460 : add bl, ch ; or esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff80002543ff : add bl, ch ; pop rcx ; lea rdx, [rdx + rax*8] ; jmp 0xffffff8000254420
0xffffff800025d667 : add bl, ch ; ret
0xffffff800025863d : add bl, ch ; ret 0x4855
0xffffff80007a8dfe : add bl, ch ; ret 0x5be
0xffffff80005e530f : add bl, ch ; ret 0x6666
0xffffff800090984b : add bl, ch ; ret 0x8348
0xffffff800027fce6 : add bl, ch ; ret 0x8d48
0xffffff80006ec6fb : add bl, ch ; ret 0x9066
0xffffff800090977b : add bl, ch ; ret 0xade8
0xffffff8000568cb6 : add bl, ch ; ret 0xf883
0xffffff80008ec7d5 : add bl, ch ; ret 0xfdfb
0xffffff80005121a1 : add bl, ch ; ret 0xfec5
0xffffff800029d0e8 : add bl, ch ; sbb cl, byte ptr [rax - 0x7d] ; ret
0xffffff80008bf863 : add bl, ch ; sbb eax, dword ptr [rcx - 0x42] ; ret 2
0xffffff80005b76e5 : add bl, ch ; shr al, 1 ; ret
0xffffff80008ad79c : add bl, ch ; sub dword ptr [rax - 0x76e7bc75], edx ; ret 0xdaf7
0xffffff80006cef23 : add bl, ch ; test al, 0x81 ; ret 0x7fcf
0xffffff8000665d32 : add bl, ch ; wait ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d2e8b : add bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff800038946c : add bl, cl ; call rdi
0xffffff80007543ec : add bl, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff800080d086 : add bl, dh ; movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, r8d ; pop rbp ; ret
0xffffff80002bbe8e : add bl, dh ; pop rbp ; ret
0xffffff80004e033a : add bl, dh ; ret 0xc7ff
0xffffff800029f436 : add bl, dl ; call 0xffffff800da2b66a
0xffffff8000410a25 : add bl, dl ; loop 0xffffff8000410a36 ; ret 0x8d41
0xffffff8000410a3f : add bl, dl ; loop 0xffffff8000410a50 ; ret 0x8d41
0xffffff8000410a59 : add bl, dl ; loop 0xffffff8000410a6a ; ret 0x8d41
0xffffff800041175e : add bl, dl ; loop 0xffffff800041175f ; shl byte ptr [rcx], cl ; ret 0xfe83
0xffffff80006037e5 : add bl, dl ; loop 0xffffff80006037f6 ; ret 0x8941
0xffffff800060380b : add bl, dl ; loop 0xffffff800060381c ; ret 0x8941
0xffffff8000603fac : add bl, dl ; loop 0xffffff8000603fbd ; ret 0x8941
0xffffff8000603fd2 : add bl, dl ; loop 0xffffff8000603fe3 ; ret 0x8941
0xffffff8000626204 : add bl, dl ; loop 0xffffff8000626245 ; ret 0x1073
0xffffff80006307ea : add bl, dl ; loop 0xffffff80006307f3 ; ret 0xd639
0xffffff800071c6e4 : add bl, dl ; loop 0xffffff800071c6e6 ; shl byte ptr [rsi - 0x3f], cl ; ret 0x6608
0xffffff800030f5cf : add bl, dl ; loopne 0xffffff800030f5db ; enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff800030f5f0
0xffffff8000315b9c : add bl, dl ; loopne 0xffffff8000315ba8 ; enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff8000315bbd
0xffffff800031f275 : add bl, dl ; loopne 0xffffff800031f280 ; enter -0x67b8, 0x5d ; ret
0xffffff800031f255 : add bl, dl ; loopne 0xffffff800031f2ba ; ret
0xffffff8000395272 : add bl, dl ; loopne 0xffffff80003952a0 ; add al, 0x96 ; pop rbp ; ret
0xffffff800062eb56 : add bl, dl ; loopne 0xffffff800062eb97 ; ret 0x420f
0xffffff80004a0c8c : add byte ptr [eax - 0x77], cl ; ret 0xf631
0xffffff8000496f21 : add byte ptr [eax], al ; add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0xffffff80008dcc3a : add byte ptr [eax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800049d249 : add byte ptr [ebx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002d1e64 : add byte ptr [esi + 0x721], bh ; call 0xffffff800028e159
0xffffff80006296c4 : add byte ptr [r11 + 0x440f0ac0], r8b ; ret
0xffffff80005f37ba : add byte ptr [r11 + 0x4789ca05], r9b ; add byte ptr [rcx], bh ; ret 0x6376
0xffffff800063acf9 : add byte ptr [r11 - 0x7df0fc08], al ; ret 0
0xffffff8000570edf : add byte ptr [r13 + rcx*4 + 0x2d], cl ; ret
0xffffff8000839735 : add byte ptr [r13 - 0x3e6bf040], 0xf ; xchg eax, ebp ; ret 0x8948
0xffffff80008e7d47 : add byte ptr [r13 - 0x73], r9b ; add al, 0x83 ; ret
0xffffff80006a1efc : add byte ptr [r14 + 0x1c], dil ; call 0xffffff800010e149
0xffffff80007a0a1b : add byte ptr [r14 - 0x42], spl ; ret
0xffffff800034c76c : add byte ptr [r14 - 0x7b], r12b ; ror byte ptr [rdi], 0x94 ; ret 0xa9
0xffffff8000451ebf : add byte ptr [r15], cl ; mov dh, 0x44 ; or bh, bh ; pop rbp ; ret
0xffffff800062b51a : add byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xc085
0xffffff80008c10fd : add byte ptr [r8 + 0x39], r9b ; ret 0xc74
0xffffff800062903a : add byte ptr [r8 + 0x9417501], r13b ; ret 0xc2f6
0xffffff800057a2e7 : add byte ptr [r8 + 0xf], cl ; ret 0x8948
0xffffff8000695043 : add byte ptr [r8 + 1], r9b ; ret 0x8b48
0xffffff80005562e3 : add byte ptr [r8 - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80006aa43f : add byte ptr [r8 - 0x77], cl ; fsubp st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80006a618c : add byte ptr [r8 - 0x77], cl ; fsubp st(0) ; pop rdx ; in eax, dx ; ret 0x4cff
0xffffff80006a5d51 : add byte ptr [r8 - 0x77], cl ; fsubp st(0) ; xchg eax, ebp ; int1 ; ret 0x41ff
0xffffff80006a6150 : add byte ptr [r8 - 0x77], cl ; fsubp st(0) ; xchg eax, esi ; in eax, dx ; ret 0xebff
0xffffff8000690986 : add byte ptr [r8 - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff80006784d5 : add byte ptr [r8 - 0x77], cl ; ret 0x1e8
0xffffff80006d6152 : add byte ptr [r8 - 0x77], cl ; ret 0x4865
0xffffff800063f662 : add byte ptr [r8 - 0x77], cl ; ret 0x74e8
0xffffff8000605fd2 : add byte ptr [r8 - 0x77], r9b ; fisttp word ptr [rax - 0x77] ; ret 0x1e8
0xffffff8000664370 : add byte ptr [r8 - 0x77], r9b ; fisttp word ptr [rax - 0x77] ; ret 0x63e8
0xffffff80005f2533 : add byte ptr [r8 - 0x77], r9b ; fsubp st(0) ; ret
0xffffff8000681db4 : add byte ptr [r8 - 0x77], r9b ; iretd ; pop rbp ; jmp r8
0xffffff8000505c1d : add byte ptr [r8 - 0x77], r9b ; ret
0xffffff80006b4ab7 : add byte ptr [r8 - 0x77], r9b ; ret 0x1fe8
0xffffff800062f0ad : add byte ptr [r8 - 0x77], r9b ; ret 0x29e8
0xffffff8000605d75 : add byte ptr [r8 - 0x77], r9b ; ret 0x61e8
0xffffff80006b4a73 : add byte ptr [r8 - 0x77], r9b ; ret 0x63e8
0xffffff80006d796c : add byte ptr [r8 - 0x77], r9b ; ret 0x6ae8
0xffffff8000605a46 : add byte ptr [r8 - 0x77], r9b ; ret 0x90e8
0xffffff80005e8b26 : add byte ptr [r8 - 0x77], r9b ; ret 0xb0e8
0xffffff8000328ab4 : add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rsi + rdi + 0x48], 0x39 ; ret
0xffffff80006d7bf1 : add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rsp + rbx + 0x48], 0x89 ; ret
0xffffff800048c6a2 : add byte ptr [r8 - 0x7d], r9b ; ret
0xffffff80002f77df : add byte ptr [r8], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000361fe0 : add byte ptr [r8], al ; add byte ptr [rax + 0x29], cl ; ret 0x8148
0xffffff8000b483da : add byte ptr [r8], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x14c
0xffffff80005630bb : add byte ptr [r8], al ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80004c59a3 : add byte ptr [r8], r8b ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80002d6af9 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8341
0xffffff8000788cd7 : add byte ptr [r8], r8b ; mov eax, 4 ; pop rbp ; ret
0xffffff80002a15a8 : add byte ptr [r8], r8b ; xor eax, eax ; pop rbp ; ret
0xffffff800038b262 : add byte ptr [r8], r8b ; xor edx, edx ; wrmsr ; pop rbp ; ret
0xffffff80006a588b : add byte ptr [r9 + r9*4 - 0x12], cl ; call 0xffffff80002d4ef8
0xffffff80006a696e : add byte ptr [r9 + r9*4 - 0x1a], cl ; call 0xffffff80002d4ef8
0xffffff80006a65c5 : add byte ptr [r9 + r9*4 - 0xa], cl ; call 0xffffff80002d4ef8
0xffffff800062434d : add byte ptr [r9 - 0x7f], al ; call qword ptr [rdi]
0xffffff80005f37c0 : add byte ptr [r9], r15b ; ret 0x6376
0xffffff800062de94 : add byte ptr [r9], r15b ; ror byte ptr [rdi], 1 ; ret 0x8189
0xffffff800061873b : add byte ptr [r9], r15b ; ror byte ptr [rdi], 1 ; ret 0x8389
0xffffff80006191b0 : add byte ptr [r9], r15b ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff80008ec7d0 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add bl, ch ; ret 0xfdfb
0xffffff80005e0538 : add byte ptr [r9], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006326b8 : add byte ptr [r9], r8b ; cmp eax, 0x4f231c ; pop rbp ; ret
0xffffff8000632698 : add byte ptr [r9], r8b ; cmp eax, 0x4f232c ; pop rbp ; ret
0xffffff8000632678 : add byte ptr [r9], r8b ; cmp eax, 0x4f2354 ; pop rbp ; ret
0xffffff8000632658 : add byte ptr [r9], r8b ; cmp eax, 0x4f2364 ; pop rbp ; ret
0xffffff800062b978 : add byte ptr [r9], r8b ; cmp eax, 0x4f8394 ; pop rbp ; ret
0xffffff800062b958 : add byte ptr [r9], r8b ; cmp eax, 0x4f83a4 ; pop rbp ; ret
0xffffff800062b938 : add byte ptr [r9], r8b ; cmp eax, 0x4f83cc ; pop rbp ; ret
0xffffff800062b918 : add byte ptr [r9], r8b ; cmp eax, 0x4f83dc ; pop rbp ; ret
0xffffff80005fb868 : add byte ptr [r9], r8b ; pop rbp ; ret
0xffffff8000572247 : add byte ptr [r9], sil ; shr al, 0x50 ; ret 0xffd1
0xffffff800057210f : add byte ptr [r9], sil ; shr al, 0x88 ; ret
0xffffff80005520f7 : add byte ptr [r9], sil ; shr al, 0xa0 ; ret
0xffffff80004bc531 : add byte ptr [rax + 0x100000], bh ; cmovae eax, edx ; pop rbp ; ret
0xffffff80006cef1e : add byte ptr [rax + 0x11], bh ; jmp 0xffffff80006ceed7
0xffffff800050bf8e : add byte ptr [rax + 0x14], bh ; pop rbp ; ret
0xffffff80005158fa : add byte ptr [rax + 0x16], bh ; pop rbp ; ret
0xffffff8000b45159 : add byte ptr [rax + 0x21480040], al ; ret
0xffffff8000b49633 : add byte ptr [rax + 0x21485000], al ; ret 0x148
0xffffff800073d865 : add byte ptr [rax + 0x21], cl ; fmul dword ptr [rax + 0x39] ; ret
0xffffff80002665e8 : add byte ptr [rax + 0x21], cl ; ret
0xffffff800026fbab : add byte ptr [rax + 0x21], cl ; ret 0x294c
0xffffff80002d8337 : add byte ptr [rax + 0x21], cl ; ret 0x8948
0xffffff800057921a : add byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff80003a5288 : add byte ptr [rax + 0x21], cl ; ret 0x8b49
0xffffff8000302e18 : add byte ptr [rax + 0x21], cl ; ret 0x8d48
0xffffff800037b849 : add byte ptr [rax + 0x21], cl ; ret 0xc748
0xffffff8000319b44 : add byte ptr [rax + 0x21], cl ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret 0xb60f
0xffffff8000348e85 : add byte ptr [rax + 0x21], cl ; ror dword ptr [rax + 0xf], 1 ; ret
0xffffff800062e205 : add byte ptr [rax + 0x25], bh ; cmove eax, edx ; pop rbp ; ret
0xffffff80007f0609 : add byte ptr [rax + 0x25], cl ; add byte ptr [rax], al ; add byte ptr [rax], 0x5d ; ret
0xffffff800062e204 : add byte ptr [rax + 0x25], r15b ; cmove eax, edx ; pop rbp ; ret
0xffffff8000795d50 : add byte ptr [rax + 0x29], cl ; clc ; cdqe ; pop rbp ; ret
0xffffff80007952cb : add byte ptr [rax + 0x29], cl ; clc ; pop rbp ; ret
0xffffff80003b6e15 : add byte ptr [rax + 0x29], cl ; ret
0xffffff800054d893 : add byte ptr [rax + 0x29], cl ; ret 0x149
0xffffff8000795f27 : add byte ptr [rax + 0x29], cl ; ret 0x16b8
0xffffff8000399743 : add byte ptr [rax + 0x29], cl ; ret 0x3948
0xffffff800035dc66 : add byte ptr [rax + 0x29], cl ; ret 0x8148
0xffffff800083e7e6 : add byte ptr [rax + 0x29], cl ; ret 0x8341
0xffffff80004dca46 : add byte ptr [rax + 0x29], cl ; ret 0x894c
0xffffff800083e196 : add byte ptr [rax + 0x29], cl ; ret 0x8b44
0xffffff80004ba34e : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0xffffff80004c59a6 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80004ee99e : add byte ptr [rax + 0x29], cl ; ret 0x8d4d
0xffffff80008e45f4 : add byte ptr [rax + 0x29], cl ; ret 0xb948
0xffffff800083ee13 : add byte ptr [rax + 0x29], cl ; ret 0xc931
0xffffff8000796fad : add byte ptr [rax + 0x29], cl ; ret 0xcae9
0xffffff80002c0a31 : add byte ptr [rax + 0x2b], cl ; add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff80003992dc : add byte ptr [rax + 0x2b], cl ; xor al, 0x24 ; mov qword ptr [rcx], rsi ; pop rdi ; ret
0xffffff80004ed2e7 : add byte ptr [rax + 0x2d], bh ; pop rbp ; ret
0xffffff8000336c68 : add byte ptr [rax + 0x31427440], ch ; div dh ; ret 0x7519
0xffffff800039a771 : add byte ptr [rax + 0x31], cl ; in eax, dx ; call rcx
0xffffff800039a78f : add byte ptr [rax + 0x31], cl ; in eax, dx ; mov rsp, rsi ; call rdi
0xffffff8000382d0a : add byte ptr [rax + 0x31], cl ; ret
0xffffff8000345c06 : add byte ptr [rax + 0x39], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003ab791 : add byte ptr [rax + 0x39], cl ; enter -0x6df1, -0x3e ; movzx eax, dl ; pop rbp ; ret
0xffffff80005da598 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000250a14 : add byte ptr [rax + 0x39], cl ; ret
0xffffff800046af4f : add byte ptr [rax + 0x39], cl ; ret 0x137d
0xffffff8000829113 : add byte ptr [rax + 0x39], cl ; ret 0x1777
0xffffff80003cad32 : add byte ptr [rax + 0x39], cl ; ret 0x187d
0xffffff80002da455 : add byte ptr [rax + 0x39], cl ; ret 0x1b2
0xffffff800028a47d : add byte ptr [rax + 0x39], cl ; ret 0x2f77
0xffffff80002da3b5 : add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff800044c971 : add byte ptr [rax + 0x39], cl ; ret 0x3d7d
0xffffff8000866906 : add byte ptr [rax + 0x39], cl ; ret 0x574
0xffffff80004ba35f : add byte ptr [rax + 0x39], cl ; ret 0x637e
0xffffff80005c807d : add byte ptr [rax + 0x39], cl ; ret 0x676
0xffffff80007850d5 : add byte ptr [rax + 0x39], cl ; ret 0x677
0xffffff80008c1c9b : add byte ptr [rax + 0x39], cl ; ret 0x6b74
0xffffff80005e1008 : add byte ptr [rax + 0x39], cl ; ret 0x820f
0xffffff800026ef55 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff8000335aa3 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0xffffff800053d485 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0xffffff800043c347 : add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0xffffff8000298e38 : add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0xffffff800030e099 : add byte ptr [rax + 0x39], cl ; ret 0x9176
0xffffff8000335a79 : add byte ptr [rax + 0x39], cl ; ret 0x950f
0xffffff800029e9e4 : add byte ptr [rax + 0x39], cl ; ret 0x97d
0xffffff800043cb42 : add byte ptr [rax + 0x39], cl ; ret 0x9d0f
0xffffff80004ba461 : add byte ptr [rax + 0x39], cl ; ret 0x9f0f
0xffffff800028e550 : add byte ptr [rax + 0x39], cl ; ret 0xa7d
0xffffff80008024fb : add byte ptr [rax + 0x39], cl ; ret 0xae75
0xffffff80008c10fe : add byte ptr [rax + 0x39], cl ; ret 0xc74
0xffffff80007850f0 : add byte ptr [rax + 0x39], cl ; ret 0xd76
0xffffff800028a49f : add byte ptr [rax + 0x39], cl ; ret 0xd77
0xffffff800076cdb1 : add byte ptr [rax + 0x39], cl ; ret 0xde7c
0xffffff8000771725 : add byte ptr [rax + 0x39], cl ; ret 0xe572
0xffffff80007717e1 : add byte ptr [rax + 0x39], cl ; ret 0xe972
0xffffff80002caed7 : add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0xffffff80004d7119 : add byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; ret 0x8589
0xffffff80006d4f99 : add byte ptr [rax + 0x39], cl ; sal dword ptr [rdi + rbp + 0x48], 0x83 ; ret
0xffffff80002cb135 : add byte ptr [rax + 0x39], cl ; stc ; ja 0xffffff80002cb146 ; xor eax, eax ; pop rbp ; ret
0xffffff80005f09af : add byte ptr [rax + 0x39], r9b ; ret
0xffffff8000b45156 : add byte ptr [rax + 0x40800002], dl ; add byte ptr [rax + 0x21], cl ; ret
0xffffff800034f898 : add byte ptr [rax + 0x415b007a], ch ; pop rsi ; pop rbp ; ret
0xffffff800053a63f : add byte ptr [rax + 0x415b0575], al ; pop rsi ; pop rbp ; ret
0xffffff800070e0c3 : add byte ptr [rax + 0x415bfe23], al ; pop rsi ; pop rbp ; ret
0xffffff8000704542 : add byte ptr [rax + 0x430f4c00], ah ; ret 0x149
0xffffff800044d445 : add byte ptr [rax + 0x450f4c01], ch ; ret
0xffffff80006135d6 : add byte ptr [rax + 0x48], al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005af0bd : add byte ptr [rax + 0x48], bh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000399449 : add byte ptr [rax + 0x48ffffff], al ; or eax, edi ; pop rbp ; ret
0xffffff8000818dd6 : add byte ptr [rax + 0x5b000000], ah ; pop r14 ; pop rbp ; ret
0xffffff8000881303 : add byte ptr [rax + 0x5b000000], al ; pop r14 ; pop rbp ; ret
0xffffff80008ad336 : add byte ptr [rax + 0x5b000000], bh ; pop r14 ; pop rbp ; ret
0xffffff80008aaae6 : add byte ptr [rax + 0x5b000000], bl ; pop r14 ; pop rbp ; ret
0xffffff80008ceb06 : add byte ptr [rax + 0x5b000000], ch ; pop r14 ; pop rbp ; ret
0xffffff8000862786 : add byte ptr [rax + 0x5b000000], cl ; pop r14 ; pop rbp ; ret
0xffffff8000881a36 : add byte ptr [rax + 0x5b000000], dh ; pop r14 ; pop rbp ; ret
0xffffff8000892456 : add byte ptr [rax + 0x5b000000], dl ; pop r14 ; pop rbp ; ret
0xffffff80002a228a : add byte ptr [rax + 0x5b009896], al ; pop r14 ; pop rbp ; ret
0xffffff8000862a10 : add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff800085cff0 : add byte ptr [rax + 0x5b], al ; pop r14 ; pop rbp ; ret
0xffffff8000893043 : add byte ptr [rax + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff8000882040 : add byte ptr [rax + 0x5b], bl ; pop r14 ; pop rbp ; ret
0xffffff800088ee10 : add byte ptr [rax + 0x5b], ch ; pop r14 ; pop rbp ; ret
0xffffff800082c1e0 : add byte ptr [rax + 0x5b], cl ; pop r14 ; pop rbp ; ret
0xffffff80008a52b3 : add byte ptr [rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff800082e0c0 : add byte ptr [rax + 0x5b], dl ; pop r14 ; pop rbp ; ret
0xffffff800072d9e9 : add byte ptr [rax + 0x5d01304f], al ; ret
0xffffff800072e119 : add byte ptr [rax + 0x5d01314f], al ; ret
0xffffff800072d97a : add byte ptr [rax + 0x5d01324f], al ; ret
0xffffff800072e599 : add byte ptr [rax + 0x5d01344f], al ; ret
0xffffff800072dbca : add byte ptr [rax + 0x5d01354f], al ; ret
0xffffff80006d6455 : add byte ptr [rax + 0x5d01414f], al ; ret
0xffffff800072da09 : add byte ptr [rax + 0x5d02304f], al ; ret
0xffffff800072d9b9 : add byte ptr [rax + 0x5d02314f], al ; ret
0xffffff800072db89 : add byte ptr [rax + 0x5d02324f], al ; ret
0xffffff800072e5aa : add byte ptr [rax + 0x5d02344f], al ; ret
0xffffff800040eeeb : add byte ptr [rax + 0x5d027502], ch ; ret
0xffffff80002a1f78 : add byte ptr [rax + 0x5d02faf0], al ; ret
0xffffff800072da29 : add byte ptr [rax + 0x5d04304f], al ; ret
0xffffff800072d999 : add byte ptr [rax + 0x5d04314f], al ; ret
0xffffff800072dd59 : add byte ptr [rax + 0x5d04324f], al ; ret
0xffffff800072dac9 : add byte ptr [rax + 0x5d04344f], al ; ret
0xffffff800072d9d9 : add byte ptr [rax + 0x5d08304f], al ; ret
0xffffff800072e5d6 : add byte ptr [rax + 0x5d08314f], al ; ret
0xffffff800072e549 : add byte ptr [rax + 0x5d08344f], al ; ret
0xffffff800047f576 : add byte ptr [rax + 0x5d08464f], al ; ret
0xffffff800072d9f9 : add byte ptr [rax + 0x5d10304f], al ; ret
0xffffff800072d9a9 : add byte ptr [rax + 0x5d10314f], al ; ret
0xffffff800072dd75 : add byte ptr [rax + 0x5d10344f], al ; ret
0xffffff800072eb09 : add byte ptr [rax + 0x5d10354f], al ; ret
0xffffff800072da19 : add byte ptr [rax + 0x5d20304f], al ; ret
0xffffff800072db9a : add byte ptr [rax + 0x5d20314f], al ; ret
0xffffff800072eb19 : add byte ptr [rax + 0x5d20354f], al ; ret
0xffffff800072dc09 : add byte ptr [rax + 0x5d40304f], al ; ret
0xffffff800072dbb9 : add byte ptr [rax + 0x5d40314f], al ; ret
0xffffff800072e559 : add byte ptr [rax + 0x5d40334f], al ; ret
0xffffff8000721081 : add byte ptr [rax + 0x5d5e415b], bl ; ret
0xffffff80004f9357 : add byte ptr [rax + 0x5d744723], al ; ret
0xffffff800072d9c9 : add byte ptr [rax + 0x5d80304f], al ; ret
0xffffff800072d95f : add byte ptr [rax + 0x5d80354f], al ; ret
0xffffff80007ff10f : add byte ptr [rax + 0x5d], al ; jmp rax
0xffffff800031eb6e : add byte ptr [rax + 0x5d], al ; ret
0xffffff80008cb31b : add byte ptr [rax + 0x5d], bh ; ret
0xffffff80007ff10e : add byte ptr [rax + 0x5d], r8b ; jmp rax
0xffffff8000526b59 : add byte ptr [rax + 0x5dc03106], cl ; ret
0xffffff8000372987 : add byte ptr [rax + 0x5dc0313f], al ; ret
0xffffff80003895d5 : add byte ptr [rax + 0x5dfe5060], al ; ret
0xffffff80008aa1a0 : add byte ptr [rax + 0x5e415b01], dh ; pop rbp ; ret
0xffffff800081a1b5 : add byte ptr [rax + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff800064e638 : add byte ptr [rax + 0x6348cb45], cl ; ret
0xffffff8000512c02 : add byte ptr [rax + 0x63], cl ; adc al, 0x81 ; add rdx, rcx ; jmp rdx
0xffffff80006b9707 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff8000272c20 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0xffffff800028684b : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0xffffff800035a343 : add byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0xffffff8000716b1e : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0xffffff80003b15ab : add byte ptr [rax + 0x63], cl ; adc al, 0x99 ; add rdx, rcx ; jmp rdx
0xffffff800039b8b6 : add byte ptr [rax + 0x63], cl ; adc al, 0xb0 ; add rdx, rax ; jmp rdx
0xffffff800028fe6b : add byte ptr [rax + 0x63], cl ; adc al, 0xb1 ; add rdx, rcx ; jmp rdx
0xffffff800080f450 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rdx, rax ; jmp rdx
0xffffff8000463c64 : add byte ptr [rax + 0x63], cl ; adc ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800027abc9 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0xffffff800027014d : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0xffffff8000281f29 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0xffffff80003b38ca : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0xffffff8000556569 : add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0xffffff80003a09f5 : add byte ptr [rax + 0x63], cl ; add al, 0x9e ; add rax, rsi ; jmp rax
0xffffff80007ea666 : add byte ptr [rax + 0x63], cl ; add al, 0xb1 ; add rax, rcx ; jmp rax
0xffffff80004c0517 : add byte ptr [rax + 0x63], cl ; cmp al, 0x98 ; add rdi, rax ; jmp rdi
0xffffff8000806805 : add byte ptr [rax + 0x63], cl ; cmp al, 0x99 ; add rdi, rcx ; jmp rdi
0xffffff8000584733 : add byte ptr [rax + 0x63], cl ; cmp al, 0xb8 ; add rdi, rax ; jmp rdi
0xffffff800026695d : add byte ptr [rax + 0x63], cl ; cmp al, 0xb9 ; add rdi, rcx ; jmp rdi
0xffffff800059071f : add byte ptr [rax + 0x63], cl ; cmp al, 0xba ; add rdi, rdx ; jmp rdi
0xffffff80003a38fc : add byte ptr [rax + 0x63], cl ; cmp al, 0xbb ; add rdi, rbx ; jmp rdi
0xffffff80005283af : add byte ptr [rax + 0x63], cl ; cmp al, 0xbe ; add rdi, rsi ; jmp rdi
0xffffff8000510b97 : add byte ptr [rax + 0x63], cl ; dec dword ptr [rax + 0x69] ; call rbx
0xffffff80002b8f86 : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rcx, rax ; jmp rcx
0xffffff8000270456 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rcx, rdx ; jmp rcx
0xffffff800044021e : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rcx, rsi ; jmp rcx
0xffffff80008be67d : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0xffffff8000286b94 : add byte ptr [rax + 0x63], cl ; or al, 0x90 ; add rcx, rax ; jmp rcx
0xffffff8000258311 : add byte ptr [rax + 0x63], cl ; or al, 0x98 ; add rcx, rax ; jmp rcx
0xffffff800028fc3f : add byte ptr [rax + 0x63], cl ; or al, 0xb0 ; add rcx, rax ; jmp rcx
0xffffff80002978cf : add byte ptr [rax + 0x63], cl ; or byte ptr [rax - 1], cl ; ret
0xffffff8000503d6f : add byte ptr [rax + 0x63], cl ; push rax ; and byte ptr [rax - 0x7d], cl ; ret 0xbee0
0xffffff80004460a1 : add byte ptr [rax + 0x63], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff800079535c : add byte ptr [rax + 0x63], cl ; push rdi ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff8000299619 : add byte ptr [rax + 0x63], cl ; ret
0xffffff800079a054 : add byte ptr [rax + 0x63], cl ; ret 0x6948
0xffffff8000509686 : add byte ptr [rax + 0x63], cl ; ret 0x8b49
0xffffff80002a0601 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff8000510ced : add byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff8000778875 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff8000661f73 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0xffffff8000661fc8 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4814
0xffffff80005c0864 : add byte ptr [rax + 0x63], cl ; sbb al, 0x99 ; add rbx, rcx ; jmp rbx
0xffffff800058fa95 : add byte ptr [rax + 0x63], cl ; sbb al, 0x9a ; add rbx, rdx ; jmp rbx
0xffffff8000597d53 : add byte ptr [rax + 0x63], cl ; sbb al, 0x9e ; add rbx, rsi ; jmp rbx
0xffffff800067be89 : add byte ptr [rax + 0x63], cl ; xor al, 0x91 ; add rsi, rcx ; jmp rsi
0xffffff800057a039 : add byte ptr [rax + 0x63], cl ; xor al, 0xb1 ; add rsi, rcx ; jmp rsi
0xffffff8000601068 : add byte ptr [rax + 0x63], cl ; xor al, 0xb2 ; add rsi, rdx ; jmp rsi
0xffffff80002a0a05 : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0xffffff800075f324 : add byte ptr [rax + 0x63], cl ; xor byte ptr [rax + 0x39], r9b ; ret
0xffffff80002aebbf : add byte ptr [rax + 0x69], cl ; ret
0xffffff800053203a : add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff8000289b73 : add byte ptr [rax + 0x69], cl ; ret 0xca00
0xffffff8000811512 : add byte ptr [rax + 0x75], al ; add eax, 0x5d5e415b ; ret
0xffffff800062903b : add byte ptr [rax + 0x9417501], ch ; ret 0xc2f6
0xffffff80003895ed : add byte ptr [rax + 0xc8a0], al ; add dh, bh ; pop rbp ; ret
0xffffff800070ad84 : add byte ptr [rax + 0xdb8], al ; add byte ptr [rdi], cl ; ret
0xffffff800029d471 : add byte ptr [rax + 0xe], bh ; pop rbp ; ret
0xffffff8000892941 : add byte ptr [rax + 0xf], al ; mov dh, 0xd6 ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff800033ab2c : add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret
0xffffff800031978a : add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x2eb
0xffffff8000318ce1 : add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x59eb
0xffffff800038a026 : add byte ptr [rax + 0xf], bh ; pop rbp ; ret
0xffffff800054ff74 : add byte ptr [rax + 0xf], cl ; enter 0x18b, 0x5d ; ret
0xffffff800029b6fe : add byte ptr [rax + 0xf], cl ; mov edi, 0x9c8948c0 ; ret 0x98
0xffffff80002bd12f : add byte ptr [rax + 0xf], cl ; ret
0xffffff800047c95b : add byte ptr [rax + 0xf], cl ; ret 0x148
0xffffff8000262a72 : add byte ptr [rax + 0xf], cl ; ret 0x3948
0xffffff8000427b26 : add byte ptr [rax + 0xf], cl ; ret 0x60ba
0xffffff80004724d0 : add byte ptr [rax + 0xf], cl ; ret 0x7589
0xffffff8000474ae9 : add byte ptr [rax + 0xf], cl ; ret 0x7d89
0xffffff80005cd8f8 : add byte ptr [rax + 0xf], cl ; ret 0x81f6
0xffffff8000267998 : add byte ptr [rax + 0xf], cl ; ret 0x8548
0xffffff80002a1308 : add byte ptr [rax + 0xf], cl ; ret 0x8944
0xffffff80002a75da : add byte ptr [rax + 0xf], cl ; ret 0x8948
0xffffff8000699ddd : add byte ptr [rax + 0xf], cl ; ret 0x8949
0xffffff80004868f1 : add byte ptr [rax + 0xf], cl ; ret 0x894b
0xffffff800031f4b1 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0xffffff80008460cc : add byte ptr [rax + 0xf], cl ; ret 0x8b4c
0xffffff80006fbf2a : add byte ptr [rax + 0xf], cl ; ret 0x8b66
0xffffff8000431870 : add byte ptr [rax + 0xf], cl ; ret 0xb60f
0xffffff80003d5111 : add byte ptr [rax + 0xf], cl ; ret 0xf41
0xffffff80003038f7 : add byte ptr [rax + 0xf], cl ; ret 0xf48
0xffffff8000386896 : add byte ptr [rax + 0xf], cl ; ror dword ptr [r8 - 0x7b], 1 ; ret 0x3874
0xffffff800046f3c3 : add byte ptr [rax + 0xf], cl ; ror dword ptr [rax + 1], 1 ; ret 0x3b48
0xffffff80008d0ebb : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; idiv edi ; ret 0xf875
0xffffff80006f1cda : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000b483dd : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x14c
0xffffff80002d9462 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x2948
0xffffff80006f0994 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0xffffff800071c3f0 : add byte ptr [rax + 0xfbf], al ; add dh, dh ; ret 0xf80
0xffffff8000325c3e : add byte ptr [rax + 0xfdb8548], dl ; xchg eax, esp ; ret 0x8b48
0xffffff800025e1ca : add byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff8000392568 : add byte ptr [rax + 1], bh ; ret
0xffffff800039a68c : add byte ptr [rax + 1], cl ; mov eax, 0x4a0 ; pop rbp ; ret
0xffffff8000250271 : add byte ptr [rax + 1], cl ; ret
0xffffff80004b3011 : add byte ptr [rax + 1], cl ; ret 0x348
0xffffff80005e369f : add byte ptr [rax + 1], cl ; ret 0x3948
0xffffff800036f476 : add byte ptr [rax + 1], cl ; ret 0x4c8b
0xffffff800084ac92 : add byte ptr [rax + 1], cl ; ret 0x8148
0xffffff80003564b0 : add byte ptr [rax + 1], cl ; ret 0x8548
0xffffff80006a19b1 : add byte ptr [rax + 1], cl ; ret 0x8948
0xffffff800083de99 : add byte ptr [rax + 1], cl ; ret 0x8949
0xffffff800043a2be : add byte ptr [rax + 1], cl ; ret 0x8b41
0xffffff80005d6868 : add byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff8000738451 : add byte ptr [rax + 1], cl ; ret 0xb966
0xffffff80005ccf4b : add byte ptr [rax + 1], cl ; ret 0xbf0f
0xffffff80003565dc : add byte ptr [rax + 1], cl ; ret 0xc931
0xffffff800066d9fa : add byte ptr [rax + 1], cl ; ret 0xf631
0xffffff8000b412f0 : add byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0xffffff8000785ec4 : add byte ptr [rax + 1], cl ; xchg dword ptr [rax + 0x5d000000], ecx ; ret
0xffffff800066d9f9 : add byte ptr [rax + 1], r9b ; ret 0xf631
0xffffff80008823c6 : add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c0852 : add byte ptr [rax + 3], cl ; add eax, 0x6996d6 ; pop rbp ; ret
0xffffff800036772c : add byte ptr [rax + 3], cl ; add eax, 0x76715c ; pop rbp ; ret
0xffffff8000317e8d : add byte ptr [rax + 3], cl ; mov r8d, 0xffffffba ; call rbx
0xffffff800028a860 : add byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff8000256ad1 : add byte ptr [rax + 5], bh ; pop rbp ; ret
0xffffff80002bce8c : add byte ptr [rax + 9], cl ; ret
0xffffff80002b8e34 : add byte ptr [rax + 9], cl ; ret 0x8148
0xffffff80008d96fc : add byte ptr [rax + 9], cl ; ret 0x854d
0xffffff80002a335c : add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80003cade2 : add byte ptr [rax + 9], cl ; ret 0xc931
0xffffff80008ce351 : add byte ptr [rax + 9], cl ; ret 0xe95d
0xffffff800072db67 : add byte ptr [rax + 9], cl ; xor byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004483f4 : add byte ptr [rax + rax - 0x5cf0b800], bh ; ret 0x2872
0xffffff80002656e5 : add byte ptr [rax + rax*8 + 0x5c61b75], al ; ret
0xffffff80005757df : add byte ptr [rax + rax*8 + 0x63482175], al ; ret
0xffffff80002667cd : add byte ptr [rax + rax*8 - 0x3fceec8c], al ; pop rbp ; ret
0xffffff80003c9b1a : add byte ptr [rax + rax*8 - 0x7cb7f98b], al ; call qword ptr [rax]
0xffffff8000573dfa : add byte ptr [rax + rax*8 - 0xb7938c], al ; ret
0xffffff80005b237b : add byte ptr [rax + rax*8 - 0xb7cd8c], al ; ret
0xffffff80004d2d8c : add byte ptr [rax + rax*8 - 0xb7ce8c], al ; ret
0xffffff800072e546 : add byte ptr [rax + rax], 0 ; or byte ptr [rdi + 0x34], 8 ; pop rbp ; ret
0xffffff800084d9a6 : add byte ptr [rax + rax], al ; add bh, dh ; ret 0xffff
0xffffff80006fbf27 : add byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b66
0xffffff80002bce89 : add byte ptr [rax + rax], al ; add byte ptr [rax + 9], cl ; ret
0xffffff80002b8e1b : add byte ptr [rax + rax], al ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80006c775a : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80004ea6e5 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff80003074f9 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007426ae : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002eb36a : add byte ptr [rax + rax], al ; add byte ptr [rcx + 0x29], al ; fmul qword ptr [rax + 0x63] ; ret
0xffffff80007aafec : add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 0x19], al ; call rcx
0xffffff8000844d70 : add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff8000426320 : add byte ptr [rax + rax], al ; add byte ptr [rcx], ch ; ret
0xffffff80004c4b5c : add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0x4104
0xffffff800079db66 : add byte ptr [rax + rax], al ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80004b36d8 : add byte ptr [rax + rax], al ; pop rbp ; ret
0xffffff8000347eaf : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a03e3 : add byte ptr [rax + rax], cl ; add byte ptr [rcx + rcx*4 - 0x3d], cl ; call rax
0xffffff800066df9c : add byte ptr [rax + rax], dh ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff80004e153c : add byte ptr [rax + rax], dl ; add byte ptr [rbp - 0x17], bl ; mov cl, bl ; ret 0x66ff
0xffffff80006a1ea3 : add byte ptr [rax + rax], dl ; add byte ptr [rcx], dh ; shr al, cl ; add bl, byte ptr [rsi] ; ret
0xffffff80004a7630 : add byte ptr [rax + rbx - 0x78], bh ; ret 0xf280
0xffffff80004bc9f0 : add byte ptr [rax + rcx + 0x4c], dh ; mov edi, esi ; call 0xffffff8000338c68
0xffffff8000539910 : add byte ptr [rax + rcx + 0x4c], dh ; mov edi, esp ; mov rsi, r14 ; call rax
0xffffff800081a2ae : add byte ptr [rax + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000635c41 : add byte ptr [rax + rcx*4 - 0x2d], al ; mov rdx, r8 ; jmp 0xffffff8000635c61
0xffffff800058fbd2 : add byte ptr [rax + rcx*4 - 0x3e], al ; jmp 0xffffff800058fc0a
0xffffff8000535a6c : add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0xffffff8000859a26 : add byte ptr [rax + rcx], al ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff8000492786 : add byte ptr [rax + rdx - 0x18], dh ; ret 0xf071
0xffffff800039261e : add byte ptr [rax + rsi*8], al ; cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392667 ; ret
0xffffff80004dc767 : add byte ptr [rax - 0x16dfceb6], al ; ret 0xfffd
0xffffff80003b7cce : add byte ptr [rax - 0x1a76b7ab], dl ; pop rbp ; ret
0xffffff80003baee5 : add byte ptr [rax - 0x2d], cl ; loopne 0xffffff80003baf3a ; dec eax ; pop rbp ; ret
0xffffff80003baf35 : add byte ptr [rax - 0x2d], cl ; loopne 0xffffff80003baf8a ; dec eax ; pop rbp ; ret
0xffffff80005d2c34 : add byte ptr [rax - 0x2d], cl ; loopne 0xffffff80005d2c3f ; ret 0x8b41
0xffffff800060e5f1 : add byte ptr [rax - 0x34073], al ; call qword ptr [rax]
0xffffff8000256297 : add byte ptr [rax - 0x39], cl ; ret
0xffffff800039be06 : add byte ptr [rax - 0x39], cl ; ret 0x8dff
0xffffff8000464f0c : add byte ptr [rax - 0x39], cl ; ret 0xfc01
0xffffff80002bcd7b : add byte ptr [rax - 0x39], cl ; ret 0xfcff
0xffffff800025f596 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80003bf489 : add byte ptr [rax - 0x39], cl ; ret 1
0xffffff800042cc70 : add byte ptr [rax - 0x39], cl ; test eax, esp ; idiv edi ; call qword ptr [rax]
0xffffff800081a353 : add byte ptr [rax - 0x3b7cb728], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000811493 : add byte ptr [rax - 0x3b7cb7ff], dh ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007e053f : add byte ptr [rax - 0x3f], cl ; jmp qword ptr [rax]
0xffffff8000251829 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff8000251846 ; pop rbp ; ret
0xffffff8000251839 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff8000251856 ; pop rbp ; ret
0xffffff8000262b10 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff8000262b3e ; or rax, rcx ; pop rbp ; ret
0xffffff80002db387 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db39e ; pop rbp ; ret
0xffffff80002db3b7 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db3ce ; pop rbp ; ret
0xffffff80002db3e7 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db3fe ; pop rbp ; ret
0xffffff80002f859b : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002f85b2 ; pop rbp ; ret
0xffffff80002f85b9 : add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002f85d0 ; pop rbp ; ret
0xffffff8000b468ce : add byte ptr [rax - 0x42], cl ; ret 0x808
0xffffff80006bb201 : add byte ptr [rax - 0x45], cl ; ret
0xffffff8000833e6f : add byte ptr [rax - 0x48], cl ; ret 0xc807
0xffffff800044ccaf : add byte ptr [rax - 0x49f0603d], al ; ret
0xffffff8000359f42 : add byte ptr [rax - 0x4a], al ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0xffffff8000865121 : add byte ptr [rax - 0x4a], al ; add esi, esi ; ret
0xffffff80004b1d7a : add byte ptr [rax - 0x51a73], al ; call qword ptr [rax]
0xffffff80004b1da2 : add byte ptr [rax - 0x51a73], al ; jmp qword ptr [rax]
0xffffff8000258151 : add byte ptr [rax - 0x73], cl ; adc al, 0xc2 ; jmp 0xffffff800025816e
0xffffff800044930a : add byte ptr [rax - 0x73], cl ; add dword ptr [rax], 0xf6000001 ; ret 0xf01
0xffffff800077dc82 : add byte ptr [rax - 0x73], cl ; add dword ptr [rbp - 9], esi ; pop rbp ; ret
0xffffff800090abcf : add byte ptr [rax - 0x73], cl ; add eax, 0x193e21 ; ret
0xffffff800090abbf : add byte ptr [rax - 0x73], cl ; add eax, 0x193e31 ; ret
0xffffff800090abaf : add byte ptr [rax - 0x73], cl ; add eax, 0x193e41 ; ret
0xffffff800090ab9f : add byte ptr [rax - 0x73], cl ; add eax, 0x193e51 ; ret
0xffffff800090ab8f : add byte ptr [rax - 0x73], cl ; add eax, 0x193e61 ; ret
0xffffff80004f9e7f : add byte ptr [rax - 0x73], cl ; add eax, 0x5dd2a1 ; pop rbp ; ret
0xffffff8000267875 : add byte ptr [rax - 0x73], cl ; add eax, 0x839213 ; pop rbp ; ret
0xffffff800070715e : add byte ptr [rax - 0x73], cl ; jne 0xffffff8000707138 ; call rax
0xffffff80007fce65 : add byte ptr [rax - 0x73], cl ; jne 0xffffff80007fce3f ; call rax
0xffffff80005c92b7 : add byte ptr [rax - 0x73], cl ; jnp 0xffffff80005c930b ; call 0xffffff80005c5507
0xffffff8000477a93 : add byte ptr [rax - 0x73], cl ; jo 0xffffff8000477ab5 ; xor ecx, ecx ; pop rbp ; jmp r9
0xffffff8000754a8a : add byte ptr [rax - 0x73], cl ; mov ebp, 0xfffffef8 ; call rcx
0xffffff8000389cb5 : add byte ptr [rax - 0x73], cl ; mov ebp, 0xffffff78 ; call r12
0xffffff800033db9e : add byte ptr [rax - 0x73], cl ; mov ss, word ptr [rax - 0xa000000] ; ret
0xffffff80003a5f2c : add byte ptr [rax - 0x73], cl ; or byte ptr [r8 - 0x39], cl ; ret 0xff01
0xffffff8000482bca : add byte ptr [rax - 0x73], cl ; push rsp ; ret
0xffffff8000550a88 : add byte ptr [rax - 0x73], cl ; pushfq ; ret
0xffffff8000744285 : add byte ptr [rax - 0x73], cl ; xchg eax, ebp ; call 0xffffff8000744294
0xffffff8000859b9a : add byte ptr [rax - 0x73], cl ; xor eax, 0x198af6 ; pop rbp ; jmp rax
0xffffff800031b1dd : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x39], cl ; ret 0xf000
0xffffff800084c38d : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0xffffff80002b730c : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800050cdaa : add byte ptr [rax - 0x75], cl ; adc dword ptr [rax + 1], ecx ; ret 0x834a
0xffffff80007ddb9f : add byte ptr [rax - 0x75], cl ; adc dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret 0x854d
0xffffff800049e17d : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80008adba3 : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800038378f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; ret
0xffffff800025478f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 1], ecx ; ret 0x4c81
0xffffff80002763af : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x77], ecx ; add ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff80003ad52b : add byte ptr [rax - 0x75], cl ; add eax, 0x6a3b4d ; call qword ptr [rax]
0xffffff80003acfcd : add byte ptr [rax - 0x75], cl ; add eax, 0x6a40ab ; call qword ptr [rax]
0xffffff800039ee3a : add byte ptr [rax - 0x75], cl ; add eax, 0x6b223e ; call qword ptr [rax]
0xffffff80003a9196 : add byte ptr [rax - 0x75], cl ; add eax, 0x728a2a ; call rax
0xffffff8000393f92 : add byte ptr [rax - 0x75], cl ; add eax, 0x76b836 ; call qword ptr [rax]
0xffffff80002c88fc : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0xffffff80004b532f : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800038c07c : add byte ptr [rax - 0x75], cl ; and al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006c879f : add byte ptr [rax - 0x75], cl ; and dil, dil ; ret
0xffffff80004fa7da : add byte ptr [rax - 0x75], cl ; cmp al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004295f3 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x7d], cl ; ret
0xffffff800039a32c : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax], 0x16 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007db6ef : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800082fb1d : add byte ptr [rax - 0x75], cl ; jbe 0xffffff800082fb40 ; pop rbp ; jmp rax
0xffffff800082ff6d : add byte ptr [rax - 0x75], cl ; jbe 0xffffff800082ff90 ; pop rbp ; jmp rax
0xffffff8000830ead : add byte ptr [rax - 0x75], cl ; jbe 0xffffff8000830ed0 ; pop rbp ; jmp rax
0xffffff80007637df : add byte ptr [rax - 0x75], cl ; jge 0xffffff80007637bc ; call 0xffffff8000393048
0xffffff80007637f3 : add byte ptr [rax - 0x75], cl ; jge 0xffffff80007637d0 ; call 0xffffff8000393048
0xffffff8000763807 : add byte ptr [rax - 0x75], cl ; jge 0xffffff80007637e4 ; call 0xffffff8000393048
0xffffff8000763b6b : add byte ptr [rax - 0x75], cl ; jge 0xffffff8000763b40 ; call 0xffffff80003923e8
0xffffff8000763c77 : add byte ptr [rax - 0x75], cl ; jge 0xffffff8000763c4c ; call 0xffffff80003923e8
0xffffff800029dd24 : add byte ptr [rax - 0x75], cl ; jne 0xffffff800029dcb7 ; call r15
0xffffff800029e4b4 : add byte ptr [rax - 0x75], cl ; jne 0xffffff800029e447 ; call r15
0xffffff80006b6ef0 : add byte ptr [rax - 0x75], cl ; jne 0xffffff80006b6eba ; call rax
0xffffff8000389854 : add byte ptr [rax - 0x75], cl ; jnp 0xffffff8000389872 ; mov rsi, qword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff80008944f8 : add byte ptr [rax - 0x75], cl ; jnp 0xffffff800089451e ; mov rsi, rbx ; call r15
0xffffff8000780c6f : add byte ptr [rax - 0x75], cl ; jo 0xffffff8000780c7a ; ret
0xffffff80007f022a : add byte ptr [rax - 0x75], cl ; js 0xffffff80007f0281 ; mov esi, edx ; pop rbp ; jmp rax
0xffffff8000894d2a : add byte ptr [rax - 0x75], cl ; js 0xffffff8000894d46 ; call 0xffffff80008c0f87
0xffffff80005e2114 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffe88 ; call rax
0xffffff80006a1256 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffea8 ; call rax
0xffffff800083e115 : add byte ptr [rax - 0x75], cl ; mov ebx, dword ptr [rax - 0x77000000] ; ret 0xca29
0xffffff80003bab22 : add byte ptr [rax - 0x75], cl ; mov ecx, 0x3a8 ; pop rbp ; jmp rax
0xffffff80003baae9 : add byte ptr [rax - 0x75], cl ; mov ecx, 0x490 ; pop rbp ; jmp rax
0xffffff80007baa89 : add byte ptr [rax - 0x75], cl ; mov r8b, 0x89 ; ret
0xffffff80003ea18e : add byte ptr [rax - 0x75], cl ; mov r8b, 0xf ; ret
0xffffff800038deca : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003f1d1b : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x39], cl ; ret 0xffff
0xffffff8000647263 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], 0x8c ; ret
0xffffff80007ff04b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], r10b ; pop rbp ; jmp rax
0xffffff80007ff08b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], r11b ; pop rbp ; jmp rax
0xffffff800086699d : add byte ptr [rax - 0x75], cl ; or eax, 0x2cfe5b ; pop rbp ; jmp rax
0xffffff800086697d : add byte ptr [rax - 0x75], cl ; or eax, 0x2cfe7b ; pop rbp ; jmp rax
0xffffff8000709ce0 : add byte ptr [rax - 0x75], cl ; or ecx, ebp ; ret
0xffffff8000709be1 : add byte ptr [rax - 0x75], cl ; or ecx, ebp ; ret 1
0xffffff80004978ca : add byte ptr [rax - 0x75], cl ; pop rax ; and byte ptr [rax + 1], cl ; ret
0xffffff800065d288 : add byte ptr [rax - 0x75], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff8000748142 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov bh, bh ; ret
0xffffff800035888f : add byte ptr [rax - 0x75], cl ; pop rbx ; adc byte ptr [rax + 0x39], cl ; ret
0xffffff80002ac569 : add byte ptr [rax - 0x75], cl ; pop rbx ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80007f01da : add byte ptr [rax - 0x75], cl ; push 0x5dd68948 ; jmp rax
0xffffff8000497b9e : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0x8949
0xffffff80004b3169 : add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x820f
0xffffff800059d02b : add byte ptr [rax - 0x75], cl ; push rcx ; and dh, dh ; ret 0xf01
0xffffff8000503651 : add byte ptr [rax - 0x75], cl ; push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80005c29a3 : add byte ptr [rax - 0x75], cl ; push rcx ; sbb dh, dh ; ret 0xf01
0xffffff80002611b5 : add byte ptr [rax - 0x75], cl ; push rdx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff800038f065 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r11 + rcx*4 + 0x2c], 1 ; ret
0xffffff80002ed05d : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x39], 1 ; ret 0x674
0xffffff800065d261 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800031eafc : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax], 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002a2b92 : add byte ptr [rax - 0x75], cl ; sbb dword ptr [rax + 0x39], ecx ; ret
0xffffff800028b89f : add byte ptr [rax - 0x75], cl ; sbb ecx, dword ptr [rax + 0x39] ; ret
0xffffff800025a189 : add byte ptr [rax - 0x75], cl ; shr dword ptr [rax], 0x5d ; ret
0xffffff8000897e9f : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x77], cl ; ret 0x2948
0xffffff80002ec9ff : add byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; ret
0xffffff80004196fc : add byte ptr [rax - 0x75], cl ; xor al, 0xc2 ; jmp 0xffffff8000419718
0xffffff80005080bc : add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x39], cl ; ret 0x840f
0xffffff80005a6561 : add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff8000793bff : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax + 0x39], cl ; ret
0xffffff80008d7aad : add byte ptr [rax - 0x75], cl ; xor eax, 0x25ee8b ; pop rbp ; jmp rax
0xffffff80008d7a7d : add byte ptr [rax - 0x75], cl ; xor eax, 0x25eea3 ; pop rbp ; jmp rax
0xffffff8000865ced : add byte ptr [rax - 0x75], cl ; xor eax, 0x2d0b0b ; pop rbp ; jmp rax
0xffffff8000865ccd : add byte ptr [rax - 0x75], cl ; xor eax, 0x2d0b2b ; pop rbp ; jmp rax
0xffffff8000865cad : add byte ptr [rax - 0x75], cl ; xor eax, 0x2d0b4b ; pop rbp ; jmp rax
0xffffff8000b4a1b9 : add byte ptr [rax - 0x7737d791], dh ; ret 0xca30
0xffffff80007aaba6 : add byte ptr [rax - 0x77], cl ; adc al, 8 ; pop rbp ; ret
0xffffff800082a3ce : add byte ptr [rax - 0x77], cl ; adc byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000392966 : add byte ptr [rax - 0x77], cl ; add cl, cl ; ret
0xffffff80008d6f09 : add byte ptr [rax - 0x77], cl ; add eax, 0x2605e7 ; pop rbp ; ret
0xffffff80008d6509 : add byte ptr [rax - 0x77], cl ; add eax, 0x260fbf ; pop rbp ; ret
0xffffff80008d5d49 : add byte ptr [rax - 0x77], cl ; add eax, 0x261757 ; pop rbp ; ret
0xffffff80008d5599 : add byte ptr [rax - 0x77], cl ; add eax, 0x261edf ; pop rbp ; ret
0xffffff80008d1e79 : add byte ptr [rax - 0x77], cl ; add eax, 0x2655c7 ; pop rbp ; ret
0xffffff80008d12f9 : add byte ptr [rax - 0x77], cl ; add eax, 0x26611f ; pop rbp ; ret
0xffffff80008d0239 : add byte ptr [rax - 0x77], cl ; add eax, 0x2671b7 ; pop rbp ; ret
0xffffff80008ce609 : add byte ptr [rax - 0x77], cl ; add eax, 0x268dbf ; pop rbp ; ret
0xffffff80008c4a79 : add byte ptr [rax - 0x77], cl ; add eax, 0x272887 ; pop rbp ; ret
0xffffff80008c3c89 : add byte ptr [rax - 0x77], cl ; add eax, 0x27364f ; pop rbp ; ret
0xffffff80008c2cf6 : add byte ptr [rax - 0x77], cl ; add eax, 0x2745ba ; pop rbp ; ret
0xffffff80008b2d99 : add byte ptr [rax - 0x77], cl ; add eax, 0x28436f ; pop rbp ; ret
0xffffff80008b24b9 : add byte ptr [rax - 0x77], cl ; add eax, 0x284c27 ; pop rbp ; ret
0xffffff80008ae7d6 : add byte ptr [rax - 0x77], cl ; add eax, 0x2888e2 ; pop rbp ; ret
0xffffff80008accb6 : add byte ptr [rax - 0x77], cl ; add eax, 0x28a3d2 ; pop rbp ; ret
0xffffff80008a7659 : add byte ptr [rax - 0x77], cl ; add eax, 0x28f907 ; pop rbp ; ret
0xffffff80008a6c49 : add byte ptr [rax - 0x77], cl ; add eax, 0x2902e7 ; pop rbp ; ret
0xffffff80008a5d49 : add byte ptr [rax - 0x77], cl ; add eax, 0x2911bf ; pop rbp ; ret
0xffffff8000899779 : add byte ptr [rax - 0x77], cl ; add eax, 0x29d617 ; pop rbp ; ret
0xffffff80008989f9 : add byte ptr [rax - 0x77], cl ; add eax, 0x29e36f ; pop rbp ; ret
0xffffff80008961b9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0b87 ; pop rbp ; ret
0xffffff8000894bf9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a211f ; pop rbp ; ret
0xffffff8000893979 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a3377 ; pop rbp ; ret
0xffffff8000892b49 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a417f ; pop rbp ; ret
0xffffff8000891f59 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a4d47 ; pop rbp ; ret
0xffffff80008913b9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a58bf ; pop rbp ; ret
0xffffff8000890cf9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a5f57 ; pop rbp ; ret
0xffffff800088fb99 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a708f ; pop rbp ; ret
0xffffff800088e919 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a82e7 ; pop rbp ; ret
0xffffff800088ddf9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a8ddf ; pop rbp ; ret
0xffffff8000889f49 : add byte ptr [rax - 0x77], cl ; add eax, 0x2acc17 ; pop rbp ; ret
0xffffff8000889799 : add byte ptr [rax - 0x77], cl ; add eax, 0x2ad39f ; pop rbp ; ret
0xffffff8000887939 : add byte ptr [rax - 0x77], cl ; add eax, 0x2af1d7 ; pop rbp ; ret
0xffffff8000885ac9 : add byte ptr [rax - 0x77], cl ; add eax, 0x2b0ff7 ; pop rbp ; ret
0xffffff8000885239 : add byte ptr [rax - 0x77], cl ; add eax, 0x2b185f ; pop rbp ; ret
0xffffff8000884909 : add byte ptr [rax - 0x77], cl ; add eax, 0x2b2167 ; pop rbp ; ret
0xffffff8000810b74 : add byte ptr [rax - 0x77], cl ; add eax, 0x2d3624 ; pop rbp ; ret
0xffffff8000859369 : add byte ptr [rax - 0x77], cl ; add eax, 0x2dd1c7 ; pop rbp ; ret
0xffffff8000831799 : add byte ptr [rax - 0x77], cl ; add eax, 0x303ca7 ; pop rbp ; ret
0xffffff8000830559 : add byte ptr [rax - 0x77], cl ; add eax, 0x304ebf ; pop rbp ; ret
0xffffff800082d069 : add byte ptr [rax - 0x77], cl ; add eax, 0x308337 ; pop rbp ; ret
0xffffff800082bce9 : add byte ptr [rax - 0x77], cl ; add eax, 0x30968f ; pop rbp ; ret
0xffffff800082a54c : add byte ptr [rax - 0x77], cl ; add eax, 0x30ae04 ; pop rbp ; ret
0xffffff8000818269 : add byte ptr [rax - 0x77], cl ; add eax, 0x31d04f ; pop rbp ; ret
0xffffff8000817c19 : add byte ptr [rax - 0x77], cl ; add eax, 0x31d677 ; pop rbp ; ret
0xffffff8000815da9 : add byte ptr [rax - 0x77], cl ; add eax, 0x31f4bf ; pop rbp ; ret
0xffffff8000814849 : add byte ptr [rax - 0x77], cl ; add eax, 0x3209f7 ; pop rbp ; ret
0xffffff8000813e49 : add byte ptr [rax - 0x77], cl ; add eax, 0x3213cf ; pop rbp ; ret
0xffffff8000812be9 : add byte ptr [rax - 0x77], cl ; add eax, 0x3225df ; pop rbp ; ret
0xffffff80008115e4 : add byte ptr [rax - 0x77], cl ; add eax, 0x323bbc ; pop rbp ; ret
0xffffff800080d660 : add byte ptr [rax - 0x77], cl ; add eax, 0x327b00 ; pop rbp ; ret
0xffffff800079ddad : add byte ptr [rax - 0x77], cl ; add eax, 0x39656b ; pop rbp ; ret
0xffffff800077caae : add byte ptr [rax - 0x77], cl ; add eax, 0x3b347a ; pop rbp ; ret
0xffffff80004d0218 : add byte ptr [rax - 0x77], cl ; add eax, 0x606ef8 ; pop rbp ; ret
0xffffff800049d98a : add byte ptr [rax - 0x77], cl ; add eax, 0x677bbe ; pop rbp ; ret
0xffffff80003ae6c1 : add byte ptr [rax - 0x77], cl ; add eax, 0x6a2bd7 ; pop rbp ; ret
0xffffff800040bad9 : add byte ptr [rax - 0x77], cl ; add eax, 0x70835f ; pop rbp ; ret
0xffffff80003ca8dd : add byte ptr [rax - 0x77], cl ; add eax, 0x708453 ; pop rbp ; ret
0xffffff800038db33 : add byte ptr [rax - 0x77], cl ; add eax, 0x7436c5 ; pop rbp ; ret
0xffffff80003a703e : add byte ptr [rax - 0x77], cl ; add eax, 0x75878a ; call qword ptr [rax]
0xffffff800039a21d : add byte ptr [rax - 0x77], cl ; add eax, 0x764f53 ; pop rbp ; ret
0xffffff8000310ba4 : add byte ptr [rax - 0x77], cl ; add eax, 0x7ae704 ; pop rbp ; ret
0xffffff80002d468d : add byte ptr [rax - 0x77], cl ; add eax, 0x81988b ; pop rbp ; ret
0xffffff80006612de : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret
0xffffff8000552b11 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80006c7651 : add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80006c742f : add byte ptr [rax - 0x77], cl ; add esi, esi ; ret 0x7480
0xffffff800025a4ae : add byte ptr [rax - 0x77], cl ; and byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005aa0fd : add byte ptr [rax - 0x77], cl ; and r9b, bpl ; ret 4
0xffffff800030fc91 : add byte ptr [rax - 0x77], cl ; clc ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff80003a6236 : add byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0xffffff80003a831e : add byte ptr [rax - 0x77], cl ; cli ; wrmsr ; pop rbp ; ret
0xffffff80007d78c5 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 1] ; ret 0x3948
0xffffff8000620eef : add byte ptr [rax - 0x77], cl ; enter -0x74b8, 0x48 ; or bh, bh ; ret 0x8548
0xffffff80006132a9 : add byte ptr [rax - 0x77], cl ; enter -0x74b8, 5 ; ret
0xffffff8000293eed : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008a3eba : add byte ptr [rax - 0x77], cl ; ficomp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff80005ef2e3 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 2] ; call r14
0xffffff80002d5f3b : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0xc148
0xffffff80005b8223 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x77] ; ret
0xffffff800031669c : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x4918
0xffffff80005a4f3a : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x4c24
0xffffff800026366f : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x8002
0xffffff80002cf21c : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret
0xffffff80006c8a9f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x394d
0xffffff80005cf71c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff80007636e8 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; jne 0xffffff8000763698 ; call rax
0xffffff8000605fd3 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x1e8
0xffffff800035d362 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x32e8
0xffffff8000293a42 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x52e8
0xffffff8000664371 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x63e8
0xffffff80005b5ea8 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x7d83
0xffffff80004ea6e8 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff800089a08c : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x91ff
0xffffff80006e607a : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x9ae8
0xffffff800074ba3f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xd5e8
0xffffff80008299bb : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xff41
0xffffff80007c49c9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff80007c4e62 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x1e] ; call rax
0xffffff80004b4a00 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call r12
0xffffff800081f949 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call r12
0xffffff80007c5d1f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff80006534a4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 2] ; call qword ptr [rax]
0xffffff80002db82f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 2] ; call r12
0xffffff80007c5f29 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0xffffff800026835a : add byte ptr [rax - 0x77], cl ; fldl2t ; ret
0xffffff8000554efe : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rdx - 0x76b6fea8] ; ret 0x8841
0xffffff8000651696 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; adc ebx, ecx ; ret
0xffffff80006aa440 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80002fe91b : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; in al, dx ; ret 0xfff9
0xffffff80006a618d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; pop rdx ; in eax, dx ; ret 0x4cff
0xffffff80005f2534 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0xffffff80006a5d52 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; xchg eax, ebp ; int1 ; ret 0x41ff
0xffffff80006a6151 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; xchg eax, esi ; in eax, dx ; ret 0xebff
0xffffff800027fd00 : add byte ptr [rax - 0x77], cl ; fsubr st(3) ; ret 0x2e66
0xffffff8000770636 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; add dword ptr [rdx], ebp ; ret 0x8aff
0xffffff8000670f38 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; call rcx
0xffffff800076b4fb : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; cmp al, 0x7b ; ret 0x41ff
0xffffff80007679ff : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; fmul dword ptr [rbx] ; ret
0xffffff800076f94a : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; in eax, dx ; ret 0x49ff
0xffffff8000314688 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; jmp rax
0xffffff800075f5ac : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; jnp 0xffffff800075f5ed ; ret
0xffffff80004e3501 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; lodsb al, byte ptr ss:[rsi] ; ret 0x41ff
0xffffff800075e877 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov al, 0x40 ; ret
0xffffff80004e3381 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov dh, 0xad ; ret 0x41ff
0xffffff800076562d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; or dl, ah ; ret 0x49ff
0xffffff8000476cd8 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rdi ; ret
0xffffff80004e35e1 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; push rsi ; stosd dword ptr [rdi], eax ; ret 0x41ff
0xffffff8000765065 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; rcr bh, cl ; ret 0x48ff
0xffffff8000764f64 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; rcr edx, cl ; ret 0x48ff
0xffffff8000293fe4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff800081f305 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x139
0xffffff80002b5b35 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x1c
0xffffff80007cc0e5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x62
0xffffff8000857fe5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xa454
0xffffff80006c6d05 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xdd
0xffffff80002d4b75 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xe395
0xffffff80004ed525 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xe51f
0xffffff8000503ce5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfb11
0xffffff80002c78d5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfd85
0xffffff80007c19f5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfff2
0xffffff80007c87fc : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; stosd dword ptr [rdi], eax ; ret
0xffffff800038ae20 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; xlatb ; ret
0xffffff800052bcf5 : add byte ptr [rax - 0x77], cl ; iretd ; mov rbx, rcx ; call rax
0xffffff80005e38d5 : add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff800053ec21 : add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp rax
0xffffff800056451c : add byte ptr [rax - 0x77], cl ; jb 0xffffff8000564532 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800056476c : add byte ptr [rax - 0x77], cl ; jb 0xffffff8000564782 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff8000718bda : add byte ptr [rax - 0x77], cl ; jg 0xffffff8000718bed ; pop rbp ; ret
0xffffff800039ccec : add byte ptr [rax - 0x77], cl ; js 0xffffff800039ccff ; pop rbp ; ret
0xffffff80003ba80c : add byte ptr [rax - 0x77], cl ; mov eax, 0x3a8 ; pop rbp ; ret
0xffffff80003ba7f3 : add byte ptr [rax - 0x77], cl ; mov eax, 0x490 ; pop rbp ; ret
0xffffff80003a85e0 : add byte ptr [rax - 0x77], cl ; neg dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff80003a8540 : add byte ptr [rax - 0x77], cl ; or al, 0xc2 ; pop rbp ; ret
0xffffff80008a3d22 : add byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff800048a52a : add byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80007f623d : add byte ptr [rax - 0x77], cl ; or eax, 0x33e5b3 ; pop rbp ; ret
0xffffff8000448ab6 : add byte ptr [rax - 0x77], cl ; or eax, 0x6cb582 ; pop rbp ; ret
0xffffff80003a0f16 : add byte ptr [rax - 0x77], cl ; or r15b, al ; pop rbp ; ret
0xffffff80002be084 : add byte ptr [rax - 0x77], cl ; pop rax ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002c811b : add byte ptr [rax - 0x77], cl ; pop rbp ; ret
0xffffff8000843c7a : add byte ptr [rax - 0x77], cl ; pop rbp ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x4503
0xffffff80004e3693 : add byte ptr [rax - 0x77], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000327e1d : add byte ptr [rax - 0x77], cl ; push rax ; or cl, ch ; ret
0xffffff8000564c11 : add byte ptr [rax - 0x77], cl ; push rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000252a0a : add byte ptr [rax - 0x77], cl ; ret
0xffffff8000266c64 : add byte ptr [rax - 0x77], cl ; ret 0x148
0xffffff80007438bf : add byte ptr [rax - 0x77], cl ; ret 0x18e8
0xffffff8000793b9f : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0xffffff80006784d6 : add byte ptr [rax - 0x77], cl ; ret 0x1e8
0xffffff800079b2b9 : add byte ptr [rax - 0x77], cl ; ret 0x1ee8
0xffffff800056b909 : add byte ptr [rax - 0x77], cl ; ret 0x1f0f
0xffffff80006b4ab8 : add byte ptr [rax - 0x77], cl ; ret 0x1fe8
0xffffff80003851ab : add byte ptr [rax - 0x77], cl ; ret 0x2148
0xffffff8000b4540a : add byte ptr [rax - 0x77], cl ; ret 0x214c
0xffffff80008b84d2 : add byte ptr [rax - 0x77], cl ; ret 0x25e8
0xffffff800039a422 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff800062f0ae : add byte ptr [rax - 0x77], cl ; ret 0x29e8
0xffffff80002bf69e : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0xffffff80008f5a19 : add byte ptr [rax - 0x77], cl ; ret 0x2ee8
0xffffff80007c3ea6 : add byte ptr [rax - 0x77], cl ; ret 0x31e8
0xffffff8000486fc5 : add byte ptr [rax - 0x77], cl ; ret 0x32e8
0xffffff8000764ba1 : add byte ptr [rax - 0x77], cl ; ret 0x36e8
0xffffff80006226f7 : add byte ptr [rax - 0x77], cl ; ret 0x3949
0xffffff800059ecd4 : add byte ptr [rax - 0x77], cl ; ret 0x3e8
0xffffff800051e597 : add byte ptr [rax - 0x77], cl ; ret 0x40e8
0xffffff80004dce38 : add byte ptr [rax - 0x77], cl ; ret 0x415b
0xffffff800087ecc6 : add byte ptr [rax - 0x77], cl ; ret 0x458b
0xffffff8000857342 : add byte ptr [rax - 0x77], cl ; ret 0x45e8
0xffffff80006d6153 : add byte ptr [rax - 0x77], cl ; ret 0x4865
0xffffff80007fe38f : add byte ptr [rax - 0x77], cl ; ret 0x48e8
0xffffff800084ab36 : add byte ptr [rax - 0x77], cl ; ret 0x51e8
0xffffff800060627d : add byte ptr [rax - 0x77], cl ; ret 0x5ae8
0xffffff8000712036 : add byte ptr [rax - 0x77], cl ; ret 0x5dbb
0xffffff8000743878 : add byte ptr [rax - 0x77], cl ; ret 0x5fe8
0xffffff8000616674 : add byte ptr [rax - 0x77], cl ; ret 0x5ff
0xffffff8000605d76 : add byte ptr [rax - 0x77], cl ; ret 0x61e8
0xffffff80003820d4 : add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80006b4a74 : add byte ptr [rax - 0x77], cl ; ret 0x63e8
0xffffff800056a832 : add byte ptr [rax - 0x77], cl ; ret 0x65e8
0xffffff80006d796d : add byte ptr [rax - 0x77], cl ; ret 0x6ae8
0xffffff8000743668 : add byte ptr [rax - 0x77], cl ; ret 0x6fe8
0xffffff80005c9a67 : add byte ptr [rax - 0x77], cl ; ret 0x70e8
0xffffff80007b0bef : add byte ptr [rax - 0x77], cl ; ret 0x728b
0xffffff80005d8364 : add byte ptr [rax - 0x77], cl ; ret 0x73e8
0xffffff800063f663 : add byte ptr [rax - 0x77], cl ; ret 0x74e8
0xffffff800054f660 : add byte ptr [rax - 0x77], cl ; ret 0x77e8
0xffffff800066527c : add byte ptr [rax - 0x77], cl ; ret 0x7a8b
0xffffff8000742d5c : add byte ptr [rax - 0x77], cl ; ret 0x7be8
0xffffff800056c41b : add byte ptr [rax - 0x77], cl ; ret 0x7ce8
0xffffff80008e9a55 : add byte ptr [rax - 0x77], cl ; ret 0x7eb
0xffffff800060efa9 : add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff800039bba4 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0xffffff800056e655 : add byte ptr [rax - 0x77], cl ; ret 0x82e8
0xffffff8000699be0 : add byte ptr [rax - 0x77], cl ; ret 0x8341
0xffffff800026393f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800059d284 : add byte ptr [rax - 0x77], cl ; ret 0x840f
0xffffff800087f450 : add byte ptr [rax - 0x77], cl ; ret 0x8445
0xffffff800044c717 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff800086948c : add byte ptr [rax - 0x77], cl ; ret 0x8944
0xffffff800025f7b9 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0xffffff800084a8fa : add byte ptr [rax - 0x77], cl ; ret 0x8949
0xffffff800085c151 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0xffffff80003577c5 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0xffffff8000530e1f : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff8000494446 : add byte ptr [rax - 0x77], cl ; ret 0x8b49
0xffffff80005811bf : add byte ptr [rax - 0x77], cl ; ret 0x8b4d
0xffffff8000282638 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff8000699e8f : add byte ptr [rax - 0x77], cl ; ret 0x8d4c
0xffffff8000666ed1 : add byte ptr [rax - 0x77], cl ; ret 0x8d8b
0xffffff8000605a47 : add byte ptr [rax - 0x77], cl ; ret 0x90e8
0xffffff80008b0c76 : add byte ptr [rax - 0x77], cl ; ret 0x91ff
0xffffff80005ebf45 : add byte ptr [rax - 0x77], cl ; ret 0x92e8
0xffffff8000641842 : add byte ptr [rax - 0x77], cl ; ret 0x95e8
0xffffff80005f673f : add byte ptr [rax - 0x77], cl ; ret 0x98e8
0xffffff8000743834 : add byte ptr [rax - 0x77], cl ; ret 0xa3e8
0xffffff800054fd2d : add byte ptr [rax - 0x77], cl ; ret 0xaae8
0xffffff80005e8b27 : add byte ptr [rax - 0x77], cl ; ret 0xb0e8
0xffffff8000764621 : add byte ptr [rax - 0x77], cl ; ret 0xb6e8
0xffffff80008750d4 : add byte ptr [rax - 0x77], cl ; ret 0xb848
0xffffff8000694d1f : add byte ptr [rax - 0x77], cl ; ret 0xb8e8
0xffffff800057b619 : add byte ptr [rax - 0x77], cl ; ret 0xbee8
0xffffff800059ed18 : add byte ptr [rax - 0x77], cl ; ret 0xbfe8
0xffffff80002fd26a : add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000835aef : add byte ptr [rax - 0x77], cl ; ret 0xc1ff
0xffffff8000678413 : add byte ptr [rax - 0x77], cl ; ret 0xc4e8
0xffffff80008be61a : add byte ptr [rax - 0x77], cl ; ret 0xc7b8
0xffffff8000836c5f : add byte ptr [rax - 0x77], cl ; ret 0xc7ff
0xffffff80003566f3 : add byte ptr [rax - 0x77], cl ; ret 0xc931
0xffffff800036cc23 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0xffffff80005290ff : add byte ptr [rax - 0x77], cl ; ret 0xd285
0xffffff800055ff00 : add byte ptr [rax - 0x77], cl ; ret 0xd7e8
0xffffff80007438ff : add byte ptr [rax - 0x77], cl ; ret 0xd8e8
0xffffff8000700cfe : add byte ptr [rax - 0x77], cl ; ret 0xd9e8
0xffffff800082ac60 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0xffffff800056e5f6 : add byte ptr [rax - 0x77], cl ; ret 0xe1e8
0xffffff8000872c61 : add byte ptr [rax - 0x77], cl ; ret 0xe1e9
0xffffff80008b8012 : add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0xffffff80007437f0 : add byte ptr [rax - 0x77], cl ; ret 0xe7e8
0xffffff80007418d7 : add byte ptr [rax - 0x77], cl ; ret 0xe8
0xffffff800025d67b : add byte ptr [rax - 0x77], cl ; ret 0xe95d
0xffffff800056aaad : add byte ptr [rax - 0x77], cl ; ret 0xeae8
0xffffff800078ebd2 : add byte ptr [rax - 0x77], cl ; ret 0xee75
0xffffff80005fb9e4 : add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0xffffff8000669d60 : add byte ptr [rax - 0x77], cl ; ret 0xf41
0xffffff800067bca2 : add byte ptr [rax - 0x77], cl ; ret 0xf5e8
0xffffff80004a0c8d : add byte ptr [rax - 0x77], cl ; ret 0xf631
0xffffff80002affdf : add byte ptr [rax - 0x77], cl ; ret 0xf8e8
0xffffff8000859b88 : add byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff80005c14d8 : add byte ptr [rax - 0x77], cl ; ret 0xffe8
0xffffff8000b439da : add byte ptr [rax - 0x77], cl ; retf 0xbe48 ; fdivp st(7) ; jmp rbx
0xffffff8000892906 : add byte ptr [rax - 0x77], cl ; retf 0xc189 ; pop rbp ; jmp r8
0xffffff80005445d3 : add byte ptr [rax - 0x77], cl ; rol byte ptr [r15 + rcx - 0x4a], 1 ; stosd dword ptr [rdi], eax ; ret
0xffffff800072e2bf : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff80008232cb : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret
0xffffff80008226fa : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cb4
0xffffff800081cd11 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cfc
0xffffff80008e1042 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x73], 0x3d ; xchg eax, esp ; ret 0x11
0xffffff80004e7585 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff800052b750 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007164bd : add byte ptr [rax - 0x77], cl ; shl byte ptr [r14 - 0x39], 1 ; ret 0xe
0xffffff80004e2f50 : add byte ptr [rax - 0x77], cl ; sti ; call 0xffffff800010e147
0xffffff80004950d7 : add byte ptr [rax - 0x77], cl ; sub byte ptr [rbx + 0x5d], r11b ; ret
0xffffff80003b5dc8 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax + 0x5d000000], esp ; ret
0xffffff80003993ef : add byte ptr [rax - 0x77], cl ; xlatb ; call rsi
0xffffff80008bca83 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0xffffff800061f1bf : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8308
0xffffff800026269a : add byte ptr [rax - 0x77], cl ; xor eax, 0x83d656 ; pop rbp ; ret
0xffffff80006534a3 : add byte ptr [rax - 0x77], r9b ; fisttp word ptr [rcx + rcx*4 - 2] ; call qword ptr [rax]
0xffffff8000671d27 : add byte ptr [rax - 0x77], r9b ; fsubp st(0) ; ret
0xffffff800060be54 : add byte ptr [rax - 0x77], r9b ; iretd ; pop rbp ; jmp r8
0xffffff800068c366 : add byte ptr [rax - 0x77], r9b ; ret 0x70e8
0xffffff80005f8f6d : add byte ptr [rax - 0x77], r9b ; ret 0x8b48
0xffffff80005ebf44 : add byte ptr [rax - 0x77], r9b ; ret 0x92e8
0xffffff8000641841 : add byte ptr [rax - 0x77], r9b ; ret 0x95e8
0xffffff80005f673e : add byte ptr [rax - 0x77], r9b ; ret 0x98e8
0xffffff8000694d1e : add byte ptr [rax - 0x77], r9b ; ret 0xb8e8
0xffffff8000678412 : add byte ptr [rax - 0x77], r9b ; ret 0xc4e8
0xffffff800061edf6 : add byte ptr [rax - 0x7aca8be0], ch ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xc1f6
0xffffff80005364f2 : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d5087 : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3145
0xffffff80007d357f : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x950f
0xffffff80002c8966 : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80003a2678 : add byte ptr [rax - 0x7b], cl ; leave ; cmove rax, rcx ; pop rbp ; ret
0xffffff80003acde3 : add byte ptr [rax - 0x7b], cl ; leave ; cmove rdi, rcx ; call rax
0xffffff80003a27c9 : add byte ptr [rax - 0x7b], cl ; leave ; cmove rdi, rcx ; pop rbp ; jmp rax
0xffffff80003a2ad4 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80003a2b01 ; mov esi, eax ; call rcx
0xffffff80008802af : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008802c0 ; inc dword ptr [rdx] ; pop rbp ; ret
0xffffff80008ee796 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008ee779 ; mov rdi, r14 ; call rcx
0xffffff80008eeb46 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008eeb29 ; mov rdi, r14 ; call rcx
0xffffff80008f265a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f2674 ; mov rdi, r14 ; call rcx
0xffffff80008f26b2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f2699 ; mov rdi, r14 ; call rcx
0xffffff80008f41d6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f41b9 ; mov rdi, r14 ; call rcx
0xffffff80008f4d06 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f4ce9 ; mov rdi, r14 ; call rcx
0xffffff80008f501a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5034 ; mov rdi, r15 ; call rcx
0xffffff80008f5072 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5059 ; mov rdi, r15 ; call rcx
0xffffff80008f511a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5134 ; mov rdi, r15 ; call rcx
0xffffff80008f5172 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5159 ; mov rdi, r15 ; call rcx
0xffffff80008f520a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5224 ; mov rdi, r14 ; call rcx
0xffffff80008f5262 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5249 ; mov rdi, r14 ; call rcx
0xffffff80008f53ea : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5404 ; mov rdi, r15 ; call rcx
0xffffff80008f5442 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5429 ; mov rdi, r15 ; call rcx
0xffffff80008f54ca : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f54e4 ; mov rdi, r15 ; call rcx
0xffffff80008f5522 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5509 ; mov rdi, r15 ; call rcx
0xffffff80008f559a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f55b4 ; mov rdi, r14 ; call rcx
0xffffff80008f55f2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f55d9 ; mov rdi, r14 ; call rcx
0xffffff80008f570a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5724 ; mov rdi, r14 ; call rcx
0xffffff80008f5762 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008f5749 ; mov rdi, r14 ; call rcx
0xffffff80008feee6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008feec9 ; mov rdi, r14 ; call rcx
0xffffff80008ff0a6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008ff089 ; mov rdi, r14 ; call rcx
0xffffff80008ff426 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008ff409 ; mov rdi, r14 ; call rcx
0xffffff80008ff7a6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80008ff789 ; mov rdi, r14 ; call rcx
0xffffff800090004a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900064 ; mov rdi, r15 ; call rcx
0xffffff80009000a2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900089 ; mov rdi, r15 ; call rcx
0xffffff800090010a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900124 ; mov rdi, r15 ; call rcx
0xffffff8000900162 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900149 ; mov rdi, r15 ; call rcx
0xffffff800090097a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900994 ; mov rdi, r15 ; call rcx
0xffffff80009009d2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009009b9 ; mov rdi, r15 ; call rcx
0xffffff8000900a3a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900a54 ; mov rdi, r15 ; call rcx
0xffffff8000900a92 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000900a79 ; mov rdi, r15 ; call rcx
0xffffff80009014aa : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009014c4 ; mov rdi, r15 ; call rcx
0xffffff8000901502 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009014e9 ; mov rdi, r15 ; call rcx
0xffffff80009015aa : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009015c4 ; mov rdi, r15 ; call rcx
0xffffff8000901602 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009015e9 ; mov rdi, r15 ; call rcx
0xffffff80009026fa : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000902714 ; mov rdi, r15 ; call rcx
0xffffff8000902752 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000902739 ; mov rdi, r15 ; call rcx
0xffffff80009027ba : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009027d4 ; mov rdi, r15 ; call rcx
0xffffff8000902812 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009027f9 ; mov rdi, r15 ; call rcx
0xffffff80009033ea : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000903404 ; mov rdi, r15 ; call rcx
0xffffff8000903442 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000903429 ; mov rdi, r15 ; call rcx
0xffffff80009034aa : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009034c4 ; mov rdi, r15 ; call rcx
0xffffff8000903502 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009034e9 ; mov rdi, r15 ; call rcx
0xffffff80009058aa : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009058c4 ; mov rdi, r14 ; call rcx
0xffffff8000905902 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009058e9 ; mov rdi, r14 ; call rcx
0xffffff800090598a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009059a4 ; mov rdi, r14 ; call rcx
0xffffff80009059e2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80009059c9 ; mov rdi, r14 ; call rcx
0xffffff8000907456 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907439 ; mov rdi, r14 ; call rcx
0xffffff8000907aca : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907ae4 ; mov rdi, r15 ; call rcx
0xffffff8000907b22 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907b09 ; mov rdi, r15 ; call rcx
0xffffff8000907c5a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907c74 ; mov rdi, r15 ; call rcx
0xffffff8000907cb2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907c99 ; mov rdi, r15 ; call rcx
0xffffff8000907e06 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000907de9 ; mov rdi, r14 ; call rcx
0xffffff8000909de6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000909dc9 ; mov rdi, r14 ; call rcx
0xffffff800090a71a : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff800090a734 ; mov rdi, r14 ; call rcx
0xffffff800090a772 : add byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff800090a759 ; mov rdi, r14 ; call rcx
0xffffff80006264c7 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80006264b7 ; pop rbp ; ret
0xffffff800077d0cb : add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800077d0c7 ; pop rbp ; ret
0xffffff800077e3ab : add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800077e3a7 ; pop rbp ; ret
0xffffff80006b25a1 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rbx + 0x31] ; imul al ; ret 0xe775
0xffffff800035744d : add byte ptr [rax - 0x7b], cl ; ret
0xffffff8000322b71 : add byte ptr [rax - 0x7b], cl ; ret 0x4f74
0xffffff8000735a8e : add byte ptr [rax - 0x7b], cl ; ret 0x840f
0xffffff8000322ae9 : add byte ptr [rax - 0x7b], cl ; ret 0x850f
0xffffff80003a96d0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; clc ; call rcx
0xffffff8000409e1b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800027f5d0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0xffffff8000400723 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0xffffff800026e8a7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0xffffff80002d359f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80005a945d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x394c
0xffffff8000860452 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0xffffff800066deb9 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0x394c
0xffffff80008b408f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + 0x48], 0xff ; ret
0xffffff800087776b : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rsi + 0x48], 0x81 ; ret 0x238
0xffffff80005e2ed1 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0xffffff80005f57e7 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], 0x5d ; ret
0xffffff800044ebd9 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xf], 0x5d ; ret
0xffffff80008791ec : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rdx + 0x48], 0x81 ; ret 0x238
0xffffff80008ae371 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rbx + 0x48], 0xff ; ret
0xffffff80004d8283 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0xffffff80002c034c : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rbx*2 + 0x48], 0x89 ; ret
0xffffff80003589ab : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rdx - 0xa], cl ; ret
0xffffff80003ad8ca : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rsi + 0x31], 0xff ; call rax
0xffffff8000514d87 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + 0x48], 0x89 ; ret
0xffffff8000328ab5 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rdi + 0x48], 0x39 ; ret
0xffffff8000265596 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x31], 0xff ; call rax
0xffffff800087a0d3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x81 ; ret 0x238
0xffffff80006d7bf2 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbx + 0x48], 0x89 ; ret
0xffffff80008ca9c8 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0xffffff80008dd270 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret
0xffffff8000577c05 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff80003c9b2d : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0xffffff8000712057 : add byte ptr [rax - 0x7d], cl ; js 0xffffff8000712084 ; and byte ptr [rax - 0x77], cl ; ret 0x820f
0xffffff8000712f2f : add byte ptr [rax - 0x7d], cl ; js 0xffffff8000712f5c ; and byte ptr [rax - 0x77], cl ; ret 0x894c
0xffffff80002ee1fa : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret 0xed75
0xffffff80003f2fca : add byte ptr [rax - 0x7d], cl ; rcl dword ptr [rax], 0x83 ; ret 0x75fc
0xffffff800025da05 : add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000493835 : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0xffffff8000498b8f : add byte ptr [rax - 0x7d], cl ; ret 0x3110
0xffffff80007e2a4d : add byte ptr [rax - 0x7d], cl ; ret 0x3118
0xffffff80003422c4 : add byte ptr [rax - 0x7d], cl ; ret 0x3920
0xffffff800044e943 : add byte ptr [rax - 0x7d], cl ; ret 0x4110
0xffffff800045f4ba : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0xffffff80004af51c : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff80003798fb : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff800038dfe6 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff800027f2d3 : add byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80008eb8ff : add byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff80005a3145 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0xffffff800075f73f : add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0xffffff80007ae4a6 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0xffffff80003b9cea : add byte ptr [rax - 0x7d], cl ; ret 0x8930
0xffffff800060296b : add byte ptr [rax - 0x7d], cl ; ret 0xff04
0xffffff80004e17f6 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x81 ; ret 0xa0
0xffffff80008ed99a : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x5d ; ret
0xffffff800044eb26 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x75f8
0xffffff8000295a66 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0xff ; ret 0xf175
0xffffff800066b5a6 : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0x83 ; ret 0x83f8
0xffffff80002762d6 : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0xff ; ret 0xf175
0xffffff800080e73e : add byte ptr [rax - 0x7d], cl ; shl byte ptr [rax], 0x83 ; ret
0xffffff800083b2e3 : add byte ptr [rax - 0x7d], cl ; stc ; adc byte ptr [rbp - 0x1a], dh ; pop rbp ; ret
0xffffff80007aa302 : add byte ptr [rax - 0x7f], cl ; out 0x33, al ; idiv edi ; push rdi ; ret 0
0xffffff80002ac544 : add byte ptr [rax - 0x7f], cl ; ret
0xffffff80004fa908 : add byte ptr [rax - 0x7f], cl ; ret 0x128
0xffffff8000778c46 : add byte ptr [rax - 0x7f], cl ; ret 0x148
0xffffff800087496f : add byte ptr [rax - 0x7f], cl ; ret 0x208
0xffffff80003a1e1e : add byte ptr [rax - 0x7f], cl ; ret 0x22c
0xffffff8000875ad7 : add byte ptr [rax - 0x7f], cl ; ret 0x238
0xffffff8000582eec : add byte ptr [rax - 0x7f], cl ; ret 0x388
0xffffff80005a2067 : add byte ptr [rax - 0x7f], cl ; ret 0x480
0xffffff800046a134 : add byte ptr [rax - 0x7f], cl ; ret 0x4e3
0xffffff80003656d5 : add byte ptr [rax - 0x7f], cl ; ret 0xc8
0xffffff800033d023 : add byte ptr [rax - 0x7f], cl ; ret 0xf000
0xffffff8000785120 : add byte ptr [rax - 0x7f], cl ; ret 0xfff
0xffffff800080358d : add byte ptr [rax - 0x81], al ; xor edi, edi ; call rbx
0xffffff8000784c76 : add byte ptr [rax - 0x9da], dl ; sal esi, 0xff ; jmp rbx
0xffffff80008eb630 : add byte ptr [rax - 1], bh ; pop rbp ; ret
0xffffff80004d3c3f : add byte ptr [rax - 1], cl ; or eax, 0x646239 ; pop rbp ; ret
0xffffff80003a2fe8 : add byte ptr [rax - 1], cl ; pop rbp ; ret
0xffffff8000253bcf : add byte ptr [rax - 1], cl ; ret
0xffffff800025023f : add byte ptr [rax - 1], cl ; ret 0x1c8a
0xffffff8000575d99 : add byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff800045f61f : add byte ptr [rax - 1], cl ; ret 0x28a
0xffffff8000553702 : add byte ptr [rax - 1], cl ; ret 0x3145
0xffffff8000348936 : add byte ptr [rax - 1], cl ; ret 0x358b
0xffffff800033f160 : add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000492185 : add byte ptr [rax - 1], cl ; ret 0x394c
0xffffff80003b0daf : add byte ptr [rax - 1], cl ; ret 0x8148
0xffffff80003464af : add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800070812f : add byte ptr [rax - 1], cl ; ret 0x8440
0xffffff800048365f : add byte ptr [rax - 1], cl ; ret 0x8548
0xffffff80007076bf : add byte ptr [rax - 1], cl ; ret 0x88a
0xffffff80008387cf : add byte ptr [rax - 1], cl ; ret 0x8944
0xffffff80003cacbf : add byte ptr [rax - 1], cl ; ret 0x8948
0xffffff80005f9945 : add byte ptr [rax - 1], cl ; ret 0x8949
0xffffff800079c53f : add byte ptr [rax - 1], cl ; ret 0x8b48
0xffffff80002ec8ac : add byte ptr [rax - 1], cl ; ret 0xc031
0xffffff80004873f4 : add byte ptr [rax - 1], cl ; ret 0xc9ff
0xffffff80003ca21f : add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800049541e : add byte ptr [rax - 1], cl ; rol byte ptr [rcx - 0x7d], 0xc1 ; ret 0xb841
0xffffff8000662ccd : add byte ptr [rax - 1], r9b ; ret 0x8948
0xffffff80003f1e1f : add byte ptr [rax - 9], cl ; ret 0
0xffffff8000553675 : add byte ptr [rax], 0 ; add al, ch ; ret 0xbbaa
0xffffff8000455a66 : add byte ptr [rax], 0 ; add bh, dh ; ret
0xffffff80005cdde7 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80002b8e31 : add byte ptr [rax], 0 ; add byte ptr [rax + 9], cl ; ret 0x8148
0xffffff80006c764e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff8000457859 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000285b1d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002da1fa : add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0xffffff80005536ff : add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret 0x3145
0xffffff8000497ad8 : add byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800083c1ea : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800026e194 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800076b6b8 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff80005f14d1 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x3df799f8], cl ; ret 0x490e
0xffffff80008a0d5e : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0xffffff800061e9d9 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0xffffff80002bccbb : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x77f
0xffffff8000858207 : add byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ret 0xdf89
0xffffff80003d3c01 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret
0xffffff80004d5c49 : add byte ptr [rax], 0 ; add byte ptr [rsi - 9], ah ; ret 0x564
0xffffff8000700a16 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7540
0xffffff800040e70a : add byte ptr [rax], 0 ; add dh, dh ; ret 0xf82
0xffffff80004c09f9 : add byte ptr [rax], 0 ; add dh, dh ; ret 0xf90
0xffffff80006015e4 : add byte ptr [rax], 0 ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0xffffff8000710ae7 : add byte ptr [rax], 0 ; jne 0xffffff8000710af8 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80008d9204 : add byte ptr [rax], 0 ; pop rbp ; jmp rax
0xffffff80002a6dda : add byte ptr [rax], 0 ; pop rbp ; ret
0xffffff80007972b0 : add byte ptr [rax], 0x10 ; add byte ptr [rsp + rbp - 0x7f], dh ; call qword ptr [rax]
0xffffff800029d42c : add byte ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002f859a : add byte ptr [rax], 0x48 ; shl eax, 0xc ; pop rbp ; ret
0xffffff800029d449 : add byte ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800029d45b ; pop rbp ; jmp rax
0xffffff80002ea940 : add byte ptr [rax], 0x5d ; ret
0xffffff80004b3cab : add byte ptr [rax], 0x74 ; add al, 0x48 ; mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80008232eb : add byte ptr [rax], 0xdc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008230fb : add byte ptr [rax], 0xdc ; jmp 0xffffff80008230c7
0xffffff8000837e71 : add byte ptr [rax], 0xdc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072571e : add byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff80003a8dd6 : add byte ptr [rax], 3 ; add byte ptr [rax], al ; or rax, rcx ; pop rbp ; ret
0xffffff80008aa7c5 : add byte ptr [rax], 9 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80003bf486 : add byte ptr [rax], ah ; add byte ptr [rax - 0x39], cl ; ret 1
0xffffff8000735a8c : add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0xffffff80003acc82 : add byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f8e26 : add byte ptr [rax], ah ; add byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c66fb : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; ret 0x508d
0xffffff800079729f : add byte ptr [rax], ah ; add byte ptr [rsi + rdi - 0x7f], dh ; jmp qword ptr [rax]
0xffffff8000b4436b : add byte ptr [rax], ah ; add dword ptr [rax + rdx], esi ; ret 0x48a
0xffffff8000613596 : add byte ptr [rax], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000746ad3 : add byte ptr [rax], ah ; pop rbp ; ret
0xffffff8000830a50 : add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008606f8 : add byte ptr [rax], ah ; ret
0xffffff800049d345 : add byte ptr [rax], ah ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff8000757b36 : add byte ptr [rax], ah ; xor ecx, ecx ; call r15
0xffffff80007580c2 : add byte ptr [rax], ah ; xor ecx, ecx ; call rbx
0xffffff80004da5e6 : add byte ptr [rax], al ; adc al, ch ; ret 0x2541
0xffffff80002701f2 : add byte ptr [rax], al ; adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff8000661d57 : add byte ptr [rax], al ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80004bc533 : add byte ptr [rax], al ; adc byte ptr [rax], al ; cmovae eax, edx ; pop rbp ; ret
0xffffff80004b3867 : add byte ptr [rax], al ; adc byte ptr [rax], al ; pop rbp ; ret
0xffffff80008c3c0f : add byte ptr [rax], al ; adc byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80003d8c51 : add byte ptr [rax], al ; adc dh, dh ; ret 0xf10
0xffffff800079db65 : add byte ptr [rax], al ; add al, 0 ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80004b36d7 : add byte ptr [rax], al ; add al, 0 ; pop rbp ; ret
0xffffff80002bbe40 : add byte ptr [rax], al ; add al, 0x5d ; ret
0xffffff80006c5be7 : add byte ptr [rax], al ; add al, 0x75 ; add dh, byte ptr [rcx] ; div bh ; ret 0x8000
0xffffff800034dee6 : add byte ptr [rax], al ; add al, 0x75 ; add eax, 0x5d5e415b ; ret
0xffffff80004c1a4f : add byte ptr [rax], al ; add al, 0xf ; ret
0xffffff80006c6713 : add byte ptr [rax], al ; add al, 0xf ; ret 0x8b41
0xffffff80006487f9 : add byte ptr [rax], al ; add al, 0xf ; xchg eax, esp ; ret
0xffffff800039261d : add byte ptr [rax], al ; add al, 0xf0 ; cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392668 ; ret
0xffffff800079dbd5 : add byte ptr [rax], al ; add al, byte ptr [rax] ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800079db88 : add byte ptr [rax], al ; add al, byte ptr [rax] ; mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff80004b3792 : add byte ptr [rax], al ; add al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800064ee33 : add byte ptr [rax], al ; add al, ch ; adc eax, 0x83ffabf2 ; ret
0xffffff80005f3349 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rax]
0xffffff8000882099 : add byte ptr [rax], al ; add al, ch ; call rax
0xffffff80005d65a0 : add byte ptr [rax], al ; add al, ch ; clc ; ret 0xffdb
0xffffff800049649e : add byte ptr [rax], al ; add al, ch ; cli ; ret
0xffffff800084727d : add byte ptr [rax], al ; add al, ch ; cmp eax, dword ptr [rsi] ; add bh, bh ; ret
0xffffff80005a6212 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80004e105b : add byte ptr [rax], al ; add al, ch ; fst st(0) ; ret 0xc7ff
0xffffff8000778f74 : add byte ptr [rax], al ; add al, ch ; in al, 0x43 ; ret 0x4dff
0xffffff80006628ab : add byte ptr [rax], al ; add al, ch ; in eax, dx ; call rdx
0xffffff80008db04b : add byte ptr [rax], al ; add al, ch ; in eax, dx ; jg 0xffffff80008db006 ; push rsi ; ret
0xffffff800075dbcb : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; push rsp ; ret
0xffffff80006b484b : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; ret
0xffffff800076931a : add byte ptr [rax], al ; add al, ch ; jle 0xffffff80007692bb ; ret 0x48ff
0xffffff800074b74d : add byte ptr [rax], al ; add al, ch ; jmp 0xffffff800074b782
0xffffff80006c0799 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rax]
0xffffff8000450569 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0xffffff80002fff49 : add byte ptr [rax], al ; add al, ch ; jmp rcx
0xffffff800075681f : add byte ptr [rax], al ; add al, ch ; jns 0xffffff80007567eb ; ret
0xffffff80004e2955 : add byte ptr [rax], al ; add al, ch ; jrcxz 0xffffff80004e2918 ; ret 0xc7ff
0xffffff80004e2954 : add byte ptr [rax], al ; add al, ch ; jrcxz 0xffffff80004e2919 ; ret 0xc7ff
0xffffff80006b48ef : add byte ptr [rax], al ; add al, ch ; leave ; ret 0xffcb
0xffffff80003ded8b : add byte ptr [rax], al ; add al, ch ; mov ebp, 0x8900069e ; ret
0xffffff80003eba8d : add byte ptr [rax], al ; add al, ch ; mov ebx, 0x890005d1 ; ret
0xffffff800074557c : add byte ptr [rax], al ; add al, ch ; mov esp, 0x89ffbc88 ; ret
0xffffff80003ae52b : add byte ptr [rax], al ; add al, ch ; or eax, 0x89fff5f9 ; ret
0xffffff800075a752 : add byte ptr [rax], al ; add al, ch ; out 0x88, al ; ret
0xffffff80006b47ca : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret
0xffffff800075e0c9 : add byte ptr [rax], al ; add al, ch ; outsd dx, dword ptr [rsi] ; ret
0xffffff8000862f29 : add byte ptr [rax], al ; add al, ch ; outsd dx, dword ptr [rsi] ; ret 0xfffa
0xffffff80007fd8fb : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0xffffff800087bddd : add byte ptr [rax], al ; add al, ch ; pop rbx ; jb 0xffffff800087bd9e ; push rsi ; ret
0xffffff80004e85ee : add byte ptr [rax], al ; add al, ch ; pop rbx ; ret 0x48ff
0xffffff80005c937e : add byte ptr [rax], al ; add al, ch ; pop rdx ; ret
0xffffff80006b64fb : add byte ptr [rax], al ; add al, ch ; popfq ; ret
0xffffff80008b8690 : add byte ptr [rax], al ; add al, ch ; push -0x76005a2b ; ret
0xffffff800040a730 : add byte ptr [rax], al ; add al, ch ; push -0x76ffff8f ; ret
0xffffff800075c4e3 : add byte ptr [rax], al ; add al, ch ; push rbp ; ret
0xffffff8000778295 : add byte ptr [rax], al ; add al, ch ; push rbx ; ret 0x49ff
0xffffff80004e8dd3 : add byte ptr [rax], al ; add al, ch ; push rbx ; ret 0xc7ff
0xffffff8000801de7 : add byte ptr [rax], al ; add al, ch ; push rcx ; ret
0xffffff8000769447 : add byte ptr [rax], al ; add al, ch ; push rcx ; xchg eax, esp ; ret 0x48ff
0xffffff8000262fb5 : add byte ptr [rax], al ; add al, ch ; ret
0xffffff80006bbe86 : add byte ptr [rax], al ; add al, ch ; ret 0
0xffffff80002751c6 : add byte ptr [rax], al ; add al, ch ; ret 0x11e2
0xffffff8000661366 : add byte ptr [rax], al ; add al, ch ; ret 0x15b1
0xffffff80003679b6 : add byte ptr [rax], al ; add al, ch ; ret 0x21
0xffffff8000446586 : add byte ptr [rax], al ; add al, ch ; ret 0x26
0xffffff8000418f86 : add byte ptr [rax], al ; add al, ch ; ret 0x2fc
0xffffff80004788e6 : add byte ptr [rax], al ; add al, ch ; ret 0x31d1
0xffffff800046c7e6 : add byte ptr [rax], al ; add al, ch ; ret 0x3292
0xffffff8000744e76 : add byte ptr [rax], al ; add al, ch ; ret 0x33f
0xffffff8000420669 : add byte ptr [rax], al ; add al, ch ; ret 0x36
0xffffff80003b19c6 : add byte ptr [rax], al ; add al, ch ; ret 0x53a6
0xffffff80002d4ac6 : add byte ptr [rax], al ; add al, ch ; ret 0x6175
0xffffff80002afe24 : add byte ptr [rax], al ; add al, ch ; ret 0x63
0xffffff80003e4f86 : add byte ptr [rax], al ; add al, ch ; ret 0x63c
0xffffff80003e4086 : add byte ptr [rax], al ; add al, ch ; ret 0x64b
0xffffff80003d89d6 : add byte ptr [rax], al ; add al, ch ; ret 0x70a
0xffffff8000731016 : add byte ptr [rax], al ; add al, ch ; ret 0x74
0xffffff800078b466 : add byte ptr [rax], al ; add al, ch ; ret 0x74e
0xffffff80008e0276 : add byte ptr [rax], al ; add al, ch ; ret 0x82de
0xffffff800077dcb6 : add byte ptr [rax], al ; add al, ch ; ret 0x9903
0xffffff800073c876 : add byte ptr [rax], al ; add al, ch ; ret 0x9d18
0xffffff80008d6cb6 : add byte ptr [rax], al ; add al, ch ; ret 0xabc7
0xffffff8000608e76 : add byte ptr [rax], al ; add al, ch ; ret 0xb052
0xffffff8000553676 : add byte ptr [rax], al ; add al, ch ; ret 0xbbaa
0xffffff80006b4fd6 : add byte ptr [rax], al ; add al, ch ; ret 0xcdd8
0xffffff800069c6d6 : add byte ptr [rax], al ; add al, ch ; ret 0xcf61
0xffffff800069bed6 : add byte ptr [rax], al ; add al, ch ; ret 0xcf69
0xffffff80003d92b6 : add byte ptr [rax], al ; add al, ch ; ret 0xd34d
0xffffff800065d9d6 : add byte ptr [rax], al ; add al, ch ; ret 0xd34e
0xffffff8000758206 : add byte ptr [rax], al ; add al, ch ; ret 0xd777
0xffffff800051f576 : add byte ptr [rax], al ; add al, ch ; ret 0xda52
0xffffff80005506d6 : add byte ptr [rax], al ; add al, ch ; ret 0xe421
0xffffff8000265ab6 : add byte ptr [rax], al ; add al, ch ; ret 0xea85
0xffffff80008b3626 : add byte ptr [rax], al ; add al, ch ; ret 0xf5dd
0xffffff8000333016 : add byte ptr [rax], al ; add al, ch ; ret 0xf68c
0xffffff800089be26 : add byte ptr [rax], al ; add al, ch ; ret 0xf755
0xffffff800089bd26 : add byte ptr [rax], al ; add al, ch ; ret 0xf756
0xffffff8000816326 : add byte ptr [rax], al ; add al, ch ; ret 0xffb0
0xffffff800044bd86 : add byte ptr [rax], al ; add al, ch ; ret 0xffce
0xffffff80008115d6 : add byte ptr [rax], al ; add al, ch ; ret 0xffdb
0xffffff800032fa92 : add byte ptr [rax], al ; add al, ch ; ret 0xfff6
0xffffff8000892f49 : add byte ptr [rax], al ; add al, ch ; ret 0xfff7
0xffffff80003fc9fd : add byte ptr [rax], al ; add al, ch ; ret 4
0xffffff80006b481a : add byte ptr [rax], al ; add al, ch ; sahf ; ret
0xffffff80006aea2b : add byte ptr [rax], al ; add al, ch ; sbb eax, 0x89ffea5a ; ret
0xffffff80008dac1b : add byte ptr [rax], al ; add al, ch ; sbb eax, 0xf6ffab84 ; ret
0xffffff80005a65ea : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret 0xffde
0xffffff800075bd8e : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; insb byte ptr [rdi], dx ; ret
0xffffff8000482cae : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret
0xffffff800075fd9b : add byte ptr [rax], al ; add al, ch ; sub eax, 0x89001a92 ; ret
0xffffff8000437e6f : add byte ptr [rax], al ; add al, ch ; test eax, 0x89003b3d ; ret
0xffffff8000760112 : add byte ptr [rax], al ; add al, ch ; xchg byte ptr [rdi], ah ; ret
0xffffff80004020b3 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebp ; imul eax, dword ptr [rax + rax], -0x77 ; ret
0xffffff8000273ab7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; jmp 0xffffff8000273a8d
0xffffff8000281eb7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0
0xffffff80007690a5 : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; ret 0x48ff
0xffffff800080df86 : add byte ptr [rax], al ; add al, dh ; xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800044fc75 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rax]
0xffffff8000553bf4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0xffffff8000557bb6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0xffffff80005639ce : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0xffffff8000563d3d : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0xffffff80004b22e9 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff80004ac5e4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rcx]
0xffffff80004e06d4 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rdi]
0xffffff80004ddbed : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsi + rdi*8 - 1], ecx ; call qword ptr [rcx]
0xffffff800037fc82 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x39] ; ret 0xbb
0xffffff8000322b6b : add byte ptr [rax], al ; add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x4f74
0xffffff8000322ae3 : add byte ptr [rax], al ; add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0xffffff800026885d : add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000285997 : add byte ptr [rax], al ; add bh, bh ; ret 0x12b8
0xffffff800084d66d : add byte ptr [rax], al ; add bh, bh ; ret 0x3944
0xffffff800051d51d : add byte ptr [rax], al ; add bh, bh ; ret 0x5589
0xffffff80007e2c83 : add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0xffffff80005c6376 : add byte ptr [rax], al ; add bh, bh ; ret 0x8941
0xffffff8000496f24 : add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0xffffff80005739ec : add byte ptr [rax], al ; add bh, bh ; ret 0x894c
0xffffff800048780d : add byte ptr [rax], al ; add bh, bh ; ret 0x8b48
0xffffff80005f2133 : add byte ptr [rax], al ; add bh, bh ; ret 0xc985
0xffffff80002d6f27 : add byte ptr [rax], al ; add bh, bh ; ret 0xf239
0xffffff800084d8fd : add byte ptr [rax], al ; add bh, bh ; ret 0xfa39
0xffffff800034d933 : add byte ptr [rax], al ; add bh, bh ; shr cl, 1 ; ret
0xffffff8000b40adb : add byte ptr [rax], al ; add bh, dh ; fdivr dword ptr [rcx] ; ret 0xb60f
0xffffff80002b1726 : add byte ptr [rax], al ; add bh, dh ; ret
0xffffff8000271dfd : add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff8000796176 : add byte ptr [rax], al ; add bh, dh ; ret 0x80b9
0xffffff80002886ba : add byte ptr [rax], al ; add bh, dh ; xlatb ; and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff8000392880 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0xffffff80005f0017 : add byte ptr [rax], al ; add bl, bh ; pop rbp ; ret
0xffffff8000622d9f : add byte ptr [rax], al ; add bl, ch ; adc byte ptr [rax - 0x7f], cl ; ret
0xffffff800035d778 : add byte ptr [rax], al ; add bl, ch ; and cl, byte ptr [rax + 0x63] ; ret
0xffffff8000749ecb : add byte ptr [rax], al ; add bl, ch ; jmp 0xffffff8000749ec5
0xffffff8000532849 : add byte ptr [rax], al ; add bl, ch ; or bh, bh ; ret 0x4166
0xffffff8000414279 : add byte ptr [rax], al ; add bl, ch ; or cl, byte ptr [rax - 0x77] ; ret 0x8148
0xffffff800039b354 : add byte ptr [rax], al ; add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret 0xbe08
0xffffff80002543fd : add byte ptr [rax], al ; add bl, ch ; pop rcx ; lea rdx, [rdx + rax*8] ; jmp 0xffffff8000254422
0xffffff80006de493 : add byte ptr [rax], al ; add bl, ch ; ret
0xffffff80007a8dfc : add byte ptr [rax], al ; add bl, ch ; ret 0x5be
0xffffff8000568cb4 : add byte ptr [rax], al ; add bl, ch ; ret 0xf883
0xffffff80008ec7d3 : add byte ptr [rax], al ; add bl, ch ; ret 0xfdfb
0xffffff800051219f : add byte ptr [rax], al ; add bl, ch ; ret 0xfec5
0xffffff80005b76e3 : add byte ptr [rax], al ; add bl, ch ; shr al, 1 ; ret
0xffffff80006cef21 : add byte ptr [rax], al ; add bl, ch ; test al, 0x81 ; ret 0x7fcf
0xffffff8000665d30 : add byte ptr [rax], al ; add bl, ch ; wait ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d2e89 : add byte ptr [rax], al ; add bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff800038946a : add byte ptr [rax], al ; add bl, cl ; call rdi
0xffffff80007543ea : add byte ptr [rax], al ; add bl, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff8000410a23 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000410a38 ; ret 0x8d41
0xffffff8000410a3d : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000410a52 ; ret 0x8d41
0xffffff8000410a57 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000410a6c ; ret 0x8d41
0xffffff800041175c : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000411761 ; shl byte ptr [rcx], cl ; ret 0xfe83
0xffffff80006037e3 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff80006037f8 ; ret 0x8941
0xffffff8000603809 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff800060381e ; ret 0x8941
0xffffff8000603faa : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000603fbf ; ret 0x8941
0xffffff8000603fd0 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff8000603fe5 ; ret 0x8941
0xffffff800071c6e2 : add byte ptr [rax], al ; add bl, dl ; loop 0xffffff800071c6e8 ; shl byte ptr [rsi - 0x3f], cl ; ret 0x6608
0xffffff800031f253 : add byte ptr [rax], al ; add bl, dl ; loopne 0xffffff800031f2bc ; ret
0xffffff8000395270 : add byte ptr [rax], al ; add bl, dl ; loopne 0xffffff80003952a2 ; add al, 0x96 ; pop rbp ; ret
0xffffff8000b483d8 : add byte ptr [rax], al ; add byte ptr [r8], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x14c
0xffffff800050bf8c : add byte ptr [rax], al ; add byte ptr [rax + 0x14], bh ; pop rbp ; ret
0xffffff8000564c89 : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; pop rbp ; ret
0xffffff80002d76a3 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret
0xffffff80002d8335 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0xffffff800071b18d : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0xffffff800037b847 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0xc748
0xffffff8000348e83 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ror dword ptr [rax + 0xf], 1 ; ret
0xffffff8000795d4e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; clc ; cdqe ; pop rbp ; ret
0xffffff80007952c9 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; clc ; pop rbp ; ret
0xffffff80006ad146 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0xffffff800054d891 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x149
0xffffff8000795f25 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x16b8
0xffffff800035dc64 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8148
0xffffff800083e7e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8341
0xffffff80004dca44 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x894c
0xffffff800083e194 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0xffffff80004ba34c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0xffffff80004c59a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80004ee99c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d4d
0xffffff800083ee11 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc931
0xffffff8000796fab : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xcae9
0xffffff80004ed2e5 : add byte ptr [rax], al ; add byte ptr [rax + 0x2d], bh ; pop rbp ; ret
0xffffff800039a76f : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; in eax, dx ; call rcx
0xffffff800039a78d : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; in eax, dx ; mov rsp, rsi ; call rdi
0xffffff80005da596 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000250a12 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000829111 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1777
0xffffff8000828f70 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff80006e9fc5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0xffffff8000298e36 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0xffffff800030e097 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9176
0xffffff800076cdaf : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xde7c
0xffffff8000771723 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe572
0xffffff80007717df : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe972
0xffffff80004d7117 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; ret 0x8589
0xffffff800072d9e7 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d01304f], al ; ret
0xffffff80006d6453 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d01414f], al ; ret
0xffffff800072da07 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d02304f], al ; ret
0xffffff800072da27 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d04304f], al ; ret
0xffffff800072d9d7 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d08304f], al ; ret
0xffffff800072d9f7 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d10304f], al ; ret
0xffffff800072da17 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d20304f], al ; ret
0xffffff800072dc07 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d40304f], al ; ret
0xffffff80004f9355 : add byte ptr [rax], al ; add byte ptr [rax + 0x5d744723], al ; ret
0xffffff800031eb6c : add byte ptr [rax], al ; add byte ptr [rax + 0x5d], al ; ret
0xffffff8000526b57 : add byte ptr [rax], al ; add byte ptr [rax + 0x5dc03106], cl ; ret
0xffffff80003895d3 : add byte ptr [rax], al ; add byte ptr [rax + 0x5dfe5060], al ; ret
0xffffff80008d4ce1 : add byte ptr [rax], al ; add byte ptr [rax + 0x5e415b01], dh ; pop rbp ; ret
0xffffff8000272c1e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0xffffff800080f44e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rdx, rax ; jmp rdx
0xffffff8000463c62 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; adc ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002978cd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; or byte ptr [rax - 1], cl ; ret
0xffffff8000503d6d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; push rax ; and byte ptr [rax - 0x7d], cl ; ret 0xbee0
0xffffff800044609f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff800079535a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; push rdi ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff80002f7419 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80002a05ff : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff8000661fc6 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4814
0xffffff80002aebbd : add byte ptr [rax], al ; add byte ptr [rax + 0x69], cl ; ret
0xffffff80005cd8af : add byte ptr [rax], al ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff800033ab2a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret
0xffffff8000319788 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x2eb
0xffffff8000318cdf : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x59eb
0xffffff80004b9a60 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0xffffff800047c959 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x148
0xffffff8000262a70 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3948
0xffffff8000427b24 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x60ba
0xffffff80004724ce : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x7589
0xffffff8000474ae7 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x7d89
0xffffff800037fb8f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8548
0xffffff80002a1306 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8944
0xffffff80002a75d8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0xffffff8000699ddb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8949
0xffffff800031f4af : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0xffffff800043186e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb60f
0xffffff80003038f5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf48
0xffffff8000386894 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ror dword ptr [r8 - 0x7b], 1 ; ret 0x3874
0xffffff800046f3c1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ror dword ptr [rax + 1], 1 ; ret 0x3b48
0xffffff80008d0eb9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; idiv edi ; ret 0xf875
0xffffff8000b483db : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x14c
0xffffff80002d9460 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x2948
0xffffff800025e1c8 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff8000392566 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0xffffff800025026f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff800036f474 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4c8b
0xffffff800028a85e : add byte ptr [rax], al ; add byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff800038bb57 : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; pop rbp ; ret
0xffffff80002b8e32 : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8148
0xffffff80008d96fa : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x854d
0xffffff80008ce34f : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0xe95d
0xffffff80003c9b18 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f98b], al ; call qword ptr [rax]
0xffffff80005b2379 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xb7cd8c], al ; ret
0xffffff80004d2d8a : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xb7ce8c], al ; ret
0xffffff8000535a6a : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0xffffff80005d2c32 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0xffffff80005d2c41 ; ret 0x8b41
0xffffff800025649d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0xffffff800039be04 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8dff
0xffffff800025f594 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff800042cc6e : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; test eax, esp ; idiv edi ; call qword ptr [rax]
0xffffff8000b468cc : add byte ptr [rax], al ; add byte ptr [rax - 0x42], cl ; ret 0x808
0xffffff80006bb1ff : add byte ptr [rax], al ; add byte ptr [rax - 0x45], cl ; ret
0xffffff80005c92b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jnp 0xffffff80005c930d ; call 0xffffff80005c5509
0xffffff800050cda8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc dword ptr [rax + 1], ecx ; ret 0x834a
0xffffff800038378d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; ret
0xffffff80004b532d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80004295f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x7d], cl ; ret
0xffffff800029dd22 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0xffffff800029dcb9 ; call r15
0xffffff800029e4b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0xffffff800029e449 ; call r15
0xffffff80006b6eee : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jne 0xffffff80006b6ebc ; call rax
0xffffff80003ea18c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov r8b, 0xf ; ret
0xffffff80003f1d19 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x39], cl ; ret 0xffff
0xffffff800035888d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbx ; adc byte ptr [rax + 0x39], cl ; ret
0xffffff800059d029 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rcx ; and dh, dh ; ret 0xf01
0xffffff800050364f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80002ed05b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x39], 1 ; ret 0x674
0xffffff800028b89d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb ecx, dword ptr [rax + 0x39] ; ret
0xffffff8000897e9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x77], cl ; ret 0x2948
0xffffff80005080ba : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x39], cl ; ret 0x840f
0xffffff8000b4a1b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7737d791], dh ; ret 0xca30
0xffffff8000392964 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add cl, cl ; ret
0xffffff80006612dc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret
0xffffff8000552b0f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80006c764f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80007951f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0xffffff800031669a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x4918
0xffffff800026366d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x8002
0xffffff800035d360 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x32e8
0xffffff8000293a40 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x52e8
0xffffff80006e6078 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x9ae8
0xffffff800074ba3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xd5e8
0xffffff80007c49c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff80007c4e60 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x1e] ; call rax
0xffffff80007c5d1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff80007c5f27 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0xffffff8000314686 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; jmp rax
0xffffff800075f5aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; jnp 0xffffff800075f5ef ; ret
0xffffff80004e34ff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; lodsb al, byte ptr ss:[rsi] ; ret 0x41ff
0xffffff800075e875 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov al, 0x40 ; ret
0xffffff80004e337f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov dh, 0xad ; ret 0x41ff
0xffffff800076562b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; or dl, ah ; ret 0x49ff
0xffffff80004e35df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; push rsi ; stosd dword ptr [rdi], eax ; ret 0x41ff
0xffffff8000764f62 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; rcr edx, cl ; ret 0x48ff
0xffffff8000293fe2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff800081f303 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x139
0xffffff80002b5b33 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x1c
0xffffff8000857fe3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xa454
0xffffff80002d4b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xe395
0xffffff80004ed523 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xe51f
0xffffff8000503ce3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfb11
0xffffff80002c78d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfd85
0xffffff80007c19f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfff2
0xffffff80007c87fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; stosd dword ptr [rdi], eax ; ret
0xffffff800052bcf3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; mov rbx, rcx ; call rax
0xffffff800053ec1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp rax
0xffffff8000718bd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jg 0xffffff8000718bef ; pop rbp ; ret
0xffffff800039ccea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; js 0xffffff800039cd01 ; pop rbp ; ret
0xffffff80003a0f14 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or r15b, al ; pop rbp ; ret
0xffffff8000843c78 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x4503
0xffffff8000327e1b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rax ; or cl, ch ; ret
0xffffff800027f975 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000793b9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0xffffff800079b2b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1ee8
0xffffff800056b907 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1f0f
0xffffff80003851a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2148
0xffffff80008b84d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x25e8
0xffffff8000558eb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff80008f5a17 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2ee8
0xffffff8000857340 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x45e8
0xffffff800056a830 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x65e8
0xffffff800066527a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7a8b
0xffffff800056c419 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ce8
0xffffff800060efa7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff800026393d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800059d282 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x840f
0xffffff8000530e1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff80005811bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b4d
0xffffff800070b939 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000835aed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc1ff
0xffffff80008b8010 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe5e8
0xffffff800025d679 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe95d
0xffffff800056aaab : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xeae8
0xffffff800072e2bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff80004e2f4e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sti ; call 0xffffff800010e149
0xffffff80003993ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call rsi
0xffffff80002c8964 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80006264c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80006264b9 ; pop rbp ; ret
0xffffff800077d0c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800077d0c9 ; pop rbp ; ret
0xffffff8000400721 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0xffffff80007c45e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0xffffff80002d359d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80008a8ae2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0xffffff800066deb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0x394c
0xffffff80003589a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rdx - 0xa], cl ; ret
0xffffff80003c9b2b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0xffffff80003f2fc8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rcl dword ptr [rax], 0x83 ; ret 0x75fc
0xffffff800025da03 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003422c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3920
0xffffff800044e941 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4110
0xffffff80004af51a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff80004af320 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff80007b1ddc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80008eb8fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff800075f73d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0xffffff80007ae4a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8304
0xffffff8000602969 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff04
0xffffff80004e17f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x81 ; ret 0xa0
0xffffff800044eb24 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x75f8
0xffffff8000295a64 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0xff ; ret 0xf175
0xffffff800066b5a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0x83 ; ret 0x83f8
0xffffff80002762d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0xff ; ret 0xf175
0xffffff800080e73c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; shl byte ptr [rax], 0x83 ; ret
0xffffff80002caf83 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000778c44 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x148
0xffffff800087496d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x208
0xffffff80003656d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xc8
0xffffff80008eb62e : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0xffffff8000253bcd : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff800025023d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x1c8a
0xffffff800045f61d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x28a
0xffffff8000553700 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3145
0xffffff8000348934 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x358b
0xffffff800033f15e : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000492183 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x394c
0xffffff80003b0dad : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8148
0xffffff8000497ad9 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800070812d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8440
0xffffff800048365d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8548
0xffffff80007076bd : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x88a
0xffffff80008387cd : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8944
0xffffff80006cfae5 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8948
0xffffff80005f9943 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8949
0xffffff800079c53d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8b48
0xffffff80003ca21d : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800049541c : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; rol byte ptr [rcx - 0x7d], 0xc1 ; ret 0xb841
0xffffff80007f060c : add byte ptr [rax], al ; add byte ptr [rax], 0x5d ; ret
0xffffff800072571c : add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff8000735a8a : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0xffffff800077e1d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; pop rbp ; ret
0xffffff80007fbf13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0xffffff800037fc80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x39] ; ret 0xbb
0xffffff800026885b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800051d51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret 0x5589
0xffffff8000496f22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0xffffff800048780b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret 0x8b48
0xffffff800084d8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa39
0xffffff800089f27e : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff800071b18b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0xffffff800026c7fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80003ba29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0xffffff800025649b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0xffffff80007c19f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfff2
0xffffff800046895b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000793b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0xffffff8000385f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2148
0xffffff800026393b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800054f22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff8000835aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc1ff
0xffffff8000276026 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008eb8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff800032f43b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000253bcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff800025023b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x1c8a
0xffffff800045f61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x28a
0xffffff80003b0dab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8148
0xffffff80004c2c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800048365b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8548
0xffffff80008387cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8944
0xffffff800084c15b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000735a88 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0xffffff800089f27c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80007cef7e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000276024 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800045161d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800061c3e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000b49163 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rcx + 0x21] ; ret 0x3149
0xffffff8000706d64 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff8000393048
0xffffff800031eb56 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800061c3e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80003734cd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80004ab0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8d4d
0xffffff800026e1ef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800061c3e5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff800054e75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xc73
0xffffff80004ce7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8042
0xffffff800084540b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0xffffff8000843ebb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4503
0xffffff80006d803b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0xffffff800038e2b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0xffffff80004aaf0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0xffffff80002d6afa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8341
0xffffff80008cd0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0xffffff80006d693b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xc189
0xffffff8000257aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4c7d
0xffffff8000b49165 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rcx + 0x21] ; ret 0x3149
0xffffff80007257db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800082cabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0xffffff800038c0b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 0x58 ; pop rbp ; ret
0xffffff80005af7ff : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000b4964f : add byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rax + 0x21], cl ; ret 0xb848
0xffffff8000389fe2 : add byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rax + 0x50], 0xfe ; pop rbp ; ret
0xffffff8000706d66 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff8000393046
0xffffff8000624c3a : add byte ptr [rax], al ; add byte ptr [rax], al ; cli ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800083b993 : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0xffffff800083b94d ; pop rbp ; ret
0xffffff800083b9d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0xffffff800083b9c7 ; pop rbp ; ret
0xffffff800083ba13 : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0xffffff800083ba07 ; pop rbp ; ret
0xffffff800083ba83 : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0xffffff800083ba77 ; pop rbp ; ret
0xffffff800083baf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; jb 0xffffff800083bab7 ; pop rbp ; ret
0xffffff80002ae85e : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0xffffff80002ae86f ; xor eax, eax ; pop rbp ; ret
0xffffff8000880532 : add byte ptr [rax], al ; add byte ptr [rax], al ; jg 0xffffff8000880517 ; pop rbp ; ret
0xffffff80008805a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; jg 0xffffff8000880587 ; pop rbp ; ret
0xffffff8000880632 : add byte ptr [rax], al ; add byte ptr [rax], al ; jg 0xffffff8000880618 ; pop rbx ; pop rbp ; ret
0xffffff80008806a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; jg 0xffffff8000880687 ; pop rbp ; ret
0xffffff8000368c70 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xffffff8000368ca0
0xffffff800060bab5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xffffff800060bacd
0xffffff80007783b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xffffff8000778441
0xffffff80003ff48c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0xffffff800032847e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000328467 ; pop rbp ; ret
0xffffff8000530f3e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000530f27 ; pop rbp ; ret
0xffffff800057f19e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff800057f187 ; pop rbp ; ret
0xffffff800058017e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000580167 ; pop rbp ; ret
0xffffff8000581524 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000581507 ; pop rbp ; ret
0xffffff80005824fe : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005824e7 ; pop rbp ; ret
0xffffff80005a8f4e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005a8f37 ; pop rbp ; ret
0xffffff80005b10ee : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005b10d7 ; pop rbp ; ret
0xffffff80005b211e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005b2107 ; pop rbp ; ret
0xffffff80005bf7ee : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005bf7d7 ; pop rbp ; ret
0xffffff80005bf88e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005bf877 ; pop rbp ; ret
0xffffff80005e482e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005e4817 ; pop rbp ; ret
0xffffff80005e48cd : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005e48b7 ; pop rbp ; ret
0xffffff80005ebe8e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80005ebe77 ; pop rbp ; ret
0xffffff8000637a9e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000637a87 ; pop rbp ; ret
0xffffff8000687f6e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000687f57 ; pop rbp ; ret
0xffffff800068800d : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff8000687ff7 ; pop rbp ; ret
0xffffff80006a43ce : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80006a43b7 ; pop rbp ; ret
0xffffff80006a446d : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80006a4457 ; pop rbp ; ret
0xffffff80008c687e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80008c6867 ; pop rbp ; ret
0xffffff80008c786e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80008c7857 ; pop rbp ; ret
0xffffff80008c881e : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80008c8807 ; pop rbp ; ret
0xffffff80008c97ce : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xffffff80008c97b7 ; pop rbp ; ret
0xffffff8000b3ea26 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, byte ptr [rdi + 0x3b] ; ret 0x149
0xffffff8000812876 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 1 ; pop rbp ; ret
0xffffff80003922fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; ret
0xffffff8000b3e98a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, 0x1f ; ret 0x4daf
0xffffff8000744e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; call rcx
0xffffff800039cce9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 8], rdi ; pop rbp ; ret
0xffffff8000718bd7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rdi ; pop rbp ; ret
0xffffff8000389ee2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff8000389ef9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff8000847eac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi + 0x30] ; mov edx, eax ; jmp 0xffffff8000847ecf
0xffffff8000348c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000394ef9
0xffffff80007b878c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80007b4a69
0xffffff80006387ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0xffffff80007b4a69
0xffffff8000793b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xffffff8000793bc3
0xffffff8000288699 : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff800025dbe1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800026e1f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000297e3b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80002510dc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff80003922f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff8000b4530e : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0xab ; int 0xc2
0xffffff80008a8619 : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff8000675859 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800029e859
0xffffff800026793a : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000b442c7 : add byte ptr [rax], al ; add byte ptr [rax], ch ; cmp edi, edi ; ret 0x3148
0xffffff8000b450ca : add byte ptr [rax], al ; add byte ptr [rax], cl ; popfq ; ret 0x4ca2
0xffffff80008d96f6 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x854d
0xffffff8000624076 : add byte ptr [rax], al ; add byte ptr [rbp + 0x15e74d2], al ; ret 0xd339
0xffffff8000259fc9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21480151], cl ; ret 0xc748
0xffffff80006bd3de : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; in al, 0xeb ; ret
0xffffff800028506a : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; push rsi ; ret
0xffffff8000839fed : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; test byte ptr [rcx + 0xf], 0xb6 ; ret
0xffffff800061c3f4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; ret
0xffffff80002510dd : add byte ptr [rax], al ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; ret
0xffffff80006a043d : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; mov dh, 0xaf ; ret
0xffffff800058ca5e : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; ret
0xffffff80004c857c : add byte ptr [rax], al ; add byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff800029f279 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff8000351957 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*2 + 0x31], dh ; div dh ; ret 0x7401
0xffffff80008fe831 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x1011
0xffffff800064bce1 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35b8
0xffffff800028ebd8 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0xffffff80004ac254 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3c], cl ; add ecx, dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80008877cc : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x2ada
0xffffff800076efad : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x50], cl ; add dword ptr [rax - 0x77], ecx ; ret 0x6eb
0xffffff80002667f5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x17], bl ; ret 2
0xffffff80008790b5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x17], bl ; ret 5
0xffffff80005e48ce : add byte ptr [rax], al ; add byte ptr [rbp - 0x23], dh ; pop rbp ; ret
0xffffff800032847f : add byte ptr [rax], al ; add byte ptr [rbp - 0x24], dh ; pop rbp ; ret
0xffffff8000581525 : add byte ptr [rax], al ; add byte ptr [rbp - 0x2a], dh ; pop rbp ; ret
0xffffff80003eae26 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff8000751d72 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; xor eax, eax ; pop rbp ; ret
0xffffff80008324a2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x52], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b43ea : add byte ptr [rax], al ; add byte ptr [rbp - 0x76e88140], al ; ret 0x6666
0xffffff800039519e : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; int1 ; call 0xffffff8000381408
0xffffff800083c1eb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800071fec1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8949
0xffffff80008448bd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x6348
0xffffff800083596d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; call 0xffffff7fc48212c9
0xffffff8000591b06 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0xffffff80004ab0dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8d4d
0xffffff80006e179d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ror dword ptr [rcx - 0x77], 1 ; ret 0x8b41
0xffffff80006aa063 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; ret
0xffffff800061c3a9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rbp + 0xf] ; ret
0xffffff800085cc2d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0xffffff80004692f6 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; push qword ptr [rbp - 0xe] ; jmp 0xffffff80004692cc
0xffffff8000692f17 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0xffffff80005ec734 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000747e3e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80008dfcee : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xb8 ; ret 2
0xffffff800055472c : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0xb60f
0xffffff80007af437 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff800061f2d2 : add byte ptr [rax], al ; add byte ptr [rbp - 0xb98b40], al ; ret
0xffffff80003934bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x21f28907], cl ; ret 0xff0
0xffffff80006b1721 : add byte ptr [rax], al ; add byte ptr [rbx + 0x27501f9], al ; pop rbp ; ret
0xffffff80003abebd : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff8000892a4e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0xffffff80002529ce : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800025db1c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000378ba8 : add byte ptr [rax], al ; add byte ptr [rbx + rax*2 - 0xa], dh ; ret
0xffffff800059b9a1 : add byte ptr [rax], al ; add byte ptr [rbx + rax*4], cl ; call qword ptr [rax]
0xffffff8000b4530f : add byte ptr [rax], al ; add byte ptr [rbx + rbp*4], bl ; int 0xc2
0xffffff80004a1bc7 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xb7cb8c], al ; ret 0x8348
0xffffff80002c3823 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x15], cl ; ret
0xffffff80005d174d : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2c], cl ; ror dword ptr [rax - 1], 1 ; ret 0x854d
0xffffff8000803ad2 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or al, ch ; ret 0xba7d
0xffffff800065f1ac : add byte ptr [rax], al ; add byte ptr [rbx + rdi + 0x3d], cl ; ret 0x4d51
0xffffff8000850c1a : add byte ptr [rax], al ; add byte ptr [rbx - 0x37], bl ; ret
0xffffff80002cb815 : add byte ptr [rax], al ; add byte ptr [rbx - 0x60f0a008], al ; ret
0xffffff80008e23ee : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af0eb02], al ; ret 0xb60f
0xffffff8000805441 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0bf06], al ; ret 0xff31
0xffffff80003d49b3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fd1a], al ; ret 0xc031
0xffffff800062c8e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7f3b8], cl ; ret
0xffffff8000729d00 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7fbc0], cl ; ret
0xffffff80004f6e88 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bb9f8f], cl ; ret 0xf229
0xffffff80003e814d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76be8fb9], cl ; ret 0xc141
0xffffff80004f61aa : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f607], al ; ret
0xffffff80006321cc : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fe07], al ; ret
0xffffff800075d021 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fe08], al ; ret 1
0xffffff80007479e6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb77bab], cl ; ret 0x4830
0xffffff8000683c6d : add byte ptr [rax], al ; add byte ptr [rbx - 0xb7f73a], al ; ret 0xff49
0xffffff800025026b : add byte ptr [rax], al ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80003928cf : add byte ptr [rax], al ; add byte ptr [rbx], al ; je 0xffffff80003928f3 ; leave ; ret
0xffffff80002a171b : add byte ptr [rax], al ; add byte ptr [rbx], al ; pop r12 ; pop rbp ; ret
0xffffff8000448d27 : add byte ptr [rax], al ; add byte ptr [rbx], al ; sbb byte ptr [r9], bpl ; ret 0x5389
0xffffff8000b46702 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; mov cl, 0xc2 ; ret
0xffffff80005631cc : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], al ; fcomip st(7) ; shl dword ptr [rcx], cl ; ret
0xffffff8000b48e9b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x481b
0xffffff800054e75d : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xc73
0xffffff80008581ad : add byte ptr [rax], al ; add byte ptr [rcx + 0x3d8d4cfb], cl ; call rdx
0xffffff80005f14d2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3df799f8], cl ; ret 0x490e
0xffffff80003923d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x59], al ; ret
0xffffff800070731f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e415bc8], cl ; pop rbp ; ret
0xffffff80002b0bed : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff8000710834 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff80004ce7ad : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8042
0xffffff800069fd67 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x9f ; ret
0xffffff80003d123e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret
0xffffff80008032e9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf74
0xffffff8000494960 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc3ff
0xffffff80004f21d9 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0xffffff80003b61ef : add byte ptr [rax], al ; add byte ptr [rcx + rax - 6], dh ; pop rbp ; ret
0xffffff80002f78e1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x70], cl ; and byte ptr [rax - 0x77], cl ; ret
0xffffff8000421e90 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff800010e148
0xffffff8000421e8f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff800010e149
0xffffff80007b878d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80007b4a68
0xffffff80007c8979 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80007c4bb8
0xffffff8000878770 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80008749e8
0xffffff8000529765 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0xffffff80008214d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0xffffff80007c7dc0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rcx
0xffffff800029ddf2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0xffffff8000772262 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000392a49
0xffffff800076f877 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000393049
0xffffff8000348c1d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000394ef8
0xffffff80007689a5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80007c4bb8
0xffffff80005293c0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0xffffff800090a2f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov esi, r15d ; call rcx
0xffffff80007cad02 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rdx, rbx ; call rax
0xffffff80006bd826 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0xffffff8000558c2f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdx, r14 ; call rbx
0xffffff800075e13c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; pop rbp ; jmp 0xffffff800077a429
0xffffff800051b376 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0xffffff80008f5f50 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rcx, r13 ; call rax
0xffffff80003cd239 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; call 0xffffff80004494a8
0xffffff8000748c39 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; call qword ptr [rbx]
0xffffff8000601eb5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff800010e148
0xffffff80004e311f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff800010e149
0xffffff80007640dd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e9
0xffffff80007a6625 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003928a8
0xffffff800076308b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000392a49
0xffffff800076d3c0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000393049
0xffffff800056895b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80007c4bb8
0xffffff80005e94f1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0xffffff80008ee325 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov esi, r14d ; call rcx
0xffffff80007c474d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r12 ; call rax
0xffffff80007c6455 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r13 ; call rax
0xffffff80008f61b3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r14 ; call rax
0xffffff80007caa52 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, rbx ; call rax
0xffffff80008eec55 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r14 ; call rcx
0xffffff80005ca474 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 5], cl ; jmp rcx
0xffffff8000799a13 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], al ; call rcx
0xffffff80008cb623 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000297878
0xffffff8000766ab9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e9
0xffffff8000556208 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003924d8
0xffffff8000767d3f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003928a9
0xffffff8000762d30 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000392a49
0xffffff8000767465 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393049
0xffffff8000277214 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393488
0xffffff80005d9269 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80005e5498
0xffffff80006bbebf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80007b8128
0xffffff80008788e1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000874b98
0xffffff80005e2255 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff80008ee6c5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0xffffff80007c66b1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0xffffff80007c9df8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, rbx ; call rcx
0xffffff80008f73cc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff80002647b1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0xb7f68c], al ; ret
0xffffff80002b6274 : add byte ptr [rax], al ; add byte ptr [rcx + rdi + 0x25], cl ; ret 0x8373
0xffffff80005ba045 : add byte ptr [rax], al ; add byte ptr [rcx - 0x162dce22], cl ; ret 0
0xffffff80007515df : add byte ptr [rax], al ; add byte ptr [rcx - 0x16f43], al ; call qword ptr [rax]
0xffffff800039351f : add byte ptr [rax], al ; add byte ptr [rcx - 0x27ddf008], cl ; pop rbp ; ret
0xffffff800079ab42 : add byte ptr [rax], al ; add byte ptr [rcx - 0x38b733a3], cl ; ret
0xffffff80004b3d58 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcebba9], cl ; pop rbp ; ret
0xffffff800088db96 : add byte ptr [rax], al ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff8000b4656f : add byte ptr [rax], al ; add byte ptr [rcx - 0x41], cl ; sysenter
0xffffff80008e4a9c : add byte ptr [rax], al ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff8000880177 : add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; ret 2
0xffffff80008bb141 : add byte ptr [rax], al ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff800031642c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rbp ; xor al, 0xf7 ; ret 0
0xffffff80007bd477 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [rcx], r15b ; ret
0xffffff80002c587b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; pop rsi ; xor byte ptr [rax + 0x29], cl ; ret
0xffffff800054020d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret 0x481c
0xffffff8000595b96 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x77], r9b ; ret
0xffffff80004b906d : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; pop rbx ; add dword ptr [rcx - 1], ecx ; ret
0xffffff8000407949 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76fb8a27], cl ; ret
0xffffff800031307a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80004ea1c1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x77] ; ret
0xffffff800082182c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff80008d2569 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x19eb
0xffffff80003cb0f2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2944
0xffffff80008d2537 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x4beb
0xffffff80006e12b5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; xlatb ; call 0xffffff800030de49
0xffffff8000275a98 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb707a8], cl ; ret 0x4104
0xffffff80003b0c19 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff8000512b8f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rbx]
0xffffff800027dae3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rcx]
0xffffff800026f40f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rdx]
0xffffff80007f1049 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rsi]
0xffffff80008a0d5f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0xffffff800083ef1a : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff8000843ebd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4503
0xffffff80004aaa66 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x45fc
0xffffff80006d803d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0xffffff800038b854 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0xffffff80006d215c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xba20
0xffffff800038e2b7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0xffffff800027bdb7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; out 0xff, al ; jmp rax
0xffffff80003c8953 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret 0x110
0xffffff80007b03ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x7feb740], cl ; pop rbp ; ret
0xffffff80004202a4 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0xffffff800054afb1 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0xffffff800084cdb7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf38
0xffffff80003b50bd : add byte ptr [rax], al ; add byte ptr [rcx - 0xb765c4], cl ; ret
0xffffff80004aaf0d : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0xffffff80002d6afc : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8341
0xffffff800076f04d : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret 0xf41
0xffffff800061e349 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0xffffff8000459fb3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80008ce34b : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0xe95d
0xffffff80004f21d5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0xffffff80003925e8 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xffffff80003925d8 ; xor eax, eax ; ret
0xffffff80008d5c07 : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff8000272ffb : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x3145
0xffffff80008cd0dd : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0xffffff80006d693d : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xc189
0xffffff80003c653f : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff80006ab88e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1b75
0xffffff80006af162 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x2775
0xffffff800044c81a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4072
0xffffff800062e9de : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff800044c857 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x470f
0xffffff8000257aad : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4c7d
0xffffff80002bccbc : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x77f
0xffffff80006711c3 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x7c75
0xffffff80003c5fd4 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff80007fd4b1 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff800046188e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x870f
0xffffff80005fd9b9 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x940f
0xffffff8000757a29 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xb74
0xffffff80004f691c : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xbb
0xffffff800044c84c : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xe72
0xffffff80006306a8 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xb78b
0xffffff80003a7fdb : add byte ptr [rax], al ; add byte ptr [rcx], bh ; sal dword ptr [rbp + 2], 0x5d ; ret
0xffffff80007b706a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; clc ; pop rbp ; ret
0xffffff800064a1e5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x415b, 0x5e ; pop rbp ; ret
0xffffff80003a720b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0xffffff80003f2f67 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x1b9
0xffffff800065f71d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x7d83
0xffffff800077173d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8941
0xffffff8000617d70 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9389
0xffffff80003f2fb6 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc748
0xffffff8000b4a069 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca01
0xffffff80004c2dde : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0xffffff8000858208 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xdf89
0xffffff8000b4b8cd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xe283
0xffffff80003038e8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf883
0xffffff8000b42aa7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xfa83
0xffffff800028869a : add byte ptr [rax], al ; add byte ptr [rcx], cl ; js 0xffffff80002886ff ; pop rbp ; ret
0xffffff8000514e41 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x674
0xffffff800033155b : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0x8941
0xffffff80004bc95b : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xe383
0xffffff8000267155 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; call rbx
0xffffff80002d6e01 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; div byte ptr [rcx] ; shr al, cl ; ret
0xffffff80004d5b57 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fcomi st(6) ; ret 0xf01
0xffffff8000627a46 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x476
0xffffff800029a73c : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rbp + rcx*4 + 0x3d] ; ret
0xffffff80007c36e8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(1) ; ret
0xffffff8000350894 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(1) ; ret 0
0xffffff80006bb6a7 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; mov dl, al ; jmp 0xffffff80006bb6c2
0xffffff80003aefa0 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; pop rbp ; jmp rax
0xffffff800088d2d7 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80006c5c5a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; push rsi ; ret 0xf01
0xffffff80002a28a9 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800030b98a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff80003dd192 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x7d ; ret
0xffffff800054bd51 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xd8cb
0xffffff8000613a37 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff8000820b50 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0xffffff80005548fa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xa], cl ; call r12
0xffffff8000382e09 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal al, 0xf ; mov cl, 0xd ; ret 0x77ae
0xffffff800033967a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; leave ; call 0xffffff80003858e9
0xffffff800081c604 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x12 ; ret 0xffff
0xffffff8000671e77 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x2f ; ret
0xffffff8000671e4e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x58 ; ret
0xffffff800081c4b8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x5e ; ret
0xffffff8000571f3f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x67 ; ret 0xffd1
0xffffff800066b328 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x7e ; ret 0x49ff
0xffffff8000671e23 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x83 ; ret
0xffffff80006672e3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xc3 ; outsb dx, byte ptr [rsi] ; ret 0x4cff
0xffffff800045be38 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xe ; sysenter
0xffffff80007b1ec0 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xe6 ; ret 0xffad
0xffffff800063ddf0 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80006a573e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; fdiv dword ptr [rcx] ; ret
0xffffff80006a5271 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80006a5f0d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; or dword ptr [rdx], ebp ; ret
0xffffff80006a47bc : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; pop rdx ; ret
0xffffff80002ec57a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; pushfq ; ret
0xffffff800039d953 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; ret
0xffffff80004e6a84 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; ret 0x2938
0xffffff80008d8954 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; ret 0x9fff
0xffffff800032e554 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; ret 0xfaa3
0xffffff80002670fc : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xda ; call r15
0xffffff8000818d9a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000818de9
0xffffff800086274a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000862799
0xffffff800086335a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008633a9
0xffffff80008819fa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000881a49
0xffffff800089241a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000892469
0xffffff80008950ba : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000895109
0xffffff8000898faa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000898ff9
0xffffff8000899c1a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000899c69
0xffffff800089d11a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff800089d169
0xffffff80008a29aa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a29f9
0xffffff80008a7b1a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a7b69
0xffffff80008a9eda : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a9f29
0xffffff80008aaaaa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008aaaf9
0xffffff80008ab0ea : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ab139
0xffffff80008ab44a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ab499
0xffffff80008ad2fa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ad349
0xffffff80008adfea : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ae039
0xffffff80008b295a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b29a9
0xffffff80008b325a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b32a9
0xffffff80008b3d4a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b3d99
0xffffff80008b68ea : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b6939
0xffffff80008c29ea : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008c2a39
0xffffff80008cc32a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008cc379
0xffffff80008ce12a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ce179
0xffffff80008ceaca : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ceb19
0xffffff80008d06fa : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d0749
0xffffff80008d4a5a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d4aa9
0xffffff80008d5a5a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d5aa9
0xffffff80008d61ea : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d6239
0xffffff80008e754a : add byte ptr [rax], al ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008e7599
0xffffff8000549182 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff80003ad844 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0xffffff800049555b : add byte ptr [rax], al ; add byte ptr [rdi + rbx - 0x77], dh ; ret 0xe283
0xffffff800074f96a : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8d49
0xffffff80002f8726 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0xd231
0xffffff800049ed88 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], al ; loope 0xffffff800049edd1 ; ret
0xffffff80008387f4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; adc cl, byte ptr [rax - 1] ; ret 0x8141
0xffffff80004015af : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x5d], al ; ret 0x6273
0xffffff80003c04cb : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x7c], ah ; ret 0
0xffffff80004c1a4e : add byte ptr [rax], al ; add byte ptr [rdi + rcx], al ; ret
0xffffff80006c6712 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], al ; ret 0x8b41
0xffffff8000880533 : add byte ptr [rax], al ; add byte ptr [rdi - 0x28], bh ; pop rbp ; ret
0xffffff8000880633 : add byte ptr [rax], al ; add byte ptr [rdi - 0x28], bh ; pop rbx ; pop rbp ; ret
0xffffff80005ae1c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0xf48, 0x46 ; ret 0xcb29
0xffffff8000513a4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 1], ecx ; ret
0xffffff800054c38f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x47 ; adc byte ptr [rcx + 0x39], al ; ret 0x4a75
0xffffff80006bfd3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff800069d2e7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x81 ; ret
0xffffff800053550f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0xffffff800050a301 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; rcr dword ptr [r13 - 0x3d], 0x5d ; ret
0xffffff80003a3974 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0xffffff80005471d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x2b74
0xffffff8000791526 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x394c
0xffffff80006dd2c3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4189
0xffffff80002ea42d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x589
0xffffff8000797463 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x689
0xffffff800070ad97 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0xffffff80006d8053 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x840f
0xffffff8000323aac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8589
0xffffff8000746e59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8943
0xffffff80003e028c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8948
0xffffff80006304be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d44
0xffffff8000680325 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa3eb
0xffffff80004139ff : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc139
0xffffff800029f442 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35d
0xffffff800047628b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0xffffff800083d3cb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc809
0xffffff80003e0928 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc985
0xffffff80003fb19b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd231
0xffffff80004410a0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xdb84
0xffffff80006247d3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf001
0xffffff800061cc74 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf641
0xffffff80003717e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; shr dword ptr [rcx], 1 ; ret 0x8d48
0xffffff800061f0da : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff800038149d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff800062f3ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc085
0xffffff80004c937c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda08
0xffffff800044b0ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff800087689e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80003b25b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc220
0xffffff80004dc676 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf44
0xffffff80003bc0a6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xor bh, bh ; ret
0xffffff80008427f7 : add byte ptr [rax], al ; add byte ptr [rdx + 0x2550], bh ; call rax
0xffffff800062627b : add byte ptr [rax], al ; add byte ptr [rdx + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80002b4c28 : add byte ptr [rax], al ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000574867 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x76], dh ; sbb cl, byte ptr [rax - 1] ; ret 0x274
0xffffff8000754546 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x77], dh ; ret
0xffffff80002a998c : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x78], dh ; ret 0xc031
0xffffff80005509c1 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*2 - 0x48], dh ; add dword ptr [rax], esp ; ret 0x2304
0xffffff800083b9d4 : add byte ptr [rax], al ; add byte ptr [rdx - 0x19], dh ; pop rbp ; ret
0xffffff800083baf4 : add byte ptr [rax], al ; add byte ptr [rdx - 0x49], dh ; pop rbp ; ret
0xffffff800083b994 : add byte ptr [rax], al ; add byte ptr [rdx - 0x53], dh ; pop rbp ; ret
0xffffff80006c055d : add byte ptr [rax], al ; add byte ptr [rdx - 0x77bef7ec], cl ; push rsp ; sysenter
0xffffff80007721dd : add byte ptr [rax], al ; add byte ptr [rdx - 0xb7feb5], cl ; ret
0xffffff80005b371d : add byte ptr [rax], al ; add byte ptr [rdx - 0xb7feb6], cl ; ret 0xc984
0xffffff800045f8ad : add byte ptr [rax], al ; add byte ptr [rdx - 0xb7febd], cl ; ret
0xffffff800059e93d : add byte ptr [rax], al ; add byte ptr [rdx - 0xb7febe], cl ; ret 0xc084
0xffffff80005f21c4 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x3a9a
0xffffff800067d3ee : add byte ptr [rax], al ; add byte ptr [rdx], spl ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x820f
0xffffff80006b45fd : add byte ptr [rax], al ; add byte ptr [rip + 0xfffff], ah ; pop rbp ; ret
0xffffff80005ed967 : add byte ptr [rax], al ; add byte ptr [rsi + 0x31], ah ; ret 0xc166
0xffffff80003b879c : add byte ptr [rax], al ; add byte ptr [rsi + 7], bh ; call r14
0xffffff800072062f : add byte ptr [rax], al ; add byte ptr [rsi + rcx - 0x77], dh ; ret 0xe283
0xffffff800037a462 : add byte ptr [rax], al ; add byte ptr [rsi + rdi - 0xa], dh ; ret
0xffffff80006ca607 : add byte ptr [rax], al ; add byte ptr [rsi - 0x39], ah ; ret 0
0xffffff800055d7f8 : add byte ptr [rax], al ; add byte ptr [rsi - 0x39], ah ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff80006773ee : add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff8000693a67 : add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff800070132d : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; push rbx ; adc ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80007012e9 : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; push rbx ; or ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80004eefdd : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; xor ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002aa78f : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; dec byte ptr [rax - 0x7d] ; ret
0xffffff80005df0ec : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0x8b41
0xffffff800066be74 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff80002d464f : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; add bh, bh ; ret
0xffffff800029f761 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret
0xffffff800066f1a6 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x2006
0xffffff80004d5c4a : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x564
0xffffff80002c7e81 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x802
0xffffff80003d5408 : add byte ptr [rax], al ; add byte ptr [rsi*2 + 0x3d8d4c0c], al ; ret
0xffffff800063ed1f : add byte ptr [rax], al ; add byte ptr [rsi*2 - 0x936ce9b], al ; ret 0x7402
0xffffff800070917c : add byte ptr [rax], al ; add byte ptr [rsp + rax - 1], dh ; ret 0xd689
0xffffff800038765a : add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0xffffff80008f2492 : add byte ptr [rax], al ; add ch, bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b49167 : add byte ptr [rax], al ; add cl, byte ptr [rcx + 0x21] ; ret 0x3149
0xffffff800048e239 : add byte ptr [rax], al ; add cl, ch ; call qword ptr [rsi]
0xffffff80003d12bd : add byte ptr [rax], al ; add cl, ch ; cmc ; ret
0xffffff80003c839a : add byte ptr [rax], al ; add cl, ch ; mov edx, 0x81000019 ; ret
0xffffff80003143fc : add byte ptr [rax], al ; add cl, ch ; ret
0xffffff800046d781 : add byte ptr [rax], al ; add cl, ch ; ret 0
0xffffff8000465351 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0xffffff800037b9d9 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0xffffff800067fd4e : add byte ptr [rax], al ; add cl, ch ; ret 1
0xffffff8000443442 : add byte ptr [rax], al ; add cl, ch ; ret 2
0xffffff80006d55d4 : add byte ptr [rax], al ; add cl, ch ; ret 3
0xffffff800043979b : add byte ptr [rax], al ; add cl, ch ; ret 5
0xffffff80007eb86f : add byte ptr [rax], al ; add cl, ch ; stc ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80003895f1 : add byte ptr [rax], al ; add dh, bh ; pop rbp ; ret
0xffffff800043e7d7 : add byte ptr [rax], al ; add dh, bh ; ret 0xb60f
0xffffff80008d91f1 : add byte ptr [rax], al ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff80007fd066 : add byte ptr [rax], al ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800025e8ad : add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80003025c4 : add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0xffffff800079353f : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0xffffff80004d5076 : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0xffffff800028fabd : add byte ptr [rax], al ; add dh, dh ; ret 0x7407
0xffffff8000611e54 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff80005df5eb : add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0xffffff8000457157 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0xffffff800059e76c : add byte ptr [rax], al ; add dh, dh ; ret 0x7480
0xffffff800062902d : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0xffffff80005df5db : add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0xffffff80004dbb04 : add byte ptr [rax], al ; add dh, dh ; ret 0x7503
0xffffff8000525efb : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0xffffff8000525ef1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0xffffff80002c9cdc : add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0xffffff800066cf4a : add byte ptr [rax], al ; add dh, dh ; ret 0x7520
0xffffff80005c29ea : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0xffffff80005c29b8 : add byte ptr [rax], al ; add dh, dh ; ret 0x7580
0xffffff80002a9286 : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff8000449318 : add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0xffffff800058a8c4 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0xffffff800071c440 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0xffffff800064e477 : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0xffffff800071c41a : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0xffffff800071c407 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0xffffff800071c3f4 : add byte ptr [rax], al ; add dh, dh ; ret 0xf80
0xffffff800040e70b : add byte ptr [rax], al ; add dh, dh ; ret 0xf82
0xffffff80004c09fa : add byte ptr [rax], al ; add dh, dh ; ret 0xf90
0xffffff80006015e5 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0xffffff8000624c3b : add byte ptr [rax], al ; add dl, bh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007a3d13 : add byte ptr [rax], al ; add dword ptr [rax + rcx - 0x18], esi ; ret
0xffffff8000513fee : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004f9135 : add byte ptr [rax], al ; add dword ptr [rax], eax ; and eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80003ae12a : add byte ptr [rax], al ; add dword ptr [rax], eax ; jne 0xffffff80003ae139 ; pop rbp ; ret
0xffffff80006d6738 : add byte ptr [rax], al ; add dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000423148 : add byte ptr [rax], al ; add dword ptr [rbp + 5], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bbe10 : add byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; pop rbp ; ret
0xffffff800076e9d2 : add byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 9], ecx ; call 0xffffff8000393049
0xffffff80007dc86f : add byte ptr [rax], al ; add dword ptr [rcx], esi ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800083d528 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xf983
0xffffff80002f8a83 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; ret 0xc839
0xffffff800043d5d7 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80008497fc : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0xffffff8000791864 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xbf41
0xffffff800043d161 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe9c1
0xffffff80004dfe13 : add byte ptr [rax], al ; add dword ptr [rdx + rcx - 0x18], esi ; ret
0xffffff80004e07ff : add byte ptr [rax], al ; add dword ptr [rdx + rcx - 0x18], esi ; xlatb ; ret
0xffffff80008fe513 : add byte ptr [rax], al ; add dword ptr [rsi + rcx - 0x18], esi ; ret
0xffffff80008435ba : add byte ptr [rax], al ; add eax, -0xd ; mov dx, r8w ; jmp 0xffffff80008435d0
0xffffff80003a2899 : add byte ptr [rax], al ; add eax, 0x5d000000 ; ret
0xffffff8000272ae9 : add byte ptr [rax], al ; add eax, 0x5d100040 ; ret
0xffffff80008d7906 : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002a171c : add byte ptr [rax], al ; add eax, dword ptr [rcx + 0x5c] ; pop rbp ; ret
0xffffff8000680c2b : add byte ptr [rax], al ; add eax, ecx ; pop rbp ; ret
0xffffff80007b70b1 : add byte ptr [rax], al ; add ecx, dword ptr [rdi + 0x18] ; sub eax, ecx ; pop rbp ; ret
0xffffff80007e517a : add byte ptr [rax], al ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80003928d0 : add byte ptr [rax], al ; add esi, dword ptr [rdi + rdx - 0x37] ; ret
0xffffff800063c875 : add byte ptr [rax], al ; add qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff800063c8de : add byte ptr [rax], al ; add qword ptr [rax + 8], rdx ; pop rbp ; ret
0xffffff8000785f1f : add byte ptr [rax], al ; add qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff800038c0bb : add byte ptr [rax], al ; add rax, 0x58 ; pop rbp ; ret
0xffffff8000798485 : add byte ptr [rax], al ; add rax, rdx ; pop rbp ; ret
0xffffff800076cf54 : add byte ptr [rax], al ; add rbx, qword ptr [r15 + 0x20] ; call 0xffffff8000392a49
0xffffff8000286103 : add byte ptr [rax], al ; add rdi, 8 ; call 0xffffff80003923e8
0xffffff80002859b3 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000308480 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80003498a7 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80002ce669 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80003f23ad : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0xffffff800033852a : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0xffffff8000366464 : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff800039a304 : add byte ptr [rax], al ; add rsp, 2 ; pop rbp ; ret
0xffffff80004f89eb : add byte ptr [rax], al ; add rsp, 8 ; pop rbp ; ret
0xffffff8000268dc6 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006ec1ac : add byte ptr [rax], al ; and bh, dh ; ret
0xffffff8000b49651 : add byte ptr [rax], al ; and byte ptr [rax + 0x21], cl ; ret 0xb848
0xffffff80003895d4 : add byte ptr [rax], al ; and byte ptr [rax + 0x50], 0xfe ; pop rbp ; ret
0xffffff8000615332 : add byte ptr [rax], al ; and byte ptr [rax - 0x77], cl ; ret
0xffffff80004b3877 : add byte ptr [rax], al ; and byte ptr [rax], al ; pop rbp ; ret
0xffffff80004f9356 : add byte ptr [rax], al ; and byte ptr [rbx], 0x47 ; je 0xffffff80004f93c1 ; ret
0xffffff800070e0c2 : add byte ptr [rax], al ; and byte ptr [rbx], 0xfe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061e505 : add byte ptr [rax], al ; and byte ptr [rdi], cl ; ret 0x28b9
0xffffff80004b3b7e : add byte ptr [rax], al ; and dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff800062e0cc : add byte ptr [rax], al ; and eax, 0x100000 ; pop rbp ; ret
0xffffff8000756db8 : add byte ptr [rax], al ; and eax, 0xc ; pop rbp ; ret
0xffffff80007cd799 : add byte ptr [rax], al ; and eax, 0xf ; pop rbp ; ret
0xffffff80006b45fe : add byte ptr [rax], al ; and eax, 0xfffff ; pop rbp ; ret
0xffffff80002bbda8 : add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff8000299921 : add byte ptr [rax], al ; and eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80004b3b97 : add byte ptr [rax], al ; and eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80007d011d : add byte ptr [rax], al ; and ecx, eax ; mov dword ptr [rdi + 4], ecx ; pop rbp ; ret
0xffffff80003abdc8 : add byte ptr [rax], al ; and edx, ebx ; call rax
0xffffff80007f0608 : add byte ptr [rax], al ; and rax, 0x800000 ; pop rbp ; ret
0xffffff800084f559 : add byte ptr [rax], al ; and rax, 0xfffffffffffff000 ; pop rbp ; ret
0xffffff80006d63ab : add byte ptr [rax], al ; bswap eax ; pop rbp ; ret
0xffffff80004e645e : add byte ptr [rax], al ; call 0xffffff800010e055
0xffffff800064e64c : add byte ptr [rax], al ; call 0xffffff800010e058
0xffffff8000273271 : add byte ptr [rax], al ; call 0xffffff800010e059
0xffffff8000401e54 : add byte ptr [rax], al ; call 0xffffff800010e084
0xffffff80005dc70c : add byte ptr [rax], al ; call 0xffffff800010e089
0xffffff8000571e53 : add byte ptr [rax], al ; call 0xffffff800010e0d4
0xffffff800051634e : add byte ptr [rax], al ; call 0xffffff800010e0d9
0xffffff80004d1e49 : add byte ptr [rax], al ; call 0xffffff800010e144
0xffffff80004e105c : add byte ptr [rax], al ; call 0xffffff800010e145
0xffffff80005ceec9 : add byte ptr [rax], al ; call 0xffffff800010e149
0xffffff800030a355 : add byte ptr [rax], al ; call 0xffffff8000289f18
0xffffff8000271ea6 : add byte ptr [rax], al ; call 0xffffff800028e154
0xffffff800066b360 : add byte ptr [rax], al ; call 0xffffff800028e155
0xffffff80002cd252 : add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff800025c35b : add byte ptr [rax], al ; call 0xffffff800028e158
0xffffff80002c43a3 : add byte ptr [rax], al ; call 0xffffff800028e159
0xffffff800066733f : add byte ptr [rax], al ; call 0xffffff800028e1b5
0xffffff8000276a82 : add byte ptr [rax], al ; call 0xffffff8000292d74
0xffffff800032fa93 : add byte ptr [rax], al ; call 0xffffff800029bce4
0xffffff80002f83f2 : add byte ptr [rax], al ; call 0xffffff800029bce9
0xffffff8000482d87 : add byte ptr [rax], al ; call 0xffffff80002bf064
0xffffff80006b48f0 : add byte ptr [rax], al ; call 0xffffff8000370bc4
0xffffff8000742592 : add byte ptr [rax], al ; call 0xffffff8000370bc5
0xffffff8000393f82 : add byte ptr [rax], al ; call 0xffffff800038b1e8
0xffffff8000316577 : add byte ptr [rax], al ; call 0xffffff8000392794
0xffffff80005a65eb : add byte ptr [rax], al ; call 0xffffff80003928a4
0xffffff80007690a6 : add byte ptr [rax], al ; call 0xffffff80003928a5
0xffffff80005b6b17 : add byte ptr [rax], al ; call 0xffffff80003928a8
0xffffff80005cff47 : add byte ptr [rax], al ; call 0xffffff80003928a9
0xffffff80008e6751 : add byte ptr [rax], al ; call 0xffffff8000392a44
0xffffff8000706d68 : add byte ptr [rax], al ; call 0xffffff8000393044
0xffffff800046d000 : add byte ptr [rax], al ; call 0xffffff8000393048
0xffffff80004bc477 : add byte ptr [rax], al ; call 0xffffff8000393489
0xffffff800077251a : add byte ptr [rax], al ; call 0xffffff800039923f
0xffffff80003a9b4b : add byte ptr [rax], al ; call 0xffffff800039a3e9
0xffffff8000778296 : add byte ptr [rax], al ; call 0xffffff800039cff5
0xffffff8000778f75 : add byte ptr [rax], al ; call 0xffffff800039d365
0xffffff80003cca18 : add byte ptr [rax], al ; call 0xffffff8000448c54
0xffffff80003cca83 : add byte ptr [rax], al ; call 0xffffff8000448d54
0xffffff80003cd1e8 : add byte ptr [rax], al ; call 0xffffff80004494a4
0xffffff80004c40c9 : add byte ptr [rax], al ; call 0xffffff8000510374
0xffffff80005c688a : add byte ptr [rax], al ; call 0xffffff80005c2b74
0xffffff80005c1f97 : add byte ptr [rax], al ; call 0xffffff80005c56e9
0xffffff80006dfeb6 : add byte ptr [rax], al ; call 0xffffff800071c0f4
0xffffff8000748af1 : add byte ptr [rax], al ; call 0xffffff800074b3a9
0xffffff80005be712 : add byte ptr [rax], al ; call 0xffffff800077dac9
0xffffff80007cdb53 : add byte ptr [rax], al ; call 0xffffff8000789c79
0xffffff800042066a : add byte ptr [rax], al ; call 0xffffff800078c8c4
0xffffff80007a5826 : add byte ptr [rax], al ; call 0xffffff80007a0b89
0xffffff80005d837d : add byte ptr [rax], al ; call 0xffffff80007b4654
0xffffff8000862f2a : add byte ptr [rax], al ; call 0xffffff800080f1a4
0xffffff8000895177 : add byte ptr [rax], al ; call 0xffffff80008113f4
0xffffff80008ea848 : add byte ptr [rax], al ; call 0xffffff8000856ad4
0xffffff80002afe25 : add byte ptr [rax], al ; call 0xffffff80008ec094
0xffffff8000376bc1 : add byte ptr [rax], al ; call 0xffffff80008ec098
0xffffff80002f88b4 : add byte ptr [rax], al ; call 0xffffff80008ec099
0xffffff8000266c1f : add byte ptr [rax], al ; call r14
0xffffff8000267135 : add byte ptr [rax], al ; call r15
0xffffff800034d934 : add byte ptr [rax], al ; call rax
0xffffff80003ab90d : add byte ptr [rax], al ; call rcx
0xffffff80002a122a : add byte ptr [rax], al ; cdq ; idiv ecx ; mov r10d, eax ; jmp 0xffffff80002a1242
0xffffff8000624c3c : add byte ptr [rax], al ; cli ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003e71f0 : add byte ptr [rax], al ; cmova eax, ecx ; pop rbp ; ret
0xffffff8000436123 : add byte ptr [rax], al ; cmovb eax, ecx ; pop rbp ; ret
0xffffff800072c127 : add byte ptr [rax], al ; cmovb eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff80008f01c5 : add byte ptr [rax], al ; cmovbe eax, ecx ; pop rbp ; ret
0xffffff800028197f : add byte ptr [rax], al ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000680326 : add byte ptr [rax], al ; cmove eax, edx ; jmp 0xffffff80006802d4
0xffffff800051bd86 : add byte ptr [rax], al ; cmove eax, edx ; pop rbp ; ret
0xffffff800031ebc3 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbp ; ret
0xffffff8000579e76 : add byte ptr [rax], al ; cmovl eax, ecx ; pop rbp ; ret
0xffffff800029f443 : add byte ptr [rax], al ; cmovle eax, edx ; pop rbp ; ret
0xffffff80003bba64 : add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80004cbd3a : add byte ptr [rax], al ; cmovne eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003924c9 : add byte ptr [rax], al ; cmovne eax, ecx ; ret
0xffffff800082e959 : add byte ptr [rax], al ; cmovne eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff80008121b9 : add byte ptr [rax], al ; cmovne eax, esi ; mov dword ptr [rdi + 0x28], eax ; pop rbp ; ret
0xffffff800082c6f9 : add byte ptr [rax], al ; cmovne eax, esi ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff80008a8399 : add byte ptr [rax], al ; cmovne edi, esi ; pop rbp ; jmp rcx
0xffffff8000760c2b : add byte ptr [rax], al ; cmovs eax, ecx ; pop rbp ; ret
0xffffff80003a4f6d : add byte ptr [rax], al ; cmp bh, 0xff ; dec dword ptr [rax + 9] ; ret
0xffffff80002d51dc : add byte ptr [rax], al ; cmp byte ptr [rdi - 1], 0xff ; dec dword ptr [rax + 0x39] ; ret
0xffffff800034dffa : add byte ptr [rax], al ; cmp byte ptr [rdi - 1], 0xff ; dec dword ptr [rax + 1] ; ret
0xffffff800029bd34 : add byte ptr [rax], al ; cmp eax, 1 ; jne 0xffffff800029bd5f ; pop rbp ; ret
0xffffff80003a2d9a : add byte ptr [rax], al ; cmp eax, edi ; jne 0xffffff80003a2dad ; xor eax, eax ; pop rbp ; ret
0xffffff80006b1722 : add byte ptr [rax], al ; cmp ecx, 1 ; jne 0xffffff80006b1733 ; pop rbp ; ret
0xffffff800062e189 : add byte ptr [rax], al ; cmp ecx, eax ; cmova eax, ecx ; pop rbp ; ret
0xffffff80003a7fdc : add byte ptr [rax], al ; cmp ecx, eax ; jne 0xffffff80003a7feb ; pop rbp ; ret
0xffffff80003a64ff : add byte ptr [rax], al ; cmp esi, ecx ; jl 0xffffff80003a64f7 ; pop rbp ; ret
0xffffff80004571be : add byte ptr [rax], al ; cmp r13d, 2 ; cmovg eax, edx ; jmp 0xffffff80004571ea
0xffffff80005492b9 : add byte ptr [rax], al ; cmp rax, 4 ; jbe 0xffffff80005492cc ; pop rbp ; ret
0xffffff800083b2e2 : add byte ptr [rax], al ; cmp rcx, 0x10 ; jne 0xffffff800083b2d9 ; pop rbp ; ret
0xffffff80002b736e : add byte ptr [rax], al ; cmp rdi, rcx ; jne 0xffffff80002b7368 ; pop rbp ; ret
0xffffff8000721080 : add byte ptr [rax], al ; cwde ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025b551 : add byte ptr [rax], al ; dec dword ptr [rbx - 0x10b43] ; jmp qword ptr [rcx]
0xffffff800025b798 : add byte ptr [rax], al ; dec dword ptr [rbx - 0xc343] ; jmp qword ptr [rcx]
0xffffff8000810d77 : add byte ptr [rax], al ; emms ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff8000828b0c : add byte ptr [rax], al ; fcomp qword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800064faf0 : add byte ptr [rax], al ; fistp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007715a9 : add byte ptr [rax], al ; fisttp word ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393049
0xffffff80008a0086 : add byte ptr [rax], al ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff80002ea93a : add byte ptr [rax], al ; inc dword ptr [rip + 0x8066d6] ; pop rbp ; ret
0xffffff80003a2fe7 : add byte ptr [rax], al ; inc qword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80002f874c : add byte ptr [rax], al ; ja 0xffffff80002f8759 ; xor eax, eax ; pop rbp ; ret
0xffffff8000818d9b : add byte ptr [rax], al ; ja 0xffffff8000818dcd ; jmp 0xffffff8000818de8
0xffffff800082c1a7 : add byte ptr [rax], al ; ja 0xffffff800082c1d8 ; jmp 0xffffff800082c1f0
0xffffff800082e087 : add byte ptr [rax], al ; ja 0xffffff800082e0b8 ; jmp 0xffffff800082e0d0
0xffffff8000860eb7 : add byte ptr [rax], al ; ja 0xffffff8000860ee8 ; jmp 0xffffff8000860f00
0xffffff800086274b : add byte ptr [rax], al ; ja 0xffffff800086277d ; jmp 0xffffff8000862798
0xffffff8000862c37 : add byte ptr [rax], al ; ja 0xffffff8000862c68 ; jmp 0xffffff8000862c80
0xffffff800086335b : add byte ptr [rax], al ; ja 0xffffff800086338d ; jmp 0xffffff80008633a8
0xffffff80008819fb : add byte ptr [rax], al ; ja 0xffffff8000881a2d ; jmp 0xffffff8000881a48
0xffffff800088238b : add byte ptr [rax], al ; ja 0xffffff80008823bd ; jmp 0xffffff80008823d8
0xffffff8000887dfb : add byte ptr [rax], al ; ja 0xffffff8000887e2d ; jmp 0xffffff8000887e48
0xffffff800088cb07 : add byte ptr [rax], al ; ja 0xffffff800088cb38 ; jmp 0xffffff800088cb50
0xffffff800088e2b7 : add byte ptr [rax], al ; ja 0xffffff800088e2e8 ; jmp 0xffffff800088e300
0xffffff800088edd7 : add byte ptr [rax], al ; ja 0xffffff800088ee08 ; jmp 0xffffff800088ee20
0xffffff8000890057 : add byte ptr [rax], al ; ja 0xffffff8000890088 ; jmp 0xffffff80008900a0
0xffffff800089241b : add byte ptr [rax], al ; ja 0xffffff800089244d ; jmp 0xffffff8000892468
0xffffff8000893007 : add byte ptr [rax], al ; ja 0xffffff800089308b ; jmp 0xffffff8000893053
0xffffff80008950bb : add byte ptr [rax], al ; ja 0xffffff80008950ed ; jmp 0xffffff8000895108
0xffffff80008966d7 : add byte ptr [rax], al ; ja 0xffffff800089675b ; jmp 0xffffff8000896723
0xffffff8000898fab : add byte ptr [rax], al ; ja 0xffffff8000898fdd ; jmp 0xffffff8000898ff8
0xffffff8000899c1b : add byte ptr [rax], al ; ja 0xffffff8000899c4d ; jmp 0xffffff8000899c68
0xffffff800089d11b : add byte ptr [rax], al ; ja 0xffffff800089d14d ; jmp 0xffffff800089d168
0xffffff80008a29ab : add byte ptr [rax], al ; ja 0xffffff80008a29dd ; jmp 0xffffff80008a29f8
0xffffff80008a7b1b : add byte ptr [rax], al ; ja 0xffffff80008a7b4d ; jmp 0xffffff80008a7b68
0xffffff80008a9edb : add byte ptr [rax], al ; ja 0xffffff80008a9f0d ; jmp 0xffffff80008a9f28
0xffffff80008aaaab : add byte ptr [rax], al ; ja 0xffffff80008aaadd ; jmp 0xffffff80008aaaf8
0xffffff80008ab0eb : add byte ptr [rax], al ; ja 0xffffff80008ab11d ; jmp 0xffffff80008ab138
0xffffff80008ab44b : add byte ptr [rax], al ; ja 0xffffff80008ab47d ; jmp 0xffffff80008ab498
0xffffff80008ad2fb : add byte ptr [rax], al ; ja 0xffffff80008ad32d ; jmp 0xffffff80008ad348
0xffffff80008adfeb : add byte ptr [rax], al ; ja 0xffffff80008ae01d ; jmp 0xffffff80008ae038
0xffffff80008af2fb : add byte ptr [rax], al ; ja 0xffffff80008af32d ; jmp 0xffffff80008af348
0xffffff80008b295b : add byte ptr [rax], al ; ja 0xffffff80008b298d ; jmp 0xffffff80008b29a8
0xffffff80008b325b : add byte ptr [rax], al ; ja 0xffffff80008b328d ; jmp 0xffffff80008b32a8
0xffffff80008b3d4b : add byte ptr [rax], al ; ja 0xffffff80008b3d7d ; jmp 0xffffff80008b3d98
0xffffff80008b5c77 : add byte ptr [rax], al ; ja 0xffffff80008b5ca8 ; jmp 0xffffff80008b5cc0
0xffffff80008b68eb : add byte ptr [rax], al ; ja 0xffffff80008b691d ; jmp 0xffffff80008b6938
0xffffff80008c29eb : add byte ptr [rax], al ; ja 0xffffff80008c2a1d ; jmp 0xffffff80008c2a38
0xffffff80008cc32b : add byte ptr [rax], al ; ja 0xffffff80008cc35d ; jmp 0xffffff80008cc378
0xffffff80008ce12b : add byte ptr [rax], al ; ja 0xffffff80008ce15d ; jmp 0xffffff80008ce178
0xffffff80008ceacb : add byte ptr [rax], al ; ja 0xffffff80008ceafd ; jmp 0xffffff80008ceb18
0xffffff80008d06fb : add byte ptr [rax], al ; ja 0xffffff80008d072d ; jmp 0xffffff80008d0748
0xffffff80008d4a5b : add byte ptr [rax], al ; ja 0xffffff80008d4a8d ; jmp 0xffffff80008d4aa8
0xffffff80008d5a5b : add byte ptr [rax], al ; ja 0xffffff80008d5a8d ; jmp 0xffffff80008d5aa8
0xffffff80008d61eb : add byte ptr [rax], al ; ja 0xffffff80008d621d ; jmp 0xffffff80008d6238
0xffffff80008d73e7 : add byte ptr [rax], al ; ja 0xffffff80008d7418 ; jmp 0xffffff80008d7430
0xffffff80008d78cb : add byte ptr [rax], al ; ja 0xffffff80008d78fd ; jmp 0xffffff80008d7918
0xffffff80008e2557 : add byte ptr [rax], al ; ja 0xffffff80008e2588 ; jmp 0xffffff80008e25a0
0xffffff80008e754b : add byte ptr [rax], al ; ja 0xffffff80008e757d ; jmp 0xffffff80008e7598
0xffffff80006dabff : add byte ptr [rax], al ; jae 0xffffff80006dac10 ; inc dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800062627c : add byte ptr [rax], al ; jb 0xffffff8000626289 ; xor eax, eax ; pop rbp ; ret
0xffffff800083b995 : add byte ptr [rax], al ; jb 0xffffff800083b94b ; pop rbp ; ret
0xffffff800083b9d5 : add byte ptr [rax], al ; jb 0xffffff800083b9c5 ; pop rbp ; ret
0xffffff800083ba15 : add byte ptr [rax], al ; jb 0xffffff800083ba05 ; pop rbp ; ret
0xffffff800083ba85 : add byte ptr [rax], al ; jb 0xffffff800083ba75 ; pop rbp ; ret
0xffffff800083baf5 : add byte ptr [rax], al ; jb 0xffffff800083bab5 ; pop rbp ; ret
0xffffff80002fa8a2 : add byte ptr [rax], al ; jbe 0xffffff80002fa8b1 ; xor eax, eax ; pop rbp ; ret
0xffffff8000263a0d : add byte ptr [rax], al ; je 0xffffff8000263a1a ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800029f27a : add byte ptr [rax], al ; je 0xffffff800029f28b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a14bb : add byte ptr [rax], al ; je 0xffffff80002a14d7 ; nop ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80002ae860 : add byte ptr [rax], al ; je 0xffffff80002ae86d ; xor eax, eax ; pop rbp ; ret
0xffffff80002b4c29 : add byte ptr [rax], al ; je 0xffffff80002b4c34 ; pop rbp ; ret
0xffffff80003a1732 : add byte ptr [rax], al ; je 0xffffff80003a173d ; pop rbp ; ret
0xffffff80003acbba : add byte ptr [rax], al ; je 0xffffff80003acbc5 ; pop rbp ; ret
0xffffff80003b61f0 : add byte ptr [rax], al ; je 0xffffff80003b61fb ; cli ; pop rbp ; ret
0xffffff8000442cc1 : add byte ptr [rax], al ; je 0xffffff8000442cd2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049db60 : add byte ptr [rax], al ; je 0xffffff800049db6b ; cli ; pop rbp ; ret
0xffffff800050fd5d : add byte ptr [rax], al ; je 0xffffff800050fd6c ; xor eax, eax ; pop rbp ; ret
0xffffff800051e9c5 : add byte ptr [rax], al ; je 0xffffff800051e9d6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005f57c4 : add byte ptr [rax], al ; je 0xffffff80005f57cf ; pop rbp ; ret
0xffffff800069a648 : add byte ptr [rax], al ; je 0xffffff800069a655 ; xor eax, eax ; pop rbp ; ret
0xffffff8000740bd8 : add byte ptr [rax], al ; je 0xffffff8000740be3 ; pop rbp ; ret
0xffffff80007887e7 : add byte ptr [rax], al ; je 0xffffff80007887f8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d4f84 : add byte ptr [rax], al ; je 0xffffff80007d4f91 ; xor eax, eax ; pop rbp ; ret
0xffffff800084e651 : add byte ptr [rax], al ; je 0xffffff800084e662 ; add rax, 0x10 ; pop rbp ; ret
0xffffff8000898665 : add byte ptr [rax], al ; je 0xffffff8000898676 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e8271 : add byte ptr [rax], al ; je 0xffffff80008e827c ; pop rbp ; ret
0xffffff8000547fdd : add byte ptr [rax], al ; jg 0xffffff8000548032 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000548d7c : add byte ptr [rax], al ; jg 0xffffff8000548dd1 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000549183 : add byte ptr [rax], al ; jg 0xffffff80005491e9 ; pop r14 ; pop rbp ; ret
0xffffff8000771582 : add byte ptr [rax], al ; jg 0xffffff80007715db ; mov edi, esi ; call 0xffffff8000393049
0xffffff8000880534 : add byte ptr [rax], al ; jg 0xffffff8000880515 ; pop rbp ; ret
0xffffff80008805a4 : add byte ptr [rax], al ; jg 0xffffff8000880585 ; pop rbp ; ret
0xffffff8000880634 : add byte ptr [rax], al ; jg 0xffffff8000880616 ; pop rbx ; pop rbp ; ret
0xffffff80008806a4 : add byte ptr [rax], al ; jg 0xffffff8000880685 ; pop rbp ; ret
0xffffff80008812c7 : add byte ptr [rax], al ; jg 0xffffff800088134b ; jmp 0xffffff8000881316
0xffffff800079c21a : add byte ptr [rax], al ; jge 0xffffff800079c22b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007a8151 : add byte ptr [rax], al ; jle 0xffffff80007a8162 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800027c475 : add byte ptr [rax], al ; jmp 0xffffff800027c803
0xffffff800027fce5 : add byte ptr [rax], al ; jmp 0xffffff800027fcae
0xffffff80002a5ff0 : add byte ptr [rax], al ; jmp 0xffffff80002a5fb8
0xffffff80002b0d28 : add byte ptr [rax], al ; jmp 0xffffff80002b0e5d
0xffffff80002bd43f : add byte ptr [rax], al ; jmp 0xffffff80002bd45c
0xffffff80002d2e8a : add byte ptr [rax], al ; jmp 0xffffff80002d2ec4
0xffffff800030fc05 : add byte ptr [rax], al ; jmp 0xffffff800030fc58
0xffffff800033ada3 : add byte ptr [rax], al ; jmp 0xffffff800033acf4
0xffffff800033f0e1 : add byte ptr [rax], al ; jmp 0xffffff800033f0f4
0xffffff800035dfa6 : add byte ptr [rax], al ; jmp 0xffffff800035dfba
0xffffff800035e546 : add byte ptr [rax], al ; jmp 0xffffff800035e55a
0xffffff8000368c72 : add byte ptr [rax], al ; jmp 0xffffff8000368c9e
0xffffff800039482b : add byte ptr [rax], al ; jmp 0xffffff8000394867
0xffffff80003afd1d : add byte ptr [rax], al ; jmp 0xffffff80003af677
0xffffff80003c839b : add byte ptr [rax], al ; jmp 0xffffff80003c9d64
0xffffff80003cc97a : add byte ptr [rax], al ; jmp 0xffffff80003cc9cb
0xffffff80003f1e19 : add byte ptr [rax], al ; jmp 0xffffff80003f22f6
0xffffff800040edf4 : add byte ptr [rax], al ; jmp 0xffffff800040ee6d
0xffffff8000427ada : add byte ptr [rax], al ; jmp 0xffffff8000427b15
0xffffff8000463312 : add byte ptr [rax], al ; jmp 0xffffff800046332d
0xffffff8000468759 : add byte ptr [rax], al ; jmp 0xffffff8000468723
0xffffff8000468c39 : add byte ptr [rax], al ; jmp 0xffffff8000468c03
0xffffff80004bca3b : add byte ptr [rax], al ; jmp 0xffffff80004bca7a
0xffffff80004d1be1 : add byte ptr [rax], al ; jmp 0xffffff80004d11f0
0xffffff80005121a0 : add byte ptr [rax], al ; jmp 0xffffff8000512169
0xffffff8000532d07 : add byte ptr [rax], al ; jmp 0xffffff8000532d27
0xffffff800054960d : add byte ptr [rax], al ; jmp 0xffffff8000549463
0xffffff8000568cb5 : add byte ptr [rax], al ; jmp 0xffffff8000568c7e
0xffffff80005b76e4 : add byte ptr [rax], al ; jmp 0xffffff80005b76bd
0xffffff80005ddd4c : add byte ptr [rax], al ; jmp 0xffffff80005ddd65
0xffffff800060bab7 : add byte ptr [rax], al ; jmp 0xffffff800060bacb
0xffffff8000622da0 : add byte ptr [rax], al ; jmp 0xffffff8000622dba
0xffffff8000626db0 : add byte ptr [rax], al ; jmp 0xffffff8000626d8b
0xffffff800069cfb4 : add byte ptr [rax], al ; jmp 0xffffff800069cffc
0xffffff80006a1692 : add byte ptr [rax], al ; jmp 0xffffff80006a16dc
0xffffff80006c5aea : add byte ptr [rax], al ; jmp 0xffffff80006c5ab4
0xffffff80006cef22 : add byte ptr [rax], al ; jmp 0xffffff80006ceed3
0xffffff80006cefb0 : add byte ptr [rax], al ; jmp 0xffffff80006ceed6
0xffffff80006da9bc : add byte ptr [rax], al ; jmp 0xffffff80006da99d
0xffffff80006db025 : add byte ptr [rax], al ; jmp 0xffffff80006db055
0xffffff80006de494 : add byte ptr [rax], al ; jmp 0xffffff80006de45e
0xffffff8000716b09 : add byte ptr [rax], al ; jmp 0xffffff8000716b6f
0xffffff8000716acf : add byte ptr [rax], al ; jmp 0xffffff8000716b72
0xffffff800072ce8d : add byte ptr [rax], al ; jmp 0xffffff800072ce9b
0xffffff80007336af : add byte ptr [rax], al ; jmp 0xffffff800072f9ab
0xffffff8000745d87 : add byte ptr [rax], al ; jmp 0xffffff8000745d51
0xffffff8000745df7 : add byte ptr [rax], al ; jmp 0xffffff8000745dc1
0xffffff8000749dcd : add byte ptr [rax], al ; jmp 0xffffff8000749d97
0xffffff8000754c74 : add byte ptr [rax], al ; jmp 0xffffff8000754cf5
0xffffff800075d016 : add byte ptr [rax], al ; jmp 0xffffff800075d04a
0xffffff800075d139 : add byte ptr [rax], al ; jmp 0xffffff800075d16d
0xffffff80007783bb : add byte ptr [rax], al ; jmp 0xffffff800077843f
0xffffff80007a8dfd : add byte ptr [rax], al ; jmp 0xffffff80007a8dc6
0xffffff80007ad0f2 : add byte ptr [rax], al ; jmp 0xffffff80007ad10c
0xffffff80007ad173 : add byte ptr [rax], al ; jmp 0xffffff80007ad18d
0xffffff80007d02a5 : add byte ptr [rax], al ; jmp 0xffffff80007d037e
0xffffff80007eb870 : add byte ptr [rax], al ; jmp 0xffffff80007eb978
0xffffff80008483f0 : add byte ptr [rax], al ; jmp 0xffffff800084844c
0xffffff800087d180 : add byte ptr [rax], al ; jmp 0xffffff800087d218
0xffffff80008bf862 : add byte ptr [rax], al ; jmp 0xffffff80008bf887
0xffffff800025ceb5 : add byte ptr [rax], al ; jmp qword ptr [rbx]
0xffffff80007e5c85 : add byte ptr [rax], al ; jmp qword ptr [rcx]
0xffffff80002b5de5 : add byte ptr [rax], al ; jmp rax
0xffffff8000286d7d : add byte ptr [rax], al ; jmp rcx
0xffffff8000302170 : add byte ptr [rax], al ; jmp rdx
0xffffff800056cfea : add byte ptr [rax], al ; jmp rsi
0xffffff80002a5b94 : add byte ptr [rax], al ; jne 0xffffff80002a5b55 ; pop rbp ; ret
0xffffff8000328480 : add byte ptr [rax], al ; jne 0xffffff8000328465 ; pop rbp ; ret
0xffffff8000388d99 : add byte ptr [rax], al ; jne 0xffffff8000388d45 ; pop rbp ; ret
0xffffff8000389d68 : add byte ptr [rax], al ; jne 0xffffff8000389d79 ; mov dword ptr [rax + 0x54], esi ; pop rbp ; ret
0xffffff8000389dd8 : add byte ptr [rax], al ; jne 0xffffff8000389de9 ; mov dword ptr [rax + 0x48], esi ; pop rbp ; ret
0xffffff8000392718 : add byte ptr [rax], al ; jne 0xffffff800039278f ; mov eax, 1 ; ret
0xffffff800039667e : add byte ptr [rax], al ; jne 0xffffff8000396658 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039cd82 : add byte ptr [rax], al ; jne 0xffffff800039cd93 ; mov eax, dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80003a6e87 : add byte ptr [rax], al ; jne 0xffffff80003a6e45 ; pop rbp ; ret
0xffffff80003c05cd : add byte ptr [rax], al ; jne 0xffffff80003c05d8 ; pop rbp ; ret
0xffffff800049e1ef : add byte ptr [rax], al ; jne 0xffffff800049e1d8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a640a : add byte ptr [rax], al ; jne 0xffffff80004a63b8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004bb6a0 : add byte ptr [rax], al ; jne 0xffffff80004bb688 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004bb69f : add byte ptr [rax], al ; jne 0xffffff80004bb689 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c857d : add byte ptr [rax], al ; jne 0xffffff80004c858a ; xor eax, eax ; pop rbp ; ret
0xffffff8000530f40 : add byte ptr [rax], al ; jne 0xffffff8000530f25 ; pop rbp ; ret
0xffffff800057f1a0 : add byte ptr [rax], al ; jne 0xffffff800057f185 ; pop rbp ; ret
0xffffff8000580180 : add byte ptr [rax], al ; jne 0xffffff8000580165 ; pop rbp ; ret
0xffffff8000581526 : add byte ptr [rax], al ; jne 0xffffff8000581505 ; pop rbp ; ret
0xffffff8000582500 : add byte ptr [rax], al ; jne 0xffffff80005824e5 ; pop rbp ; ret
0xffffff80005a8f50 : add byte ptr [rax], al ; jne 0xffffff80005a8f35 ; pop rbp ; ret
0xffffff80005b10f0 : add byte ptr [rax], al ; jne 0xffffff80005b10d5 ; pop rbp ; ret
0xffffff80005b2120 : add byte ptr [rax], al ; jne 0xffffff80005b2105 ; pop rbp ; ret
0xffffff80005bf7f0 : add byte ptr [rax], al ; jne 0xffffff80005bf7d5 ; pop rbp ; ret
0xffffff80005bf890 : add byte ptr [rax], al ; jne 0xffffff80005bf875 ; pop rbp ; ret
0xffffff80005e4830 : add byte ptr [rax], al ; jne 0xffffff80005e4815 ; pop rbp ; ret
0xffffff80005e48cf : add byte ptr [rax], al ; jne 0xffffff80005e48b5 ; pop rbp ; ret
0xffffff80005ebe90 : add byte ptr [rax], al ; jne 0xffffff80005ebe75 ; pop rbp ; ret
0xffffff8000637aa0 : add byte ptr [rax], al ; jne 0xffffff8000637a85 ; pop rbp ; ret
0xffffff8000687f70 : add byte ptr [rax], al ; jne 0xffffff8000687f55 ; pop rbp ; ret
0xffffff800068800f : add byte ptr [rax], al ; jne 0xffffff8000687ff5 ; pop rbp ; ret
0xffffff80006a43d0 : add byte ptr [rax], al ; jne 0xffffff80006a43b5 ; pop rbp ; ret
0xffffff80006a446f : add byte ptr [rax], al ; jne 0xffffff80006a4455 ; pop rbp ; ret
0xffffff80006c59d2 : add byte ptr [rax], al ; jne 0xffffff80006c59a5 ; pop rbp ; ret
0xffffff8000710ae8 : add byte ptr [rax], al ; jne 0xffffff8000710af7 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800071d3fb : add byte ptr [rax], al ; jne 0xffffff800071d408 ; xor eax, eax ; pop rbp ; ret
0xffffff800078d86e : add byte ptr [rax], al ; jne 0xffffff800078d87f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007db655 : add byte ptr [rax], al ; jne 0xffffff80007db638 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f8585 : add byte ptr [rax], al ; jne 0xffffff80007f8568 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008324a3 : add byte ptr [rax], al ; jne 0xffffff800083245d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c6880 : add byte ptr [rax], al ; jne 0xffffff80008c6865 ; pop rbp ; ret
0xffffff80008c7870 : add byte ptr [rax], al ; jne 0xffffff80008c7855 ; pop rbp ; ret
0xffffff80008c8820 : add byte ptr [rax], al ; jne 0xffffff80008c8805 ; pop rbp ; ret
0xffffff80008c97d0 : add byte ptr [rax], al ; jne 0xffffff80008c97b5 ; pop rbp ; ret
0xffffff8000859f45 : add byte ptr [rax], al ; lea esi, [rax - 1] ; mov rdi, r12 ; call r14
0xffffff800076efae : add byte ptr [rax], al ; lea r10, [rax + 1] ; mov rdx, rax ; jmp 0xffffff800076efc7
0xffffff800090abce : add byte ptr [rax], al ; lea rax, [rip + 0x193e21] ; ret
0xffffff800090abbe : add byte ptr [rax], al ; lea rax, [rip + 0x193e31] ; ret
0xffffff800090abae : add byte ptr [rax], al ; lea rax, [rip + 0x193e41] ; ret
0xffffff800090ab9e : add byte ptr [rax], al ; lea rax, [rip + 0x193e51] ; ret
0xffffff800090ab8e : add byte ptr [rax], al ; lea rax, [rip + 0x193e61] ; ret
0xffffff8000754a89 : add byte ptr [rax], al ; lea rdi, [rbp - 0x108] ; call rcx
0xffffff80005c92b6 : add byte ptr [rax], al ; lea rdi, [rbx + 0x48] ; call 0xffffff80005c5508
0xffffff8000258150 : add byte ptr [rax], al ; lea rdx, [rdx + rax*8] ; jmp 0xffffff800025816f
0xffffff8000750392 : add byte ptr [rax], al ; lock and dword ptr [rdi], 0xffffffdf ; pop rbp ; ret
0xffffff8000750372 : add byte ptr [rax], al ; lock or dword ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff800080df87 : add byte ptr [rax], al ; lock xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800031eb85 : add byte ptr [rax], al ; loopne 0xffffff800031eb91 ; mov qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff80008b3c06 : add byte ptr [rax], al ; loopne 0xffffff80008b3c6b ; ret
0xffffff8000b3ea28 : add byte ptr [rax], al ; mov ah, byte ptr [rdi + 0x3b] ; ret 0x149
0xffffff8000812878 : add byte ptr [rax], al ; mov al, 1 ; pop rbp ; ret
0xffffff80008aa19f : add byte ptr [rax], al ; mov al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000869b27 : add byte ptr [rax], al ; mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b3edcd : add byte ptr [rax], al ; mov bl, 0x89 ; ret
0xffffff8000635c40 : add byte ptr [rax], al ; mov bl, r10b ; mov rdx, r8 ; jmp 0xffffff8000635c62
0xffffff8000584c19 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x3e], cl ; pop rbp ; ret
0xffffff80003922fe : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; ret
0xffffff8000650c97 : add byte ptr [rax], al ; mov byte ptr [rsi + 3], al ; pop rbp ; ret
0xffffff8000526b58 : add byte ptr [rax], al ; mov byte ptr [rsi], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000b3e98c : add byte ptr [rax], al ; mov ch, 0x1f ; ret 0x4daf
0xffffff800058fbd1 : add byte ptr [rax], al ; mov dl, r8b ; jmp 0xffffff800058fc0b
0xffffff8000538cf4 : add byte ptr [rax], al ; mov dword ptr [r8], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800062ddfd : add byte ptr [rax], al ; mov dword ptr [rax + 0x1a8], edx ; pop rbp ; ret
0xffffff8000644125 : add byte ptr [rax], al ; mov dword ptr [rax + 0x28c], ecx ; pop rbp ; ret
0xffffff80002886e9 : add byte ptr [rax], al ; mov dword ptr [rax + 0x58], ecx ; pop rbp ; ret
0xffffff80003b5e98 : add byte ptr [rax], al ; mov dword ptr [rax + 0x80], ecx ; pop rbp ; ret
0xffffff80002c1cbb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b27a8 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x24], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003b609c : add byte ptr [rax], al ; mov dword ptr [rcx + 0x80], edx ; pop rbp ; ret
0xffffff80003ac6ac : add byte ptr [rax], al ; mov dword ptr [rcx + 0xa844], eax ; pop rbp ; ret
0xffffff80007d03e8 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x11c], esi ; pop rbp ; ret
0xffffff800068456a : add byte ptr [rax], al ; mov dword ptr [rdi + 0x18], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80006302ab : add byte ptr [rax], al ; mov dword ptr [rdi + 0x210], eax ; pop rbp ; ret
0xffffff80003676fc : add byte ptr [rax], al ; mov dword ptr [rdi + 0x394], eax ; pop rbp ; ret
0xffffff80004b3d59 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x44], edx ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7dbd : add byte ptr [rax], al ; mov dword ptr [rdi + 0x74], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800057090a : add byte ptr [rax], al ; mov dword ptr [rdi + 0x84], ecx ; pop rbp ; ret
0xffffff800062df07 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x90], eax ; pop rbp ; ret
0xffffff80008d72ee : add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; ret
0xffffff8000756fe8 : add byte ptr [rax], al ; mov dword ptr [rdi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000342164 : add byte ptr [rax], al ; mov dword ptr [rdx], 0 ; pop rbp ; ret
0xffffff8000563c69 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007ae652 : add byte ptr [rax], al ; mov dword ptr [rdx], r8d ; pop rbp ; ret
0xffffff8000334a07 : add byte ptr [rax], al ; mov dword ptr [rip + 0x7c5129], esi ; pop rbp ; ret
0xffffff8000526e77 : add byte ptr [rax], al ; mov dword ptr [rsi + 0x30], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80003d3cf1 : add byte ptr [rax], al ; mov dword ptr [rsi + 4], eax ; pop rbp ; ret
0xffffff8000526bd8 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007b0443 : add byte ptr [rax], al ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80007ae6b7 : add byte ptr [rax], al ; mov dword ptr [rsi], r8d ; pop rbp ; ret
0xffffff800050bf8d : add byte ptr [rax], al ; mov eax, 0x14 ; pop rbp ; ret
0xffffff80005630bc : add byte ptr [rax], al ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80004ed2e6 : add byte ptr [rax], al ; mov eax, 0x2d ; pop rbp ; ret
0xffffff800029d470 : add byte ptr [rax], al ; mov eax, 0xe ; pop rbp ; ret
0xffffff80008eb62f : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff800025e1c9 : add byte ptr [rax], al ; mov eax, 1 ; pop rbp ; ret
0xffffff8000392567 : add byte ptr [rax], al ; mov eax, 1 ; ret
0xffffff800028a85f : add byte ptr [rax], al ; mov eax, 4 ; pop rbp ; ret
0xffffff800038bb58 : add byte ptr [rax], al ; mov eax, 5 ; pop rbp ; ret
0xffffff80004148d9 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x24] ; pop rbp ; ret
0xffffff80004fa7f9 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x70] ; and eax, 1 ; pop rbp ; ret
0xffffff80004c8154 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x78] ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa799 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x80] ; pop rbp ; ret
0xffffff800038c13b : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0xa838] ; pop rbp ; ret
0xffffff800038c15b : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0xa83c] ; pop rbp ; ret
0xffffff800038c17b : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0xa840] ; pop rbp ; ret
0xffffff80002a9a2f : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff800039288e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x201ffff ; ret
0xffffff800052028b : add byte ptr [rax], al ; mov eax, dword ptr [rsi + r8] ; bswap eax ; pop rbp ; ret
0xffffff80007b03ed : add byte ptr [rax], al ; mov eax, eax ; add rax, rdi ; pop rbp ; ret
0xffffff800028bfe0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008eded1 : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000701d3d : add byte ptr [rax], al ; mov eax, ecx ; pop rbp ; ret
0xffffff8000707320 : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000393520 : add byte ptr [rax], al ; mov eax, edi ; mov cr3, rax ; pop rbp ; ret
0xffffff80003a8c77 : add byte ptr [rax], al ; mov eax, esi ; mov edx, edi ; wrmsr ; pop rbp ; ret
0xffffff800030a82f : add byte ptr [rax], al ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800051b377 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; ret
0xffffff80006de48f : add byte ptr [rax], al ; mov ebx, 0x11 ; jmp 0xffffff80006de463
0xffffff800039928e : add byte ptr [rax], al ; mov ecx, dword ptr [rdi] ; mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0xffffff80002a0558 : add byte ptr [rax], al ; mov ecx, eax ; xor eax, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80003ad845 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0xffffff80007fe17e : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x30] ; call r15
0xffffff8000744e2e : add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; call rcx
0xffffff8000512cda : add byte ptr [rax], al ; mov edi, ebx ; call rax
0xffffff80007aafee : add byte ptr [rax], al ; mov edi, r12d ; call rcx
0xffffff8000799a14 : add byte ptr [rax], al ; mov edi, r14d ; call rcx
0xffffff80008427f8 : add byte ptr [rax], al ; mov edx, 0x2550 ; call rax
0xffffff800089494c : add byte ptr [rax], al ; mov edx, 0x3e8 ; pop rbp ; jmp rax
0xffffff800089490c : add byte ptr [rax], al ; mov edx, 0x989680 ; pop rbp ; jmp rax
0xffffff800089492c : add byte ptr [rax], al ; mov edx, 0xf4240 ; pop rbp ; jmp rax
0xffffff800055d9dc : add byte ptr [rax], al ; mov edx, eax ; jmp 0xffffff800055da42
0xffffff80005932a6 : add byte ptr [rax], al ; mov edx, eax ; jmp 0xffffff80005932b1
0xffffff8000892892 : add byte ptr [rax], al ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff8000661e74 : add byte ptr [rax], al ; mov esi, 0x1c ; call 0xffffff800010e149
0xffffff80008d9200 : add byte ptr [rax], al ; mov esi, 0x8000 ; pop rbp ; jmp rax
0xffffff80007a6617 : add byte ptr [rax], al ; mov esi, 1 ; call 0xffffff80003928a9
0xffffff80003a9261 : add byte ptr [rax], al ; mov esi, 1 ; call rax
0xffffff8000898875 : add byte ptr [rax], al ; mov esi, 1 ; pop rbp ; jmp rax
0xffffff800028ed67 : add byte ptr [rax], al ; mov esi, 2 ; call rax
0xffffff80005cf5cf : add byte ptr [rax], al ; mov esi, 2 ; pop rbp ; jmp rax
0xffffff80008e1a5f : add byte ptr [rax], al ; mov esi, 3 ; pop rbp ; jmp rax
0xffffff8000482d82 : add byte ptr [rax], al ; mov esi, 6 ; call 0xffffff80002bf069
0xffffff80003b879d : add byte ptr [rax], al ; mov esi, 7 ; call r14
0xffffff8000846480 : add byte ptr [rax], al ; mov esi, 8 ; pop rbp ; jmp rax
0xffffff800081235f : add byte ptr [rax], al ; mov esi, dword ptr [rdi + 0x20] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff800082c9ff : add byte ptr [rax], al ; mov esi, dword ptr [rdi + 0x30] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff800039f404 : add byte ptr [rax], al ; mov esi, eax ; call rbx
0xffffff80008abd2b : add byte ptr [rax], al ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff80003a8389 : add byte ptr [rax], al ; mov esi, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80002662ce : add byte ptr [rax], al ; mov qword ptr [r14], rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039cceb : add byte ptr [rax], al ; mov qword ptr [rax + 8], rdi ; pop rbp ; ret
0xffffff800031eb9c : add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff8000718bd9 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rdi ; pop rbp ; ret
0xffffff80003922ee : add byte ptr [rax], al ; mov qword ptr [rdi], 0 ; ret
0xffffff800039f00c : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80004f9f5b : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80003a0f15 : add byte ptr [rax], al ; mov qword ptr [rdx + rcx - 8], rax ; pop rbp ; ret
0xffffff8000392965 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; leave ; ret
0xffffff800077dcf2 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; pop rbp ; ret
0xffffff800089860e : add byte ptr [rax], al ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff80004950d6 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; ret
0xffffff8000564c10 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x50], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80005161d2 : add byte ptr [rax], al ; mov qword ptr [rsi], rcx ; xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80002c811a : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff80008ebfa8 : add byte ptr [rax], al ; mov qword ptr [rsi], rdx ; pop rbp ; ret
0xffffff80008d2538 : add byte ptr [rax], al ; mov r10, rax ; jmp 0xffffff80008d258e
0xffffff80008d232d : add byte ptr [rax], al ; mov r11, rbx ; jmp 0xffffff80008d238a
0xffffff80002670d4 : add byte ptr [rax], al ; mov r15, rbx ; call r15
0xffffff80006e12b6 : add byte ptr [rax], al ; mov r15, rdx ; call 0xffffff800030de48
0xffffff8000748878 : add byte ptr [rax], al ; mov r15d, ebx ; jmp rax
0xffffff800063661e : add byte ptr [rax], al ; mov r8, r12 ; call 0xffffff80007c28a7
0xffffff80003dc3e7 : add byte ptr [rax], al ; mov r9b, 1 ; mov r10d, eax ; jmp 0xffffff80003dc41c
0xffffff800039519f : add byte ptr [rax], al ; mov r9d, r14d ; call 0xffffff8000381407
0xffffff8000389ee4 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff8000389efb : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff800039ee39 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x6b223e] ; call qword ptr [rax]
0xffffff80003a9195 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x728a2a] ; call rax
0xffffff8000393f91 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x76b836] ; call qword ptr [rax]
0xffffff80006c569e : add byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800027fcff : add byte ptr [rax], al ; mov rax, rbx ; jmp 0xffffff800027fcce
0xffffff800051043e : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bf56e : add byte ptr [rax], al ; mov rax, rcx ; pop rbp ; ret
0xffffff80007951f4 : add byte ptr [rax], al ; mov rax, rdi ; pop rbp ; ret
0xffffff8000389db3 : add byte ptr [rax], al ; mov rax, rsi ; pop rbp ; ret
0xffffff80005ca475 : add byte ptr [rax], al ; mov rbx, r15 ; jmp rcx
0xffffff80003a03e5 : add byte ptr [rax], al ; mov rbx, r8 ; call rax
0xffffff80005365b0 : add byte ptr [rax], al ; mov rbx, rax ; call 0xffffff80003928a7
0xffffff80004e2f4f : add byte ptr [rax], al ; mov rbx, rdi ; call 0xffffff800010e148
0xffffff8000847eae : add byte ptr [rax], al ; mov rcx, qword ptr [rsi + 0x30] ; mov edx, eax ; jmp 0xffffff8000847ecd
0xffffff80006a1255 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x158] ; call rax
0xffffff80005e2113 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x178] ; call rax
0xffffff80007637de : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x30] ; call 0xffffff8000393049
0xffffff8000763b6a : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e9
0xffffff80008791f7 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx] ; mov rsi, rbx ; call rax
0xffffff80004e3a64 : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff800010e148
0xffffff8000772263 : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000392a48
0xffffff80007649ad : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000393048
0xffffff8000348c1e : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000394ef7
0xffffff800078af99 : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000397207
0xffffff80007689a6 : add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff80007c4bb7
0xffffff80005293c1 : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff800090a2f6 : add byte ptr [rax], al ; mov rdi, r12 ; mov esi, r15d ; call rcx
0xffffff80007cad03 : add byte ptr [rax], al ; mov rdi, r12 ; mov rdx, rbx ; call rax
0xffffff80007cadf8 : add byte ptr [rax], al ; mov rdi, r12 ; mov rsi, r15 ; call rax
0xffffff80008876d8 : add byte ptr [rax], al ; mov rdi, r12 ; mov rsi, rax ; call rbx
0xffffff8000421e91 : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff800010e147
0xffffff8000566232 : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80003924d7
0xffffff8000764584 : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff8000392a48
0xffffff80007b878e : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80007b4a67
0xffffff80007c897a : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80007c4bb7
0xffffff8000878771 : add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80008749e7
0xffffff8000529766 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0xffffff80008214d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0xffffff80007c7dc1 : add byte ptr [rax], al ; mov rdi, r13 ; call rcx
0xffffff80006359a9 : add byte ptr [rax], al ; mov rdi, r13 ; mov edx, r14d ; call rax
0xffffff800081274d : add byte ptr [rax], al ; mov rdi, r13 ; mov rsi, rax ; call r14
0xffffff80007c1e79 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff800010e147
0xffffff80008cb624 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000297877
0xffffff8000766aba : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80003923e8
0xffffff8000556209 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80003924d7
0xffffff8000767d40 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80003928a8
0xffffff8000762d31 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000767466 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff8000277215 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000393487
0xffffff80005d926a : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80005e5497
0xffffff80006bbec0 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff80007b8127
0xffffff80008788e2 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000874b97
0xffffff80005e2256 : add byte ptr [rax], al ; mov rdi, r14 ; call rax
0xffffff800038fa72 : add byte ptr [rax], al ; mov rdi, r14 ; call rcx
0xffffff800067a04b : add byte ptr [rax], al ; mov rdi, r14 ; mov ecx, ebx ; call 0xffffff8000666269
0xffffff80007c66b2 : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, r15 ; call rax
0xffffff80007c9df9 : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, rbx ; call rcx
0xffffff80008f73cd : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800081e147 : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, rax ; call r12
0xffffff80007d16bf : add byte ptr [rax], al ; mov rdi, r14 ; mov rsi, rbx ; call r12
0xffffff8000591eca : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff800010e147
0xffffff80004e3120 : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff800010e148
0xffffff80007640de : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff80007a6626 : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff80003928a7
0xffffff800076308c : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff8000392a48
0xffffff800076d3c1 : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff8000393048
0xffffff8000773d72 : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff8000397208
0xffffff800056895c : add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff80007c4bb7
0xffffff80005e94f2 : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0xffffff80008ee326 : add byte ptr [rax], al ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80007c474e : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, r12 ; call rax
0xffffff80007c6456 : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, r13 ; call rax
0xffffff80008f6298 : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, r14 ; call r8
0xffffff80008f61b4 : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, r14 ; call rax
0xffffff80007caa53 : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, rbx ; call rax
0xffffff80002c8fa3 : add byte ptr [rax], al ; mov rdi, r15 ; mov rsi, r12 ; call r14
0xffffff80007ccfa5 : add byte ptr [rax], al ; mov rdi, r15 ; mov rsi, r12 ; call rax
0xffffff80008eec56 : add byte ptr [rax], al ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff800085a707 : add byte ptr [rax], al ; mov rdi, r15 ; mov rsi, rax ; call r12
0xffffff800075e13d : add byte ptr [rax], al ; mov rdi, r8 ; pop rbp ; jmp 0xffffff800077a428
0xffffff80006387ae : add byte ptr [rax], al ; mov rdi, rax ; call 0xffffff80007b4a67
0xffffff8000864361 : add byte ptr [rax], al ; mov rdi, rax ; call 0xffffff8000870647
0xffffff8000607e22 : add byte ptr [rax], al ; mov rdi, rax ; call rbx
0xffffff800052c741 : add byte ptr [rax], al ; mov rdi, rax ; call rcx
0xffffff800086007e : add byte ptr [rax], al ; mov rdi, rax ; mov rsi, r14 ; call r15
0xffffff800039939e : add byte ptr [rax], al ; mov rdi, rax ; xor rbp, rbp ; call rbx
0xffffff8000801e7d : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff800010e147
0xffffff80004df7c7 : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff800010e148
0xffffff800076e781 : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff8000392798
0xffffff80007a65cc : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff80003928a7
0xffffff8000767ccb : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff80003928a8
0xffffff8000764f63 : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff8000392a48
0xffffff8000765642 : add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff8000528fba : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff8000390935 : add byte ptr [rax], al ; mov rdi, rbx ; call rcx
0xffffff80007a8013 : add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0xffffff80007c4e61 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r12 ; call rax
0xffffff80007c49c8 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r13 ; call rax
0xffffff80007c5d1e : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r14 ; call rax
0xffffff80007c5f28 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0xffffff80007636e7 : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0xffffff80002db82e : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, r15 ; call r12
0xffffff800081df7a : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, rax ; call r12
0xffffff800082e47e : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, rax ; call r14
0xffffff800082e5c5 : add byte ptr [rax], al ; mov rdi, rbx ; mov rsi, rax ; call r15
0xffffff80005cf71b : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800052bcf4 : add byte ptr [rax], al ; mov rdi, rcx ; mov rbx, rcx ; call rax
0xffffff800053ec20 : add byte ptr [rax], al ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff80003993ee : add byte ptr [rax], al ; mov rdi, rdx ; call rsi
0xffffff80003a85b4 : add byte ptr [rax], al ; mov rdi, rsi ; call rax
0xffffff80003a85f8 : add byte ptr [rax], al ; mov rdi, rsi ; call rcx
0xffffff80008b2d3c : add byte ptr [rax], al ; mov rdi, rsi ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80003a85df : add byte ptr [rax], al ; mov rdi, rsi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007b60f9 : add byte ptr [rax], al ; mov rdx, qword ptr [r15 + 0xc0] ; call rcx
0xffffff80003cd23a : add byte ptr [rax], al ; mov rdx, r14 ; call 0xffffff80004494a7
0xffffff8000748c3a : add byte ptr [rax], al ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff8000845efa : add byte ptr [rax], al ; mov rdx, r9 ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff8000793b9e : add byte ptr [rax], al ; mov rdx, rax ; jmp 0xffffff8000793bc1
0xffffff80008928c3 : add byte ptr [rax], al ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff8000892905 : add byte ptr [rax], al ; mov rdx, rcx ; mov ecx, eax ; pop rbp ; jmp r8
0xffffff80003a831d : add byte ptr [rax], al ; mov rdx, rdi ; wrmsr ; pop rbp ; ret
0xffffff80008f5c9b : add byte ptr [rax], al ; mov rsi, qword ptr [r13 + 0xe0] ; call rcx
0xffffff80006b6eef : add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x40] ; call rax
0xffffff800029dd23 : add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x78] ; call r15
0xffffff800082fb1c : add byte ptr [rax], al ; mov rsi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff80006bd827 : add byte ptr [rax], al ; mov rsi, r12 ; call rax
0xffffff8000529d16 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000558c30 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdx, r14 ; call rbx
0xffffff800029ddf3 : add byte ptr [rax], al ; mov rsi, r13 ; call r12
0xffffff80008f5f51 : add byte ptr [rax], al ; mov rsi, r14 ; mov rcx, r13 ; call rax
0xffffff80008a9a5e : add byte ptr [rax], al ; mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80008d2ada : add byte ptr [rax], al ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff800029db0b : add byte ptr [rax], al ; mov rsi, rbx ; call r15
0xffffff8000778395 : add byte ptr [rax], al ; mov rsi, rbx ; call rax
0xffffff80008a3eb9 : add byte ptr [rax], al ; mov rsi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000891d5c : add byte ptr [rax], al ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80006f00eb : add byte ptr [rax], al ; mov word ptr [rsi + 0x10], ax ; xor eax, eax ; pop rbp ; ret
0xffffff8000526b29 : add byte ptr [rax], al ; mov word ptr [rsi], ax ; xor eax, eax ; pop rbp ; ret
0xffffff800029e3ee : add byte ptr [rax], al ; movsx edi, al ; mov rsi, r12 ; call r15
0xffffff800077799f : add byte ptr [rax], al ; movsxd rax, dword ptr [r12 + r15*4] ; add rax, r12 ; jmp rax
0xffffff800029c675 : add byte ptr [rax], al ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0xffffff8000491ebd : add byte ptr [rax], al ; movsxd rax, dword ptr [r12 + rbx*4] ; add rax, r12 ; jmp rax
0xffffff800089e945 : add byte ptr [rax], al ; movsxd rax, dword ptr [r14 + r12*4] ; add rax, r14 ; jmp rax
0xffffff80005f6df2 : add byte ptr [rax], al ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0xffffff800076c1b5 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0xffffff8000b3fb7a : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0xffffff80005ff101 : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rsi*4] ; add rax, r8 ; jmp rax
0xffffff8000281f28 : add byte ptr [rax], al ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0xffffff800027abc8 : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0xffffff8000556568 : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0xffffff80007ea665 : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0xffffff800027014c : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0xffffff80003b38c9 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0xffffff80003a09f4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rbx*4] ; add rax, rsi ; jmp rax
0xffffff80005c0863 : add byte ptr [rax], al ; movsxd rbx, dword ptr [rcx + rbx*4] ; add rbx, rcx ; jmp rbx
0xffffff800058fa94 : add byte ptr [rax], al ; movsxd rbx, dword ptr [rdx + rbx*4] ; add rbx, rdx ; jmp rbx
0xffffff8000597d52 : add byte ptr [rax], al ; movsxd rbx, dword ptr [rsi + rbx*4] ; add rbx, rsi ; jmp rbx
0xffffff800051f88e : add byte ptr [rax], al ; movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0xffffff800051f8ef : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rcx*4] ; add rcx, r14 ; jmp rcx
0xffffff800026df1e : add byte ptr [rax], al ; movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0xffffff80008407c7 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0xffffff80005200d1 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0xffffff80002b1cd8 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + r12*4] ; add rcx, rax ; jmp rcx
0xffffff800029573d : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + r13*4] ; add rcx, rax ; jmp rcx
0xffffff80005167a1 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + r14*4] ; add rcx, rax ; jmp rcx
0xffffff800027c38c : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + r15*4] ; add rcx, rax ; jmp rcx
0xffffff8000258310 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + rbx*4] ; add rcx, rax ; jmp rcx
0xffffff80002b8f85 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0xffffff8000286b93 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + rdx*4] ; add rcx, rax ; jmp rcx
0xffffff800028fc3e : add byte ptr [rax], al ; movsxd rcx, dword ptr [rax + rsi*4] ; add rcx, rax ; jmp rcx
0xffffff80008be67c : add byte ptr [rax], al ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0xffffff80008d7c1e : add byte ptr [rax], al ; movsxd rcx, dword ptr [rdx + r13*4] ; add rcx, rdx ; jmp rcx
0xffffff8000270455 : add byte ptr [rax], al ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, rdx ; jmp rcx
0xffffff800044021d : add byte ptr [rax], al ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0xffffff80008188ab : add byte ptr [rax], al ; movsxd rdi, dword ptr [rax + r9*4] ; add rdi, rax ; jmp rdi
0xffffff80004c0516 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rax + rbx*4] ; add rdi, rax ; jmp rdi
0xffffff8000584732 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rax + rdi*4] ; add rdi, rax ; jmp rdi
0xffffff80003a38fb : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + rdi*4] ; add rdi, rbx ; jmp rdi
0xffffff8000806804 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rcx + rbx*4] ; add rdi, rcx ; jmp rdi
0xffffff800026695c : add byte ptr [rax], al ; movsxd rdi, dword ptr [rcx + rdi*4] ; add rdi, rcx ; jmp rdi
0xffffff800058fab9 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rdx + r9*4] ; add rdi, rdx ; jmp rdi
0xffffff800059071e : add byte ptr [rax], al ; movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, rdx ; jmp rdi
0xffffff80005283ae : add byte ptr [rax], al ; movsxd rdi, dword ptr [rsi + rdi*4] ; add rdi, rsi ; jmp rdi
0xffffff800059b7bd : add byte ptr [rax], al ; movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0xffffff800059b82d : add byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + r10*4] ; add rdx, r11 ; jmp rdx
0xffffff8000594740 : add byte ptr [rax], al ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0xffffff800059b7dd : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + r9*4] ; add rdx, rax ; jmp rdx
0xffffff80006b9706 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0xffffff800080f44f : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdi*4] ; add rdx, rax ; jmp rdx
0xffffff8000272c1f : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0xffffff800039b8b5 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rsi*4] ; add rdx, rax ; jmp rdx
0xffffff800067ef4f : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + r12*4] ; add rdx, rcx ; jmp rdx
0xffffff80006eee77 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + r13*4] ; add rdx, rcx ; jmp rdx
0xffffff80006ec0cc : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + r14*4] ; add rdx, rcx ; jmp rdx
0xffffff80005c0cf4 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + r8*4] ; add rdx, rcx ; jmp rdx
0xffffff8000512c01 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rax*4] ; add rdx, rcx ; jmp rdx
0xffffff80003b15aa : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rbx*4] ; add rdx, rcx ; jmp rdx
0xffffff800028684a : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0xffffff800028fe6a : add byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rsi*4] ; add rdx, rcx ; jmp rdx
0xffffff80007f0ef3 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + r15*4] ; add rdx, rdi ; jmp rdx
0xffffff8000716b1d : add byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0xffffff8000806799 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rsi + r15*4] ; add rdx, rsi ; jmp rdx
0xffffff800035a342 : add byte ptr [rax], al ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0xffffff80007f178c : add byte ptr [rax], al ; movsxd rsi, dword ptr [rbx + r12*4] ; add rsi, rbx ; jmp rsi
0xffffff800045533e : add byte ptr [rax], al ; movsxd rsi, dword ptr [rcx + r13*4] ; add rsi, rcx ; jmp rsi
0xffffff800067be88 : add byte ptr [rax], al ; movsxd rsi, dword ptr [rcx + rdx*4] ; add rsi, rcx ; jmp rsi
0xffffff800057a038 : add byte ptr [rax], al ; movsxd rsi, dword ptr [rcx + rsi*4] ; add rsi, rcx ; jmp rsi
0xffffff80002a0a04 : add byte ptr [rax], al ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0xffffff80005c0ccd : add byte ptr [rax], al ; movsxd rsi, dword ptr [rdx + r8*4] ; add rsi, rdx ; jmp rsi
0xffffff8000601067 : add byte ptr [rax], al ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rsi, rdx ; jmp rsi
0xffffff80008a91a1 : add byte ptr [rax], al ; movzx eax, al ; pop rbp ; ret
0xffffff800088e720 : add byte ptr [rax], al ; movzx edx, dl ; pop rbp ; jmp rax
0xffffff8000892940 : add byte ptr [rax], al ; movzx edx, sil ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff80008df51d : add byte ptr [rax], al ; nop ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff80002886bb : add byte ptr [rax], al ; not edi ; and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff800059b9a2 : add byte ptr [rax], al ; or al, 0x83 ; call qword ptr [rax]
0xffffff80007aa387 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], cl ; div edi ; ret 0x20
0xffffff80003a3bd6 : add byte ptr [rax], al ; or byte ptr [rax + 9], cl ; ret
0xffffff80004f9465 : add byte ptr [rax], al ; or byte ptr [rax], al ; and eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff80005496e2 : add byte ptr [rax], al ; or byte ptr [rbp + 0x13], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072d9f8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x10 ; pop rbp ; ret
0xffffff800072da18 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x20 ; pop rbp ; ret
0xffffff800072dc08 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x40 ; pop rbp ; ret
0xffffff800072d9c8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x80 ; pop rbp ; ret
0xffffff800072d9e8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 1 ; pop rbp ; ret
0xffffff800072da08 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 2 ; pop rbp ; ret
0xffffff800072da28 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 4 ; pop rbp ; ret
0xffffff800072d9d8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 8 ; pop rbp ; ret
0xffffff800072d9a8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 0x10 ; pop rbp ; ret
0xffffff800072db99 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 0x20 ; pop rbp ; ret
0xffffff800072dbb8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 0x40 ; pop rbp ; ret
0xffffff800072e118 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 1 ; pop rbp ; ret
0xffffff800072d9b8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 2 ; pop rbp ; ret
0xffffff800072d998 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 4 ; pop rbp ; ret
0xffffff800072e5d5 : add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 8 ; pop rbp ; ret
0xffffff800072d979 : add byte ptr [rax], al ; or byte ptr [rdi + 0x32], 1 ; pop rbp ; ret
0xffffff800072db88 : add byte ptr [rax], al ; or byte ptr [rdi + 0x32], 2 ; pop rbp ; ret
0xffffff800072dd58 : add byte ptr [rax], al ; or byte ptr [rdi + 0x32], 4 ; pop rbp ; ret
0xffffff800072e558 : add byte ptr [rax], al ; or byte ptr [rdi + 0x33], 0x40 ; pop rbp ; ret
0xffffff800072dd74 : add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 0x10 ; pop rbp ; ret
0xffffff800072e598 : add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 1 ; pop rbp ; ret
0xffffff800072e5a9 : add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 2 ; pop rbp ; ret
0xffffff800072dac8 : add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 4 ; pop rbp ; ret
0xffffff800072e548 : add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 8 ; pop rbp ; ret
0xffffff800072eb08 : add byte ptr [rax], al ; or byte ptr [rdi + 0x35], 0x10 ; pop rbp ; ret
0xffffff800072eb18 : add byte ptr [rax], al ; or byte ptr [rdi + 0x35], 0x20 ; pop rbp ; ret
0xffffff800072d95e : add byte ptr [rax], al ; or byte ptr [rdi + 0x35], 0x80 ; pop rbp ; ret
0xffffff800072dbc9 : add byte ptr [rax], al ; or byte ptr [rdi + 0x35], 1 ; pop rbp ; ret
0xffffff80006d6454 : add byte ptr [rax], al ; or byte ptr [rdi + 0x41], 1 ; pop rbp ; ret
0xffffff800047f575 : add byte ptr [rax], al ; or byte ptr [rdi + 0x46], 8 ; pop rbp ; ret
0xffffff8000760216 : add byte ptr [rax], al ; or byte ptr [rdi], 0x85 ; ret 0
0xffffff800028869b : add byte ptr [rax], al ; or dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80002c235d : add byte ptr [rax], al ; or dword ptr [rcx + 0x58], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3b68 : add byte ptr [rax], al ; or dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff800081ed33 : add byte ptr [rax], al ; or ecx, eax ; mov word ptr [rdi + 0x70], cx ; pop rbp ; ret
0xffffff800072e161 : add byte ptr [rax], al ; or qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff80003a8dd9 : add byte ptr [rax], al ; or rax, rcx ; pop rbp ; ret
0xffffff800079540f : add byte ptr [rax], al ; or rdi, rcx ; mov rax, rdi ; pop rbp ; ret
0xffffff80005f5611 : add byte ptr [rax], al ; out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800061cfd5 : add byte ptr [rax], al ; out dx, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800062e0d9 : add byte ptr [rax], al ; out dx, eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008a5277 : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; ja 0xffffff80008a52ab ; jmp 0xffffff80008a52c3
0xffffff80008a7107 : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; ja 0xffffff80008a713b ; jmp 0xffffff80008a7153
0xffffff80003923d7 : add byte ptr [rax], al ; pop r9 ; ret
0xffffff80004e153e : add byte ptr [rax], al ; pop rbp ; jmp 0xffffff800010e0d6
0xffffff80003a26d7 : add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80003a2890 : add byte ptr [rax], al ; pop rbp ; jmp rcx
0xffffff8000256ad5 : add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000850c1b : add byte ptr [rax], al ; pop rbx ; leave ; ret
0xffffff800028eb39 : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000892a4f : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80002529cf : add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025db1d : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80008629d7 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff8000862a08 ; jmp 0xffffff8000862a20
0xffffff80008815e7 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff8000881618 ; jmp 0xffffff8000881630
0xffffff80008856f7 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff8000885728 ; jmp 0xffffff8000885740
0xffffff8000893e37 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff8000893e68 ; jmp 0xffffff8000893e80
0xffffff800089cf77 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff800089cfa8 ; jmp 0xffffff800089cfc0
0xffffff80008e6cb7 : add byte ptr [rax], al ; pop rdi ; ja 0xffffff80008e6ce8 ; jmp 0xffffff80008e6d00
0xffffff8000392ad8 : add byte ptr [rax], al ; popfq ; cmp rdi, rdx ; jne 0xffffff8000392b23 ; leave ; ret
0xffffff80003930fd : add byte ptr [rax], al ; popfq ; cmp rdi, rdx ; jne 0xffffff8000393148 ; leave ; ret
0xffffff8000393034 : add byte ptr [rax], al ; popfq ; leave ; ret
0xffffff8000392413 : add byte ptr [rax], al ; popfq ; ret
0xffffff80003924b2 : add byte ptr [rax], al ; popfq ; xor eax, eax ; ret
0xffffff800039324a : add byte ptr [rax], al ; popfq ; xor rax, rax ; ret
0xffffff80007c6e1b : add byte ptr [rax], al ; push rax ; jne 0xffffff80007c6e2a ; xor eax, eax ; pop rbp ; ret
0xffffff800086421e : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; mov al, 1 ; pop rbp ; ret
0xffffff80002510de : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff800028d6ee : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0xffffff8000882007 : add byte ptr [rax], al ; push rdi ; ja 0xffffff8000882038 ; jmp 0xffffff8000882050
0xffffff80003c7957 : add byte ptr [rax], al ; rdmsr ; and eax, 0xf ; pop rbp ; ret
0xffffff80003a8c28 : add byte ptr [rax], al ; rdmsr ; pop rbp ; ret
0xffffff80007543eb : add byte ptr [rax], al ; rep movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff800080d085 : add byte ptr [rax], al ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, r8d ; pop rbp ; ret
0xffffff80003922f5 : add byte ptr [rax], al ; ret
0xffffff8000b3ed63 : add byte ptr [rax], al ; ret 0x41d6
0xffffff800038946b : add byte ptr [rax], al ; retf ; call rdi
0xffffff800039a656 : add byte ptr [rax], al ; ror edx, cl ; xor edx, eax ; mov dword ptr [rsi], edx ; pop rbp ; ret
0xffffff8000b45310 : add byte ptr [rax], al ; sbb al, 0xab ; int 0xc2
0xffffff80002fa8b1 : add byte ptr [rax], al ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80002a1637 : add byte ptr [rax], al ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800088d843 : add byte ptr [rax], al ; sete al ; pop rbp ; ret
0xffffff8000318ce0 : add byte ptr [rax], al ; sete dl ; jmp 0xffffff8000318d46
0xffffff8000319789 : add byte ptr [rax], al ; sete dl ; jmp 0xffffff8000319798
0xffffff8000319aed : add byte ptr [rax], al ; sete dl ; jmp 0xffffff8000319afc
0xffffff800026626a : add byte ptr [rax], al ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800088ddbf : add byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff8000395271 : add byte ptr [rax], al ; shl eax, cl ; and eax, dword ptr [rsi + rdx*4] ; pop rbp ; ret
0xffffff800031f274 : add byte ptr [rax], al ; shl eax, cl ; dec eax ; cdqe ; pop rbp ; ret
0xffffff800031f254 : add byte ptr [rax], al ; shl eax, cl ; pop rbp ; ret
0xffffff80002db386 : add byte ptr [rax], al ; shl rax, 0xc ; pop rbp ; ret
0xffffff80003baee4 : add byte ptr [rax], al ; shl rax, cl ; dec rax ; pop rbp ; ret
0xffffff800030366d : add byte ptr [rax], al ; shr eax, 0x12 ; and eax, 1 ; pop rbp ; ret
0xffffff80006265d8 : add byte ptr [rax], al ; shr eax, 0x16 ; and eax, 1 ; pop rbp ; ret
0xffffff80002bac88 : add byte ptr [rax], al ; shr eax, 0x17 ; and eax, 7 ; pop rbp ; ret
0xffffff8000756dc8 : add byte ptr [rax], al ; shr eax, 0xb ; and eax, 1 ; pop rbp ; ret
0xffffff80002db248 : add byte ptr [rax], al ; shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff80002bbdd9 : add byte ptr [rax], al ; shr eax, 2 ; and eax, 1 ; pop rbp ; ret
0xffffff80002b7688 : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; pop rbp ; ret
0xffffff80005eff78 : add byte ptr [rax], al ; shr eax, 5 ; and eax, 1 ; pop rbp ; ret
0xffffff80007b0485 : add byte ptr [rax], al ; shr eax, 7 ; movzx eax, al ; pop rbp ; ret
0xffffff80002a6b18 : add byte ptr [rax], al ; shr eax, 9 ; and eax, 1 ; pop rbp ; ret
0xffffff80002a8128 : add byte ptr [rax], al ; shr eax, 9 ; movzx eax, al ; pop rbp ; ret
0xffffff80003000e4 : add byte ptr [rax], al ; std ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008f2493 : add byte ptr [rax], al ; std ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005f0018 : add byte ptr [rax], al ; sti ; pop rbp ; ret
0xffffff80003a24d2 : add byte ptr [rax], al ; sti ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004191f9 : add byte ptr [rax], al ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff8000419223
0xffffff800041b0bf : add byte ptr [rax], al ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff800041b0e9
0xffffff80008b1733 : add byte ptr [rax], al ; sub eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff800064a1e6 : add byte ptr [rax], al ; sub eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b706b : add byte ptr [rax], al ; sub eax, edi ; pop rbp ; ret
0xffffff80008583f5 : add byte ptr [rax], al ; sub eax, edx ; pop rbp ; ret
0xffffff800041b0e0 : add byte ptr [rax], al ; sub edx, ecx ; mov dword ptr [rdi + 0x18], edx ; pop rbp ; ret
0xffffff80002c0a30 : add byte ptr [rax], al ; sub rax, qword ptr [rcx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039f11b : add byte ptr [rax], al ; sub rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000795d4f : add byte ptr [rax], al ; sub rax, rdi ; cdqe ; pop rbp ; ret
0xffffff80007952ca : add byte ptr [rax], al ; sub rax, rdi ; pop rbp ; ret
0xffffff800040eeea : add byte ptr [rax], al ; test al, 2 ; jne 0xffffff800040eef9 ; pop rbp ; ret
0xffffff800054f993 : add byte ptr [rax], al ; test byte ptr [rdi + 0xe], 0x80 ; jne 0xffffff800054f9a6 ; pop rbp ; ret
0xffffff80004c8598 : add byte ptr [rax], al ; test ch, 4 ; jne 0xffffff80004c85a9 ; pop rbp ; ret
0xffffff80007a0dff : add byte ptr [rax], al ; test cl, 2 ; cmove eax, edx ; jmp 0xffffff80007a0e67
0xffffff800077d281 : add byte ptr [rax], al ; test cl, 2 ; jne 0xffffff800077d2a1 ; pop rbp ; ret
0xffffff800084b773 : add byte ptr [rax], al ; test cl, cl ; jne 0xffffff800084b767 ; pop rbp ; ret
0xffffff8000624cfb : add byte ptr [rax], al ; test dword ptr [rax - 0x7d], 0x5d5b08c4 ; ret
0xffffff80002e9bd3 : add byte ptr [rax], al ; test ecx, ecx ; jne 0xffffff80002e9be4 ; xor eax, eax ; pop rbp ; ret
0xffffff80004692f7 : add byte ptr [rax], al ; test r15d, r15d ; jne 0xffffff80004692f8 ; jmp 0xffffff80004692cb
0xffffff80003a96cf : add byte ptr [rax], al ; test rax, rax ; cmove rdi, rax ; call rcx
0xffffff80002b25b6 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80002b2634 ; call rax
0xffffff80003a264e : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2660 ; pop rbp ; jmp rax
0xffffff80003a28f5 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2907 ; pop rbp ; jmp rax
0xffffff80003a2925 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2937 ; pop rbp ; jmp rax
0xffffff80003a29ee : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2a00 ; pop rbp ; jmp rax
0xffffff80003a2a75 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2a87 ; pop rbp ; jmp rax
0xffffff80003a2d4e : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003a2d60 ; pop rbp ; jmp rax
0xffffff80003ace38 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003ace48 ; call rax
0xffffff80003acf89 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003acf99 ; call rax
0xffffff80003ad1b9 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003ad1c9 ; call rax
0xffffff80005526d6 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80005526ed ; call rax
0xffffff80005539a7 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80005539b9 ; call rax
0xffffff80005e3652 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80005e3662 ; call rax
0xffffff800069e37b : add byte ptr [rax], al ; test rax, rax ; je 0xffffff800069e38b ; call rax
0xffffff80007f00a0 : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80007f00b2 ; pop rbp ; jmp rax
0xffffff80008ef4bb : add byte ptr [rax], al ; test rax, rax ; je 0xffffff80008ef4cb ; call rax
0xffffff800081e96b : add byte ptr [rax], al ; test rax, rax ; setg al ; pop rbp ; ret
0xffffff800081e9c2 : add byte ptr [rax], al ; test rax, rax ; setne al ; pop rbp ; ret
0xffffff80003acde2 : add byte ptr [rax], al ; test rcx, rcx ; cmove rdi, rcx ; call rax
0xffffff80003a2ad3 : add byte ptr [rax], al ; test rcx, rcx ; je 0xffffff80003a2b02 ; mov esi, eax ; call rcx
0xffffff80006264c6 : add byte ptr [rax], al ; test rcx, rcx ; jne 0xffffff80006264b8 ; pop rbp ; ret
0xffffff800077d0ca : add byte ptr [rax], al ; test rcx, rcx ; jne 0xffffff800077d0c8 ; pop rbp ; ret
0xffffff800077e3aa : add byte ptr [rax], al ; test rcx, rcx ; jne 0xffffff800077e3a8 ; pop rbp ; ret
0xffffff80008a8889 : add byte ptr [rax], al ; test rsi, rax ; setne al ; pop rbp ; ret
0xffffff80004fa77c : add byte ptr [rax], al ; verr word ptr [rbx] ; jo 0xffffff80004fa7e9 ; ret
0xffffff80003b9cf8 : add byte ptr [rax], al ; wrmsr ; pop rbp ; ret
0xffffff80005322bd : add byte ptr [rax], al ; xor byte ptr [rbp + 2], 0x5d ; ret
0xffffff800053a63e : add byte ptr [rax], al ; xor byte ptr [rbp + 5], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800079cd3a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000531f53 : add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b6
0xffffff800065ef62 : add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff800065e522 : add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e4a7
0xffffff80006723a5 : add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800029e857
0xffffff800081c605 : add byte ptr [rax], al ; xor eax, eax ; call 0xffffff8000818826
0xffffff8000301f0b : add byte ptr [rax], al ; xor eax, eax ; mov rsi, r14 ; call 0xffffff800028e1b9
0xffffff800026793c : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80002a28aa : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a8bb4 : add byte ptr [rax], al ; xor eax, eax ; xor edx, edx ; wrmsr ; pop rbp ; ret
0xffffff80002ae890 : add byte ptr [rax], al ; xor ebx, ebx ; test rax, rax ; je 0xffffff80002ae8a7 ; call rax
0xffffff80003adbea : add byte ptr [rax], al ; xor ebx, ebx ; xor ecx, ecx ; call 0xffffff80003a9ed8
0xffffff80006bb6a8 : add byte ptr [rax], al ; xor ecx, ecx ; mov dl, al ; jmp 0xffffff80006bb6c1
0xffffff80003aefa1 : add byte ptr [rax], al ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff800088d2d8 : add byte ptr [rax], al ; xor ecx, ecx ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80006a449c : add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb7
0xffffff80006a455d : add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb8
0xffffff800061c639 : add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d8926
0xffffff80006abce2 : add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d8927
0xffffff8000749537 : add byte ptr [rax], al ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000552757 : add byte ptr [rax], al ; xor edx, edx ; call rax
0xffffff80003a8c38 : add byte ptr [rax], al ; xor edx, edx ; mov eax, esi ; wrmsr ; pop rbp ; ret
0xffffff800025c6be : add byte ptr [rax], al ; xor edx, edx ; mov rdi, r15 ; call 0xffffff80002d8929
0xffffff80006cc678 : add byte ptr [rax], al ; xor edx, edx ; mov rdi, rbx ; call 0xffffff80002d8929
0xffffff80005548fb : add byte ptr [rax], al ; xor edx, edx ; mov rsi, r14 ; call r12
0xffffff80005526a2 : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rax ; call rcx
0xffffff80008a9a1b : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff800038b263 : add byte ptr [rax], al ; xor edx, edx ; wrmsr ; pop rbp ; ret
0xffffff800033967b : add byte ptr [rax], al ; xor edx, edx ; xor ecx, ecx ; call 0xffffff80003858e8
0xffffff8000684de7 : add byte ptr [rax], al ; xor esi, esi ; call 0xffffff8000551036
0xffffff80002672b5 : add byte ptr [rax], al ; xor esi, esi ; mov rcx, r14 ; call qword ptr [rbx]
0xffffff8000554dcd : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call 0xffffff8000551039
0xffffff800068e05a : add byte ptr [rax], al ; xor esi, esi ; mov rdx, r15 ; call rax
0xffffff800082c9df : add byte ptr [rax], al ; xor esi, esi ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80002670fd : add byte ptr [rax], al ; xor esi, esi ; mov rdx, rbx ; call r15
0xffffff80008b4473 : add byte ptr [rax], al ; xor esi, esi ; mov rdx, rcx ; pop rbp ; jmp rax
0xffffff80003a84b2 : add byte ptr [rax], al ; xor esi, esi ; pop rbp ; jmp rax
0xffffff8000266b24 : add byte ptr [rax], al ; xor esi, esi ; xor edx, edx ; call r14
0xffffff80003384af : add byte ptr [rax], al ; xor esi, esi ; xor edx, edx ; pop rbp ; jmp 0xffffff80002a46d9
0xffffff8000267156 : add byte ptr [rax], al ; xor esi, esi ; xor edx, edx ; xor ecx, ecx ; call rbx
0xffffff80008a2cbc : add byte ptr [rax], al ; xor esi, esi ; xor edx, edx ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff80006bd3df : add byte ptr [rax], al ; xor r12d, r12d ; jmp 0xffffff80006bd3af
0xffffff8000392fa7 : add byte ptr [rax], al ; xor rax, rax ; leave ; ret
0xffffff800039a770 : add byte ptr [rax], al ; xor rbp, rbp ; call rcx
0xffffff800039a78e : add byte ptr [rax], al ; xor rbp, rbp ; mov rsp, rsi ; call rdi
0xffffff80006a449a : add byte ptr [rax], bh ; add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb9
0xffffff8000887e36 : add byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000811ad0 : add byte ptr [rax], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000634985 : add byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000541a50 : add byte ptr [rax], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008af336 : add byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000813b80 : add byte ptr [rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003cfe10 : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a44fb : add byte ptr [rax], ch ; add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb9
0xffffff80008b50be : add byte ptr [rax], ch ; add byte ptr [rax], ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b442c9 : add byte ptr [rax], ch ; cmp edi, edi ; ret 0x3148
0xffffff8000814340 : add byte ptr [rax], ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bd12d : add byte ptr [rax], cl ; add byte ptr [rax + 0xf], cl ; ret
0xffffff80006c7a0c : add byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80002a5b92 : add byte ptr [rax], cl ; add byte ptr [rax], al ; jne 0xffffff80002a5b57 ; pop rbp ; ret
0xffffff80008a0f8d : add byte ptr [rax], cl ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0xffffff80003a8c26 : add byte ptr [rax], cl ; add byte ptr [rax], al ; rdmsr ; pop rbp ; ret
0xffffff800079d4f1 : add byte ptr [rax], cl ; add byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f9466 : add byte ptr [rax], cl ; add byte ptr [rbx], ah ; je 0xffffff80004f94d1 ; ret
0xffffff800064a049 : add byte ptr [rax], cl ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff800029cf7f : add byte ptr [rax], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005496e3 : add byte ptr [rax], cl ; jne 0xffffff8000549702 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000799437 : add byte ptr [rax], cl ; jne 0xffffff800079944c ; mov rdi, r12 ; call 0xffffff80002b5749
0xffffff80007ff00f : add byte ptr [rax], cl ; pop rbp ; jmp rax
0xffffff80008172e9 : add byte ptr [rax], cl ; pop rbp ; ret
0xffffff8000b450cc : add byte ptr [rax], cl ; popfq ; ret 0x4ca2
0xffffff80004eba09 : add byte ptr [rax], cl ; ret
0xffffff80002b7394 : add byte ptr [rax], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80006dcb75 : add byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003a1713 : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800028e388 : add byte ptr [rax], dh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000814d40 : add byte ptr [rax], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c4328 : add byte ptr [rax], dl ; add bh, bh ; ret
0xffffff80003d6603 : add byte ptr [rax], dl ; add bh, dh ; ret 0
0xffffff80004ef228 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80008d96f8 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x854d
0xffffff800084f545 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000290871 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80008e0639 : add byte ptr [rax], dl ; add byte ptr [rbp + 0x440f48f6], al ; ret 0x8948
0xffffff80004bc534 : add byte ptr [rax], dl ; add byte ptr [rdi], cl ; ret 0xc35d
0xffffff80007972b1 : add byte ptr [rax], dl ; add byte ptr [rsp + rbp - 0x7f], dh ; call qword ptr [rax]
0xffffff8000272c84 : add byte ptr [rax], dl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800049d3ad : add byte ptr [rax], dl ; je 0xffffff800049d3ba ; xor eax, eax ; pop rbp ; ret
0xffffff80008c3c10 : add byte ptr [rax], dl ; jne 0xffffff80008c3c1b ; pop rbp ; ret
0xffffff8000764092 : add byte ptr [rax], dl ; mov rdi, r14 ; call 0xffffff80003923e8
0xffffff80004ef354 : add byte ptr [rax], dl ; or byte ptr [rdi], cl ; ret 0xc7f6
0xffffff8000272ae1 : add byte ptr [rax], dl ; pop rbp ; ret
0xffffff8000810db0 : add byte ptr [rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800046d04f : add byte ptr [rax], r8b ; add byte ptr [rdi], cl ; ret
0xffffff80007b8843 : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000745d86 : add byte ptr [rax], r8b ; jmp 0xffffff8000745d52
0xffffff8000745df6 : add byte ptr [rax], r8b ; jmp 0xffffff8000745dc2
0xffffff8000745df5 : add byte ptr [rax], r8b ; jmp 0xffffff8000745dc3
0xffffff800090a86d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0xffffff8000788d8e : add byte ptr [rax], r8b ; mov eax, 4 ; pop rbp ; ret
0xffffff80007b87ad : add byte ptr [rax], r8b ; mov rdi, rax ; call 0xffffff80007b4a68
0xffffff800039939d : add byte ptr [rax], r8b ; mov rdi, rax ; xor rbp, rbp ; call rbx
0xffffff800025320d : add byte ptr [rax], r8b ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff80007ff00e : add byte ptr [rax], r9b ; pop rbp ; jmp rax
0xffffff80008172e8 : add byte ptr [rax], r9b ; pop rbp ; ret
0xffffff80005d7498 : add byte ptr [rbp + 0x10b78c0], al ; ret
0xffffff8000316438 : add byte ptr [rbp + 0x15], dh ; test dx, dx ; setne dl ; jmp 0xffffff800031645a
0xffffff8000624078 : add byte ptr [rbp + 0x15e74d2], al ; ret 0xd339
0xffffff8000663e39 : add byte ptr [rbp + 0x18], dh ; jmp 0xffffff8000663e57
0xffffff80007b5881 : add byte ptr [rbp + 0x18], dh ; jmp 0xffffff80007b589f
0xffffff8000663e38 : add byte ptr [rbp + 0x18], sil ; jmp 0xffffff8000663e58
0xffffff80007b5880 : add byte ptr [rbp + 0x18], sil ; jmp 0xffffff80007b58a0
0xffffff8000766a3d : add byte ptr [rbp + 0x1c], bh ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff80007972cd : add byte ptr [rbp + 0x1c], dh ; jmp 0xffffff80007972e8
0xffffff80007972cc : add byte ptr [rbp + 0x1c], sil ; jmp 0xffffff80007972e9
0xffffff800069c8ac : add byte ptr [rbp + 0x208e0fc0], al ; idiv edi ; call rcx
0xffffff8000259fcb : add byte ptr [rbp + 0x21480151], cl ; ret 0xc748
0xffffff800035471c : add byte ptr [rbp + 0x21], dh ; mov eax, dword ptr [rbx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000604beb : add byte ptr [rbp + 0x258d4cc9], al ; ret
0xffffff8000604bea : add byte ptr [rbp + 0x258d4cc9], r8b ; ret
0xffffff80002cec26 : add byte ptr [rbp + 0x3145ff53], cl ; push rsi ; ret
0xffffff800026a0de : add byte ptr [rbp + 0x31], al ; div bh ; ret
0xffffff800065e84f : add byte ptr [rbp + 0x31], al ; div byte ptr [rcx] ; shr al, 0x56 ; stc ; ret 0x44ff
0xffffff800065e542 : add byte ptr [rbp + 0x31], al ; div byte ptr [rcx] ; shr al, 0x63 ; cld ; ret 0x45ff
0xffffff800065e70f : add byte ptr [rbp + 0x31], al ; div byte ptr [rcx] ; shr al, 0x96 ; cli ; ret 0x44ff
0xffffff800058e89c : add byte ptr [rbp + 0x31], al ; in al, 0x31 ; shr al, 0xa9 ; call rax
0xffffff80003b4a89 : add byte ptr [rbp + 0x31], al ; in al, 0x39 ; ret
0xffffff80006bd3e0 : add byte ptr [rbp + 0x31], al ; in al, 0xeb ; ret
0xffffff800065fca7 : add byte ptr [rbp + 0x31], al ; push qword ptr [rcx] ; shr al, 0x9e ; jmp 0xffffff800065fc7d
0xffffff80003355d1 : add byte ptr [rbp + 0x31], al ; push rdi ; ret 0xfff7
0xffffff800028506c : add byte ptr [rbp + 0x31], al ; push rsi ; ret
0xffffff80006464ed : add byte ptr [rbp + 0x31], al ; push rsi ; ret 0x7504
0xffffff80005ba8aa : add byte ptr [rbp + 0x31], al ; rol byte ptr [rbp + 0x31], 0xc9 ; call 0xffffff8000396b89
0xffffff800072d763 : add byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0x11], 0x89 ; ret 0xd989
0xffffff80007b458d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x77], 0xdf ; call 0xffffff80007907d9
0xffffff800077a502 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret 0x162
0xffffff8000794023 : add byte ptr [rbp + 0x31], al ; test byte ptr [rax - 0x73], 0x3d ; ret 0x34a8
0xffffff80007c13e3 : add byte ptr [rbp + 0x31], al ; test byte ptr [rax - 0x75], 0x45 ; mov al, 0x89 ; ret 0x2944
0xffffff80002b2045 : add byte ptr [rbp + 0x31], al ; test byte ptr [rax - 0x7b], 0xc0 ; je 0xffffff80002b205c ; call rax
0xffffff80002b2690 : add byte ptr [rbp + 0x31], al ; test byte ptr [rax - 0x7b], 0xc0 ; je 0xffffff80002b26a7 ; call rax
0xffffff8000839fef : add byte ptr [rbp + 0x31], al ; test byte ptr [rcx + 0xf], 0xb6 ; ret
0xffffff8000624115 : add byte ptr [rbp + 0x39057ec0], al ; ret
0xffffff8000624114 : add byte ptr [rbp + 0x39057ec0], r8b ; ret
0xffffff800061c3f6 : add byte ptr [rbp + 0x39], al ; ret
0xffffff80008e063b : add byte ptr [rbp + 0x440f48f6], al ; ret 0x8948
0xffffff80007961ff : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff800049574f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; add qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800040c86f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; dec dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800040c7bf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; inc dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff8000512e4f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; inc dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff8000802a7f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; lfence ; pop rbp ; ret
0xffffff800086421f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov al, 1 ; pop rbp ; ret
0xffffff800088e87f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov al, byte ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800088f58f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov al, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff80008135af : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff8000588e9f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff8000588eaf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff80007961ef : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80007f07df : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x40], esi ; pop rbp ; ret
0xffffff80004b3bef : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x44], esi ; pop rbp ; ret
0xffffff80004b3bcf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80004b3c0f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x4c], esi ; pop rbp ; ret
0xffffff800089fb0f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff800082babf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005e047f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff80008155cf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80005cf37f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff800080f80f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80008107bf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x24] ; pop rbp ; ret
0xffffff800081219f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800078013f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x2c] ; pop rbp ; ret
0xffffff80002f696f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082c6cf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x34] ; pop rbp ; ret
0xffffff800035072f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80006456bf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff80004b3bdf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x44] ; pop rbp ; ret
0xffffff80002ae7ef : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80004b3bff : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80004b40df : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff800089fb1f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80002db21f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa01f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x6c] ; pop rbp ; ret
0xffffff80002db6ff : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff80005e044f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff800076781f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff80005e02bf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800049e4af : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov eax, r8d ; pop rbp ; ret
0xffffff80002c80af : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039f1ff : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff800028ba4f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0xffffff800037293f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov rax, rdi ; pop rbp ; ret
0xffffff800049e6cf : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; mov rax, rsi ; pop rbp ; ret
0xffffff800051647f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; movzx eax, byte ptr [rdi] ; pop rbp ; ret
0xffffff80002510df : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; ret
0xffffff8000802a6f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; sfence ; pop rbp ; ret
0xffffff800028d6ef : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; xor eax, eax ; pop rbp ; ret
0xffffff800028d8ae : add byte ptr [rbp + 0x55], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800027fe55 : add byte ptr [rbp + 0x5b0574c0], al ; pop r14 ; pop rbp ; ret
0xffffff800029e977 : add byte ptr [rbp + 0x5d0274c0], al ; ret
0xffffff80003c5da6 : add byte ptr [rbp + 0x5d2f75c0], al ; ret
0xffffff8000392719 : add byte ptr [rbp + 0x6a], dh ; mov eax, 1 ; ret
0xffffff8000392ad9 : add byte ptr [rbp + 0x75d73948], bl ; cmp cl, cl ; ret
0xffffff80005826ba : add byte ptr [rbp + 0x7e1178c0], al ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff8000627cf8 : add byte ptr [rbp + 0xd440fc9], al ; ret 0x4f
0xffffff80006a043f : add byte ptr [rbp + 0xf], al ; mov dh, 0xaf ; ret
0xffffff800058ca60 : add byte ptr [rbp + 0xf], al ; ret
0xffffff8000797375 : add byte ptr [rbp + 2], dh ; mov eax, ecx ; pop rbp ; ret
0xffffff8000293678 : add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80004c857e : add byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff8000710ae9 : add byte ptr [rbp + 3], dh ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800079c21b : add byte ptr [rbp + 5], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d6401 : add byte ptr [rbp + 5], dh ; bswap esi ; mov dword ptr [rdi + 0x70], esi ; pop rbp ; ret
0xffffff8000389dd9 : add byte ptr [rbp + 5], dh ; mov dword ptr [rax + 0x48], esi ; pop rbp ; ret
0xffffff8000389d69 : add byte ptr [rbp + 5], dh ; mov dword ptr [rax + 0x54], esi ; pop rbp ; ret
0xffffff8000313b5c : add byte ptr [rbp + 5], dh ; mov dword ptr [rdi + 0x48], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000528eee : add byte ptr [rbp + 5], dh ; mov eax, 2 ; pop rbp ; ret
0xffffff800039cd83 : add byte ptr [rbp + 5], dh ; mov eax, dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80002f8e28 : add byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f8fc8 : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006d63d7 : add byte ptr [rbp + 7], dh ; mov eax, dword ptr [rdi + 0x14] ; bswap eax ; pop rbp ; ret
0xffffff8000796069 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800029f27b : add byte ptr [rbp + rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff8000273b9d : add byte ptr [rbp + rax - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002fed76 : add byte ptr [rbp + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002a150f : add byte ptr [rbp + rax - 0x48], dh ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000767cfe : add byte ptr [rbp + rcx + 0x48], dh ; mov edi, ebx ; call 0xffffff8000393049
0xffffff8000351959 : add byte ptr [rbp + rcx*2 + 0x31], dh ; div dh ; ret 0x7401
0xffffff80008ba30e : add byte ptr [rbp + rcx*4 + 0x25], cl ; pop rdx ; ret
0xffffff8000854dbe : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0xffffff80008fe833 : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x1011
0xffffff80008ba3be : add byte ptr [rbp + rcx*4 + 0x25], cl ; stosb byte ptr [rdi], al ; ret 0x27
0xffffff8000575154 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; enter -0x72b4, 0x35 ; ret 0x41b8
0xffffff800037628d : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0xffffff800064bce3 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35b8
0xffffff80005dd06f : add byte ptr [rbp + rcx*4 + 0x35], cl ; out dx, al ; ret
0xffffff800028ebda : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0xffffff80004ac256 : add byte ptr [rbp + rcx*4 + 0x3c], cl ; add ecx, dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80005d62ed : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0xffffff80008877ce : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x2ada
0xffffff80006825e1 : add byte ptr [rbp + rcx*4 + 0x45], cl ; nop ; call 0xffffff800029e857
0xffffff80002a120a : add byte ptr [rbp + rcx*4 + 0x49], al ; inc dword ptr [rbx + rcx*4 + 0x3d] ; ret 0x84b3
0xffffff8000393678 : add byte ptr [rbp + rcx*4 + 0x4a], al ; push qword ptr [rcx] ; fcomi st(6) ; ret 0xbe03
0xffffff800076efaf : add byte ptr [rbp + rcx*4 + 0x50], cl ; add dword ptr [rax - 0x77], ecx ; ret 0x6eb
0xffffff800029e069 : add byte ptr [rbp + rcx*4 + 0x7b], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0xffffff8000b45678 : add byte ptr [rbp + rcx*4 + 0xc], al ; adc byte ptr [rcx], ah ; ret 0xd201
0xffffff80005f21c8 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x3a9a
0xffffff8000648cab : add byte ptr [rbp + rcx*4 + 5], cl ; ret
0xffffff800055094b : add byte ptr [rbp + rcx*4 - 0x4c], cl ; ret
0xffffff800040ee82 : add byte ptr [rbp + rcx*4 - 0x71], cl ; add al, byte ptr [rax] ; add dh, dh ; ret 0x4d08
0xffffff80005cfd8c : add byte ptr [rbp + rsi - 0x15], dh ; adc al, byte ptr [rcx - 0x7f] ; call qword ptr [rax]
0xffffff80005cfd8b : add byte ptr [rbp + rsi - 0x15], sil ; adc al, byte ptr [rcx - 0x7f] ; call qword ptr [rax]
0xffffff80007fcbdf : add byte ptr [rbp - 0x12], dh ; pop rbp ; ret
0xffffff8000367fcf : add byte ptr [rbp - 0x12], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80003a5419 : add byte ptr [rbp - 0x13fe8b2e], al ; pop rbp ; ret
0xffffff80004bc4b1 : add byte ptr [rbp - 0x14], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b80b1 : add byte ptr [rbp - 0x14], dh ; mov eax, ecx ; pop rbp ; ret
0xffffff800057219c : add byte ptr [rbp - 0x16488b40], al ; ret 1
0xffffff80007d044c : add byte ptr [rbp - 0x17], bl ; cmp eax, 0x5d000011 ; ret
0xffffff80005697fa : add byte ptr [rbp - 0x17], bl ; fucomip st(5) ; loop 0xffffff8000569808 ; pop rbp ; ret
0xffffff80002b9b4c : add byte ptr [rbp - 0x17], bl ; int 0x58
0xffffff80004e153f : add byte ptr [rbp - 0x17], bl ; mov cl, bl ; ret 0x66ff
0xffffff80007faab1 : add byte ptr [rbp - 0x17], bl ; mov eax, 0x5dffd152 ; ret
0xffffff80004c67ea : add byte ptr [rbp - 0x17], bl ; ret 0xffec
0xffffff80002667f7 : add byte ptr [rbp - 0x17], bl ; ret 2
0xffffff80008790b7 : add byte ptr [rbp - 0x17], bl ; ret 5
0xffffff800039aacc : add byte ptr [rbp - 0x17], bl ; sbb eax, 0x5d000003 ; ret
0xffffff80007f6dc1 : add byte ptr [rbp - 0x17], bl ; test al, 0x8f ; sar edi, 1 ; pop rbp ; ret
0xffffff80002505a2 : add byte ptr [rbp - 0x17], bl ; xchg eax, edi ; sub dl, byte ptr [rax + rax] ; pop rbp ; ret
0xffffff8000752afa : add byte ptr [rbp - 0x1d], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005e48d0 : add byte ptr [rbp - 0x23], dh ; pop rbp ; ret
0xffffff800049e1f0 : add byte ptr [rbp - 0x23], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000328481 : add byte ptr [rbp - 0x24], dh ; pop rbp ; ret
0xffffff80004bb6a1 : add byte ptr [rbp - 0x24], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007db656 : add byte ptr [rbp - 0x29], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000581527 : add byte ptr [rbp - 0x2a], dh ; pop rbp ; ret
0xffffff800039667f : add byte ptr [rbp - 0x32], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c59d3 : add byte ptr [rbp - 0x36], dh ; pop rbp ; ret
0xffffff80002b7b1a : add byte ptr [rbp - 0x38bbf001], al ; pop rbp ; ret
0xffffff80007a959b : add byte ptr [rbp - 0x39], dh ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0xffffff800029360c : add byte ptr [rbp - 0x3d], bl ; inc ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff8000561e27 : add byte ptr [rbp - 0x3d], bl ; mov dword ptr [rax + 8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80005f4df6 : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x100080 ; pop rbp ; ret
0xffffff80005f4e04 : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x200020 ; pop rbp ; ret
0xffffff80005f4def : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x300110 ; pop rbp ; ret
0xffffff80005f4dfd : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x380100 ; pop rbp ; ret
0xffffff80005f4e0b : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x480190 ; pop rbp ; ret
0xffffff80005684f7 : add byte ptr [rbp - 0x3d], bl ; mov eax, 0x66 ; pop rbp ; ret
0xffffff80005f4dc6 : add byte ptr [rbp - 0x3d], bl ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80003b60a3 : add byte ptr [rbp - 0x3d], bl ; mov eax, 3 ; pop rbp ; ret
0xffffff800043787d : add byte ptr [rbp - 0x3d], bl ; mov eax, 5 ; pop rbp ; ret
0xffffff8000271e0f : add byte ptr [rbp - 0x3d], bl ; mov eax, dword ptr [rcx + rsi + 4] ; pop rbp ; ret
0xffffff8000451f05 : add byte ptr [rbp - 0x3d], bl ; mov eax, esi ; pop rbp ; ret
0xffffff800077d0d9 : add byte ptr [rbp - 0x3d], bl ; mov rax, rcx ; pop rbp ; ret
0xffffff80002a6ddc : add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff80002e8e53 : add byte ptr [rbp - 0x3d], bl ; xor eax, eax ; pop rbp ; ret
0xffffff8000839736 : add byte ptr [rbp - 0x3e6bf040], 0xf ; xchg eax, ebp ; ret 0x8948
0xffffff80008cfde8 : add byte ptr [rbp - 0x47e18b40], al ; ret 2
0xffffff80002a5b95 : add byte ptr [rbp - 0x48], dh ; pop rbp ; ret
0xffffff80003a6e88 : add byte ptr [rbp - 0x4b], dh ; pop rbp ; ret
0xffffff80008324a4 : add byte ptr [rbp - 0x52], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000388d9a : add byte ptr [rbp - 0x5d], dh ; pop rbp ; ret
0xffffff80004a640b : add byte ptr [rbp - 0x5e], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f0ecf : add byte ptr [rbp - 0x73], al ; jl 0xffffff80007f0f00 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0xffffff80008e7d48 : add byte ptr [rbp - 0x73], cl ; add al, 0x83 ; ret
0xffffff80005f4441 : add byte ptr [rbp - 0x75], cl ; insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff80004b947c : add byte ptr [rbp - 0x76818140], al ; ret 0xd2f7
0xffffff8000859f46 : add byte ptr [rbp - 0x76b30090], cl ; out 0x41, eax ; call rsi
0xffffff80003c01f2 : add byte ptr [rbp - 0x76bb64e4], cl ; out 0xe8, eax ; ret 0xfd96
0xffffff8000673a9c : add byte ptr [rbp - 0x76e48b40], al ; ret
0xffffff80005b43ec : add byte ptr [rbp - 0x76e88140], al ; ret 0x6666
0xffffff80003951a0 : add byte ptr [rbp - 0x77], al ; int1 ; call 0xffffff8000381406
0xffffff800031f7a7 : add byte ptr [rbp - 0x77], al ; ret
0xffffff800083c1ed : add byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800071fec3 : add byte ptr [rbp - 0x77], al ; ret 0x8949
0xffffff80003742d6 : add byte ptr [rbp - 0x77], al ; rol dword ptr [rcx - 0x3f], cl ; ret
0xffffff80008448bf : add byte ptr [rbp - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x6348
0xffffff800083596f : add byte ptr [rbp - 0x77], cl ; call 0xffffff7fc48212c7
0xffffff8000719303 : add byte ptr [rbp - 0x77], cl ; jbe 0xffffff8000719319 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f0f8b : add byte ptr [rbp - 0x77], cl ; jmp 0xffffff802a11cc81
0xffffff80004f0f8a : add byte ptr [rbp - 0x77], cl ; jmp 0xffffff802a11cc82
0xffffff8000591b08 : add byte ptr [rbp - 0x77], cl ; ret
0xffffff80003c41ae : add byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff80004ab0df : add byte ptr [rbp - 0x77], cl ; ret 0x8d4d
0xffffff80006e179f : add byte ptr [rbp - 0x77], cl ; ror dword ptr [rcx - 0x77], 1 ; ret 0x8b41
0xffffff80006aa065 : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; ret
0xffffff800047b90b : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret 0xc985
0xffffff800061c3ab : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rbp + 0xf] ; ret
0xffffff800085cc2f : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0xffffff8000607e76 : add byte ptr [rbp - 0x7b], al ; in al, 0xf ; xchg eax, ebp ; ret 0x8548
0xffffff80004692f8 : add byte ptr [rbp - 0x7b], al ; push qword ptr [rbp - 0xe] ; jmp 0xffffff80004692ca
0xffffff800027c59b : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 2
0xffffff8000692f19 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0xffffff80004ce701 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x8e ; ret 0
0xffffff80005ec736 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80004a074d : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret
0xffffff8000751dce : add byte ptr [rbp - 0x7b], al ; sal byte ptr [rdx + rax + 0x31], 0xc0 ; pop rbp ; ret
0xffffff80004b249f : add byte ptr [rbp - 0x7b], al ; sal byte ptr [rsi + rax + 0x49], 0x83 ; ret
0xffffff800044cf90 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x940f
0xffffff8000747e40 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80008dfcf0 : add byte ptr [rbp - 0x7b], cl ; in al, 0xb8 ; ret 2
0xffffff8000288a7e : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0xffffff800055472e : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0xb60f
0xffffff8000687efc : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x42], 0x5d ; ret
0xffffff80005bf772 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x48], 0x5d ; ret
0xffffff80005b1076 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x5c], 0x5d ; ret
0xffffff80005b209c : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x62], 0x5d ; ret
0xffffff8000567237 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff800034e828 : add byte ptr [rbp - 0x7b], dh ; sal byte ptr [rcx + 0x48], 0x89 ; ret 0xc889
0xffffff800048ea76 : add byte ptr [rbp - 0x99d8b40], al ; ret
0xffffff800048eac2 : add byte ptr [rbp - 0x9e98b40], al ; ret
0xffffff80002dbc7b : add byte ptr [rbp - 0xb7f78d], cl ; ret 0x3948
0xffffff800061f2d4 : add byte ptr [rbp - 0xb98b40], al ; ret
0xffffff80002fef7f : add byte ptr [rbp - 0xf38a40], al ; ret
0xffffff8000264e1a : add byte ptr [rbp - 0xf98b25], al ; ret
0xffffff800039342f : add byte ptr [rbp - 1], ah ; add al, 0x25 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff80003a2708 : add byte ptr [rbp - 1], bl ; loopne 0xffffff80003a275d ; mov eax, esi ; pop rbp ; ret
0xffffff80003a2748 : add byte ptr [rbp - 1], bl ; loopne 0xffffff80003a27af ; ret
0xffffff8000878e62 : add byte ptr [rbp - 1], bl ; loopne 0xffffff8000878ec9 ; ret
0xffffff80008a3ee6 : add byte ptr [rbp - 1], bl ; loopne 0xffffff80008a3f4d ; ret
0xffffff80008b3b92 : add byte ptr [rbp - 5], dh ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a48d4 : add byte ptr [rbp - 8], dh ; ret
0xffffff80006de490 : add byte ptr [rbx + 0x11], bh ; jmp 0xffffff80006de462
0xffffff800078ab00 : add byte ptr [rbx + 0x11c93], cl ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800029bd35 : add byte ptr [rbx + 0x1c7501f8], al ; pop rbp ; ret
0xffffff80003934bf : add byte ptr [rbx + 0x21f28907], cl ; ret 0xff0
0xffffff80008fa6d3 : add byte ptr [rbx + 0x23d1e605], cl ; add byte ptr [rcx], bh ; ret
0xffffff800063066e : add byte ptr [rbx + 0x27401f9], al ; xor eax, eax ; pop rbp ; ret
0xffffff800038af60 : add byte ptr [rbx + 0x27403ff], al ; xor eax, eax ; pop rbp ; ret
0xffffff80006b1723 : add byte ptr [rbx + 0x27501f9], al ; pop rbp ; ret
0xffffff800027fd26 : add byte ptr [rbx + 0x27601f8], al ; pop rbp ; ret
0xffffff80007e2f01 : add byte ptr [rbx + 0x2a99b405], cl ; add byte ptr [rcx], bh ; ret 0x8d0f
0xffffff80007b8704 : add byte ptr [rbx + 0x2d2add05], cl ; add byte ptr [rcx], bh ; ret
0xffffff80003a0c69 : add byte ptr [rbx + 0x33092], cl ; add dh, dh ; ret 0x4801
0xffffff80007944e2 : add byte ptr [rbx + 0x34a3f715], cl ; add bh, bh ; ret 0x5439
0xffffff80002bd364 : add byte ptr [rbx + 0x3938b044], cl ; ret 0x4d0f
0xffffff8000691bbb : add byte ptr [rbx + 0x3e263a05], cl ; add byte ptr [rcx], bh ; ret 0x6376
0xffffff80006908d5 : add byte ptr [rbx + 0x3e274c05], cl ; add byte ptr [rcx], bh ; ret
0xffffff800055096d : add byte ptr [rbx + 0x415b7043], cl ; pop rsi ; pop rbp ; ret
0xffffff800028eb3a : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80008126e6 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0xffffff80002529d0 : add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800025dd5e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800060b8d2 : add byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80004f66e9 : add byte ptr [rbx + 0x438b660b], cl ; sbb byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff80002ce60e : add byte ptr [rbx + 0x440f01f8], al ; ret
0xffffff80006296c5 : add byte ptr [rbx + 0x440f0ac0], al ; ret
0xffffff80008435bb : add byte ptr [rbx + 0x4466f3c0], al ; mov edx, eax ; jmp 0xffffff80008435cf
0xffffff80008ccc12 : add byte ptr [rbx + 0x45897843], cl ; shr al, 1 ; ret 0xac57
0xffffff80006b51ef : add byte ptr [rbx + 0x4789221d], cl ; add bh, bh ; ret
0xffffff80005f37bb : add byte ptr [rbx + 0x4789ca05], cl ; add byte ptr [rcx], bh ; ret 0x6376
0xffffff800058df8b : add byte ptr [rbx + 0x518b4041], cl ; xor byte ptr [rcx], ah ; ret 0xd0f7
0xffffff800030d2ff : add byte ptr [rbx + 0x58901e0], al ; stosd dword ptr [rdi], eax ; ret
0xffffff80007b320f : add byte ptr [rbx + 0x58904c8], al ; ret
0xffffff800051be78 : add byte ptr [rbx + 0x5bc02905], cl ; add byte ptr [rcx], bh ; ret
0xffffff800025db1e : add byte ptr [rbx + 0x5d], bl ; ret
0xffffff800051fa86 : add byte ptr [rbx + 0x63481857], cl ; fimul dword ptr [rax + 0x39] ; ret
0xffffff800059b82e : add byte ptr [rbx + 0x63], cl ; adc al, 0x93 ; add rdx, r11 ; jmp rdx
0xffffff800089e946 : add byte ptr [rbx + 0x63], cl ; add al, 0xa6 ; add rax, r14 ; jmp rax
0xffffff80007779a0 : add byte ptr [rbx + 0x63], cl ; add al, 0xbc ; add rax, r12 ; jmp rax
0xffffff80008a12b6 : add byte ptr [rbx + 0x63], cl ; mov ebp, 0xe8014c00 ; jmp rax
0xffffff80003ab472 : add byte ptr [rbx + 0x681da705], cl ; add bh, bh ; ret
0xffffff80003a5675 : add byte ptr [rbx + 0x687ba405], cl ; add bh, bh ; ret
0xffffff80008be3e2 : add byte ptr [rbx + 0x6891840], cl ; xor eax, eax ; pop rbp ; ret
0xffffff800028a5fd : add byte ptr [rbx + 0x6898104], cl ; xor eax, eax ; pop rbp ; ret
0xffffff8000336c1f : add byte ptr [rbx + 0x6f5cf615], cl ; add dh, dh ; ret 0x7506
0xffffff80003b472a : add byte ptr [rbx + 0x71e07715], cl ; add bh, bh ; ret 0x1589
0xffffff8000377e02 : add byte ptr [rbx + 0x78714b05], cl ; add byte ptr [rcx], bh ; ret
0xffffff800029aaa9 : add byte ptr [rbx + 0x78901e0], al ; pop rbp ; ret
0xffffff800036e7db : add byte ptr [rbx + 0x78dc7615], cl ; add byte ptr [rcx], bh ; ret 0x2376
0xffffff800061e9d6 : add byte ptr [rbx + 0x8080], cl ; add byte ptr [rcx], bh ; ret
0xffffff80004bc500 : add byte ptr [rbx + 0x90487], cl ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff800039349f : add byte ptr [rbx + 0x9f28907], cl ; ret 0xff0
0xffffff80003656cf : add byte ptr [rbx + 0xc48a], cl ; add byte ptr [rax - 0x7f], cl ; ret 0xc8
0xffffff80007c6c5e : add byte ptr [rbx + 0xf00c47d], al ; xchg eax, ebp ; ret 0x888d
0xffffff80002518e0 : add byte ptr [rbx + 2], dh ; xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff80006dac00 : add byte ptr [rbx + 5], dh ; inc dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff80006d0594 : add byte ptr [rbx + 7], dh ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80008a7581 : add byte ptr [rbx + rax + 0x4f], cl ; push 0x5dd7894c ; jmp rax
0xffffff80005dfdce : add byte ptr [rbx + rax - 0x75], dh ; or al, 0x5d ; ret
0xffffff8000378baa : add byte ptr [rbx + rax*2 - 0xa], dh ; ret
0xffffff800059b9a3 : add byte ptr [rbx + rax*4], cl ; call qword ptr [rax]
0xffffff8000b45311 : add byte ptr [rbx + rbp*4], bl ; int 0xc2
0xffffff80005b963b : add byte ptr [rbx + rbx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000464f2e : add byte ptr [rbx + rbx*8 - 0xb7be8c], al ; ret 0xe875
0xffffff80004a1bc9 : add byte ptr [rbx + rbx*8 - 0xb7cb8c], al ; ret 0x8348
0xffffff800053777a : add byte ptr [rbx + rbx*8 - 0xb7cc8c], al ; ret 0x8348
0xffffff800025c8e9 : add byte ptr [rbx + rbx*8 - 0xb7ce8c], al ; ret 0x7a8d
0xffffff800025c589 : add byte ptr [rbx + rbx*8 - 0xb7d18c], al ; ret 0x7a8d
0xffffff800025c829 : add byte ptr [rbx + rbx*8 - 0xb7d28c], al ; ret 0x5a8d
0xffffff80002c3825 : add byte ptr [rbx + rcx*4 + 0x15], cl ; ret
0xffffff8000298ac8 : add byte ptr [rbx + rcx*4 + 0x24], cl ; ret
0xffffff80008ef667 : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0xffffff80005d174f : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ror dword ptr [rax - 1], 1 ; ret 0x854d
0xffffff8000298aee : add byte ptr [rbx + rcx*4 + 0x34], cl ; ret
0xffffff80007673aa : add byte ptr [rbx + rcx*4 + 0x34], cl ; ret 0xc1f6
0xffffff800055249a : add byte ptr [rbx + rcx*4 + 0x49], cl ; and cl, ch ; ret 2
0xffffff80007af45d : add byte ptr [rbx + rcx*4 + 0x60], cl ; and dh, dh ; ret 0x7401
0xffffff80003d1e03 : add byte ptr [rbx + rcx*4 + 0x63], al ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80008b1c9f : add byte ptr [rbx + rcx*4 + 0x6d], cl ; shr bl, 1 ; sub ecx, dword ptr [rax - 0x77] ; ret
0xffffff800052ee99 : add byte ptr [rbx + rcx*4 + 0x75], cl ; rol byte ptr [rdx + rcx + 0x7d], 1 ; ret
0xffffff8000803ad4 : add byte ptr [rbx + rcx*4 + 0x78], cl ; or al, ch ; ret 0xba7d
0xffffff8000527a21 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; mov byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff8000575399 : add byte ptr [rbx + rcx*4 + 0xd], cl ; sysenter
0xffffff80006c8660 : add byte ptr [rbx + rcx*4 - 0x48], cl ; clc ; or byte ptr [rax], al ; add dh, dh ; ret
0xffffff80008deb13 : add byte ptr [rbx + rcx*4 - 0x48], cl ; push -0x9fffffe ; ret
0xffffff800065f1ae : add byte ptr [rbx + rdi + 0x3d], cl ; ret 0x4d51
0xffffff800087e529 : add byte ptr [rbx + rdx + 0x44], dh ; mov esi, ebp ; mov rdx, r15 ; call rax
0xffffff80005c9211 : add byte ptr [rbx + rsi + 0x4c], dh ; mov edi, esi ; call 0xffffff80005c5508
0xffffff80004c0f09 : add byte ptr [rbx - 0x12f43], al ; call qword ptr [rax]
0xffffff800058c5ec : add byte ptr [rbx - 0x14373], cl ; call rbx
0xffffff80006d1808 : add byte ptr [rbx - 0x14b6b], cl ; push rsi ; ret 0x7501
0xffffff8000472dab : add byte ptr [rbx - 0x14f6b], cl ; dec dword ptr [rdi] ; ret 0xd285
0xffffff800077b04c : add byte ptr [rbx - 0x1eb7b], cl ; jmp qword ptr [rcx]
0xffffff80004e3888 : add byte ptr [rbx - 0x1fb6b], cl ; push rsi ; ret 0x7580
0xffffff80008be344 : add byte ptr [rbx - 0x1ffffd39], bh ; test al, al ; jne 0xffffff80008be319 ; jmp 0xffffff80008be36b
0xffffff800060ef4a : add byte ptr [rbx - 0x2336b], cl ; push rsi ; ret 0x8b04
0xffffff8000283cdf : add byte ptr [rbx - 0x247cfec6], al ; dec dword ptr [rax - 0x7d] ; ret 0xff10
0xffffff800060c66f : add byte ptr [rbx - 0x24f63], cl ; push rsi ; ret
0xffffff80004b286e : add byte ptr [rbx - 0x2ef6b], cl ; push rdi ; ret 0xffdf
0xffffff8000850c1c : add byte ptr [rbx - 0x37], bl ; ret
0xffffff8000605057 : add byte ptr [rbx - 0x3ca27efc], cl ; pop rbp ; ret
0xffffff8000274595 : add byte ptr [rbx - 0x3ca27efc], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80008dbae8 : add byte ptr [rbx - 0x3d], ch ; cmp al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80007471d0 : add byte ptr [rbx - 0x47ffc2], cl ; inc eax ; jmp qword ptr [rbx]
0xffffff800038c538 : add byte ptr [rbx - 0x49f03fab], cl ; ret 0x589
0xffffff80002cb817 : add byte ptr [rbx - 0x60f0a008], al ; ret
0xffffff80004709a9 : add byte ptr [rbx - 0x67ccfb6], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf44
0xffffff80005723d7 : add byte ptr [rbx - 0x68f0fc08], al ; ret
0xffffff80004b3028 : add byte ptr [rbx - 0x6af00007], al ; ret 0xf981
0xffffff80008e23f0 : add byte ptr [rbx - 0x6af0eb02], al ; ret 0xb60f
0xffffff80004f97da : add byte ptr [rbx - 0x6af0ef06], al ; ret 0xb60f
0xffffff800083d370 : add byte ptr [rbx - 0x6af0ffc7], al ; ret 0x2b0
0xffffff8000805443 : add byte ptr [rbx - 0x6bf0bf06], al ; ret 0xff31
0xffffff800033e7fa : add byte ptr [rbx - 0x6bf0df20], al ; ret 0x8d8b
0xffffff8000391548 : add byte ptr [rbx - 0x6bf0f0c8], al ; ret
0xffffff800080840b : add byte ptr [rbx - 0x6bf0f401], al ; ret 0xfe83
0xffffff8000468eae : add byte ptr [rbx - 0x6bf0fd02], al ; ret 0xb60f
0xffffff800061c546 : add byte ptr [rbx - 0x6bf0fd07], al ; ret
0xffffff800061430e : add byte ptr [rbx - 0x6bf0fd07], al ; ret 0xf883
0xffffff800056b7e4 : add byte ptr [rbx - 0x6bf0fd08], al ; ret 0xf883
0xffffff80003d49b5 : add byte ptr [rbx - 0x6bf0fd1a], al ; ret 0xc031
0xffffff800070bd8d : add byte ptr [rbx - 0x6bf0fe02], al ; ret
0xffffff800072cd45 : add byte ptr [rbx - 0x72f0fd08], al ; ret
0xffffff80006a288d : add byte ptr [rbx - 0x73], cl ; jl 0xffffff80006a28c9 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff800071713e : add byte ptr [rbx - 0x73d413b3], cl ; ret
0xffffff80008508f3 : add byte ptr [rbx - 0x76b32bbb], cl ; ror byte ptr [rax + 0x29], cl ; ret 0xeb83
0xffffff8000252ea5 : add byte ptr [rbx - 0x76b433f3], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda20
0xffffff800082ca00 : add byte ptr [rbx - 0x76b7cf89], cl ; ret 0xff5d
0xffffff8000812360 : add byte ptr [rbx - 0x76b7df89], cl ; ret 0xff5d
0xffffff800028216a : add byte ptr [rbx - 0x76b7f3af], cl ; sar byte ptr [r9], 1 ; ret 0x420f
0xffffff800062c8e7 : add byte ptr [rbx - 0x76b7f3b8], cl ; ret
0xffffff8000877d4e : add byte ptr [rbx - 0x76b7f632], al ; fisttp word ptr [rax - 0x77] ; ret 0x894c
0xffffff8000729d02 : add byte ptr [rbx - 0x76b7fbc0], cl ; ret
0xffffff80006b48cf : add byte ptr [rbx - 0x76b7fd40], al ; ret 0xf48
0xffffff80004f6e8a : add byte ptr [rbx - 0x76bb9f8f], cl ; ret 0xf229
0xffffff80003e814f : add byte ptr [rbx - 0x76be8fb9], cl ; ret 0xc141
0xffffff80005ff0f9 : add byte ptr [rbx - 0x78f0c802], al ; ret 1
0xffffff80004f61ac : add byte ptr [rbx - 0x7af0f607], al ; ret
0xffffff80002f9349 : add byte ptr [rbx - 0x7af0fd05], al ; ret
0xffffff80006321ce : add byte ptr [rbx - 0x7af0fe07], al ; ret
0xffffff800075d023 : add byte ptr [rbx - 0x7af0fe08], al ; ret 1
0xffffff80005982e1 : add byte ptr [rbx - 0x7bf00008], al ; ret
0xffffff80007479e8 : add byte ptr [rbx - 0x7cb77bab], cl ; ret 0x4830
0xffffff80002e27b0 : add byte ptr [rbx - 0x7cb7d7ad], cl ; ret
0xffffff800048f49a : add byte ptr [rbx - 0x7cb7dba8], cl ; ret
0xffffff800025fdc7 : add byte ptr [rbx - 0x7cb7f7b8], cl ; ret
0xffffff80002615d1 : add byte ptr [rbx - 0x7cb7f7ba], cl ; ret
0xffffff800038b88f : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0xc108
0xffffff800063acfa : add byte ptr [rbx - 0x7df0fc08], al ; ret 0
0xffffff8000838188 : add byte ptr [rbx - 0x7eb74bab], cl ; ret 0xfff
0xffffff8000390352 : add byte ptr [rbx - 0x7eb7bb8d], cl ; ret
0xffffff800036a41b : add byte ptr [rbx - 0x7eb7fb85], cl ; ret
0xffffff800066ceeb : add byte ptr [rbx - 0x876b], cl ; push rsi ; ret 0x7401
0xffffff80006976a9 : add byte ptr [rbx - 0x877b], al ; call qword ptr [rax]
0xffffff8000716944 : add byte ptr [rbx - 0x8f43], al ; jmp qword ptr [rax]
0xffffff80003d55bb : add byte ptr [rbx - 0x9b73], cl ; push rsi ; ret 0x7502
0xffffff80004a67d2 : add byte ptr [rbx - 0x9f3f7ac], cl ; ret 0xbe01
0xffffff8000683c6f : add byte ptr [rbx - 0xb7f73a], al ; ret 0xff49
0xffffff8000667b8e : add byte ptr [rbx - 0xbf43], al ; call qword ptr [rax]
0xffffff800039288f : add byte ptr [rbx - 0xdaf9], cl ; add dword ptr [rdx], eax ; ret
0xffffff80003c8fda : add byte ptr [rbx], 0 ; add bh, bh ; ret
0xffffff80006f8500 : add byte ptr [rbx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000299922 : add byte ptr [rbx], ah ; add dword ptr [rcx + 0x5dc03102], ecx ; ret
0xffffff80004f9468 : add byte ptr [rbx], ah ; je 0xffffff80004f94cf ; ret
0xffffff80004f9138 : add byte ptr [rbx], ah ; jo 0xffffff80004f919f ; ret
0xffffff80004fa77f : add byte ptr [rbx], ah ; jo 0xffffff80004fa7e6 ; ret
0xffffff8000563baf : add byte ptr [rbx], ah ; xchg dword ptr [rax + 1], ebp ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800078b39d : add byte ptr [rbx], ah ; xor al, 0x81 ; mov eax, esi ; pop rbp ; ret
0xffffff800025026d : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80003a64fd : add byte ptr [rbx], al ; add byte ptr [rax], al ; cmp esi, ecx ; jl 0xffffff80003a64f9 ; pop rbp ; ret
0xffffff80003a8dd7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; or rax, rcx ; pop rbp ; ret
0xffffff80003a8dfd : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008d7907 : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000272ade : add byte ptr [rbx], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff80004b7c09 : add byte ptr [rbx], al ; add eax, 0x65df40 ; pop rbp ; ret
0xffffff80003928d1 : add byte ptr [rbx], al ; je 0xffffff80003928f1 ; leave ; ret
0xffffff80003b1869 : add byte ptr [rbx], al ; jne 0xffffff80003b1874 ; pop rbp ; ret
0xffffff80008b245e : add byte ptr [rbx], al ; or dword ptr [rcx + rax], 0 ; add byte ptr [rcx], bh ; ret 0x97f
0xffffff80002a171d : add byte ptr [rbx], al ; pop r12 ; pop rbp ; ret
0xffffff8000720d76 : add byte ptr [rbx], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000448d29 : add byte ptr [rbx], al ; sbb byte ptr [r9], bpl ; ret 0x5389
0xffffff80002bac74 : add byte ptr [rbx], al ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff80006c4ff5 : add byte ptr [rbx], bh ; add byte ptr [rax - 0x77], cl ; ret 0x8d4c
0xffffff8000841665 : add byte ptr [rbx], bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff8000448a8a : add byte ptr [rbx], cl ; add al, 0x8a ; pop rbp ; ret
0xffffff80004f9fbd : add byte ptr [rbx], cl ; xor al, 0x81 ; mov eax, esi ; pop rbp ; ret
0xffffff8000b46704 : add byte ptr [rbx], dh ; mov cl, 0xc2 ; ret
0xffffff8000803cb6 : add byte ptr [rcx + 0x100fa], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff8000862f26 : add byte ptr [rcx + 0x10], bh ; call 0xffffff800080f1a8
0xffffff80003d3e6a : add byte ptr [rcx + 0x1200a0ff], al ; add byte ptr [rdi], cl ; ret 0x415b
0xffffff800077da5c : add byte ptr [rcx + 0x16883], cl ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80005788d1 : add byte ptr [rcx + 0x180f9], al ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff80003cb1f2 : add byte ptr [rcx + 0x1d0f7f8], cl ; ret 0x8b41
0xffffff800087aa98 : add byte ptr [rcx + 0x1fc88], cl ; add dh, dh ; ret
0xffffff80005631ce : add byte ptr [rcx + 0x21], al ; fcomip st(7) ; shl dword ptr [rcx], cl ; ret
0xffffff8000841f67 : add byte ptr [rcx + 0x23], cl ; and byte ptr [r8 + 0x39], cl ; ret
0xffffff80004bc63d : add byte ptr [rcx + 0x29], al ; fisttp word ptr [rax + 9] ; ret
0xffffff80002eb36d : add byte ptr [rcx + 0x29], al ; fmul qword ptr [rax + 0x63] ; ret
0xffffff8000b48e9d : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x481b
0xffffff8000b4b9dc : add byte ptr [rcx + 0x31d921c1], cl ; ret
0xffffff80004edecb : add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0xffffff80007047e9 : add byte ptr [rcx + 0x39], al ; ret 0xf44
0xffffff800062ebc4 : add byte ptr [rcx + 0x39], al ; rol byte ptr [rdi + rcx + 0x46], 1 ; ret 0xd141
0xffffff80005a27bb : add byte ptr [rcx + 0x39], cl ; ret
0xffffff800054e75f : add byte ptr [rcx + 0x39], cl ; ret 0xc73
0xffffff80002aadd0 : add byte ptr [rcx + 0x39cf29d7], cl ; ret 0xf40
0xffffff800026349b : add byte ptr [rcx + 0x39dff7cf], cl ; ret 0x490f
0xffffff80002ffb8d : add byte ptr [rcx + 0x39ead1ca], cl ; ret 0x870f
0xffffff80008581af : add byte ptr [rcx + 0x3d8d4cfb], cl ; call rdx
0xffffff80005f14d4 : add byte ptr [rcx + 0x3df799f8], cl ; ret 0x490e
0xffffff80002c1cbc : add byte ptr [rcx + 0x415b2043], cl ; pop rsi ; pop rbp ; ret
0xffffff80007b27a9 : add byte ptr [rcx + 0x415b2443], cl ; pop rsi ; pop rbp ; ret
0xffffff80002759f2 : add byte ptr [rcx + 0x418d44df], cl ; inc dword ptr [rbp - 0x77] ; ret 0x2941
0xffffff80002a0b13 : add byte ptr [rcx + 0x58b0c42], cl ; ret
0xffffff80003923d8 : add byte ptr [rcx + 0x59], al ; ret
0xffffff80002ffcda : add byte ptr [rcx + 0x5d14ca44], cl ; ret
0xffffff80005683f3 : add byte ptr [rcx + 0x5dc03101], cl ; ret
0xffffff8000563c6a : add byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff8000526bd9 : add byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff8000756fe9 : add byte ptr [rcx + 0x5dc03107], cl ; ret
0xffffff80006d066d : add byte ptr [rcx + 0x5df029ce], cl ; ret
0xffffff8000707321 : add byte ptr [rcx + 0x5e415bc8], cl ; pop rbp ; ret
0xffffff800028bfe1 : add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80003a6eb3 : add byte ptr [rcx + 0x6348811c], cl ; ret
0xffffff800039ac9f : add byte ptr [rcx + 0x6348d45d], cl ; ret
0xffffff8000594741 : add byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff800059b7be : add byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0xffffff8000b3fb7b : add byte ptr [rcx + 0x63], cl ; add al, 0x80 ; add rax, r8 ; jmp rax
0xffffff800029c676 : add byte ptr [rcx + 0x63], cl ; add al, 0x84 ; add rax, r12 ; jmp rax
0xffffff80005f6df3 : add byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0xffffff800076c1b6 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0xffffff8000491ebe : add byte ptr [rcx + 0x63], cl ; add al, 0x9c ; add rax, r12 ; jmp rax
0xffffff80005ff102 : add byte ptr [rcx + 0x63], cl ; add al, 0xb0 ; add rax, r8 ; jmp rax
0xffffff80008407c8 : add byte ptr [rcx + 0x63], cl ; or al, 0x88 ; add rcx, r8 ; jmp rcx
0xffffff80005200d2 : add byte ptr [rcx + 0x63], cl ; or al, 0x89 ; add rcx, r9 ; jmp rcx
0xffffff800051f88f : add byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0xffffff800051f8f0 : add byte ptr [rcx + 0x63], cl ; or al, 0x8e ; add rcx, r14 ; jmp rcx
0xffffff800026df1f : add byte ptr [rcx + 0x63], cl ; or al, 0x8f ; add rcx, r15 ; jmp rcx
0xffffff80004ce7af : add byte ptr [rcx + 0x63], cl ; ret 0x8042
0xffffff80007eae00 : add byte ptr [rcx + 0x63], cl ; ret 0x8d48
0xffffff800061baa2 : add byte ptr [rcx + 0x63], cl ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0xffffff8000510c99 : add byte ptr [rcx + 0x69], cl ; ret 0x3e8
0xffffff8000689c9a : add byte ptr [rcx + 0x75db85c3], cl ; ret
0xffffff8000892f46 : add byte ptr [rcx + 0x78], bh ; call 0xffffff800080f1a8
0xffffff8000630586 : add byte ptr [rcx + 0x9087], cl ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007a56c3 : add byte ptr [rcx + 0xc083], cl ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80006d7f32 : add byte ptr [rcx + 0xd800ff], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80008a0082 : add byte ptr [rcx + 0xe6], al ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff8000410f96 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0xffffff80005d13ec : add byte ptr [rcx + 0xf], al ; mov dh, 0x4f ; adc byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff800069fd69 : add byte ptr [rcx + 0xf], al ; mov dh, 0x9f ; ret
0xffffff80008d25af : add byte ptr [rcx + 0xf], al ; mov esi, 0xff49014a ; ret 0x8949
0xffffff80008d23af : add byte ptr [rcx + 0xf], al ; mov esi, 0xff49014b ; ret
0xffffff80003d1240 : add byte ptr [rcx + 0xf], al ; ret
0xffffff8000866d04 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0xffffff8000866d19 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x394c
0xffffff80004c1ca9 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xd789
0xffffff80008032eb : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf74
0xffffff8000494962 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc3ff
0xffffff80002af94b : add byte ptr [rcx + 0xfdaf7ca], cl ; rol qword ptr [rcx], 1 ; ret 0x1589
0xffffff80002af7a2 : add byte ptr [rcx + 0xfdaf7ca], cl ; rol qword ptr [rcx], 1 ; ret 0x58b
0xffffff80004f21db : add byte ptr [rcx + 1], cl ; ret
0xffffff800080cd5c : add byte ptr [rcx + 1], cl ; ret 0x8d4c
0xffffff800076cf55 : add byte ptr [rcx + 3], cl ; pop rdi ; and al, ch ; loope 0xffffff800076cfbf ; ret 0x48ff
0xffffff80003b07ac : add byte ptr [rcx + 9], al ; ret
0xffffff800072d937 : add byte ptr [rcx + 9], cl ; xor byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff800065337e : add byte ptr [rcx + r9*4 - 9], r9b ; mov rsi, r15 ; call qword ptr [rax]
0xffffff8000653600 : add byte ptr [rcx + r9*4 - 9], r9b ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800049a31e : add byte ptr [rcx + rax - 0x12], cl ; jmp rsi
0xffffff800080807c : add byte ptr [rcx + rax - 0x16], cl ; lea rcx, [rbp - 0x3c] ; jmp rdx
0xffffff8000375209 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0xffffff800036fbaf : add byte ptr [rcx + rax - 1], 0x89 ; rol ecx, cl ; ret
0xffffff800028af7d : add byte ptr [rcx + rax - 6], dh ; mov rdi, r15 ; call 0xffffff8000397209
0xffffff80003b61f1 : add byte ptr [rcx + rax - 6], dh ; pop rbp ; ret
0xffffff80002fc1e7 : add byte ptr [rcx + rax*4], al ; jrcxz 0xffffff80002fc1f4 ; inc dword ptr [rdi] ; add byte ptr [rcx], cl ; ret
0xffffff8000716f6f : add byte ptr [rcx + rax], bh ; clc ; pop rbp ; ret
0xffffff800039f11c : add byte ptr [rcx + rbp - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800084e1e3 : add byte ptr [rcx + rcx - 1], dh ; rol dword ptr [rcx + rdi - 0x27], 0x72 ; ret
0xffffff80002adf8d : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret
0xffffff80003b12ee : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x7504
0xffffff80004a7cf6 : add byte ptr [rcx + rcx*4 + 0x35], cl ; ret 0x62ec
0xffffff80003af42d : add byte ptr [rcx + rcx*4 + 0x6d], al ; rol byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x144
0xffffff80002f78e3 : add byte ptr [rcx + rcx*4 + 0x70], cl ; and byte ptr [rax - 0x77], cl ; ret
0xffffff80004a6998 : add byte ptr [rcx + rcx*4 + 0x73], al ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000566cba : add byte ptr [rcx + rcx*4 + 0x73], cl ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80008c3bc7 : add byte ptr [rcx + rcx*4 + 0x73], cl ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800041e991 : add byte ptr [rcx + rcx*4 + 0x73], cl ; pop rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000273948 : add byte ptr [rcx + rcx*4 + 0x7b], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80007ae653 : add byte ptr [rcx + rcx*4 + 2], al ; pop rbp ; ret
0xffffff80008eddc8 : add byte ptr [rcx + rcx*4 + 5], cl ; mov eax, 0x5d00249a ; ret
0xffffff80007ae6b8 : add byte ptr [rcx + rcx*4 + 6], al ; pop rbp ; ret
0xffffff800028429e : add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000291dfd : add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000421e92 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff800010e146
0xffffff8000566233 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80003924d6
0xffffff8000764585 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff8000392a47
0xffffff80007b878f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80007b4a66
0xffffff80007c897b : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80007c4bb6
0xffffff8000878772 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80008749e6
0xffffff800087a4c9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax + 0x28]
0xffffff80008deb97 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call r15
0xffffff80004eb924 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0xffffff80008214d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0xffffff80007c7dc2 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rcx
0xffffff80006359aa : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov edx, r14d ; call rax
0xffffff800081274e : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, rax ; call r14
0xffffff800087e545 : add byte ptr [rcx + rcx*4 - 0x12], al ; call rax
0xffffff80006a588c : add byte ptr [rcx + rcx*4 - 0x12], cl ; call 0xffffff80002d4ef7
0xffffff800029ddf4 : add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0xffffff8000651eb2 : add byte ptr [rcx + rcx*4 - 0x16], cl ; call 0xffffff800028e1b6
0xffffff80007aafef : add byte ptr [rcx + rcx*4 - 0x19], al ; call rcx
0xffffff80004e3a65 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff800010e147
0xffffff8000772264 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000392a47
0xffffff80007649ae : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000393047
0xffffff8000348c1f : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000394ef6
0xffffff800078af9a : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000397206
0xffffff800066879b : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80007b4a66
0xffffff80007689a7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80007c4bb6
0xffffff80005293c2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0xffffff8000420b57 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov esi, r14d ; call 0xffffff80004ccdd9
0xffffff800090a2f7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov esi, r15d ; call rcx
0xffffff80004e463d : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff80007cad04 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rdx, rbx ; call rax
0xffffff80007cadf9 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, r15 ; call rax
0xffffff80008876d9 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, rax ; call rbx
0xffffff800066879a : add byte ptr [rcx + rcx*4 - 0x19], r9b ; call 0xffffff80007b4a67
0xffffff8000668799 : add byte ptr [rcx + rcx*4 - 0x19], r9b ; call 0xffffff80007b4a68
0xffffff8000508c42 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call 0xffffff80002d4ef6
0xffffff80006a696f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call 0xffffff80002d4ef7
0xffffff80006bd828 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0xffffff8000558b52 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdx, qword ptr [rbp - 0x30] ; call r14
0xffffff8000529d17 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000558c31 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdx, r14 ; call rbx
0xffffff8000829e58 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rcx, r13 ; call r15
0xffffff8000311eaa : add byte ptr [rcx + rcx*4 - 0x35], al ; call 0xffffff800028e156
0xffffff8000381ed5 : add byte ptr [rcx + rcx*4 - 0x35], cl ; call 0xffffff800028e156
0xffffff8000845efb : add byte ptr [rcx + rcx*4 - 0x36], cl ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff80008bab24 : add byte ptr [rcx + rcx*4 - 0x39], cl ; call qword ptr [rax + 0x28]
0xffffff800075e13e : add byte ptr [rcx + rcx*4 - 0x39], cl ; pop rbp ; jmp 0xffffff800077a427
0xffffff80003a03e6 : add byte ptr [rcx + rcx*4 - 0x3d], cl ; call rax
0xffffff80008ec35f : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xffffff80008ec395
0xffffff800051b378 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0xffffff800051ee01 : add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff800051e4bd : add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret
0xffffff8000523276 : add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret 0x1d8
0xffffff8000522f1e : add byte ptr [rcx + rcx*4 - 0x54], cl ; ret
0xffffff800051dfac : add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0xffffff80003a838a : add byte ptr [rcx + rcx*4 - 0xa], al ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80006a65c6 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call 0xffffff80002d4ef7
0xffffff80008f5f52 : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rcx, r13 ; call rax
0xffffff80008a9a5f : add byte ptr [rcx + rcx*4 - 0xa], cl ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80003cd23b : add byte ptr [rcx + rcx*4 - 0xe], cl ; call 0xffffff80004494a6
0xffffff8000748c3b : add byte ptr [rcx + rcx*4 - 0xe], cl ; call qword ptr [rbx]
0xffffff8000591ecb : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff800010e146
0xffffff80004e3121 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff800010e147
0xffffff80002961b5 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e6
0xffffff80007640df : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e7
0xffffff80007a6627 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003928a6
0xffffff800076308d : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000392a47
0xffffff800076d3c2 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000393047
0xffffff8000773d73 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000397207
0xffffff800056895d : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80007c4bb6
0xffffff80005e94f3 : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0xffffff80008ee327 : add byte ptr [rcx + rcx*4 - 1], cl ; mov esi, r14d ; call rcx
0xffffff800053455b : add byte ptr [rcx + rcx*4 - 1], cl ; mov r9, r13 ; call rax
0xffffff80007c474f : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r12 ; call rax
0xffffff80007c6457 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r13 ; call rax
0xffffff80008f6299 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r14 ; call r8
0xffffff80008f61b5 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, r14 ; call rax
0xffffff8000516682 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, rbx ; call rax
0xffffff80002c8fa4 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r12 ; call r14
0xffffff80007ccfa6 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r12 ; call rax
0xffffff80008eec57 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r14 ; call rcx
0xffffff800085a708 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, rax ; call r12
0xffffff80005ca476 : add byte ptr [rcx + rcx*4 - 5], cl ; jmp rcx
0xffffff800079ca05 : add byte ptr [rcx + rcx*4 - 6], 0x29 ; ret 0x8d48
0xffffff8000799a15 : add byte ptr [rcx + rcx*4 - 9], al ; call rcx
0xffffff80007c1e7a : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff800010e146
0xffffff80008cb625 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000297876
0xffffff80002960e3 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e6
0xffffff8000766abb : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e7
0xffffff800055620a : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003924d6
0xffffff8000767d41 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003928a7
0xffffff8000762d32 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000392a47
0xffffff8000767467 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393047
0xffffff8000277216 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393486
0xffffff80005d926b : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80005e5496
0xffffff80006bbec1 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80007b8126
0xffffff80008788e3 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000874b96
0xffffff80004e4df7 : add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff800038fa73 : add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0xffffff800067a04c : add byte ptr [rcx + rcx*4 - 9], cl ; mov ecx, ebx ; call 0xffffff8000666268
0xffffff80005193af : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r13 ; call rax
0xffffff80007c66b3 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0xffffff80007c9dfa : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, rbx ; call rcx
0xffffff800065337f : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call qword ptr [rax]
0xffffff80008f73ce : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff800081e148 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rax ; call r12
0xffffff8000653601 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rbx ; call qword ptr [rax]
0xffffff80007d16c0 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rbx ; call r12
0xffffff80008b9622 : add byte ptr [rcx + rcx*8 - 0x3dbaf0b8], al ; jmp 0xffffff80008b9693
0xffffff80007a8df7 : add byte ptr [rcx + rcx*8 - 0x42], dh ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xffffff80007a8dcc
0xffffff80002647b3 : add byte ptr [rcx + rcx*8 - 0xb7f68c], al ; ret
0xffffff800084ecd2 : add byte ptr [rcx + rcx*8 - 0xb7f68c], al ; ret 0x8348
0xffffff80002b6276 : add byte ptr [rcx + rdi + 0x25], cl ; ret 0x8373
0xffffff800034a9af : add byte ptr [rcx + rdi + 0x71], cl ; and byte ptr [rbp + rdx - 1], dh ; ret 0xfa81
0xffffff800061a9bf : add byte ptr [rcx + rdi - 0x3e], al ; jl 0xffffff800061a9d0 ; xor eax, eax ; pop rbp ; ret
0xffffff80005ba047 : add byte ptr [rcx - 0x162dce22], cl ; ret 0
0xffffff80007515e1 : add byte ptr [rcx - 0x16f43], al ; call qword ptr [rax]
0xffffff80005c96a5 : add byte ptr [rcx - 0x1d37b], cl ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80008abd2c : add byte ptr [rcx - 0x1e00a23a], cl ; pop rbp ; ret
0xffffff8000892893 : add byte ptr [rcx - 0x1e00a23e], cl ; xor eax, eax ; pop rbp ; ret
0xffffff800050b435 : add byte ptr [rcx - 0x23773], cl ; push rsi ; ret 0x7502
0xffffff8000393521 : add byte ptr [rcx - 0x27ddf008], cl ; pop rbp ; ret
0xffffff8000255709 : add byte ptr [rcx - 0x2d], al ; out 0x89, eax ; ret 0x40b9
0xffffff800060de71 : add byte ptr [rcx - 0x35b43], al ; jmp rax
0xffffff800079ab44 : add byte ptr [rcx - 0x38b733a3], cl ; ret
0xffffff80004873ef : add byte ptr [rcx - 0x3a], al ; add al, 0x12 ; add byte ptr [rax - 1], cl ; ret 0xc9ff
0xffffff800051b982 : add byte ptr [rcx - 0x3a], al ; add al, 0x24 ; add al, ch ; ret
0xffffff80003acb35 : add byte ptr [rcx - 0x3b7cb721], cl ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0xffffff8000749f96 : add byte ptr [rcx - 0x3b7cb728], cl ; cmp byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002a7bf0 : add byte ptr [rcx - 0x3b7cb728], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000684300 : add byte ptr [rcx - 0x3b7cb728], cl ; pop rbx ; pop rbp ; ret
0xffffff80002c9c89 : add byte ptr [rcx - 0x3b7cb728], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002b5b4f : add byte ptr [rcx - 0x3b7cb738], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002f7ba8 : add byte ptr [rcx - 0x3b7cb7f5], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800062e742 : add byte ptr [rcx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000388ca0 : add byte ptr [rcx - 0x3d48f006], cl ; pop rbx ; pop rbp ; ret
0xffffff80007fef97 : add byte ptr [rcx - 0x3fce7ecc], cl ; pop rbp ; ret
0xffffff80003b7dbe : add byte ptr [rcx - 0x3fce8bb9], cl ; pop rbp ; ret
0xffffff80004b3d5a : add byte ptr [rcx - 0x3fcebba9], cl ; pop rbp ; ret
0xffffff8000526e78 : add byte ptr [rcx - 0x3fcecfba], cl ; pop rbp ; ret
0xffffff800068456b : add byte ptr [rcx - 0x3fcee7b1], cl ; pop rbp ; ret
0xffffff8000876012 : add byte ptr [rcx - 0x41], al ; ret 2
0xffffff80007ef761 : add byte ptr [rcx - 0x41], al ; sub eax, 0xf6000000 ; ret
0xffffff8000b46571 : add byte ptr [rcx - 0x41], cl ; sysenter
0xffffff8000855b64 : add byte ptr [rcx - 0x42], al ; ret
0xffffff80008b8229 : add byte ptr [rcx - 0x42], al ; ret 2
0xffffff80004185a7 : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff8000880179 : add byte ptr [rcx - 0x43], al ; ret 2
0xffffff800087fe25 : add byte ptr [rcx - 0x44], al ; ret 2
0xffffff80003074f6 : add byte ptr [rcx - 0x48], al ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003b014e : add byte ptr [rcx - 0x49f06fab], cl ; ret 0x4589
0xffffff80003dafc3 : add byte ptr [rcx - 0x4f], al ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003dc3e8 : add byte ptr [rcx - 0x4f], al ; add dword ptr [rcx - 0x77], eax ; ret 0x24eb
0xffffff80003e2a40 : add byte ptr [rcx - 0x50], al ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003e46ef : add byte ptr [rcx - 0x50], al ; add dword ptr [rcx - 0x77], eax ; ret 0x75e9
0xffffff8000852744 : add byte ptr [rcx - 0x73], al ; call rbx
0xffffff8000287fdf : add byte ptr [rcx - 0x73], cl ; push rsi ; sbb byte ptr [rax + 0x39], cl ; ret 0x974
0xffffff80003efdd0 : add byte ptr [rcx - 0x75], 0x1c ; and al, 0xf6 ; ret
0xffffff8000649fff : add byte ptr [rcx - 0x75], al ; and al, 0x89 ; ret 0xe283
0xffffff80005f4051 : add byte ptr [rcx - 0x75], al ; and byte ptr [r8 - 1], r9b ; ret
0xffffff800030453a : add byte ptr [rcx - 0x75], al ; cmp al, 0xb9 ; push rbx ; std ; jmp qword ptr [rcx]
0xffffff8000452d36 : add byte ptr [rcx - 0x75], al ; pop rsi ; or bh, bh ; ret
0xffffff800031642e : add byte ptr [rcx - 0x75], al ; push rbp ; xor al, 0xf7 ; ret 0
0xffffff80007bd479 : add byte ptr [rcx - 0x75], al ; sbb byte ptr [rcx], r15b ; ret
0xffffff8000278948 : add byte ptr [rcx - 0x75], al ; xchg dword ptr [rax - 0x16fffffe], eax ; ret
0xffffff80003bf39b : add byte ptr [rcx - 0x75], al ; xchg dword ptr [rax - 0x77000000], ecx ; ret 0xe281
0xffffff800062e9d9 : add byte ptr [rcx - 0x75], al ; xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff80007fefcb : add byte ptr [rcx - 0x75], cl ; add al, 0 ; pop rbp ; jmp rax
0xffffff80008c10fa : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0xc74
0xffffff800048c69f : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0xffffff80007ff10b : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x5d], r8b ; jmp rax
0xffffff80007ff00b : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax], r9b ; pop rbp ; jmp rax
0xffffff80007ff0cb : add byte ptr [rcx - 0x75], cl ; add dword ptr [rax], r12d ; pop rbp ; jmp rax
0xffffff800032e932 : add byte ptr [rcx - 0x75], cl ; and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0xffffff800089426a : add byte ptr [rcx - 0x75], cl ; jge 0xffffff8000894290 ; mov rsi, r13 ; call r15
0xffffff800042113e : add byte ptr [rcx - 0x75], cl ; jl 0xffffff8000421170 ; sub byte ptr [rcx + rcx*4 - 0x32], cl ; call rcx
0xffffff8000492aeb : add byte ptr [rcx - 0x75], cl ; jo 0xffffff8000492a85 ; pop rax ; and al, 0x83 ; ret
0xffffff80002c587d : add byte ptr [rcx - 0x75], cl ; pop rsi ; xor byte ptr [rax + 0x29], cl ; ret
0xffffff800054020f : add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret 0x481c
0xffffff8000595b98 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x77], r9b ; ret
0xffffff80007ff75e : add byte ptr [rcx - 0x75], cl ; xchg byte ptr [rax + 0x29000000], cl ; ret
0xffffff80005d066b : add byte ptr [rcx - 0x76], al ; adc dword ptr [rax - 1], r9d ; ret
0xffffff800044343d : add byte ptr [rcx - 0x76], al ; lahf ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; ret 2
0xffffff80004b906f : add byte ptr [rcx - 0x76], al ; pop rbx ; add dword ptr [rcx - 1], ecx ; ret
0xffffff800035a0d0 : add byte ptr [rcx - 0x76], al ; push rdx ; cmp dh, dh ; ret 0xf02
0xffffff8000252e95 : add byte ptr [rcx - 0x76b41ffb], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff80002a122b : add byte ptr [rcx - 0x76be0609], bl ; ret 0x7eb
0xffffff800040794b : add byte ptr [rcx - 0x76fb8a27], cl ; ret
0xffffff8000525e5e : add byte ptr [rcx - 0x77], al ; adc byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80005f0836 : add byte ptr [rcx - 0x77], al ; add al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff8000583822 : add byte ptr [rcx - 0x77], al ; and byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80006043ef : add byte ptr [rcx - 0x77], al ; fmul dword ptr [rax - 0x77] ; ret
0xffffff8000603863 : add byte ptr [rcx - 0x77], al ; push rsi ; xor al, 0xe9 ; ret
0xffffff800031307c : add byte ptr [rcx - 0x77], al ; ret
0xffffff800061ea5e : add byte ptr [rcx - 0x77], al ; ret 0x3145
0xffffff800042cc98 : add byte ptr [rcx - 0x77], al ; ret 0x4ceb
0xffffff8000b4a07f : add byte ptr [rcx - 0x77], al ; ret 0x8141
0xffffff80003dc3b0 : add byte ptr [rcx - 0x77], al ; ret 0x8545
0xffffff8000644754 : add byte ptr [rcx - 0x77], al ; ret 0x894c
0xffffff80005744d4 : add byte ptr [rcx - 0x77], al ; ret 0x8b49
0xffffff800025a5ce : add byte ptr [rcx - 0x77], cl ; and byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80003ced2c : add byte ptr [rcx - 0x77], cl ; fadd dword ptr [rcx - 0x77] ; ret
0xffffff800041afcc : add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80006ad96c : add byte ptr [rcx - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret
0xffffff80005f1f9c : add byte ptr [rcx - 0x77], cl ; fimul word ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000638273 : add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret
0xffffff80005f9c76 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rax - 0x77] ; ret
0xffffff80004ea1c3 : add byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x77] ; ret
0xffffff80008946e5 : add byte ptr [rcx - 0x77], cl ; pop rsi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088e8ad : add byte ptr [rcx - 0x77], cl ; pop rsi ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003b1d03 : add byte ptr [rcx - 0x77], cl ; ret
0xffffff80008d256b : add byte ptr [rcx - 0x77], cl ; ret 0x19eb
0xffffff80003cb0f4 : add byte ptr [rcx - 0x77], cl ; ret 0x2944
0xffffff800084b110 : add byte ptr [rcx - 0x77], cl ; ret 0x37e9
0xffffff80008d2539 : add byte ptr [rcx - 0x77], cl ; ret 0x4beb
0xffffff8000b490a9 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0xffffff800058d9bc : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0xffffff800058dad8 : add byte ptr [rcx - 0x77], cl ; ret 0x858b
0xffffff8000366ccf : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0xffffff80003129b7 : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0xffffff8000464f99 : add byte ptr [rcx - 0x77], cl ; ret 0x8b49
0xffffff80002ffaef : add byte ptr [rcx - 0x77], cl ; ret 0xc148
0xffffff800058db40 : add byte ptr [rcx - 0x77], cl ; ret 0xc931
0xffffff80006a197d : add byte ptr [rcx - 0x77], cl ; rol byte ptr [rbp - 0x7b], 1 ; ror byte ptr [rdi], 0x95 ; ret
0xffffff80002638d9 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xee75
0xffffff80006e12b7 : add byte ptr [rcx - 0x77], cl ; xlatb ; call 0xffffff800030de47
0xffffff80003afbe1 : add byte ptr [rcx - 0x77bb2fb3], cl ; ret
0xffffff8000275a9a : add byte ptr [rcx - 0x7cb707a8], cl ; ret 0x4104
0xffffff80003c57ef : add byte ptr [rcx - 0x7cb7df8e], cl ; ret 0xff28
0xffffff80003b0c1b : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff8000512b91 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rbx]
0xffffff800027dae5 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rcx]
0xffffff800026f411 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rdx]
0xffffff80007f104b : add byte ptr [rcx - 0x7d], al ; call qword ptr [rsi]
0xffffff8000415821 : add byte ptr [rcx - 0x7d], al ; cmp al, 0x24 ; add al, 0xf ; xchg eax, edx ; ret 0xbe41
0xffffff80007a99b3 : add byte ptr [rcx - 0x7d], al ; dec dword ptr [rip - 0x76b7e68b] ; ret 0x8348
0xffffff80003b0d07 : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0xffffff80007c7bfa : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rbx]
0xffffff800061f32f : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rdi]
0xffffff80006c942e : add byte ptr [rcx - 0x7d], al ; ret
0xffffff8000843ebf : add byte ptr [rcx - 0x7d], al ; ret 0x4503
0xffffff8000843d2b : add byte ptr [rcx - 0x7d], al ; ret 0x4505
0xffffff80004aaa68 : add byte ptr [rcx - 0x7d], al ; ret 0x45fc
0xffffff8000262da2 : add byte ptr [rcx - 0x7d], al ; ret 0x4f1c
0xffffff8000843eac : add byte ptr [rcx - 0x7d], al ; ret 0x89f3
0xffffff8000843c71 : add byte ptr [rcx - 0x7d], al ; ret 0xe9f3
0xffffff8000843bfe : add byte ptr [rcx - 0x7d], al ; ret 0xebf3
0xffffff8000843e13 : add byte ptr [rcx - 0x7d], al ; ret 0xebf4
0xffffff8000843cff : add byte ptr [rcx - 0x7d], al ; ret 0xebf5
0xffffff80004571bf : add byte ptr [rcx - 0x7d], al ; std ; add cl, byte ptr [rdi] ; ret 0x19eb
0xffffff8000864ce2 : add byte ptr [rcx - 0x7d], al ; std ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xca84
0xffffff8000652db4 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0xffffff80006d803f : add byte ptr [rcx - 0x7d], cl ; ret
0xffffff800038b87b : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0xffffff800038b856 : add byte ptr [rcx - 0x7d], cl ; ret 0x8304
0xffffff800038b86c : add byte ptr [rcx - 0x7d], cl ; ret 0xa902
0xffffff80006d215e : add byte ptr [rcx - 0x7d], cl ; ret 0xba20
0xffffff80003adc8d : add byte ptr [rcx - 0x7d], cl ; ret 0xbe08
0xffffff800038e2b9 : add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0xffffff800062434e : add byte ptr [rcx - 0x7f], al ; call qword ptr [rdi]
0xffffff80006ccc2e : add byte ptr [rcx - 0x7f], al ; jmp qword ptr [rcx]
0xffffff800027bdb9 : add byte ptr [rcx - 0x7f], al ; out 0xff, al ; jmp rax
0xffffff800056333b : add byte ptr [rcx - 0x7f], al ; out 0xff, eax ; jmp rcx
0xffffff80003c895c : add byte ptr [rcx - 0x7f], cl ; ret
0xffffff80003c8955 : add byte ptr [rcx - 0x7f], cl ; ret 0x110
0xffffff80007b03ee : add byte ptr [rcx - 0x7feb740], cl ; pop rbp ; ret
0xffffff80006a5b02 : add byte ptr [rcx - 0x9763], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000349c5d : add byte ptr [rcx - 0xa], al ; or byte ptr ds:[rdi], 0x85 ; ret
0xffffff800083fe1a : add byte ptr [rcx - 0xa], al ; ret 0xb820
0xffffff80004202a6 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0xffffff800054afb3 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0xffffff800084cdb9 : add byte ptr [rcx - 0xa], al ; ret 0xf38
0xffffff800083fe29 : add byte ptr [rcx - 0xa], al ; ret 0xf40
0xffffff80003b50bf : add byte ptr [rcx - 0xb765c4], cl ; ret
0xffffff80005480cb : add byte ptr [rcx - 0xf423f3e], al ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80003b2395 : add byte ptr [rcx - 0xffff02], al ; add byte ptr [rdi], cl ; ret 0xf41
0xffffff80004aaf0f : add byte ptr [rcx - 1], al ; ret
0xffffff80002d6afe : add byte ptr [rcx - 1], al ; ret 0x8341
0xffffff80008ffd1f : add byte ptr [rcx - 1], al ; vpinsrw xmm9, xmm8, word ptr [r15], 0x87 ; ret 0
0xffffff800059e99f : add byte ptr [rcx - 1], cl ; ret
0xffffff800083a194 : add byte ptr [rcx - 1], cl ; ret 0x3145
0xffffff800084b2cf : add byte ptr [rcx - 1], cl ; ret 0x394d
0xffffff800038b989 : add byte ptr [rcx - 1], cl ; ret 0x8966
0xffffff800076f04f : add byte ptr [rcx - 1], cl ; ret 0xf41
0xffffff80002c863a : add byte ptr [rcx - 1], cl ; sbb byte ptr [rbx + r15 + 0x2d], cl ; ret 0x7f66
0xffffff800061e34b : add byte ptr [rcx - 9], al ; ret 0
0xffffff800084ff00 : add byte ptr [rcx - 9], al ; ret 0xffff
0xffffff800072db86 : add byte ptr [rcx], 0 ; add byte ptr [rax + 0x5d02324f], al ; ret
0xffffff8000b3ae0a : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008cfde5 : add byte ptr [rcx], 0 ; add byte ptr [rbp - 0x47e18b40], al ; ret 2
0xffffff80005788d4 : add byte ptr [rcx], 0 ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff80004c4a52 : add byte ptr [rcx], 0 ; add byte ptr [rsi - 9], ah ; ret
0xffffff800076334c : add byte ptr [rcx], ah ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80004b3b7f : add byte ptr [rcx], ah ; ja 0xffffff80004b3bc0 ; pop rbp ; ret
0xffffff80004575c6 : add byte ptr [rcx], ah ; ret 0x1589
0xffffff8000898308 : add byte ptr [rcx], ah ; ret 0x8941
0xffffff80005219a5 : add byte ptr [rcx], ah ; ret 0xf44
0xffffff80003679b4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0x21
0xffffff80008ec7d1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, ch ; ret 0xfdfb
0xffffff8000459fb5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80008ce34d : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0xe95d
0xffffff800056f869 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800050f40e : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff80003ba607 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800025db1a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff80004f21d7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0xffffff80003cc978 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0xffffff80003cc9cd
0xffffff80003a6e85 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0xffffff80003a6e47 ; pop rbp ; ret
0xffffff80006c59d0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0xffffff80006c59a7 ; pop rbp ; ret
0xffffff80007ae650 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rdx], r8d ; pop rbp ; ret
0xffffff80007ae6b5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], r8d ; pop rbp ; ret
0xffffff800031ebe5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004191f7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff8000419225
0xffffff800041b0bd : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff800041b0eb
0xffffff800072be51 : add byte ptr [rcx], al ; add byte ptr [rbp + 0x39], al ; ret
0xffffff80003ae12b : add byte ptr [rcx], al ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80006d6739 : add byte ptr [rcx], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004f9136 : add byte ptr [rcx], al ; add byte ptr [rbx], ah ; jo 0xffffff80004f91a1 ; ret
0xffffff80004267bc : add byte ptr [rcx], al ; add byte ptr [rcx], bh ; ret
0xffffff80007f413c : add byte ptr [rcx], al ; add byte ptr [rcx], cl ; fdiv st(7) ; ret 0
0xffffff80004bce34 : add byte ptr [rcx], al ; add byte ptr [rcx], cl ; ret 0xca09
0xffffff80004be2d7 : add byte ptr [rcx], al ; add byte ptr [rcx], cl ; ret 0xd609
0xffffff800039d6d5 : add byte ptr [rcx], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007c77a7 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; pushfq ; ret 0x550a
0xffffff80004633c1 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; ret
0xffffff800061da64 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80004c87c8 : add byte ptr [rcx], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80004a3673 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000797372 : add byte ptr [rcx], al ; cmp byte ptr [rax], al ; jne 0xffffff8000797383 ; mov eax, ecx ; pop rbp ; ret
0xffffff80005f4e01 : add byte ptr [rcx], al ; cmp byte ptr [rax], al ; pop rbp ; ret
0xffffff80006326b9 : add byte ptr [rcx], al ; cmp eax, 0x4f231c ; pop rbp ; ret
0xffffff8000632699 : add byte ptr [rcx], al ; cmp eax, 0x4f232c ; pop rbp ; ret
0xffffff8000632679 : add byte ptr [rcx], al ; cmp eax, 0x4f2354 ; pop rbp ; ret
0xffffff8000632659 : add byte ptr [rcx], al ; cmp eax, 0x4f2364 ; pop rbp ; ret
0xffffff800062b979 : add byte ptr [rcx], al ; cmp eax, 0x4f8394 ; pop rbp ; ret
0xffffff800062b959 : add byte ptr [rcx], al ; cmp eax, 0x4f83a4 ; pop rbp ; ret
0xffffff800062b939 : add byte ptr [rcx], al ; cmp eax, 0x4f83cc ; pop rbp ; ret
0xffffff800062b919 : add byte ptr [rcx], al ; cmp eax, 0x4f83dc ; pop rbp ; ret
0xffffff80003925ea : add byte ptr [rcx], al ; je 0xffffff80003925d6 ; xor eax, eax ; ret
0xffffff800057401d : add byte ptr [rcx], al ; je 0xffffff800057402a ; xor eax, eax ; pop rbp ; ret
0xffffff80003c5d13 : add byte ptr [rcx], al ; jne 0xffffff80003c5d4b ; pop rbp ; ret
0xffffff8000423149 : add byte ptr [rcx], al ; jne 0xffffff800042315a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000265dfc : add byte ptr [rcx], al ; mov eax, 1 ; pop rbp ; ret
0xffffff80003c8312 : add byte ptr [rcx], al ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076e9d3 : add byte ptr [rcx], al ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff80002a952e : add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80005d6b13 : add byte ptr [rcx], al ; ret
0xffffff80007a77ac : add byte ptr [rcx], al ; ret 0x10b9
0xffffff8000272ffd : add byte ptr [rcx], al ; ret 0x3145
0xffffff8000726d76 : add byte ptr [rcx], al ; ret 0x3944
0xffffff80008cd0df : add byte ptr [rcx], al ; ret 0x6348
0xffffff80006d693f : add byte ptr [rcx], al ; ret 0xc189
0xffffff8000b4127a : add byte ptr [rcx], al ; ret 0xc283
0xffffff80005070d5 : add byte ptr [rcx], al ; ret 0xe0c1
0xffffff800061239e : add byte ptr [rcx], al ; sbb eax, eax ; pop rbp ; ret
0xffffff800070a81a : add byte ptr [rcx], al ; xor eax, eax ; pop rbp ; ret
0xffffff80007dc870 : add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a2d9b : add byte ptr [rcx], bh ; clc ; jne 0xffffff80003a2dac ; xor eax, eax ; pop rbp ; ret
0xffffff800075f5ff : add byte ptr [rcx], bh ; enter 0x187e, -0x77 ; ret
0xffffff800028258f : add byte ptr [rcx], bh ; enter 0xe73, -0x77 ; ret 0xc0ff
0xffffff800027af9d : add byte ptr [rcx], bh ; ret
0xffffff80003b3799 : add byte ptr [rcx], bh ; ret 0x1176
0xffffff80006077b8 : add byte ptr [rcx], bh ; ret 0x177f
0xffffff80006ab890 : add byte ptr [rcx], bh ; ret 0x1b75
0xffffff800061eb19 : add byte ptr [rcx], bh ; ret 0x1f7d
0xffffff800060664c : add byte ptr [rcx], bh ; ret 0x1f7f
0xffffff800036e7e1 : add byte ptr [rcx], bh ; ret 0x2376
0xffffff800053aa37 : add byte ptr [rcx], bh ; ret 0x247f
0xffffff80006af164 : add byte ptr [rcx], bh ; ret 0x2775
0xffffff8000622768 : add byte ptr [rcx], bh ; ret 0x2779
0xffffff80007a6537 : add byte ptr [rcx], bh ; ret 0x3175
0xffffff800044c81c : add byte ptr [rcx], bh ; ret 0x4072
0xffffff80004bc506 : add byte ptr [rcx], bh ; ret 0x420f
0xffffff800043d053 : add byte ptr [rcx], bh ; ret 0x428d
0xffffff800044c859 : add byte ptr [rcx], bh ; ret 0x470f
0xffffff8000423c19 : add byte ptr [rcx], bh ; ret 0x4c0f
0xffffff8000257aaf : add byte ptr [rcx], bh ; ret 0x4c7d
0xffffff80005f37c1 : add byte ptr [rcx], bh ; ret 0x6376
0xffffff8000289371 : add byte ptr [rcx], bh ; ret 0x676
0xffffff80002bccbe : add byte ptr [rcx], bh ; ret 0x77f
0xffffff80006711c5 : add byte ptr [rcx], bh ; ret 0x7c75
0xffffff80003c5fd6 : add byte ptr [rcx], bh ; ret 0x840f
0xffffff80003f3441 : add byte ptr [rcx], bh ; ret 0x860f
0xffffff8000461890 : add byte ptr [rcx], bh ; ret 0x870f
0xffffff80006504f0 : add byte ptr [rcx], bh ; ret 0x890f
0xffffff80004b8ba6 : add byte ptr [rcx], bh ; ret 0x8d0f
0xffffff80005fd9bb : add byte ptr [rcx], bh ; ret 0x940f
0xffffff80008b2464 : add byte ptr [rcx], bh ; ret 0x97f
0xffffff8000757a2b : add byte ptr [rcx], bh ; ret 0xb74
0xffffff80004f691e : add byte ptr [rcx], bh ; ret 0xbb
0xffffff80004b62fc : add byte ptr [rcx], bh ; ret 0xcf7c
0xffffff800044c84e : add byte ptr [rcx], bh ; ret 0xe72
0xffffff800061b29d : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x3944
0xffffff80006240c0 : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4189
0xffffff80007d1867 : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4389
0xffffff80007cb8a5 : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4689
0xffffff800062de95 : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8189
0xffffff800061873c : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8389
0xffffff80006191b1 : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff80006306aa : add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xb78b
0xffffff80007d0d3f : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; ret 0xf41
0xffffff80006ddcfd : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, ebx ; ret 0x3944
0xffffff8000437958 : add byte ptr [rcx], bh ; sal byte ptr [rdx + 3], 1 ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80003a7fdd : add byte ptr [rcx], bh ; sal dword ptr [rbp + 2], 0x5d ; ret
0xffffff80007b706c : add byte ptr [rcx], ch ; clc ; pop rbp ; ret
0xffffff800071e1d1 : add byte ptr [rcx], ch ; enter -0x2fd7, 0xf ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80004c4cbf : add byte ptr [rcx], ch ; enter -0x3dc7, 0xf ; ret 0x6348
0xffffff80008b1734 : add byte ptr [rcx], ch ; enter -0x48f1, -0x40 ; pop rbp ; ret
0xffffff800064a1e7 : add byte ptr [rcx], ch ; enter 0x415b, 0x5e ; pop rbp ; ret
0xffffff800058c6c0 : add byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0x880f
0xffffff800053cb36 : add byte ptr [rcx], ch ; rcl bl, 1 ; loop 0xffffff800053cb43 ; ret 0xead3
0xffffff8000250680 : add byte ptr [rcx], ch ; ret
0xffffff80003f2f69 : add byte ptr [rcx], ch ; ret 0x1b9
0xffffff800062ea71 : add byte ptr [rcx], ch ; ret 0x2372
0xffffff800065f71f : add byte ptr [rcx], ch ; ret 0x7d83
0xffffff800077173f : add byte ptr [rcx], ch ; ret 0x8941
0xffffff80003cbdeb : add byte ptr [rcx], ch ; ret 0x8b48
0xffffff800036e7ef : add byte ptr [rcx], ch ; ret 0x8d4c
0xffffff800059bcd8 : add byte ptr [rcx], ch ; ret 0x9103
0xffffff8000617d72 : add byte ptr [rcx], ch ; ret 0x9389
0xffffff80003c1ca2 : add byte ptr [rcx], ch ; ret 0xaf0f
0xffffff80003f2fb8 : add byte ptr [rcx], ch ; ret 0xc748
0xffffff8000b4a06b : add byte ptr [rcx], ch ; ret 0xca01
0xffffff80004c2de0 : add byte ptr [rcx], ch ; ret 0xca39
0xffffff80003b723a : add byte ptr [rcx], ch ; ret 0xd139
0xffffff800061963e : add byte ptr [rcx], ch ; ret 0xd285
0xffffff800085820a : add byte ptr [rcx], ch ; ret 0xdf89
0xffffff800042632a : add byte ptr [rcx], ch ; ret 0xe283
0xffffff80003038ea : add byte ptr [rcx], ch ; ret 0xf883
0xffffff8000b42aa9 : add byte ptr [rcx], ch ; ret 0xfa83
0xffffff800083ea35 : add byte ptr [rcx], ch ; sar dword ptr [rcx], cl ; ret
0xffffff80008aa7c6 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80002a9ab6 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800033e4f0 : add byte ptr [rcx], cl ; enter -0x76bf, 0x40 ; or byte ptr [rax - 0x7f], cl ; ret
0xffffff80007f413e : add byte ptr [rcx], cl ; fdiv st(7) ; ret 0
0xffffff80004b3b69 : add byte ptr [rcx], cl ; ja 0xffffff80004b3baa ; pop rbp ; ret
0xffffff800028869c : add byte ptr [rcx], cl ; js 0xffffff80002886fd ; pop rbp ; ret
0xffffff80002c235e : add byte ptr [rcx], cl ; pop r8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d75b8 : add byte ptr [rcx], cl ; ret
0xffffff8000727e5f : add byte ptr [rcx], cl ; ret 0x5589
0xffffff8000514e43 : add byte ptr [rcx], cl ; ret 0x674
0xffffff8000251871 : add byte ptr [rcx], cl ; ret 0x6f74
0xffffff800033155d : add byte ptr [rcx], cl ; ret 0x8941
0xffffff80008810d7 : add byte ptr [rcx], cl ; ret 0x8966
0xffffff800031e834 : add byte ptr [rcx], cl ; ret 0xc889
0xffffff80004bce36 : add byte ptr [rcx], cl ; ret 0xca09
0xffffff80004be2d9 : add byte ptr [rcx], cl ; ret 0xd609
0xffffff80003006ea : add byte ptr [rcx], cl ; ret 0xe181
0xffffff80004bc95e : add byte ptr [rcx], cl ; ret 0xe383
0xffffff800081ed34 : add byte ptr [rcx], cl ; shl dword ptr [rsi - 0x77], 0x4f ; jo 0xffffff800081eda1 ; ret
0xffffff800088d2b4 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; leave ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff800078bea9 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff8000267157 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; call rbx
0xffffff80008a2cbd : add byte ptr [rcx], dh ; div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; pop rbp ; jmp rax
0xffffff80002d6e03 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; shr al, cl ; ret
0xffffff80004d5b59 : add byte ptr [rcx], dh ; fcomi st(6) ; ret 0xf01
0xffffff8000627a48 : add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x476
0xffffff80002a9149 : add byte ptr [rcx], dh ; fisttp dword ptr [rbp + rcx*4 + 0x35] ; ret
0xffffff800029a73e : add byte ptr [rcx], dh ; fisttp dword ptr [rbp + rcx*4 + 0x3d] ; ret
0xffffff8000567f9c : add byte ptr [rcx], dh ; fisttp dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80005fe56a : add byte ptr [rcx], dh ; fisttp dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret
0xffffff80007c36ea : add byte ptr [rcx], dh ; fucomi st(1) ; ret
0xffffff8000350896 : add byte ptr [rcx], dh ; fucomi st(1) ; ret 0
0xffffff80003534d6 : add byte ptr [rcx], dh ; fucomi st(1) ; ret 1
0xffffff80002671d0 : add byte ptr [rcx], dh ; idiv byte ptr [rdx + 0x28] ; call r15
0xffffff8000266c19 : add byte ptr [rcx], dh ; idiv byte ptr [rdx + 8] ; call r14
0xffffff800026712f : add byte ptr [rcx], dh ; idiv byte ptr [rdx + 8] ; call r15
0xffffff80005fd76e : add byte ptr [rcx], dh ; imul al ; cli ; ret
0xffffff80002e8bf9 : add byte ptr [rcx], dh ; imul al ; out dx, eax ; ret 0xfffe
0xffffff80005abf85 : add byte ptr [rcx], dh ; imul al ; ret
0xffffff8000482996 : add byte ptr [rcx], dh ; imul al ; ret 0xf15b
0xffffff8000333116 : add byte ptr [rcx], dh ; imul al ; ret 0xf707
0xffffff8000684de8 : add byte ptr [rcx], dh ; imul al ; ret 0xffec
0xffffff80006bb6a9 : add byte ptr [rcx], dh ; leave ; mov dl, al ; jmp 0xffffff80006bb6c0
0xffffff800061a840 : add byte ptr [rcx], dh ; leave ; movzx eax, cl ; pop rbp ; ret
0xffffff80003aefa2 : add byte ptr [rcx], dh ; leave ; pop rbp ; jmp rax
0xffffff80005bc88f : add byte ptr [rcx], dh ; leave ; xor r8d, r8d ; mov rdx, r15 ; call rbx
0xffffff800088d2d9 : add byte ptr [rcx], dh ; leave ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff800086af17 : add byte ptr [rcx], dh ; neg byte ptr [rbp - 1] ; loopne 0xffffff800086af82 ; ret
0xffffff80002fb3a2 : add byte ptr [rcx], dh ; push qword ptr [rcx] ; div byte ptr [rcx] ; shr al, cl ; ret 0xfaa4
0xffffff80006c5c5c : add byte ptr [rcx], dh ; push rsi ; ret 0xf01
0xffffff8000258bf0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007cbd78 : add byte ptr [rcx], dh ; ret
0xffffff800037397f : add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff800078894f : add byte ptr [rcx], dh ; rol byte ptr [rbp + 0xf0574d2], 0xbc ; ret 0xc0ff
0xffffff80002bacb7 : add byte ptr [rcx], dh ; rol byte ptr [rbx + 0x450f07e1], 0xc2 ; pop rbp ; ret
0xffffff8000546a82 : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0x17], 0xe8 ; ret
0xffffff8000656c21 : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0x1f], 0xe8 ; je 0xffffff8000656cab ; ret
0xffffff800065027c : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0x2e], 0xe8 ; sbb edx, esp ; ret
0xffffff8000388226 : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0xa], 0x41 ; call rdi
0xffffff8000567582 : add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; ret
0xffffff800066dc88 : add byte ptr [rcx], dh ; rol byte ptr [rcx - 0x77], 0xd8 ; call 0xffffff800028e4a9
0xffffff8000646d82 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff800079ad54 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; jmp qword ptr [rbx]
0xffffff800030b98c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff8000484539 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x4ee4
0xffffff800079ad09 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; xchg eax, ecx ; jmp qword ptr [rbx]
0xffffff80003dd194 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x7d ; ret
0xffffff8000669da7 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xca ; call 0xffffff800028e4a9
0xffffff8000691f5b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xda ; call 0xffffff800028e1b8
0xffffff8000662b3f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xda ; call 0xffffff800028e1b9
0xffffff8000301f25 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xde ; call 0xffffff800028e1b8
0xffffff8000662acc : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xde ; call 0xffffff800028e1b9
0xffffff8000829e76 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xde ; call r15
0xffffff80003518b7 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xdf ; call 0xffffff80008edb18
0xffffff80006b7012 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; add ebx, dword ptr [rcx] ; ret 0x48ff
0xffffff800069b4f3 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; and dl, ah ; ret
0xffffff80006cc679 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; pushfq ; ret 0xffc0
0xffffff800054bd53 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xd8cb
0xffffff8000613a39 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff8000252a82 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000252c35 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800036ca3c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80006f7209 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x4408ebc1], 0x89 ; ret 0xd285
0xffffff80003a8c39 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x5d300ff0], cl ; ret
0xffffff8000820b52 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0xffffff800078dfe2 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x16], 0xe8 ; ret
0xffffff80006636f6 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x16], 0xe8 ; scasd eax, dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0x41ff
0xffffff8000829e87 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], 0x41 ; call rdi
0xffffff800065afc1 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], 0xe8 ; in al, 0x31 ; ret
0xffffff800065ec7b : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], 0xe8 ; sub dh, ch ; ret 0x31ff
0xffffff800066b09a : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; or esi, dword ptr [rcx] ; ret 0x48ff
0xffffff800066a367 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; ret 0x48ff
0xffffff800065ecfb : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; stosb byte ptr [rdi], al ; hlt ; ret 0x41ff
0xffffff8000301f0c : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; cdq ; ret 0xfff8
0xffffff8000691e4c : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; pop rcx ; ret
0xffffff80006a249d : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xa], cl ; call 0xffffff80002c36c9
0xffffff80005548fc : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xa], cl ; call r12
0xffffff8000783ee3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xb0a2
0xffffff80007e1f64 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xffaa
0xffffff8000781f5c : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xffb0
0xffffff800025c6bf : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80002d8928
0xffffff800065ab6a : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 2], 0xe8 ; cmp esi, dword ptr [rsi] ; ret
0xffffff800065f1c7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 2], 0xe8 ; fsubp st(7) ; ret 0x31ff
0xffffff800065f23b : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; push -0x11 ; ret 0x41ff
0xffffff80006aaee3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; ret 0xbe32
0xffffff800065b5d3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; shr byte ptr [rbx], cl ; ret
0xffffff80006b0ee4 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80002d8929
0xffffff80003a7241 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0xd76bb22], 0xe8 ; ret 0x5468
0xffffff8000382e0b : add byte ptr [rcx], dh ; sal al, 0xf ; mov cl, 0xd ; ret 0x77ae
0xffffff80003a8bb5 : add byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; wrmsr ; pop rbp ; ret
0xffffff800033967c : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; leave ; call 0xffffff80003858e7
0xffffff800065f598 : add byte ptr [rcx], dh ; shr al, 0x10 ; in al, dx ; ret 0x48ff
0xffffff8000655188 : add byte ptr [rcx], dh ; shr al, 0x10 ; xchg eax, ebx ; ret
0xffffff8000653496 : add byte ptr [rcx], dh ; shr al, 0x12 ; lodsd eax, dword ptr [rsi] ; ret
0xffffff80006e2636 : add byte ptr [rcx], dh ; shr al, 0x12 ; ret 0xffbb
0xffffff800081c606 : add byte ptr [rcx], dh ; shr al, 0x12 ; ret 0xffff
0xffffff8000657a94 : add byte ptr [rcx], dh ; shr al, 0x14 ; ret
0xffffff8000653790 : add byte ptr [rcx], dh ; shr al, 0x18 ; stosb byte ptr [rdi], al ; ret
0xffffff800065fd2e : add byte ptr [rcx], dh ; shr al, 0x1a ; jmp 0xffffff800065fcfe
0xffffff8000674329 : add byte ptr [rcx], dh ; shr al, 0x1f ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe9ff
0xffffff8000668a88 : add byte ptr [rcx], dh ; shr al, 0x20 ; push rdi ; ret 0xebff
0xffffff8000531f83 : add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xffd5
0xffffff800064e872 : add byte ptr [rcx], dh ; shr al, 0x26 ; cld ; ret
0xffffff8000669d6f : add byte ptr [rcx], dh ; shr al, 0x29 ; ret 0xe9ff
0xffffff8000641f7e : add byte ptr [rcx], dh ; shr al, 0x2a ; ret 0xffc4
0xffffff800065466e : add byte ptr [rcx], dh ; shr al, 0x2a ; sahf ; ret
0xffffff8000591f7b : add byte ptr [rcx], dh ; shr al, 0x2d ; ret 0xffcf
0xffffff8000621f7a : add byte ptr [rcx], dh ; shr al, 0x2e ; ret 0xffc6
0xffffff8000671e79 : add byte ptr [rcx], dh ; shr al, 0x2f ; ret
0xffffff8000654e64 : add byte ptr [rcx], dh ; shr al, 0x34 ; xchg eax, esi ; ret
0xffffff80005c1f72 : add byte ptr [rcx], dh ; shr al, 0x36 ; ret 0xffcc
0xffffff8000653371 : add byte ptr [rcx], dh ; shr al, 0x37 ; scasb al, byte ptr [rdi] ; ret
0xffffff80008517ce : add byte ptr [rcx], dh ; shr al, 0x3a ; ret
0xffffff800065f050 : add byte ptr [rcx], dh ; shr al, 0x48 ; hlt ; ret 0xe8ff
0xffffff800065f35e : add byte ptr [rcx], dh ; shr al, 0x4a ; out dx, al ; ret 0x41ff
0xffffff800065924c : add byte ptr [rcx], dh ; shr al, 0x4c ; push rdx ; ret
0xffffff800066ab5c : add byte ptr [rcx], dh ; shr al, 0x4c ; ret 0x4cff
0xffffff8000663a59 : add byte ptr [rcx], dh ; shr al, 0x4f ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x41ff
0xffffff8000572248 : add byte ptr [rcx], dh ; shr al, 0x50 ; ret 0xffd1
0xffffff8000812508 : add byte ptr [rcx], dh ; shr al, 0x50 ; ret 0xffff
0xffffff8000531f54 : add byte ptr [rcx], dh ; shr al, 0x54 ; ret 0xffd5
0xffffff8000658953 : add byte ptr [rcx], dh ; shr al, 0x55 ; pop rax ; ret
0xffffff800065f652 : add byte ptr [rcx], dh ; shr al, 0x56 ; jmp 0xffffff800065f621
0xffffff8000653741 : add byte ptr [rcx], dh ; shr al, 0x57 ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000671e50 : add byte ptr [rcx], dh ; shr al, 0x58 ; ret
0xffffff8000721e4d : add byte ptr [rcx], dh ; shr al, 0x5b ; ret
0xffffff80005c1f4b : add byte ptr [rcx], dh ; shr al, 0x5d ; ret 0xffcc
0xffffff800081c4ba : add byte ptr [rcx], dh ; shr al, 0x5e ; ret
0xffffff8000668a39 : add byte ptr [rcx], dh ; shr al, 0x5f ; pop rdx ; ret 0xe9ff
0xffffff8000541f49 : add byte ptr [rcx], dh ; shr al, 0x5f ; ret 0xffd4
0xffffff80002c1f49 : add byte ptr [rcx], dh ; shr al, 0x5f ; ret 0xfffc
0xffffff80005924e8 : add byte ptr [rcx], dh ; shr al, 0x60 ; ret
0xffffff8000653a47 : add byte ptr [rcx], dh ; shr al, 0x61 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000659437 : add byte ptr [rcx], dh ; shr al, 0x61 ; push rax ; ret
0xffffff8000668c46 : add byte ptr [rcx], dh ; shr al, 0x62 ; push rbp ; ret 0x8bff
0xffffff800064e544 : add byte ptr [rcx], dh ; shr al, 0x64 ; cld ; ret
0xffffff8000571f41 : add byte ptr [rcx], dh ; shr al, 0x67 ; ret 0xffd1
0xffffff8000654530 : add byte ptr [rcx], dh ; shr al, 0x68 ; lahf ; ret
0xffffff8000591f3f : add byte ptr [rcx], dh ; shr al, 0x69 ; ret 0xffcf
0xffffff8000658a2e : add byte ptr [rcx], dh ; shr al, 0x6a ; pop rdx ; ret
0xffffff8000673ddd : add byte ptr [rcx], dh ; shr al, 0x6b ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80006c1e3c : add byte ptr [rcx], dh ; shr al, 0x6c ; ret
0xffffff800065982b : add byte ptr [rcx], dh ; shr al, 0x6d ; ret
0xffffff8000659e38 : add byte ptr [rcx], dh ; shr al, 0x70 ; ret
0xffffff80008123e7 : add byte ptr [rcx], dh ; shr al, 0x71 ; ret
0xffffff8000655227 : add byte ptr [rcx], dh ; shr al, 0x71 ; xchg eax, edx ; ret
0xffffff8000663826 : add byte ptr [rcx], dh ; shr al, 0x72 ; lodsb al, byte ptr [rsi] ; ret 0x49ff
0xffffff8000654e24 : add byte ptr [rcx], dh ; shr al, 0x74 ; xchg eax, esi ; ret
0xffffff8000663432 : add byte ptr [rcx], dh ; shr al, 0x76 ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0xffffff8000721e30 : add byte ptr [rcx], dh ; shr al, 0x78 ; ret
0xffffff8000541f30 : add byte ptr [rcx], dh ; shr al, 0x78 ; ret 0xffd4
0xffffff8000657d1b : add byte ptr [rcx], dh ; shr al, 0x7d ; ret
0xffffff800066b32a : add byte ptr [rcx], dh ; shr al, 0x7e ; ret 0x49ff
0xffffff8000664629 : add byte ptr [rcx], dh ; shr al, 0x7f ; wait ; ret 0x8bff
0xffffff80004225c8 : add byte ptr [rcx], dh ; shr al, 0x80 ; ret 0xffe7
0xffffff8000653527 : add byte ptr [rcx], dh ; shr al, 0x81 ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000671e25 : add byte ptr [rcx], dh ; shr al, 0x83 ; ret
0xffffff800064e915 : add byte ptr [rcx], dh ; shr al, 0x83 ; sti ; ret
0xffffff800065a014 : add byte ptr [rcx], dh ; shr al, 0x84 ; ret
0xffffff8000674bc0 : add byte ptr [rcx], dh ; shr al, 0x88 ; pushfq ; ret 0xfff
0xffffff8000572110 : add byte ptr [rcx], dh ; shr al, 0x88 ; ret
0xffffff8000651b0d : add byte ptr [rcx], dh ; shr al, 0x8b ; leave ; ret
0xffffff80005d1f1d : add byte ptr [rcx], dh ; shr al, 0x8b ; ret 0xffcb
0xffffff8000653b1c : add byte ptr [rcx], dh ; shr al, 0x8c ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff800065370c : add byte ptr [rcx], dh ; shr al, 0x8c ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800065971b : add byte ptr [rcx], dh ; shr al, 0x8d ; ret
0xffffff800051e8ba : add byte ptr [rcx], dh ; shr al, 0x8e ; call rdi
0xffffff8000641f18 : add byte ptr [rcx], dh ; shr al, 0x90 ; ret 0xffc4
0xffffff80006a2106 : add byte ptr [rcx], dh ; shr al, 0x92 ; ret
0xffffff80005c1f0b : add byte ptr [rcx], dh ; shr al, 0x9d ; ret 0xffcc
0xffffff8000658bf9 : add byte ptr [rcx], dh ; shr al, 0x9f ; pop rax ; ret
0xffffff800065359e : add byte ptr [rcx], dh ; shr al, 0xa ; lodsb al, byte ptr [rsi] ; ret
0xffffff80005520f8 : add byte ptr [rcx], dh ; shr al, 0xa0 ; ret
0xffffff8000657cf6 : add byte ptr [rcx], dh ; shr al, 0xa2 ; ret
0xffffff80006591f5 : add byte ptr [rcx], dh ; shr al, 0xa3 ; push rdx ; ret
0xffffff8000651af4 : add byte ptr [rcx], dh ; shr al, 0xa4 ; leave ; ret
0xffffff8000658802 : add byte ptr [rcx], dh ; shr al, 0xa6 ; pop rcx ; ret
0xffffff800064f201 : add byte ptr [rcx], dh ; shr al, 0xa7 ; out dx, eax ; ret
0xffffff8000659af0 : add byte ptr [rcx], dh ; shr al, 0xa8 ; ret
0xffffff8000654dee : add byte ptr [rcx], dh ; shr al, 0xaa ; xchg eax, esi ; ret
0xffffff80005d1ef5 : add byte ptr [rcx], dh ; shr al, 0xb3 ; ret 0xffcb
0xffffff80006535f3 : add byte ptr [rcx], dh ; shr al, 0xb5 ; stosd dword ptr [rdi], eax ; ret
0xffffff80006609f3 : add byte ptr [rcx], dh ; shr al, 0xb5 ; xlatb ; ret 0x8bff
0xffffff80003f2491 : add byte ptr [rcx], dh ; shr al, 0xb7 ; ret
0xffffff80006634df : add byte ptr [rcx], dh ; shr al, 0xb9 ; scasd eax, dword ptr [rdi] ; ret 0xf0ff
0xffffff8000541eee : add byte ptr [rcx], dh ; shr al, 0xba ; ret 0xffd4
0xffffff80006552de : add byte ptr [rcx], dh ; shr al, 0xba ; xchg eax, ecx ; ret
0xffffff80006689ed : add byte ptr [rcx], dh ; shr al, 0xbb ; push rdi ; ret 0x41ff
0xffffff800065988c : add byte ptr [rcx], dh ; shr al, 0xc ; ret
0xffffff8000541de8 : add byte ptr [rcx], dh ; shr al, 0xc0 ; ret
0xffffff80006672e5 : add byte ptr [rcx], dh ; shr al, 0xc3 ; outsb dx, byte ptr [rsi] ; ret 0x4cff
0xffffff80005c1ee4 : add byte ptr [rcx], dh ; shr al, 0xc4 ; ret 0xffcc
0xffffff80006b20d3 : add byte ptr [rcx], dh ; shr al, 0xc5 ; ret
0xffffff80006644e1 : add byte ptr [rcx], dh ; shr al, 0xc7 ; pushfq ; ret 0x48ff
0xffffff8000452481 : add byte ptr [rcx], dh ; shr al, 0xc7 ; ret
0xffffff80007c1de0 : add byte ptr [rcx], dh ; shr al, 0xc8 ; ret
0xffffff8000663dcc : add byte ptr [rcx], dh ; shr al, 0xcc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x49ff
0xffffff8000674c7c : add byte ptr [rcx], dh ; shr al, 0xcc ; wait ; ret 0xe9ff
0xffffff8000657ec5 : add byte ptr [rcx], dh ; shr al, 0xd3 ; ret
0xffffff8000541ed3 : add byte ptr [rcx], dh ; shr al, 0xd5 ; ret 0xffd4
0xffffff80006a1ed1 : add byte ptr [rcx], dh ; shr al, 0xd7 ; ret 0xffbe
0xffffff800045be3a : add byte ptr [rcx], dh ; shr al, 0xe ; sysenter
0xffffff8000321ec5 : add byte ptr [rcx], dh ; shr al, 0xe3 ; ret 0xfff6
0xffffff800064e3c4 : add byte ptr [rcx], dh ; shr al, 0xe4 ; std ; ret
0xffffff80007b1ec2 : add byte ptr [rcx], dh ; shr al, 0xe6 ; ret 0xffad
0xffffff8000653cc0 : add byte ptr [rcx], dh ; shr al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff8000653abe : add byte ptr [rcx], dh ; shr al, 0xea ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff800065e8ba : add byte ptr [rcx], dh ; shr al, 0xee ; clc ; ret 0x49ff
0xffffff8000741db6 : add byte ptr [rcx], dh ; shr al, 0xf2 ; ret
0xffffff800065f4b3 : add byte ptr [rcx], dh ; shr al, 0xf5 ; in al, dx ; ret 0x48ff
0xffffff80006539af : add byte ptr [rcx], dh ; shr al, 0xf9 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff800065459e : add byte ptr [rcx], dh ; shr al, 0xfa ; sahf ; ret
0xffffff8000657e9d : add byte ptr [rcx], dh ; shr al, 0xfb ; ret
0xffffff800065959b : add byte ptr [rcx], dh ; shr al, 0xfd ; ret
0xffffff8000663d99 : add byte ptr [rcx], dh ; shr al, 0xff ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xf0ff
0xffffff8000658095 : add byte ptr [rcx], dh ; shr al, 3 ; ret
0xffffff8000653da4 : add byte ptr [rcx], dh ; shr al, 4 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff80006614a0 : add byte ptr [rcx], dh ; shr al, 8 ; int 0xc2
0xffffff80006532a0 : add byte ptr [rcx], dh ; shr al, 8 ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000654e90 : add byte ptr [rcx], dh ; shr al, 8 ; xchg eax, esi ; ret
0xffffff80006a1ea6 : add byte ptr [rcx], dh ; shr al, cl ; add bl, byte ptr [rsi] ; ret
0xffffff800063ddf2 : add byte ptr [rcx], dh ; shr al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80006a72a9 : add byte ptr [rcx], dh ; shr al, cl ; dec ecx ; ret 0x48ff
0xffffff80006a5740 : add byte ptr [rcx], dh ; shr al, cl ; fdiv dword ptr [rcx] ; ret
0xffffff80006a731e : add byte ptr [rcx], dh ; shr al, cl ; mov cl, cl ; ret 0x48ff
0xffffff80006a5273 : add byte ptr [rcx], dh ; shr al, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80006a5f0f : add byte ptr [rcx], dh ; shr al, cl ; or dword ptr [rdx], ebp ; ret
0xffffff80006a449d : add byte ptr [rcx], dh ; shr al, cl ; or edi, eax ; ret 0x48ff
0xffffff80006a47be : add byte ptr [rcx], dh ; shr al, cl ; pop rdx ; ret
0xffffff80002ec57c : add byte ptr [rcx], dh ; shr al, cl ; pushfq ; ret
0xffffff800039d955 : add byte ptr [rcx], dh ; shr al, cl ; ret
0xffffff80004e6a86 : add byte ptr [rcx], dh ; shr al, cl ; ret 0x2938
0xffffff80008d8956 : add byte ptr [rcx], dh ; shr al, cl ; ret 0x9fff
0xffffff800032e556 : add byte ptr [rcx], dh ; shr al, cl ; ret 0xfaa3
0xffffff80006a737f : add byte ptr [rcx], dh ; shr al, cl ; sub ecx, ecx ; ret 0x48ff
0xffffff80002b79f9 : add byte ptr [rcx], dh ; shr bl, cl ; add eax, 0x950fc985 ; ret 0x6348
0xffffff8000616de7 : add byte ptr [rcx], dh ; shr bl, cl ; cmp byte ptr [rbp - 0x77], cl ; imul ecx ; ret
0xffffff800086750f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x7d ; shr al, 0xc5 ; ret
0xffffff800082c9e0 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc2 ; pop rbp ; jmp rcx
0xffffff80008b4474 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xca ; pop rbp ; jmp rax
0xffffff80002670fe : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xda ; call r15
0xffffff800054c7a1 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r14 ; call rax
0xffffff80005ed312 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r15 ; call rax
0xffffff800087ae96 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0xffffff800076b119 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, edi ; call rax
0xffffff80007dca7c : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0x48 ; mov edx, ebx ; call rax
0xffffff80007dd12f : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, esi ; call rax
0xffffff80007dc0f0 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 1], 0x48 ; mov edx, ebx ; call rax
0xffffff80006052a9 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, ebp ; call rax
0xffffff80005f4214 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov edx, ebx ; call rax
0xffffff800076a09b : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, edi ; call rax
0xffffff8000554dce : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0xe8 ; push rdi ; ret 0xffff
0xffffff80007acb1f : add byte ptr [rcx], dh ; test byte ptr [rcx - 0x77], 0xd7 ; call rax
0xffffff8000546a81 : add byte ptr [rcx], r14b ; rol byte ptr [rcx + rcx*4 - 0x17], 0xe8 ; ret
0xffffff8000541f48 : add byte ptr [rcx], r14b ; shr al, 0x5f ; ret 0xffd4
0xffffff8000541f2f : add byte ptr [rcx], r14b ; shr al, 0x78 ; ret 0xffd4
0xffffff800051e8b9 : add byte ptr [rcx], r14b ; shr al, 0x8e ; call rdi
0xffffff8000541eed : add byte ptr [rcx], r14b ; shr al, 0xba ; ret 0xffd4
0xffffff8000541de7 : add byte ptr [rcx], r14b ; shr al, 0xc0 ; ret
0xffffff8000541ed2 : add byte ptr [rcx], r14b ; shr al, 0xd5 ; ret 0xffd4
0xffffff80006240bf : add byte ptr [rcx], r15b ; ror byte ptr [rdi], 1 ; ret 0x4189
0xffffff80006210cf : add byte ptr [rcx], r15b ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff8000567581 : add byte ptr [rcx], sil ; rol byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; ret
0xffffff800065466d : add byte ptr [rcx], sil ; shr al, 0x2a ; sahf ; ret
0xffffff8000659436 : add byte ptr [rcx], sil ; shr al, 0x61 ; push rax ; ret
0xffffff8000655226 : add byte ptr [rcx], sil ; shr al, 0x71 ; xchg eax, edx ; ret
0xffffff800065a013 : add byte ptr [rcx], sil ; shr al, 0x84 ; ret
0xffffff8000658bf8 : add byte ptr [rcx], sil ; shr al, 0x9f ; pop rax ; ret
0xffffff8000659aef : add byte ptr [rcx], sil ; shr al, 0xa8 ; ret
0xffffff80006552dd : add byte ptr [rcx], sil ; shr al, 0xba ; xchg eax, ecx ; ret
0xffffff800065988b : add byte ptr [rcx], sil ; shr al, 0xc ; ret
0xffffff800065459d : add byte ptr [rcx], sil ; shr al, 0xfa ; sahf ; ret
0xffffff8000658094 : add byte ptr [rcx], sil ; shr al, 3 ; ret
0xffffff8000818d9c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000818de7
0xffffff800086274c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000862797
0xffffff800086335c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008633a7
0xffffff80008819fc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000881a47
0xffffff800088238c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008823d7
0xffffff8000887dfc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000887e47
0xffffff800089241c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000892467
0xffffff80008950bc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000895107
0xffffff8000898fac : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000898ff7
0xffffff8000899c1c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000899c67
0xffffff800089d11c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff800089d167
0xffffff80008a29ac : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a29f7
0xffffff80008a7b1c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a7b67
0xffffff80008a9edc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008a9f27
0xffffff80008aaaac : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008aaaf7
0xffffff80008ab0ec : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ab137
0xffffff80008ab44c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ab497
0xffffff80008ad2fc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ad347
0xffffff80008adfec : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ae037
0xffffff80008af2fc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008af347
0xffffff80008b295c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b29a7
0xffffff80008b325c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b32a7
0xffffff80008b3d4c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b3d97
0xffffff80008b68ec : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008b6937
0xffffff80008c29ec : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008c2a37
0xffffff80008cc32c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008cc377
0xffffff80008ce12c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ce177
0xffffff80008ceacc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008ceb17
0xffffff80008d06fc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d0747
0xffffff80008d4a5c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d4aa7
0xffffff80008d5a5c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d5aa7
0xffffff80008d61ec : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d6237
0xffffff80008d78cc : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008d7917
0xffffff80008e754c : add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008e7597
0xffffff80003a7dab : add byte ptr [rdi + 0x32], bh ; mov esi, eax ; call rbx
0xffffff80003a7dcc : add byte ptr [rdi + 0x34], bh ; mov esi, eax ; call rbx
0xffffff80003a7d8a : add byte ptr [rdi + 0x37], bh ; mov esi, eax ; call rbx
0xffffff8000547fde : add byte ptr [rdi + 0x48], bh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000771583 : add byte ptr [rdi + 0x4c], bh ; mov edi, esi ; call 0xffffff8000393048
0xffffff8000549184 : add byte ptr [rdi + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff800088edd8 : add byte ptr [rdi + 0x77], ah ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff800082c1a8 : add byte ptr [rdi + 0x77], al ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff80008812c8 : add byte ptr [rdi + 0x77], bh ; jmp 0xffffff8000881315
0xffffff80008629d8 : add byte ptr [rdi + 0x77], bl ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff80008a5278 : add byte ptr [rdi + 0x77], ch ; jmp 0xffffff80008a52c2
0xffffff80008a7108 : add byte ptr [rdi + 0x77], ch ; jmp 0xffffff80008a7152
0xffffff800082e088 : add byte ptr [rdi + 0x77], cl ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff8000893008 : add byte ptr [rdi + 0x77], dh ; jmp 0xffffff8000893052
0xffffff80008966d8 : add byte ptr [rdi + 0x77], dh ; jmp 0xffffff8000896722
0xffffff8000882008 : add byte ptr [rdi + 0x77], dl ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff800034d930 : add byte ptr [rdi + 1], bh ; call rax
0xffffff800032fa8f : add byte ptr [rdi + 2], bh ; call 0xffffff800029bce8
0xffffff80002f874d : add byte ptr [rdi + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80006e2027 : add byte ptr [rdi + 5], dh ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80002723bc : add byte ptr [rdi + rax + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800053ec08 : add byte ptr [rdi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800084dd3b : add byte ptr [rdi + rax - 1], dh ; ret 0x344
0xffffff800049555d : add byte ptr [rdi + rbx - 0x77], dh ; ret 0xe283
0xffffff800074333b : add byte ptr [rdi + rcx + 0x42], cl ; ret 0x894d
0xffffff80003d3219 : add byte ptr [rdi + rcx + 0x43], al ; loopne 0xffffff80003d31ad ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800045983e : add byte ptr [rdi + rcx + 0x43], al ; loopne 0xffffff80004597d2 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047eaac : add byte ptr [rdi + rcx + 0x43], al ; loopne 0xffffff800047ea40 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047eb68 : add byte ptr [rdi + rcx + 0x43], al ; loopne 0xffffff800047eafc ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047ebc9 : add byte ptr [rdi + rcx + 0x43], al ; loopne 0xffffff800047eb5d ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff8000704544 : add byte ptr [rdi + rcx + 0x43], cl ; ret 0x149
0xffffff80002fa202 : add byte ptr [rdi + rcx + 0x44], al ; out 0xff, eax ; ret
0xffffff80003d6610 : add byte ptr [rdi + rcx + 0x45], al ; ret
0xffffff800074f96c : add byte ptr [rdi + rcx + 0x45], al ; ret 0x8d49
0xffffff80002f8728 : add byte ptr [rdi + rcx + 0x45], al ; ret 0xd231
0xffffff800049ed8a : add byte ptr [rdi + rcx + 0x46], al ; loope 0xffffff800049edcf ; ret
0xffffff800047cd54 : add byte ptr [rdi + rcx + 0x46], al ; ret
0xffffff80002a14a8 : add byte ptr [rdi + rcx + 0x46], cl ; clc ; mov rdi, qword ptr [rbx + 8] ; call rcx
0xffffff80005850f8 : add byte ptr [rdi + rcx - 0x49], al ; jmp 0xffffff7fc40f604d
0xffffff80005b009c : add byte ptr [rdi + rcx - 0x49], al ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80008387f6 : add byte ptr [rdi + rcx - 0x4a], al ; adc cl, byte ptr [rax - 1] ; ret 0x8141
0xffffff8000892857 : add byte ptr [rdi + rcx - 0x4a], al ; ror dword ptr [rcx + rcx*4 - 0x37], 0x5d ; jmp rax
0xffffff80004015b1 : add byte ptr [rdi + rcx - 0x5d], al ; ret 0x6273
0xffffff80002a14bc : add byte ptr [rdi + rcx - 0x70], dh ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80003c04cd : add byte ptr [rdi + rcx - 0x7c], ah ; ret 0
0xffffff80004c1a50 : add byte ptr [rdi + rcx], al ; ret
0xffffff80006c6714 : add byte ptr [rdi + rcx], al ; ret 0x8b41
0xffffff80006487fa : add byte ptr [rdi + rcx], al ; xchg eax, esp ; ret
0xffffff80004a0d5d : add byte ptr [rdi - 0x18], bh ; call 0xffffff800080cfb8
0xffffff8000880535 : add byte ptr [rdi - 0x28], bh ; pop rbp ; ret
0xffffff8000880635 : add byte ptr [rdi - 0x28], bh ; pop rbx ; pop rbp ; ret
0xffffff800069963c : add byte ptr [rdi - 0x76b70015], bl ; ret
0xffffff80002d2ffe : add byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000814308 : add byte ptr [rdi], ah ; ja 0xffffff8000814337 ; jmp 0xffffff800081434f
0xffffff800082b588 : add byte ptr [rdi], ah ; ja 0xffffff800082b5b7 ; jmp 0xffffff800082b5cf
0xffffff800082ebc8 : add byte ptr [rdi], ah ; ja 0xffffff800082ebf7 ; jmp 0xffffff800082ec0f
0xffffff800082f6d8 : add byte ptr [rdi], ah ; ja 0xffffff800082f707 ; jmp 0xffffff800082f71f
0xffffff8000832898 : add byte ptr [rdi], ah ; ja 0xffffff80008328c7 ; jmp 0xffffff80008328df
0xffffff800085cd58 : add byte ptr [rdi], ah ; ja 0xffffff800085cd87 ; jmp 0xffffff800085cd9f
0xffffff8000885f88 : add byte ptr [rdi], ah ; ja 0xffffff8000885fb7 ; jmp 0xffffff8000885fcf
0xffffff80008b5088 : add byte ptr [rdi], ah ; ja 0xffffff80008b50b7 ; jmp 0xffffff80008b50cf
0xffffff80008c4148 : add byte ptr [rdi], ah ; ja 0xffffff80008c4177 ; jmp 0xffffff80008c418f
0xffffff800085cfb8 : add byte ptr [rdi], bh ; ja 0xffffff800085cfe7 ; jmp 0xffffff800085cfff
0xffffff80008e54c8 : add byte ptr [rdi], bh ; ja 0xffffff80008e54f7 ; jmp 0xffffff80008e550f
0xffffff8000267996 : add byte ptr [rdi], bl ; add byte ptr [rax + 0xf], cl ; ret 0x8548
0xffffff8000830a18 : add byte ptr [rdi], bl ; ja 0xffffff8000830a47 ; jmp 0xffffff8000830a5f
0xffffff80008630f8 : add byte ptr [rdi], bl ; ja 0xffffff8000863127 ; jmp 0xffffff800086313f
0xffffff8000884dc8 : add byte ptr [rdi], bl ; ja 0xffffff8000884df7 ; jmp 0xffffff8000884e0f
0xffffff8000889c58 : add byte ptr [rdi], bl ; ja 0xffffff8000889c87 ; jmp 0xffffff8000889c9f
0xffffff80008911b8 : add byte ptr [rdi], bl ; ja 0xffffff80008911e7 ; jmp 0xffffff80008911ff
0xffffff80008b59c8 : add byte ptr [rdi], bl ; ja 0xffffff80008b59f7 ; jmp 0xffffff80008b5a0f
0xffffff80008c3678 : add byte ptr [rdi], bl ; ja 0xffffff80008c36a7 ; jmp 0xffffff80008c36bf
0xffffff80008d6a48 : add byte ptr [rdi], bl ; ja 0xffffff80008d6a77 ; jmp 0xffffff80008d6a8f
0xffffff8000814d08 : add byte ptr [rdi], ch ; ja 0xffffff8000814d37 ; jmp 0xffffff8000814d4f
0xffffff8000858e28 : add byte ptr [rdi], ch ; ja 0xffffff8000858e57 ; jmp 0xffffff8000858e6f
0xffffff80008635b8 : add byte ptr [rdi], ch ; ja 0xffffff80008635e7 ; jmp 0xffffff80008635ff
0xffffff800089afe8 : add byte ptr [rdi], ch ; ja 0xffffff800089b017 ; jmp 0xffffff800089b02f
0xffffff800089b608 : add byte ptr [rdi], ch ; ja 0xffffff800089b637 ; jmp 0xffffff800089b64f
0xffffff800089b938 : add byte ptr [rdi], ch ; ja 0xffffff800089b967 ; jmp 0xffffff800089b97f
0xffffff800089bc68 : add byte ptr [rdi], ch ; ja 0xffffff800089bc97 ; jmp 0xffffff800089bcaf
0xffffff80008a6208 : add byte ptr [rdi], ch ; ja 0xffffff80008a6237 ; jmp 0xffffff80008a624f
0xffffff80004fa77d : add byte ptr [rdi], cl ; add byte ptr [rbx], ah ; jo 0xffffff80004fa7e8 ; ret
0xffffff800038aba5 : add byte ptr [rdi], cl ; add byte ptr [rip + 0x5a75b5], bl ; pop rbp ; ret
0xffffff800039a7e2 : add byte ptr [rdi], cl ; add esp, eax ; cmovb eax, ecx ; cmove eax, edx ; leave ; ret
0xffffff80003934fd : add byte ptr [rdi], cl ; and bl, cl ; pop rbp ; ret
0xffffff80006b6142 : add byte ptr [rdi], cl ; and dword ptr [rbx + 0x48000001], 1 ; ret
0xffffff800044c07b : add byte ptr [rdi], cl ; enter -0x3f7b, 0xf ; xchg eax, ebp ; ret
0xffffff8000440062 : add byte ptr [rdi], cl ; enter -0x3f7b, 0xf ; xchg eax, ebp ; ret 0x450f
0xffffff80005ae1c9 : add byte ptr [rdi], cl ; enter 0xf48, 0x46 ; ret 0xcb29
0xffffff800059bde5 : add byte ptr [rdi], cl ; fmul dword ptr [rcx + rcx*4 - 9] ; call 0xffffff80007b8029
0xffffff8000810d78 : add byte ptr [rdi], cl ; ja 0xffffff8000810da7 ; jmp 0xffffff8000810dbf
0xffffff80008130a8 : add byte ptr [rdi], cl ; ja 0xffffff80008130d7 ; jmp 0xffffff80008130ef
0xffffff80008180b8 : add byte ptr [rdi], cl ; ja 0xffffff80008180e7 ; jmp 0xffffff80008180ff
0xffffff8000862e98 : add byte ptr [rdi], cl ; ja 0xffffff8000862ec7 ; jmp 0xffffff8000862edf
0xffffff80008637c8 : add byte ptr [rdi], cl ; ja 0xffffff80008637f7 ; jmp 0xffffff800086380f
0xffffff80008c0a98 : add byte ptr [rdi], cl ; ja 0xffffff80008c0ac7 ; jmp 0xffffff80008c0adf
0xffffff80002b251f : add byte ptr [rdi], cl ; lahf ; ret
0xffffff80007c7432 : add byte ptr [rdi], cl ; lahf ; ret 0x8548
0xffffff80007ac328 : add byte ptr [rdi], cl ; lahf ; ret 0xdb85
0xffffff8000345204 : add byte ptr [rdi], cl ; mov ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000625701 : add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0x8b49
0xffffff80006051b3 : add byte ptr [rdi], cl ; mov bh, 0x57 ; add bh, byte ptr [rcx] ; ret 0x850f
0xffffff8000655a06 : add byte ptr [rdi], cl ; mov bh, 0x73 ; sbb al, 0x85 ; test byte ptr [rdi], 0x84 ; ret
0xffffff8000877f5f : add byte ptr [rdi], cl ; mov bh, 0x99 ; rol byte ptr [rax], 0 ; add dh, dh ; ret
0xffffff8000738195 : add byte ptr [rdi], cl ; mov bh, 4 ; pop r13 ; ret
0xffffff8000587a72 : add byte ptr [rdi], cl ; mov bl, ah ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff80002b0d02 : add byte ptr [rdi], cl ; mov bl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800074a3da : add byte ptr [rdi], cl ; mov dh, 0x14 ; sbb dword ptr [rcx], ecx ; ret 0x1488
0xffffff80006253fd : add byte ptr [rdi], cl ; mov dh, 0x34 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call r14
0xffffff800038e03a : add byte ptr [rdi], cl ; mov dh, 0x40 ; pop rbp ; ret
0xffffff80003b473f : add byte ptr [rdi], cl ; mov dh, 0x41 ; or al, 0x39 ; ret 0x1272
0xffffff8000456697 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 1], ecx ; ret
0xffffff8000451ec0 : add byte ptr [rdi], cl ; mov dh, 0x44 ; or bh, bh ; pop rbp ; ret
0xffffff800054c391 : add byte ptr [rdi], cl ; mov dh, 0x47 ; adc byte ptr [rcx + 0x39], al ; ret 0x4a75
0xffffff80006a4a98 : add byte ptr [rdi], cl ; mov dh, 0x4b ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff80006bfd3d : add byte ptr [rdi], cl ; mov dh, 0x53 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80003bad3a : add byte ptr [rdi], cl ; mov dh, 0x80 ; cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800069d2e9 : add byte ptr [rdi], cl ; mov dh, 0x81 ; ret
0xffffff8000535511 : add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0xffffff80006ab889 : add byte ptr [rdi], cl ; mov dh, 0x83 ; rol byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x1b75
0xffffff800069ed63 : add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0xffffff80008a91a2 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800088e721 : add byte ptr [rdi], cl ; mov dh, 0xd2 ; pop rbp ; jmp rax
0xffffff80008d31ec : add byte ptr [rdi], cl ; mov esi, 0x80ca88c8 ; ret 0xfd0
0xffffff800029e41d : add byte ptr [rdi], cl ; mov esi, 0x894c083c ; out 0x41, al ; call rdi
0xffffff800029e3ef : add byte ptr [rdi], cl ; mov esi, 0xe6894cf8 ; call r15
0xffffff800064bb2a : add byte ptr [rdi], cl ; pop qword ptr [rcx - 0x7f000000] ; ret
0xffffff80007c77a9 : add byte ptr [rdi], cl ; pushfq ; ret 0x550a
0xffffff800040dd02 : add byte ptr [rdi], cl ; pushfq ; ret 0x8949
0xffffff80004cbd3b : add byte ptr [rdi], cl ; rcr dword ptr [r11 + 0x41], 0x5e ; pop rbp ; ret
0xffffff800050a303 : add byte ptr [rdi], cl ; rcr dword ptr [r13 - 0x3d], 0x5d ; ret
0xffffff80003a3976 : add byte ptr [rdi], cl ; ret
0xffffff80005471d2 : add byte ptr [rdi], cl ; ret 0x2b74
0xffffff8000791528 : add byte ptr [rdi], cl ; ret 0x394c
0xffffff80003d3e70 : add byte ptr [rdi], cl ; ret 0x415b
0xffffff80006dd2c5 : add byte ptr [rdi], cl ; ret 0x4189
0xffffff80007faf15 : add byte ptr [rdi], cl ; ret 0x4589
0xffffff80006c66e5 : add byte ptr [rdi], cl ; ret 0x508d
0xffffff80002ea42f : add byte ptr [rdi], cl ; ret 0x589
0xffffff8000797465 : add byte ptr [rdi], cl ; ret 0x689
0xffffff80002a6af0 : add byte ptr [rdi], cl ; ret 0x7eb
0xffffff800070ad99 : add byte ptr [rdi], cl ; ret 0x8348
0xffffff800061c1b2 : add byte ptr [rdi], cl ; ret 0x8389
0xffffff80006d8055 : add byte ptr [rdi], cl ; ret 0x840f
0xffffff8000323aae : add byte ptr [rdi], cl ; ret 0x8589
0xffffff80004aabed : add byte ptr [rdi], cl ; ret 0x8941
0xffffff8000746e5b : add byte ptr [rdi], cl ; ret 0x8943
0xffffff80003e028e : add byte ptr [rdi], cl ; ret 0x8948
0xffffff800033f469 : add byte ptr [rdi], cl ; ret 0x894c
0xffffff80006304c0 : add byte ptr [rdi], cl ; ret 0x8d44
0xffffff8000680327 : add byte ptr [rdi], cl ; ret 0xa3eb
0xffffff8000413a01 : add byte ptr [rdi], cl ; ret 0xc139
0xffffff800029f444 : add byte ptr [rdi], cl ; ret 0xc35d
0xffffff80002d3e96 : add byte ptr [rdi], cl ; ret 0xc749
0xffffff800047628d : add byte ptr [rdi], cl ; ret 0xc801
0xffffff800083d3cd : add byte ptr [rdi], cl ; ret 0xc809
0xffffff80003e092a : add byte ptr [rdi], cl ; ret 0xc985
0xffffff80003fb19d : add byte ptr [rdi], cl ; ret 0xd231
0xffffff80004410a2 : add byte ptr [rdi], cl ; ret 0xdb84
0xffffff80006247d5 : add byte ptr [rdi], cl ; ret 0xf001
0xffffff80003b239b : add byte ptr [rdi], cl ; ret 0xf41
0xffffff800061cc76 : add byte ptr [rdi], cl ; ret 0xf641
0xffffff80007259fb : add byte ptr [rdi], cl ; ror dword ptr [rcx - 0x76be4bab], 1 ; ret
0xffffff80006240b7 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0xffffff800062b51b : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc085
0xffffff80003717e4 : add byte ptr [rdi], cl ; shr dword ptr [rcx], 1 ; ret 0x8d48
0xffffff800060efa3 : add byte ptr [rdi], cl ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff8000439ce7 : add byte ptr [rdi], cl ; test ah, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff80005a488d : add byte ptr [rdi], cl ; test bh, bl ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000693a63 : add byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80007b0837 : add byte ptr [rdi], cl ; test byte ptr [rax + rax - 0x62180000], dh ; ret
0xffffff800027c8df : add byte ptr [rdi], cl ; test byte ptr [rax], cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003f343b : add byte ptr [rdi], cl ; test byte ptr [rbp + 0x39000001], ah ; ret 0x860f
0xffffff800084b394 : add byte ptr [rdi], cl ; test byte ptr [rbp - 0x1000000], al ; ret
0xffffff8000549510 : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003c653b : add byte ptr [rdi], cl ; test byte ptr [rcx + 0x39000000], bl ; ret
0xffffff80003f9742 : add byte ptr [rdi], cl ; test byte ptr [rcx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff80005494f2 : add byte ptr [rdi], cl ; test byte ptr [rcx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000878c3f : add byte ptr [rdi], cl ; test byte ptr [rdi - 0x48000000], dl ; ret 2
0xffffff8000511c12 : add byte ptr [rdi], cl ; test byte ptr [rdi], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800066cf1c : add byte ptr [rdi], cl ; test byte ptr [rip - 0x9ffffff], cl ; ret 0x7402
0xffffff80004065e2 : add byte ptr [rdi], cl ; test byte ptr [rsi + 0x29fffffd], ch ; ret 0x8b48
0xffffff8000548827 : add byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000880173 : add byte ptr [rdi], cl ; test dl, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; ret 2
0xffffff800031a843 : add byte ptr [rdi], cl ; test dl, bh ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0xffffff80004083ee : add byte ptr [rdi], cl ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff800052a878 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x17000000], ebp ; ret 5
0xffffff80002adf00 : add byte ptr [rdi], cl ; test dword ptr [rcx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004977a2 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xfffff9], edx ; ret
0xffffff80006fabd6 : add byte ptr [rdi], cl ; test dword ptr [rsi], esi ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0xffffff80008e4a98 : add byte ptr [rdi], cl ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff800064e473 : add byte ptr [rdi], cl ; test eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0xffffff8000314b5a : add byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80007d85b3 : add byte ptr [rdi], cl ; test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800058ff7f : add byte ptr [rdi], cl ; test ecx, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0xffffff800033f15a : add byte ptr [rdi], cl ; test edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800027c481 : add byte ptr [rdi], cl ; test edx, ebx ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff800057b9d9 : add byte ptr [rdi], cl ; test esi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003c41a8 : add byte ptr [rdi], cl ; xchg ch, dh ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff80004ffac3 : add byte ptr [rdi], cl ; xchg dword ptr [rcx], ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff800027af97 : add byte ptr [rdi], cl ; xchg dword ptr [rdi + 0x39000005], ebp ; ret
0xffffff800044f7f8 : add byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffffb], esp ; ret 0xeac1
0xffffff8000252e9b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff800083d373 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x2b0
0xffffff80008982e2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x2eb
0xffffff8000683228 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d83
0xffffff80004c098f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x40f6
0xffffff80005e7ba6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x58b
0xffffff80007c6c62 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x888d
0xffffff80006e9bc4 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b41
0xffffff800038149f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff800062f3bc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc085
0xffffff800055db59 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc220
0xffffff800029e909 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca08
0xffffff8000768bc8 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca20
0xffffff80003c2ef6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd184
0xffffff80004c937e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda08
0xffffff8000252eab : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda20
0xffffff800044b0ef : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff8000288a51 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf685
0xffffff80003c981b : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xb60f
0xffffff8000843189 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x9d8b
0xffffff80006e6e48 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0xffffff800074beca : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xbe
0xffffff800039a469 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0xffffff80003d99e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80004090e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3145
0xffffff800067617b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b4c
0xffffff800043969c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4566
0xffffff8000301c83 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x738b
0xffffff8000b4013e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0xffffff8000421821 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x844
0xffffff800033e55f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0xffffff80005fc26b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb70f
0xffffff800033e690 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc109
0xffffff8000276659 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc189
0xffffff80003b1ebb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc220
0xffffff80004b0aa9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff80004dc678 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf44
0xffffff80005d791f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff25
0xffffff80004f6925 : add byte ptr [rdi], cl ; xchg ecx, ebp ; idiv edi ; inc dword ptr [rcx - 0x77] ; ret 0x894d
0xffffff80003bc0a8 : add byte ptr [rdi], cl ; xor bh, bh ; ret
0xffffff80003ba506 : add byte ptr [rdi], cl ; xor dh, bh ; ret 0
0xffffff80003ba520 : add byte ptr [rdi], cl ; xor dh, dh ; ret 0x7402
0xffffff8000811a98 : add byte ptr [rdi], dh ; ja 0xffffff8000811ac7 ; jmp 0xffffff8000811adf
0xffffff8000816268 : add byte ptr [rdi], dh ; ja 0xffffff8000816297 ; jmp 0xffffff80008162af
0xffffff8000884688 : add byte ptr [rdi], dh ; ja 0xffffff80008846b7 ; jmp 0xffffff80008846cf
0xffffff800088a888 : add byte ptr [rdi], dh ; ja 0xffffff800088a8b7 ; jmp 0xffffff800088a8cf
0xffffff8000891878 : add byte ptr [rdi], dh ; ja 0xffffff80008918a7 ; jmp 0xffffff80008918bf
0xffffff80008b62c8 : add byte ptr [rdi], dh ; ja 0xffffff80008b62f7 ; jmp 0xffffff80008b630f
0xffffff80008d7658 : add byte ptr [rdi], dh ; ja 0xffffff80008d7687 ; jmp 0xffffff80008d769f
0xffffff8000813b48 : add byte ptr [rdi], dl ; ja 0xffffff8000813b77 ; jmp 0xffffff8000813b8f
0xffffff800088a3e8 : add byte ptr [rdi], dl ; ja 0xffffff800088a417 ; jmp 0xffffff800088a42f
0xffffff80008d17b8 : add byte ptr [rdi], dl ; ja 0xffffff80008d17e7 ; jmp 0xffffff80008d17ff
0xffffff80008e69f8 : add byte ptr [rdi], dl ; ja 0xffffff80008e6a27 ; jmp 0xffffff80008e6a3f
0xffffff80006240b6 : add byte ptr [rdi], r9b ; scasd eax, dword ptr [rdi] ; ret
0xffffff80008427f9 : add byte ptr [rdx + 0x2550], bh ; call rax
0xffffff800089494d : add byte ptr [rdx + 0x3e8], bh ; pop rbp ; jmp rax
0xffffff80005c0cf5 : add byte ptr [rdx + 0x63], cl ; adc al, 0x81 ; add rdx, rcx ; jmp rdx
0xffffff800059b7de : add byte ptr [rdx + 0x63], cl ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff800067ef50 : add byte ptr [rdx + 0x63], cl ; adc al, 0xa1 ; add rdx, rcx ; jmp rdx
0xffffff80006eee78 : add byte ptr [rdx + 0x63], cl ; adc al, 0xa9 ; add rdx, rcx ; jmp rdx
0xffffff80006ec0cd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb1 ; add rdx, rcx ; jmp rdx
0xffffff800080679a : add byte ptr [rdx + 0x63], cl ; adc al, 0xbe ; add rdx, rsi ; jmp rdx
0xffffff80007f0ef4 : add byte ptr [rdx + 0x63], cl ; adc al, 0xbf ; add rdx, rdi ; jmp rdx
0xffffff80008188ac : add byte ptr [rdx + 0x63], cl ; cmp al, 0x88 ; add rdi, rax ; jmp rdi
0xffffff800058faba : add byte ptr [rdx + 0x63], cl ; cmp al, 0x8a ; add rdi, rdx ; jmp rdi
0xffffff80002b1cd9 : add byte ptr [rdx + 0x63], cl ; or al, 0xa0 ; add rcx, rax ; jmp rcx
0xffffff800029573e : add byte ptr [rdx + 0x63], cl ; or al, 0xa8 ; add rcx, rax ; jmp rcx
0xffffff80008d7c1f : add byte ptr [rdx + 0x63], cl ; or al, 0xaa ; add rcx, rdx ; jmp rcx
0xffffff80005167a2 : add byte ptr [rdx + 0x63], cl ; or al, 0xb0 ; add rcx, rax ; jmp rcx
0xffffff800027c38d : add byte ptr [rdx + 0x63], cl ; or al, 0xb8 ; add rcx, rax ; jmp rcx
0xffffff80005c0cce : add byte ptr [rdx + 0x63], cl ; xor al, 0x82 ; add rsi, rdx ; jmp rsi
0xffffff80007f178d : add byte ptr [rdx + 0x63], cl ; xor al, 0xa3 ; add rsi, rbx ; jmp rsi
0xffffff800045533f : add byte ptr [rdx + 0x63], cl ; xor al, 0xa9 ; add rsi, rcx ; jmp rsi
0xffffff800041477a : add byte ptr [rdx + 0x74db841a], cl ; and cl, byte ptr [rax - 1] ; ret 0x6666
0xffffff800089490d : add byte ptr [rdx + 0x989680], bh ; pop rbp ; jmp rax
0xffffff800089492d : add byte ptr [rdx + 0xf4240], bh ; pop rbp ; jmp rax
0xffffff800084541f : add byte ptr [rdx + 0xf], al ; mov bh, 0x1c ; mov cs, word ptr [rcx + 0x63] ; ret
0xffffff800052ded5 : add byte ptr [rdx + 0xf], al ; mov dh, 4 ; or dword ptr [rcx], ebp ; ret 0xb75
0xffffff800062627d : add byte ptr [rdx + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80002afe21 : add byte ptr [rdx + 4], bh ; call 0xffffff80008ec098
0xffffff80002b4c2a : add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff80007ef898 : add byte ptr [rdx + rax - 0x50], dh ; add cl, byte ptr [rdi] ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000574869 : add byte ptr [rdx + rax - 0x76], dh ; sbb cl, byte ptr [rax - 1] ; ret 0x274
0xffffff8000754548 : add byte ptr [rdx + rax - 0x77], dh ; ret
0xffffff80002a998e : add byte ptr [rdx + rax - 0x78], dh ; ret 0xc031
0xffffff80002bd0ed : add byte ptr [rdx + rbp - 0x7b], dh ; test byte ptr [rdi], 0x94 ; ret 0xf641
0xffffff80005509c3 : add byte ptr [rdx + rbp*2 - 0x48], dh ; add dword ptr [rax], esp ; ret 0x2304
0xffffff8000876c82 : add byte ptr [rdx + rdi - 0x48], dh ; ret 2
0xffffff800083b9d6 : add byte ptr [rdx - 0x19], dh ; pop rbp ; ret
0xffffff800083baf6 : add byte ptr [rdx - 0x49], dh ; pop rbp ; ret
0xffffff800083b996 : add byte ptr [rdx - 0x53], dh ; pop rbp ; ret
0xffffff800052028c : add byte ptr [rdx - 0x75], al ; add al, 6 ; bswap eax ; pop rbp ; ret
0xffffff8000423a96 : add byte ptr [rdx - 0x75], cl ; adc al, 0xc2 ; jmp 0xffffff8000423aae
0xffffff8000b4526d : add byte ptr [rdx - 0x76], 4 ; cmp byte ptr [rcx - 0x78], al ; ret 0x45
0xffffff8000366a8f : add byte ptr [rdx - 0x7713f2bc], cl ; add cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff800080d2bb : add byte ptr [rdx - 0x77], cl ; add al, 0xc1 ; xor eax, eax ; pop rbp ; ret
0xffffff80006c055f : add byte ptr [rdx - 0x77bef7ec], cl ; push rsp ; sysenter
0xffffff80008ec0cf : add byte ptr [rdx - 0xb7fea7], cl ; ror dword ptr [rdi], 0xb6 ; ret
0xffffff80007721df : add byte ptr [rdx - 0xb7feb5], cl ; ret
0xffffff80005b371f : add byte ptr [rdx - 0xb7feb6], cl ; ret 0xc984
0xffffff800045f8af : add byte ptr [rdx - 0xb7febd], cl ; ret
0xffffff800059e93f : add byte ptr [rdx - 0xb7febe], cl ; ret 0xc084
0xffffff8000272adb : add byte ptr [rdx], 0 ; add byte ptr [rbx], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff8000272ae7 : add byte ptr [rdx], 0 ; add byte ptr [rip + 0x5d100040], al ; ret
0xffffff8000272af3 : add byte ptr [rdx], 0 ; add byte ptr [rsi], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff800027894c : add byte ptr [rdx], 0 ; add cl, ch ; ret
0xffffff800035d6bd : add byte ptr [rdx], 0x5d ; ret
0xffffff800067d3f1 : add byte ptr [rdx], ah ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x820f
0xffffff8000788db9 : add byte ptr [rdx], ah ; xor eax, eax ; pop rbp ; ret
0xffffff80006c79f0 : add byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff80007fd8f9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0xffffff80007ab732 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call rax
0xffffff80007ab876 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call rcx
0xffffff8000388d97 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xffffff8000388d47 ; pop rbp ; ret
0xffffff8000701d3b : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, ecx ; pop rbp ; ret
0xffffff80007ab9ae : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov edi, ebx ; call rax
0xffffff800039b885 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000856028 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005f21c6 : add byte ptr [rdx], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x3a9a
0xffffff80004b3793 : add byte ptr [rdx], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006c66e3 : add byte ptr [rdx], al ; add byte ptr [rdi], cl ; ret 0x508d
0xffffff80004aabeb : add byte ptr [rdx], al ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff80005cc3cc : add byte ptr [rdx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007b0941 : add byte ptr [rdx], al ; jl 0xffffff80007b0961 ; call 0xffffff800080cbe6
0xffffff8000550a68 : add byte ptr [rdx], al ; jne 0xffffff8000550a79 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d91f2 : add byte ptr [rdx], al ; jne 0xffffff80008d91fd ; pop rbp ; ret
0xffffff80008e5d6d : add byte ptr [rdx], al ; jne 0xffffff80008e5d7e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e9c22 : add byte ptr [rdx], al ; jne 0xffffff80008e9c33 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fd067 : add byte ptr [rdx], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008517cc : add byte ptr [rdx], bl ; add byte ptr [rcx], dh ; shr al, 0x3a ; ret
0xffffff80003d6658 : add byte ptr [rdx], dl ; add bh, dh ; ret 0
0xffffff80003d660e : add byte ptr [rdx], dl ; add byte ptr [rdi + rcx + 0x45], al ; ret
0xffffff80003d3e6e : add byte ptr [rdx], dl ; add byte ptr [rdi], cl ; ret 0x415b
0xffffff800067d3f0 : add byte ptr [rdx], spl ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x820f
0xffffff800062e0cd : add byte ptr [rip + 0x100000], ah ; pop rbp ; ret
0xffffff80002f5c81 : add byte ptr [rip + 0x415b3575], al ; pop rsi ; pop rbp ; ret
0xffffff800038aba7 : add byte ptr [rip + 0x5a75b5], bl ; pop rbp ; ret
0xffffff80003a289a : add byte ptr [rip + 0x5d000000], al ; ret
0xffffff8000272aea : add byte ptr [rip + 0x5d100040], al ; ret
0xffffff80006b45ff : add byte ptr [rip + 0xfffff], ah ; pop rbp ; ret
0xffffff80008a23ef : add byte ptr [rip - 0x17000000], dl ; ret
0xffffff800038b57f : add byte ptr [rip - 0x27f535], cl ; xchg rsi, rdi ; call rsi
0xffffff80004c8828 : add byte ptr [rip - 0x7cb7568b], al ; ret
0xffffff80008e1f3a : add byte ptr [rsi + 0x148d], bh ; call 0xffffff800028e158
0xffffff8000420666 : add byte ptr [rsi + 0x18], bh ; call 0xffffff800078c8c8
0xffffff8000661e75 : add byte ptr [rsi + 0x1c], bh ; call 0xffffff800010e148
0xffffff80003c1e50 : add byte ptr [rsi + 0x1fa], bh ; call 0xffffff800028e158
0xffffff80003c1e79 : add byte ptr [rsi + 0x1fb], bh ; call 0xffffff800028e158
0xffffff8000331ea1 : add byte ptr [rsi + 0x1fba], bh ; call 0xffffff800028e158
0xffffff80003c1e99 : add byte ptr [rsi + 0x1ff], bh ; call 0xffffff800028e158
0xffffff80007ab730 : add byte ptr [rsi + 0x200], bh ; call rax
0xffffff80007ab874 : add byte ptr [rsi + 0x200], bh ; call rcx
0xffffff8000341f04 : add byte ptr [rsi + 0x210], bh ; call 0xffffff800028e158
0xffffff800066b35c : add byte ptr [rsi + 0x210], bh ; call 0xffffff800028e159
0xffffff8000511e63 : add byte ptr [rsi + 0x210], dil ; call 0xffffff800028e159
0xffffff8000831f01 : add byte ptr [rsi + 0x25d], bh ; call 0xffffff800028e158
0xffffff80005ed969 : add byte ptr [rsi + 0x31], ah ; ret 0xc166
0xffffff8000391f3e : add byte ptr [rsi + 0x39b], bh ; call 0xffffff800028e158
0xffffff80007aac3c : add byte ptr [rsi + 0x400], bh ; call rax
0xffffff8000321eac : add byte ptr [rsi + 0x40a], bh ; call 0xffffff800028e158
0xffffff8000574b8c : add byte ptr [rsi + 0x68], bh ; mov rdi, r13 ; call rax
0xffffff800056f6c2 : add byte ptr [rsi + 0x68], bh ; mov rdi, rbx ; call rax
0xffffff80002d1e65 : add byte ptr [rsi + 0x721], bh ; call 0xffffff800028e158
0xffffff80003aad48 : add byte ptr [rsi + 0x72], dh ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80003a077f : add byte ptr [rsi + 0x7ffffff7], bh ; idiv edi ; jmp rax
0xffffff80008d9201 : add byte ptr [rsi + 0x8000], bh ; pop rbp ; jmp rax
0xffffff80003a1e84 : add byte ptr [rsi + 0x89], bh ; call 0xffffff800028e158
0xffffff8000271ea2 : add byte ptr [rsi + 0xe6e], bh ; call 0xffffff800028e158
0xffffff8000737ea1 : add byte ptr [rsi + 0xf], ah ; enter -0x48f1, -0x3f ; pop rbp ; ret
0xffffff8000622b80 : add byte ptr [rsi + 0xf], ah ; ret 0x4166
0xffffff80004f66fc : add byte ptr [rsi + 0xf], ah ; ret 0xc90f
0xffffff80005a65e7 : add byte ptr [rsi + 1], bh ; call 0xffffff80003928a8
0xffffff80007690a2 : add byte ptr [rsi + 1], bh ; call 0xffffff80003928a9
0xffffff80003a9262 : add byte ptr [rsi + 1], bh ; call rax
0xffffff800052ec82 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rax
0xffffff80006a85c3 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rax
0xffffff80005e94ee : add byte ptr [rsi + 1], bh ; mov rdi, r15 ; call rax
0xffffff8000898876 : add byte ptr [rsi + 1], bh ; pop rbp ; jmp rax
0xffffff800069a3d4 : add byte ptr [rsi + 1], dil ; call rax
0xffffff80005a65e6 : add byte ptr [rsi + 1], r15b ; call 0xffffff80003928a9
0xffffff80005d659d : add byte ptr [rsi + 2], bh ; call 0xffffff80003928a8
0xffffff80007696d7 : add byte ptr [rsi + 2], bh ; call 0xffffff80003928a9
0xffffff800028ed68 : add byte ptr [rsi + 2], bh ; call rax
0xffffff80005cf5d0 : add byte ptr [rsi + 2], bh ; pop rbp ; jmp rax
0xffffff80008e1a60 : add byte ptr [rsi + 3], bh ; pop rbp ; jmp rax
0xffffff800074258e : add byte ptr [rsi + 4], bh ; call 0xffffff8000370bc9
0xffffff80002fa8a3 : add byte ptr [rsi + 4], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80006b5b61 : add byte ptr [rsi + 5], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003381a9 : add byte ptr [rsi + 5], dh ; movzx eax, al ; pop rbp ; ret
0xffffff8000482d83 : add byte ptr [rsi + 6], bh ; call 0xffffff80002bf068
0xffffff80003b879e : add byte ptr [rsi + 7], bh ; call r14
0xffffff8000764c92 : add byte ptr [rsi + 7], dh ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80002f860f : add byte ptr [rsi + 7], dh ; mov eax, 1 ; pop rbp ; ret
0xffffff8000846481 : add byte ptr [rsi + 8], bh ; pop rbp ; jmp rax
0xffffff80007abaf4 : add byte ptr [rsi + rcx - 0x77], dh ; ret 0xe281
0xffffff8000720631 : add byte ptr [rsi + rcx - 0x77], dh ; ret 0xe283
0xffffff80007972a1 : add byte ptr [rsi + rdi - 0x7f], dh ; jmp qword ptr [rax]
0xffffff800037a464 : add byte ptr [rsi + rdi - 0xa], dh ; ret
0xffffff800080e157 : add byte ptr [rsi - 0x10], ah ; xadd dword ptr [rdi], eax ; cwde ; pop rbp ; ret
0xffffff80005e91e5 : add byte ptr [rsi - 0x39], ah ; adc byte ptr [r8], al ; add cl, byte ptr [rax - 0x7d] ; ret
0xffffff80006ca609 : add byte ptr [rsi - 0x39], ah ; ret 0
0xffffff800055d7fa : add byte ptr [rsi - 0x39], ah ; test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff8000262ce0 : add byte ptr [rsi - 0x3f], ah ; ret
0xffffff80005abccc : add byte ptr [rsi - 0x3f], ah ; ret 0x4c08
0xffffff80006773f0 : add byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff80005ac12d : add byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80007a0a1c : add byte ptr [rsi - 0x42], ah ; ret
0xffffff8000743e0d : add byte ptr [rsi - 0x70], ah ; mov edi, dword ptr [rbx] ; call rcx
0xffffff8000389235 : add byte ptr [rsi - 0x72], ah ; shl dword ptr [rsi - 0x72], cl ; ret
0xffffff800070132f : add byte ptr [rsi - 0x75], ah ; push rbx ; adc ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff800070131d : add byte ptr [rsi - 0x75], ah ; push rbx ; adc byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80007012eb : add byte ptr [rsi - 0x75], ah ; push rbx ; or ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80005420e4 : add byte ptr [rsi - 0x75], ah ; ret 0xc166
0xffffff80004eefdf : add byte ptr [rsi - 0x75], ah ; xor ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002aa791 : add byte ptr [rsi - 0x77], ah ; dec byte ptr [rax - 0x7d] ; ret
0xffffff800063829a : add byte ptr [rsi - 0x77], ah ; ret
0xffffff80004c4b5f : add byte ptr [rsi - 0x77], ah ; ret 0x4104
0xffffff80005df0ee : add byte ptr [rsi - 0x77], ah ; ret 0x8b41
0xffffff800066be76 : add byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff80005efb59 : add byte ptr [rsi - 0x77], ah ; xchg byte ptr [rsi + 0x5d000000], cl ; ret
0xffffff80003cb955 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800034c76d : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x94 ; ret 0xa9
0xffffff800084495f : add byte ptr [rsi - 0x7b], ah ; sal byte ptr [rdi + rdx + 0x41], 0x39 ; ret 0x950f
0xffffff80002d4651 : add byte ptr [rsi - 1], ah ; add bh, bh ; ret
0xffffff800029f763 : add byte ptr [rsi - 9], ah ; ret
0xffffff800066f1a8 : add byte ptr [rsi - 9], ah ; ret 0x2006
0xffffff80004d5c4c : add byte ptr [rsi - 9], ah ; ret 0x564
0xffffff80002c7e83 : add byte ptr [rsi - 9], ah ; ret 0x802
0xffffff800032146d : add byte ptr [rsi - 9], ah ; ret 0xfff
0xffffff8000314b0d : add byte ptr [rsi - 9], ah ; ret 0xfff0
0xffffff80003d540a : add byte ptr [rsi*2 + 0x3d8d4c0c], al ; ret
0xffffff800077e053 : add byte ptr [rsi*2 + 0x5dc03102], al ; ret
0xffffff800034dee7 : add byte ptr [rsi*2 + 0x5e415b05], al ; pop rbp ; ret
0xffffff80004d7a1f : add byte ptr [rsi*2 - 0x763fcefe], al ; ret
0xffffff80006c5be8 : add byte ptr [rsi*2 - 0x809cefe], al ; ret 0x8000
0xffffff800063ed21 : add byte ptr [rsi*2 - 0x936ce9b], al ; ret 0x7402
0xffffff8000864750 : add byte ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006240b5 : add byte ptr [rsi], 0xf ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000494ffb : add byte ptr [rsi], al ; add bl, ch ; add eax, 0xff48028a ; ret 0xbe0f
0xffffff8000657a75 : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800086993f : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c2bfb : add byte ptr [rsi], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80006a737c : add byte ptr [rsi], al ; add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb9
0xffffff8000272af6 : add byte ptr [rsi], al ; add byte ptr [rax], dl ; pop rbp ; ret
0xffffff80005f038f : add byte ptr [rsi], bl ; add bh, dh ; ret
0xffffff80007b228e : add byte ptr [rsi], dl ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80007b2236 : add byte ptr [rsi], dl ; add byte ptr [rax + 1], cl ; ret
0xffffff800059cdf4 : add byte ptr [rsp + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800084e652 : add byte ptr [rsp + rax + 0x48], dh ; add eax, 0x10 ; pop rbp ; ret
0xffffff8000815829 : add byte ptr [rsp + rax + 0x48], dh ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80004b3cac : add byte ptr [rsp + rax + 0x48], dh ; mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80003d5f5a : add byte ptr [rsp + rax - 0x80], dh ; add qword ptr [rax + 0x5d], r8 ; ret
0xffffff8000252d1a : add byte ptr [rsp + rax - 1], dh ; ret
0xffffff800070917e : add byte ptr [rsp + rax - 1], dh ; ret 0xd689
0xffffff80007972b3 : add byte ptr [rsp + rbp - 0x7f], dh ; call qword ptr [rax]
0xffffff800038765c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0xffffff80006dd5a2 : add byte ptr cs:[rax - 0x77], cl ; ret
0xffffff80007f53be : add byte ptr cs:[rax - 0x77], cl ; ret 0x18e8
0xffffff80007fe38e : add byte ptr cs:[rax - 0x77], cl ; ret 0x48e8
0xffffff80007b388e : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002ea42c : add byte ptr cs:[rax], al ; add byte ptr [rdi], cl ; ret 0x589
0xffffff80007fdb1e : add byte ptr cs:[rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007fcfcb : add byte ptr cs:[rcx], al ; pop rbp ; ret
0xffffff80007480a1 : add byte ptr ds:[rax - 0x7d], cl ; ret
0xffffff8000691bba : add byte ptr ds:[rbx + 0x3e263a05], cl ; add byte ptr [rcx], bh ; ret 0x6376
0xffffff80006908da : add byte ptr ds:[rcx], bh ; ret
0xffffff8000691bc0 : add byte ptr ds:[rcx], bh ; ret 0x6376
0xffffff8000880ec3 : add byte ptr es:[rax + 0x39], cl ; ret
0xffffff80008cb31a : add byte ptr es:[rax + 0x5d], bh ; ret
0xffffff80007aaba5 : add byte ptr es:[rax - 0x77], cl ; adc al, 8 ; pop rbp ; ret
0xffffff80004e36aa : add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80008cb149 : add byte ptr es:[rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0xffffff80008ca9c7 : add byte ptr es:[rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0xffffff80008cc0f4 : add byte ptr es:[rax - 0x7d], cl ; ret
0xffffff8000875ad6 : add byte ptr es:[rax - 0x7f], cl ; ret 0x238
0xffffff80003084ab : add byte ptr es:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800030847f : add byte ptr es:[rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80008d17ef : add byte ptr es:[rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800087e544 : add byte ptr es:[rcx + rcx*4 - 0x12], al ; call rax
0xffffff80008c98a6 : add byte ptr es:[rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000487e69 : add byte ptr fs:[rax + 0xf], cl ; ret
0xffffff80002fe91a : add byte ptr fs:[rax - 0x77], cl ; fsubp st(0) ; in al, dx ; ret 0xfff9
0xffffff8000486fc4 : add byte ptr fs:[rax - 0x77], cl ; ret 0x32e8
0xffffff8000493834 : add byte ptr fs:[rax - 0x7d], cl ; ret 0x3108
0xffffff80004897ad : add byte ptr fs:[rax - 1], cl ; ret
0xffffff80002eabd1 : add byte ptr fs:[rax], 0x5d ; ret
0xffffff8000757b35 : add byte ptr fs:[rax], ah ; xor ecx, ecx ; call r15
0xffffff80007580c1 : add byte ptr fs:[rax], ah ; xor ecx, ecx ; call rbx
0xffffff80005ec5d8 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002bd363 : add byte ptr fs:[rbx + 0x3938b044], cl ; ret 0x4d0f
0xffffff8000301f24 : add byte ptr fs:[rcx], dh ; ror byte ptr [rax - 0x77], 0xde ; call 0xffffff800028e1b9
0xffffff80003a1e83 : add byte ptr fs:[rsi + 0x89], bh ; call 0xffffff800028e159
0xffffff80006a5d50 : add byte ptr gs:[r8 - 0x77], cl ; fsubp st(0) ; xchg eax, ebp ; int1 ; ret 0x41ff
0xffffff8000482bc9 : add byte ptr gs:[rax - 0x73], cl ; push rsp ; ret
0xffffff80004bb70e : add byte ptr gs:[rax - 1], cl ; ret
0xffffff80004c67e9 : add byte ptr gs:[rbp - 0x17], bl ; ret 0xffec
0xffffff80003efdcf : add byte ptr gs:[rcx - 0x75], 0x1c ; and al, 0xf6 ; ret
0xffffff8000482995 : add byte ptr gs:[rcx], dh ; imul al ; ret 0xf15b
0xffffff8000445e76 : add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff800044c716 : add byte ptr ss:[rax - 0x77], cl ; ret 0x8548
0xffffff80007d24a5 : add byte ptr ss:[rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000439a9d : add byte ptr ss:[rcx], ch ; ret
0xffffff8000658952 : add byte ptr ss:[rcx], dh ; shr al, 0x55 ; pop rax ; ret
0xffffff8000658801 : add byte ptr ss:[rcx], dh ; shr al, 0xa6 ; pop rcx ; ret
0xffffff800025b187 : add ch, al ; ret
0xffffff80003000e5 : add ch, bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008f2494 : add ch, bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800073c786 : add ch, bl ; add eax, dword ptr [rbx - 0x3776fc3f] ; pop rbp ; ret
0xffffff80004e2de7 : add ch, bl ; inc dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call 0xffffff800075f019
0xffffff800046f04f : add ch, bl ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff800025d96f : add ch, bl ; or cl, byte ptr [rax - 0x7d] ; ret 0xeb03
0xffffff8000831dea : add ch, byte ptr [rcx - 0x4a] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002a0f6a : add ch, byte ptr [rcx - 1] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000584388 : add ch, byte ptr [rcx] ; ret
0xffffff8000b4a2c4 : add ch, byte ptr [rcx] ; ret 0x2144
0xffffff800069decb : add ch, cl ; idiv bh ; jmp rsp
0xffffff80002bb889 : add cl, al ; call 0xffffff7fc1ee4199
0xffffff80007cde6d : add cl, al ; jmp 0xffffff7f8a3de789
0xffffff80008cb03b : add cl, al ; loopne 0xffffff80008cb049 ; pop rbp ; ret
0xffffff80008cb03a : add cl, al ; loopne 0xffffff80008cb04a ; pop rbp ; ret
0xffffff80008cb136 : add cl, al ; loopne 0xffffff80008cb144 ; lea eax, [rax + rax*2] ; pop rbp ; ret
0xffffff80008cb135 : add cl, al ; loopne 0xffffff80008cb145 ; lea eax, [rax + rax*2] ; pop rbp ; ret
0xffffff80003a8d69 : add cl, al ; out 0x18, al ; mov edi, 0xd ; call rax
0xffffff80003a8daa : add cl, al ; out 4, eax ; mov dword ptr [rax + rdi], esi ; pop rbp ; ret
0xffffff80003a8d8a : add cl, al ; out 4, eax ; mov eax, dword ptr [rax + rdi] ; pop rbp ; ret
0xffffff80002fe074 : add cl, bh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004cc424 : add cl, bpl ; ret 0
0xffffff80006d802d : add cl, byte ptr [r9 - 0x7d] ; ret
0xffffff800036b553 : add cl, byte ptr [rax + 0x21] ; ret
0xffffff8000259fc0 : add cl, byte ptr [rax + 0x21] ; ret 0xc748
0xffffff800040bf60 : add cl, byte ptr [rax + 0x63] ; ret
0xffffff80007bf707 : add cl, byte ptr [rax + 0x6b] ; ret 0x3164
0xffffff8000b4b9fc : add cl, byte ptr [rax + 0x6b] ; ret 0x4c42
0xffffff8000589a66 : add cl, byte ptr [rax + 0xf] ; ret 0x8566
0xffffff800044e7f9 : add cl, byte ptr [rax + 0xf] ; ret 0x8949
0xffffff80003b2e1e : add cl, byte ptr [rax + 1] ; ret 0x8d4c
0xffffff80004b5e95 : add cl, byte ptr [rax + rax - 0x18] ; ret
0xffffff800071e5b1 : add cl, byte ptr [rax - 0x39] ; ret 0xfffe
0xffffff80003932d1 : add cl, byte ptr [rax - 0x39] ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0xffffff8000856bbd : add cl, byte ptr [rax - 0x3e49f03f] ; pop rbp ; ret
0xffffff80002a16fe : add cl, byte ptr [rax - 0x3f49f038] ; pop rbp ; ret
0xffffff80002caf09 : add cl, byte ptr [rax - 0x46] ; ret
0xffffff80002bb332 : add cl, byte ptr [rax - 0x47] ; ret
0xffffff8000410d59 : add cl, byte ptr [rax - 0x75] ; or byte ptr [rax - 0x77], cl ; ret 0xe95d
0xffffff800031b2b2 : add cl, byte ptr [rax - 0x75] ; push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8949
0xffffff80006c65aa : add cl, byte ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80007aef40 : add cl, byte ptr [rax - 0x77] ; clc ; je 0xffffff80007aef51 ; xor eax, eax ; pop rbp ; ret
0xffffff80008cbcb5 : add cl, byte ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0x8302
0xffffff800027fb6d : add cl, byte ptr [rax - 0x77] ; ret
0xffffff8000857732 : add cl, byte ptr [rax - 0x77] ; ret 0x2948
0xffffff800066a1c5 : add cl, byte ptr [rax - 0x77] ; ret 0x8b4c
0xffffff80006a77a5 : add cl, byte ptr [rax - 0x77] ; ret 0x8d48
0xffffff80008e04d4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0xffffff80006b48d2 : add cl, byte ptr [rax - 0x77] ; ret 0xf48
0xffffff80006d7bae : add cl, byte ptr [rax - 0x7d] ; mov byte ptr [rcx + rax*2], 0xff ; ret 0x8944
0xffffff800032b808 : add cl, byte ptr [rax - 0x7d] ; ret
0xffffff80004056c5 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0xffffff8000876152 : add cl, byte ptr [rax - 0x7d] ; ret 0x4838
0xffffff800071e857 : add cl, byte ptr [rax - 0x7d] ; ret 0x66fe
0xffffff8000487241 : add cl, byte ptr [rax - 0x7d] ; ret 0x8302
0xffffff80003a8b29 : add cl, byte ptr [rax - 0x7d] ; ret 0x8310
0xffffff800029d766 : add cl, byte ptr [rax - 0x7d] ; ret 0xf02
0xffffff8000366d6f : add cl, byte ptr [rax - 1] ; ret
0xffffff80004206c5 : add cl, byte ptr [rax - 1] ; ret 0x14c
0xffffff80004842ad : add cl, byte ptr [rax - 1] ; ret 0x8948
0xffffff800084eedc : add cl, byte ptr [rax - 1] ; ret 0x8949
0xffffff80005085f4 : add cl, byte ptr [rax - 1] ; ret 0xb60f
0xffffff8000495001 : add cl, byte ptr [rax - 1] ; ret 0xbe0f
0xffffff80008e6809 : add cl, byte ptr [rax - 1] ; ret 0xc084
0xffffff8000366a95 : add cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff80006cafb3 : add cl, byte ptr [rax - 1] ; ret 0xff66
0xffffff800089b7a1 : add cl, byte ptr [rax] ; pop rbp ; ret
0xffffff800066d9aa : add cl, byte ptr [rax] ; ret 0x4cff
0xffffff8000366d68 : add cl, byte ptr [rbp - 0x77] ; ret
0xffffff80008344ff : add cl, byte ptr [rbp - 0x7c2f82] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret
0xffffff8000574d7f : add cl, byte ptr [rbx - 0x49f0bbf8] ; ret
0xffffff800025dc8e : add cl, byte ptr [rcx + 0x1b806] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b49169 : add cl, byte ptr [rcx + 0x21] ; ret 0x3149
0xffffff8000617ed3 : add cl, byte ptr [rcx + 0x58b584b] ; ret
0xffffff800089bdfc : add cl, byte ptr [rcx + 0x5d080274] ; ret
0xffffff8000541065 : add cl, byte ptr [rcx + 0x5dc03101] ; ret
0xffffff80006e176b : add cl, byte ptr [rcx + 0x5dc03106] ; ret
0xffffff80007aefdc : add cl, byte ptr [rcx + rcx*4 - 0x30] ; je 0xffffff80007aefed ; xor eax, eax ; pop rbp ; ret
0xffffff80005e008a : add cl, byte ptr [rcx + rcx*4 - 0x38] ; pop rbp ; ret
0xffffff800076653c : add cl, byte ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e7
0xffffff80007c3928 : add cl, byte ptr [rcx - 0x3b7cb738] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800025b93c : add cl, byte ptr [rcx - 0x3b7cb738] ; pop rbx ; pop rbp ; ret
0xffffff800074a784 : add cl, byte ptr [rcx - 0x48] ; ret
0xffffff8000725991 : add cl, byte ptr [rcx - 0x77] ; je 0xffffff800072599f ; or bh, bh ; ret 0x5589
0xffffff80006d23f9 : add cl, byte ptr [rcx - 0x7cb7f5bd] ; ret
0xffffff80006d802e : add cl, byte ptr [rcx - 0x7d] ; ret
0xffffff800048736d : add cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0xffffff8000716436 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4402
0xffffff80008507e5 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4803
0xffffff800054e23a : add cl, byte ptr [rcx - 0x7d] ; ret 0xf02
0xffffff8000850944 : add cl, byte ptr [rcx - 1] ; ret 0x12e9
0xffffff80004ee7df : add cl, byte ptr [rcx - 1] ; ret 0x3b4c
0xffffff80008507c2 : add cl, byte ptr [rcx - 1] ; ret 0x94e9
0xffffff80008507af : add cl, byte ptr [rcx - 1] ; ret 0xfb83
0xffffff80007a0852 : add cl, byte ptr [rcx] ; ret
0xffffff8000700a35 : add cl, byte ptr [rcx] ; ret 0x8948
0xffffff8000389045 : add cl, byte ptr [rdi] ; and al, ah ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff80005f49a7 : add cl, byte ptr [rdi] ; lahf ; ret 0x7eb
0xffffff80004f8900 : add cl, byte ptr [rdi] ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000461782 : add cl, byte ptr [rdi] ; ret
0xffffff80004571c3 : add cl, byte ptr [rdi] ; ret 0x19eb
0xffffff8000318a1f : add cl, byte ptr [rdi] ; ret 0x4389
0xffffff8000316bcf : add cl, byte ptr [rdi] ; ret 0x4689
0xffffff80006c6752 : add cl, byte ptr [rdi] ; ret 0x508d
0xffffff80007a0e03 : add cl, byte ptr [rdi] ; ret 0x57eb
0xffffff80007cde64 : add cl, byte ptr [rdi] ; ret 0xe181
0xffffff800032606b : add cl, byte ptr [rdi] ; ret 0xf225
0xffffff8000618544 : add cl, byte ptr [rdi] ; test dh, dh ; sbb eax, 0x3d830000 ; ret 0x50c4
0xffffff80005b9d83 : add cl, byte ptr [rdi] ; test dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80005b0007 : add cl, byte ptr [rdi] ; test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800074e102 : add cl, byte ptr [rdi] ; test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf0c
0xffffff80007a5c1a : add cl, byte ptr [rdi] ; test ebp, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0xffffff80006159a5 : add cl, byte ptr [rdi] ; test ebx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800067346e : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0xffffff800046adcd : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xb60f
0xffffff8000533597 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000468eb1 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80003d49b8 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xc031
0xffffff80002a37f8 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xc085
0xffffff800058816f : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xf44
0xffffff800056b7e7 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xf883
0xffffff8000306092 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; fdivr st(7) ; ret
0xffffff8000737654 : add cl, byte ptr [rdx - 0x3d49f0f0] ; pop rbp ; ret
0xffffff800066733b : add cl, ch ; add al, 0x27 ; add byte ptr [rax], al ; call 0xffffff800028e1b9
0xffffff80002d2ffc : add cl, ch ; add byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000760be9 : add cl, ch ; add dword ptr [rax], 0xb70f0000 ; ret 0xf883
0xffffff800048e23b : add cl, ch ; call qword ptr [rsi]
0xffffff80003d12bf : add cl, ch ; cmc ; ret
0xffffff80007336b0 : add cl, ch ; int1 ; ret 0xffff
0xffffff800038871f : add cl, ch ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000288e6e : add cl, ch ; mov ebx, 0x89000000 ; ret 0xe281
0xffffff80004294e2 : add cl, ch ; mov ecx, 0xe8fffff4 ; ret
0xffffff80003c839c : add cl, ch ; mov edx, 0x81000019 ; ret
0xffffff800064bd1a : add cl, ch ; popfq ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35b8
0xffffff800025c361 : add cl, ch ; ret
0xffffff800046d783 : add cl, ch ; ret 0
0xffffff80005244dc : add cl, ch ; ret 0xf
0xffffff80003c5069 : add cl, ch ; ret 0xffef
0xffffff8000465353 : add cl, ch ; ret 0xfffa
0xffffff800037b9db : add cl, ch ; ret 0xfffc
0xffffff800027357a : add cl, ch ; ret 0xfffe
0xffffff800067fd50 : add cl, ch ; ret 1
0xffffff8000443444 : add cl, ch ; ret 2
0xffffff80006d55d6 : add cl, ch ; ret 3
0xffffff800043979d : add cl, ch ; ret 5
0xffffff800065428a : add cl, ch ; ret 8
0xffffff80007eb871 : add cl, ch ; stc ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80005bac9a : add cl, ch ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b4d
0xffffff80003925a4 : add cl, cl ; mov eax, 1 ; ret
0xffffff8000392d6a : add cl, cl ; mov rax, 1 ; ret
0xffffff8000392528 : add cl, cl ; ret
0xffffff800029aa89 : add cl, dl ; call 0xffffff7f892b8b1c
0xffffff800026ac0d : add cl, r13b ; ret
0xffffff80002e6ad7 : add cl, r13b ; ret 0xfffe
0xffffff8000273d6a : add dh, al ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000491276 : add dh, al ; ret
0xffffff800056b079 : add dh, al ; ret 0x4402
0xffffff8000491272 : add dh, al ; ret 0xc600
0xffffff800049126e : add dh, al ; rol dword ptr [r8], 0xc6 ; ret 0xc600
0xffffff80005b6aca : add dh, al ; xchg dword ptr [rdi], ebx ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002b7b38 : add dh, bh ; add byte ptr [rbp - 0x38bbf001], al ; pop rbp ; ret
0xffffff800038936e : add dh, bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000831357 : add dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000422db0 : add dh, bh ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002bbe71 : add dh, bh ; pop rbp ; ret
0xffffff8000455a2b : add dh, bh ; ret
0xffffff80006f8533 : add dh, bh ; ret 0
0xffffff80006281aa : add dh, bh ; ret 0x8841
0xffffff800043e7d9 : add dh, bh ; ret 0xb60f
0xffffff80004bc47a : add dh, byte ptr [rax - 0x13] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007ef89a : add dh, byte ptr [rax - 0x3f49f0fe] ; pop rbp ; ret
0xffffff80002f308a : add dh, byte ptr [rax] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066db09 : add dh, byte ptr [rax] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4902
0xffffff80004aa738 : add dh, byte ptr [rax] ; ret 0x2874
0xffffff80004aa753 : add dh, byte ptr [rax] ; ret 0x4374
0xffffff8000719a68 : add dh, byte ptr [rbp + 0x11] ; movzx edx, byte ptr [rbx] ; inc rdx ; jmp 0xffffff8000719a8b
0xffffff800077d285 : add dh, byte ptr [rbp + 0x11] ; pop rbp ; ret
0xffffff8000512e80 : add dh, byte ptr [rbp + 0x1b] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000719a50 : add dh, byte ptr [rbp + 0x20] ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000719a8e
0xffffff800071adb2 : add dh, byte ptr [rbp + 0x24] ; movzx edx, byte ptr [r15] ; inc rdx ; jmp 0xffffff800071adea
0xffffff800054f3e7 : add dh, byte ptr [rbp + 0xa] ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000316463 : add dh, byte ptr [rbp + 0xa] ; test ah, 0x80 ; sete dl ; jmp 0xffffff800031647a
0xffffff8000397d2d : add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff80004a6454 : add dh, byte ptr [rbp + 2] ; xor eax, eax ; pop rbp ; ret
0xffffff8000755ec8 : add dh, byte ptr [rbp + 5] ; mov rax, rsi ; pop rbp ; ret
0xffffff80003e7db2 : add dh, byte ptr [rbp + 5] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000582563 : add dh, byte ptr [rbp + 6] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800040c8a6 : add dh, byte ptr [rbp + 7] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000584f4e : add dh, byte ptr [rbp + rdi + 0x5d] ; ret
0xffffff80007b8103 : add dh, byte ptr [rbp + rdx + 0x29] ; lock add dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff80004239f7 : add dh, byte ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000737865 : add dh, byte ptr [rbx + rax + 0xf] ; mov bh, 0x10 ; movzx eax, dx ; pop rbp ; ret
0xffffff80007b8115 : add dh, byte ptr [rbx + rax + 1] ; ja 0xffffff80007b8152 ; pop rbp ; ret
0xffffff80008e4946 : add dh, byte ptr [rbx + rbx - 0x77] ; ret 0xead1
0xffffff80002ed2da : add dh, byte ptr [rbx - 0x7cb7fff6] ; ret
0xffffff80006c5beb : add dh, byte ptr [rcx] ; div bh ; ret 0x8000
0xffffff8000303b03 : add dh, byte ptr [rcx] ; div byte ptr [rcx] ; shr al, cl ; ret
0xffffff80008881ad : add dh, byte ptr [rcx] ; fisttp dword ptr [rax + 0x5e415bd8] ; pop rbp ; ret
0xffffff80002518e2 : add dh, byte ptr [rcx] ; leave ; mov eax, ecx ; pop rbp ; ret
0xffffff80002f7c36 : add dh, byte ptr [rcx] ; leave ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff8000268eca : add dh, byte ptr [rcx] ; leave ; movzx eax, cl ; pop rbp ; ret
0xffffff80002679a5 : add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800050d5be : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; js 0xffffff800050d62a ; pop rbp ; ret
0xffffff800050d64d : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; js 0xffffff800050d6b9 ; pop rbp ; ret
0xffffff80002ae833 : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000708e1c : add dh, byte ptr [rcx] ; ror byte ptr [rcx - 0x75], 0x57 ; or byte ptr [rax - 9], cl ; ret 0xf07f
0xffffff80007e0fa9 : add dh, byte ptr [rsi + 7] ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80006d04f9 : add dh, byte ptr [rsi + 7] ; mov eax, 1 ; pop rbp ; ret
0xffffff800065abaa : add dh, byte ptr [rsi] ; ret
0xffffff80003ad4b2 : add dh, byte ptr [rsp + rcx*4 - 0x15] ; mov dword ptr [rcx + rcx*4 - 9], ecx ; call r15
0xffffff80008d2d43 : add dh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025e8af : add dh, dh ; ret
0xffffff80003a0c6f : add dh, dh ; ret 0x4801
0xffffff8000649a10 : add dh, dh ; ret 0x4840
0xffffff800040edce : add dh, dh ; ret 0x4c08
0xffffff800040ee89 : add dh, dh ; ret 0x4d08
0xffffff80003025c6 : add dh, dh ; ret 0x7401
0xffffff80004e807d : add dh, dh ; ret 0x7402
0xffffff800044b7a5 : add dh, dh ; ret 0x7404
0xffffff80006407ff : add dh, dh ; ret 0x7406
0xffffff800028fabf : add dh, dh ; ret 0x7407
0xffffff8000611e56 : add dh, dh ; ret 0x7408
0xffffff80005df5ed : add dh, dh ; ret 0x7410
0xffffff8000457159 : add dh, dh ; ret 0x7420
0xffffff800059e76e : add dh, dh ; ret 0x7480
0xffffff8000414259 : add dh, dh ; ret 0x7501
0xffffff80003b52ec : add dh, dh ; ret 0x7502
0xffffff80004dbb06 : add dh, dh ; ret 0x7503
0xffffff8000525efd : add dh, dh ; ret 0x7504
0xffffff8000336c25 : add dh, dh ; ret 0x7506
0xffffff8000525ef3 : add dh, dh ; ret 0x7508
0xffffff80002c9cde : add dh, dh ; ret 0x7510
0xffffff800066cf4c : add dh, dh ; ret 0x7520
0xffffff80004cd2a2 : add dh, dh ; ret 0x7534
0xffffff8000294a13 : add dh, dh ; ret 0x7540
0xffffff80005c29ba : add dh, dh ; ret 0x7580
0xffffff8000261931 : add dh, dh ; ret 0xb901
0xffffff80002a9288 : add dh, dh ; ret 0xf01
0xffffff800044931a : add dh, dh ; ret 0xf02
0xffffff800058a8c6 : add dh, dh ; ret 0xf04
0xffffff800071c442 : add dh, dh ; ret 0xf08
0xffffff800074e108 : add dh, dh ; ret 0xf0c
0xffffff800064e479 : add dh, dh ; ret 0xf10
0xffffff800071c41c : add dh, dh ; ret 0xf20
0xffffff800071c409 : add dh, dh ; ret 0xf40
0xffffff8000627ece : add dh, dh ; ret 0xf80
0xffffff800040e70d : add dh, dh ; ret 0xf82
0xffffff80004c09fc : add dh, dh ; ret 0xf90
0xffffff80006d4b57 : add dh, dh ; rol dword ptr [rcx], 0x89 ; ret 0xe75
0xffffff80007a0e00 : add dh, dh ; rol dword ptr [rdx], 0xf ; ret 0x57eb
0xffffff80002c02f9 : add dh, dh ; shl byte ptr [rcx + rax], 1 ; movzx eax, al ; pop rbp ; ret
0xffffff80006015e7 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0xffffff80006f7373 : add dh, dh ; test eax, edx ; idiv edi ; jmp qword ptr [rax]
0xffffff80003b281e : add dil, dil ; enter -0x638b, 0x5d ; ret
0xffffff8000268c4e : add dil, dil ; ret
0xffffff800053a4fe : add dil, dil ; ret 0x8b4d
0xffffff800026c296 : add dl, al ; jmp 0xffffff800026c2a6
0xffffff800026c76c : add dl, al ; jmp 0xffffff800026c77c
0xffffff80005327c9 : add dl, al ; jmp 0xffffff80005327d9
0xffffff8000624c3d : add dl, bh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007a0dfd : add dl, byte ptr [rax] ; add byte ptr [rax], al ; test cl, 2 ; cmove eax, edx ; jmp 0xffffff80007a0e69
0xffffff80004bf75a : add dl, byte ptr [rbp - 0x7cb70019] ; ret
0xffffff800069f75a : add dl, byte ptr [rbx + 0x11] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800083df10 : add dl, byte ptr [rdi + 0x17] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002bbbbd : add dl, cl ; call 0xffffff7fb63b7d55
0xffffff800076d8e0 : add dl, dh ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000393049
0xffffff800066e932 : add dl, dl ; jns 0xffffff800066e935 ; pop rbp ; ret
0xffffff8000682ffe : add dl, dl ; js 0xffffff8000683003 ; jmp 0xffffff800068300e
0xffffff80004fa73f : add dword ptr [r13 + 2], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800052966f : add dword ptr [r15], r9d ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff800045669a : add dword ptr [r8 - 1], ecx ; ret
0xffffff80002e9b84 : add dword ptr [r8], eax ; add al, ch ; ret
0xffffff800083d36d : add dword ptr [r8], r8d ; add byte ptr [rbx - 0x6af0ffc7], al ; ret 0x2b0
0xffffff80006f7370 : add dword ptr [r8], r8d ; add dh, dh ; test eax, edx ; idiv edi ; jmp qword ptr [rax]
0xffffff8000775773 : add dword ptr [r8], r8d ; jmp 0xffffff8000775783
0xffffff800029c295 : add dword ptr [r9 - 0x77], eax ; ret
0xffffff80008507be : add dword ptr [r9 - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0x94e9
0xffffff8000451f25 : add dword ptr [r9 - 0x7d], r8d ; call qword ptr [rax]
0xffffff800061f2dc : add dword ptr [r9], ebp ; ret
0xffffff80006d4b66 : add dword ptr [rax + 0x13b8b], ecx ; add dh, dh ; ret 0x7401
0xffffff800063c878 : add dword ptr [rax + 0x18], edx ; pop rbp ; ret
0xffffff80003c2c60 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax + 9], 0xc8 ; pop rbp ; ret
0xffffff8000259fce : add dword ptr [rax + 0x21], ecx ; ret 0xc748
0xffffff800085b723 : add dword ptr [rax + 0x39], ecx ; ret
0xffffff8000451fca : add dword ptr [rax + 0x39], ecx ; ret 0xf07c
0xffffff800081e99c : add dword ptr [rax + 0x39], ecx ; sar dword ptr [rsi + 2], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff8000497ad7 : add dword ptr [rax + 0x48000000], -1 ; ret 0x8348
0xffffff8000369d61 : add dword ptr [rax + 0x48], esp ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000369d60 : add dword ptr [rax + 0x48], r12d ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800039a68e : add dword ptr [rax + 0x4a0], edi ; pop rbp ; ret
0xffffff80006df9e4 : add dword ptr [rax + 0x554], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003d5f5f : add dword ptr [rax + 0x5d], eax ; ret
0xffffff80004a23e1 : add dword ptr [rax + 0x63], ecx ; ror dword ptr [rax - 0x75], 4 ; ret 0x4865
0xffffff800049ea4b : add dword ptr [rax + 0xf], ecx ; clc ; mov rax, rdi ; pop rbp ; ret
0xffffff80008d2325 : add dword ptr [rax + 1], ecx ; ret
0xffffff80004f2ddd : add dword ptr [rax + 1], ecx ; ret 0x858b
0xffffff80004f2feb : add dword ptr [rax + 1], ecx ; ret 0x8948
0xffffff8000265dfd : add dword ptr [rax + 1], edi ; pop rbp ; ret
0xffffff800063c8e1 : add dword ptr [rax + 8], edx ; pop rbp ; ret
0xffffff80003c9c11 : add dword ptr [rax + rax*8 - 0x7cb7f98b], eax ; call qword ptr [rax]
0xffffff8000483233 : add dword ptr [rax + rax*8 - 0xb7de8c], eax ; ret
0xffffff8000402d3e : add dword ptr [rax + rax], -0x77 ; ret
0xffffff80004933e1 : add dword ptr [rax + rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002a0b32 : add dword ptr [rax + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80007a3d15 : add dword ptr [rax + rcx - 0x18], esi ; ret
0xffffff8000379ea7 : add dword ptr [rax + rcx - 0x77], esi ; ret 0xd2f7
0xffffff8000388e16 : add dword ptr [rax + rcx*2 - 0x7b], esi ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc084
0xffffff800088cf7f : add dword ptr [rax + rcx*4 - 0x10], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800070743b : add dword ptr [rax + rcx*8 + 0x5e415bff], edi ; pop rbp ; ret
0xffffff8000b4436d : add dword ptr [rax + rdx], esi ; ret 0x48a
0xffffff80005fc224 : add dword ptr [rax - 0x1786b], ecx ; jmp qword ptr [rax]
0xffffff80002a2a0e : add dword ptr [rax - 0x39], ecx ; ret 0xfffe
0xffffff80002a3793 : add dword ptr [rax - 0x39], ecx ; ret 0xffff
0xffffff80008b72ab : add dword ptr [rax - 0x3b7cb7ff], esi ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800071bf47 : add dword ptr [rax - 0x3fcee7be], ecx ; pop rbp ; ret
0xffffff8000698a27 : add dword ptr [rax - 0x75], ecx ; cmp byte ptr [r8 + 0x39], cl ; ret 0x1573
0xffffff800059c0ee : add dword ptr [rax - 0x75], ecx ; sbb byte ptr [r8 - 0x77], r9b ; ret
0xffffff800053a8a5 : add dword ptr [rax - 0x75], ecx ; shr r11b, 1 ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0xffffff80008caa3c : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rax - 0x77], r9b ; ret 0x1774
0xffffff800032834f : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rax - 0x77], r9b ; ret 0x1874
0xffffff8000530e32 : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff80005bf6b4 : add dword ptr [rax - 0x77], ecx ; and byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff800073956b : add dword ptr [rax - 0x77], ecx ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000725b9c : add dword ptr [rax - 0x77], ecx ; je 0xffffff8000725ba9 ; or bh, bh ; ret 0x5589
0xffffff80007f40b2 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800089897e : add dword ptr [rax - 0x77], ecx ; push rsp ; add dword ptr [rax], ecx ; mov al, 1 ; pop rbp ; ret
0xffffff80002d8907 : add dword ptr [rax - 0x77], ecx ; ret
0xffffff800076efb3 : add dword ptr [rax - 0x77], ecx ; ret 0x6eb
0xffffff80007850f8 : add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0xffffff80004ee9b3 : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0xffffff80008c774f : add dword ptr [rax - 0x77], ecx ; sub byte ptr [rax - 0x77], r9b ; ret 0x1874
0xffffff80005b1fc2 : add dword ptr [rax - 0x77], ecx ; sub byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff8000383812 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rdi + rdx + 0x48], 0x89 ; ret
0xffffff8000374988 : add dword ptr [rax - 0x7d], ecx ; mov byte ptr [rdx], 0x83 ; ret 0x4810
0xffffff800029e06d : add dword ptr [rax - 0x7d], ecx ; ret
0xffffff8000729287 : add dword ptr [rax - 0x7d], ecx ; ret 0x4110
0xffffff800083883a : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0xffffff80005cb4a9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0xffffff800075356c : add dword ptr [rax - 0x7d], ecx ; ret 0x48f7
0xffffff8000839263 : add dword ptr [rax - 0x7f], ecx ; ret
0xffffff800045669b : add dword ptr [rax - 1], ecx ; ret
0xffffff80002636b3 : add dword ptr [rax - 1], ecx ; ret 0x1c88
0xffffff800066b642 : add dword ptr [rax - 1], ecx ; ret 0x3948
0xffffff80006ee721 : add dword ptr [rax - 1], ecx ; ret 0x3b48
0xffffff80004840a5 : add dword ptr [rax - 1], ecx ; ret 0x4288
0xffffff8000254792 : add dword ptr [rax - 1], ecx ; ret 0x4c81
0xffffff800026462b : add dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff800084e8cc : add dword ptr [rax - 1], ecx ; ret 0x8445
0xffffff800085fc63 : add dword ptr [rax - 1], ecx ; ret 0xb60f
0xffffff800059e942 : add dword ptr [rax - 1], ecx ; ret 0xc084
0xffffff800029d63c : add dword ptr [rax - 1], ecx ; ret 0xc188
0xffffff80005cb470 : add dword ptr [rax - 1], ecx ; ret 0xc6ff
0xffffff80005b3722 : add dword ptr [rax - 1], ecx ; ret 0xc984
0xffffff8000848920 : add dword ptr [rax - 1], ecx ; ret 0xdb84
0xffffff8000807ed9 : add dword ptr [rax - 1], ecx ; ror dword ptr [rax - 0x77], 0xf ; pop rbp ; ret
0xffffff80008ec0d2 : add dword ptr [rax - 1], ecx ; ror dword ptr [rdi], 0xb6 ; ret
0xffffff80005120f6 : add dword ptr [rax - 1], esi ; ret 0x6348
0xffffff8000269117 : add dword ptr [rax], -0x18 ; ret 0x1292
0xffffff8000265cb2 : add dword ptr [rax], -0x7b ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff80002667cc : add dword ptr [rax], -0x7c ; sal byte ptr [rbx + rdx + 0x31], 0xc0 ; pop rbp ; ret
0xffffff8000262ff0 : add dword ptr [rax], -0x7d ; ret
0xffffff8000272d27 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000671e22 : add dword ptr [rax], 0 ; add byte ptr [rcx], dh ; shr al, 0x83 ; ret
0xffffff8000265dcd : add dword ptr [rax], 0 ; pop rbp ; ret
0xffffff8000298e35 : add dword ptr [rax], 0x39480000 ; ret 0x8e0f
0xffffff80002dc1e2 : add dword ptr [rax], 0x415bc031 ; pop rsi ; pop rbp ; ret
0xffffff80002b7174 : add dword ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002632b8 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff8000263317 ; call rax
0xffffff8000265378 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002653f7 ; call rax
0xffffff8000265595 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002655a9 ; xor edi, edi ; call rax
0xffffff80002656be : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026571a ; call rax
0xffffff8000265a20 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff8000265a72 ; call rax
0xffffff8000265c50 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff8000265ca7 ; call rax
0xffffff8000266133 : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026618a ; call rax
0xffffff80002661be : add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026621a ; call rax
0xffffff80002626a0 : add dword ptr [rax], 0x5d ; ret
0xffffff800028a815 : add dword ptr [rax], 0x5d5e415b ; ret
0xffffff8000501aab : add dword ptr [rax], 0x63480000 ; ret 0x8d48
0xffffff8000365aac : add dword ptr [rax], 0x830f0000 ; ret
0xffffff800027dae2 : add dword ptr [rax], 0x83410000 ; call qword ptr [rcx]
0xffffff8000293fe1 : add dword ptr [rax], 0x89480000 ; fucomip st(0) ; ret
0xffffff80002d74d3 : add dword ptr [rax], 0x8948589c ; ret
0xffffff80002da9f9 : add dword ptr [rax], 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff8000760beb : add dword ptr [rax], 0xb70f0000 ; ret 0xf883
0xffffff80002ddb1f : add dword ptr [rax], 0xb90000 ; add bh, bh ; jmp qword ptr [rbx]
0xffffff800081c603 : add dword ptr [rax], 0xc0310000 ; call 0xffffff8000818828
0xffffff80006bb6a6 : add dword ptr [rax], 0xc9310000 ; mov dl, al ; jmp 0xffffff80006bb6c3
0xffffff80003d660d : add dword ptr [rax], 0xf440012 ; ret
0xffffff800044930d : add dword ptr [rax], 0xf6000001 ; ret 0xf01
0xffffff80003ca21c : add dword ptr [rax], 0xff480000 ; ret 0xff48
0xffffff80002d5086 : add dword ptr [rax], 0xfff8548 ; xchg eax, esp ; ret 0x3145
0xffffff8000265dfb : add dword ptr [rax], 1 ; mov eax, 1 ; pop rbp ; ret
0xffffff80002f5c80 : add dword ptr [rax], 5 ; jne 0xffffff80002f5cc3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000828b0b : add dword ptr [rax], eax ; add ah, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b3c05 : add dword ptr [rax], eax ; add al, ah ; pop rbp ; ret
0xffffff80003c1e53 : add dword ptr [rax], eax ; add al, ch ; cmc ; ret 0xffec
0xffffff800046cfff : add dword ptr [rax], eax ; add al, ch ; cmp dword ptr [rax - 0xe], esp ; push rdi ; ret
0xffffff80002d2a63 : add dword ptr [rax], eax ; add al, ch ; in eax, 0xb6 ; sti ; jmp qword ptr [rbx]
0xffffff80007c47cc : add dword ptr [rax], eax ; add al, ch ; lodsb al, byte ptr [rsi] ; ret
0xffffff80003c1e9c : add dword ptr [rax], eax ; add al, ch ; lodsb al, byte ptr [rsi] ; ret 0xffec
0xffffff8000698513 : add dword ptr [rax], eax ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80003b653b : add dword ptr [rax], eax ; add al, ch ; or eax, 0xe9ffed7c ; ret 0xfffe
0xffffff8000282385 : add dword ptr [rax], eax ; add al, ch ; ret
0xffffff8000268786 : add dword ptr [rax], eax ; add al, ch ; ret 0x259
0xffffff80003e9ea6 : add dword ptr [rax], eax ; add al, ch ; ret 0xcff
0xffffff8000355386 : add dword ptr [rax], eax ; add al, ch ; ret 0xf38d
0xffffff80004e4ea7 : add dword ptr [rax], eax ; add al, ch ; xchg eax, ecx ; xchg eax, edx ; ret 0x41ff
0xffffff8000750391 : add dword ptr [rax], eax ; add al, dh ; and dword ptr [rdi], 0xffffffdf ; pop rbp ; ret
0xffffff8000750371 : add dword ptr [rax], eax ; add al, dh ; or dword ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff800048c734 : add dword ptr [rax], eax ; add bh, bh ; ret
0xffffff800062906e : add dword ptr [rax], eax ; add bh, bh ; ret 0x1589
0xffffff800026ab5b : add dword ptr [rax], eax ; add bh, bh ; ret 0x3145
0xffffff800026651a : add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0xffffff8000455a82 : add dword ptr [rax], eax ; add bh, dh ; ret
0xffffff800027c5cf : add dword ptr [rax], eax ; add bh, dh ; ret 0
0xffffff800078a895 : add dword ptr [rax], eax ; add bh, dh ; shl byte ptr [rcx], 1 ; ret 0x8b41
0xffffff800088d3c3 : add dword ptr [rax], eax ; add bl, ch ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008bf861 : add dword ptr [rax], eax ; add bl, ch ; sbb eax, dword ptr [rcx - 0x42] ; ret 2
0xffffff800029f434 : add dword ptr [rax], eax ; add bl, dl ; call 0xffffff800da2b66c
0xffffff8000557818 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80004c6bdc : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800046af4d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x137d
0xffffff800044c96f : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x3d7d
0xffffff800026ef53 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff800053d483 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0xffffff80002caed5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0xffffff800072e117 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d01314f], al ; ret
0xffffff800072d978 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d01324f], al ; ret
0xffffff800072dbc8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d01354f], al ; ret
0xffffff800072d9b7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d02314f], al ; ret
0xffffff800072db87 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d02324f], al ; ret
0xffffff800072d997 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d04314f], al ; ret
0xffffff800072dd57 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d04324f], al ; ret
0xffffff800072dac7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d04344f], al ; ret
0xffffff800047f574 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d08464f], al ; ret
0xffffff800072d9a7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d10314f], al ; ret
0xffffff800072db98 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d20314f], al ; ret
0xffffff800072dbb7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d40314f], al ; ret
0xffffff800072d9c7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5d80304f], al ; ret
0xffffff80006d0295 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0xffffff8000575697 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0xffffff800080c8af : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x6948
0xffffff8000509684 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b49
0xffffff8000510ceb : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff8000661f71 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0xffffff800075f322 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; xor byte ptr [rax + 0x39], r9b ; ret
0xffffff8000532038 : add dword ptr [rax], eax ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80006f1cd8 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0xffffff80006f0992 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0xffffff800037ca0b : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0xffffff80004a762d : add dword ptr [rax], eax ; add byte ptr [rax + rbx - 0x78], bh ; ret 0xf280
0xffffff8000635c3f : add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 - 0x2d], al ; mov rdx, r8 ; jmp 0xffffff8000635c63
0xffffff800058fbd0 : add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 - 0x3e], al ; jmp 0xffffff800058fc0c
0xffffff80004dc765 : add dword ptr [rax], eax ; add byte ptr [rax - 0x16dfceb6], al ; ret 0xfffd
0xffffff80007092e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0xffffff800026aa34 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80002db385 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db3a0 ; pop rbp ; ret
0xffffff80002db3b5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db3d0 ; pop rbp ; ret
0xffffff80002db3e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db400 ; pop rbp ; ret
0xffffff800025814f : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; adc al, 0xc2 ; jmp 0xffffff8000258170
0xffffff800031b1db : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x39], cl ; ret 0xf000
0xffffff800082fb1b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jbe 0xffffff800082fb42 ; pop rbp ; jmp rax
0xffffff800082ff6b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jbe 0xffffff800082ff92 ; pop rbp ; jmp rax
0xffffff8000830eab : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jbe 0xffffff8000830ed2 ; pop rbp ; jmp rax
0xffffff80007baa87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; mov r8b, 0x89 ; ret
0xffffff800065d286 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff800065d25f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff8000670f36 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; call rcx
0xffffff80007cc0e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x62
0xffffff800048a528 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff800027d350 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b45408 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x214c
0xffffff80006226f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3949
0xffffff80006e778c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80003a3a47 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800085c14f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0xffffff80008a19a5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff8000810e81 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff8000314b5e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff800053fb22 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xd285
0xffffff8000872c5f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xe1e9
0xffffff800067bca0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf5e8
0xffffff800077e3a9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff800077e3a9 ; pop rbp ; ret
0xffffff80007b3fc2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ret
0xffffff8000886b6d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff8000753161 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0xffffff8000860450 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0xffffff80008dd26e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret
0xffffff8000577cb6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff8000272d7c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800027f2d1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80002da78e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80004fa906 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x128
0xffffff80003a2fe6 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; pop rbp ; ret
0xffffff8000412397 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff800038f589 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800057cd9d : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80002ec8aa : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0xc031
0xffffff80003fbca7 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000785f90 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004a6d97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000338528 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0xffffff80003895d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; and byte ptr [rax + 0x50], 0xfe ; pop rbp ; ret
0xffffff80005a65e9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xffffff80003928a6
0xffffff80007690a4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xffffff80003928a7
0xffffff80005d837b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xffffff80007b4656
0xffffff800034d932 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0xffffff8000799a6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rcx
0xffffff8000436121 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovb eax, ecx ; pop rbp ; ret
0xffffff800072c125 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovb eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff8000579e74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovl eax, ecx ; pop rbp ; ret
0xffffff80003bba62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80003924c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne eax, ecx ; ret
0xffffff80008a8397 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne edi, esi ; pop rbp ; jmp rcx
0xffffff800050fd5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xffffff800050fd6e ; xor eax, eax ; pop rbp ; ret
0xffffff8000706e39 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0xffffff8000594809 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rdx
0xffffff8000594834 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rsi
0xffffff800080df85 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lock xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800051b375 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; ret
0xffffff8000512cd8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, ebx ; call rax
0xffffff8000799a12 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, r14d ; call rcx
0xffffff80008427f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edx, 0x2550 ; call rax
0xffffff800039f00a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ebfa6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi], rdx ; pop rbp ; ret
0xffffff800063661c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r8, r12 ; call 0xffffff80007c28a9
0xffffff80007689a4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff80007c4bb9
0xffffff80005293bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff80007c8978 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call 0xffffff80007c4bb9
0xffffff8000529764 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0xffffff80008214d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0xffffff80007c7dbf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rcx
0xffffff80008cb622 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000297879
0xffffff8000277213 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000393489
0xffffff80008788e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xffffff8000874b99
0xffffff80006a85c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0xffffff80007a6624 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff80003928a9
0xffffff800056895a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff80007c4bb9
0xffffff80005e94f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0xffffff8000607e20 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call rbx
0xffffff80007a65ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call 0xffffff80003928a9
0xffffff8000528fb8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff80003923d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r9 ; ret
0xffffff800081121c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800025a1f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000892a4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80002529cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025db1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff8000392331 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff800031f252 : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl eax, cl ; pop rbp ; ret
0xffffff800084b771 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test cl, cl ; jne 0xffffff800084b769 ; pop rbp ; ret
0xffffff80005202ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003aef9f : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff800061c637 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d8928
0xffffff80006abce0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d8929
0xffffff800074b465 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000552755 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; call rax
0xffffff80004ef226 : add dword ptr [rax], eax ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80006464eb : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; push rsi ; ret 0x7504
0xffffff8000627cf6 : add dword ptr [rax], eax ; add byte ptr [rbp + 0xd440fc9], al ; ret 0x4f
0xffffff800074baeb : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0xffffff800049e1ee : add dword ptr [rax], eax ; add byte ptr [rbp - 0x23], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c59d1 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x36], dh ; pop rbp ; ret
0xffffff80002e8e51 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x3d], bl ; xor eax, eax ; pop rbp ; ret
0xffffff80008cfde6 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x47e18b40], al ; ret 2
0xffffff80003a6e86 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x4b], dh ; pop rbp ; ret
0xffffff80004b947a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76818140], al ; ret 0xd2f7
0xffffff8000288a7c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0xffffff8000567235 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff80003a2746 : add dword ptr [rax], eax ; add byte ptr [rbp - 1], bl ; loopne 0xffffff80003a27b1 ; ret
0xffffff8000878e60 : add dword ptr [rax], eax ; add byte ptr [rbp - 1], bl ; loopne 0xffffff8000878ecb ; ret
0xffffff80008a3ee4 : add dword ptr [rax], eax ; add byte ptr [rbp - 1], bl ; loopne 0xffffff80008a3f4f ; ret
0xffffff800028eb38 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80002a82b7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004cfbd9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff800025c827 : add dword ptr [rax], eax ; add byte ptr [rbx + rbx*8 - 0xb7d28c], al ; ret 0x5a8d
0xffffff80007af45b : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x60], cl ; and dh, dh ; ret 0x7401
0xffffff80003d1e01 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x63], al ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800083d36e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6af0ffc7], al ; ret 0x2b0
0xffffff8000808409 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6bf0f401], al ; ret 0xfe83
0xffffff800056b7e2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6bf0fd08], al ; ret 0xf883
0xffffff800082c9fe : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b7cf89], cl ; ret 0xff5d
0xffffff800081235e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b7df89], cl ; ret 0xff5d
0xffffff800048f498 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cb7dba8], cl ; ret
0xffffff800036a419 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7eb7fb85], cl ; ret
0xffffff8000b4b9da : add dword ptr [rax], eax ; add byte ptr [rcx + 0x31d921c1], cl ; ret
0xffffff8000563c68 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff8000526bd7 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff800059b807 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff80007ae651 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 2], al ; pop rbp ; ret
0xffffff80007ae6b6 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 6], al ; pop rbp ; ret
0xffffff80007649ac : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000393049
0xffffff800078af98 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000397208
0xffffff80008876d7 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, rax ; call rbx
0xffffff800051edff : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff800051e4bb : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret
0xffffff8000523274 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret 0x1d8
0xffffff8000522f1c : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x54], cl ; ret
0xffffff800051dfaa : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0xffffff8000591ec9 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff800010e148
0xffffff8000773d71 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000397209
0xffffff80007c1e78 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff800010e148
0xffffff8000767d6d : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393049
0xffffff800038fa71 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0xffffff800084ecd0 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*8 - 0xb7f68c], al ; ret 0x8348
0xffffff800060de6f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x35b43], al ; jmp rax
0xffffff8000526e76 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x3fcecfba], cl ; pop rbp ; ret
0xffffff8000878253 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff8000880336 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff80003e46ed : add dword ptr [rax], eax ; add byte ptr [rcx - 0x50], al ; add dword ptr [rcx - 0x77], eax ; ret 0x75e9
0xffffff80008c10f8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 + 0x39], r9b ; ret 0xc74
0xffffff80006ad96a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret
0xffffff8000638271 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret
0xffffff80006679a0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff800078824f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rcx]
0xffffff8000843d29 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4505
0xffffff80006ccc2c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; jmp qword ptr [rcx]
0xffffff8000563339 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; out 0xff, eax ; jmp rcx
0xffffff80003c895a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], cl ; ret
0xffffff800083fe18 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xb820
0xffffff80006d6737 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000b456fe : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff80007a77aa : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x10b9
0xffffff8000b41278 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0xc283
0xffffff800070a818 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; xor eax, eax ; pop rbp ; ret
0xffffff800036b3ce : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff800061eb17 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1f7d
0xffffff8000622766 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x2779
0xffffff80007a6535 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x3175
0xffffff80003f343f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff80008b2462 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x97f
0xffffff800061b29b : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x3944
0xffffff80004c4cbd : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; enter -0x3dc7, 0xf ; ret 0x6348
0xffffff800035721b : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0xffffff800062ea6f : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0x2372
0xffffff800083ea33 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; sar dword ptr [rcx], cl ; ret
0xffffff80007b3fef : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0xffffff800031e832 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0xc889
0xffffff80003534d4 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fucomi st(1) ; ret 1
0xffffff8000684de6 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; imul al ; ret 0xffec
0xffffff8000525f0c : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000484537 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x4ee4
0xffffff8000621f78 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x2e ; ret 0xffc6
0xffffff800064e542 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x64 ; cld ; ret
0xffffff80006644df : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0xc7 ; pushfq ; ret 0x48ff
0xffffff8000671dd3 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0xd3 ; ret
0xffffff800082c9de : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc2 ; pop rbp ; jmp rcx
0xffffff8000887dfa : add dword ptr [rax], eax ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff8000887e49
0xffffff80008af2fa : add dword ptr [rax], eax ; add byte ptr [rdi + 0x26], dh ; jmp 0xffffff80008af349
0xffffff80002f874b : add dword ptr [rax], eax ; add byte ptr [rdi + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80006a4a96 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x4b ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800069ed61 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0xffffff800088e71f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0xd2 ; pop rbp ; jmp rax
0xffffff80005788d5 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff8000478857 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x894c
0xffffff8000276657 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc189
0xffffff80003b1eb9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc220
0xffffff8000803cba : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff800089494b : add dword ptr [rax], eax ; add byte ptr [rdx + 0x3e8], bh ; pop rbp ; jmp rax
0xffffff800089490b : add dword ptr [rax], eax ; add byte ptr [rdx + 0x989680], bh ; pop rbp ; jmp rax
0xffffff800089492b : add dword ptr [rax], eax ; add byte ptr [rdx + 0xf4240], bh ; pop rbp ; jmp rax
0xffffff8000788db7 : add dword ptr [rax], eax ; add byte ptr [rdx], ah ; xor eax, eax ; pop rbp ; ret
0xffffff80008d91f0 : add dword ptr [rax], eax ; add byte ptr [rdx], al ; jne 0xffffff80008d91ff ; pop rbp ; ret
0xffffff80003a2898 : add dword ptr [rax], eax ; add byte ptr [rip + 0x5d000000], al ; ret
0xffffff8000898874 : add dword ptr [rax], eax ; add byte ptr [rsi + 1], bh ; pop rbp ; jmp rax
0xffffff800028ed66 : add dword ptr [rax], eax ; add byte ptr [rsi + 2], bh ; call rax
0xffffff80005cf5ce : add dword ptr [rax], eax ; add byte ptr [rsi + 2], bh ; pop rbp ; jmp rax
0xffffff80007a8150 : add dword ptr [rax], eax ; add byte ptr [rsi + 5], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800084647f : add dword ptr [rax], eax ; add byte ptr [rsi + 8], bh ; pop rbp ; jmp rax
0xffffff8000389233 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x72], ah ; shl dword ptr [rsi - 0x72], cl ; ret
0xffffff800070131b : add dword ptr [rax], eax ; add byte ptr [rsi - 0x75], ah ; push rbx ; adc byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80002d42e8 : add dword ptr [rax], eax ; add byte ptr [rsi - 9], ah ; ret
0xffffff800077e051 : add dword ptr [rax], eax ; add byte ptr [rsi*2 + 0x5dc03102], al ; ret
0xffffff80004d7a1d : add dword ptr [rax], eax ; add byte ptr [rsi*2 - 0x763fcefe], al ; ret
0xffffff80006c5be6 : add dword ptr [rax], eax ; add byte ptr [rsi*2 - 0x809cefe], al ; ret 0x8000
0xffffff800025e8b6 : add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff8000379ea2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0xffffff800066cf20 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0xffffff800044b7a3 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7404
0xffffff8000414257 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0xffffff80004cd2a0 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7534
0xffffff800044930f : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0xffffff800074e10f : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0xffffff800074e106 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf0c
0xffffff80006d4b55 : add dword ptr [rax], eax ; add dh, dh ; rol dword ptr [rcx], 0x89 ; ret 0xe75
0xffffff80006f7371 : add dword ptr [rax], eax ; add dh, dh ; test eax, edx ; idiv edi ; jmp qword ptr [rax]
0xffffff80003910ee : add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000273d1e : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000273bec : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000273c90 : add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbp ; ret
0xffffff800037a028 : add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004f9137 : add dword ptr [rax], eax ; and eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80008dbae7 : add dword ptr [rax], eax ; imul eax, ebx, 0x3c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002726fd : add dword ptr [rax], eax ; jmp 0xffffff80002725e7
0xffffff8000273abd : add dword ptr [rax], eax ; jmp 0xffffff8000273a87
0xffffff8000775774 : add dword ptr [rax], eax ; jmp 0xffffff8000775782
0xffffff80008d545c : add dword ptr [rax], eax ; jmp 0xffffff80008d54d5
0xffffff80008d536d : add dword ptr [rax], eax ; jmp 0xffffff80008d54d8
0xffffff80003ae12c : add dword ptr [rax], eax ; jne 0xffffff80003ae137 ; pop rbp ; ret
0xffffff800075884e : add dword ptr [rax], eax ; jne 0xffffff8000758859 ; pop rbp ; ret
0xffffff800080e156 : add dword ptr [rax], eax ; lock xadd word ptr [rdi], ax ; cwde ; pop rbp ; ret
0xffffff800038a025 : add dword ptr [rax], eax ; mov eax, 0xf ; pop rbp ; ret
0xffffff80008dbd79 : add dword ptr [rax], eax ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a7daa : add dword ptr [rax], eax ; mov edi, 0x32 ; mov esi, eax ; call rbx
0xffffff80003a7dcb : add dword ptr [rax], eax ; mov edi, 0x34 ; mov esi, eax ; call rbx
0xffffff80003a7d89 : add dword ptr [rax], eax ; mov edi, 0x37 ; mov esi, eax ; call rbx
0xffffff80002963ea : add dword ptr [rax], eax ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028902b : add dword ptr [rax], eax ; pop rbp ; ret
0xffffff80006d673a : add dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000366b8b : add dword ptr [rax], eax ; sub rax, rsi ; add rax, r8 ; pop rbp ; ret
0xffffff8000795cf6 : add dword ptr [rax], eax ; test rax, rax ; jne 0xffffff8000795cf8 ; pop rbp ; ret
0xffffff80007961d2 : add dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800039d6d6 : add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ae776 : add dword ptr [rax], ebp ; xor eax, eax ; pop rbp ; ret
0xffffff80002af5a5 : add dword ptr [rax], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005cfd8a : add dword ptr [rax], ecx ; je 0xffffff80005cfdcd ; jmp 0xffffff80005cfdac
0xffffff8000663e37 : add dword ptr [rax], ecx ; jne 0xffffff8000663e5d ; jmp 0xffffff8000663e59
0xffffff80007972cb : add dword ptr [rax], ecx ; jne 0xffffff80007972f4 ; jmp 0xffffff80007972ea
0xffffff80007b587f : add dword ptr [rax], ecx ; jne 0xffffff80007b58a5 ; jmp 0xffffff80007b58a1
0xffffff8000898982 : add dword ptr [rax], ecx ; mov al, 1 ; pop rbp ; ret
0xffffff80005f4e10 : add dword ptr [rax], ecx ; pop rbp ; ret
0xffffff8000721f74 : add dword ptr [rax], ecx ; ret 0x9588
0xffffff8000797373 : add dword ptr [rax], edi ; add byte ptr [rbp + 2], dh ; mov eax, ecx ; pop rbp ; ret
0xffffff80004b3af6 : add dword ptr [rax], edx ; pop rbp ; ret
0xffffff80004aa66a : add dword ptr [rax], esi ; ret 0x840f
0xffffff80004aa62f : add dword ptr [rax], esi ; ret 0x850f
0xffffff800084dd39 : add dword ptr [rax], esp ; add byte ptr [rdi + rax - 1], dh ; ret 0x344
0xffffff80008e21d3 : add dword ptr [rax], esp ; and byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff80007ff0cf : add dword ptr [rax], esp ; pop rbp ; jmp rax
0xffffff80008cda85 : add dword ptr [rax], esp ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005509c7 : add dword ptr [rax], esp ; ret 0x2304
0xffffff80007ff0ce : add dword ptr [rax], r12d ; pop rbp ; jmp rax
0xffffff80008cda84 : add dword ptr [rax], r12d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000397cbc : add dword ptr [rbp + 0x11], esi ; pop rbp ; ret
0xffffff800029bd38 : add dword ptr [rbp + 0x1c], esi ; pop rbp ; ret
0xffffff80003c5d14 : add dword ptr [rbp + 0x2f], esi ; pop rbp ; ret
0xffffff8000390a71 : add dword ptr [rbp + 0x31], eax ; ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; ret
0xffffff800042328f : add dword ptr [rbp + 0x37], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000621fa6 : add dword ptr [rbp + 0x39], ecx ; ret 0x3c7d
0xffffff8000389825 : add dword ptr [rbp + 0x39], esi ; mov rdi, qword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff800029fadf : add dword ptr [rbp + 0x5b], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000652353 : add dword ptr [rbp + 0xc8504], ecx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b40a02 : add dword ptr [rbp + 0xf], eax ; inc byte ptr [rbp + rcx*4 - 0x4e] ; ret
0xffffff800061f1b0 : add dword ptr [rbp + 1], ecx ; ret
0xffffff8000b496e3 : add dword ptr [rbp + 1], ecx ; ror dword ptr [rcx + 0x29], cl ; ret
0xffffff8000397cfd : add dword ptr [rbp + 2], esi ; pop rbp ; ret
0xffffff80004fa740 : add dword ptr [rbp + 2], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7395 : add dword ptr [rbp + 5], esi ; in al, dx ; mov byte ptr [rsi], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7445 : add dword ptr [rbp + 5], esi ; mov al, byte ptr [rsi] ; out dx, al ; xor eax, eax ; pop rbp ; ret
0xffffff80004486b9 : add dword ptr [rbp + 5], esi ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff800042314a : add dword ptr [rbp + 5], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000831f73 : add dword ptr [rbp + 6], esi ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff800072c429 : add dword ptr [rbp + 7], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004f9bc9 : add dword ptr [rbp + rax - 0x18], esi ; wrmsr ; xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff80007c0075 : add dword ptr [rbp + rbx - 0x47], esi ; ret 8
0xffffff800071f169 : add dword ptr [rbp + rcx - 0x77], esi ; ret
0xffffff80004296c4 : add dword ptr [rbp - 0x37], esi ; pop rbp ; ret
0xffffff800078c083 : add dword ptr [rbp - 0x3d], ebx ; mov eax, 1 ; pop rbp ; ret
0xffffff80002bbe12 : add dword ptr [rbp - 0x3d], ebx ; pop rbp ; ret
0xffffff80002f85eb : add dword ptr [rbp - 0x3d], ebx ; xor eax, eax ; pop rbp ; ret
0xffffff8000595ae1 : add dword ptr [rbp - 0x77], ecx ; ret
0xffffff80003814c3 : add dword ptr [rbp - 0x7ae88a0a], eax ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff80002696c8 : add dword ptr [rbp - 0x7b], eax ; test byte ptr [rdi], 0x95 ; ret 0xb60f
0xffffff800026c14c : add dword ptr [rbp - 0x7b], eax ; test byte ptr [rdi], 0x95 ; ret 0xd120
0xffffff8000794d75 : add dword ptr [rbp - 0xa], esi ; jmp 0xffffff8000794e67
0xffffff80003965e7 : add dword ptr [rbp - 0xa], esi ; sub rax, rdi ; pop rbp ; ret
0xffffff8000791ce7 : add dword ptr [rbp - 0xa], esi ; sub rdx, rsi ; mov rdi, r14 ; call rax
0xffffff800077dc86 : add dword ptr [rbp - 9], esi ; pop rbp ; ret
0xffffff800077dd76 : add dword ptr [rbp - 9], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003464a8 : add dword ptr [rbx + 0x10], ecx ; jmp 0xffffff8000346474
0xffffff800053d5bb : add dword ptr [rbx + 0x39480059], ebp ; ret
0xffffff8000791a87 : add dword ptr [rbx + 0x40], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000791579 : add dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002af47c : add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff800056ace7 : add dword ptr [rbx + 0x41], ebx ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800052b701 : add dword ptr [rbx + 0x78], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000514e3d : add dword ptr [rbx + 0xb093], ecx ; add byte ptr [rcx], cl ; ret 0x674
0xffffff80003b3e14 : add dword ptr [rbx + 0xf41c845], ecx ; ret 0x4589
0xffffff8000745baa : add dword ptr [rbx + rbx*8 + 0x39480575], eax ; ret 0xa72
0xffffff8000865519 : add dword ptr [rbx + rdx*8 - 0x15], esi ; ret 0x8b49
0xffffff80007cde5e : add dword ptr [rbx - 0x3e090120], eax ; add cl, byte ptr [rdi] ; ret 0xe181
0xffffff8000283ce2 : add dword ptr [rbx - 0x7cb70025], eax ; ret 0xff10
0xffffff80004bf91b : add dword ptr [rbx - 0x7eb7001c], ecx ; ret
0xffffff80003464a5 : add dword ptr [rbx], eax ; add qword ptr [rbx + 0x10], rcx ; jmp 0xffffff8000346477
0xffffff80006ac1b3 : add dword ptr [rbx], eax ; mov rsi, rbx ; call 0xffffff80002d4ef9
0xffffff80007ae213 : add dword ptr [rbx], edi ; add al, 0x75 ; mov bh, 0x5b ; pop rbp ; ret
0xffffff80005a9067 : add dword ptr [rbx], edx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80005a9031 : add dword ptr [rbx], edx ; push rax ; ret
0xffffff80006a309b : add dword ptr [rbx], esp ; ret 0xe9ff
0xffffff80004831b3 : add dword ptr [rcx + 0x1b807], ecx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b4a393 : add dword ptr [rcx + 0x514a42c2], eax ; add al, 0x29 ; ret 0xe281
0xffffff80009091f7 : add dword ptr [rcx + 0x58bd445], ecx ; ret
0xffffff8000299924 : add dword ptr [rcx + 0x5dc03102], ecx ; ret
0xffffff80002f7be9 : add dword ptr [rcx + 0x5dc03106], ecx ; ret
0xffffff8000252819 : add dword ptr [rcx + 0x5df273cf], ecx ; ret
0xffffff80003c8313 : add dword ptr [rcx + 0x5e415bd8], ecx ; pop rbp ; ret
0xffffff80008daee0 : add dword ptr [rcx + 0x5f6a84d], ecx ; ret
0xffffff80008daeb0 : add dword ptr [rcx + 0x5f6a84d], ecx ; xchg eax, edi ; ret
0xffffff80008eccb6 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x3c ; and al, 0x83 ; jmp qword ptr [rax]
0xffffff800070447f : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret 0xbe
0xffffff8000840225 : add dword ptr [rcx + 1], ecx ; ret
0xffffff80002af47a : add dword ptr [rcx + rax], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b2359 : add dword ptr [rcx + rcx*4 - 0x11], ecx ; mov rsi, r14 ; call r12
0xffffff800076e9d4 : add dword ptr [rcx + rcx*4 - 9], ecx ; call 0xffffff8000393047
0xffffff8000756c28 : add dword ptr [rcx - 0x3b7cb728], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800029ab01 : add dword ptr [rcx - 0x3b7cb7f8], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800037372a : add dword ptr [rcx - 0x3ea57d87], ebx ; ret 0x891e
0xffffff8000767802 : add dword ptr [rcx - 0x3fcefbb9], ecx ; pop rbp ; ret
0xffffff80007cebba : add dword ptr [rcx - 0x47], esi ; ret 0x1a
0xffffff800069f01b : add dword ptr [rcx - 0x76b7ffef], edx ; ret
0xffffff80006d4b5a : add dword ptr [rcx - 0x76f18a3e], ecx ; ret 0xe283
0xffffff800029c296 : add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003dc3eb : add dword ptr [rcx - 0x77], eax ; ret 0x24eb
0xffffff80003e46f2 : add dword ptr [rcx - 0x77], eax ; ret 0x75e9
0xffffff80003e5119 : add dword ptr [rcx - 0x77], eax ; ret 0xaee9
0xffffff80008c9fad : add dword ptr [rcx - 0x77], ecx ; adc byte ptr [rax - 0x77], r9b ; ret 0x1774
0xffffff80002763b2 : add dword ptr [rcx - 0x77], ecx ; add ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff8000554f04 : add dword ptr [rcx - 0x77], ecx ; ret 0x8841
0xffffff8000359f45 : add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0xffffff80008331a9 : add dword ptr [rcx - 0x77], ecx ; ret 0xf4c
0xffffff8000850941 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0x12e9
0xffffff80008507bf : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0x94e9
0xffffff80008507ac : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0xfb83
0xffffff8000451f26 : add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0xffffff80005e0086 : add dword ptr [rcx - 0x7d], ecx ; rol dword ptr [rdx], 0x4c ; mov eax, ecx ; pop rbp ; ret
0xffffff8000656174 : add dword ptr [rcx - 0x7f], eax ; jmp rcx
0xffffff800078ebcd : add dword ptr [rcx - 0x80], eax ; cmp al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret 0xee75
0xffffff80004c75b3 : add dword ptr [rcx - 0xcf73], ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006520ed : add dword ptr [rcx - 0xef43], eax ; jmp rcx
0xffffff800083afa0 : add dword ptr [rcx - 1], eax ; ret
0xffffff800084d9e1 : add dword ptr [rcx - 1], eax ; ret 0x68e9
0xffffff80004b9073 : add dword ptr [rcx - 1], ecx ; ret
0xffffff80008d25b4 : add dword ptr [rcx - 1], ecx ; ret 0x8949
0xffffff800037a027 : add dword ptr [rcx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006a9967 : add dword ptr [rcx], 0x3d830000 ; ret 0x4840
0xffffff8000781a3b : add dword ptr [rcx], 0x8948fffd ; ret
0xffffff800061f1ae : add dword ptr [rcx], eax ; add dword ptr [rbp + 1], ecx ; ret
0xffffff800061f1ac : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rbp + 1], ecx ; ret
0xffffff800061f1aa : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rbp + 1], ecx ; ret
0xffffff8000725497 : add dword ptr [rcx], eax ; mov al, 1 ; pop rbp ; ret
0xffffff800035139e : add dword ptr [rcx], eax ; mov byte ptr [r8 - 0x75], r9b ; test al, 0x89 ; ret
0xffffff80002706c8 : add dword ptr [rcx], eax ; ret
0xffffff80005070e2 : add dword ptr [rcx], eax ; ret 0xe0c1
0xffffff800061f2dd : add dword ptr [rcx], ebp ; ret
0xffffff800035aa44 : add dword ptr [rcx], ebx ; fisttp dword ptr [rcx] ; ret
0xffffff80005841e8 : add dword ptr [rcx], ebx ; ror byte ptr [rcx], cl ; ret 0xc984
0xffffff80003b1f6c : add dword ptr [rcx], ebx ; ror byte ptr [rcx], cl ; ret 0xdb85
0xffffff80002bbecc : add dword ptr [rcx], ecx ; enter -0xf7d, 1 ; pop rbp ; ret
0xffffff80003e2c75 : add dword ptr [rcx], ecx ; ret
0xffffff8000584f18 : add dword ptr [rcx], ecx ; ror byte ptr [rcx + 0x5dc35d07], 1 ; ret
0xffffff80008a07d8 : add dword ptr [rcx], ecx ; ror dword ptr [rcx + rdi + 0xd], 0x26 ; ret 0x18
0xffffff800058a9b1 : add dword ptr [rcx], edi ; ret
0xffffff8000529674 : add dword ptr [rcx], edi ; ret 0x850f
0xffffff80008cbc66 : add dword ptr [rcx], edi ; ret 0x920f
0xffffff80005292e1 : add dword ptr [rcx], edi ; ret 0xca75
0xffffff80004937fa : add dword ptr [rcx], esi ; fisttp dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80003a4988 : add dword ptr [rcx], esi ; fisttp dword ptr [rdi] ; add eax, 0x58595b41 ; ret
0xffffff800049e3f5 : add dword ptr [rcx], esi ; rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; pop rbp ; ret
0xffffff80006eba2d : add dword ptr [rcx], esi ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800083d072 : add dword ptr [rcx], esi ; ret
0xffffff8000491e05 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007b6e9c : add dword ptr [rcx], esi ; ror byte ptr [rcx - 0x76080810], cl ; ret
0xffffff8000579d2a : add dword ptr [rcx], r15d ; ret 0x850f
0xffffff8000448fd5 : add dword ptr [rdi + 0x10], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800055fe11 : add dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff80005cb962 : add dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff800055fe18 : add dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff800078cc76 : add dword ptr [rdi + 0x20], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800055fe1f : add dword ptr [rdi + 0x20], esi ; pop rbp ; ret
0xffffff8000785f22 : add dword ptr [rdi + 0x28], eax ; pop rbp ; ret
0xffffff800055fe26 : add dword ptr [rdi + 0x28], esi ; pop rbp ; ret
0xffffff80007b8108 : add dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff800055fe0a : add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff8000785ec6 : add dword ptr [rdi + 0x88], eax ; pop rbp ; ret
0xffffff800078c9fb : add dword ptr [rdi + 3], esi ; mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff80002c80db : add dword ptr [rdi + 8], eax ; mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff80004954df : add dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff80002c80a5 : add dword ptr [rdi + 8], esi ; pop rbp ; ret
0xffffff8000495501 : add dword ptr [rdi + rax*8 + 8], eax ; pop rbp ; ret
0xffffff800049549e : add dword ptr [rdi + rax*8], edx ; pop rbp ; ret
0xffffff800044d447 : add dword ptr [rdi + rcx + 0x45], ecx ; ret
0xffffff800049550a : add dword ptr [rdi + rcx*8 + 8], eax ; pop rbp ; ret
0xffffff800075987e : add dword ptr [rdi - 0x21], edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800075e44b : add dword ptr [rdi - 0x2e], edi ; xor eax, eax ; pop rbp ; ret
0xffffff8000371077 : add dword ptr [rdi - 0x3a], edi ; pop rbp ; ret
0xffffff8000b3eb2b : add dword ptr [rdi - 0x3d], esi ; imul edx, dword ptr [rcx + rax*4 - 0xf], 0x77 ; ret
0xffffff800065b59b : add dword ptr [rdi], ebp ; ret
0xffffff80006d648b : add dword ptr [rdi], ecx ; enter -0x2f7d, 0 ; pop rbp ; ret
0xffffff80004be387 : add dword ptr [rdi], ecx ; lahf ; ret
0xffffff800083d52a : add dword ptr [rdi], ecx ; lahf ; ret 0xf983
0xffffff800059b919 : add dword ptr [rdi], ecx ; leave ; mov dword ptr [rsi + 4], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80003f1165 : add dword ptr [rdi], ecx ; mov bh, 0x51 ; cmp al, 0xf6 ; ret 0x7530
0xffffff8000579d27 : add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff8000529670 : add dword ptr [rdi], ecx ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80005292dd : add dword ptr [rdi], ecx ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0xca75
0xffffff80002c02fd : add dword ptr [rdi], ecx ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000584781 : add dword ptr [rdi], ecx ; mov dh, 0xc1 ; pop rbp ; ret
0xffffff80002ce611 : add dword ptr [rdi], ecx ; ret
0xffffff80005720ce : add dword ptr [rdi], ecx ; ret 0x518d
0xffffff80002f8a85 : add dword ptr [rdi], ecx ; ret 0xc839
0xffffff800027c5af : add dword ptr [rdi], ecx ; ret 0xc8ff
0xffffff800061ec59 : add dword ptr [rdi], ecx ; test byte ptr [rax + rbp], al ; add dh, dh ; ret 0x7510
0xffffff80002c9cd8 : add dword ptr [rdi], ecx ; test ch, ah ; add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0xffffff8000520151 : add dword ptr [rdi], ecx ; test dword ptr [rax - 0x17000000], ebp ; ret 0
0xffffff800074e0f9 : add dword ptr [rdi], ecx ; test dword ptr [rax - 0xa000000], esp ; ret 0xf02
0xffffff800074fd3b : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0x77000000], esp ; ret 0xca0f
0xffffff800066cf46 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0xa000000], edx ; ret 0x7520
0xffffff8000449314 : add dword ptr [rdi], ecx ; test dword ptr [rdx - 0xa000000], esp ; ret 0xf02
0xffffff80004eba03 : add dword ptr [rdi], ecx ; test dword ptr [rsi + 0x8000005], esi ; ret
0xffffff8000281245 : add dword ptr [rdi], ecx ; xchg byte ptr [rax + rax - 0x7cb80000], cl ; ret
0xffffff8000861086 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0xffffff8000408b94 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xb60f
0xffffff8000864ce6 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xca84
0xffffff80005779bb : add dword ptr [rdi], ecx ; xchg eax, edi ; ret
0xffffff800057298a : add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0x8d44
0xffffff8000577a71 : add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xc8ff
0xffffff80008deaa0 : add dword ptr [rdi], ecx ; xchg eax, esp ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800043d5d9 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80005fc23b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2044
0xffffff80005560b5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0xffffff80008497fe : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0xffffff8000791866 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xbf41
0xffffff800043d163 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe9c1
0xffffff80004709af : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf44
0xffffff800034aa6c : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf45
0xffffff800058ae42 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; sar bh, 1 ; ret 0xdeb
0xffffff8000568539 : add dword ptr [rdi], edx ; pop rbp ; ret
0xffffff8000495755 : add dword ptr [rdi], esi ; pop rbp ; ret
0xffffff80005292dc : add dword ptr [rdi], r9d ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0xca75
0xffffff8000b49890 : add dword ptr [rdx + 0xc8d44bd], ecx ; add ah, byte ptr [rcx] ; ret 0xd201
0xffffff80002674ea : add dword ptr [rdx + 8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80004dfe15 : add dword ptr [rdx + rcx - 0x18], esi ; ret
0xffffff80004e0801 : add dword ptr [rdx + rcx - 0x18], esi ; xlatb ; ret
0xffffff80003c90de : add dword ptr [rdx + rdx*8 - 0x7cb7f98b], eax ; call qword ptr [rax]
0xffffff800066fc3b : add dword ptr [rdx + rdx*8], esi ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80003dc3e5 : add dword ptr [rdx], 0xb1410000 ; add dword ptr [rcx - 0x77], eax ; ret 0x24eb
0xffffff800056d4ff : add dword ptr [rdx], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff8000392895 : add dword ptr [rdx], eax ; ret
0xffffff800077063b : add dword ptr [rdx], ebp ; ret 0x8aff
0xffffff80006326ba : add dword ptr [rip + 0x4f231c], edi ; pop rbp ; ret
0xffffff800063269a : add dword ptr [rip + 0x4f232c], edi ; pop rbp ; ret
0xffffff800063267a : add dword ptr [rip + 0x4f2354], edi ; pop rbp ; ret
0xffffff800063265a : add dword ptr [rip + 0x4f2364], edi ; pop rbp ; ret
0xffffff800062b97a : add dword ptr [rip + 0x4f8394], edi ; pop rbp ; ret
0xffffff800062b95a : add dword ptr [rip + 0x4f83a4], edi ; pop rbp ; ret
0xffffff800062b93a : add dword ptr [rip + 0x4f83cc], edi ; pop rbp ; ret
0xffffff800062b91a : add dword ptr [rip + 0x4f83dc], edi ; pop rbp ; ret
0xffffff80002fa86c : add dword ptr [rip + 0x7f9452], ecx ; pop rbx ; pop rbp ; ret
0xffffff8000256b07 : add dword ptr [rip + 0x890c93], ecx ; pop rbp ; ret
0xffffff800065a6b0 : add dword ptr [rip - 0x173fcf00], esi ; out 0x3d, al ; ret
0xffffff8000781724 : add dword ptr [rsi + 0x18], eax ; inc dword ptr [rsi + 0x14] ; xor eax, eax ; pop rbp ; ret
0xffffff80005cb933 : add dword ptr [rsi + 0x18], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f69c9 : add dword ptr [rsi + 0x21], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800027fd29 : add dword ptr [rsi + 2], esi ; pop rbp ; ret
0xffffff80006b43f8 : add dword ptr [rsi + 7], esi ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80008fe515 : add dword ptr [rsi + rcx - 0x18], esi ; ret
0xffffff8000542007 : add dword ptr [rsi - 0x75], esp ; ret 0x8966
0xffffff80007962a7 : add dword ptr [rsi - 0x77], esp ; ja 0xffffff80007962f0 ; xor eax, eax ; pop rbp ; ret
0xffffff80002d17e0 : add dword ptr [rsi], 2 ; mov eax, 1 ; pop rbp ; ret
0xffffff80003d6646 : add dword ptr [rsi], edx ; add bh, dh ; ret 0
0xffffff80004a690e : add dword ptr [rsp + rax - 0x75], esi ; adc dword ptr [rax], r10d ; pop rbp ; ret
0xffffff800072d0eb : add dword ptr [rsp + rax - 0x75], esi ; adc esp, dword ptr [rcx] ; ret 0xf641
0xffffff8000850243 : add dword ptr cs:[rax - 0x7f], ecx ; ret
0xffffff80008d545b : add dword ptr es:[rax], eax ; jmp 0xffffff80008d54d6
0xffffff80007856b8 : add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000374987 : add dword ptr ss:[rax - 0x7d], ecx ; mov byte ptr [rdx], 0x83 ; ret 0x4810
0xffffff80006fabd9 : add dword ptr ss:[rax], eax ; add byte ptr [rax + 1], cl ; ret
0xffffff8000542006 : add dword ptr ss:[rsi - 0x75], esp ; ret 0x8966
0xffffff80007962a6 : add dword ptr ss:[rsi - 0x77], esp ; ja 0xffffff80007962f1 ; xor eax, eax ; pop rbp ; ret
0xffffff80008435bc : add eax, -0xd ; mov dx, r8w ; jmp 0xffffff80008435ce
0xffffff800074fde2 : add eax, -2 ; jne 0xffffff800074fdc6 ; pop rbp ; ret
0xffffff800077a035 : add eax, -2 ; jne 0xffffff8000779fc8 ; xor eax, eax ; pop rbp ; ret
0xffffff80007ae4ab : add eax, -4 ; jne 0xffffff80007ae4a6 ; pop rbp ; ret
0xffffff800082d620 : add eax, -8 ; pop rbp ; ret
0xffffff800084e656 : add eax, 0x10 ; pop rbp ; ret
0xffffff80004191f6 : add eax, 0x100 ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff8000419226
0xffffff800041b0bc : add eax, 0x100 ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff800041b0ec
0xffffff80004267b9 : add eax, 0x10000b8 ; add byte ptr [rcx], bh ; ret
0xffffff80006077b3 : add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x177f
0xffffff8000606647 : add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x1f7f
0xffffff800053aa32 : add eax, 0x1000b8 ; add byte ptr [rcx], bh ; ret 0x247f
0xffffff8000b4a195 : add eax, 0x108e283 ; ret 0xf089
0xffffff80008e74dd : add eax, 0x141c56 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e74bd : add eax, 0x141c76 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e6c4d : add eax, 0x1422be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e6c2d : add eax, 0x1422de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e698d : add eax, 0x142356 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e696d : add eax, 0x142376 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e545d : add eax, 0x14365e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e543d : add eax, 0x14367e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008785ee : add eax, 0x1448b4b ; sub byte ptr [rcx + 0x39], cl ; ret 0x6d73
0xffffff80008e24ed : add eax, 0x146386 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e24cd : add eax, 0x1463a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000670672 : add eax, 0x148ca89 ; ret 0x8948
0xffffff80002e8e4f : add eax, 0x14c ; pop rbp ; ret
0xffffff80008d785d : add eax, 0x150686 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d783d : add eax, 0x1506a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d75ed : add eax, 0x1506ce ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d75cd : add eax, 0x1506ee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d737d : add eax, 0x150716 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d735d : add eax, 0x150736 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d59ed : add eax, 0x150b6e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d59cd : add eax, 0x150b8e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d617d : add eax, 0x150d3e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d69dd : add eax, 0x150e66 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d69bd : add eax, 0x150e86 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d49ed : add eax, 0x1510fe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d49cd : add eax, 0x15111e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d174d : add eax, 0x154176 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d172d : add eax, 0x154196 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d068d : add eax, 0x154f96 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d066d : add eax, 0x154fb6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008cea5d : add eax, 0x156906 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008cea3d : add eax, 0x156926 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ce0bd : add eax, 0x157006 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ce09d : add eax, 0x157026 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008cc2bd : add eax, 0x158b6e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008cc29d : add eax, 0x158b8e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ebb92 : add eax, 0x158d4800 ; call qword ptr [rsi]
0xffffff80008ebcce : add eax, 0x158d4800 ; ret
0xffffff80008c40dd : add eax, 0x160aa6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c40bd : add eax, 0x160ac6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c360d : add eax, 0x16131e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c35ed : add eax, 0x16133e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c297d : add eax, 0x16153e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c295d : add eax, 0x16155e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c0a2d : add eax, 0x163266 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008c0a0d : add eax, 0x163286 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800056383d : add eax, 0x16b800 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b687d : add eax, 0x16c9a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b685d : add eax, 0x16c9c6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b625d : add eax, 0x16cd56 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b623d : add eax, 0x16cd76 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b5c0d : add eax, 0x16d12e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b5bed : add eax, 0x16d14e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b595d : add eax, 0x16d176 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b501d : add eax, 0x16d886 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b4ffd : add eax, 0x16d8a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b3cdd : add eax, 0x16e19e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b3cbd : add eax, 0x16e1be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b28ed : add eax, 0x16e1c6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b31ed : add eax, 0x16e28e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b31cd : add eax, 0x16e2ae ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008af28d : add eax, 0x170dde ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008af26d : add eax, 0x170dfe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008adf7d : add eax, 0x17169e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008adf5d : add eax, 0x1716be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ad28d : add eax, 0x17196e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008aaa3d : add eax, 0x1723ee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008aaa1d : add eax, 0x17240e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a9e6d : add eax, 0x17247e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ab07d : add eax, 0x172736 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ab05d : add eax, 0x172756 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ab3dd : add eax, 0x172d56 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ab3bd : add eax, 0x172d76 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a7aad : add eax, 0x173d76 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a7a8d : add eax, 0x173d96 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a709d : add eax, 0x17442e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a707d : add eax, 0x17444e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a619d : add eax, 0x1750b6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a617d : add eax, 0x1750d6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a520d : add eax, 0x175cee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a51ed : add eax, 0x175d0e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a293d : add eax, 0x17830e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008a291d : add eax, 0x17832e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089cf0d : add eax, 0x17d69e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089d0ad : add eax, 0x17d84e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089d08d : add eax, 0x17d86e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089bbfd : add eax, 0x17e766 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089bbdd : add eax, 0x17e786 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089b8cd : add eax, 0x17e84e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089b8ad : add eax, 0x17e86e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089b59d : add eax, 0x17e936 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089b57d : add eax, 0x17e956 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089af7d : add eax, 0x17ed1e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089af5d : add eax, 0x17ed3e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000899bad : add eax, 0x17f6de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000898f3d : add eax, 0x17ffe6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000898f1d : add eax, 0x180006 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089666d : add eax, 0x1825c6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089664d : add eax, 0x1825e6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089504d : add eax, 0x1837de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089502d : add eax, 0x1837fe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000893dcd : add eax, 0x1846ee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000893dad : add eax, 0x18470e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000892f9d : add eax, 0x185186 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000892f7d : add eax, 0x1851a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008923ad : add eax, 0x185a4e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089238d : add eax, 0x185a6e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089180d : add eax, 0x186356 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008917ed : add eax, 0x186376 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089114d : add eax, 0x1867ee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089112d : add eax, 0x18680e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ffed : add eax, 0x187606 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ffcd : add eax, 0x187626 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ed6d : add eax, 0x188546 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ed4d : add eax, 0x188566 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088e24d : add eax, 0x188d9e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088e22d : add eax, 0x188dbe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ca9d : add eax, 0x18a246 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088ca7d : add eax, 0x18a266 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088a81d : add eax, 0x18c29e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088a7fd : add eax, 0x18c2be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088a37d : add eax, 0x18c46e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000889bed : add eax, 0x18c9d6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000889bcd : add eax, 0x18c9f6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000887d8d : add eax, 0x18dece ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000887d6d : add eax, 0x18deee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000885f1d : add eax, 0x18fb16 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000885efd : add eax, 0x18fb36 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088568d : add eax, 0x1900de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088566d : add eax, 0x1900fe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000884d5d : add eax, 0x1907e6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000884d3d : add eax, 0x190806 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088461d : add eax, 0x190cfe ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008845fd : add eax, 0x190d1e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088231d : add eax, 0x192ce6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008822fd : add eax, 0x192d06 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000881f9d : add eax, 0x192d96 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000881f7d : add eax, 0x192db6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088198d : add eax, 0x1930d6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088196d : add eax, 0x1930f6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088157d : add eax, 0x193216 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088155d : add eax, 0x193236 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088125d : add eax, 0x19330e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088123d : add eax, 0x19332e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800090abd2 : add eax, 0x193e21 ; ret
0xffffff800090abc2 : add eax, 0x193e31 ; ret
0xffffff800090abb2 : add eax, 0x193e41 ; ret
0xffffff800090aba2 : add eax, 0x193e51 ; ret
0xffffff800090ab92 : add eax, 0x193e61 ; ret
0xffffff800090ab82 : add eax, 0x193e71 ; ret
0xffffff80008455e6 : add eax, 0x1aab37 ; pop rbp ; ret
0xffffff80008626dd : add eax, 0x1afac6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008626bd : add eax, 0x1afae6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008632ed : add eax, 0x1b00f6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008632cd : add eax, 0x1b0116 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086308d : add eax, 0x1b012e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086306d : add eax, 0x1b014e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000862e2d : add eax, 0x1b0166 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000862bcd : add eax, 0x1b017e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000862e0d : add eax, 0x1b0186 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000862bad : add eax, 0x1b019e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086295d : add eax, 0x1b01a6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086291d : add eax, 0x1b01e6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086354d : add eax, 0x1b07f6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086352d : add eax, 0x1b0816 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000860e4d : add eax, 0x1b10be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000860e2d : add eax, 0x1b10de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800086293d : add eax, 0x1b1666 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085cced : add eax, 0x1b4aee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085cccd : add eax, 0x1b4b0e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085cf4d : add eax, 0x1b4d96 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085cf2d : add eax, 0x1b4db6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000858dbd : add eax, 0x1b87ae ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000858d9d : add eax, 0x1b87ce ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000373747 : add eax, 0x1cb0144 ; ret
0xffffff80007c3a5d : add eax, 0x1dbb70f ; ret
0xffffff800083282d : add eax, 0x1de8be ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800083280d : add eax, 0x1de8de ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008309ad : add eax, 0x1e041e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800083098d : add eax, 0x1e043e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082f66d : add eax, 0x1e140e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082f64d : add eax, 0x1e142e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082eb5d : add eax, 0x1e1cf6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082eb3d : add eax, 0x1e1d16 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082e01d : add eax, 0x1e2566 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082dffd : add eax, 0x1e2586 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082c13d : add eax, 0x1e40e6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082c11d : add eax, 0x1e4106 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082b51d : add eax, 0x1e4a46 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800082b4fd : add eax, 0x1e4a66 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000818d2d : add eax, 0x1f6dce ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000818d0d : add eax, 0x1f6dee ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800081804d : add eax, 0x1f784e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008ed0b5 : add eax, 0x1f89ba ; pop rbp ; ret
0xffffff80008161fd : add eax, 0x1f932e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008161dd : add eax, 0x1f934e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008eb5f5 : add eax, 0x1fa466 ; pop rbp ; ret
0xffffff8000814c9d : add eax, 0x1fa596 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000814c7d : add eax, 0x1fa5b6 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800081429d : add eax, 0x1fad2e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800081427d : add eax, 0x1fad4e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000813add : add eax, 0x1fb23e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800081303d : add eax, 0x1fba46 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800081301d : add eax, 0x1fba66 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000811a2d : add eax, 0x1fcd06 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000811a0d : add eax, 0x1fcd26 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008982de : add eax, 0x1fec65 ; setne dl ; jmp 0xffffff80008982f1
0xffffff800080ee46 : add eax, 0x1ff445 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000340f51 : add eax, 0x20 ; add esi, -4 ; jne 0xffffff8000340f49 ; pop rbp ; ret
0xffffff80008e9a51 : add eax, 0x203a62 ; mov rdx, rax ; jmp 0xffffff80008e9a69
0xffffff80008cdc6f : add eax, 0x217bdc ; pop rbp ; ret
0xffffff8000909777 : add eax, 0x22e144 ; jmp 0xffffff8000909746
0xffffff80008ad9e9 : add eax, 0x237e3a ; pop rbp ; ret
0xffffff80007f05f5 : add eax, 0x23c12e ; pop rbp ; ret
0xffffff80008d43ee : add eax, 0x2404c641 ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff80007dabcc : add eax, 0x24448b49 ; and byte ptr [rcx], ch ; ret
0xffffff80004f096f : add eax, 0x244c8b49 ; and byte ptr [rax + 0x39], cl ; ret 0x8d0f
0xffffff80008eddcb : add eax, 0x249ab8 ; pop rbp ; ret
0xffffff80008ed0d7 : add eax, 0x24a5fc ; pop rbp ; ret
0xffffff800089ab21 : add eax, 0x24ac02 ; pop rbp ; ret
0xffffff80008e8f9c : add eax, 0x24e707 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e76bc : add eax, 0x25000f ; pop rbp ; ret
0xffffff80008e75b6 : add eax, 0x2500ed ; pop rbp ; ret
0xffffff80008e6d26 : add eax, 0x250955 ; pop rbp ; ret
0xffffff80008e6a66 : add eax, 0x250bed ; pop rbp ; ret
0xffffff80008e5536 : add eax, 0x2520f5 ; pop rbp ; ret
0xffffff80008e25c6 : add eax, 0x25503d ; pop rbp ; ret
0xffffff80008d7936 : add eax, 0x25fca5 ; pop rbp ; ret
0xffffff80008d76c6 : add eax, 0x25feed ; pop rbp ; ret
0xffffff80008d7456 : add eax, 0x260135 ; pop rbp ; ret
0xffffff80008d6f0c : add eax, 0x2605e7 ; pop rbp ; ret
0xffffff8000884f87 : add eax, 0x26078c ; pop rbp ; ret
0xffffff80008d6ab6 : add eax, 0x260a3d ; pop rbp ; ret
0xffffff80008d650c : add eax, 0x260fbf ; pop rbp ; ret
0xffffff80008d6256 : add eax, 0x261275 ; pop rbp ; ret
0xffffff80008d5d4c : add eax, 0x261757 ; pop rbp ; ret
0xffffff80008d5ac6 : add eax, 0x2619dd ; pop rbp ; ret
0xffffff80008d559c : add eax, 0x261edf ; pop rbp ; ret
0xffffff80008d4ac6 : add eax, 0x2629b5 ; pop rbp ; ret
0xffffff80008d1e7c : add eax, 0x2655c7 ; pop rbp ; ret
0xffffff80008d1826 : add eax, 0x265c1d ; pop rbp ; ret
0xffffff80008d12fc : add eax, 0x26611f ; pop rbp ; ret
0xffffff80008d0766 : add eax, 0x266cb5 ; pop rbp ; ret
0xffffff80008d023c : add eax, 0x2671b7 ; pop rbp ; ret
0xffffff80008ceb36 : add eax, 0x2688bd ; pop rbp ; ret
0xffffff80008ce60c : add eax, 0x268dbf ; pop rbp ; ret
0xffffff80008ce196 : add eax, 0x269235 ; pop rbp ; ret
0xffffff80008cc396 : add eax, 0x26b00d ; pop rbp ; ret
0xffffff80008cb317 : add eax, 0x26c027 ; js 0xffffff80008cb382 ; ret
0xffffff80008cb037 : add eax, 0x26c304 ; shl eax, 5 ; pop rbp ; ret
0xffffff80008790c6 : add eax, 0x26c565 ; pop rbp ; ret
0xffffff80008c4a7c : add eax, 0x272887 ; pop rbp ; ret
0xffffff80008c41b6 : add eax, 0x27314d ; pop rbp ; ret
0xffffff80008c3c8c : add eax, 0x27364f ; pop rbp ; ret
0xffffff80008c36e6 : add eax, 0x273bf5 ; pop rbp ; ret
0xffffff80008c2cf9 : add eax, 0x2745ba ; pop rbp ; ret
0xffffff80008c2a56 : add eax, 0x27485d ; pop rbp ; ret
0xffffff80008c0e69 : add eax, 0x276432 ; pop rbp ; ret
0xffffff80008c0b06 : add eax, 0x27676d ; pop rbp ; ret
0xffffff80008661c6 : add eax, 0x27f265 ; pop rbp ; ret
0xffffff80008661a6 : add eax, 0x27f40d ; pop rbp ; ret
0xffffff80008661b6 : add eax, 0x27f415 ; pop rbp ; ret
0xffffff80008b6956 : add eax, 0x2808cd ; pop rbp ; ret
0xffffff80008b6336 : add eax, 0x280ec5 ; pop rbp ; ret
0xffffff8000864666 : add eax, 0x280f35 ; pop rbp ; ret
0xffffff8000864206 : add eax, 0x281295 ; pop rbp ; ret
0xffffff80008b5ce6 : add eax, 0x2814ed ; pop rbp ; ret
0xffffff80008b5a36 : add eax, 0x281775 ; pop rbp ; ret
0xffffff80008b50f6 : add eax, 0x28208d ; pop rbp ; ret
0xffffff80008b3db6 : add eax, 0x2833a5 ; pop rbp ; ret
0xffffff80008b32c6 : add eax, 0x283e6d ; pop rbp ; ret
0xffffff80008b2d9c : add eax, 0x28436f ; pop rbp ; ret
0xffffff80008b29c6 : add eax, 0x284745 ; pop rbp ; ret
0xffffff80008b24bc : add eax, 0x284c27 ; pop rbp ; ret
0xffffff80008af366 : add eax, 0x287d7d ; pop rbp ; ret
0xffffff800085d346 : add eax, 0x28805d ; pop rbp ; ret
0xffffff800085d355 : add eax, 0x288066 ; pop rbp ; ret
0xffffff80008ae7d9 : add eax, 0x2888e2 ; pop rbp ; ret
0xffffff80008ae056 : add eax, 0x289065 ; pop rbp ; ret
0xffffff80008ad366 : add eax, 0x289d2d ; pop rbp ; ret
0xffffff80008accb9 : add eax, 0x28a3d2 ; pop rbp ; ret
0xffffff80008ab6e9 : add eax, 0x28b952 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ab4b6 : add eax, 0x28bb85 ; pop rbp ; ret
0xffffff80008ab156 : add eax, 0x28bebd ; pop rbp ; ret
0xffffff80008aab16 : add eax, 0x28c4d5 ; pop rbp ; ret
0xffffff80008a9f46 : add eax, 0x28d07d ; pop rbp ; ret
0xffffff80008a7b86 : add eax, 0x28f405 ; pop rbp ; ret
0xffffff80008a765c : add eax, 0x28f907 ; pop rbp ; ret
0xffffff80008a7176 : add eax, 0x28fded ; pop rbp ; ret
0xffffff80008a6c4c : add eax, 0x2902e7 ; pop rbp ; ret
0xffffff80008a6276 : add eax, 0x290cbd ; pop rbp ; ret
0xffffff8000b49690 : add eax, 0x291 ; add byte ptr [rax + 1], cl ; ret
0xffffff80002ea04c : add eax, 0x2910c383 ; ret
0xffffff80008a5d4c : add eax, 0x2911bf ; pop rbp ; ret
0xffffff80008a52e6 : add eax, 0x291c25 ; pop rbp ; ret
0xffffff8000852c20 : add eax, 0x291d03 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a45b7 : add eax, 0x29292c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a2a16 : add eax, 0x2944cd ; pop rbp ; ret
0xffffff800089d186 : add eax, 0x299d2d ; pop rbp ; ret
0xffffff800089cfe6 : add eax, 0x299ea5 ; pop rbp ; ret
0xffffff800089bcd6 : add eax, 0x29b185 ; pop rbp ; ret
0xffffff800089b9a6 : add eax, 0x29b48d ; pop rbp ; ret
0xffffff800089b676 : add eax, 0x29b795 ; pop rbp ; ret
0xffffff800089b056 : add eax, 0x29bd8d ; pop rbp ; ret
0xffffff8000899c86 : add eax, 0x29d135 ; pop rbp ; ret
0xffffff800089977c : add eax, 0x29d617 ; pop rbp ; ret
0xffffff8000899016 : add eax, 0x29dd7d ; pop rbp ; ret
0xffffff80008989fc : add eax, 0x29e36f ; pop rbp ; ret
0xffffff8000896746 : add eax, 0x2a0625 ; pop rbp ; ret
0xffffff80008961bc : add eax, 0x2a0b87 ; pop rbp ; ret
0xffffff8000895126 : add eax, 0x2a1c1d ; pop rbp ; ret
0xffffff8000894bfc : add eax, 0x2a211f ; pop rbp ; ret
0xffffff8000893ea6 : add eax, 0x2a2e75 ; pop rbp ; ret
0xffffff800089397c : add eax, 0x2a3377 ; pop rbp ; ret
0xffffff8000893076 : add eax, 0x2a3c7d ; pop rbp ; ret
0xffffff8000892b4c : add eax, 0x2a417f ; pop rbp ; ret
0xffffff8000892486 : add eax, 0x2a4845 ; pop rbp ; ret
0xffffff8000891f5c : add eax, 0x2a4d47 ; pop rbp ; ret
0xffffff80008918e6 : add eax, 0x2a53bd ; pop rbp ; ret
0xffffff80008913bc : add eax, 0x2a58bf ; pop rbp ; ret
0xffffff8000891226 : add eax, 0x2a5a55 ; pop rbp ; ret
0xffffff8000890cfc : add eax, 0x2a5f57 ; pop rbp ; ret
0xffffff80008900c6 : add eax, 0x2a6b8d ; pop rbp ; ret
0xffffff800088fb9c : add eax, 0x2a708f ; pop rbp ; ret
0xffffff800088ee46 : add eax, 0x2a7de5 ; pop rbp ; ret
0xffffff800088e91c : add eax, 0x2a82e7 ; pop rbp ; ret
0xffffff800088e326 : add eax, 0x2a88dd ; pop rbp ; ret
0xffffff800088ddfc : add eax, 0x2a8ddf ; pop rbp ; ret
0xffffff800088cb76 : add eax, 0x2aa065 ; pop rbp ; ret
0xffffff800088a8f6 : add eax, 0x2ac2bd ; pop rbp ; ret
0xffffff800088a456 : add eax, 0x2ac735 ; pop rbp ; ret
0xffffff8000889f4c : add eax, 0x2acc17 ; pop rbp ; ret
0xffffff8000889cc6 : add eax, 0x2ace9d ; pop rbp ; ret
0xffffff800088979c : add eax, 0x2ad39f ; pop rbp ; ret
0xffffff8000887e66 : add eax, 0x2aecd5 ; pop rbp ; ret
0xffffff800088793c : add eax, 0x2af1d7 ; pop rbp ; ret
0xffffff8000885ff6 : add eax, 0x2b0b1d ; pop rbp ; ret
0xffffff8000885acc : add eax, 0x2b0ff7 ; pop rbp ; ret
0xffffff8000885766 : add eax, 0x2b135d ; pop rbp ; ret
0xffffff800088523c : add eax, 0x2b185f ; pop rbp ; ret
0xffffff8000884e36 : add eax, 0x2b1c65 ; pop rbp ; ret
0xffffff800088490c : add eax, 0x2b2167 ; pop rbp ; ret
0xffffff80008846f6 : add eax, 0x2b237d ; pop rbp ; ret
0xffffff80008823f6 : add eax, 0x2b4655 ; pop rbp ; ret
0xffffff8000882076 : add eax, 0x2b49ad ; pop rbp ; ret
0xffffff8000881a66 : add eax, 0x2b4f95 ; pop rbp ; ret
0xffffff8000881656 : add eax, 0x2b537d ; pop rbp ; ret
0xffffff8000881336 : add eax, 0x2b5675 ; pop rbp ; ret
0xffffff80008383de : add eax, 0x2c3e3d ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff8000863836 : add eax, 0x2d2ed5 ; pop rbp ; ret
0xffffff8000863626 : add eax, 0x2d31ad ; pop rbp ; ret
0xffffff80008633c6 : add eax, 0x2d33e5 ; pop rbp ; ret
0xffffff8000863166 : add eax, 0x2d361d ; pop rbp ; ret
0xffffff8000810b77 : add eax, 0x2d3624 ; pop rbp ; ret
0xffffff8000862f06 : add eax, 0x2d3855 ; pop rbp ; ret
0xffffff8000862ca6 : add eax, 0x2d3a8d ; pop rbp ; ret
0xffffff8000862a46 : add eax, 0x2d3c9d ; pop rbp ; ret
0xffffff80008627b6 : add eax, 0x2d3f05 ; pop rbp ; ret
0xffffff800080f326 : add eax, 0x2d4e75 ; pop rbp ; ret
0xffffff800080ec44 : add eax, 0x2d553f ; pop rbp ; ret
0xffffff8000860f26 : add eax, 0x2d576d ; pop rbp ; ret
0xffffff800085d026 : add eax, 0x2d961d ; pop rbp ; ret
0xffffff800085cdc6 : add eax, 0x2d983d ; pop rbp ; ret
0xffffff800085936c : add eax, 0x2dd1c7 ; pop rbp ; ret
0xffffff8000858e96 : add eax, 0x2dd69d ; pop rbp ; ret
0xffffff80008b6a93 : add eax, 0x2e2b8 ; loopne 0xffffff80008b6afe ; ret
0xffffff80007faf65 : add eax, 0x2e915e ; pop rbp ; ret
0xffffff800078d245 : add eax, 0x2f747e ; pop rbp ; ret
0xffffff8000832906 : add eax, 0x302b65 ; pop rbp ; ret
0xffffff800083179c : add eax, 0x303ca7 ; pop rbp ; ret
0xffffff8000830a86 : add eax, 0x3049bd ; pop rbp ; ret
0xffffff800083055c : add eax, 0x304ebf ; pop rbp ; ret
0xffffff800082f746 : add eax, 0x305cd5 ; pop rbp ; ret
0xffffff800082ec36 : add eax, 0x3067bd ; pop rbp ; ret
0xffffff800082e0f6 : add eax, 0x3072d5 ; pop rbp ; ret
0xffffff800082d06c : add eax, 0x308337 ; pop rbp ; ret
0xffffff80007db5e4 : add eax, 0x3088ff ; pop rbp ; ret
0xffffff800082c216 : add eax, 0x30918d ; pop rbp ; ret
0xffffff800082bcec : add eax, 0x30968f ; pop rbp ; ret
0xffffff800082b5f6 : add eax, 0x309d85 ; pop rbp ; ret
0xffffff800082a54f : add eax, 0x30ae04 ; pop rbp ; ret
0xffffff80008202b2 : add eax, 0x315041 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000818e06 : add eax, 0x31c54d ; pop rbp ; ret
0xffffff800081826c : add eax, 0x31d04f ; pop rbp ; ret
0xffffff8000818126 : add eax, 0x31d195 ; pop rbp ; ret
0xffffff8000817c1c : add eax, 0x31d677 ; pop rbp ; ret
0xffffff80008162d6 : add eax, 0x31efbd ; pop rbp ; ret
0xffffff8000815dac : add eax, 0x31f4bf ; pop rbp ; ret
0xffffff8000814d76 : add eax, 0x3204f5 ; pop rbp ; ret
0xffffff800081484c : add eax, 0x3209f7 ; pop rbp ; ret
0xffffff8000814376 : add eax, 0x320ecd ; pop rbp ; ret
0xffffff8000813e4c : add eax, 0x3213cf ; pop rbp ; ret
0xffffff8000813bb6 : add eax, 0x321665 ; pop rbp ; ret
0xffffff8000813116 : add eax, 0x3220dd ; pop rbp ; ret
0xffffff8000812bec : add eax, 0x3225df ; pop rbp ; ret
0xffffff8000811b06 : add eax, 0x3236c5 ; pop rbp ; ret
0xffffff80008115e7 : add eax, 0x323bbc ; pop rbp ; ret
0xffffff8000810e26 : add eax, 0x32437d ; pop rbp ; ret
0xffffff800080ee0e : add eax, 0x32637d ; pop rbp ; ret
0xffffff800080d663 : add eax, 0x327b00 ; pop rbp ; ret
0xffffff80007b3ea9 : add eax, 0x32fd12 ; pop rbp ; ret
0xffffff80007b3d8d : add eax, 0x32fe2e ; pop rbp ; ret
0xffffff80007a560d : add eax, 0x339486 ; pop rbp ; ret
0xffffff80007484cf : add eax, 0x339e77 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff80007a251b : add eax, 0x33c540 ; pop rbp ; ret
0xffffff80007e933a : add eax, 0x34b469 ; pop rbp ; ret
0xffffff80007e7cdb : add eax, 0x34ca80 ; pop rbp ; ret
0xffffff8000716f6b : add eax, 0x35f207 ; cmp al, 1 ; clc ; pop rbp ; ret
0xffffff80007ce568 : add eax, 0x366107 ; pop rbp ; ret
0xffffff80007b4174 : add eax, 0x380477 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800075704d : add eax, 0x38778e ; pop rbp ; ret
0xffffff800075225d : add eax, 0x38c53e ; pop rbp ; ret
0xffffff8000751cad : add eax, 0x38cae6 ; pop rbp ; ret
0xffffff8000751329 : add eax, 0x38d45a ; pop rbp ; ret
0xffffff800074b7f5 : add eax, 0x392e9e ; pop rbp ; ret
0xffffff80007047e7 : add eax, 0x39410000 ; ret 0xf44
0xffffff8000705ef7 : add eax, 0x39480000 ; ret
0xffffff800078327c : add eax, 0x3948fffd ; ret
0xffffff80005dadd4 : add eax, 0x394c0000 ; ret 0x4e74
0xffffff800079ddb0 : add eax, 0x39656b ; pop rbp ; ret
0xffffff8000798ae3 : add eax, 0x397788 ; pop rbp ; ret
0xffffff800074500f : add eax, 0x398424 ; pop rbp ; ret
0xffffff80006db6b7 : add eax, 0x399cd8 ; push rax ; ret
0xffffff80006c5496 : add eax, 0x3a3795 ; pop rbp ; jmp rax
0xffffff80006c54a6 : add eax, 0x3a379d ; pop rbp ; jmp rax
0xffffff80006c53e6 : add eax, 0x3a37fd ; pop rbp ; jmp rax
0xffffff80006c53d6 : add eax, 0x3a3805 ; pop rbp ; jmp rax
0xffffff800072f3c4 : add eax, 0x3ad53f ; pop rbp ; ret
0xffffff80006564aa : add eax, 0x3b16a1 ; pop rbp ; ret
0xffffff800065648e : add eax, 0x3b1735 ; pop rbp ; ret
0xffffff800065649c : add eax, 0x3b179f ; pop rbp ; ret
0xffffff8000656480 : add eax, 0x3b1833 ; pop rbp ; ret
0xffffff800065646d : add eax, 0x3b18be ; pop rbp ; ret
0xffffff800077d0d5 : add eax, 0x3b217e ; pop rbp ; ret
0xffffff800077cab1 : add eax, 0x3b347a ; pop rbp ; ret
0xffffff8000764cde : add eax, 0x3cb14d ; pop rbp ; ret
0xffffff8000758663 : add eax, 0x3d7778 ; pop rbp ; ret
0xffffff8000278058 : add eax, 0x3d8d4800 ; ret 0x6c10
0xffffff8000683d46 : add eax, 0x3ef371 ; pop rbp ; ret
0xffffff8000683d3d : add eax, 0x3ef37a ; pop rbp ; ret
0xffffff800073bb81 : add eax, 0x3f3202 ; pop rbp ; ret
0xffffff80005cfa7d : add eax, 0x3f641a ; pop rbp ; ret
0xffffff8000276340 : add eax, 0x40 ; add esi, -8 ; jne 0xffffff8000276309 ; pop rbp ; ret
0xffffff8000807e39 : add eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0xffffff80007d40ef : add eax, 0x415b0036 ; pop rsi ; pop rbp ; ret
0xffffff80002f5c82 : add eax, 0x415b3575 ; pop rsi ; pop rbp ; ret
0xffffff8000338814 : add eax, 0x430fc239 ; ret 0x589
0xffffff80005562ed : add eax, 0x436c77 ; pop rbp ; ret
0xffffff80006306e1 : add eax, 0x43fbda ; pop rbp ; ret
0xffffff8000630276 : add eax, 0x440045 ; xor eax, eax ; pop rbp ; ret
0xffffff800062ee4b : add eax, 0x441260 ; pop rbp ; ret
0xffffff800062e58c : add eax, 0x441aaf ; pop rbp ; ret
0xffffff800062e256 : add eax, 0x441de5 ; xor eax, eax ; pop rbp ; ret
0xffffff80004f66fb : add eax, 0x450f6600 ; ret 0xc90f
0xffffff80006784b8 : add eax, 0x463943 ; call 0xffffff800029afa8
0xffffff80006783f5 : add eax, 0x4639ee ; call 0xffffff800029afa8
0xffffff8000608545 : add eax, 0x4d14f4 ; add al, 0x75 ; ret
0xffffff8000650358 : add eax, 0x4d46b2 ; or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x3d83
0xffffff8000646616 : add eax, 0x4de47a ; and eax, 1 ; pop rbp ; ret
0xffffff8000646606 : add eax, 0x4de489 ; and eax, 1 ; pop rbp ; ret
0xffffff80005f67f9 : add eax, 0x4e3665 ; sub al, 0x5d ; ret
0xffffff800034366e : add eax, 0x4f0fd039 ; ret 0x8941
0xffffff800050fc65 : add eax, 0x4f0fd039 ; ret 0xc35d
0xffffff8000559166 : add eax, 0x50fac5 ; pop rbp ; jmp rax
0xffffff8000559176 : add eax, 0x50facd ; pop rbp ; jmp rax
0xffffff80005590d6 : add eax, 0x50fb0d ; pop rbp ; jmp rax
0xffffff80005590c6 : add eax, 0x50fb15 ; pop rbp ; jmp rax
0xffffff80005a902f : add eax, 0x5301f0 ; push rax ; ret
0xffffff800059ecfa : add eax, 0x53a4c1 ; call 0xffffff800029afa7
0xffffff800059ecb6 : add eax, 0x53a4ed ; call 0xffffff800029afa7
0xffffff80004f9f7c : add eax, 0x56a6ff ; mov eax, dword ptr [rax + rdi*4] ; pop rbp ; ret
0xffffff8000569855 : add eax, 0x56ee56 ; mov eax, ecx ; pop rbp ; ret
0xffffff80005b24a8 : add eax, 0x5701d3 ; pop rbp ; ret
0xffffff800038c0be : add eax, 0x58 ; pop rbp ; ret
0xffffff80003a498c : add eax, 0x58595b41 ; ret
0xffffff800054fe53 : add eax, 0x588548 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005897b2 : add eax, 0x598549 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089336b : add eax, 0x5b000000 ; pop r14 ; pop rbp ; ret
0xffffff80008f2a27 : add eax, 0x5bffffc8 ; pop r14 ; pop rbp ; ret
0xffffff8000256ad3 : add eax, 0x5d000000 ; ret
0xffffff80008a7b87 : add eax, 0x5d0028f4 ; ret
0xffffff80008627b7 : add eax, 0x5d002d3f ; ret
0xffffff80006c53d7 : add eax, 0x5d003a38 ; jmp rax
0xffffff80004847a7 : add eax, 0x5d006508 ; ret
0xffffff80004c67e7 : add eax, 0x5d006535 ; jmp 0xffffff8000392a47
0xffffff8000342706 : add eax, 0x5d01e083 ; ret
0xffffff80003a2fcb : add eax, 0x5d01fff0 ; ret
0xffffff80006dac02 : add eax, 0x5d0847ff ; ret
0xffffff8000272aeb : add eax, 0x5d100040 ; ret
0xffffff8000550666 : add eax, 0x5d11fd ; pop rbp ; ret
0xffffff8000550656 : add eax, 0x5d1209 ; pop rbp ; ret
0xffffff800055063d : add eax, 0x5d1226 ; pop rbp ; ret
0xffffff800039cd85 : add eax, 0x5d48408b ; ret
0xffffff8000389ddb : add eax, 0x5d487089 ; ret
0xffffff8000389d6b : add eax, 0x5d547089 ; ret
0xffffff8000807ebb : add eax, 0x5d5b0000 ; ret
0xffffff80002588bb : add eax, 0x5d5e415b ; ret
0xffffff8000395231 : add eax, 0x5d8e0409 ; ret
0xffffff8000395253 : add eax, 0x5d8e0421 ; ret
0xffffff8000756af8 : add eax, 0x5dc03100 ; ret
0xffffff80003381ab : add eax, 0x5dc0b60f ; ret
0xffffff8000451ed0 : add eax, 0x5dc6b70f ; ret
0xffffff80004f9e82 : add eax, 0x5dd2a1 ; pop rbp ; ret
0xffffff8000755eca : add eax, 0x5df08948 ; ret
0xffffff800027efc2 : add eax, 0x5e415b00 ; pop rbp ; ret
0xffffff800059326d : add eax, 0x5ff4800 ; ret 0x58e8
0xffffff80003c6179 : add eax, 0x5ffd1e ; pop rbp ; ret
0xffffff80004d021b : add eax, 0x606ef8 ; pop rbp ; ret
0xffffff80005000ad : add eax, 0x61b2a6 ; pop rbp ; ret
0xffffff8000448a99 : add eax, 0x61bc22 ; pop rbp ; ret
0xffffff8000448a91 : add eax, 0x61bc3a ; pop rbp ; ret
0xffffff80004fa010 : add eax, 0x61fc13 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039b8b4 : add eax, 0x63480000 ; adc al, 0xb0 ; add rdx, rax ; jmp rdx
0xffffff8000370957 : add eax, 0x63480000 ; ret
0xffffff80007717ba : add eax, 0x63480000 ; ret 0x8b49
0xffffff80002703cf : add eax, 0x63481077 ; ret
0xffffff8000807cd3 : add eax, 0x6348707f ; ret 0x8b48
0xffffff80004a804b : add eax, 0x6353e8 ; pop rbp ; ret
0xffffff80004ced70 : add eax, 0x64b0db ; pop rbp ; ret
0xffffff80004847a6 : add eax, 0x650805 ; pop rbp ; ret
0xffffff80004c9491 : add eax, 0x6508d2 ; pop rbp ; ret
0xffffff80004829ca : add eax, 0x6525b1 ; pop rbp ; ret
0xffffff80004b7c0b : add eax, 0x65df40 ; pop rbp ; ret
0xffffff80005e32d6 : add eax, 0x6748d49 ; or byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0xffffff800049d98d : add eax, 0x677bbe ; pop rbp ; ret
0xffffff800049d246 : add eax, 0x67829d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000496f1f : add eax, 0x67d5 ; add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0xffffff80003910a3 : add eax, 0x68 ; pop rbp ; ret
0xffffff80003c71e6 : add eax, 0x692c65 ; pop rbp ; ret
0xffffff80003c7176 : add eax, 0x692cdd ; pop rbp ; ret
0xffffff80003c619a : add eax, 0x693b4c ; pop rbp ; ret
0xffffff80003c0855 : add eax, 0x6996d6 ; pop rbp ; ret
0xffffff80003ae6c4 : add eax, 0x6a2bd7 ; pop rbp ; ret
0xffffff80003ad52e : add eax, 0x6a3b4d ; call qword ptr [rax]
0xffffff80003acfd0 : add eax, 0x6a40ab ; call qword ptr [rax]
0xffffff80003ab662 : add eax, 0x6a5c21 ; pop rbp ; ret
0xffffff8000391156 : add eax, 0x6a6f65 ; pop rbp ; ret
0xffffff800039ee3d : add eax, 0x6b223e ; call qword ptr [rax]
0xffffff800039ebfb : add eax, 0x6b2480 ; call qword ptr [rax]
0xffffff800042062f : add eax, 0x6b475c ; pop rbp ; ret
0xffffff800041ea67 : add eax, 0x6b6304 ; pop rbp ; ret
0xffffff8000369cf5 : add eax, 0x6c31d6 ; pop rbp ; ret
0xffffff8000369035 : add eax, 0x6c3e92 ; pop rbp ; ret
0xffffff80007cff38 : add eax, 0x6c4d8041 ; adc dh, dh ; ret 0x7440
0xffffff80007cff24 : add eax, 0x6c4d8041 ; add esi, esi ; ret 0x7410
0xffffff80007cff2e : add eax, 0x6c4d8041 ; or dh, dh ; ret 0x7420
0xffffff8000366eed : add eax, 0x6c5b16 ; pop rbp ; ret
0xffffff8000366ecd : add eax, 0x6c5b36 ; pop rbp ; ret
0xffffff8000366e96 : add eax, 0x6c5bd5 ; pop rbp ; ret
0xffffff800040badc : add eax, 0x70835f ; pop rbp ; ret
0xffffff80003ca8e0 : add eax, 0x708453 ; pop rbp ; ret
0xffffff80003bac05 : add eax, 0x71808a ; and eax, 1 ; pop rbp ; ret
0xffffff80003b8524 : add eax, 0x71951f ; xor eax, eax ; pop rbp ; ret
0xffffff80003b3a0c : add eax, 0x71eaab ; jmp 0xffffff80003b3a49
0xffffff80003b1cdb : add eax, 0x7207dc ; pop rbp ; ret
0xffffff80003b1cd3 : add eax, 0x7207e0 ; pop rbp ; ret
0xffffff80003b1c79 : add eax, 0x72083e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800058c140 : add eax, 0x72894166 ; or al, 0xf6 ; ret 0x7410
0xffffff80003a9199 : add eax, 0x728a2a ; call rax
0xffffff8000745bae : add eax, 0x72c23948 ; or cl, byte ptr [rax + 0x39] ; ret 0x8948
0xffffff80003a31b5 : add eax, 0x72e7a2 ; pop rbp ; ret
0xffffff80008c2243 : add eax, 0x730c4639 ; ud0 ; ret 0x8348
0xffffff8000399713 : add eax, 0x730c4f39 ; or al, 0xff ; ret 0x8348
0xffffff800039aa14 : add eax, 0x736f1f ; pop rbp ; ret
0xffffff800039a606 : add eax, 0x73730d ; pop rbp ; ret
0xffffff8000394e45 : add eax, 0x73c466 ; pop rbp ; ret
0xffffff80003c7f85 : add eax, 0x73dd92 ; pop rbp ; ret
0xffffff80003918f6 : add eax, 0x73f975 ; pop rbp ; ret
0xffffff80002fe3e2 : add eax, 0x74000000 ; ret 0xc031
0xffffff8000390735 : add eax, 0x740b2e ; pop rbp ; ret
0xffffff80002ea434 : add eax, 0x7423ab ; pop rbp ; ret
0xffffff80003c21d5 : add eax, 0x742e66 ; pop rbp ; ret
0xffffff80002e9795 : add eax, 0x742ffe ; pop rbp ; ret
0xffffff800038db36 : add eax, 0x7436c5 ; pop rbp ; ret
0xffffff80003ba7d5 : add eax, 0x74708e ; pop rbp ; ret
0xffffff8000719332 : add eax, 0x74ce3948 ; or cl, byte ptr [rax + 0x39] ; ret 0xe7f
0xffffff8000265177 : add eax, 0x7512fb83 ; movsxd rsi, esi ; ret 0x7580
0xffffff800039a0a6 : add eax, 0x751a95 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a7041 : add eax, 0x75878a ; call qword ptr [rax]
0xffffff80003907f3 : add eax, 0x75b348 ; pop rbp ; ret
0xffffff80003907b2 : add eax, 0x75b391 ; pop rbp ; ret
0xffffff80003a38b6 : add eax, 0x75b9ed ; pop rbp ; ret
0xffffff80003a37be : add eax, 0x75bab5 ; mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff80003a2d66 : add eax, 0x75bd65 ; pop rbp ; ret
0xffffff800038de57 : add eax, 0x75f239d0 ; ret 0xd284
0xffffff80002cb0b8 : add eax, 0x7616ab ; pop rbp ; ret
0xffffff80002cb08e : add eax, 0x7616d5 ; pop rbp ; ret
0xffffff800036b085 : add eax, 0x76433e ; pop rbp ; ret
0xffffff800039a220 : add eax, 0x764f53 ; pop rbp ; ret
0xffffff8000369e35 : add eax, 0x765532 ; pop rbp ; ret
0xffffff8000368385 : add eax, 0x766526 ; pop rbp ; ret
0xffffff8000368305 : add eax, 0x7665c2 ; pop rbp ; ret
0xffffff8000368285 : add eax, 0x766646 ; pop rbp ; ret
0xffffff8000367fe5 : add eax, 0x7668da ; pop rbp ; ret
0xffffff8000367f25 : add eax, 0x766996 ; pop rbp ; ret
0xffffff8000367965 : add eax, 0x766f42 ; pop rbp ; ret
0xffffff800036772f : add eax, 0x76715c ; pop rbp ; ret
0xffffff8000393f95 : add eax, 0x76b836 ; call qword ptr [rax]
0xffffff8000857aa5 : add eax, 0x77193948 ; adc ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff80006d6403 : add eax, 0x7789ce0f ; jo 0xffffff80006d646e ; ret
0xffffff8000841b27 : add eax, 0x77dc3949 ; ret
0xffffff8000841a47 : add eax, 0x77e3394c ; ret
0xffffff8000366dc5 : add eax, 0x784d92 ; pop rbp ; ret
0xffffff8000377000 : add eax, 0x78811b ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff800029eadb : add eax, 0x78d548 ; pop rbp ; ret
0xffffff800036d24e : add eax, 0x78f095 ; pop rbp ; ret
0xffffff800036a3ad : add eax, 0x791e8a ; pop rbp ; ret
0xffffff800036836e : add eax, 0x793ec9 ; xor eax, eax ; pop rbp ; ret
0xffffff80003682ef : add eax, 0x793f48 ; xor eax, eax ; pop rbp ; ret
0xffffff8000366eb6 : add eax, 0x79824d ; pop rbp ; ret
0xffffff8000366ea6 : add eax, 0x798265 ; pop rbp ; ret
0xffffff800028f034 : add eax, 0x79d007 ; pop rbp ; ret
0xffffff800028f016 : add eax, 0x79d01d ; pop rbp ; jmp rax
0xffffff800028f004 : add eax, 0x79d02f ; pop rbp ; ret
0xffffff800028e55b : add eax, 0x79dac8 ; pop rbp ; ret
0xffffff800034f897 : add eax, 0x7aa800 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034f2a0 : add eax, 0x7ab08f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000310ba7 : add eax, 0x7ae704 ; pop rbp ; ret
0xffffff800034305c : add eax, 0x7b6967 ; xor edi, edi ; call rax
0xffffff8000273947 : add eax, 0x7b894400 ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff800033a497 : add eax, 0x7bf4ec ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800033849b : add eax, 0x7c16b8 ; jne 0xffffff80003384ac ; pop rbp ; ret
0xffffff8000716fb9 : add eax, 0x7c25b07f ; and rax, rcx ; pop rbp ; ret
0xffffff8000334a2d : add eax, 0x7c6bee ; cmovbe eax, ecx ; pop rbp ; ret
0xffffff80002ed3e5 : add eax, 0x7d1e4e ; pop rbp ; ret
0xffffff800031f172 : add eax, 0x7da6b1 ; pop rbp ; ret
0xffffff800030fd4e : add eax, 0x7ecd21 ; pop rbp ; ret
0xffffff80002ffad1 : add eax, 0x7f800a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ff9f3 : add eax, 0x7f8120 ; pop rbp ; ret
0xffffff80002ff9d6 : add eax, 0x7f8141 ; xor eax, eax ; pop rbp ; ret
0xffffff80006b82b8 : add eax, 0x8000003 ; ret
0xffffff80002a6dd7 : add eax, 0x8019ab ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff80002eabcf : add eax, 0x80645c ; pop rbp ; ret
0xffffff80002ea93d : add eax, 0x8066d6 ; pop rbp ; ret
0xffffff8000604fb1 : add eax, 0x81000000 ; call rcx
0xffffff8000291002 : add eax, 0x8114b1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002da695 : add eax, 0x813ca6 ; pop rbp ; ret
0xffffff800052db62 : add eax, 0x8148ffbe ; ret
0xffffff800028a812 : add eax, 0x817be9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d4690 : add eax, 0x81988b ; pop rbp ; ret
0xffffff80002c9ed5 : add eax, 0x823dae ; pop rbp ; ret
0xffffff80002c9bab : add eax, 0x823fa0 ; pop rbp ; ret
0xffffff80002c9bc6 : add eax, 0x823ff5 ; pop rbp ; ret
0xffffff80002c9bbd : add eax, 0x823ff6 ; pop rbp ; ret
0xffffff80002c9bb4 : add eax, 0x823ff7 ; pop rbp ; ret
0xffffff80002c9bf3 : add eax, 0x824088 ; pop rbp ; ret
0xffffff80002c9bea : add eax, 0x824089 ; pop rbp ; ret
0xffffff80002c9be1 : add eax, 0x82408a ; pop rbp ; ret
0xffffff80002c9bd8 : add eax, 0x82408b ; pop rbp ; ret
0xffffff80002c9bcf : add eax, 0x82408c ; pop rbp ; ret
0xffffff80006c0d7f : add eax, 0x83000f00 ; ret
0xffffff800027daa3 : add eax, 0x83410000 ; call qword ptr [rdx]
0xffffff800059c5a1 : add eax, 0x83480000 ; ret
0xffffff80004c8829 : add eax, 0x8348a975 ; ret
0xffffff80007d7614 : add eax, 0x8348ffac ; ret
0xffffff8000267878 : add eax, 0x839213 ; pop rbp ; ret
0xffffff8000629928 : add eax, 0x83ca8900 ; ret 0x890a
0xffffff8000262b25 : add eax, 0x83d25a ; pop rbp ; ret
0xffffff8000262af2 : add eax, 0x83d2a8 ; pop rbp ; ret
0xffffff8000262986 : add eax, 0x83d3fd ; pop rbp ; ret
0xffffff80002af1e4 : add eax, 0x83e28f ; pop rbp ; ret
0xffffff80002a5b16 : add eax, 0x846a11 ; mov eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80002a1f6a : add eax, 0x84a661 ; push rax ; ret
0xffffff80002a0416 : add eax, 0x84c015 ; pop rbp ; ret
0xffffff8000536562 : add eax, 0x85480000 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000290ee6 : add eax, 0x85a425 ; pop rbp ; ret
0xffffff8000290ed6 : add eax, 0x85a435 ; pop rbp ; ret
0xffffff8000290ec6 : add eax, 0x85a445 ; pop rbp ; ret
0xffffff800028f9b4 : add eax, 0x85bba7 ; pop rbp ; ret
0xffffff800028f968 : add eax, 0x85bbd3 ; pop rbp ; ret
0xffffff800084219e : add eax, 0x85c1440f ; fisttp dword ptr [rdi] ; ret
0xffffff800027552c : add eax, 0x872b3f ; pop rbp ; ret
0xffffff800056b12b : add eax, 0x8841c000 ; ret 0xc9ff
0xffffff800025ebf5 : add eax, 0x8880ca ; pop rbp ; ret
0xffffff800025ebe5 : add eax, 0x8880d6 ; pop rbp ; ret
0xffffff800025f380 : add eax, 0x888ed7 ; pop rbp ; ret
0xffffff80002cfcc7 : add eax, 0x89000002 ; ret
0xffffff80002fcb67 : add eax, 0x89000006 ; ret
0xffffff80005179d7 : add eax, 0x89002989 ; ret
0xffffff8000437c57 : add eax, 0x89003b55 ; ret
0xffffff80007f2ce8 : add eax, 0x8902c883 ; add esi, esi ; ret 0x7408
0xffffff80007dfe70 : add eax, 0x89440000 ; ret
0xffffff80002d23f4 : add eax, 0x89480000 ; ret
0xffffff800030b64d : add eax, 0x89480004 ; ret
0xffffff800079c6ac : add eax, 0x89480007 ; ret
0xffffff80006b4495 : add eax, 0x89480010 ; ret
0xffffff8000664555 : add eax, 0x89480015 ; ret
0xffffff8000805008 : add eax, 0x89480031 ; ret
0xffffff800065baaa : add eax, 0x8948ce89 ; ret 0x8948
0xffffff80006573d9 : add eax, 0x8948ce89 ; ret 0x894c
0xffffff800065c7d8 : add eax, 0x8948cf89 ; ret 0x8948
0xffffff80002ae898 : add eax, 0x8948d0ff ; ret
0xffffff80005d3762 : add eax, 0x8948ffd0 ; ret
0xffffff8000388320 : add eax, 0x8948fff5 ; ret
0xffffff80007f26d2 : add eax, 0x8948fff6 ; ret
0xffffff80002b95ae : add eax, 0x8948fffb ; ret
0xffffff8000558c74 : add eax, 0x8948fffd ; ret
0xffffff8000336d3e : add eax, 0x894c0000 ; and cl, ch ; ret
0xffffff8000316014 : add eax, 0x894c0000 ; ret
0xffffff800036fce1 : add eax, 0x89c70144 ; sal dword ptr [rcx], cl ; ret
0xffffff8000711097 : add eax, 0x89fffba1 ; ret 0xd285
0xffffff80004c8d47 : add eax, 0x8b413475 ; push rbp ; add al, 0xf6 ; ret 0x7540
0xffffff80008e3233 : add eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff80002b79fd : add eax, 0x950fc985 ; ret 0x6348
0xffffff8000843187 : add eax, 0x970f0000 ; ret 0x9d8b
0xffffff80008a2077 : add eax, 0xa9e063e8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800076d0e7 : add eax, 0xb0a8f3e8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80005964b6 : add eax, 0xb60f0000 ; ret 0xb60f
0xffffff80003b2254 : add eax, 0xb60f0000 ; ret 0xc148
0xffffff800069a36b : add eax, 0xb60f4108 ; xchg eax, esi ; ret
0xffffff800089e2be : add eax, 0xbf410000 ; ret 2
0xffffff8000664627 : add eax, 0xc0310000 ; call 0xffffff800028e1b8
0xffffff8000668a37 : add eax, 0xc0310000 ; call 0xffffff800028e4a8
0xffffff80006df9e7 : add eax, 0xc0310000 ; pop rbp ; ret
0xffffff800066d967 : add eax, 0xc0310034 ; call 0xffffff800028e4a8
0xffffff800077df63 : add eax, 0xc03102eb ; movzx eax, al ; pop rbp ; ret
0xffffff8000696f8d : add eax, 0xc166c101 ; ret
0xffffff80004eda08 : add eax, 0xc2c14166 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff8000701e33 : add eax, 0xc7bf0f00 ; pop rbp ; ret
0xffffff8000262feb : add eax, 0xd3a61d8b ; add dword ptr [rax], -0x7d ; ret
0xffffff8000476db9 : add eax, 0xdf894800 ; call 0xffffff8000393047
0xffffff800083c2e6 : add eax, 0xe7f75 ; pop rbp ; ret
0xffffff800029c048 : add eax, 0xe8000004 ; jmp qword ptr [rax]
0xffffff800053e208 : add eax, 0xe800449d ; lahf ; call rsp
0xffffff80003fede5 : add eax, 0xe80056c5 ; ret 0xe8f3
0xffffff80004b0815 : add eax, 0xebf22948 ; add ecx, dword ptr [rax - 1] ; ret 0x894c
0xffffff8000846aab : add eax, 0xf ; and eax, 0xfffffff0 ; pop rbp ; ret
0xffffff80004eff6c : add eax, 0xf000000 ; ret
0xffffff8000797b0f : add eax, 0xf4240 ; mov dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff800077b2f5 : add eax, 0xf6000000 ; ret
0xffffff800086af15 : add eax, 0xf6310000 ; pop rbp ; jmp rax
0xffffff8000621805 : add eax, 0xf7000000 ; ret 0
0xffffff80002ed677 : add eax, 0xf8a363e8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004fa29a : add eax, 0xfc0940f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800078c039 : add eax, 0xfc0950f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800033fbd3 : add eax, 0xfed8545 ; xchg eax, esp ; ret 0x2040
0xffffff80006908f7 : add eax, 0xff00121e ; ret
0xffffff80008f569c : add eax, 0xff001f0f ; ret
0xffffff800079d3fa : add eax, 0xff20538b ; ret 0x3145
0xffffff8000494fff : add eax, 0xff48028a ; ret 0xbe0f
0xffffff800052881e : add eax, 0xff480d7f ; ret 0xb60f
0xffffff800073c058 : add eax, 0xff481572 ; ret
0xffffff8000790688 : add eax, 0xfffbf2e8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000790748 : add eax, 0xfffd12e8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000528ea7 : add eax, 3 ; pop rbp ; ret
0xffffff800082ba97 : add eax, 7 ; shr eax, 3 ; pop rbp ; ret
0xffffff8000567444 : add eax, 8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000340f05 : add eax, 8 ; inc ecx ; jne 0xffffff8000340f09 ; inc r10 ; jmp 0xffffff8000340f1d
0xffffff80008ed99c : add eax, 8 ; pop rbp ; ret
0xffffff80004c5f54 : add eax, 8 ; test rdx, rdx ; jne 0xffffff80004c5f49 ; pop rbp ; ret
0xffffff80003a269b : add eax, dword ptr [0] ; pop rbp ; ret
0xffffff800025c65b : add eax, dword ptr [eax] ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000426327 : add eax, dword ptr [rax + rax] ; add byte ptr [rcx], ch ; ret 0xe283
0xffffff800061c183 : add eax, dword ptr [rax - 0xa] ; out 0x28, eax ; ret 0x9388
0xffffff80007426ad : add eax, dword ptr [rax] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000258636 : add eax, dword ptr [rax] ; add al, ch ; adc bl, byte ptr [rbx + 3] ; add bl, ch ; ret 0x4855
0xffffff8000745df1 : add eax, dword ptr [rax] ; add al, ch ; add byte ptr [rax], r8b ; jmp 0xffffff8000745dc7
0xffffff8000389a39 : add eax, dword ptr [rax] ; add al, ch ; call qword ptr [rcx]
0xffffff8000745d81 : add eax, dword ptr [rax] ; add al, ch ; mov bh, 0x4e ; add byte ptr [rax], al ; jmp 0xffffff8000745d57
0xffffff80002d1dff : add eax, dword ptr [rax] ; add al, ch ; ret
0xffffff8000736416 : add eax, dword ptr [rax] ; add al, ch ; ret 0x34
0xffffff800079b586 : add eax, dword ptr [rax] ; add al, ch ; ret 0xaf2b
0xffffff8000455086 : add eax, dword ptr [rax] ; add al, ch ; ret 0xff84
0xffffff80003c8fdb : add eax, dword ptr [rax] ; add bh, bh ; ret
0xffffff80005a0541 : add eax, dword ptr [rax] ; add bh, bh ; ret 0x5789
0xffffff80005a6d6b : add eax, dword ptr [rax] ; add bh, bh ; ret 0x8b48
0xffffff800026a108 : add eax, dword ptr [rax] ; add bh, dh ; ret
0xffffff800027c479 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0xffffff80002bbe8c : add eax, dword ptr [rax] ; add bl, dh ; pop rbp ; ret
0xffffff800077cdd5 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80008024f9 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xae75
0xffffff80007850ee : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xd76
0xffffff8000510b95 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; dec dword ptr [rax + 0x69] ; call rbx
0xffffff80007716f5 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8b49
0xffffff8000325c3c : add eax, dword ptr [rax] ; add byte ptr [rax + 0xfdb8548], dl ; xchg eax, esp ; ret 0x8b48
0xffffff800031a847 : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0xffffff80002a335a : add eax, dword ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80002bcd79 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xfcff
0xffffff80002a82f7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff8000550a86 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0xffffff8000497cd7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0x8949
0xffffff80005c29a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rcx ; sbb dh, dh ; ret 0xf01
0xffffff800076f948 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; in eax, dx ; ret 0x49ff
0xffffff80002a8172 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80003a3420 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800087ecc4 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x458b
0xffffff80006ec3d0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80005b3456 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800087f44e : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8445
0xffffff800086948a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0xffffff800086b4ca : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0xffffff800086724f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff80008e5b91 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b49
0xffffff80008750d2 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0xffffff80005a945b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x394c
0xffffff8000269238 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003431ff : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000582eea : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x388
0xffffff8000439ceb : add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000672f4b : add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80003f9497 : add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80008606f6 : add eax, dword ptr [rax] ; add byte ptr [rax], ah ; ret
0xffffff8000288111 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800071df50 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800051eea5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0xffffff80007ff90a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80002b4c27 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0xffffff80002b4c36 ; pop rbp ; ret
0xffffff800039519d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov r9d, r14d ; call 0xffffff8000381409
0xffffff8000748c38 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff80008e1a62 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80002a1513 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007803ea : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006672e2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80002672b3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rcx, r14 ; call qword ptr [rbx]
0xffffff80006b82b9 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; ret
0xffffff80002b7392 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80008ba30c : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x25], cl ; pop rdx ; ret
0xffffff80008ba3bc : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x25], cl ; stosb byte ptr [rdi], al ; ret 0x27
0xffffff80004a6409 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x5e], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800031f7a5 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; ret
0xffffff800044cf8e : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x940f
0xffffff80002dbc79 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0xb7f78d], cl ; ret 0x3948
0xffffff80002b1389 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000464f2c : add eax, dword ptr [rax] ; add byte ptr [rbx + rbx*8 - 0xb7be8c], al ; ret 0xe875
0xffffff800077b04a : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x1eb7b], cl ; jmp qword ptr [rcx]
0xffffff80005ff0f7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x78f0c802], al ; ret 1
0xffffff80002f9347 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7af0fd05], al ; ret
0xffffff8000263499 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x39dff7cf], cl ; ret 0x490f
0xffffff80007726fb : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000393049
0xffffff800076e73e : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393049
0xffffff80002a1229 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76be0609], bl ; ret 0x7eb
0xffffff80005744d2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8b49
0xffffff8000778233 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret
0xffffff800038b987 : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], cl ; ret 0x8966
0xffffff80002bbe0f : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80007b6571 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff80007ac374 : add eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret
0xffffff80003f3463 : add eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff8000564721 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800079ad52 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; jmp qword ptr [rbx]
0xffffff80003846a8 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff800079ad07 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; xchg eax, ecx ; jmp qword ptr [rbx]
0xffffff80005c1f70 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x36 ; ret 0xffcc
0xffffff80005c1f49 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x5d ; ret 0xffcc
0xffffff80005c1f09 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x9d ; ret 0xffcc
0xffffff800064f1ff : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0xa7 ; out dx, eax ; ret
0xffffff80005c1ee2 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0xc4 ; ret 0xffcc
0xffffff800064e3c2 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0xe4 ; std ; ret
0xffffff800047cd52 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx + 0x46], al ; ret
0xffffff80003a1731 : add eax, dword ptr [rax] ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800032146b : add eax, dword ptr [rax] ; add byte ptr [rsi - 9], ah ; ret 0xfff
0xffffff800072e6bf : add eax, dword ptr [rax] ; add cl, ch ; ret 0
0xffffff80002bbe6f : add eax, dword ptr [rax] ; add dh, bh ; pop rbp ; ret
0xffffff80003696ff : add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff80003a0c6d : add eax, dword ptr [rax] ; add dh, dh ; ret 0x4801
0xffffff8000294a11 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7540
0xffffff800026192f : add eax, dword ptr [rax] ; add dh, dh ; ret 0xb901
0xffffff80007a5c0c : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0xffffff800025bcfe : add eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800025a14c : add eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000252ba8 : add eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800025d666 : add eax, dword ptr [rax] ; jmp 0xffffff800025d630
0xffffff8000354b22 : add eax, dword ptr [rax] ; jmp 0xffffff8000354b71
0xffffff800081a1b4 : add eax, dword ptr [rax] ; mov al, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800081a2ad : add eax, dword ptr [rax] ; mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b5cfd : add eax, dword ptr [rax] ; mov eax, 4 ; pop rbp ; ret
0xffffff8000256ad0 : add eax, dword ptr [rax] ; mov eax, 5 ; pop rbp ; ret
0xffffff800035cfd0 : add eax, dword ptr [rax] ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800081e380 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028b24b : add eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000296517 : add eax, dword ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000716f4c : add eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004b490f : add eax, dword ptr [rbx + 0x738b09c9] ; cmp dh, dh ; ret 0xf0d
0xffffff800073c788 : add eax, dword ptr [rbx - 0x3776fc3f] ; pop rbp ; ret
0xffffff80003d3d4e : add eax, dword ptr [rbx - 0x38f6ef19] ; mov eax, edi ; pop rbp ; ret
0xffffff8000805792 : add eax, dword ptr [rbx - 0x6bf0f81f] ; ret 0x8b48
0xffffff8000271713 : add eax, dword ptr [rbx - 0x7cb70340] ; ret 0x4810
0xffffff8000682aa7 : add eax, dword ptr [rbx - 0xb7f739] ; ret
0xffffff80008bc85c : add eax, dword ptr [rcx + 0x29] ; ret
0xffffff80002a171e : add eax, dword ptr [rcx + 0x5c] ; pop rbp ; ret
0xffffff80002a1748 : add eax, dword ptr [rcx + 0x868] ; pop rbp ; ret
0xffffff800066a1a7 : add eax, dword ptr [rcx + 0xf] ; mov dh, 0x8e ; ret
0xffffff80002bd02d : add eax, dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0xffffff800084cc2a : add eax, dword ptr [rcx + 8] ; pop rbp ; ret
0xffffff8000528d36 : add eax, dword ptr [rcx + rcx*4 + 0xe] ; mov rax, r8 ; pop rbp ; ret
0xffffff800036b242 : add eax, dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800058cb0e : add eax, dword ptr [rcx - 0x77] ; adc cl, byte ptr [rbx - 0x14373] ; call rbx
0xffffff80003e8040 : add eax, dword ptr [rcx - 0x77] ; ret
0xffffff80005fa3d6 : add eax, dword ptr [rcx - 0x77] ; ret 0x6349
0xffffff8000b4522e : add eax, dword ptr [rcx - 0x77] ; ret 0x8141
0xffffff8000845480 : add eax, dword ptr [rcx - 0x77] ; ror dword ptr [rcx + 0x63], cl ; ret
0xffffff800058cf04 : add eax, dword ptr [rcx - 0x77] ; sbb cl, byte ptr [rbx - 0x14373] ; call rbx
0xffffff800038b95b : add eax, dword ptr [rcx - 0x78] ; or cl, byte ptr [rcx - 1] ; ret 0x3949
0xffffff8000388f22 : add eax, dword ptr [rcx - 0x78] ; ret 0x8948
0xffffff800072bf6d : add eax, dword ptr [rcx - 0x78] ; ret 0xffb8
0xffffff80002de8ce : add eax, dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000b3e6c3 : add eax, dword ptr [rcx - 0x7f] ; ret
0xffffff800069018f : add eax, dword ptr [rcx - 1] ; ret 0x3945
0xffffff80007b8117 : add eax, dword ptr [rcx] ; ja 0xffffff80007b8150 ; pop rbp ; ret
0xffffff80005ac6ef : add eax, dword ptr [rcx] ; ret
0xffffff80005070fc : add eax, dword ptr [rcx] ; ret 0xe0c1
0xffffff800081585a : add eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000448f82 : add eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rdx + 0x10] ; pop rbp ; ret
0xffffff80004fa7ba : add eax, dword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff800039a72b : add eax, dword ptr [rdi + 8] ; cmp esi, dword ptr [rdi + 0x18] ; jne 0xffffff800039a708 ; ret
0xffffff800037b5d9 : add eax, dword ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008e9a50 : add eax, dword ptr [rip + 0x203a62] ; mov rdx, rax ; jmp 0xffffff80008e9a6a
0xffffff80004b7c0a : add eax, dword ptr [rip + 0x65df40] ; pop rbp ; ret
0xffffff80003c0854 : add eax, dword ptr [rip + 0x6996d6] ; pop rbp ; ret
0xffffff80002cb0b7 : add eax, dword ptr [rip + 0x7616ab] ; pop rbp ; ret
0xffffff80002cb08d : add eax, dword ptr [rip + 0x7616d5] ; pop rbp ; ret
0xffffff800036772e : add eax, dword ptr [rip + 0x76715c] ; pop rbp ; ret
0xffffff800084cb8a : add eax, dword ptr [rsi + 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003b395a : add eax, eax ; jmp rax
0xffffff8000366b91 : add eax, eax ; pop rbp ; ret
0xffffff800037520b : add eax, ebp ; jmp rax
0xffffff8000365f9f : add eax, ebx ; jmp 0xffffff8000365fb8
0xffffff8000281f2f : add eax, ebx ; jmp rax
0xffffff8000289fff : add eax, ebx ; mov qword ptr [r14], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800071ea96 : add eax, ecx ; add rax, rsi ; pop rbp ; ret
0xffffff800049ea01 : add eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800090a925 : add eax, ecx ; and r9, 7 ; sub rax, r9 ; ret
0xffffff8000604f2e : add eax, ecx ; bswap eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80006ff906 : add eax, ecx ; jmp rax
0xffffff800073f83b : add eax, ecx ; mov ebx, 0x4e ; jmp rax
0xffffff80002b5de0 : add eax, ecx ; mov ebx, 4 ; jmp rax
0xffffff80005fcd3e : add eax, ecx ; mov ebx, dword ptr [rbp - 0xe8] ; jmp rax
0xffffff8000449097 : add eax, ecx ; mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000754815 : add eax, ecx ; mov r12d, 0x16 ; jmp rax
0xffffff8000706e35 : add eax, ecx ; mov r12d, 1 ; jmp rax
0xffffff800080255b : add eax, ecx ; mov r12d, 6 ; jmp rax
0xffffff80002c6bb3 : add eax, ecx ; mov r13d, 4 ; jmp rax
0xffffff800048611d : add eax, ecx ; mov r14, qword ptr [rbp - 0x288] ; jmp rax
0xffffff80005d19a7 : add eax, ecx ; mov rcx, qword ptr [rbp - 0x38] ; jmp rax
0xffffff80004578e7 : add eax, ecx ; mov rcx, r14 ; jmp rax
0xffffff8000272670 : add eax, ecx ; mov rsi, qword ptr [rbp - 0x38] ; jmp rax
0xffffff800074c331 : add eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff800080dbdc : add eax, ecx ; movzx eax, ax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800047c5d6 : add eax, ecx ; pop rbp ; ret
0xffffff800066db39 : add eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000838b68 : add eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff80003b642e : add eax, ecx ; xor esi, esi ; jmp rax
0xffffff8000545f09 : add eax, ecx ; xor r13d, r13d ; jmp rax
0xffffff800067ec38 : add eax, ecx ; xor r15d, r15d ; jmp rax
0xffffff80002fac4d : add eax, edi ; add rax, rsi ; sub rax, rcx ; pop rbp ; ret
0xffffff8000309627 : add eax, edi ; jmp rax
0xffffff8000716f71 : add eax, edi ; pop rbp ; ret
0xffffff8000838b65 : add eax, edx ; add rax, rcx ; pop rbx ; pop rbp ; ret
0xffffff800080fcf9 : add eax, edx ; jmp rax
0xffffff8000716667 : add eax, edx ; pop rbp ; ret
0xffffff80005cb4a5 : add eax, esi ; add al, 0x37 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0xffffff800071dc74 : add eax, esi ; add al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80003a09fb : add eax, esi ; jmp rax
0xffffff80004a0175 : add eax, esi ; pop rbp ; ret
0xffffff8000393486 : add eax, esi ; ret
0xffffff80002fac50 : add eax, esi ; sub rax, rcx ; pop rbp ; ret
0xffffff800080e0d5 : add eax, esi ; xadd byte ptr [rdi], al ; movsx eax, al ; pop rbp ; ret
0xffffff8000742619 : add eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002715f1 : add eax, esp ; jmp rax
0xffffff80003936d7 : add ebp, dword ptr [r9] ; ret 0x8d49
0xffffff80002763d1 : add ebp, dword ptr [r9] ; ret 0x8d4a
0xffffff800041a28b : add ebp, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000884dfe : add ebp, dword ptr [rbx] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a4e39 : add ebp, dword ptr [rcx] ; add al, ch ; jmp rcx
0xffffff80003936d8 : add ebp, dword ptr [rcx] ; ret 0x8d49
0xffffff80002763d2 : add ebp, dword ptr [rcx] ; ret 0x8d4a
0xffffff8000861d7e : add ebp, eax ; cld ; ret 0xff8a
0xffffff800080fd77 : add ebp, eax ; ret
0xffffff800058fbcd : add ebp, ecx ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 - 0x3e], al ; jmp 0xffffff800058fc0f
0xffffff8000781a3c : add ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000389001 : add ebp, esp ; movzx ecx, al ; mov eax, ecx ; pop rbp ; ret
0xffffff80003ae4b9 : add ebp, esp ; movzx esi, al ; mov eax, esi ; pop rbp ; ret
0xffffff8000673fe9 : add ebx, -8 ; mov rdi, rbx ; call 0xffffff8000297b49
0xffffff80004ac8f2 : add ebx, 0x10 ; jmp 0xffffff80004ac907
0xffffff80004b0111 : add ebx, 0x10 ; jmp 0xffffff80004b0121
0xffffff80004b0180 : add ebx, 0x10 ; jmp 0xffffff80004b0190
0xffffff80004b24a6 : add ebx, 0x10 ; jmp 0xffffff80004b24b7
0xffffff80004b253c : add ebx, 0x10 ; jmp 0xffffff80004b2557
0xffffff80004b25cc : add ebx, 0x10 ; jmp 0xffffff80004b25e7
0xffffff800056f86f : add ebx, 0x10 ; mov rdi, rbx ; call 0xffffff800057bae8
0xffffff8000390931 : add ebx, 0x148 ; mov rdi, rbx ; call rcx
0xffffff800058e46a : add ebx, 0x70 ; jmp 0xffffff800058e47a
0xffffff800058e513 : add ebx, 0x70 ; jmp 0xffffff800058e523
0xffffff800058e6f7 : add ebx, 0x70 ; jmp 0xffffff800058e707
0xffffff800058e7c1 : add ebx, 0x70 ; jmp 0xffffff800058e7d1
0xffffff80008323b9 : add ebx, 2 ; mov eax, ecx ; jmp 0xffffff80008323cd
0xffffff8000495a6a : add ebx, 3 ; jmp 0xffffff8000495a7a
0xffffff8000443852 : add ebx, 4 ; inc edi ; jne 0xffffff8000443854 ; inc rdx ; jmp 0xffffff800044386a
0xffffff80006d8030 : add ebx, 4 ; inc r10d ; jmp 0xffffff80006d8049
0xffffff8000548c77 : add ebx, 4 ; jmp 0xffffff8000548c87
0xffffff80005490e7 : add ebx, 4 ; jmp 0xffffff80005490f7
0xffffff80004d7e1c : add ebx, 8 ; jmp 0xffffff80004d7e3e
0xffffff80005c3714 : add ebx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003a21d8 : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff80003a223f ; ret
0xffffff80003a2654 : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff80003a26bb ; ret
0xffffff80003a28fb : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff80003a2962 ; ret
0xffffff80003a292b : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff80003a2992 ; ret
0xffffff80003a2d54 : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff80003a2dbb ; ret
0xffffff800049d09f : add ebx, dword ptr [rbp - 1] ; loopne 0xffffff800049d106 ; ret
0xffffff8000354720 : add ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800060467b : add ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000841fda : add ebx, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003735b2 : add ebx, dword ptr [rcx - 0x3ea57d87] ; ret 0x891e
0xffffff80006b7019 : add ebx, dword ptr [rcx] ; ret 0x48ff
0xffffff800076cf57 : add ebx, dword ptr [rdi + 0x20] ; call 0xffffff8000392a46
0xffffff8000852c21 : add ebx, dword ptr [rip + 0x415b0029] ; pop rsi ; pop rbp ; ret
0xffffff800030dea1 : add ebx, eax ; jmp 0xffffff800030deb7
0xffffff800085bccf : add ebx, ebp ; adc byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000787ac5 : add ebx, ebp ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008ca740 : add ebx, ebp ; cvtdq2ps xmm0, xmmword ptr [rcx + 0x5e] ; pop rbp ; ret
0xffffff80008ca440 : add ebx, ebp ; or al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80007a2ed4 : add ebx, ebp ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005900cf : add ebx, ebp ; or eax, 0xfc73944 ; xchg eax, esi ; ret 0xf739
0xffffff80005c086a : add ebx, ecx ; jmp rbx
0xffffff8000590a2b : add ebx, edi ; jmp rbx
0xffffff800030f35e : add ebx, edx ; jmp 0xffffff800030f374
0xffffff800058fa9b : add ebx, edx ; jmp rbx
0xffffff8000597d59 : add ebx, esi ; jmp rbx
0xffffff80005185e5 : add ebx, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800078cc61 : add ecx, 0x10 ; cmp rcx, r8 ; jl 0xffffff800078cc59 ; pop rbp ; ret
0xffffff80004b3583 : add ecx, 0x20 ; test edx, edx ; jne 0xffffff80004b3568 ; pop rbp ; ret
0xffffff800074fddf : add ecx, 0x30 ; add eax, -2 ; jne 0xffffff800074fdc9 ; pop rbp ; ret
0xffffff80002d3a90 : add ecx, 0x40 ; add esi, -8 ; jne 0xffffff80002d3a59 ; pop rbp ; ret
0xffffff80008c465c : add ecx, 0xc ; mov rax, rcx ; pop rbp ; ret
0xffffff800065c394 : add ecx, 0xf ; and ecx, 0xfffffff0 ; add eax, ecx ; pop rbp ; ret
0xffffff80005e0088 : add ecx, 2 ; mov rax, r9 ; pop rbp ; ret
0xffffff800073c789 : add ecx, 3 ; mov eax, ecx ; pop rbp ; ret
0xffffff800039f732 : add ecx, 8 ; cmp rax, rdx ; jb 0xffffff800039f719 ; pop rbp ; ret
0xffffff80007f4bb6 : add ecx, 8 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff80008ec013 : add ecx, dword ptr [rax + 0x21] ; ret 0x8d48
0xffffff8000b41488 : add ecx, dword ptr [rax + 0x31] ; ret 0x8941
0xffffff80002c88ff : add ecx, dword ptr [rax + 0x39] ; ret
0xffffff800059de00 : add ecx, dword ptr [rax + 0x6c] ; mov dword ptr [rdi + 0x20], ecx ; pop rbp ; ret
0xffffff8000483231 : add ecx, dword ptr [rax + 0x74c08401] ; and dword ptr [rax - 1], ecx ; ret
0xffffff80003464a6 : add ecx, dword ptr [rax + 1] ; adc r11b, bpl ; ret
0xffffff800035265b : add ecx, dword ptr [rax + 8] ; sub ecx, edx ; mov eax, ecx ; pop rbp ; ret
0xffffff8000462386 : add ecx, dword ptr [rax + rax - 0x7cb80000] ; ret
0xffffff80003936d4 : add ecx, dword ptr [rax - 0x73] ; add ebp, dword ptr [r9] ; ret 0x8d49
0xffffff80007636c3 : add ecx, dword ptr [rax - 0x75] ; jge 0xffffff8000763698 ; call 0xffffff80003923e8
0xffffff800064ed12 : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], r9b ; add edi, edi ; ret
0xffffff80003937cc : add ecx, dword ptr [rax - 0x77] ; adc byte ptr [rax - 0x7f], cl ; ret 0x3000
0xffffff80004a24c7 : add ecx, dword ptr [rax - 0x77] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4818
0xffffff800034a9ca : add ecx, dword ptr [rax - 0x77] ; enter 0x415b, 0x5e ; pop rbp ; ret
0xffffff800073b9f2 : add ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002994ab : add ecx, dword ptr [rax - 0x77] ; or bl, byte ptr [rbx + 0x5d] ; ret
0xffffff80003cb32b : add ecx, dword ptr [rax - 0x77] ; ret
0xffffff8000514678 : add ecx, dword ptr [rax - 0x77] ; ret 0x8148
0xffffff800053a8ab : add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0xffffff80004bab85 : add ecx, dword ptr [rax - 0x77] ; ret 0x894c
0xffffff80005b0f8a : add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80004f2a3f : add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff8000588add : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rdi], 0xb7 ; ret 0xf883
0xffffff8000283a34 : add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80004b0811 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4805
0xffffff8000850919 : add ecx, dword ptr [rax - 0x7d] ; ret 0x8303
0xffffff800028ed2e : add ecx, dword ptr [rax - 1] ; ret
0xffffff80007378b7 : add ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff80004836df : add ecx, dword ptr [rax - 1] ; ret 0x8548
0xffffff80004b081a : add ecx, dword ptr [rax - 1] ; ret 0x894c
0xffffff80007eb4b3 : add ecx, dword ptr [rax - 1] ; ret 0xf66
0xffffff80004f5927 : add ecx, dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004d7e16 : add ecx, dword ptr [rax] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800079af9b : add ecx, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800059c59f : add ecx, dword ptr [rax] ; add eax, 0x83480000 ; ret
0xffffff8000605a70 : add ecx, dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000742dbd : add ecx, dword ptr [rax] ; xor byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007378b3 : add ecx, dword ptr [rbp + rcx*4 + 0x52] ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff8000802e80 : add ecx, dword ptr [rbp - 0xb700af] ; ret 0xce89
0xffffff80007cdec8 : add ecx, dword ptr [rbx + rcx*4 - 0x7c] ; ret
0xffffff80004f9b7a : add ecx, dword ptr [rbx - 0x3776efb8] ; pop rbp ; ret
0xffffff8000870c57 : add ecx, dword ptr [rbx - 0x37d6bfb2] ; pop rbp ; ret
0xffffff80008cbba3 : add ecx, dword ptr [rbx - 0x3e94f3b1] ; sbb al, 0x5d ; ret
0xffffff8000831ce9 : add ecx, dword ptr [rcx + 0x5df277cf] ; ret
0xffffff80007eae77 : add ecx, dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x6348
0xffffff800033f3f7 : add ecx, dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007533c0 : add ecx, dword ptr [rcx + rcx*4 - 0x38] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000764110 : add ecx, dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e7
0xffffff800076b7c4 : add ecx, dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393047
0xffffff800042196c : add ecx, dword ptr [rcx - 0x14b73] ; inc dword ptr [rcx - 0x77] ; ret
0xffffff80004ac25a : add ecx, dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80007d4452 : add ecx, dword ptr [rcx - 0x3fcea7ba] ; pop rbp ; ret
0xffffff80008bcdef : add ecx, dword ptr [rcx - 0x73] ; add eax, dword ptr [rcx + 0x29] ; ret
0xffffff80002763ce : add ecx, dword ptr [rcx - 0x73] ; add ebp, dword ptr [r9] ; ret 0x8d4a
0xffffff8000287d2b : add ecx, dword ptr [rcx - 0x74b7f785] ; or r15b, dil ; ret 0x3949
0xffffff800042274a : add ecx, dword ptr [rcx - 0x76be5bb3] ; ret
0xffffff8000719053 : add ecx, dword ptr [rcx - 0x77] ; clc ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff80005b012e : add ecx, dword ptr [rcx - 0x77] ; enter -0x76b4, -0x40 ; pop rbx ; pop rbp ; ret
0xffffff80002763b5 : add ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff80005feb98 : add ecx, dword ptr [rcx - 1] ; ret 0x3941
0xffffff8000834ea9 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003d653c : add ecx, dword ptr [rcx] ; ret
0xffffff80007953c0 : add ecx, dword ptr [rdi + 0x10] ; sub rax, rcx ; cdqe ; pop rbp ; ret
0xffffff80007b70b3 : add ecx, dword ptr [rdi + 0x18] ; sub eax, ecx ; pop rbp ; ret
0xffffff80008a7583 : add ecx, dword ptr [rdi + 0x68] ; mov rdi, r10 ; pop rbp ; jmp rax
0xffffff8000737867 : add ecx, dword ptr [rdi] ; mov bh, 0x10 ; movzx eax, dx ; pop rbp ; ret
0xffffff800073845a : add ecx, dword ptr [rdi] ; mov bh, 0xa ; movzx eax, cx ; pop rbp ; ret
0xffffff80006a0fd7 : add ecx, dword ptr [rdi] ; mov dh, 0x8f ; ret
0xffffff80007709e8 : add ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret
0xffffff800030423b : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80003b6682 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x3941
0xffffff80005723da : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret
0xffffff8000572a90 : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x2041
0xffffff80007e517c : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80006ca4fe : add ecx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000b4a49c : add ecx, eax ; add al, ah ; xchg eax, edx ; push rax ; push rcx ; ret 0x8a41
0xffffff8000258317 : add ecx, eax ; jmp rcx
0xffffff8000286d78 : add ecx, eax ; mov eax, 4 ; jmp rcx
0xffffff800071ead5 : add ecx, eax ; mov eax, dword ptr [rsi + rcx] ; pop rbp ; ret
0xffffff80002bf100 : add ecx, eax ; mov ebx, 4 ; jmp rcx
0xffffff8000667578 : add ecx, eax ; mov esi, dword ptr [rbp - 0xc0] ; jmp rcx
0xffffff800039f1ee : add ecx, eax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff8000755619 : add ecx, eax ; mov r12d, 0x16 ; jmp rcx
0xffffff8000567b6c : add ecx, eax ; mov r13d, 0x2a ; jmp rcx
0xffffff80007f1869 : add ecx, eax ; mov r14, rdx ; jmp rcx
0xffffff80007f4e55 : add ecx, eax ; mov r14d, 0x16 ; jmp rcx
0xffffff80005ca926 : add ecx, eax ; mov r14d, 0x2a ; jmp rcx
0xffffff80006e9c9b : add ecx, eax ; mov r8d, 0x2d ; jmp rcx
0xffffff80003896f2 : add ecx, eax ; mov rax, qword ptr [rbp - 0x38] ; jmp rcx
0xffffff800064bc2a : add ecx, eax ; mov rbx, qword ptr [rbp - 0x80] ; jmp rcx
0xffffff80005197bd : add ecx, eax ; mov rbx, rsi ; xor r14d, r14d ; jmp rcx
0xffffff8000302373 : add ecx, eax ; mov rdi, r15 ; mov rdx, qword ptr [rbp - 0x30] ; jmp rcx
0xffffff8000749d82 : add ecx, eax ; xor eax, eax ; jmp rcx
0xffffff800067f1e8 : add ecx, eax ; xor r15d, r15d ; jmp rcx
0xffffff80003897b7 : add ecx, ebp ; ret
0xffffff80005200d8 : add ecx, ecx ; jmp rcx
0xffffff800026df25 : add ecx, edi ; jmp rcx
0xffffff800027045c : add ecx, edx ; jmp rcx
0xffffff800029892e : add ecx, edx ; lock or dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff800058dbdc : add ecx, edx ; mov rbx, qword ptr [rbp - 0x1d0] ; jmp rcx
0xffffff8000533d0e : add ecx, edx ; mov rsi, rax ; jmp rcx
0xffffff800083b698 : add ecx, esi ; dec rdx ; jne 0xffffff800083b688 ; pop rbp ; ret
0xffffff8000440224 : add ecx, esi ; jmp rcx
0xffffff800029995c : add ecx, esi ; lock or dword ptr [rcx], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000795f39 : add ecx, esi ; mov dword ptr [rdi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff8000895e85 : add ecx, esi ; mov rax, rcx ; pop rbp ; ret
0xffffff80006087de : add ecx, esi ; sub edx, esi ; jg 0xffffff80006087d7 ; pop rbp ; ret
0xffffff800029d8bc : add ecx, esi ; xor eax, eax ; xor esi, esi ; xor r8d, r8d ; jmp rcx
0xffffff800054b8e4 : add edi, -8 ; call 0xffffff8000297b45
0xffffff800066f555 : add edi, -8 ; call 0xffffff8000297b46
0xffffff8000858453 : add edi, -8 ; jne 0xffffff8000858456 ; pop rbp ; ret
0xffffff800051b8a8 : add edi, -8 ; mov rdi, r15 ; call 0xffffff8000297b48
0xffffff8000674c06 : add edi, -8 ; mov rdi, r15 ; call 0xffffff8000297b49
0xffffff80003a9a30 : add edi, 0x148 ; call rax
0xffffff80003ad18e : add edi, 0x148 ; call rcx
0xffffff80003a26d3 : add edi, 0x148 ; pop rbp ; jmp rax
0xffffff80003a288c : add edi, 0x148 ; pop rbp ; jmp rcx
0xffffff8000739a70 : add edi, 0x18 ; jmp 0xffffff8000739a8f
0xffffff800083bb34 : add edi, 0x48 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000738149 : add edi, 0x55 ; movzx eax, di ; pop rbp ; ret
0xffffff8000738169 : add edi, 0x63 ; movzx eax, di ; pop rbp ; ret
0xffffff8000716fda : add edi, 0x7c25b080 ; mov eax, edi ; pop rbp ; ret
0xffffff80006bb6a4 : add edi, 0x81 ; xor ecx, ecx ; mov dl, al ; jmp 0xffffff80006bb6c5
0xffffff80007b7067 : add edi, 0xa8 ; sub eax, edi ; pop rbp ; ret
0xffffff800042070c : add edi, 4 ; add esi, -4 ; jne 0xffffff80004206f9 ; pop rbp ; ret
0xffffff8000286106 : add edi, 8 ; call 0xffffff80003923e5
0xffffff80007642f2 : add edi, 8 ; call 0xffffff80003923e6
0xffffff800038a23d : add edi, 8 ; dec esi ; jne 0xffffff800038a1e8 ; pop rbp ; ret
0xffffff800083b739 : add edi, 8 ; mov rax, rdi ; pop rbp ; ret
0xffffff80004eb921 : add edi, dword ptr [rax - 0x76b3ffa2] ; out dx, eax ; call rax
0xffffff80004d38e6 : add edi, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002601b3 : add edi, dword ptr [rcx] ; dec byte ptr [rdi] ; ret 0xe8c1
0xffffff80002601ff : add edi, dword ptr [rcx] ; setl dl ; jmp 0xffffff8000260229
0xffffff8000448a3c : add edi, dword ptr [rdi + 2] ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff800049dbc9 : add edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004c051d : add edi, eax ; jmp rdi
0xffffff80004ab154 : add edi, eax ; mov rax, rdi ; pop rbp ; ret
0xffffff8000783412 : add edi, ebp ; dec dword ptr [rax + 0x39] ; ret
0xffffff80007818ac : add edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048c652 : add edi, ebx ; call 0xffffff80003985e9
0xffffff80008af568 : add edi, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a3902 : add edi, ebx ; jmp rdi
0xffffff800030b92b : add edi, ecx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000266963 : add edi, ecx ; jmp rdi
0xffffff8000293608 : add edi, ecx ; mov byte ptr [rdi], 0 ; pop rbp ; ret
0xffffff80005926f1 : add edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800059f761 : add edi, edi ; push rsp ; pop rbp ; ret
0xffffff8000387ed7 : add edi, edi ; ret
0xffffff800058fac0 : add edi, edx ; jmp rdi
0xffffff8000594767 : add edi, edx ; mov r9, r11 ; jmp rdi
0xffffff80007aef4b : add edi, edx ; mov rax, rdi ; pop rbp ; ret
0xffffff80005283b5 : add edi, esi ; jmp rdi
0xffffff80008ec2d2 : add edi, esi ; mov rsi, rax ; jmp rdi
0xffffff80008358ec : add edi, esi ; mov sil, al ; mov dl, al ; jmp rdi
0xffffff8000601c5c : add edi, esi ; ret
0xffffff80003d666b : add edi, esi ; ret 0
0xffffff80008d28d1 : add edi, esi ; ret 0xffef
0xffffff80006198b3 : add edi, esi ; rol byte ptr [rcx], 1 ; ret 0xc3e8
0xffffff80006273c4 : add edi, esi ; sub edi, edx ; sub edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff8000271718 : add edx, 0x10 ; cmp rdx, rcx ; jb 0xffffff8000271709 ; pop rbp ; ret
0xffffff80008a6c0d : add edx, 0x10 ; dec rcx ; jne 0xffffff80008a6c09 ; pop rbp ; ret
0xffffff800035d9aa : add edx, 0x20 ; dec rcx ; jne 0xffffff800035d9a9 ; pop rbp ; ret
0xffffff8000271bca : add edx, 0x24 ; call 0xffffff800026de95
0xffffff80003a9e9f : add edx, 2 ; cmp edx, ecx ; jb 0xffffff80003a9e88 ; pop rbp ; ret
0xffffff80007ae4a8 : add edx, 4 ; add eax, -4 ; jne 0xffffff80007ae4a9 ; pop rbp ; ret
0xffffff80006d15fa : add edx, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003d0131 : add edx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007fdd5b : add edx, dword ptr [rcx + 0x358b48ff] ; ret
0xffffff800030f5d7 : add edx, eax ; jmp 0xffffff800030f5e8
0xffffff800030f5d7 : add edx, eax ; jmp 0xffffff800030f5ed
0xffffff8000315ba4 : add edx, eax ; jmp 0xffffff8000315bb5
0xffffff8000315ba4 : add edx, eax ; jmp 0xffffff8000315bba
0xffffff800065c19a : add edx, eax ; jmp 0xffffff800065c1cc
0xffffff8000272c26 : add edx, eax ; jmp rdx
0xffffff800080807e : add edx, ebp ; lea rcx, [rbp - 0x3c] ; jmp rdx
0xffffff80003150c3 : add edx, ebp ; sub rdx, rax ; jmp 0xffffff80003150f2
0xffffff800059b834 : add edx, ebx ; jmp rdx
0xffffff80007aefe7 : add edx, ebx ; mov rax, r10 ; pop rbp ; ret
0xffffff8000558d7c : add edx, ebx ; push rsi ; ret
0xffffff8000286851 : add edx, ecx ; jmp rdx
0xffffff800030216b : add edx, ecx ; mov eax, 4 ; jmp rdx
0xffffff800051f8c6 : add edx, ecx ; mov ecx, eax ; jmp rdx
0xffffff800048e4f1 : add edx, ecx ; mov r14, qword ptr [rbp - 0x220] ; jmp rdx
0xffffff800056ec8f : add edx, edi ; jmp rdx
0xffffff800028af7f : add edx, edi ; mov rdi, r15 ; call 0xffffff8000397207
0xffffff80003b61f3 : add edx, edi ; pop rbp ; ret
0xffffff8000399914 : add edx, edi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059b7c4 : add edx, edx ; jmp rdx
0xffffff800030f412 : add edx, esi ; jmp 0xffffff800030f428
0xffffff800035a349 : add edx, esi ; jmp rdx
0xffffff800051fb82 : add edx, esi ; mov r12, r15 ; mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff8000594805 : add edx, esi ; mov r13d, 1 ; jmp rdx
0xffffff800084d201 : add edx, esi ; mov rdi, qword ptr [rbp + 0x20] ; jmp rdx
0xffffff8000340f54 : add esi, -4 ; jne 0xffffff8000340f46 ; pop rbp ; ret
0xffffff800042070f : add esi, -4 ; jne 0xffffff80004206f6 ; pop rbp ; ret
0xffffff8000276343 : add esi, -8 ; jne 0xffffff8000276306 ; pop rbp ; ret
0xffffff8000276342 : add esi, -8 ; jne 0xffffff8000276307 ; pop rbp ; ret
0xffffff80002d3a93 : add esi, -8 ; jne 0xffffff80002d3a56 ; pop rbp ; ret
0xffffff80002d3a92 : add esi, -8 ; jne 0xffffff80002d3a57 ; pop rbp ; ret
0xffffff8000803473 : add esi, -8 ; jne 0xffffff8000803439 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054b8f1 : add esi, -8 ; mov rdi, r14 ; call 0xffffff8000297b48
0xffffff800067468e : add esi, -8 ; mov rdi, r14 ; call 0xffffff8000297b49
0xffffff800038fa6e : add esi, 0x148 ; mov rdi, r14 ; call rcx
0xffffff80003a0af1 : add esi, 0x58 ; mov edi, 0xc00 ; call rax
0xffffff80003a8017 : add esi, 0xb ; mov edi, 0x37 ; pop rbp ; jmp rax
0xffffff80003a84d5 : add esi, 0xf ; mov edi, 0x34 ; pop rbp ; jmp rax
0xffffff80007a9657 : add esi, 8 ; cmp ecx, -1 ; jne 0xffffff80007a9659 ; pop rbp ; ret
0xffffff80006bd24d : add esi, 8 ; jmp 0xffffff80006bd28e
0xffffff800084c0a0 : add esi, dword ptr [rax + 8] ; mov rdi, r14 ; call rbx
0xffffff8000272feb : add esi, dword ptr [rax + rdx - 0x7d] ; inc byte ptr [rdi + rcx] ; xchg eax, ebp ; ret 0xb60f
0xffffff8000284e1e : add esi, dword ptr [rax + rdx - 0x7d] ; sti ; add al, 0xf ; xchg eax, ebp ; ret 0xb60f
0xffffff8000520690 : add esi, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80006d79b0 : add esi, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000742ede : add esi, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004aa772 : add esi, dword ptr [rax] ; ret 0x4374
0xffffff80003b186a : add esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff80002d0b18 : add esi, dword ptr [rbp + 7] ; mov eax, 1 ; pop rbp ; ret
0xffffff8000776b32 : add esi, dword ptr [rbp - 0x3e] ; jmp 0xffffff8000776b55
0xffffff800081b9c9 : add esi, dword ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000293441 : add esi, dword ptr [rcx + rdx - 0x7d] ; inc dword ptr [rdi + rcx] ; xchg eax, ebp ; ret
0xffffff80005980c7 : add esi, dword ptr [rcx] ; fldcw word ptr [rcx] ; ret 0xca29
0xffffff8000597f57 : add esi, dword ptr [rcx] ; ret 0xfb29
0xffffff80002cc3f2 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000564c5e : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007ec369 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80003928d2 : add esi, dword ptr [rdi + rdx - 0x37] ; ret
0xffffff8000272826 : add esi, dword ptr [rdi + rdx - 0x7d] ; inc dword ptr [rdi + rcx] ; xchg eax, ebp ; ret
0xffffff80008a5a14 : add esi, dword ptr [rdx + rax - 0x78] ; ret 0x4d8b
0xffffff800089df4c : add esi, dword ptr [rdx + rax - 0x78] ; ret 0x894d
0xffffff8000b488f9 : add esi, dword ptr [rdx - 0x771d092e] ; ret 0x8841
0xffffff8000b4a4fa : add esi, dword ptr [rdx - 0x771d0956] ; ret 0x8840
0xffffff80007e3139 : add esi, dword ptr [rsi + 7] ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80004c96ae : add esi, dword ptr [rsi + rcx*2 + 0xf] ; mov esi, 0x258d4cc8 ; ret 0x4ae3
0xffffff80002be339 : add esi, dword ptr [rsi + rdi*2 + 0x5e415b00] ; pop rbp ; ret
0xffffff800061d9b0 : add esi, dword ptr [rsp + rdx + 0x4c] ; mov edi, ebp ; call rax
0xffffff80005f67f7 : add esi, eax ; add eax, 0x4e3665 ; sub al, 0x5d ; ret
0xffffff80004d46ee : add esi, eax ; mov eax, esi ; pop rbp ; ret
0xffffff8000366bed : add esi, eax ; mov rax, rsi ; pop rbp ; ret
0xffffff800071d350 : add esi, eax ; movzx eax, si ; pop rbp ; ret
0xffffff8000593651 : add esi, eax ; ret 0x4111
0xffffff80008c4e9e : add esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049a320 : add esi, ebp ; jmp rsi
0xffffff80007f1793 : add esi, ebx ; jmp rsi
0xffffff8000455345 : add esi, ecx ; jmp rsi
0xffffff800056cfe5 : add esi, ecx ; mov eax, 0x2a ; jmp rsi
0xffffff80004a01d0 : add esi, ecx ; mov eax, esi ; pop rbp ; ret
0xffffff8000831251 : add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a0a0b : add esi, edi ; jmp rsi
0xffffff8000760c6c : add esi, edi ; js 0xffffff8000760c79 ; xor eax, eax ; pop rbp ; ret
0xffffff80006c7654 : add esi, edi ; ret 0
0xffffff800084e68c : add esi, edi ; ret 0xffff
0xffffff8000499d45 : add esi, edi ; xor edi, edi ; jmp rsi
0xffffff80005c0cd4 : add esi, edx ; jmp rsi
0xffffff8000594830 : add esi, edx ; mov r13d, 1 ; jmp rsi
0xffffff80008d2cf0 : add esi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048da6c : add esi, esi ; jmp rsi
0xffffff80002bcabe : add esi, esi ; ret
0xffffff800072066f : add esi, esi ; ret 0x4401
0xffffff80002c007e : add esi, esi ; ret 0x7401
0xffffff80007f2ced : add esi, esi ; ret 0x7408
0xffffff800040ede0 : add esi, esi ; ret 0x7410
0xffffff80006c7432 : add esi, esi ; ret 0x7480
0xffffff80002bb50b : add esi, esi ; ret 0x7501
0xffffff80002bad96 : add esi, esi ; ret 0x7504
0xffffff80007587c1 : add esi, esi ; ret 0x7510
0xffffff80008089b0 : add esi, esi ; ret 0xf04
0xffffff8000609603 : add esi, esi ; ret 0xf0f
0xffffff8000398599 : add esi, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007eaf33 : add esi, esp ; mov rdi, r15 ; mov rsi, r13 ; call rbx
0xffffff80004a01cf : add esi, r9d ; mov eax, esi ; pop rbp ; ret
0xffffff8000674bdb : add esp, -8 ; mov rdi, r12 ; call 0xffffff8000297b49
0xffffff800026d6b1 : add esp, 0x10 ; pop rbp ; ret
0xffffff8000612542 : add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff8000253362 : add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000540bad : add esp, 0x160 ; pop rbp ; ret
0xffffff80002504e6 : add esp, 0x18 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000252c39 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80004cfbd6 : add esp, 0x1a8 ; pop rbx ; pop rbp ; ret
0xffffff80002569bf : add esp, 0x20 ; pop rbp ; ret
0xffffff80008ea0ae : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000274ab2 : add esp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000262ac8 : add esp, 0x28 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002c6b34 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff800025a14f : add esp, 0x30 ; pop rbp ; ret
0xffffff80002dbd58 : add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000276953 : add esp, 0x38 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800028e912 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0xffffff8000273c93 : add esp, 0x40 ; pop rbp ; ret
0xffffff800025861e : add esp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002841a3 : add esp, 0x48 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800025b940 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff80002ee379 : add esp, 0x50 ; pop rbp ; ret
0xffffff800025bac1 : add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028e48b : add esp, 0x58 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800029eb65 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff8000807eb8 : add esp, 0x5d8 ; pop rbx ; pop rbp ; ret
0xffffff80008511f8 : add esp, 0x60 ; leave ; ret
0xffffff800029ed03 : add esp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002eae23 : add esp, 0x68 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002eacd6 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff8000262967 : add esp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005bfaf3 : add esp, 0x78 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800050d5c2 : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0xffffff80008d3ae9 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0xffffff800049d90b : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0xffffff80006465e3 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0xffffff8000850c17 : add esp, 0xc8 ; pop rbx ; leave ; ret
0xffffff80006729b2 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0xffffff800039a307 : add esp, 2 ; pop rbp ; ret
0xffffff80008edf38 : add esp, 4 ; pop rbp ; ret
0xffffff8000842764 : add esp, 4 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004f8e18 : add esp, 8 ; pop rbp ; jmp r11
0xffffff80004f8a48 : add esp, 8 ; pop rbp ; jmp rax
0xffffff800039131d : add esp, 8 ; pop rbp ; ret
0xffffff80002b11b2 : add esp, 8 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800088655b : add esp, 8 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250d3d : add esp, 8 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006ae880 : add esp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80002d4ef8
0xffffff800076436e : add esp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80003923e8
0xffffff8000766ff9 : add esp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff8000393048
0xffffff80008851ff : add esp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80008114a7
0xffffff800050e96e : add esp, 8 ; pop rbx ; pop rbp ; jmp r8
0xffffff8000272ba9 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff800082a29f : add esp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80002501e5 : add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000452270 : add esp, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004b6694 : add esp, dword ptr [rdx] ; call 0xffffff8000392935
0xffffff800039a7e4 : add esp, eax ; cmovb eax, ecx ; cmove eax, edx ; leave ; ret
0xffffff8000650499 : add esp, eax ; ret
0xffffff80006601a9 : add esp, eax ; ret 0x48ff
0xffffff80003a541d : add esp, ebp ; pop rbp ; ret
0xffffff80005cb932 : add qword ptr [r14 + 0x18], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d8906 : add qword ptr [r8 - 0x77], rcx ; ret
0xffffff80006360c6 : add qword ptr [r8 - 0x7d], rcx ; ret
0xffffff8000460a77 : add qword ptr [r8 - 1], rcx ; ret
0xffffff80004b3af5 : add qword ptr [r8], r10 ; pop rbp ; ret
0xffffff800038f6e8 : add qword ptr [r8], r8 ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff80004895d7 : add qword ptr [r8], r8 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d23b3 : add qword ptr [r9 - 1], rcx ; ret
0xffffff800063c877 : add qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff800039a68d : add qword ptr [rax + 0x4a0], rdi ; pop rbp ; ret
0xffffff80003d5f5e : add qword ptr [rax + 0x5d], r8 ; ret
0xffffff800063c8e0 : add qword ptr [rax + 8], rdx ; pop rbp ; ret
0xffffff80005b3721 : add qword ptr [rax - 1], rcx ; ret 0xc984
0xffffff80002b7173 : add qword ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000661f70 : add qword ptr [rax], r8 ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0xffffff80003a1b3f : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80002e8e50 : add qword ptr [rax], r8 ; add byte ptr [rbp - 0x3d], bl ; xor eax, eax ; pop rbp ; ret
0xffffff80005c9389 : add qword ptr [rax], rax ; add al, ch ; ret
0xffffff800085f00d : add qword ptr [rax], rax ; add bh, bh ; ret
0xffffff800080c8ae : add qword ptr [rax], rax ; add byte ptr [rax + 0x63], cl ; ret 0x6948
0xffffff80002db3b4 : add qword ptr [rax], rax ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002db3d1 ; pop rbp ; ret
0xffffff800073f558 : add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000810e80 : add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff8000872c5e : add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0xe1e9
0xffffff8000759e13 : add qword ptr [rax], rax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0xffffff80003a2745 : add qword ptr [rax], rax ; add byte ptr [rbp - 1], bl ; loopne 0xffffff80003a27b2 ; ret
0xffffff800038fa70 : add qword ptr [rax], rax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0xffffff80002f874a : add qword ptr [rax], rax ; add byte ptr [rdi + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff800028ed65 : add qword ptr [rax], rax ; add byte ptr [rsi + 2], bh ; call rax
0xffffff80003464a7 : add qword ptr [rbx + 0x10], rcx ; jmp 0xffffff8000346475
0xffffff8000791a86 : add qword ptr [rbx + 0x40], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008cccce : add qword ptr [rbx + 0x41], rbx ; pop rsi ; pop rbp ; ret
0xffffff80003464a4 : add qword ptr [rbx], rax ; add qword ptr [rbx + 0x10], rcx ; jmp 0xffffff8000346478
0xffffff80002af479 : add qword ptr [rcx + rax], rdx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d25b3 : add qword ptr [rcx - 1], rcx ; ret 0x8949
0xffffff8000448fd4 : add qword ptr [rdi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800055fe10 : add qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff80005cb961 : add qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff800055fe17 : add qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff800078cc75 : add qword ptr [rdi + 0x20], rdx ; xor eax, eax ; pop rbp ; ret
0xffffff800055fe1e : add qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff8000785f21 : add qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff800055fe25 : add qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff800055fe09 : add qword ptr [rdi + 0x30], rsi ; pop rbp ; ret
0xffffff8000785ec5 : add qword ptr [rdi + 0x88], rax ; pop rbp ; ret
0xffffff80004954de : add qword ptr [rdi + 8], r8 ; pop rbp ; ret
0xffffff80002c80da : add qword ptr [rdi + 8], rax ; mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff80002c80a4 : add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff8000495500 : add qword ptr [rdi + rax*8 + 8], r8 ; pop rbp ; ret
0xffffff800049549d : add qword ptr [rdi + rax*8], rdx ; pop rbp ; ret
0xffffff8000495509 : add qword ptr [rdi + rcx*8 + 8], r8 ; pop rbp ; ret
0xffffff80008652d0 : add qword ptr [rdi], rcx ; xchg eax, esp ; ret
0xffffff8000495754 : add qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80002674e9 : add qword ptr [rdx + 8], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff80007aefe6 : add r10, r11 ; mov rax, r10 ; pop rbp ; ret
0xffffff80004b24a5 : add r11, 0x10 ; jmp 0xffffff80004b24b8
0xffffff80004b253b : add r11, 0x10 ; jmp 0xffffff80004b2558
0xffffff80004b25cb : add r11, 0x10 ; jmp 0xffffff80004b25e8
0xffffff80006d802f : add r11, 4 ; inc r10d ; jmp 0xffffff80006d804a
0xffffff80006307e9 : add r11b, dl ; loop 0xffffff80006307f4 ; ret 0xd639
0xffffff800062d651 : add r12b, byte ptr [r14 - 0x77] ; ret 0x8b41
0xffffff80008a4e38 : add r13, qword ptr [rcx] ; add al, ch ; jmp rcx
0xffffff8000781a7b : add r13d, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800054b8f0 : add r14, -8 ; mov rdi, r14 ; call 0xffffff8000297b49
0xffffff800084c09f : add r14, qword ptr [rax + 8] ; mov rdi, r14 ; call rbx
0xffffff80007eaf32 : add r14, r12 ; mov rdi, r15 ; mov rsi, r13 ; call rbx
0xffffff80008d2cef : add r14, r14 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002883f9 : add r14b, r14b ; ret
0xffffff8000650921 : add r14b, r14b ; ret 0x7402
0xffffff800051b8a7 : add r15, -8 ; mov rdi, r15 ; call 0xffffff8000297b49
0xffffff80008d28d0 : add r15, rsi ; ret 0xffef
0xffffff80006a1f83 : add r15b, dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006c8467 : add r15b, r11b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d7a28 : add r15b, r15b ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006b51f4 : add r15b, r15b ; ret
0xffffff80002593ff : add r8, qword ptr [r8] ; mov eax, 5 ; pop rbp ; ret
0xffffff800025934d : add r8, qword ptr [rax] ; mov eax, 5 ; pop rbp ; ret
0xffffff8000498e5d : add r8b, bpl ; adc r8b, byte ptr [rax] ; add bh, bh ; ret
0xffffff80005d616e : add r8b, bpl ; pop rbx ; ret
0xffffff80004c1e68 : add r8b, bpl ; ret
0xffffff80004b7a87 : add r8b, bpl ; ret 0x2d57
0xffffff8000498dfb : add r8b, bpl ; scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80002d6fac : add r8b, byte ptr [r8] ; add bh, bh ; ret 0xda39
0xffffff8000641f7b : add r8b, byte ptr [r8] ; add byte ptr [rcx], dh ; shr al, 0x2a ; ret 0xffc4
0xffffff80005d9b8d : add r8b, r13b ; insb byte ptr [rdi], dx ; or ebx, esp ; dec dword ptr [rax + 1] ; ret
0xffffff8000664356 : add r8b, r13b ; insb byte ptr [rdi], dx ; ret
0xffffff80003f9496 : add r8d, dword ptr [r8] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80005e0087 : add r9, 2 ; mov rax, r9 ; pop rbp ; ret
0xffffff80008a7582 : add r9, qword ptr [rdi + 0x68] ; mov rdi, r10 ; pop rbp ; jmp rax
0xffffff80002ae48b : add r9b, bpl ; ret 0xfffe
0xffffff80006d7bad : add r9b, byte ptr [rax - 0x7d] ; mov byte ptr [rcx + rax*2], 0xff ; ret 0x8944
0xffffff80006d23f8 : add r9b, byte ptr [rcx - 0x7cb7f5bd] ; ret
0xffffff80002ef857 : add r9b, r13b ; ret
0xffffff8000654289 : add r9b, r13b ; ret 8
0xffffff80005d3761 : add rax, -0x76b70030 ; ret
0xffffff80006be522 : add rax, -0x76b80000 ; ret
0xffffff800082d61f : add rax, -8 ; pop rbp ; ret
0xffffff800084e655 : add rax, 0x10 ; pop rbp ; ret
0xffffff800038c0bd : add rax, 0x58 ; pop rbp ; ret
0xffffff800063a81b : add rax, 0x5e415b00 ; pop rbp ; ret
0xffffff80003910a2 : add rax, 0x68 ; pop rbp ; ret
0xffffff80008ed99b : add rax, 8 ; pop rbp ; ret
0xffffff80003a269a : add rax, qword ptr [0] ; pop rbp ; ret
0xffffff80007850ed : add rax, qword ptr [r8] ; add byte ptr [rax + 0x39], cl ; ret 0xd76
0xffffff80003846a7 : add rax, qword ptr [r8] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff80006f848a : add rax, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800075881a : add rax, qword ptr [rax] ; pop rbp ; ret
0xffffff80002a1747 : add rax, qword ptr [rcx + 0x868] ; pop rbp ; ret
0xffffff800084cc29 : add rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff8000815859 : add rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80004fa7b9 : add rax, qword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff800039a72a : add rax, qword ptr [rdi + 8] ; cmp esi, dword ptr [rdi + 0x18] ; jne 0xffffff800039a709 ; ret
0xffffff80008e9a4f : add rax, qword ptr [rip + 0x203a62] ; mov rdx, rax ; jmp 0xffffff80008e9a6b
0xffffff80003c0853 : add rax, qword ptr [rip + 0x6996d6] ; pop rbp ; ret
0xffffff80002cb0b6 : add rax, qword ptr [rip + 0x7616ab] ; pop rbp ; ret
0xffffff80002cb08c : add rax, qword ptr [rip + 0x7616d5] ; pop rbp ; ret
0xffffff800036772d : add rax, qword ptr [rip + 0x76715c] ; pop rbp ; ret
0xffffff800084cb89 : add rax, qword ptr [rsi + 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002715f0 : add rax, r12 ; jmp rax
0xffffff800037520a : add rax, r13 ; jmp rax
0xffffff80005f6df8 : add rax, r14 ; jmp rax
0xffffff8000309626 : add rax, r15 ; jmp rax
0xffffff80003b3959 : add rax, r8 ; jmp rax
0xffffff8000366b90 : add rax, r8 ; pop rbp ; ret
0xffffff80008cb205 : add rax, r9 ; jmp rax
0xffffff8000365f9e : add rax, rbx ; jmp 0xffffff8000365fb9
0xffffff8000281f2e : add rax, rbx ; jmp rax
0xffffff800071ea95 : add rax, rcx ; add rax, rsi ; pop rbp ; ret
0xffffff800049ea00 : add rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80006ff905 : add rax, rcx ; jmp rax
0xffffff800073f83a : add rax, rcx ; mov ebx, 0x4e ; jmp rax
0xffffff80002b5ddf : add rax, rcx ; mov ebx, 4 ; jmp rax
0xffffff80005fcd3d : add rax, rcx ; mov ebx, dword ptr [rbp - 0xe8] ; jmp rax
0xffffff8000754814 : add rax, rcx ; mov r12d, 0x16 ; jmp rax
0xffffff8000706e34 : add rax, rcx ; mov r12d, 1 ; jmp rax
0xffffff800080255a : add rax, rcx ; mov r12d, 6 ; jmp rax
0xffffff80002c6bb2 : add rax, rcx ; mov r13d, 4 ; jmp rax
0xffffff80005d19a6 : add rax, rcx ; mov rcx, qword ptr [rbp - 0x38] ; jmp rax
0xffffff80004578e6 : add rax, rcx ; mov rcx, r14 ; jmp rax
0xffffff800027266f : add rax, rcx ; mov rsi, qword ptr [rbp - 0x38] ; jmp rax
0xffffff800066db38 : add rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000838b67 : add rax, rcx ; pop rbx ; pop rbp ; ret
0xffffff80003b642d : add rax, rcx ; xor esi, esi ; jmp rax
0xffffff8000545f08 : add rax, rcx ; xor r13d, r13d ; jmp rax
0xffffff800067ec37 : add rax, rcx ; xor r15d, r15d ; jmp rax
0xffffff80007b03f1 : add rax, rdi ; pop rbp ; ret
0xffffff8000838b64 : add rax, rdx ; add rax, rcx ; pop rbx ; pop rbp ; ret
0xffffff800080fcf8 : add rax, rdx ; jmp rax
0xffffff8000798487 : add rax, rdx ; pop rbp ; ret
0xffffff80003a09fa : add rax, rsi ; jmp rax
0xffffff80005c0147 : add rax, rsi ; pop rbp ; ret
0xffffff80002fac4f : add rax, rsi ; sub rax, rcx ; pop rbp ; ret
0xffffff80004ac8f1 : add rbx, 0x10 ; jmp 0xffffff80004ac908
0xffffff80004b0110 : add rbx, 0x10 ; jmp 0xffffff80004b0122
0xffffff80004b017f : add rbx, 0x10 ; jmp 0xffffff80004b0191
0xffffff800056f86e : add rbx, 0x10 ; mov rdi, rbx ; call 0xffffff800057bae9
0xffffff800058e469 : add rbx, 0x70 ; jmp 0xffffff800058e47b
0xffffff800058e512 : add rbx, 0x70 ; jmp 0xffffff800058e524
0xffffff800058e6f6 : add rbx, 0x70 ; jmp 0xffffff800058e708
0xffffff800058e7c0 : add rbx, 0x70 ; jmp 0xffffff800058e7d2
0xffffff8000495a69 : add rbx, 3 ; jmp 0xffffff8000495a7b
0xffffff8000548c76 : add rbx, 4 ; jmp 0xffffff8000548c88
0xffffff80005490e6 : add rbx, 4 ; jmp 0xffffff80005490f8
0xffffff80004d7e1b : add rbx, 8 ; jmp 0xffffff80004d7e3f
0xffffff800076cf56 : add rbx, qword ptr [r15 + 0x20] ; call 0xffffff8000392a47
0xffffff800030dea0 : add rbx, rax ; jmp 0xffffff800030deb8
0xffffff80005c0869 : add rbx, rcx ; jmp rbx
0xffffff8000590a2a : add rbx, rdi ; jmp rbx
0xffffff800030f35d : add rbx, rdx ; jmp 0xffffff800030f375
0xffffff800058fa9a : add rbx, rdx ; jmp rbx
0xffffff8000597d58 : add rbx, rsi ; jmp rbx
0xffffff80004b3582 : add rcx, 0x20 ; test edx, edx ; jne 0xffffff80004b3569 ; pop rbp ; ret
0xffffff80008c465b : add rcx, 0xc ; mov rax, rcx ; pop rbp ; ret
0xffffff80007f4bb5 : add rcx, 8 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800051f894 : add rcx, r10 ; jmp rcx
0xffffff800051f8f5 : add rcx, r14 ; jmp rcx
0xffffff800026df24 : add rcx, r15 ; jmp rcx
0xffffff80008407cd : add rcx, r8 ; jmp rcx
0xffffff80005200d7 : add rcx, r9 ; jmp rcx
0xffffff8000258316 : add rcx, rax ; jmp rcx
0xffffff8000286d77 : add rcx, rax ; mov eax, 4 ; jmp rcx
0xffffff800071ead4 : add rcx, rax ; mov eax, dword ptr [rsi + rcx] ; pop rbp ; ret
0xffffff80002bf0ff : add rcx, rax ; mov ebx, 4 ; jmp rcx
0xffffff8000667577 : add rcx, rax ; mov esi, dword ptr [rbp - 0xc0] ; jmp rcx
0xffffff800039f1ed : add rcx, rax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff8000755618 : add rcx, rax ; mov r12d, 0x16 ; jmp rcx
0xffffff8000567b6b : add rcx, rax ; mov r13d, 0x2a ; jmp rcx
0xffffff80007f1868 : add rcx, rax ; mov r14, rdx ; jmp rcx
0xffffff80007f4e54 : add rcx, rax ; mov r14d, 0x16 ; jmp rcx
0xffffff80005ca925 : add rcx, rax ; mov r14d, 0x2a ; jmp rcx
0xffffff80006e9c9a : add rcx, rax ; mov r8d, 0x2d ; jmp rcx
0xffffff80003896f1 : add rcx, rax ; mov rax, qword ptr [rbp - 0x38] ; jmp rcx
0xffffff800064bc29 : add rcx, rax ; mov rbx, qword ptr [rbp - 0x80] ; jmp rcx
0xffffff80005197bc : add rcx, rax ; mov rbx, rsi ; xor r14d, r14d ; jmp rcx
0xffffff8000749d81 : add rcx, rax ; xor eax, eax ; jmp rcx
0xffffff800067f1e7 : add rcx, rax ; xor r15d, r15d ; jmp rcx
0xffffff80008be682 : add rcx, rdi ; jmp rcx
0xffffff800027045b : add rcx, rdx ; jmp rcx
0xffffff800029892d : add rcx, rdx ; lock or dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff8000533d0d : add rcx, rdx ; mov rsi, rax ; jmp rcx
0xffffff800083b697 : add rcx, rsi ; dec rdx ; jne 0xffffff800083b689 ; pop rbp ; ret
0xffffff8000440223 : add rcx, rsi ; jmp rcx
0xffffff800029995b : add rcx, rsi ; lock or dword ptr [rcx], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000895e84 : add rcx, rsi ; mov rax, rcx ; pop rbp ; ret
0xffffff80006087dd : add rcx, rsi ; sub edx, esi ; jg 0xffffff80006087d8 ; pop rbp ; ret
0xffffff800054b8e3 : add rdi, -8 ; call 0xffffff8000297b46
0xffffff800066f554 : add rdi, -8 ; call 0xffffff8000297b47
0xffffff80003a9a2f : add rdi, 0x148 ; call rax
0xffffff80003ad18d : add rdi, 0x148 ; call rcx
0xffffff80003a26d2 : add rdi, 0x148 ; pop rbp ; jmp rax
0xffffff80003a288b : add rdi, 0x148 ; pop rbp ; jmp rcx
0xffffff800083bb33 : add rdi, 0x48 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000286105 : add rdi, 8 ; call 0xffffff80003923e6
0xffffff80007642f1 : add rdi, 8 ; call 0xffffff80003923e7
0xffffff800038a23c : add rdi, 8 ; dec esi ; jne 0xffffff800038a1e9 ; pop rbp ; ret
0xffffff800083b738 : add rdi, 8 ; mov rax, rdi ; pop rbp ; ret
0xffffff80006034ff : add rdi, r10 ; jmp rdi
0xffffff80007aef4a : add rdi, r10 ; mov rax, rdi ; pop rbp ; ret
0xffffff80004ab153 : add rdi, r8 ; mov rax, rdi ; pop rbp ; ret
0xffffff80004c051c : add rdi, rax ; jmp rdi
0xffffff80003a3901 : add rdi, rbx ; jmp rdi
0xffffff8000266962 : add rdi, rcx ; jmp rdi
0xffffff8000293607 : add rdi, rcx ; mov byte ptr [rdi], 0 ; pop rbp ; ret
0xffffff800058fabf : add rdi, rdx ; jmp rdi
0xffffff8000594766 : add rdi, rdx ; mov r9, r11 ; jmp rdi
0xffffff80005283b4 : add rdi, rsi ; jmp rdi
0xffffff80008ec2d1 : add rdi, rsi ; mov rsi, rax ; jmp rdi
0xffffff80008358eb : add rdi, rsi ; mov sil, al ; mov dl, al ; jmp rdi
0xffffff8000271bc9 : add rdx, 0x24 ; call 0xffffff800026de96
0xffffff800059b7c3 : add rdx, r10 ; jmp rdx
0xffffff800059b833 : add rdx, r11 ; jmp rdx
0xffffff800080807d : add rdx, r13 ; lea rcx, [rbp - 0x3c] ; jmp rdx
0xffffff80003150c2 : add rdx, r13 ; sub rdx, rax ; jmp 0xffffff80003150f3
0xffffff8000594746 : add rdx, r8 ; jmp rdx
0xffffff800051f8c5 : add rdx, r9 ; mov ecx, eax ; jmp rdx
0xffffff800030f5d6 : add rdx, rax ; jmp 0xffffff800030f5e9
0xffffff800030f5d6 : add rdx, rax ; jmp 0xffffff800030f5ee
0xffffff8000315ba3 : add rdx, rax ; jmp 0xffffff8000315bb6
0xffffff8000315ba3 : add rdx, rax ; jmp 0xffffff8000315bbb
0xffffff8000272c25 : add rdx, rax ; jmp rdx
0xffffff8000286850 : add rdx, rcx ; jmp rdx
0xffffff800030216a : add rdx, rcx ; mov eax, 4 ; jmp rdx
0xffffff800056ec8e : add rdx, rdi ; jmp rdx
0xffffff800030f411 : add rdx, rsi ; jmp 0xffffff800030f429
0xffffff800035a348 : add rdx, rsi ; jmp rdx
0xffffff800051fb81 : add rdx, rsi ; mov r12, r15 ; mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff8000594804 : add rdx, rsi ; mov r13d, 1 ; jmp rdx
0xffffff800084d200 : add rdx, rsi ; mov rdi, qword ptr [rbp + 0x20] ; jmp rdx
0xffffff80003a0af0 : add rsi, 0x58 ; mov edi, 0xc00 ; call rax
0xffffff800049a31f : add rsi, r13 ; jmp rsi
0xffffff800048da6b : add rsi, r14 ; jmp rsi
0xffffff8000499d44 : add rsi, r15 ; xor edi, edi ; jmp rsi
0xffffff8000366bec : add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0xffffff80007f1792 : add rsi, rbx ; jmp rsi
0xffffff8000455344 : add rsi, rcx ; jmp rsi
0xffffff800056cfe4 : add rsi, rcx ; mov eax, 0x2a ; jmp rsi
0xffffff80002a0a0a : add rsi, rdi ; jmp rsi
0xffffff8000760c6b : add rsi, rdi ; js 0xffffff8000760c7a ; xor eax, eax ; pop rbp ; ret
0xffffff80005c0cd3 : add rsi, rdx ; jmp rsi
0xffffff800059482f : add rsi, rdx ; mov r13d, 1 ; jmp rsi
0xffffff800026d6b0 : add rsp, 0x10 ; pop rbp ; ret
0xffffff8000612541 : add rsp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff8000253361 : add rsp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000540bac : add rsp, 0x160 ; pop rbp ; ret
0xffffff8000252c38 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80004cfbd5 : add rsp, 0x1a8 ; pop rbx ; pop rbp ; ret
0xffffff80002569be : add rsp, 0x20 ; pop rbp ; ret
0xffffff80008ea0ad : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000274ab1 : add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c6b33 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff800025a14e : add rsp, 0x30 ; pop rbp ; ret
0xffffff80002dbd57 : add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028e911 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0xffffff8000273c92 : add rsp, 0x40 ; pop rbp ; ret
0xffffff800025861d : add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025b93f : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff80002ee378 : add rsp, 0x50 ; pop rbp ; ret
0xffffff800025bac0 : add rsp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029eb64 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff8000807eb7 : add rsp, 0x5d8 ; pop rbx ; pop rbp ; ret
0xffffff80008511f7 : add rsp, 0x60 ; leave ; ret
0xffffff800029ed02 : add rsp, 0x60 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002eacd5 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff8000262966 : add rsp, 0x70 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800050d5c1 : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0xffffff80008d3ae8 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0xffffff800049d90a : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0xffffff80006465e2 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0xffffff8000850c16 : add rsp, 0xc8 ; pop rbx ; leave ; ret
0xffffff80006729b1 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0xffffff800039a306 : add rsp, 2 ; pop rbp ; ret
0xffffff80008edf37 : add rsp, 4 ; pop rbp ; ret
0xffffff80004f8e17 : add rsp, 8 ; pop rbp ; jmp r11
0xffffff80004f8a47 : add rsp, 8 ; pop rbp ; jmp rax
0xffffff800039131c : add rsp, 8 ; pop rbp ; ret
0xffffff80006ae87f : add rsp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80002d4ef9
0xffffff800076436d : add rsp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80003923e9
0xffffff8000766ff8 : add rsp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff8000393049
0xffffff80008851fe : add rsp, 8 ; pop rbx ; pop rbp ; jmp 0xffffff80008114a8
0xffffff800050e96d : add rsp, 8 ; pop rbx ; pop rbp ; jmp r8
0xffffff8000272ba8 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff800082a29e : add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80002501e4 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006407fe : add sil, r14b ; ret 0x7406
0xffffff800055fdae : add sil, sil ; ret
0xffffff800058a7dd : add spl, byte ptr [r14 - 0x3f] ; ret 0x6608
0xffffff8000601d03 : add spl, byte ptr [rsi - 0x77] ; or cl, byte ptr [rax - 0x7d] ; ret 0xff04
0xffffff8000558176 : add spl, byte ptr [rsi - 0x77] ; ret 0x408b
0xffffff800089fd03 : add word ptr [rax], ax ; add bh, dh ; ret 0
0xffffff80007baa86 : add word ptr [rax], ax ; add byte ptr [rax - 0x75], cl ; mov r8b, 0x89 ; ret
0xffffff800062ef26 : addps xmm0, xmm0 ; pop rbp ; ret
0xffffff800062ef25 : addss xmm0, xmm0 ; pop rbp ; ret
0xffffff80004d6687 : and ah, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a21ab : and ah, al ; mov dword ptr [rdi + 0x60], esi ; pop rbp ; ret
0xffffff800039a9f4 : and ah, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072e8fa : and ah, byte ptr [rax - 0x76b70046] ; ret
0xffffff80007a0a0c : and ah, byte ptr [rsi - 0x42] ; ret
0xffffff80003ae43e : and ah, cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ba6fc : and ah, dh ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005fe5a3 : and al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ed6b7 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800084ad9a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800059473f : and al, 0 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff8000762e81 : and al, 0 ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000392a49
0xffffff80008e9c21 : and al, 0 ; add dh, byte ptr [rbp + 5] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ef406 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ed999 : and al, 0 ; add rax, 8 ; pop rbp ; ret
0xffffff80008edb02 : and al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800089ab24 : and al, 0 ; pop rbp ; ret
0xffffff80008e54ff : and al, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e6a2f : and al, 0 ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008ef3f9 : and al, 0 ; test rax, rax ; je 0xffffff80008ef409 ; call rax
0xffffff80008df254 : and al, 0x10 ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff8000561b6f : and al, 0x10 ; add cl, byte ptr [rax - 0x7d] ; ret
0xffffff800037686b : and al, 0x10 ; call rax
0xffffff800049d376 : and al, 0x10 ; shr al, 4 ; movzx eax, al ; pop rbp ; ret
0xffffff800081eb97 : and al, 0x10 ; shr al, 4 ; pop rbp ; ret
0xffffff8000672605 : and al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800066e542 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80007cc0e1 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0x62
0xffffff80006464e9 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; push rsi ; ret 0x7504
0xffffff80002a8170 : and al, 0x20 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80007d07ac : and al, 0x20 ; shr al, 5 ; movzx eax, al ; pop rbp ; ret
0xffffff800081ece7 : and al, 0x20 ; shr al, 5 ; pop rbp ; ret
0xffffff80005667f8 : and al, 0x21 ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008f53f8 : and al, 0x24 ; add byte ptr [rax - 1], cl ; ret
0xffffff800043aa03 : and al, 0x24 ; jmp 0xffffff800043a7aa
0xffffff80003993ea : and al, 0x25 ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; call rsi
0xffffff800039a76c : and al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor rbp, rbp ; call rcx
0xffffff8000337b28 : and al, 0x28 ; jl 0xffffff8000337b31 ; pop rbp ; ret
0xffffff8000421142 : and al, 0x28 ; mov rsi, r9 ; call rcx
0xffffff8000852742 : and al, 0x29 ; add byte ptr [rcx - 0x73], al ; call rbx
0xffffff8000391388 : and al, 0x29 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003acbb7 : and al, 0x2c ; jne 0xffffff80003acbc3 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000850242 : and al, 0x2e ; add dword ptr [rax - 0x7f], ecx ; ret
0xffffff800033d09c : and al, 0x30 ; call 0xffffff8000328ff8
0xffffff800033d09b : and al, 0x30 ; call 0xffffff8000328ff9
0xffffff8000351b31 : and al, 0x31 ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x6073
0xffffff800084b739 : and al, 0x31 ; ror byte ptr [rax - 9], cl ; int1 ; mov eax, edx ; pop rbp ; ret
0xffffff8000446b8c : and al, 0x38 ; call 0xffffff8000392798
0xffffff80008da394 : and al, 0x3c ; call rax
0xffffff80008b600c : and al, 0x40 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000558e97 : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff800081ecf7 : and al, 0x40 ; shr al, 6 ; pop rbp ; ret
0xffffff80008bc051 : and al, 0x41 ; call rdx
0xffffff800053b5e9 : and al, 0x41 ; mov esi, dword ptr [rsi + 0x18] ; mov rdi, rbx ; call rax
0xffffff800071adb4 : and al, 0x41 ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff800071ade8
0xffffff8000288300 : and al, 0x44 ; mov edi, esp ; mov rsi, rbx ; call rcx
0xffffff80008652cf : and al, 0x48 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff800036ce36 : and al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008bbee2 : and al, 0x48 ; lea esi, [rbp - 0x70] ; call r10
0xffffff80003992e0 : and al, 0x48 ; mov dword ptr [rcx], esi ; pop rdi ; ret
0xffffff80008f8418 : and al, 0x48 ; mov edi, dword ptr [rbp - 0x40] ; mov rsi, r14 ; call r15
0xffffff800054544b : and al, 0x48 ; mov edi, dword ptr [rbp - 0x48] ; mov rsi, r12 ; call r14
0xffffff800076e685 : and al, 0x48 ; mov edi, ebx ; call 0xffffff8000392937
0xffffff800027c4e1 : and al, 0x48 ; mov esi, dword ptr [rbp - 0x40] ; jmp 0xffffff800027c55f
0xffffff8000389719 : and al, 0x48 ; mov esi, edi ; shr rsi, 0x20 ; call qword ptr [rax]
0xffffff800082d743 : and al, 0x48 ; test eax, eax ; je 0xffffff800082d756 ; call rax
0xffffff8000653cf8 : and al, 0x4c ; enter 0x48ff, -0x77 ; ret
0xffffff800077159c : and al, 0x4c ; mov edi, esi ; call 0xffffff8000392a47
0xffffff80007c1f29 : and al, 0x4c ; mov edi, esp ; call 0xffffff800010e146
0xffffff800086db53 : and al, 0x4c ; mov edi, esp ; call qword ptr [rax + 0x28]
0xffffff80008f5e22 : and al, 0x4c ; mov esi, edi ; mov r9, r13 ; call rbx
0xffffff800029c7f5 : and al, 0x4c ; xor esi, esi ; call rax
0xffffff80008bc0a2 : and al, 0x4d ; mov ecx, ebx ; call r10
0xffffff80005076d2 : and al, 0x54 ; mov rdx, qword ptr [r12 + 0x58] ; call rax
0xffffff8000765d9b : and al, 0x58 ; add al, 0x4c ; mov edi, ebp ; call 0xffffff80003923e9
0xffffff80005076d7 : and al, 0x58 ; call rax
0xffffff800076e648 : and al, 0x58 ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000286b30 : and al, 0x5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007b27ac : and al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80004148dd : and al, 0x5d ; ret
0xffffff80007cbd74 : and al, 0x5f ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ret
0xffffff800075ca08 : and al, 0x5f ; ret
0xffffff80005341b8 : and al, 0x74 ; adc dword ptr [rax - 0x77], ecx ; ret
0xffffff800077f330 : and al, 0x74 ; adc edi, edi ; ret
0xffffff8000624823 : and al, 0x74 ; or byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret 0xf2c8
0xffffff800077f101 : and al, 0x74 ; sbb edi, edi ; ret
0xffffff80007a59f7 : and al, 0x78 ; add dword ptr [rax], eax ; add bh, dh ; ret
0xffffff80002aad38 : and al, 0x7c ; cmp cl, byte ptr [rax - 0x7f] ; ret
0xffffff8000656778 : and al, 0x7d ; ret
0xffffff8000b4093f : and al, 0x81 ; ret 0xce61
0xffffff80008eccbb : and al, 0x83 ; jmp qword ptr [rax]
0xffffff80007d47fa : and al, 0x83 ; loopne 0xffffff80007d4804 ; pop rbp ; ret
0xffffff80007d47f9 : and al, 0x83 ; loopne 0xffffff80007d4805 ; pop rbp ; ret
0xffffff8000492af2 : and al, 0x83 ; ret
0xffffff8000362cd8 : and al, 0x83 ; ret 0x8303
0xffffff8000745010 : and al, 0x84 ; cmp dword ptr [rax], eax ; pop rbp ; ret
0xffffff80006a1ba0 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800070afa5 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff80007e9b71 : and al, 0x89 ; ret 0x8b48
0xffffff8000b4a01d : and al, 0x89 ; ret 0xe281
0xffffff800064a003 : and al, 0x89 ; ret 0xe283
0xffffff800062b518 : and al, 0x8a ; add byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xc085
0xffffff80004b056a : and al, 0x8b ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8518
0xffffff80005ed965 : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rsi + 0x31], ah ; ret 0xc166
0xffffff80007a6533 : and al, 0x8c ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x3175
0xffffff8000611e52 : and al, 0x94 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff8000b3c0e4 : and al, 0x95 ; sub byte ptr [rcx + rcx*4], dl ; ret 0xca21
0xffffff8000769518 : and al, 0x9b ; ret 0x49ff
0xffffff8000693ca8 : and al, 0x9d ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80007bca84 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80008ae3d4 : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000835459 : and al, 0xa6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007dbd2c : and al, 0xab ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800079b2b5 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1ee8
0xffffff8000705ef5 : and al, 0xb0 ; add eax, 0x39480000 ; ret
0xffffff8000521d06 : and al, 0xbb ; mov ecx, 0x299e3779 ; ret
0xffffff8000696987 : and al, 0xbc ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff80005293bd : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff8000529762 : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0xffffff80006aa7f9 : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0xffffff80006ac08a : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0xffffff8000528fb6 : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff800064189c : and al, 0xc9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cbd54 : and al, 0xcc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800070b937 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000558df1 : and al, 0xd4 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000558de0 : and al, 0xd8 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800079f508 : and al, 0xda ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000558eb5 : and al, 0xdc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff80002ba9a8 : and al, 0xe ; sti ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000558d8b : and al, 0xe0 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80007a77a8 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x10b9
0xffffff8000558d9c : and al, 0xe4 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000778293 : and al, 0xe8 ; add byte ptr [rax], al ; add al, ch ; push rbx ; ret 0x49ff
0xffffff8000558dad : and al, 0xe8 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000443cdc : and al, 0xe8 ; out dx, al ; call 0xffffff7fc3ce3cea
0xffffff800072f6e8 : and al, 0xe8 ; ret 0xb6
0xffffff80008cad64 : and al, 0xe8 ; test byte ptr [rsi], 0 ; add byte ptr [rcx], al ; ret
0xffffff80004e2d73 : and al, 0xe8 ; xchg eax, edi ; ret 0x27
0xffffff80006aec2c : and al, 0xea ; push rsi ; ret
0xffffff80008bb6d6 : and al, 0xeb ; sbb cl, byte ptr [rcx + 0x3d8d48c3] ; ret
0xffffff80004696ed : and al, 0xec ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000558dbe : and al, 0xec ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80002a90be : and al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039a7b8 : and al, 0xf ; ror dword ptr [rdi], 0x44 ; ret 0xc95f
0xffffff800079b257 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ce8
0xffffff8000558dcf : and al, 0xf0 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80004602c6 : and al, 0xf3 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80004cc568
0xffffff80002bd300 : and al, 0xf6 ; ret
0xffffff800077b50d : and al, 0xf7 ; ret 0xfff7
0xffffff800068384a : and al, 0xf8 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80007c25b5 : and al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b4955 : and al, 0xff ; ret
0xffffff8000528d54 : and al, 0xff ; ror byte ptr [rcx + 0x3f9c1c1], 0x89 ; ret 0xe283
0xffffff800048d08f : and al, 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff800088fb4f : and al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800038c07f : and al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002c02fc : and al, 1 ; movzx eax, al ; pop rbp ; ret
0xffffff80008146db : and al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065e088 : and al, 1 ; ret
0xffffff80008de7dc : and al, 2 ; add byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff800081ed07 : and al, 2 ; shr al, 1 ; pop rbp ; ret
0xffffff800070917a : and al, 3 ; add byte ptr [rax], al ; add byte ptr [rsp + rax - 1], dh ; ret 0xd689
0xffffff80002b1388 : and al, 3 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008def76 : and al, 4 ; add al, byte ptr [rax] ; add bh, dh ; ret
0xffffff80008df304 : and al, 4 ; add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret
0xffffff80008df2a7 : and al, 4 ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff8000535210 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000469793 : and al, 4 ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff80002873f4 : and al, 4 ; call 0xffffff8000273809
0xffffff800066f51e : and al, 4 ; jmp 0xffffff800066f54c
0xffffff800066f51d : and al, 4 ; jmp 0xffffff800066f54d
0xffffff800074500c : and al, 4 ; mov dword ptr [rip + 0x398424], eax ; pop rbp ; ret
0xffffff80004a8048 : and al, 4 ; mov dword ptr [rip + 0x6353e8], eax ; pop rbp ; ret
0xffffff8000389467 : and al, 4 ; push rax ; add byte ptr [rax], al ; add bl, cl ; call rdi
0xffffff80004f88fc : and al, 4 ; shr al, 2 ; movzx eax, al ; pop rbp ; ret
0xffffff800062d566 : and al, 6 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000b45c26 : and al, 6 ; ret 0x4010
0xffffff8000256482 : and al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008a8679 : and al, 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000389742 : and al, 8 ; call qword ptr [rax]
0xffffff800038977f : and al, 8 ; lea rdi, [rbp - 0x2c] ; call qword ptr [rax]
0xffffff800032e936 : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0xffffff800081eb77 : and al, 8 ; shr al, 3 ; pop rbp ; ret
0xffffff8000389047 : and al, ah ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff80003912a7 : and al, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800039133c : and al, al ; pop rbp ; ret
0xffffff8000391597 : and al, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088f331 : and al, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3c353 : and al, byte ptr [r9 - 0x7f] ; ret 0x8894
0xffffff80004868ef : and al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x894b
0xffffff800085a7e3 : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003afadb : and al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000762fa1 : and al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000392a49
0xffffff800090977a : and al, byte ptr [rax] ; jmp 0xffffff8000909743
0xffffff800090984a : and al, byte ptr [rax] ; jmp 0xffffff8000909813
0xffffff800090992a : and al, byte ptr [rax] ; jmp 0xffffff80009098f3
0xffffff80008b69c7 : and al, byte ptr [rax] ; test rax, rax ; je 0xffffff80008b69d8 ; pop rbp ; ret
0xffffff80007b1f85 : and al, byte ptr [rax] ; xor eax, eax ; mov edx, r15d ; call 0xffffff800028e1b9
0xffffff80003014fa : and al, byte ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3c354 : and al, byte ptr [rcx - 0x7f] ; ret 0x8894
0xffffff80005ec03b : and al, byte ptr [rcx] ; ret
0xffffff80006ab357 : and al, ch ; jae 0xffffff80006ab389 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076cf59 : and al, ch ; loope 0xffffff800076cfbb ; ret 0x48ff
0xffffff8000350e38 : and al, ch ; ret 0x463
0xffffff80007107b8 : and al, ch ; ret 0x9fd8
0xffffff80003a426e : and al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff80007662ba : and al, cl ; ret 0x31ff
0xffffff80004a5f32 : and al, dh ; movzx eax, al ; pop rbp ; ret
0xffffff80006986a8 : and al, dl ; dec dword ptr [rax + 1] ; ret
0xffffff80004d670a : and al, dl ; jmp 0xffffff80004d670e
0xffffff80004a5f31 : and al, sil ; movzx eax, al ; pop rbp ; ret
0xffffff800082e01e : and ax, 0x1e ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007c2807 : and bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085feee : and bh, bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c87a3 : and bh, bh ; ret
0xffffff800079d3fd : and bh, bh ; ret 0x3145
0xffffff80005120f8 : and bh, bh ; ret 0x6348
0xffffff8000575429 : and bh, bh ; ret 0x9589
0xffffff80002996f0 : and bh, bl ; xor eax, eax ; pop rbp ; ret
0xffffff800076cfa1 : and bh, byte ptr [rax + rax] ; call 0xffffff8000393046
0xffffff800034934b : and bh, byte ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007b81fc : and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004f0c52 : and bh, dh ; ret
0xffffff80008d341a : and bh, dl ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000525b0d : and bh, dl ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800039a6d0 : and bl, al ; mov rax, rdi ; ret
0xffffff8000393525 : and bl, al ; pop rbp ; ret
0xffffff800074208a : and bl, byte ptr [rcx + rdi*4] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f7c34 : and bl, ch ; add dh, byte ptr [rcx] ; leave ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff80003934ff : and bl, cl ; pop rbp ; ret
0xffffff800025a4b1 : and byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002d11f1 : and byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret
0xffffff80007914e4 : and byte ptr [r8 + 0x29], r9b ; ret
0xffffff8000841f6a : and byte ptr [r8 + 0x39], cl ; ret
0xffffff8000812336 : and byte ptr [r8 + 0x39], r9b ; ret
0xffffff800076733b : and byte ptr [r8 - 0x75], cl ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80005115a9 : and byte ptr [r8 - 0x75], cl ; xor al, ch ; popfq ; ret 0xffdb
0xffffff80002db356 : and byte ptr [r8 - 0x75], r9b ; push rax ; pop rbp ; ret
0xffffff80004af39e : and byte ptr [r8 - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff800036e905 : and byte ptr [r8 - 0x77], r9b ; ja 0xffffff800036e93a ; pop rbp ; ret
0xffffff80003713e5 : and byte ptr [r8 - 0x77], r9b ; ja 0xffffff800037141a ; pop rbp ; ret
0xffffff80008851b8 : and byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80008851b8 ; pop rbp ; ret
0xffffff80008d9376 : and byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x45 ; ret
0xffffff80002a14d7 : and byte ptr [r8 - 0x7d], cl ; ret
0xffffff8000816877 : and byte ptr [r8 - 0x7d], r9b ; ret
0xffffff8000554030 : and byte ptr [r8 - 0x7f], cl ; ret
0xffffff80005f4054 : and byte ptr [r8 - 1], r9b ; ret
0xffffff80004232b1 : and byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000574487 : and byte ptr [r9 + 0xf], r8b ; ret
0xffffff80003718f3 : and byte ptr [r9 - 0x76be43bb], cl ; ret 0x3145
0xffffff800042035e : and byte ptr [r9 - 0x77], r9b ; cmp byte ptr [rcx - 0xa], r8b ; ret 0x7408
0xffffff800025983e : and byte ptr [rax + 0x21], cl ; ret
0xffffff800077c081 : and byte ptr [rax + 0x21], cl ; ret 0x148
0xffffff8000b49653 : and byte ptr [rax + 0x21], cl ; ret 0xb848
0xffffff80002dd4c9 : and byte ptr [rax + 0x29], cl ; fisttp dword ptr [rax - 1] ; ret
0xffffff80007914e5 : and byte ptr [rax + 0x29], cl ; ret
0xffffff80004f128a : and byte ptr [rax + 0x29], cl ; ret 0x3948
0xffffff80002dd4c8 : and byte ptr [rax + 0x29], r9b ; fisttp dword ptr [rax - 1] ; ret
0xffffff80002597bf : and byte ptr [rax + 0x31], cl ; fisttp word ptr [rax - 0x3f] ; jmp qword ptr [rax]
0xffffff8000317746 : and byte ptr [rax + 0x39], cl ; ret
0xffffff80002d131a : and byte ptr [rax + 0x39], cl ; ret 0x3c75
0xffffff80004f0974 : and byte ptr [rax + 0x39], cl ; ret 0x8d0f
0xffffff80003895d6 : and byte ptr [rax + 0x50], 0xfe ; pop rbp ; ret
0xffffff8000896d5d : and byte ptr [rax + 0x5e415b01], dh ; pop rbp ; ret
0xffffff80002db492 : and byte ptr [rax + 0x63], cl ; ret 0x8b48
0xffffff8000603604 : and byte ptr [rax + 0x63], cl ; ret 0xc2ff
0xffffff80003895ee : and byte ptr [rax + 0xc8], 0xfe ; pop rbp ; ret
0xffffff8000716753 : and byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0xffffff80004954bf : and byte ptr [rax + 1], cl ; adc al, 0xc7 ; pop rbp ; ret
0xffffff800036055a : and byte ptr [rax + 1], cl ; ret
0xffffff800049a51c : and byte ptr [rax + 1], cl ; ret 0x708b
0xffffff8000497ba2 : and byte ptr [rax + 1], cl ; ret 0x8949
0xffffff8000b41339 : and byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff8000b412e3 : and byte ptr [rax + 1], cl ; ret 0xb848
0xffffff8000437847 : and byte ptr [rax + 3], bh ; pop rbp ; ret
0xffffff800039ea6e : and byte ptr [rax + 9], cl ; ret
0xffffff80003aa0d2 : and byte ptr [rax + 9], cl ; ret 0x148
0xffffff80003ac0c2 : and byte ptr [rax + 9], cl ; ret 0x14c
0xffffff800039ecbe : and byte ptr [rax + 9], cl ; ret 0x2b48
0xffffff800038447b : and byte ptr [rax + 9], cl ; ret 0x348
0xffffff80003a5a54 : and byte ptr [rax + 9], cl ; ret 0x3948
0xffffff800038bf43 : and byte ptr [rax + 9], cl ; ret 0x394c
0xffffff80008edb6c : and byte ptr [rax + 9], cl ; ret 0x8548
0xffffff80003aa620 : and byte ptr [rax + 9], cl ; ret 0x8948
0xffffff8000384ab0 : and byte ptr [rax + 9], cl ; ret 0x8b48
0xffffff80003a826b : and byte ptr [rax + 9], cl ; ret 0x8d48
0xffffff800039ec0d : and byte ptr [rax + 9], cl ; ret 0x8d4c
0xffffff800085b593 : and byte ptr [rax + 9], cl ; ret 0xb848
0xffffff80003a5a23 : and byte ptr [rax + 9], cl ; ret 0xb948
0xffffff800038bef6 : and byte ptr [rax + 9], cl ; ret 0xbc49
0xffffff80003c59cc : and byte ptr [rax + 9], cl ; ret 0xc031
0xffffff800087463f : and byte ptr [rax + 9], cl ; rol dword ptr [rcx + 0xf], 0xb6 ; ret
0xffffff8000869d3b : and byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800076de0d : and byte ptr [rax + rax], bh ; call 0xffffff8000393046
0xffffff800066bce3 : and byte ptr [rax + rax], dh ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff8000437836 : and byte ptr [rax + rbp - 0x7d], dh ; jmp qword ptr [rbx]
0xffffff8000753d1e : and byte ptr [rax - 0x170076b4], dl ; sbb bl, dh ; ret
0xffffff8000b449ea : and byte ptr [rax - 0x41], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff8000b47dc5 : and byte ptr [rax - 0x45], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff8000b457a3 : and byte ptr [rax - 0x45], cl ; jmp rsi
0xffffff80007a189f : and byte ptr [rax - 0x75], cl ; adc dword ptr [rbx + rcx*4 + 0x24], ecx ; ret 0x854d
0xffffff800076733c : and byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff8000890646 : and byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80002db357 : and byte ptr [rax - 0x75], cl ; push rax ; pop rbp ; ret
0xffffff8000890676 : and byte ptr [rax - 0x75], cl ; sbb al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80005115aa : and byte ptr [rax - 0x75], cl ; xor al, ch ; popfq ; ret 0xffdb
0xffffff8000328660 : and byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff8000328fe3 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800076e75c : and byte ptr [rax - 0x77], cl ; fucomip st(0) ; wait ; ret 0x48ff
0xffffff800036e906 : and byte ptr [rax - 0x77], cl ; ja 0xffffff800036e939 ; pop rbp ; ret
0xffffff80003713e6 : and byte ptr [rax - 0x77], cl ; ja 0xffffff8000371419 ; pop rbp ; ret
0xffffff80004af39f : and byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff80002f78e7 : and byte ptr [rax - 0x77], cl ; ret
0xffffff80005bf6b8 : and byte ptr [rax - 0x77], cl ; ret 0x1974
0xffffff8000539a25 : and byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff800071205c : and byte ptr [rax - 0x77], cl ; ret 0x820f
0xffffff8000712f34 : and byte ptr [rax - 0x77], cl ; ret 0x894c
0xffffff8000451adc : and byte ptr [rax - 0x77], cl ; ret 0xdb31
0xffffff8000812363 : and byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff80005bf6b7 : and byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff80008851b9 : and byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80008851b7 ; pop rbp ; ret
0xffffff80008d9377 : and byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x45 ; ret
0xffffff8000851540 : and byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xb
0xffffff8000624aa8 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0xffffff80002a14d8 : and byte ptr [rax - 0x7d], cl ; ret
0xffffff80008bc88d : and byte ptr [rax - 0x7d], cl ; ret 0x4110
0xffffff8000315a15 : and byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff800026de5a : and byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff80007e2bab : and byte ptr [rax - 0x7d], cl ; ret 0x4920
0xffffff80008eb8e0 : and byte ptr [rax - 0x7d], cl ; ret 0x4c03
0xffffff8000503d73 : and byte ptr [rax - 0x7d], cl ; ret 0xbee0
0xffffff8000271bc8 : and byte ptr [rax - 0x7d], cl ; ret 0xe824
0xffffff80003c57f2 : and byte ptr [rax - 0x7d], cl ; ret 0xff28
0xffffff8000276411 : and byte ptr [rax - 0x7d], cl ; shl byte ptr [rax], 0x83 ; ret 0x75fc
0xffffff8000554031 : and byte ptr [rax - 0x7f], cl ; ret
0xffffff800035d9ac : and byte ptr [rax - 1], cl ; leave ; jne 0xffffff800035d9a7 ; pop rbp ; ret
0xffffff800038e439 : and byte ptr [rax - 1], cl ; ret
0xffffff80007d792e : and byte ptr [rax - 1], cl ; ret 0xd039
0xffffff800069edf9 : and byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80007d792d : and byte ptr [rax - 1], r9b ; ret 0xd039
0xffffff800089cbe9 : and byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800087cd61 : and byte ptr [rax], 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008aa875 : and byte ptr [rax], 9 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000881da9 : and byte ptr [rax], al ; add al, ch ; lahf ; ret
0xffffff800072c5e6 : and byte ptr [rax], al ; add al, ch ; ret 0xba76
0xffffff8000345654 : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000605a72 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800049c44b : and byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004232b2 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004a31d9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000711e53 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff800010e086
0xffffff8000276b58 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff8000292d76
0xffffff800029e4b1 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x78] ; call r15
0xffffff800029ddf1 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r13 ; call r12
0xffffff800029e591 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; call r15
0xffffff80003384de : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008583f3 : and byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, edx ; pop rbp ; ret
0xffffff800066b327 : and byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80007108c0 : and byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800079c219 : and byte ptr [rax], al ; add byte ptr [rbp + 5], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003acc83 : and byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005d0669 : and byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; adc dword ptr [rax - 1], r9d ; ret
0xffffff80004b43fb : and byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0xffffff800087a151 : and byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007c375f : and byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0xffffff80007c37bc
0xffffff80005f4e08 : and byte ptr [rax], al ; and byte ptr [rax], al ; pop rbp ; ret
0xffffff80008dc645 : and byte ptr [rax], al ; call 0xffffff8000858904
0xffffff80003d5f59 : and byte ptr [rax], al ; je 0xffffff80003d5f6a ; or byte ptr [rsi + 1], 0x40 ; pop rbp ; ret
0xffffff80006b5b60 : and byte ptr [rax], al ; jle 0xffffff80006b5b71 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c3761 : and byte ptr [rax], al ; jmp 0xffffff80007c37ba
0xffffff80002f8e27 : and byte ptr [rax], al ; jne 0xffffff80002f8e38 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e21d5 : and byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff80008e9a54 : and byte ptr [rax], al ; mov rdx, rax ; jmp 0xffffff80008e9a66
0xffffff80004b3879 : and byte ptr [rax], al ; pop rbp ; ret
0xffffff80002a38c7 : and byte ptr [rax], al ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800087cd62 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80002a9a64 : and byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800026b317 : and byte ptr [rbp + 0x21], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007e4fe7 : and byte ptr [rbp + 0x31], al ; fucomi st(3) ; or byte ptr [rcx - 0x7d], cl ; ret 0x4814
0xffffff800064d870 : and byte ptr [rbp + 0x390c7edb], al ; fmul dword ptr [rdi] ; ret
0xffffff80004acaad : and byte ptr [rbp + 0x5bae75d2], al ; pop r14 ; pop rbp ; ret
0xffffff80004b3585 : and byte ptr [rbp + 0x5dd675d2], al ; ret
0xffffff8000422ee2 : and byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034a9b3 : and byte ptr [rbp + rdx - 1], dh ; ret 0xfa81
0xffffff800061edf8 : and byte ptr [rbp + rsi - 0x7b], dh ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xc1f6
0xffffff800055fe21 : and byte ptr [rbp - 0x3d], bl ; lock add qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000288f3b : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0xffffff800025a4b2 : and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800025041a : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800025a5d1 : and byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff800082483a : and byte ptr [rbx + 0x70], 0xfd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d01f7 : and byte ptr [rbx + 8], 0x7f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ed595 : and byte ptr [rbx + r11 - 0x77], r14b ; ret 0xc2ff
0xffffff800039ebfc : and byte ptr [rbx + rbp*2], 0 ; call qword ptr [rax]
0xffffff80007ed596 : and byte ptr [rbx + rbx - 0x77], dh ; ret 0xc2ff
0xffffff80005b650f : and byte ptr [rbx + rbx*8 - 0xb7d88c], al ; ret 0x8148
0xffffff8000340f53 : and byte ptr [rbx - 0x188a033a], al ; pop rbp ; ret
0xffffff80008425de : and byte ptr [rbx - 0x7cb71f3f], al ; ret 0x8304
0xffffff8000382e6a : and byte ptr [rbx - 0xa373], cl ; jmp qword ptr [rbx]
0xffffff80004f9358 : and byte ptr [rbx], 0x47 ; je 0xffffff80004f93bf ; ret
0xffffff800070e0c4 : and byte ptr [rbx], 0xfe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80009058b8 : and byte ptr [rbx], ah ; add byte ptr [rax - 1], cl ; ret
0xffffff80002e984e : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000621843 : and byte ptr [rcx + 0x5d8ba045], cl ; sbb dh, dh ; ret 0x7520
0xffffff80003b9cf4 : and byte ptr [rcx + 0x79], bh ; wrmsr ; pop rbp ; ret
0xffffff8000574488 : and byte ptr [rcx + 0xf], al ; ret
0xffffff80005aefa6 : and byte ptr [rcx + r9*4 - 0x10], r9b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005489a4 : and byte ptr [rcx + r9*8 - 0x7cb7b28b], r8b ; ret
0xffffff80003babed : and byte ptr [rcx + rcx*4 + 0xe], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80005aefa7 : and byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076e3f7 : and byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff8000392937
0xffffff80005489a5 : and byte ptr [rcx + rcx*8 - 0x7cb7b28b], al ; ret
0xffffff800045c9d7 : and byte ptr [rcx + rdx - 0x77], dh ; ret 0xe283
0xffffff80003a833e : and byte ptr [rcx - 0x2ff6b740], cl ; pop rbp ; ret
0xffffff8000b48464 : and byte ptr [rcx - 0x44], cl ; sti ; jle 0xffffff8000b484a6 ; call rdi
0xffffff8000b3e987 : and byte ptr [rcx - 0x48], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, 0x1f ; ret 0x4daf
0xffffff80004caa9d : and byte ptr [rcx - 0x73], cl ; adc sil, r14b ; ret 0x4901
0xffffff80003637d9 : and byte ptr [rcx - 0x75], al ; pop rsi ; sub al, 0x83 ; ret
0xffffff800038973e : and byte ptr [rcx - 0x75], al ; push rsp ; and al, 8 ; call qword ptr [rax]
0xffffff80003637d8 : and byte ptr [rcx - 0x75], r8b ; pop rsi ; sub al, 0x83 ; ret
0xffffff80003718f4 : and byte ptr [rcx - 0x76be43bb], cl ; ret 0x3145
0xffffff800042035f : and byte ptr [rcx - 0x77], cl ; cmp byte ptr [rcx - 0xa], r8b ; ret 0x7408
0xffffff80003431ae : and byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp + rcx*4 + 0x3d] ; jmp qword ptr [rdx]
0xffffff800085de69 : and byte ptr [rcx - 0x77], cl ; pop rsi ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800041dd30 : and byte ptr [rcx - 0x77], cl ; ret 0x314c
0xffffff800064c6dc : and byte ptr [rcx - 0x7d], al ; jmp qword ptr [rbx]
0xffffff80004aa5c7 : and byte ptr [rcx - 0x7d], al ; ret
0xffffff80008ecd78 : and byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0xffffff8000b48864 : and byte ptr [rcx - 0x7f], cl ; cmc ; ret 0x7fe3
0xffffff8000302c71 : and byte ptr [rcx - 0x7f], cl ; ret
0xffffff80004ce7ba : and byte ptr [rcx - 1], al ; ret
0xffffff80003c8dde : and byte ptr [rcx - 1], cl ; ret 0x8944
0xffffff8000778873 : and byte ptr [rcx], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff800048c859 : and byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c6888 : and byte ptr [rcx], al ; add byte ptr [rax], al ; call 0xffffff80005c2b76
0xffffff8000830eaa : and byte ptr [rcx], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff800089cbea : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008c3a34 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800088ddbd : and byte ptr [rcx], al ; add byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff8000762f1c : and byte ptr [rcx], al ; ret
0xffffff800062eedb : and byte ptr [rcx], al ; ret 0x48d
0xffffff8000b4436c : and byte ptr [rcx], al ; xor al, 0x10 ; ret 0x48a
0xffffff8000377edc : and byte ptr [rcx], bh ; ret
0xffffff80007e14ad : and byte ptr [rcx], bh ; ret 0x16bb
0xffffff80006569bb : and byte ptr [rcx], bh ; ret 0x3576
0xffffff800026214e : and byte ptr [rcx], bh ; ret 0xed72
0xffffff80007dabd1 : and byte ptr [rcx], ch ; ret
0xffffff80007175a7 : and byte ptr [rcx], ch ; ret 0x894c
0xffffff80008aa876 : and byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000767782 : and byte ptr [rcx], cl ; ret
0xffffff800045892a : and byte ptr [rcx], cl ; ret 0xe183
0xffffff8000815071 : and byte ptr [rcx], dh ; leave ; call 0xffffff80008c12a5
0xffffff8000757b37 : and byte ptr [rcx], dh ; leave ; call r15
0xffffff80007580c3 : and byte ptr [rcx], dh ; leave ; call rbx
0xffffff8000802ba3 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800037474a : and byte ptr [rcx], dh ; ret 0xc148
0xffffff8000891f1a : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80004a2f5c : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0xffffff800066ce15 : and byte ptr [rcx], dl ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000627777 : and byte ptr [rdi + 0x214], 0xbf ; pop rbp ; ret
0xffffff80006265f4 : and byte ptr [rdi + 0x216], 0xbf ; pop rbp ; ret
0xffffff80002bbe89 : and byte ptr [rdi + 0x3f0], 0xf3 ; pop rbp ; ret
0xffffff80002bbe6c : and byte ptr [rdi + 0x3f0], 0xfe ; pop rbp ; ret
0xffffff80006d64d4 : and byte ptr [rdi + 0x42], 0xf7 ; pop rbp ; ret
0xffffff8000625fbc : and byte ptr [rdi + 0x5b], 0xef ; pop rbp ; ret
0xffffff80005f0014 : and byte ptr [rdi + 0x94], 0xfb ; pop rbp ; ret
0xffffff800059eac2 : and byte ptr [rdi], cl ; lahf ; ret
0xffffff8000719a52 : and byte ptr [rdi], cl ; mov dh, 0x17 ; inc rdx ; jmp 0xffffff8000719a8c
0xffffff800061e507 : and byte ptr [rdi], cl ; ret 0x28b9
0xffffff80006c6776 : and byte ptr [rdi], cl ; ret 0x508d
0xffffff80006c679a : and byte ptr [rdi], cl ; ret 0xeb
0xffffff80002d11f2 : and byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0xffffff800025ed1a : and byte ptr [rdi], cl ; test dword ptr [rbp - 0xa000000], ecx ; ret
0xffffff800025e8b2 : and byte ptr [rdi], cl ; test dword ptr [rcx - 0x9ffffff], esp ; ret
0xffffff80003d7690 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca08
0xffffff80007484d4 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff800033e7fd : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d8b
0xffffff80005ee47a : and byte ptr [rdx + rax + 0x31], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800029d763 : and byte ptr [rdx - 0x7cb7fdbe], cl ; ret 0xf02
0xffffff8000366804 : and byte ptr [rdx - 0x7f3577f2], cl ; ret 0xfbf
0xffffff800087689c : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800072e1d3 : and byte ptr [rdx], al ; add byte ptr [rax], al ; or qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff80008130de : and byte ptr [rdx], dh ; add byte ptr [rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086312e : and byte ptr [rip + 0x415b2000], ch ; pop rsi ; pop rbp ; ret
0xffffff8000657d19 : and byte ptr [rip - 0x173fcf00], dh ; jge 0xffffff8000657d90 ; ret
0xffffff80006a9a3c : and byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rax
0xffffff800076ab75 : and byte ptr [rsi - 0x39], ah ; ret 2
0xffffff80007a0a18 : and byte ptr [rsi - 0x48], ah ; add byte ptr [r14 - 0x42], spl ; ret
0xffffff800036d5ec : and byte ptr [rsi - 2], ch ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003115cb : and byte ptr [rsi - 9], ah ; ret 0xfff
0xffffff800067849c : and byte ptr [rsi], ah ; ret 0x48ff
0xffffff80006534a2 : and byte ptr [rsi], cl ; mov rdi, rbx ; mov rsi, r15 ; call qword ptr [rax]
0xffffff800077159a : and byte ptr [rsp + 0x4c], dh ; mov edi, esi ; call 0xffffff8000392a49
0xffffff8000691261 : and ch, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039ee3f : and ch, byte ptr [rbx] ; call qword ptr [rax]
0xffffff800076051a : and ch, byte ptr [rbx] ; ret
0xffffff8000522855 : and ch, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800056792a : and ch, byte ptr [rdi - 0x2d] ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff800034928a : and ch, byte ptr [rdx - 0x76b70008] ; ret
0xffffff8000862ece : and ch, byte ptr [rip + 0x415b1000] ; pop rsi ; pop rbp ; ret
0xffffff800039ee3e : and ch, byte ptr ds:[rbx] ; call qword ptr [rax]
0xffffff800058477f : and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0xffffff80004c68c5 : and cl, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000445fa6 : and cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff800043778c : and cl, al ; movzx eax, cl ; xor eax, 1 ; pop rbp ; ret
0xffffff800033fbd0 : and cl, al ; out dx, al ; add eax, 0xfed8545 ; xchg eax, esp ; ret 0x2040
0xffffff80005e4c5f : and cl, byte ptr [rax + 0x39] ; ret
0xffffff800035d77c : and cl, byte ptr [rax + 0x63] ; ret
0xffffff80006e67a6 : and cl, byte ptr [rax - 0x7f] ; ret
0xffffff80005e4c57 : and cl, byte ptr [rax - 1] ; ret
0xffffff8000414780 : and cl, byte ptr [rax - 1] ; ret 0x6666
0xffffff80006caa04 : and cl, byte ptr [rax - 1] ; ret 0x73e8
0xffffff80006cc490 : and cl, byte ptr [rax - 1] ; ret 0xe7e8
0xffffff8000b3e3cf : and cl, byte ptr [rbp + 0x21] ; ret
0xffffff8000628258 : and cl, byte ptr [rcx + rcx*4 - 0x11] ; call rax
0xffffff8000776b2b : and cl, byte ptr [rdi] ; mov bh, 0x48 ; add al, byte ptr [rbx - 0x3d8afc07] ; jmp 0xffffff8000776b5c
0xffffff8000516a48 : and cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xc220
0xffffff800082c5ca : and cl, byte ptr [rsi - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000336d43 : and cl, ch ; ret
0xffffff80004dc76b : and cl, ch ; ret 0xfffd
0xffffff800055249e : and cl, ch ; ret 2
0xffffff80005aa101 : and cl, ch ; ret 4
0xffffff80008146d8 : and dh, al ; and al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002957bf : and dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005103ba : and dh, byte ptr [rax + 0x1480060] ; ret
0xffffff800069a3d2 : and dh, byte ptr [rax + rcx*2] ; mov esi, 1 ; call rax
0xffffff8000411b5f : and dh, byte ptr [rax] ; call 0xffffff8000393049
0xffffff80008ce2ca : and dh, byte ptr [rcx] ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b43b6b : and dh, byte ptr [rdi + 0x47] ; or cl, byte ptr [rbp - 0x1b47d850] ; ret
0xffffff8000657e9b : and dh, byte ptr [rip - 0x173fcf00] ; sti ; ret
0xffffff80007d24a4 : and dh, byte ptr [rsi] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000339cc7 : and dh, dh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006d7637 : and dh, dh ; ret
0xffffff80004210a4 : and dh, dh ; ret 0x4d02
0xffffff80007af461 : and dh, dh ; ret 0x7401
0xffffff800059d02f : and dh, dh ; ret 0xf01
0xffffff80006c87a2 : and dil, dil ; ret
0xffffff8000491c30 : and dl, 0xff ; call rdx
0xffffff800069b4fa : and dl, ah ; ret
0xffffff80008e6c2f : and dl, byte ptr [rax + rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000b496af : and dl, byte ptr [rcx + 0x54] ; or r9b, byte ptr [rax + 1] ; ret 0x294c
0xffffff8000641617 : and dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b3c399 : and dl, byte ptr [rdx + 0x49] ; adc ch, byte ptr [rcx] ; ret 0xe281
0xffffff800065ee3a : and dl, cl ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff80005dd9c0 : and dword ptr [rax + 0x48000000], 0xffffff89 ; fucomip st(0) ; ret
0xffffff8000670f92 : and dword ptr [rax + 0x48000002], 0xffffff81 ; ret
0xffffff80002886bf : and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80005757e3 : and dword ptr [rax + 0x63], ecx ; ret
0xffffff800053c325 : and dword ptr [rax + 0xb], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800076dd50 : and dword ptr [rax + rax], edi ; call 0xffffff8000392936
0xffffff800076dd94 : and dword ptr [rax + rax], edi ; call 0xffffff8000393046
0xffffff800043e181 : and dword ptr [rax - 0x47000000], 0xffffffbf ; jg 0xffffff800043e192 ; jmp qword ptr [rcx]
0xffffff8000358707 : and dword ptr [rax - 0x77], ecx ; ret
0xffffff800041c4e6 : and dword ptr [rax - 0x77], ecx ; ret 0x2c6
0xffffff80006654a4 : and dword ptr [rax - 0x77], ecx ; ret 0x8b48
0xffffff800034e82e : and dword ptr [rax - 0x77], ecx ; ret 0xc889
0xffffff800070a3b4 : and dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0xffffff80003343f3 : and dword ptr [rax - 0x7d], ecx ; ret
0xffffff80003343f2 : and dword ptr [rax - 0x7d], r9d ; ret
0xffffff8000483237 : and dword ptr [rax - 1], ecx ; ret
0xffffff8000511b71 : and dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff80003ca017 : and dword ptr [rax - 1], ecx ; ret 0xff48
0xffffff80002996ef : and dword ptr [rax], 0xffffffdf ; xor eax, eax ; pop rbp ; ret
0xffffff80005fdcc8 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008cc19a : and dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff800028bfdf : and dword ptr [rax], eax ; add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80008ea264 : and dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80007c1ec1 : and dword ptr [rax], eax ; call 0xffffff800028e1b4
0xffffff8000b4b14d : and dword ptr [rax], eax ; mov dword ptr [rax - 1], ecx ; ret 0x848d
0xffffff80008ed979 : and dword ptr [rax], eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0xffffff80008790d9 : and dword ptr [rax], eax ; pop rbp ; ret
0xffffff800080d33b : and dword ptr [rax], ebp ; xor al, byte ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006b2865 : and dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000290ea7 : and dword ptr [rax], edx ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000725b06 : and dword ptr [rbp - 0x76da8b37], eax ; ret 0xeac1
0xffffff80006a7cab : and dword ptr [rbp - 4], ebx ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800054f66d : and dword ptr [rbp], ebx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006b6144 : and dword ptr [rbx + 0x48000001], 1 ; ret
0xffffff800035471e : and dword ptr [rbx + 0x5e415b03], ecx ; pop rbp ; ret
0xffffff80005dfd80 : and dword ptr [rbx - 0x7cb7f3b5], ecx ; ret
0xffffff8000271e8b : and dword ptr [rbx], 0x1f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800077d0d7 : and dword ptr [rbx], edi ; add byte ptr [rbp - 0x3d], bl ; mov rax, rcx ; pop rbp ; ret
0xffffff800028bc7b : and dword ptr [rcx + 0x5e415bd8], ecx ; pop rbp ; ret
0xffffff800051e991 : and dword ptr [rcx + rax], 0 ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret
0xffffff8000b3c8a3 : and dword ptr [rcx - 0x77], eax ; ret 0x8141
0xffffff800082aa9e : and dword ptr [rcx - 0x7d], eax ; ret
0xffffff8000299c7f : and dword ptr [rcx], 0xffff7fff ; xor eax, eax ; pop rbp ; ret
0xffffff8000299c3f : and dword ptr [rcx], 0xffffefff ; xor eax, eax ; pop rbp ; ret
0xffffff800029940f : and dword ptr [rcx], 0xfffffbff ; xor eax, eax ; pop rbp ; ret
0xffffff8000522875 : and dword ptr [rcx], ebp ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000528e0e : and dword ptr [rcx], ecx ; ret 0x8842
0xffffff8000529ba7 : and dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff80004b3b80 : and dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff80004b75f6 : and dword ptr [rdi + 0xd8], esi ; pop rbp ; ret
0xffffff80004a23ff : and dword ptr [rdi + rcx*8 + 0x18], 0xfffffffe ; pop rbp ; ret
0xffffff8000750395 : and dword ptr [rdi], 0xffffffdf ; pop rbp ; ret
0xffffff80002d1e67 : and dword ptr [rdi], eax ; add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff80007455d3 : and dword ptr [rdi], ecx ; pushfq ; ret 0xf40
0xffffff80006416d1 : and dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003934d1 : and dword ptr [rdi], esi ; ret
0xffffff8000670fa2 : and dword ptr [rdx + 0x48000002], 0xffffff81 ; ret
0xffffff800053c335 : and dword ptr [rdx + 0xb], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003ab663 : and dword ptr [rdx + rbp*2], ebx ; pop rbp ; ret
0xffffff8000807d3f : and dword ptr [rdx + rcx*8 + 0x18], 0xfffffffa ; pop rbp ; ret
0xffffff8000803572 : and dword ptr [rdx + rcx*8 + 0x18], 0xfffffffe ; pop rbp ; ret
0xffffff8000893041 : and dword ptr [rdx], ebp ; add byte ptr [rax + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff8000262b34 : and dword ptr [rip + 0x8851e9], 0xffffffbf ; pop rbp ; ret
0xffffff8000395254 : and dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff80005784fb : and dword ptr [rsi + rdx*8], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006e23e4 : and dword ptr [rsi - 0x39], 0xffff1685 ; jmp qword ptr [rdx]
0xffffff80006714d1 : and dword ptr [rsi - 0x75], esp ; ret 0x8566
0xffffff80005f8f6b : and dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], r9b ; ret 0x8b48
0xffffff800065337d : and dword ptr [rsi], ecx ; mov rdi, r14 ; mov rsi, r15 ; call qword ptr [rax]
0xffffff800090abd3 : and dword ptr [rsi], edi ; sbb dword ptr [rax], eax ; ret
0xffffff8000288698 : and eax, 0 ; or dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80003a269d : and eax, 0 ; pop rbp ; ret
0xffffff800062e0ce : and eax, 0x100000 ; pop rbp ; ret
0xffffff80007bfb8d : and eax, 0x1489848 ; ret
0xffffff80004f9058 : and eax, 0x17fff5ff ; pop rbp ; ret
0xffffff8000366e77 : and eax, 0x18 ; pop rbp ; ret
0xffffff80003933e3 : and eax, 0x18 ; ret
0xffffff80003abdc5 : and eax, 0x1c ; and edx, ebx ; call rax
0xffffff8000366e17 : and eax, 0x1c ; pop rbp ; ret
0xffffff800084aba4 : and eax, 0x1c8b4800 ; ret
0xffffff8000392892 : and eax, 0x201ffff ; ret
0xffffff800084a9b3 : and eax, 0x248b4c00 ; ret
0xffffff800039a76d : and eax, 0x30 ; xor rbp, rbp ; call rcx
0xffffff80006644de : and eax, 0x31000001 ; shr al, 0xc7 ; pushfq ; ret 0x48ff
0xffffff8000775a0a : and eax, 0x358d4800 ; ret 0x25dc
0xffffff80003993eb : and eax, 0x38 ; mov rdi, rdx ; call rsi
0xffffff8000762ccd : and eax, 0x3cd12e ; call 0xffffff80003922f8
0xffffff80008032e6 : and eax, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf74
0xffffff80003b61ed : and eax, 0x40 ; je 0xffffff80003b61fe ; cli ; pop rbp ; ret
0xffffff800049db5d : and eax, 0x40 ; je 0xffffff800049db6e ; cli ; pop rbp ; ret
0xffffff80008d6a7f : and eax, 0x415b2000 ; pop rsi ; pop rbp ; ret
0xffffff80008d768f : and eax, 0x415b3800 ; pop rsi ; pop rbp ; ret
0xffffff80008d741f : and eax, 0x415b5000 ; pop rsi ; pop rbp ; ret
0xffffff80005655f2 : and eax, 0x415bffd3 ; pop rsi ; pop rbp ; ret
0xffffff800078d2e8 : and eax, 0x450f4800 ; ret
0xffffff80002da23d : and eax, 0x45894810 ; test al, 0x89 ; ret 0xc148
0xffffff800030284a : and eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000476db7 : and eax, 0x4800056e ; mov edi, ebx ; call 0xffffff8000393049
0xffffff80007b1d66 : and eax, 0x48b4800 ; ret 0xb60f
0xffffff8000781f27 : and eax, 0x4cc03100 ; mov edx, edi ; call 0xffffff800028e1b9
0xffffff8000781ef3 : and eax, 0x4cc03100 ; mov edx, esi ; call 0xffffff800028e1b9
0xffffff80008e5d6c : and eax, 0x5750200 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000862c6e : and eax, 0x5b50002d ; pop r14 ; pop rbp ; ret
0xffffff8000510a46 : and eax, 0x5bc03100 ; pop r14 ; pop rbp ; ret
0xffffff80008a52e7 : and eax, 0x5d00291c ; ret
0xffffff8000896747 : and eax, 0x5d002a06 ; ret
0xffffff8000528e63 : and eax, 0x5d005af1 ; ret
0xffffff8000290ee7 : and eax, 0x5d0085a4 ; ret
0xffffff8000716fde : and eax, 0x5df8897c ; ret
0xffffff80003baab2 : and eax, 0x746dc9 ; pop rbp ; ret
0xffffff80007cea25 : and eax, 0x773d8d48 ; ret 0x20
0xffffff80008d299a : and eax, 0x78ff8545 ; xor byte ptr [rcx + 0x39], cl ; ret
0xffffff8000796108 : and eax, 0x7f47 ; pop rbp ; ret
0xffffff80007f060b : and eax, 0x800000 ; pop rbp ; ret
0xffffff80005c3130 : and eax, 0x81480000 ; ret
0xffffff80002ff365 : and eax, 0x81c1ff48 ; ret
0xffffff8000365a50 : and eax, 0x83000001 ; ret 0x8333
0xffffff8000419fa9 : and eax, 0x840fc085 ; ret 1
0xffffff8000b4872f : and eax, 0x88442924 ; ret 0xd200
0xffffff8000409a97 : and eax, 0x89000193 ; ret
0xffffff800033026f : and eax, 0x89007c9e ; ret 0x8b48
0xffffff80007e2a82 : and eax, 0x89440020 ; ret
0xffffff80007539d1 : and eax, 0x89480000 ; ret
0xffffff80006dd5a1 : and eax, 0x8948002e ; ret
0xffffff800048a94a : and eax, 0x8948002f ; ret
0xffffff8000835274 : and eax, 0x8948ffa6 ; ret
0xffffff8000706389 : and eax, 0x8948ffbd ; ret
0xffffff800089ee4f : and eax, 0x8948fff7 ; ret
0xffffff800073c7fa : and eax, 0x8948ffff ; ret
0xffffff80005a990e : and eax, 0x89d78948 ; ret 0xe281
0xffffff80008b84d7 : and eax, 0x89ffa5d7 ; ret
0xffffff8000747c57 : and eax, 0x89ffc4ef ; ret
0xffffff80002bf077 : and eax, 0x89ffffff ; ret
0xffffff80007aaa25 : and eax, 0xa0c00008 ; or eax, esi ; pop rbx ; pop rbp ; ret
0xffffff8000536781 : and eax, 0xb7e80053 ; ret 0xffe5
0xffffff8000756dba : and eax, 0xc ; pop rbp ; ret
0xffffff8000716fbc : and eax, 0xc821487c ; pop rbp ; ret
0xffffff80007be9d2 : and eax, 0xca3d8d48 ; ret 0x21
0xffffff80003c72e6 : and eax, 0xd889fffd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000540899 : and eax, 0xd889ffff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029dd94 : and eax, 0xde8948d0 ; call r15
0xffffff8000780aa8 : and eax, 0xe8c03100 ; call rsi
0xffffff8000760dc7 : and eax, 0xe9ffd8f8 ; ret
0xffffff80008aff79 : and eax, 0xea1c41e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c795b : and eax, 0xf ; pop rbp ; ret
0xffffff800062e207 : and eax, 0xf000000 ; ret 0xc35d
0xffffff800050d524 : and eax, 0xf0894400 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cd29f : and eax, 0xf6000001 ; ret 0x7534
0xffffff80005e6740 : and eax, 0xf8e80048 ; ret 0xffda
0xffffff80008f532c : and eax, 0xff480024 ; ret
0xffffff800059bcd3 : and eax, 0xffecba ; add byte ptr [rcx], ch ; ret 0x9103
0xffffff80004b3b55 : and eax, 0xfff7ffff ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff80006b4600 : and eax, 0xfffff ; pop rbp ; ret
0xffffff800084f55c : and eax, 0xfffff000 ; pop rbp ; ret
0xffffff8000846aae : and eax, 0xfffffff0 ; pop rbp ; ret
0xffffff80002c0ab5 : and eax, 0xfffffff7 ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff8000895d67 : and eax, 0xfffffff8 ; or eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff8000528ea4 : and eax, 1 ; add eax, 3 ; pop rbp ; ret
0xffffff800037c5fe : and eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000767800 : and eax, 1 ; mov dword ptr [rdi + 4], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800029aa8c : and eax, 1 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000781d4d : and eax, 1 ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f7be7 : and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002bbeca : and eax, 1 ; or eax, ecx ; xor eax, 1 ; pop rbp ; ret
0xffffff8000269671 : and eax, 1 ; pop rbp ; ret
0xffffff800062282b : and eax, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000388839 : and eax, 2 ; or eax, ecx ; pop rbp ; ret
0xffffff80004f9117 : and eax, 2 ; pop rbp ; ret
0xffffff80002bac8d : and eax, 7 ; pop rbp ; ret
0xffffff8000392962 : and eax, 8 ; mov qword ptr [rdx], rax ; leave ; ret
0xffffff8000367578 : and eax, 8 ; pop rbp ; ret
0xffffff800088d840 : and eax, 8 ; sete al ; pop rbp ; ret
0xffffff800040edf2 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xffffff800040ee6f
0xffffff80007a8dfb : and eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xffffff80007a8dc8
0xffffff800028fa1c : and eax, dword ptr [rax] ; pop rbp ; ret
0xffffff800030bcb9 : and eax, dword ptr [rax] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008a8454 : and eax, dword ptr [rax] ; xor esi, esi ; xor edx, edx ; call 0xffffff80002a46d8
0xffffff80004ab02b : and eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004fa760 : and eax, dword ptr [rcx + 0x70] ; pop rbp ; ret
0xffffff800073f7e9 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000299923 : and eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000584f17 : and eax, dword ptr [rcx] ; or eax, edx ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80006949ec : and eax, dword ptr [rcx] ; ror byte ptr [rbp - 0x3cd67ffc], 0xff ; ret
0xffffff8000563bb0 : and eax, dword ptr [rdi + 0x168] ; pop rbp ; ret
0xffffff800079db69 : and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80004b3b99 : and eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80004f9139 : and eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80004f9359 : and eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff800030fd4d : and eax, dword ptr [rip + 0x7ecd21] ; pop rbp ; ret
0xffffff8000395275 : and eax, dword ptr [rsi + rdx*4] ; pop rbp ; ret
0xffffff8000505702 : and eax, eax ; mov dword ptr [r9 + 0x20], r8d ; pop rbp ; ret
0xffffff8000716fbf : and eax, ecx ; pop rbp ; ret
0xffffff80007fe36b : and eax, ecx ; test eax, 0x58948ff ; ret 0x2e5d
0xffffff80002d5c38 : and eax, edi ; lea rax, [rcx + rax*4] ; pop rbp ; ret
0xffffff80004a0170 : and eax, edx ; mov dword ptr [rdi], r8d ; add eax, esi ; pop rbp ; ret
0xffffff800080e05a : and eax, esi ; cmp eax, esi ; sete al ; pop rbp ; ret
0xffffff800082bafb : and eax, esi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0xffffff8000810d7b : and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff800062ef22 : and ebp, ebx ; jns 0xffffff800062ef21 ; addps xmm0, xmm0 ; pop rbp ; ret
0xffffff800030fd4f : and ebp, ecx ; jle 0xffffff800030fd58 ; pop rbp ; ret
0xffffff8000271e8c : and ebx, dword ptr [rdi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004e4df5 : and ebx, dword ptr [rdi] ; mov rdi, r14 ; call rax
0xffffff80005e0d3d : and ebx, ebx ; inc dword ptr [rcx + 0xf] ; mov dh, 0x86 ; ret
0xffffff80006e0ebf : and ebx, ecx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002b95d9 : and ebx, edi ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008dfd7f : and ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800063521b : and ebx, esp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000797173 : and ecx, 0x1ff ; mov eax, ecx ; pop rbp ; ret
0xffffff80007b043f : and ecx, 0x80 ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff800065c397 : and ecx, 0xfffffff0 ; add eax, ecx ; pop rbp ; ret
0xffffff8000327520 : and ecx, 0xfffffffe ; mov rax, rcx ; pop rbp ; ret
0xffffff80002d37b6 : and ecx, 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff80002bacba : and ecx, 7 ; cmovne eax, edx ; pop rbp ; ret
0xffffff8000399260 : and ecx, 7 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0xffffff800090a928 : and ecx, 7 ; sub rax, r9 ; ret
0xffffff8000b45fb6 : and ecx, dword ptr [rax + 0x21] ; fmul dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80004fd1bd : and ecx, dword ptr [rax - 0x77] ; ret
0xffffff80003b4228 : and ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000569cd8 : and ecx, dword ptr [rax - 1] ; ret 0x3948
0xffffff800078aaf1 : and ecx, dword ptr [rbx + 0x11093] ; add dh, dh ; ret 0xf01
0xffffff8000b471cd : and ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80006c2667 : and ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800063265d : and ecx, dword ptr [rdi] ; pop rbp ; ret
0xffffff80006325cd : and ecx, dword ptr [rdi] ; ret
0xffffff800063265c : and ecx, dword ptr fs:[rdi] ; pop rbp ; ret
0xffffff80007d011f : and ecx, eax ; mov dword ptr [rdi + 4], ecx ; pop rbp ; ret
0xffffff80006a65cb : and ecx, ebp ; ret 0x83ff
0xffffff8000641900 : and ecx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080dfb2 : and ecx, edi ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfb9 ; pop rbp ; ret
0xffffff8000785199 : and ecx, edx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003d3d4f : and edi, 0x10 ; or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff80007972e5 : and edi, 0x1f ; mov dword ptr [rsi], edi ; xor eax, eax ; pop rbp ; ret
0xffffff80004d26b4 : and edi, 0xf ; mov eax, edi ; pop rbp ; ret
0xffffff800084c6a3 : and edi, 0xf ; mov r12, r8 ; call rax
0xffffff800084c952 : and edi, 0xf ; mov rbx, r8 ; call qword ptr [rbx]
0xffffff800025eeae : and edi, 0xfffff000 ; mov eax, edi ; pop rbp ; ret
0xffffff800049e494 : and edi, 0xffffff ; mov eax, edi ; pop rbp ; ret
0xffffff80007ab074 : and edi, 0xffffff ; xor esi, esi ; call rax
0xffffff80007ab52c : and edi, 0xffffff ; xor esi, esi ; call rcx
0xffffff8000858436 : and edi, 0xfffffff8 ; mov edx, eax ; jmp 0xffffff8000858448
0xffffff800076cf84 : and edi, dword ptr [rax + rax] ; call 0xffffff8000392a46
0xffffff800076cf6e : and edi, dword ptr [rax + rax] ; call 0xffffff8000393046
0xffffff800039313a : and edi, dword ptr [rax] ; leave ; ret
0xffffff80006bbb49 : and edi, dword ptr [rbp - 0x76b70043] ; ret
0xffffff80007dbc69 : and edi, eax ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007c273f : and edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000528e14 : and edi, edi ; ret
0xffffff80005667f9 : and edi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007d26e5 : and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070e0c5 : and edi, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c40af : and edx, 0xffffffff ; pop rbp ; ret
0xffffff800080c86e : and edx, 7 ; cmp edx, 5 ; je 0xffffff800080c83f ; jmp 0xffffff800080c859
0xffffff80008e696f : and edx, dword ptr [rax + rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80002aedf9 : and edx, dword ptr [rax] ; call 0xffffff80002c8899
0xffffff80007ae3f6 : and edx, eax ; mov byte ptr [rdi + rcx], dl ; pop rbp ; ret
0xffffff80003abdca : and edx, ebx ; call rax
0xffffff8000294db9 : and edx, esi ; ltr word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800063bb19 : and esi, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000257e1c : and esi, 0x3f ; lea rax, [rcx + rsi*8] ; pop rbp ; ret
0xffffff800032759f : and esi, 0xfffffffe ; mov rax, rsi ; pop rbp ; ret
0xffffff800071d34d : and esi, 1 ; add esi, eax ; movzx eax, si ; pop rbp ; ret
0xffffff80003ba534 : and esi, 1 ; mov eax, esi ; pop rbp ; ret
0xffffff80002601fd : and esi, 3 ; cmp edx, esi ; setl dl ; jmp 0xffffff800026022b
0xffffff80002ea436 : and esi, dword ptr [rax + rax + 0x5d] ; ret
0xffffff800078b39e : and esi, dword ptr [rcx + rax*4] ; mov eax, esi ; pop rbp ; ret
0xffffff8000837719 : and esi, dword ptr [rdi - 0x76b70001] ; ret
0xffffff80007c2219 : and esi, dword ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800081baa9 : and esi, dword ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000657a92 : and esi, dword ptr [rip - 0x173fcf00] ; adc al, 0x67 ; ret
0xffffff800090a80c : and esi, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ff39c : and esi, eax ; mov rax, rsi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800031f1e3 : and esi, edi ; mov rax, rsi ; pop rbp ; ret
0xffffff8000813dd1 : and esi, edx ; or esi, ecx ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff80006d4f41 : and esi, esi ; ret 0x7502
0xffffff80002c88f9 : and esp, dword ptr [rax - 0x74b7fff4] ; add ecx, dword ptr [rax + 0x39] ; ret
0xffffff800073999f : and esp, dword ptr [rsi - 0x3f] ; ret
0xffffff8000760a19 : and esp, dword ptr [rsi] ; ret
0xffffff8000661d8b : and esp, eax ; ret 0x66ff
0xffffff800034bfd9 : and esp, esi ; inc dword ptr [rcx - 0x75] ; cmp al, 0xe9 ; ret 1
0xffffff8000b4b14c : and qword ptr [rax], rax ; mov dword ptr [rax - 1], ecx ; ret 0x848d
0xffffff8000b3c8a2 : and qword ptr [rcx - 0x77], rax ; ret 0x8141
0xffffff80004fa167 : and r8, 1 ; pop rbp ; ret
0xffffff8000505701 : and r8d, eax ; mov dword ptr [r9 + 0x20], r8d ; pop rbp ; ret
0xffffff80004a016f : and r8d, edx ; mov dword ptr [rdi], r8d ; add eax, esi ; pop rbp ; ret
0xffffff800090a927 : and r9, 7 ; sub rax, r9 ; ret
0xffffff800055249d : and r9b, bpl ; ret 2
0xffffff80005aa100 : and r9b, bpl ; ret 4
0xffffff80005e4c56 : and r9b, byte ptr [r8 - 1] ; ret
0xffffff80005e4c5e : and r9b, byte ptr [rax + 0x39] ; ret
0xffffff80004f9057 : and rax, 0x17fff5ff ; pop rbp ; ret
0xffffff80005655f1 : and rax, 0x415bffd3 ; pop rsi ; pop rbp ; ret
0xffffff80007f060a : and rax, 0x800000 ; pop rbp ; ret
0xffffff80007539d0 : and rax, 0xffffffff89480000 ; ret
0xffffff80006dd5a0 : and rax, 0xffffffff8948002e ; ret
0xffffff800084f55b : and rax, 0xfffffffffffff000 ; pop rbp ; ret
0xffffff80004fa0d6 : and rax, 1 ; pop rbp ; ret
0xffffff8000716fbe : and rax, rcx ; pop rbp ; ret
0xffffff800082bafa : and rax, rsi ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0xffffff800032751f : and rcx, 0xfffffffffffffffe ; mov rax, rcx ; pop rbp ; ret
0xffffff800032759e : and rsi, 0xfffffffffffffffe ; mov rax, rsi ; pop rbp ; ret
0xffffff800031f1e2 : and rsi, rdi ; mov rax, rsi ; pop rbp ; ret
0xffffff80004a23fe : and word ptr [rdi + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff8000807d3e : and word ptr [rdx + rcx*8 + 0x18], 0xfffa ; pop rbp ; ret
0xffffff8000803571 : and word ptr [rdx + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff80002ad007 : bnd call 0xffffff8000299028 ; call 0xffffff8000399242
0xffffff80002d5fb0 : bnd jbe 0xffffff80002d5f87 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006087e1 : bnd jg 0xffffff80006087d4 ; pop rbp ; ret
0xffffff8000451f00 : bnd jle 0xffffff8000451ef7 ; movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff8000622785 : bnd jns 0xffffff8000622777 ; mov dword ptr [rdi + 0x64], esi ; pop rbp ; ret
0xffffff80003952ad : bsf eax, eax ; or eax, ecx ; pop rbp ; ret
0xffffff80003952ca : bsf eax, edi ; inc eax ; pop rbp ; ret
0xffffff8000726865 : bsr eax, edx ; jmp 0xffffff800072688d
0xffffff8000726bb5 : bsr eax, edx ; jmp 0xffffff8000726be3
0xffffff8000726864 : bsr rax, rdx ; jmp 0xffffff800072688e
0xffffff8000726bb4 : bsr rax, rdx ; jmp 0xffffff8000726be4
0xffffff80006d648c : bswap eax ; adc eax, 0 ; pop rbp ; ret
0xffffff8000604f30 : bswap eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000584f90 : bswap eax ; inc eax ; bswap eax ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80006d86b8 : bswap eax ; mov dword ptr [rdi + 0x4c], eax ; pop rbp ; ret
0xffffff8000584f80 : bswap eax ; mov dword ptr [rdi + 4], eax ; pop rbp ; ret
0xffffff8000584f66 : bswap eax ; mov dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff8000584f94 : bswap eax ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000520291 : bswap eax ; pop rbp ; ret
0xffffff800059b91a : bswap ecx ; mov dword ptr [rsi + 4], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800065f04d : bswap edi ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff80008970a9 : bswap edx ; mov dword ptr [rdi + rcx], edx ; mov al, 1 ; pop rbp ; ret
0xffffff80008989a4 : bswap edx ; mov qword ptr [r8 + rcx], rdx ; mov al, 1 ; pop rbp ; ret
0xffffff80006d6404 : bswap esi ; mov dword ptr [rdi + 0x70], esi ; pop rbp ; ret
0xffffff800089bacf : bswap esi ; mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff80006d86b7 : bswap rax ; mov dword ptr [rdi + 0x4c], eax ; pop rbp ; ret
0xffffff80004ed6a2 : bt eax, ecx ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80002a62b8 : bt ecx, eax ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80003e71cf : bt ecx, edi ; jb 0xffffff80003e71de ; xor eax, eax ; pop rbp ; ret
0xffffff80003e721f : bt ecx, edi ; jb 0xffffff80003e722e ; xor eax, eax ; pop rbp ; ret
0xffffff8000252816 : bt edi, 1 ; mov edi, ecx ; jae 0xffffff8000252819 ; pop rbp ; ret
0xffffff800064de1a : bt edx, ecx ; jb 0xffffff800064de8f ; jmp 0xffffff800064de8a
0xffffff800078ca2d : bt edx, ecx ; jb 0xffffff800078ca3c ; xor eax, eax ; pop rbp ; ret
0xffffff80003e71ce : bt rcx, rdi ; jb 0xffffff80003e71df ; xor eax, eax ; pop rbp ; ret
0xffffff80003e721e : bt rcx, rdi ; jb 0xffffff80003e722f ; xor eax, eax ; pop rbp ; ret
0xffffff8000388140 : bts dword ptr [rax], edi ; jb 0xffffff8000388140 ; pop rbp ; ret
0xffffff80006dd4a6 : call 0xffffff7f815757f9
0xffffff80006dd4a5 : call 0xffffff7f815757fa
0xffffff80007ec46f : call 0xffffff7f82414d79
0xffffff80007ec3e5 : call 0xffffff7f83c7c3ef
0xffffff8000332c82 : call 0xffffff7f83f5b58c
0xffffff80003ea237 : call 0xffffff7f84012b47
0xffffff800047407e : call 0xffffff7f8409d495
0xffffff8000852e08 : call 0xffffff7f8885572e
0xffffff800029aa8b : call 0xffffff7f892b8b1a
0xffffff8000328417 : call 0xffffff7f897b4780
0xffffff8000458305 : call 0xffffff7f898e8304
0xffffff80007f57be : call 0xffffff7f89c757f9
0xffffff80007d7935 : call 0xffffff7f89ca3bc5
0xffffff800083280f : call 0xffffff7f89cb2838
0xffffff800083282f : call 0xffffff7f89cb2858
0xffffff800089b8af : call 0xffffff7f89d1b8d2
0xffffff800089b8cf : call 0xffffff7f89d1b8f2
0xffffff800089b8ce : call 0xffffff7f89d1b8f3
0xffffff80004296b7 : call 0xffffff7f8a04fa07
0xffffff8000582b3b : call 0xffffff7f8da02b86
0xffffff8000473663 : call 0xffffff7f8e097b7a
0xffffff80002bbbbf : call 0xffffff7fb63b7d53
0xffffff800083c5cf : call 0xffffff7fc139d4ec
0xffffff8000b49e5a : call 0xffffff7fc177266a
0xffffff80002bb88b : call 0xffffff7fc1ee4197
0xffffff80002d6f03 : call 0xffffff7fc231fa55
0xffffff800070412c : call 0xffffff7fc2b5ca9b
0xffffff80007c1420 : call 0xffffff7fc2b5ec52
0xffffff800059c428 : call 0xffffff7fc2e3bc5a
0xffffff800038ee27 : call 0xffffff7fc365797c
0xffffff8000395107 : call 0xffffff7fc3971141
0xffffff800050c311 : call 0xffffff7fc3b40c19
0xffffff800050c310 : call 0xffffff7fc3b40c1a
0xffffff8000796a16 : call 0xffffff7fc3bd7967
0xffffff8000796a15 : call 0xffffff7fc3bd7968
0xffffff80003b2bd7 : call 0xffffff7fc3c458cb
0xffffff80003ea7c5 : call 0xffffff7fc3c8a7cd
0xffffff800041cb0d : call 0xffffff7fc3cbcaf9
0xffffff8000443cdf : call 0xffffff7fc3ce3ce7
0xffffff8000452264 : call 0xffffff7fc3ce6b6c
0xffffff8000457601 : call 0xffffff7fc3cebf09
0xffffff800045766a : call 0xffffff7fc3cebf72
0xffffff80004576d3 : call 0xffffff7fc3cebfdb
0xffffff800045829a : call 0xffffff7fc3cf8296
0xffffff800045a487 : call 0xffffff7fc3cfa48e
0xffffff80004bf328 : call 0xffffff7fc3d53c30
0xffffff80002bb331 : call 0xffffff7fc3e4fb3c
0xffffff80002c0117 : call 0xffffff7fc3e54922
0xffffff80002caf08 : call 0xffffff7fc3e6f713
0xffffff800064f7cf : call 0xffffff7fc3e8f783
0xffffff8000303902 : call 0xffffff7fc3e9810d
0xffffff800030f876 : call 0xffffff7fc3eb4081
0xffffff80003c112b : call 0xffffff7fc3f65936
0xffffff800075fc83 : call 0xffffff7fc3fffc8b
0xffffff800079e3f6 : call 0xffffff7fc403e3fd
0xffffff80005cefba : call 0xffffff7fc41637c5
0xffffff80008f1d6e : call 0xffffff7fc4186676
0xffffff80008f19cd : call 0xffffff7fc41919d5
0xffffff80006bb14f : call 0xffffff7fc424f95a
0xffffff80006bc61d : call 0xffffff7fc4250e28
0xffffff800074a783 : call 0xffffff7fc42cf08e
0xffffff800074bca9 : call 0xffffff7fc42e04b4
0xffffff800074bd59 : call 0xffffff7fc42e0564
0xffffff80007bf6e4 : call 0xffffff7fc4343fef
0xffffff800083583a : call 0xffffff7fc482118c
0xffffff8000835972 : call 0xffffff7fc48212c4
0xffffff80003735a3 : call 0xffffff7fcbc079ce
0xffffff8000394e18 : call 0xffffff7fd4394e19
0xffffff80005f4e20 : call 0xffffff7fd45f4e27
0xffffff80004ec274 : call 0xffffff7fd84ec275
0xffffff80006f0377 : call 0xffffff7fe1310767
0xffffff80003b184c : call 0xffffff7fe23b1852
0xffffff80003b184c : call 0xffffff7fe23b1856
0xffffff8000b4a310 : call 0xffffff7fe33665a0
0xffffff8000322821 : call 0xffffff7fe4c7b334
0xffffff800060326d : call 0xffffff7fe87a3277
0xffffff800062fc24 : call 0xffffff7fe8944040
0xffffff8000578ff9 : call 0xffffff7fe8ec9003
0xffffff8000578ff8 : call 0xffffff7fe8ec9004
0xffffff80004e4cc5 : call 0xffffff7fe910d615
0xffffff800089ef13 : call 0xffffff7fe94d7266
0xffffff80008fe85a : call 0xffffff7fe977994e
0xffffff8000703ff5 : call 0xffffff7fea1e3fff
0xffffff8000289b93 : call 0xffffff7feae9e3de
0xffffff800059a181 : call 0xffffff7feb1b6411
0xffffff800058e5dc : call 0xffffff7feb593f1f
0xffffff8000854cd5 : call 0xffffff7fec654ce3
0xffffff80006f3ef9 : call 0xffffff7fef4e3f03
0xffffff80007d89bd : call 0xffffff7ff8e227b1
0xffffff8000299354 : call 0xffffff7ffaeadba0
0xffffff8000839193 : call 0xffffff7ffb44d9df
0xffffff8000514a9c : call 0xffffff7ffc1292e8
0xffffff800047707b : call 0xffffff7ffd3ff64d
0xffffff80002b1290 : call 0xffffff7ffe563d84
0xffffff8000836371 : call 0xffffff7fff76637b
0xffffff80005118b2 : call 0xffffff7fffda65bd
0xffffff80004e6416 : call 0xffffff800010e053
0xffffff80005724eb : call 0xffffff800010e056
0xffffff8000273273 : call 0xffffff800010e057
0xffffff80005af451 : call 0xffffff800010e058
0xffffff800057c4ed : call 0xffffff800010e059
0xffffff8000401e56 : call 0xffffff800010e082
0xffffff80004df9a7 : call 0xffffff800010e083
0xffffff80003d3bf2 : call 0xffffff800010e086
0xffffff800038a4a2 : call 0xffffff800010e087
0xffffff800069a375 : call 0xffffff800010e088
0xffffff80005353e1 : call 0xffffff800010e089
0xffffff8000571e55 : call 0xffffff800010e0d2
0xffffff80004e642d : call 0xffffff800010e0d3
0xffffff8000516350 : call 0xffffff800010e0d7
0xffffff800050a0c2 : call 0xffffff800010e0d8
0xffffff8000b3a1bf : call 0xffffff800010e0d9
0xffffff8000421e96 : call 0xffffff800010e142
0xffffff80004df7cc : call 0xffffff800010e143
0xffffff8000601bda : call 0xffffff800010e146
0xffffff8000535760 : call 0xffffff800010e147
0xffffff80002ff531 : call 0xffffff800010e148
0xffffff80005e1141 : call 0xffffff800010e149
0xffffff8000352732 : call 0xffffff800010e627
0xffffff80003523d6 : call 0xffffff800010e692
0xffffff8000510ba7 : call 0xffffff80001253ef
0xffffff80002552d0 : call 0xffffff80002551a7
0xffffff800027c7d5 : call 0xffffff80002689e2
0xffffff800027945e : call 0xffffff8000268b49
0xffffff8000271bcd : call 0xffffff800026de92
0xffffff8000272d7a : call 0xffffff8000272f47
0xffffff80002873f6 : call 0xffffff8000273807
0xffffff800026b2cc : call 0xffffff80002775b2
0xffffff80002ed678 : call 0xffffff80002779e7
0xffffff8000558d7a : call 0xffffff8000289086
0xffffff80005fdc20 : call 0xffffff8000289089
0xffffff800030a357 : call 0xffffff8000289f16
0xffffff8000251eaf : call 0xffffff800028e152
0xffffff800066241f : call 0xffffff800028e153
0xffffff80002cd254 : call 0xffffff800028e154
0xffffff800025c35d : call 0xffffff800028e156
0xffffff80002c43a5 : call 0xffffff800028e157
0xffffff80002cd49d : call 0xffffff800028e158
0xffffff80002d2b17 : call 0xffffff800028e159
0xffffff80002c1f4c : call 0xffffff800028e1b2
0xffffff800065e257 : call 0xffffff800028e1b3
0xffffff8000279e0e : call 0xffffff800028e1b6
0xffffff8000298007 : call 0xffffff800028e1b7
0xffffff800026d669 : call 0xffffff800028e1b8
0xffffff800054c07b : call 0xffffff800028e1b9
0xffffff8000552260 : call 0xffffff800028e4a2
0xffffff800065e4ac : call 0xffffff800028e4a3
0xffffff80005d2862 : call 0xffffff800028e4a7
0xffffff80006486a0 : call 0xffffff800028e4a8
0xffffff8000276a84 : call 0xffffff8000292d72
0xffffff8000276944 : call 0xffffff8000292d77
0xffffff80008cb629 : call 0xffffff8000297872
0xffffff800051b8ae : call 0xffffff8000297b42
0xffffff800066f558 : call 0xffffff8000297b43
0xffffff80008f0c9e : call 0xffffff8000297b46
0xffffff800049e1e1 : call 0xffffff8000297b47
0xffffff80004c6c21 : call 0xffffff8000297b48
0xffffff80008322a1 : call 0xffffff8000297b49
0xffffff800037adfa : call 0xffffff8000298d38
0xffffff80002ace08 : call 0xffffff8000299022
0xffffff80002acf08 : call 0xffffff8000299027
0xffffff80002c005e : call 0xffffff80002991f8
0xffffff8000299f99 : call 0xffffff800029a827
0xffffff80006783d8 : call 0xffffff800029aac3
0xffffff800063a039 : call 0xffffff800029aac8
0xffffff80006783ee : call 0xffffff800029ab93
0xffffff8000700cd9 : call 0xffffff800029ab98
0xffffff80002fe91f : call 0xffffff800029ac12
0xffffff80007c3e41 : call 0xffffff800029ad69
0xffffff800059ecbb : call 0xffffff800029afa2
0xffffff80006783fa : call 0xffffff800029afa3
0xffffff800032fa95 : call 0xffffff800029bce2
0xffffff80002f83f4 : call 0xffffff800029bce7
0xffffff800028e26e : call 0xffffff800029d4b8
0xffffff80004225cb : call 0xffffff800029e852
0xffffff80006723a9 : call 0xffffff800029e853
0xffffff80005022a4 : call 0xffffff800029e856
0xffffff80004a81ce : call 0xffffff800029e857
0xffffff80005be409 : call 0xffffff800029e858
0xffffff800026919d : call 0xffffff800029e859
0xffffff800028eb22 : call 0xffffff800029eaf7
0xffffff80003a6058 : call 0xffffff800029eaf9
0xffffff80002cc05d : call 0xffffff80002a2867
0xffffff80003983fa : call 0xffffff80002a46d2
0xffffff800042038e : call 0xffffff80002a46d6
0xffffff80004e163d : call 0xffffff80002a46d7
0xffffff8000337cf2 : call 0xffffff80002a46d8
0xffffff80002a0ef3 : call 0xffffff80002b3f27
0xffffff800079943e : call 0xffffff80002b5742
0xffffff80007f987d : call 0xffffff80002b5b62
0xffffff80007fb908 : call 0xffffff80002b8059
0xffffff80002b94c1 : call 0xffffff80002bcde7
0xffffff80002afc4c : call 0xffffff80002be747
0xffffff80002f4349 : call 0xffffff80002be748
0xffffff8000482d89 : call 0xffffff80002bf062
0xffffff80006a24a3 : call 0xffffff80002c36c3
0xffffff8000696509 : call 0xffffff80002c53a3
0xffffff80002aedfb : call 0xffffff80002c8897
0xffffff80002ae1ff : call 0xffffff80002ca337
0xffffff80002cfe53 : call 0xffffff80002cb5d7
0xffffff80005115ae : call 0xffffff80002cd852
0xffffff80006a44a0 : call 0xffffff80002d3cb3
0xffffff80004a331a : call 0xffffff80002d3cb8
0xffffff8000298ce2 : call 0xffffff80002d4ef2
0xffffff80006a5890 : call 0xffffff80002d4ef3
0xffffff8000818dcb : call 0xffffff80002d4ef9
0xffffff800025c6c5 : call 0xffffff80002d8922
0xffffff80006abce6 : call 0xffffff80002d8923
0xffffff80002ea811 : call 0xffffff80002ea957
0xffffff80007fed64 : call 0xffffff80002eacf8
0xffffff80007fed72 : call 0xffffff80002eae47
0xffffff80004bf91a : call 0xffffff8000308427
0xffffff80006e12bb : call 0xffffff800030de43
0xffffff80002fbfad : call 0xffffff800030e648
0xffffff80006e166e : call 0xffffff800030f493
0xffffff80005021c1 : call 0xffffff800030f496
0xffffff800074b2d7 : call 0xffffff800030f497
0xffffff80008ba247 : call 0xffffff8000315287
0xffffff80003592f5 : call 0xffffff8000315572
0xffffff8000318ac1 : call 0xffffff8000326af8
0xffffff800033d09e : call 0xffffff8000328ff6
0xffffff8000300ef2 : call 0xffffff80003291e8
0xffffff80004bc9f6 : call 0xffffff8000338c62
0xffffff80004be0a9 : call 0xffffff8000338c67
0xffffff80008a2078 : call 0xffffff80003400e7
0xffffff800030dcb5 : call 0xffffff80003498b7
0xffffff800030f028 : call 0xffffff800034a297
0xffffff8000377bd5 : call 0xffffff800034a298
0xffffff80003504c4 : call 0xffffff800034ab66
0xffffff80002f7523 : call 0xffffff800034faf7
0xffffff80003686e5 : call 0xffffff8000369546
0xffffff800036a369 : call 0xffffff800036aa47
0xffffff80003bba9e : call 0xffffff800036b467
0xffffff80006b48f2 : call 0xffffff8000370bc2
0xffffff8000742594 : call 0xffffff8000370bc3
0xffffff80007487a5 : call 0xffffff8000370e83
0xffffff800076553b : call 0xffffff8000379e83
0xffffff80003951a4 : call 0xffffff8000381402
0xffffff8000388892 : call 0xffffff8000384b42
0xffffff800032cb30 : call 0xffffff8000384b47
0xffffff8000339681 : call 0xffffff80003858e2
0xffffff8000393f84 : call 0xffffff800038b1e6
0xffffff8000794c34 : call 0xffffff800038c199
0xffffff8000762cd2 : call 0xffffff80003922f3
0xffffff80003a5372 : call 0xffffff80003922f7
0xffffff8000376e8a : call 0xffffff80003922f8
0xffffff8000286109 : call 0xffffff80003923e2
0xffffff8000762e2c : call 0xffffff80003923e3
0xffffff8000272e94 : call 0xffffff80003923e7
0xffffff800055620e : call 0xffffff80003924d2
0xffffff8000764681 : call 0xffffff80003924d3
0xffffff8000737910 : call 0xffffff80003924d6
0xffffff800031f6f0 : call 0xffffff80003924d7
0xffffff80005c41b9 : call 0xffffff80003924d8
0xffffff80008b8fe4 : call 0xffffff80003924d9
0xffffff80003063a4 : call 0xffffff8000392602
0xffffff8000767a1e : call 0xffffff8000392603
0xffffff8000341cfb : call 0xffffff8000392606
0xffffff800031ad66 : call 0xffffff8000392607
0xffffff80005163b1 : call 0xffffff8000392672
0xffffff80003164ba : call 0xffffff8000392792
0xffffff80007646cf : call 0xffffff8000392793
0xffffff8000302131 : call 0xffffff8000392796
0xffffff8000563b15 : call 0xffffff8000392797
0xffffff8000529795 : call 0xffffff8000392798
0xffffff800032d692 : call 0xffffff8000392799
0xffffff8000526692 : call 0xffffff80003928a2
0xffffff8000767cd0 : call 0xffffff80003928a3
0xffffff80005b6b19 : call 0xffffff80003928a6
0xffffff80005cff49 : call 0xffffff80003928a7
0xffffff80005506d9 : call 0xffffff80003928a8
0xffffff80004896b8 : call 0xffffff80003928a9
0xffffff80002fde1a : call 0xffffff8000392928
0xffffff80002d667c : call 0xffffff8000392932
0xffffff800076d18f : call 0xffffff8000392933
0xffffff80003330fb : call 0xffffff8000392939
0xffffff8000256806 : call 0xffffff8000392a42
0xffffff8000762d36 : call 0xffffff8000392a43
0xffffff800025ed63 : call 0xffffff8000392a46
0xffffff800040fb74 : call 0xffffff8000392a47
0xffffff80004cade6 : call 0xffffff8000392a48
0xffffff8000817dae : call 0xffffff8000392a49
0xffffff80002d6d49 : call 0xffffff8000393042
0xffffff80007630bb : call 0xffffff8000393043
0xffffff800028be98 : call 0xffffff8000393046
0xffffff800040ed36 : call 0xffffff8000393047
0xffffff80006127c9 : call 0xffffff8000393048
0xffffff8000489733 : call 0xffffff8000393049
0xffffff800027721a : call 0xffffff8000393482
0xffffff80004bc479 : call 0xffffff8000393487
0xffffff8000348c23 : call 0xffffff8000394ef2
0xffffff800033a63b : call 0xffffff8000396862
0xffffff80005ba8b1 : call 0xffffff8000396b82
0xffffff8000766da7 : call 0xffffff8000396b83
0xffffff80007e303c : call 0xffffff8000396b86
0xffffff800028af84 : call 0xffffff8000397202
0xffffff8000773d77 : call 0xffffff8000397203
0xffffff80002884a1 : call 0xffffff8000397206
0xffffff800076882e : call 0xffffff8000398563
0xffffff80004c6159 : call 0xffffff8000398568
0xffffff800068c385 : call 0xffffff80003985e2
0xffffff80007437f4 : call 0xffffff80003985e6
0xffffff80002ed2d9 : call 0xffffff80003985e7
0xffffff800068c385 : call 0xffffff80003985e8
0xffffff8000793fd7 : call 0xffffff80003985e9
0xffffff800076b582 : call 0xffffff80003986f3
0xffffff80007760c4 : call 0xffffff80003987d3
0xffffff800045ff51 : call 0xffffff80003987d7
0xffffff800030d37d : call 0xffffff8000398877
0xffffff80002ad00d : call 0xffffff800039923c
0xffffff800077251c : call 0xffffff800039923d
0xffffff800085a1a9 : call 0xffffff8000399468
0xffffff800085a1a9 : call 0xffffff8000399469
0xffffff80002ad5c4 : call 0xffffff80003998c2
0xffffff8000775762 : call 0xffffff80003998c3
0xffffff800028836a : call 0xffffff80003998c6
0xffffff80003a9b4d : call 0xffffff800039a3e7
0xffffff80002ae408 : call 0xffffff800039a702
0xffffff8000772ac7 : call 0xffffff800039a703
0xffffff80003a1dcd : call 0xffffff800039a708
0xffffff8000778298 : call 0xffffff800039cff3
0xffffff8000778f77 : call 0xffffff800039d363
0xffffff80003adbf0 : call 0xffffff80003a9ed2
0xffffff800025dc1d : call 0xffffff80003b60b8
0xffffff80003c7bf2 : call 0xffffff80003c81f8
0xffffff8000413bf5 : call 0xffffff80003dfee2
0xffffff800047c06c : call 0xffffff80004118a7
0xffffff8000476c7a : call 0xffffff8000422eb2
0xffffff8000423114 : call 0xffffff80004232e7
0xffffff8000419d85 : call 0xffffff8000445fb2
0xffffff80003cca1a : call 0xffffff8000448c52
0xffffff80003cca85 : call 0xffffff8000448d52
0xffffff80003cd1ea : call 0xffffff80004494a2
0xffffff80003eee0e : call 0xffffff800044b0a2
0xffffff8000839134 : call 0xffffff800044da7c
0xffffff80004a21fa : call 0xffffff80004886e8
0xffffff8000489967 : call 0xffffff8000495bc2
0xffffff800049a843 : call 0xffffff800049ae67
0xffffff800070f627 : call 0xffffff80004bb922
0xffffff80004b4446 : call 0xffffff80004c06f2
0xffffff800042b7cf : call 0xffffff80004c79e2
0xffffff80006dc949 : call 0xffffff80004cb3b7
0xffffff80004602cc : call 0xffffff80004cc562
0xffffff8000420b5e : call 0xffffff80004ccdd2
0xffffff8000710dc3 : call 0xffffff80004ccfd2
0xffffff80007f8577 : call 0xffffff80004cd167
0xffffff8000441922 : call 0xffffff80004cdbe2
0xffffff800050e031 : call 0xffffff80004cdfa6
0xffffff80008e3a74 : call 0xffffff80004efce2
0xffffff8000760dc6 : call 0xffffff80004f05f6
0xffffff80004ec83f : call 0xffffff80004f8a52
0xffffff80004cfe05 : call 0xffffff80004fc022
0xffffff80004cff2a : call 0xffffff80004fc1e2
0xffffff80006f02d9 : call 0xffffff80004fc582
0xffffff8000703e95 : call 0xffffff8000500122
0xffffff800042c0a8 : call 0xffffff8000508342
0xffffff80004c40cb : call 0xffffff8000510372
0xffffff800051c8ea : call 0xffffff800051e948
0xffffff800060cde3 : call 0xffffff8000529002
0xffffff800066d8d2 : call 0xffffff8000529b72
0xffffff8000604d6b : call 0xffffff8000529b76
0xffffff8000546b5d : call 0xffffff8000532e62
0xffffff80005359ed : call 0xffffff8000534857
0xffffff8000553dcb : call 0xffffff8000550042
0xffffff8000554dd4 : call 0xffffff8000551032
0xffffff800069a0da : call 0xffffff8000551038
0xffffff8000554e39 : call 0xffffff80005510f2
0xffffff80006aec2a : call 0xffffff80005510f6
0xffffff8000552ad9 : call 0xffffff80005510f8
0xffffff800056f875 : call 0xffffff800057bae2
0xffffff80005a4cc0 : call 0xffffff800057f146
0xffffff80005ac98b : call 0xffffff8000582b07
0xffffff8000597152 : call 0xffffff80005833e2
0xffffff80005c688c : call 0xffffff80005c2b72
0xffffff80005c9217 : call 0xffffff80005c5502
0xffffff80005c92bb : call 0xffffff80005c5503
0xffffff80005c1f99 : call 0xffffff80005c56e7
0xffffff80005cc6e5 : call 0xffffff80005cdfc7
0xffffff80005d3641 : call 0xffffff80005d2696
0xffffff80005d5401 : call 0xffffff80005d49e6
0xffffff80005d418c : call 0xffffff80005d4c76
0xffffff80005ea1b9 : call 0xffffff80005e4508
0xffffff80005d926f : call 0xffffff80005e5492
0xffffff8000642e72 : call 0xffffff8000642676
0xffffff800067a052 : call 0xffffff8000666262
0xffffff80006a1652 : call 0xffffff80006a2db8
0xffffff800066796b : call 0xffffff80006a74c6
0xffffff80006ad89a : call 0xffffff80006a9b82
0xffffff80006ab7aa : call 0xffffff80006a9b88
0xffffff80006a977a : call 0xffffff80006ac8a7
0xffffff80006ac66a : call 0xffffff80006ac8a8
0xffffff80006b8ccf : call 0xffffff80006b5b37
0xffffff800056b0c0 : call 0xffffff80006b73b2
0xffffff80006c3244 : call 0xffffff80006c4cc7
0xffffff80007054b4 : call 0xffffff80006d4a16
0xffffff80006e2c43 : call 0xffffff80006d4ad7
0xffffff8000708cda : call 0xffffff80006d4f72
0xffffff80006e7eaf : call 0xffffff80006e40c2
0xffffff80006e8831 : call 0xffffff8000704457
0xffffff80006e93e9 : call 0xffffff8000705652
0xffffff800070874b : call 0xffffff80007084c6
0xffffff80006dfeb8 : call 0xffffff800071c0f2
0xffffff80006ea421 : call 0xffffff8000726712
0xffffff800072550d : call 0xffffff8000726cf7
0xffffff8000737bbf : call 0xffffff80007379a7
0xffffff8000744289 : call 0xffffff8000744290
0xffffff80002be9b0 : call 0xffffff800074ac42
0xffffff800026ac0a : call 0xffffff800074ac46
0xffffff800033620a : call 0xffffff800074ac47
0xffffff8000368ad2 : call 0xffffff800074ac48
0xffffff8000748af3 : call 0xffffff800074b3a7
0xffffff8000556b65 : call 0xffffff8000752d72
0xffffff80003e776a : call 0xffffff8000752d78
0xffffff800088b03f : call 0xffffff8000757272
0xffffff800050c8b8 : call 0xffffff8000758b32
0xffffff80007dbc67 : call 0xffffff800075df77
0xffffff80004e2d74 : call 0xffffff800075f012
0xffffff80002883f6 : call 0xffffff8000761976
0xffffff80007a0813 : call 0xffffff80007633d7
0xffffff80007435f4 : call 0xffffff80007645c6
0xffffff80007660d4 : call 0xffffff8000765c77
0xffffff8000744789 : call 0xffffff800076b6f8
0xffffff800061d6c1 : call 0xffffff800077d248
0xffffff80005be714 : call 0xffffff800077dac7
0xffffff80007a76d3 : call 0xffffff800077ef56
0xffffff80007cdb55 : call 0xffffff8000789c77
0xffffff80007100bd : call 0xffffff800078c382
0xffffff800042066c : call 0xffffff800078c8c2
0xffffff8000447cab : call 0xffffff800078c8c9
0xffffff80004f0f8f : call 0xffffff800078d252
0xffffff8000790689 : call 0xffffff8000790287
0xffffff8000790749 : call 0xffffff8000790467
0xffffff80007b4594 : call 0xffffff80007907d2
0xffffff80007931c2 : call 0xffffff8000794608
0xffffff800065fafa : call 0xffffff800079cd57
0xffffff80007ad053 : call 0xffffff80007a0b37
0xffffff80007a5828 : call 0xffffff80007a0b87
0xffffff80007a6499 : call 0xffffff80007a9ae6
0xffffff80004731cb : call 0xffffff80007af412
0xffffff8000566a61 : call 0xffffff80007b2208
0xffffff800063fc81 : call 0xffffff80007b3d38
0xffffff80006a7ba5 : call 0xffffff80007b3e42
0xffffff80005d837f : call 0xffffff80007b4652
0xffffff80003f8833 : call 0xffffff80007b4a62
0xffffff80007d8f8a : call 0xffffff80007b51f2
0xffffff80007d96a6 : call 0xffffff80007b58b2
0xffffff8000549ad2 : call 0xffffff80007b5da2
0xffffff80005abcb9 : call 0xffffff80007b7ec2
0xffffff800059bdec : call 0xffffff80007b8022
0xffffff80005fbe4d : call 0xffffff80007b8122
0xffffff8000590b9d : call 0xffffff80007bce62
0xffffff8000636623 : call 0xffffff80007c28a2
0xffffff8000568961 : call 0xffffff80007c4bb2
0xffffff800044682c : call 0xffffff80007c4bb6
0xffffff8000634165 : call 0xffffff80007d0462
0xffffff80005f038d : call 0xffffff80007d0466
0xffffff8000769db1 : call 0xffffff80007d23b6
0xffffff80007c7b4e : call 0xffffff80007d3e22
0xffffff80007c5253 : call 0xffffff80007d3e27
0xffffff800044099c : call 0xffffff80007ecbf2
0xffffff80007420b2 : call 0xffffff80007fe352
0xffffff8000487088 : call 0xffffff80008032c2
0xffffff80007b0945 : call 0xffffff800080cbe2
0xffffff80004a0d63 : call 0xffffff800080cfb2
0xffffff8000501ef9 : call 0xffffff800080e1d2
0xffffff800081250b : call 0xffffff800080e762
0xffffff8000862f2c : call 0xffffff800080f1a2
0xffffff8000895179 : call 0xffffff80008113f2
0xffffff8000864065 : call 0xffffff8000811f68
0xffffff8000818974 : call 0xffffff8000817a2a
0xffffff80008189d0 : call 0xffffff8000817a86
0xffffff800081c609 : call 0xffffff8000818822
0xffffff80008299e5 : call 0xffffff8000818828
0xffffff800081ae4a : call 0xffffff8000838fb8
0xffffff800065288b : call 0xffffff8000845907
0xffffff80005a7903 : call 0xffffff8000845c37
0xffffff80003418d2 : call 0xffffff8000846518
0xffffff800030ab4d : call 0xffffff8000846db2
0xffffff800084a636 : call 0xffffff800084ad48
0xffffff8000848ca3 : call 0xffffff800084f346
0xffffff800084f4b1 : call 0xffffff800084f4bd
0xffffff800084f4b0 : call 0xffffff800084f4be
0xffffff80008ea84a : call 0xffffff8000856ad2
0xffffff80008b0f10 : call 0xffffff8000856ad6
0xffffff80008bbe47 : call 0xffffff8000857f56
0xffffff8000868d81 : call 0xffffff8000857f58
0xffffff80008dc647 : call 0xffffff8000858902
0xffffff800086c7b0 : call 0xffffff8000858a22
0xffffff8000887ffe : call 0xffffff8000864242
0xffffff8000864366 : call 0xffffff8000870642
0xffffff8000878776 : call 0xffffff80008749e2
0xffffff80008788e7 : call 0xffffff8000874b92
0xffffff8000878469 : call 0xffffff8000874b96
0xffffff8000884cbc : call 0xffffff80008c0f82
0xffffff8000815074 : call 0xffffff80008c12a2
0xffffff80008a93be : call 0xffffff80008d7bc9
0xffffff80008df27c : call 0xffffff80008deab6
0xffffff80008e3278 : call 0xffffff80008df532
0xffffff80002afe27 : call 0xffffff80008ec092
0xffffff8000376bc3 : call 0xffffff80008ec096
0xffffff80002f88b6 : call 0xffffff80008ec097
0xffffff80003518bd : call 0xffffff80008edb12
0xffffff80003b6339 : call 0xffffff80008edb16
0xffffff80003889a2 : call 0xffffff80008edb17
0xffffff80008f2ee7 : call 0xffffff80008ef1d2
0xffffff80008f2fae : call 0xffffff80008ef232
0xffffff80004e1cc3 : call 0xffffff80008fdf92
0xffffff80007e1ef3 : call 0xffffff80008fffd7
0xffffff80002883a6 : call 0xffffff800090a6e6
0xffffff80002564c8 : call 0xffffff8000a564d4
0xffffff80006da19f : call 0xffffff800463ed93
0xffffff80003a7491 : call 0xffffff80081af7a6
0xffffff8000491fe7 : call 0xffffff80090ba337
0xffffff8000307d60 : call 0xffffff8009110078
0xffffff800029f438 : call 0xffffff800da2b668
0xffffff80006de525 : call 0xffffff800f6de538
0xffffff800026022d : call 0xffffff800fe80a39
0xffffff80002e06f0 : call 0xffffff80122e06f3
0xffffff80006ec1aa : call 0xffffff80206ec1b5
0xffffff8000b406c7 : call 0xffffff8021b3c818
0xffffff80005ca7b8 : call 0xffffff80225ca7bd
0xffffff800059822b : call 0xffffff802a21b33c
0xffffff8000521d3d : call 0xffffff802a224e57
0xffffff800052208e : call 0xffffff802a2251a8
0xffffff80005224db : call 0xffffff802a2255f5
0xffffff8000526956 : call 0xffffff802a229a70
0xffffff80004e1a34 : call 0xffffff802b03f128
0xffffff800084521b : call 0xffffff80310bdb8f
0xffffff800084529c : call 0xffffff80310bdc10
0xffffff8000845308 : call 0xffffff80310bdc7c
0xffffff800035bcc3 : call 0xffffff803135bccf
0xffffff800035cf73 : call 0xffffff803135cf7f
0xffffff800057002f : call 0xffffff803159eb3d
0xffffff800086a564 : call 0xffffff80328647ab
0xffffff800043b6d7 : call 0xffffff803b53bacb
0xffffff80008e4a9b : call 0xffffff80418e4aa6
0xffffff8000b498b8 : call 0xffffff80427720c8
0xffffff8000717812 : call 0xffffff804633795e
0xffffff80002bcd78 : call 0xffffff80482bcd86
0xffffff8000778c43 : call 0xffffff8048778c4e
0xffffff800080f6bb : call 0xffffff804880f6c8
0xffffff80008710bb : call 0xffffff80488710c8
0xffffff80008715bb : call 0xffffff80488715c8
0xffffff8000871abb : call 0xffffff8048871ac8
0xffffff8000871fbb : call 0xffffff8048871fc8
0xffffff80008915bb : call 0xffffff80488915c8
0xffffff8000893cbb : call 0xffffff8048893cc8
0xffffff8000899abb : call 0xffffff8048899ac8
0xffffff800089c8bb : call 0xffffff804889c8c8
0xffffff80008a4abb : call 0xffffff80488a4ac8
0xffffff80008a4fbb : call 0xffffff80488a4fc8
0xffffff80008aedbb : call 0xffffff80488aedc8
0xffffff80008b26bb : call 0xffffff80488b26c8
0xffffff80008c33bb : call 0xffffff80488c33c8
0xffffff80008c4dbb : call 0xffffff80488c4dc8
0xffffff80008d21bb : call 0xffffff80488d21c8
0xffffff80002fec06 : call 0xffffff8048f2751a
0xffffff80002fece3 : call 0xffffff8048f275f7
0xffffff80005a242c : call 0xffffff80495a2435
0xffffff8000764f54 : call 0xffffff804976123b
0xffffff8000850821 : call 0xffffff804a47912c
0xffffff80007eb39c : call 0xffffff804d40ecf0
0xffffff80008570d5 : call 0xffffff804e4802ec
0xffffff80005f8876 : call 0xffffff8054ecc9a0
0xffffff80005f89c4 : call 0xffffff8054eccaee
0xffffff80005f8b12 : call 0xffffff8054eccc3c
0xffffff80008be3fc : call 0xffffff80758c07e5
0xffffff80003f4cf3 : call 0xffffff80762cd245
0xffffff80003f4cf2 : call 0xffffff80762cd246
0xffffff80003f4f53 : call 0xffffff80762cd4a5
0xffffff80003f4f52 : call 0xffffff80762cd4a6
0xffffff80006569ba : call 0xffffff807727a2e2
0xffffff8000845e8c : call qword ptr [r12 + 0x10]
0xffffff80007ed86a : call qword ptr [r12 + 0x50]
0xffffff8000489495 : call qword ptr [r15]
0xffffff800080a637 : call qword ptr [r8]
0xffffff800087600c : call qword ptr [r9 + 0x938]
0xffffff80003a8003 : call qword ptr [rax + 0x10]
0xffffff80008ce3c6 : call qword ptr [rax + 0x168]
0xffffff800080f6b9 : call qword ptr [rax + 0x1e8]
0xffffff800086c564 : call qword ptr [rax + 0x20]
0xffffff8000855dba : call qword ptr [rax + 0x28]
0xffffff800085263c : call qword ptr [rax + 0x2a0]
0xffffff8000811478 : call qword ptr [rax + 0x38]
0xffffff8000868f80 : call qword ptr [rax + 0x408]
0xffffff80008680c6 : call qword ptr [rax + 0x618]
0xffffff80008dee72 : call qword ptr [rax + 0x740]
0xffffff80008be4eb : call qword ptr [rax + 0x958]
0xffffff800039f0d2 : call qword ptr [rax + 8]
0xffffff800055e1ef : call qword ptr [rax - 0x11]
0xffffff80008d550f : call qword ptr [rax - 0x1c000002]
0xffffff800072d2aa : call qword ptr [rax - 0x1ee]
0xffffff80008403cb : call qword ptr [rax - 0x2c000010]
0xffffff80008ec817 : call qword ptr [rax - 0x2d000001]
0xffffff80006fb66a : call qword ptr [rax - 0x3c3]
0xffffff80006667ce : call qword ptr [rax - 0x523]
0xffffff80008ec813 : call qword ptr [rax - 0x6f000001]
0xffffff80006cb166 : call qword ptr [rax - 0x86]
0xffffff80005af2af : call qword ptr [rax]
0xffffff80008d54e7 : call qword ptr [rbp - 0x2d000004]
0xffffff800070bcbf : call qword ptr [rbp - 0x39000002]
0xffffff80006ce81f : call qword ptr [rbp - 1]
0xffffff80006df7e3 : call qword ptr [rbp - 2]
0xffffff80007fd9b7 : call qword ptr [rbp - 4]
0xffffff8000872d8a : call qword ptr [rbx + 0x938]
0xffffff80004fbc17 : call qword ptr [rbx + 0x9b8]
0xffffff8000454360 : call qword ptr [rbx + rax*8]
0xffffff800083636f : call qword ptr [rbx - 0x18]
0xffffff8000492c97 : call qword ptr [rbx - 0x2b000005]
0xffffff80006df697 : call qword ptr [rbx - 0x2b]
0xffffff80007370df : call qword ptr [rbx - 0x3d]
0xffffff800086dd7b : call qword ptr [rbx - 1]
0xffffff80002530cd : call qword ptr [rbx]
0xffffff8000492ca7 : call qword ptr [rcx + 0x26fffffc]
0xffffff800087600d : call qword ptr [rcx + 0x938]
0xffffff8000749423 : call qword ptr [rcx - 0x1c000002]
0xffffff80006ce80b : call qword ptr [rcx - 0x2b000003]
0xffffff8000567edb : call qword ptr [rcx - 3]
0xffffff8000520047 : call qword ptr [rcx - 8]
0xffffff8000669b07 : call qword ptr [rcx]
0xffffff800083639f : call qword ptr [rdi + rsi*8]
0xffffff80006ca093 : call qword ptr [rdi - 1]
0xffffff80005dcb1b : call qword ptr [rdi - 2]
0xffffff800026078d : call qword ptr [rdi]
0xffffff8000b4b50f : call qword ptr [rdx + rdi*2 + 0x7774ffff]
0xffffff8000593587 : call qword ptr [rdx + rdx*8]
0xffffff80005a4ea5 : call qword ptr [rdx + rsi*2 + 9]
0xffffff80008422ab : call qword ptr [rdx - 0x1a]
0xffffff80002bcbbf : call qword ptr [rdx - 0x53000002]
0xffffff800026531f : call qword ptr [rdx]
0xffffff800061bcd3 : call qword ptr [rip + 0x45ffffff]
0xffffff8000654b57 : call qword ptr [rip - 0x3c76b800]
0xffffff80006fb6bb : call qword ptr [rsi + rdi*8 - 0x16b0001]
0xffffff800073717b : call qword ptr [rsi - 0x2d000036]
0xffffff80003b3ba7 : call qword ptr [rsi - 0x57000002]
0xffffff80006e46cf : call qword ptr [rsi - 1]
0xffffff8000807a0f : call qword ptr [rsi]
0xffffff8000845e8d : call qword ptr [rsp + 0x10]
0xffffff80007ed86b : call qword ptr [rsp + 0x50]
0xffffff8000568531 : call r10
0xffffff800029ddf8 : call r12
0xffffff8000266b2a : call r14
0xffffff8000388271 : call r15
0xffffff8000265c56 : call r8
0xffffff80004923ca : call r9
0xffffff800034d936 : call rax
0xffffff80006d0cbb : call rbp
0xffffff80006efde7 : call rbx
0xffffff80008fcff5 : call rcx
0xffffff8000388272 : call rdi
0xffffff800080f4cb : call rdx
0xffffff80004a8067 : call rsi
0xffffff8000272c93 : call rsp
0xffffff80007e1b23 : cdq ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c653e : cdq ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff800048657c : cdq ; add rax, rcx ; jmp rax
0xffffff80005c0868 : cdq ; add rbx, rcx ; jmp rbx
0xffffff8000806809 : cdq ; add rdi, rcx ; jmp rdi
0xffffff80003b15af : cdq ; add rdx, rcx ; jmp rdx
0xffffff8000302169 : cdq ; add rdx, rcx ; mov eax, 4 ; jmp rdx
0xffffff8000409082 : cdq ; clc ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80006a9733 : cdq ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff800082de99 : cdq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a122c : cdq ; idiv ecx ; mov r10d, eax ; jmp 0xffffff80002a1240
0xffffff8000280cf7 : cdq ; imul eax, dword ptr [rax], -0x42 ; ret
0xffffff8000804bd7 : cdq ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff800051e595 : cdq ; pop rbx ; add byte ptr [rax - 0x77], cl ; ret 0x40e8
0xffffff80003f93ba : cdq ; ret
0xffffff800076e3a3 : cdq ; ret 0x45ff
0xffffff8000769099 : cdq ; ret 0x48ff
0xffffff80007696c0 : cdq ; ret 0x49ff
0xffffff80007420b3 : cdq ; ret 0xb
0xffffff80005b9741 : cdq ; ret 0xf44
0xffffff800066d8d3 : cdq ; ret 0xffeb
0xffffff8000321eb3 : cdq ; ret 0xfff6
0xffffff8000301f13 : cdq ; ret 0xfff8
0xffffff8000877f62 : cdq ; rol byte ptr [rax], 0 ; add dh, dh ; ret
0xffffff800090a727 : cdq ; shl dword ptr [rdx], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000694068 : cdq ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006bb828 : cdq ; str word ptr [rax - 0x77] ; ret
0xffffff800065f35b : cdq ; sub eax, 0xc0310034 ; call 0xffffff800028e1b9
0xffffff8000634e83 : cdq ; xor bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004954fe : cdqe ; add qword ptr [rdi + rax*8 + 8], r8 ; pop rbp ; ret
0xffffff8000365f9c : cdqe ; add rax, rbx ; jmp 0xffffff8000365fbb
0xffffff800030de9e : cdqe ; add rbx, rax ; jmp 0xffffff800030deba
0xffffff800030f5d4 : cdqe ; add rdx, rax ; jmp 0xffffff800030f5eb
0xffffff800030f5d4 : cdqe ; add rdx, rax ; jmp 0xffffff800030f5f0
0xffffff8000315ba1 : cdqe ; add rdx, rax ; jmp 0xffffff8000315bb8
0xffffff8000315ba1 : cdqe ; add rdx, rax ; jmp 0xffffff8000315bbd
0xffffff800066ea8e : cdqe ; mov byte ptr [rbx + rax], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000785054 : cdqe ; movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0xffffff800031f27a : cdqe ; pop rbp ; ret
0xffffff8000679528 : cdqe ; xor esi, esi ; call rax
0xffffff8000717424 : clc ; adc al, 0xbc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800052ee43 : clc ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000660f2e : clc ; add al, 0x74 ; or dword ptr [rbx - 0x7af0d608], eax ; ret
0xffffff800055fdcc : clc ; add al, 0x7c ; loopne 0xffffff800055fe34 ; pop r14 ; pop rbp ; ret
0xffffff8000572409 : clc ; add al, 0xf ; xchg eax, edi ; ret
0xffffff800078c6f7 : clc ; add bh, byte ptr [rbp - 0x1b] ; pop rbp ; ret
0xffffff800061d51f : clc ; add bh, byte ptr [rcx] ; ret 0x470f
0xffffff8000604764 : clc ; add bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000570ede : clc ; add byte ptr [r13 + rcx*4 + 0x2d], cl ; ret
0xffffff800062434c : clc ; add byte ptr [r9 - 0x7f], al ; call qword ptr [rdi]
0xffffff8000778f73 : clc ; add byte ptr [rax], al ; add al, ch ; in al, 0x43 ; ret 0x4dff
0xffffff80006d6452 : clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x5d01414f], al ; ret
0xffffff800049dbca : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800062622f : clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004438c6 : clc ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff800068384b : clc ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80005c9210 : clc ; add byte ptr [rbx + rsi + 0x4c], dh ; mov edi, esi ; call 0xffffff80005c5509
0xffffff800044602b : clc ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff80005f49a6 : clc ; add cl, byte ptr [rdi] ; lahf ; ret 0x7eb
0xffffff80006159a4 : clc ; add cl, byte ptr [rdi] ; test ebx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800074cf49 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80002a37f7 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xc085
0xffffff800056b7e6 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xf883
0xffffff800086d241 : clc ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800080ef24 : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800086044f : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0xffffff800069fd78 : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008301d1 : clc ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005263e3 : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff8000526717 : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret
0xffffff8000523273 : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x4c], cl ; ret 0x1d8
0xffffff8000522f1b : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x54], cl ; ret
0xffffff8000521188 : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0xffffff8000380942 : clc ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800029bd37 : clc ; add dword ptr [rbp + 0x1c], esi ; pop rbp ; ret
0xffffff80007c0074 : clc ; add dword ptr [rbp + rbx - 0x47], esi ; ret 8
0xffffff80005841e7 : clc ; add dword ptr [rcx], ebx ; ror byte ptr [rcx], cl ; ret 0xc984
0xffffff80003b1f6b : clc ; add dword ptr [rcx], ebx ; ror byte ptr [rcx], cl ; ret 0xdb85
0xffffff8000371076 : clc ; add dword ptr [rdi - 0x3a], edi ; pop rbp ; ret
0xffffff80006d648a : clc ; add dword ptr [rdi], ecx ; enter -0x2f7d, 0 ; pop rbp ; ret
0xffffff80002ce610 : clc ; add dword ptr [rdi], ecx ; ret
0xffffff8000861085 : clc ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0xffffff80005779ba : clc ; add dword ptr [rdi], ecx ; xchg eax, edi ; ret
0xffffff8000577a70 : clc ; add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xc8ff
0xffffff800027fd28 : clc ; add dword ptr [rsi + 2], esi ; pop rbp ; ret
0xffffff80004c8d46 : clc ; add eax, 0x8b413475 ; push rbp ; add al, 0xf6 ; ret 0x7540
0xffffff80004fa299 : clc ; add eax, 0xfc0940f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800078c038 : clc ; add eax, 0xfc0950f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000389000 : clc ; add ebp, esp ; movzx ecx, al ; mov eax, ecx ; pop rbp ; ret
0xffffff80003ae4b8 : clc ; add ebp, esp ; movzx esi, al ; mov eax, esi ; pop rbp ; ret
0xffffff800030423a : clc ; add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80005723d9 : clc ; add ecx, dword ptr [rdi] ; xchg eax, edi ; ret
0xffffff800082d61e : clc ; add rax, -8 ; pop rbp ; ret
0xffffff80002fac4e : clc ; add rax, rsi ; sub rax, rcx ; pop rbp ; ret
0xffffff800054b8e2 : clc ; add rdi, -8 ; call 0xffffff8000297b47
0xffffff800066f553 : clc ; add rdi, -8 ; call 0xffffff8000297b48
0xffffff8000588eda : clc ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800080cbbb : clc ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000866bfb : clc ; add rsp, 0x30 ; pop rbp ; ret
0xffffff800039131b : clc ; add rsp, 8 ; pop rbp ; ret
0xffffff80003a08a6 : clc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004954be : clc ; and byte ptr [rax + 1], cl ; adc al, 0xc7 ; pop rbp ; ret
0xffffff80007a189e : clc ; and byte ptr [rax - 0x75], cl ; adc dword ptr [rbx + rcx*4 + 0x24], ecx ; ret 0x854d
0xffffff80006b2864 : clc ; and dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800027c7d4 : clc ; call 0xffffff80002689e3
0xffffff8000272d79 : clc ; call 0xffffff8000272f48
0xffffff80006674cd : clc ; call 0xffffff800028e4a4
0xffffff800054b8e6 : clc ; call 0xffffff8000297b43
0xffffff800066f557 : clc ; call 0xffffff8000297b44
0xffffff80008f0c9d : clc ; call 0xffffff8000297b47
0xffffff800049e1e0 : clc ; call 0xffffff8000297b48
0xffffff800042c0a7 : clc ; call 0xffffff8000508343
0xffffff80005d3640 : clc ; call 0xffffff80005d2697
0xffffff80005d5400 : clc ; call 0xffffff80005d49e7
0xffffff8000658139 : clc ; call qword ptr [rax]
0xffffff80008bd698 : clc ; call r14
0xffffff80006586f8 : clc ; call r9
0xffffff80003a96d7 : clc ; call rcx
0xffffff8000795d53 : clc ; cdqe ; pop rbp ; ret
0xffffff800088704f : clc ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000875ad4 : clc ; cli ; add byte ptr es:[rax - 0x7f], cl ; ret 0x238
0xffffff80002ba220 : clc ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006932d4 : clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80002ed843 : clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ed67b : clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002fe468 : clc ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000338c21 : clc ; dec dword ptr [rax - 1] ; ret
0xffffff80002fec67 : clc ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff8000316337 : clc ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392607
0xffffff80007d6dac : clc ; dec dword ptr [rcx - 0x876b33d] ; call 0xffffff8000393049
0xffffff80008399ef : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3944
0xffffff800060631b : clc ; div ecx ; mov eax, edx ; pop rbp ; ret
0xffffff8000696f64 : clc ; ficom dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff80008dc0f5 : clc ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800056f4dc : clc ; idiv bh ; call qword ptr [rax]
0xffffff800068005c : clc ; idiv bh ; call qword ptr [rdx]
0xffffff80006f761d : clc ; idiv edi ; jmp qword ptr [rcx]
0xffffff8000666564 : clc ; in al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c942b : clc ; inc dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff8000409083 : clc ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80002fe358 : clc ; inc dword ptr [rcx - 0x75] ; sub al, 0x39 ; ret
0xffffff800043785e : clc ; jae 0xffffff800043787d ; mov eax, 2 ; pop rbp ; ret
0xffffff80007aef43 : clc ; je 0xffffff80007aef4e ; xor eax, eax ; pop rbp ; ret
0xffffff8000309628 : clc ; jmp rax
0xffffff8000252e24 : clc ; jne 0xffffff8000252dd8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000276345 : clc ; jne 0xffffff8000276304 ; pop rbp ; ret
0xffffff80002c7097 : clc ; jne 0xffffff80002c70a8 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002c7096 : clc ; jne 0xffffff80002c70a9 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002d3a95 : clc ; jne 0xffffff80002d3a54 ; pop rbp ; ret
0xffffff8000388b30 : clc ; jne 0xffffff8000388b25 ; pop rbp ; ret
0xffffff8000388b68 : clc ; jne 0xffffff8000388b55 ; pop rbp ; ret
0xffffff80003a2d9d : clc ; jne 0xffffff80003a2daa ; xor eax, eax ; pop rbp ; ret
0xffffff8000803475 : clc ; jne 0xffffff8000803437 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000858455 : clc ; jne 0xffffff8000858454 ; pop rbp ; ret
0xffffff80002d5c39 : clc ; lea rax, [rcx + rax*4] ; pop rbp ; ret
0xffffff800080dee5 : clc ; lock cmpxchg dword ptr [rdx], esi ; sete al ; pop rbp ; ret
0xffffff8000393523 : clc ; mov cr3, rax ; pop rbp ; ret
0xffffff80006bc064 : clc ; mov dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072548c : clc ; mov dword ptr [rdx], eax ; test esi, edi ; sete al ; pop rbp ; ret
0xffffff8000655f20 : clc ; mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [rax]
0xffffff8000858438 : clc ; mov edx, eax ; jmp 0xffffff8000858446
0xffffff8000719056 : clc ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff800030fc94 : clc ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff8000655fbd : clc ; mov r15d, dword ptr [r14 + 0x2c] ; mov rdi, r14 ; call qword ptr [rax]
0xffffff80008bd075 : clc ; mov r9, r10 ; call r14
0xffffff800066a47e : clc ; mov r9, r13 ; call 0xffffff800028e4a7
0xffffff80002db4e6 : clc ; mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049ea4f : clc ; mov rax, rdi ; pop rbp ; ret
0xffffff80006594e4 : clc ; mov rdi, qword ptr [rbp - 0x1a8] ; call qword ptr [rax]
0xffffff80002a14ac : clc ; mov rdi, qword ptr [rbx + 8] ; call rcx
0xffffff8000674bdd : clc ; mov rdi, r12 ; call 0xffffff8000297b47
0xffffff800054b8f3 : clc ; mov rdi, r14 ; call 0xffffff8000297b46
0xffffff8000674690 : clc ; mov rdi, r14 ; call 0xffffff8000297b47
0xffffff800051b8aa : clc ; mov rdi, r15 ; call 0xffffff8000297b46
0xffffff8000674c08 : clc ; mov rdi, r15 ; call 0xffffff8000297b47
0xffffff8000673feb : clc ; mov rdi, rbx ; call 0xffffff8000297b47
0xffffff800049fb26 : clc ; mov rdi, rsi ; pop rbp ; jmp rax
0xffffff80006a2433 : clc ; mov rdx, rbx ; call 0xffffff80002c53a7
0xffffff8000674650 : clc ; mov rsi, qword ptr [r14 - 8] ; call 0xffffff8000297b48
0xffffff800029dcc2 : clc ; mov rsi, qword ptr [rbp - 0x78] ; call r14
0xffffff8000671b73 : clc ; mov rsi, qword ptr [rbx - 8] ; call 0xffffff8000297b48
0xffffff800029e3f2 : clc ; mov rsi, r12 ; call r15
0xffffff800039a6c8 : clc ; mul rsi ; shrd rax, rdx, 0x20 ; ret
0xffffff8000409e18 : clc ; or byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800070bd8a : clc ; or byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fe02], al ; ret
0xffffff80006c8664 : clc ; or byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000367153 : clc ; or eax, ecx ; or eax, esi ; or eax, r8d ; pop rbp ; ret
0xffffff8000895d69 : clc ; or eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff80008edf35 : clc ; out dx, al ; add rsp, 4 ; pop rbp ; ret
0xffffff800025eeb5 : clc ; pop rbp ; ret
0xffffff8000253201 : clc ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007b735e : clc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005340dc : clc ; push -0x77 ; ret
0xffffff800043bf70 : clc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800074d399 : clc ; push qword ptr [rsp + rax - 0x77] ; ret
0xffffff800036c7c6 : clc ; push rdi ; add al, ch ; ret 0x1f9
0xffffff80005b2dab : clc ; push rsi ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000409024 : clc ; push rsi ; ret
0xffffff800039a6d4 : clc ; ret
0xffffff800065e916 : clc ; ret 0x41ff
0xffffff80006a44a2 : clc ; ret 0x48ff
0xffffff800065e8bf : clc ; ret 0x49ff
0xffffff8000666d44 : clc ; ret 0xffd2
0xffffff80005e6744 : clc ; ret 0xffda
0xffffff80005d65a4 : clc ; ret 0xffdb
0xffffff8000738193 : clc ; sbb eax, 0x4b70f00 ; pop r13 ; ret
0xffffff80003283d6 : clc ; setae al ; movzx eax, al ; pop rbp ; ret
0xffffff80006ae0ff : clc ; sti ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80006c0464 : clc ; str word ptr [r8 - 0x77] ; ret
0xffffff80006bcd08 : clc ; str word ptr [rax - 0x77] ; ret
0xffffff80008350a2 : clc ; sub eax, 0x63481475 ; ret 0x8d48
0xffffff80004d46eb : clc ; sub esi, ecx ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0xffffff80002cb4b4 : clc ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002b0fdf : clc ; xor byte ptr [rdi], cl ; ret
0xffffff80005e7e00 : cld ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006b1466 : cld ; adc dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800068c382 : cld ; add al, r13b ; push rsi ; ret 0xffd0
0xffffff800063acf8 : cld ; add byte ptr [r11 - 0x7df0fc08], al ; ret 0
0xffffff800068c365 : cld ; add byte ptr [rax - 0x77], r9b ; ret 0x70e8
0xffffff800058816e : cld ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xf44
0xffffff8000306091 : cld ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; fdivr st(7) ; ret
0xffffff800087aa9b : cld ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800027c5ae : cld ; add dword ptr [rdi], ecx ; ret 0xc8ff
0xffffff80005560d0 : cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80005645a5 : cld ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800045734a : cld ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80008e54fe : cld ; and al, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059eac1 : cld ; and byte ptr [rdi], cl ; lahf ; ret
0xffffff800085a830 : cld ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800062536a : cld ; dec dword ptr [rax + 0x63] ; ret
0xffffff80002c43a8 : cld ; dec dword ptr [rax + 0x69] ; ret
0xffffff80002bcfb3 : cld ; dec dword ptr [rax + 9] ; ret
0xffffff80005650a5 : cld ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002d6e0b : cld ; dec dword ptr [rax - 0x75] ; jge 0xffffff80002d6db1 ; call 0xffffff8000393048
0xffffff800030d260 : cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff800069f991 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a7cad : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006a0048 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff80006a1155 : cld ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff80006a77e9 : cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80005679cf : cld ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff80003ba724 : cld ; dec dword ptr [rcx - 0x1f3eb740] ; or al, 0x5d ; ret
0xffffff800077f7f0 : cld ; fdivr st(7) ; dec dword ptr [rax + 0x39] ; ret
0xffffff80003b711d : cld ; inc dword ptr [rbp - 0x76868b40] ; ret
0xffffff8000711452 : cld ; inc dword ptr [rbp - 0x76f28b40] ; ret 0xb58b
0xffffff80002cd4a0 : cld ; inc dword ptr [rbx + 0x35] ; ret
0xffffff80002c1f4f : cld ; inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000356234 : cld ; inc dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80003b1bf7 : cld ; je 0xffffff80003b1bfe ; pop rbp ; ret
0xffffff80006c1e39 : cld ; jg 0xffffff80006c1e73 ; add byte ptr [rcx], dh ; shr al, 0x6c ; ret
0xffffff8000776fee : cld ; jmp 0xffffff8000776ffd
0xffffff80002cd257 : cld ; jmp qword ptr [rbx]
0xffffff8000340f56 : cld ; jne 0xffffff8000340f44 ; pop rbp ; ret
0xffffff8000420711 : cld ; jne 0xffffff80004206f4 ; pop rbp ; ret
0xffffff80007ae4ad : cld ; jne 0xffffff80007ae4a4 ; pop rbp ; ret
0xffffff800025f3b4 : cld ; js 0xffffff800025f344 ; add bh, dh ; ret
0xffffff800051fb86 : cld ; mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff8000267806 : cld ; mov rbx, rax ; call rbx
0xffffff80008ed0d8 : cld ; movsd dword ptr [rdi], dword ptr [rsi] ; and al, 0 ; pop rbp ; ret
0xffffff80007a9663 : cld ; pop rbp ; ret
0xffffff800029b428 : cld ; push qword ptr [rax + rdx - 0xa] ; ret
0xffffff800029b1fe : cld ; push qword ptr [rdi + rcx - 0xa] ; ret
0xffffff80007054b7 : cld ; push rsi ; ret
0xffffff80002bcfbf : cld ; push rsi ; ret 0xf03
0xffffff800047d0a0 : cld ; ret
0xffffff80007ce9a4 : cld ; ret 0x20
0xffffff800065e54a : cld ; ret 0x45ff
0xffffff800049813f : cld ; ret 0x67
0xffffff8000762da9 : cld ; ret 0x8bff
0xffffff8000861d80 : cld ; ret 0xff8a
0xffffff8000692dd0 : cld ; stosd dword ptr [rdi], eax ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80008d3520 : cld ; xchg eax, ebx ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a9650 : cld ; xchg eax, esi ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000659e36 : cld ; xor eax, 0xe8c03100 ; jo 0xffffff8000659e89 ; ret
0xffffff800044a295 : cld ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054a80f : cli ; adc al, 0x77 ; adc dword ptr [rax + 0x63], ecx ; ret 0x8d48
0xffffff8000706ac0 : cli ; adc byte ptr [rbp - 0x22], dh ; pop rbp ; ret
0xffffff80004f97dc : cli ; adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80003e62ff : cli ; add al, 0x89 ; ret
0xffffff80004127a4 : cli ; add al, 0xf ; xchg eax, ebp ; ret 0xca20
0xffffff8000b40351 : cli ; add al, byte ptr [rcx] ; ret 0xc26b
0xffffff80008261ff : cli ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000558e47 : cli ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0xffffff8000880176 : cli ; add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; ret 2
0xffffff80007b1ebf : cli ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xe6 ; ret 0xffad
0xffffff8000624c3e : cli ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000875ad5 : cli ; add byte ptr es:[rax - 0x7f], cl ; ret 0x238
0xffffff8000461781 : cli ; add cl, byte ptr [rdi] ; ret
0xffffff8000586341 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000582562 : cli ; add dh, byte ptr [rbp + 6] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80008d2d42 : cli ; add dh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000365aab : cli ; add dword ptr [rax], 0x830f0000 ; ret
0xffffff80003c1e52 : cli ; add dword ptr [rax], eax ; add al, ch ; cmc ; ret 0xffec
0xffffff8000408416 : cli ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0xffffff8000389232 : cli ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x72], ah ; shl dword ptr [rsi - 0x72], cl ; ret
0xffffff80004eba02 : cli ; add dword ptr [rdi], ecx ; test dword ptr [rsi + 0x8000005], esi ; ret
0xffffff8000807cd2 : cli ; add eax, 0x6348707f ; ret 0x8b48
0xffffff800031a846 : cli ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0xffffff800077c080 : cli ; and byte ptr [rax + 0x21], cl ; ret 0x148
0xffffff8000858435 : cli ; and edi, 0xfffffff8 ; mov edx, eax ; jmp 0xffffff8000858449
0xffffff8000810a74 : cli ; call 0xffffff800010e0d8
0xffffff8000781f2d : cli ; call 0xffffff800028e1b3
0xffffff800065f240 : cli ; call 0xffffff800028e1b4
0xffffff800065e4ab : cli ; call 0xffffff800028e4a4
0xffffff8000698d93 : cli ; call 0xffffff80002c53a4
0xffffff80003592f4 : cli ; call 0xffffff8000315573
0xffffff8000772c88 : cli ; call 0xffffff8000396b84
0xffffff800047d22f : cli ; call 0xffffff80004494a3
0xffffff800066796a : cli ; call 0xffffff80006a74c7
0xffffff80006ea420 : cli ; call 0xffffff8000726713
0xffffff80008bd62b : cli ; call r14
0xffffff80004eb441 : cli ; call rax
0xffffff80005bc897 : cli ; call rbx
0xffffff80004d94ad : cli ; call rcx
0xffffff8000886e47 : cli ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007831ed : cli ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d341b : cli ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080cd23 : cli ; cmp byte ptr [rbp - 0x17], dh ; mov eax, edi ; pop rbp ; ret
0xffffff800073d78e : cli ; cmp dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800054db22 : cli ; cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000759142 : cli ; cwde ; ret
0xffffff80002ba5f0 : cli ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0xffffff80002ba1f1 : cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f83f7 : cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800059e767 : cli ; dec dword ptr [rdi] ; test byte ptr [rcx - 0xa000000], al ; ret 0x7480
0xffffff800049d772 : cli ; enter -0x19, -0x77 ; ret
0xffffff80007aeebe : cli ; fimul word ptr [rdx + rax] ; je 0xffffff80007aeecf ; xor eax, eax ; pop rbp ; ret
0xffffff800036636a : cli ; inc dword ptr [rbp + 0x5d0275c0] ; ret
0xffffff80002eb088 : cli ; inc dword ptr [rcx + 0x29] ; fisttp qword ptr [rax + 0x63] ; ret
0xffffff80003e78b7 : cli ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff800049f743 : cli ; inc edi ; xor eax, eax ; cmp ecx, edi ; cmovge eax, edx ; pop rbp ; ret
0xffffff8000656893 : cli ; jae 0xffffff80006568b8 ; mov rdi, r13 ; call rax
0xffffff8000737652 : cli ; je 0xffffff800073765e ; mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff8000737652 : cli ; je 0xffffff8000737660 ; mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff80007a5ba8 : cli ; je 0xffffff80007a5bbf ; mov rdi, r12 ; mov r15, rdx ; call rax
0xffffff8000745645 : cli ; jg 0xffffff800074565b ; xchg eax, esp ; ret 0x8440
0xffffff800074566c : cli ; jg 0xffffff8000745682 ; xchg eax, esp ; ret 0x8440
0xffffff8000745693 : cli ; jg 0xffffff80007456a9 ; xchg eax, esp ; ret 0x8440
0xffffff80007456ba : cli ; jg 0xffffff80007456d0 ; xchg eax, esp ; ret 0x8440
0xffffff8000683001 : cli ; jmp 0xffffff800068300b
0xffffff8000b4794c : cli ; jmp rdi
0xffffff800056ec90 : cli ; jmp rdx
0xffffff800080cfa3 : cli ; jo 0xffffff800080d022 ; jmp 0xffffff7fc3dec83b
0xffffff80003f24b0 : cli ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80005bca98 : cli ; lea rcx, [rbp - 0xd0] ; call rbx
0xffffff80007935fe : cli ; mov edi, 0x5bc031ff ; pop r14 ; pop rbp ; ret
0xffffff800079359c : cli ; mov edi, 0x5bd889ff ; pop r14 ; pop rbp ; ret
0xffffff80008e3a70 : cli ; mov r8, r12 ; call 0xffffff80004efce6
0xffffff80008f5ac5 : cli ; mov r8, r14 ; call rax
0xffffff80007ec9a3 : cli ; mov rcx, r10 ; call rbx
0xffffff80008bcff3 : cli ; mov rcx, r10 ; mov r8, r11 ; call r14
0xffffff80009097e8 : cli ; mov rcx, r14 ; call rax
0xffffff800051bc8b : cli ; mov rcx, r14 ; mov r8, rbx ; call rax
0xffffff80003888f9 : cli ; mov rcx, rax ; call 0xffffff8000384b46
0xffffff800028af80 : cli ; mov rdi, r15 ; call 0xffffff8000397206
0xffffff8000388ca2 : cli ; movzx eax, dx ; pop rbx ; pop rbp ; ret
0xffffff8000882862 : cli ; nop ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000410760 : cli ; or al, 0xeb ; add bh, bh ; ret 0xf239
0xffffff80003b530e : cli ; or cl, byte ptr [rbp + 0x58b4a1c] ; ret
0xffffff8000252858 : cli ; or dh, byte ptr [rdx - 0x1c] ; pop rbp ; ret
0xffffff80003e8e38 : cli ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b61f4 : cli ; pop rbp ; ret
0xffffff80006af0f2 : cli ; pop rbp ; ret 0x66ff
0xffffff8000399915 : cli ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029f43e : cli ; pop rdi ; mov eax, 0x5f ; cmovle eax, edx ; pop rbp ; ret
0xffffff800059e7d4 : cli ; push qword ptr [rax + rbx - 0xa] ; ret 0x7480
0xffffff800034366b : cli ; push qword ptr [rbp + rax + 0x39] ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff800050fc62 : cli ; push qword ptr [rbp + rax + 0x39] ; ror byte ptr [rdi], 1 ; ret 0xc35d
0xffffff80002bbbef : cli ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003e78e3 : cli ; push rsi ; ret
0xffffff80003082d2 : cli ; ret
0xffffff8000763598 : cli ; ret 0x41ff
0xffffff800065e717 : cli ; ret 0x44ff
0xffffff8000762fa9 : cli ; ret 0x48ff
0xffffff80003233b1 : cli ; ret 0x62
0xffffff800027d343 : cli ; ret 0x6b
0xffffff8000536492 : cli ; ret 0xffe5
0xffffff80006545a2 : cli ; sahf ; ret
0xffffff80008626bf : cli ; sbb al, byte ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007ebed6 : cli ; sbb cl, byte ptr [rax + 1] ; ret 0x148
0xffffff8000289b6b : cli ; sbb cl, byte ptr [rax + 1] ; ret 0x8949
0xffffff80007da6dd : cli ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000752c42 : cli ; std ; ret
0xffffff80007c27f2 : cli ; sub edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x42f6
0xffffff8000769db2 : cli ; test dword ptr [rsi], eax ; add dh, dh ; ret
0xffffff80003a8321 : cli ; wrmsr ; pop rbp ; ret
0xffffff8000634b22 : cli ; xor eax, 0x89480018 ; ret
0xffffff80002a6aeb : cli ; xor eax, eax ; cmp ecx, 0 ; cmove eax, edx ; jmp 0xffffff80002a6b05
0xffffff80005ee13b : cmc ; add byte ptr [r8 - 0x77], r9b ; ret
0xffffff80002a15a7 : cmc ; add byte ptr [r8], r8b ; xor eax, eax ; pop rbp ; ret
0xffffff800057aa43 : cmc ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80003675fa : cmc ; and eax, 1 ; pop rbp ; ret
0xffffff800046a0ac : cmc ; call qword ptr [rdi]
0xffffff8000517b47 : cmc ; call rdi
0xffffff800030c73f : cmc ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002fec66 : cmc ; clc ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80008a8587 : cmc ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007054b6 : cmc ; cld ; push rsi ; ret
0xffffff80002ba5ef : cmc ; cli ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0xffffff800044187a : cmc ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; pop rsp ; ret
0xffffff80003777b5 : cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033cdc4 : cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008ddb82 : cmc ; dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call rbx
0xffffff80008ddc71 : cmc ; dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, rax ; call rbx
0xffffff8000448624 : cmc ; in al, 0xff ; pop rbp ; ret
0xffffff800065f4b7 : cmc ; in al, dx ; ret 0x48ff
0xffffff800041903a : cmc ; jmp 0xffffff80004191e1
0xffffff8000856b97 : cmc ; mov ebx, 0x415bffb3 ; pop rsi ; pop rbp ; ret
0xffffff80006e186a : cmc ; mov qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff800027c7ce : cmc ; mov rdx, rbx ; mov r8, r15 ; call 0xffffff80002689e9
0xffffff800080e10a : cmc ; movzx eax, al ; pop rbp ; ret
0xffffff80002c02ba : cmc ; movzx eax, ax ; pop rbp ; ret
0xffffff80003c41ab : cmc ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff8000760207 : cmc ; outsd dx, dword ptr [rsi] ; ret
0xffffff8000388144 : cmc ; pop rbp ; ret
0xffffff800043dc40 : cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000574427 : cmc ; push r14 ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret
0xffffff8000579218 : cmc ; push rbp ; add byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff800076da47 : cmc ; push rbp ; ret 0x4cff
0xffffff800043846b : cmc ; push rsi ; ret
0xffffff80003d12c1 : cmc ; ret
0xffffff800065ec83 : cmc ; ret 0x31ff
0xffffff8000763473 : cmc ; ret 0x41ff
0xffffff8000762e6f : cmc ; ret 0x48ff
0xffffff8000b48867 : cmc ; ret 0x7fe3
0xffffff8000651eb7 : cmc ; ret 0xffc3
0xffffff80003c1e57 : cmc ; ret 0xffec
0xffffff800088c448 : cmc ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000638297 : cmc ; sub byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff8000492a27 : cmc ; test ah, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff800062c887 : cmc ; ud0 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002afd07 : cmc ; xchg eax, esi ; test byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff80006a72a7 : cmc ; xor byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb8
0xffffff80006a731b : cmc ; xor byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb9
0xffffff80003e71f2 : cmova eax, ecx ; pop rbp ; ret
0xffffff80005d867b : cmova eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083ebd8 : cmova ecx, eax ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff800061ae9f : cmovae eax, ecx ; pop rbp ; ret
0xffffff80004bc537 : cmovae eax, edx ; pop rbp ; ret
0xffffff800039a7e6 : cmovb eax, ecx ; cmove eax, edx ; leave ; ret
0xffffff800039a7b9 : cmovb eax, ecx ; cmove eax, edx ; pop rdi ; leave ; ret
0xffffff8000436125 : cmovb eax, ecx ; pop rbp ; ret
0xffffff800072c129 : cmovb eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff800066a60d : cmovb eax, ecx ; test ecx, ecx ; cmove eax, edx ; jmp 0xffffff800066a624
0xffffff8000812854 : cmovb eax, edx ; pop rbp ; ret
0xffffff800083bb92 : cmovb eax, esi ; pop rbp ; ret
0xffffff80006dac31 : cmovb ecx, eax ; inc dword ptr [rdi + rcx*4 + 8] ; pop rbp ; ret
0xffffff80006307f1 : cmovb edx, esi ; mov dword ptr [r8], edx ; pop rbp ; ret
0xffffff800083bb91 : cmovb rax, rsi ; pop rbp ; ret
0xffffff80006dac30 : cmovb rcx, rax ; inc dword ptr [rdi + rcx*4 + 8] ; pop rbp ; ret
0xffffff800077c912 : cmovbe eax, ecx ; mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff8000334a32 : cmovbe eax, ecx ; pop rbp ; ret
0xffffff800075034c : cmovbe eax, edi ; pop rbp ; ret
0xffffff800071dce9 : cmovbe eax, edx ; pop rbp ; ret
0xffffff80002a14aa : cmovbe edi, eax ; mov rdi, qword ptr [rbx + 8] ; call rcx
0xffffff80002a14a9 : cmovbe r15, rax ; mov rdi, qword ptr [rbx + 8] ; call rcx
0xffffff8000738129 : cmove ax, cx ; movzx eax, ax ; pop rbp ; ret
0xffffff8000737ea2 : cmove cx, ax ; movzx eax, cx ; pop rbp ; ret
0xffffff80005841ef : cmove dx, ax ; movzx eax, dx ; pop rbp ; ret
0xffffff80002ce612 : cmove eax, ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80002b0fe1 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004d0330 : cmove eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003421a1 : cmove eax, ecx ; mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff8000570941 : cmove eax, ecx ; mov dword ptr [rdi + 0x44], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800073812a : cmove eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff8000281981 : cmove eax, ecx ; pop rbp ; ret
0xffffff80002b7ad8 : cmove eax, edi ; pop rbp ; ret
0xffffff80002679a1 : cmove eax, edx ; jmp 0xffffff80002679aa
0xffffff80002a6af1 : cmove eax, edx ; jmp 0xffffff80002a6aff
0xffffff800066a612 : cmove eax, edx ; jmp 0xffffff800066a61f
0xffffff8000680328 : cmove eax, edx ; jmp 0xffffff80006802d2
0xffffff80006c679b : cmove eax, edx ; jmp 0xffffff80006c67a2
0xffffff80007a0e04 : cmove eax, edx ; jmp 0xffffff80007a0e62
0xffffff800039a7e9 : cmove eax, edx ; leave ; ret
0xffffff80003669dc : cmove eax, edx ; pop rbp ; ret
0xffffff800039a7bc : cmove eax, edx ; pop rdi ; leave ; ret
0xffffff80008c305e : cmove eax, esi ; pop rbp ; ret
0xffffff8000764408 : cmove eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000764407 : cmove eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059bde6 : cmove ebx, eax ; mov rdi, r14 ; call 0xffffff80007b8028
0xffffff8000b3f25a : cmove ecx, dword ptr [rcx] ; ret 0xf201
0xffffff800054ff76 : cmove ecx, eax ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff8000387d20 : cmove ecx, eax ; mov eax, ecx ; pop rbp ; ret
0xffffff8000389573 : cmove ecx, eax ; mov qword ptr [rsi], rcx ; xor eax, eax ; pop rbp ; ret
0xffffff8000737ea3 : cmove ecx, eax ; movzx eax, cx ; pop rbp ; ret
0xffffff800047c3ca : cmove edi, dword ptr [rcx] ; ret 0xa7d
0xffffff80003a96d5 : cmove edi, eax ; call rcx
0xffffff800049ea4d : cmove edi, eax ; mov rax, rdi ; pop rbp ; ret
0xffffff80003acde8 : cmove edi, ecx ; call rax
0xffffff80003a27ce : cmove edi, ecx ; pop rbp ; jmp rax
0xffffff80005841f0 : cmove edx, eax ; movzx eax, dx ; pop rbp ; ret
0xffffff8000716664 : cmove edx, ecx ; add eax, edx ; pop rbp ; ret
0xffffff80002bf87c : cmove edx, esi ; mov dword ptr [rcx + 0x38], edx ; pop rbp ; ret
0xffffff800031ebc5 : cmove rax, rcx ; pop rbp ; ret
0xffffff80002679a0 : cmove rax, rdx ; jmp 0xffffff80002679ab
0xffffff800054ff75 : cmove rcx, rax ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff80003a96d4 : cmove rdi, rax ; call rcx
0xffffff800049ea4c : cmove rdi, rax ; mov rax, rdi ; pop rbp ; ret
0xffffff80003acde7 : cmove rdi, rcx ; call rax
0xffffff80003a27cd : cmove rdi, rcx ; pop rbp ; jmp rax
0xffffff80004571c4 : cmovg eax, edx ; jmp 0xffffff80004571e4
0xffffff800050fc68 : cmovg eax, edx ; pop rbp ; ret
0xffffff800087966d : cmovg ecx, edx ; sub eax, ecx ; pop rbp ; ret
0xffffff800049f74a : cmovge eax, edx ; pop rbp ; ret
0xffffff8000579e78 : cmovl eax, ecx ; pop rbp ; ret
0xffffff80007d23eb : cmovl ebx, esi ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d6882 : cmovl edi, dword ptr [rcx] ; ret 0x1b74
0xffffff800049e15e : cmovle eax, ecx ; pop rbp ; ret
0xffffff800029f445 : cmovle eax, edx ; pop rbp ; ret
0xffffff80007d4d23 : cmovne cx, ax ; mov word ptr [rsi + 0x16], cx ; pop rbp ; ret
0xffffff80005f14ed : cmovne cx, ax ; mov word ptr [rsi + 0x1e], cx ; pop rbp ; ret
0xffffff8000898929 : cmovne eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800040c863 : cmovne eax, ecx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007afce3 : cmovne eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80004517b5 : cmovne eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002d2d23 : cmovne eax, ecx ; pop rbp ; ret
0xffffff80004cbd3c : cmovne eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003924cb : cmovne eax, ecx ; ret
0xffffff8000472db7 : cmovne eax, edx ; jmp 0xffffff8000472dcf
0xffffff8000839875 : cmovne eax, edx ; jmp 0xffffff8000839891
0xffffff80008398f2 : cmovne eax, edx ; jmp 0xffffff800083990e
0xffffff800083996f : cmovne eax, edx ; jmp 0xffffff800083998b
0xffffff80008b9626 : cmovne eax, edx ; jmp 0xffffff80008b968f
0xffffff80002bacbd : cmovne eax, edx ; pop rbp ; ret
0xffffff80003d3e71 : cmovne eax, edx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800026dc4f : cmovne eax, edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000472db2 : cmovne eax, edx ; test edx, edx ; cmovne eax, edx ; jmp 0xffffff8000472dd4
0xffffff800026799a : cmovne eax, edx ; test rdx, rdx ; cmove rax, rdx ; jmp 0xffffff80002679b1
0xffffff800082e95b : cmovne eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff80008121bb : cmovne eax, esi ; mov dword ptr [rdi + 0x28], eax ; pop rbp ; ret
0xffffff800082c6fb : cmovne eax, esi ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff8000795de3 : cmovne eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000795de2 : cmovne eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007afce2 : cmovne eax, r9d ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000839872 : cmovne ebp, ecx ; cmovne eax, edx ; jmp 0xffffff8000839894
0xffffff80008398ef : cmovne ebp, ecx ; cmovne eax, edx ; jmp 0xffffff8000839911
0xffffff800083996c : cmovne ebp, ecx ; cmovne eax, edx ; jmp 0xffffff800083998e
0xffffff8000813586 : cmovne ecx, eax ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff80007d4d24 : cmovne ecx, eax ; mov word ptr [rsi + 0x16], cx ; pop rbp ; ret
0xffffff80005f14ee : cmovne ecx, eax ; mov word ptr [rsi + 0x1e], cx ; pop rbp ; ret
0xffffff80008aa73b : cmovne edi, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80008a839b : cmovne edi, esi ; pop rbp ; jmp rcx
0xffffff80008f0170 : cmovne esi, edi ; mov eax, esi ; pop rbp ; ret
0xffffff8000839871 : cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839895
0xffffff80008398ee : cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839912
0xffffff800083996b : cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff800083998f
0xffffff80002d2d22 : cmovne rax, rcx ; pop rbp ; ret
0xffffff80008b9625 : cmovne rax, rdx ; jmp 0xffffff80008b9690
0xffffff800026dc4e : cmovne rax, rdx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000813585 : cmovne rcx, rax ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff80004b2490 : cmovns eax, dword ptr [rcx] ; ret
0xffffff8000646188 : cmovns eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b4579c : cmovns esp, dword ptr [rcx] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80006597f6 : cmovs eax, dword ptr [rbx + 0x2948f0e0] ; ret
0xffffff80007ece05 : cmovs eax, dword ptr [rbx + 0x5d5b08c4] ; ret
0xffffff800044f8f3 : cmovs eax, dword ptr [rbx - 0x7cb7fb39] ; ret
0xffffff80005e046f : cmovs eax, ecx ; pop rbp ; ret
0xffffff80002fa249 : cmovs eax, edi ; ret 0xffff
0xffffff80004db6bd : cmovs ecx, dword ptr [rbx + 0x148a0849] ; add esi, esi ; ret 0x7410
0xffffff80007587ba : cmovs ecx, dword ptr [rbx + 0x148a0849] ; add esi, esi ; ret 0x7510
0xffffff8000399272 : cmovs ecx, dword ptr [rcx + 0x1b80e] ; add byte ptr [rax], al ; ret
0xffffff80002a10ce : cmovs ecx, dword ptr [rcx - 0xb726fc] ; ret
0xffffff8000377040 : cmovs ecx, dword ptr [rcx] ; mov qword ptr [rdi + 8], rdx ; pop rbp ; ret
0xffffff8000880439 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0xffffff80006ebc34 : cmovs edi, dword ptr [rcx] ; fisttp word ptr [rdi] ; popfq ; ret
0xffffff80007af0c0 : cmovs edi, edi ; ret
0xffffff80002ebbc8 : cmovs edi, edi ; ret 0xc031
0xffffff80004ba7fc : cmovs edi, edi ; ret 0xff48
0xffffff80006597f5 : cmovs r8d, dword ptr [rbx + 0x2948f0e0] ; ret
0xffffff800038e12c : cmp ah, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003741da : cmp ah, bl ; mov esp, 0xc1418f1b ; ret 0x891e
0xffffff80008e9a53 : cmp ah, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x7eb
0xffffff80003babec : cmp ah, byte ptr [rax] ; mov qword ptr [rsi], r9 ; xor eax, eax ; pop rbp ; ret
0xffffff8000691bbe : cmp ah, byte ptr [rsi] ; add byte ptr ds:[rcx], bh ; ret 0x6376
0xffffff8000669d5e : cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xf41
0xffffff8000271dfb : cmp al, 0 ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff8000764663 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003e71ee : cmp al, 0 ; add byte ptr [rax], al ; cmova eax, ecx ; pop rbp ; ret
0xffffff800038e0dc : cmp al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003b0d05 : cmp al, 0 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0xffffff8000768bc6 : cmp al, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca20
0xffffff80005c7c9b : cmp al, 0 ; call 0xffffff800028e1b9
0xffffff8000762cd0 : cmp al, 0 ; call 0xffffff80003922f5
0xffffff800076dd51 : cmp al, 0 ; call 0xffffff8000392935
0xffffff8000766f07 : cmp al, 0 ; call 0xffffff8000392a45
0xffffff8000766f2d : cmp al, 0 ; call 0xffffff8000393045
0xffffff800070715d : cmp al, 0 ; lea rsi, [rbp - 0x30] ; call rax
0xffffff8000764ce1 : cmp al, 0 ; pop rbp ; ret
0xffffff8000885980 : cmp al, 0x10 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007aab27 : cmp al, 0x11 ; pop rbp ; ret
0xffffff80006295c0 : cmp al, 0x11 ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000680e45 : cmp al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800025ed65 : cmp al, 0x13 ; add dh, dh ; ret
0xffffff80008ebb90 : cmp al, 0x16 ; add eax, 0x158d4800 ; call qword ptr [rsi]
0xffffff800078ebd0 : cmp al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret 0xee75
0xffffff8000610d86 : cmp al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000604468 : cmp al, 0x1b ; add byte ptr [rcx - 0x77], al ; fmul dword ptr [rax - 0x77] ; ret
0xffffff80004bb690 : cmp al, 0x1e ; call 0xffffff80003985e9
0xffffff80002e2c66 : cmp al, 0x21 ; ret 0xca81
0xffffff8000763210 : cmp al, 0x22 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000415824 : cmp al, 0x24 ; add al, 0xf ; xchg eax, edx ; ret 0xbe41
0xffffff80004e2d72 : cmp al, 0x24 ; call 0xffffff800075f014
0xffffff80003896fc : cmp al, 0x24 ; call qword ptr [rax]
0xffffff8000389718 : cmp al, 0x24 ; mov rsi, rdi ; shr rsi, 0x20 ; call qword ptr [rax]
0xffffff800054ccd5 : cmp al, 0x28 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800065b870 : cmp al, 0x29 ; ret
0xffffff800083d7eb : cmp al, 0x29 ; ret 0x1e76
0xffffff8000608770 : cmp al, 0x31 ; rol byte ptr [rbx + 0x6c7215fa], 0x83 ; ret 0x48ec
0xffffff8000304802 : cmp al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0xffffff8000669d6d : cmp al, 0x34 ; add byte ptr [rcx], dh ; shr al, 0x29 ; ret 0xe9ff
0xffffff80004872f7 : cmp al, 0x34 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff8000611ff0 : cmp al, 0x39 ; ret 0x2573
0xffffff80008da815 : cmp al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e5681 : cmp al, 0x48 ; mov edi, eax ; pop rbp ; jmp rcx
0xffffff80006a8a90 : cmp al, 0x4f ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff80008dbaeb : cmp al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80003a1630 : cmp al, 0x62 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007962c2 : cmp al, 0x66 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800075b500 : cmp al, 0x7b ; ret
0xffffff800076b500 : cmp al, 0x7b ; ret 0x41ff
0xffffff800036480c : cmp al, 0x83 ; ret
0xffffff80008188af : cmp al, 0x88 ; add rdi, rax ; jmp rdi
0xffffff800032ae14 : cmp al, 0x89 ; ret 0xe281
0xffffff800058fabd : cmp al, 0x8a ; add rdi, rdx ; jmp rdi
0xffffff8000594764 : cmp al, 0x8a ; add rdi, rdx ; mov r9, r11 ; jmp rdi
0xffffff80008358e9 : cmp al, 0x96 ; add rdi, rsi ; mov sil, al ; mov dl, al ; jmp rdi
0xffffff80004c051a : cmp al, 0x98 ; add rdi, rax ; jmp rdi
0xffffff8000806808 : cmp al, 0x99 ; add rdi, rcx ; jmp rdi
0xffffff800038c104 : cmp al, 0xa8 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000768700 : cmp al, 0xa9 ; ret 0x48ff
0xffffff8000652e60 : cmp al, 0xb6 ; ret
0xffffff8000584736 : cmp al, 0xb8 ; add rdi, rax ; jmp rdi
0xffffff8000266960 : cmp al, 0xb9 ; add rdi, rcx ; jmp rdi
0xffffff800030453e : cmp al, 0xb9 ; push rbx ; std ; jmp qword ptr [rcx]
0xffffff80006034fd : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0xffffff8000590722 : cmp al, 0xba ; add rdi, rdx ; jmp rdi
0xffffff80003a38ff : cmp al, 0xbb ; add rdi, rbx ; jmp rdi
0xffffff8000529a63 : cmp al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff80005283b2 : cmp al, 0xbe ; add rdi, rsi ; jmp rdi
0xffffff80008ec2cf : cmp al, 0xbe ; add rdi, rsi ; mov rsi, rax ; jmp rdi
0xffffff80002ce757 : cmp al, 0xc ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800049fc1d : cmp al, 0xc2 ; xor eax, eax ; pop rbp ; ret
0xffffff80003646d9 : cmp al, 0xc7 ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff800048a3ae : cmp al, 0xc8 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000861d79 : cmp al, 0xc8 ; shl rdx, 3 ; call 0xffffff800010e088
0xffffff8000706ae7 : cmp al, 0xc9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a9a2d : cmp al, 0xca ; add rdi, 0x148 ; call rax
0xffffff800054fdbe : cmp al, 0xce ; mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff80003b1808 : cmp al, 0xd ; jb 0xffffff80003b1814 ; jmp 0xffffff80003b181d
0xffffff800082ca43 : cmp al, 0xd8 ; mov rsi, r14 ; call rcx
0xffffff80006a1690 : cmp al, 0xe ; add byte ptr [rax], al ; jmp 0xffffff80006a16de
0xffffff800034bfdf : cmp al, 0xe9 ; ret 1
0xffffff800064f460 : cmp al, 0xf0 ; ret
0xffffff80008d7c99 : cmp al, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033c18f : cmp al, 0xf6 ; ret
0xffffff80003402b1 : cmp al, 0xf6 ; ret 0x7402
0xffffff80003300ae : cmp al, 0xf6 ; ret 0x7501
0xffffff80003f1169 : cmp al, 0xf6 ; ret 0x7530
0xffffff8000349686 : cmp al, 0xf7 ; ret 0
0xffffff80002ba2e0 : cmp al, 0xf8 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000555736 : cmp al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005043c7 : cmp al, 0xff ; ret 0x3b48
0xffffff800061a92e : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000526bd6 : cmp al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000888f85 : cmp al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000526bf5 : cmp al, 1 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000716f70 : cmp al, 1 ; clc ; pop rbp ; ret
0xffffff8000262552 : cmp al, 1 ; pop rbp ; ret
0xffffff800089bacd : cmp al, 2 ; bswap esi ; mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff8000719a4f : cmp al, 2 ; jne 0xffffff8000719a7c ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000719a8f
0xffffff8000719a67 : cmp al, 2 ; jne 0xffffff8000719a85 ; movzx edx, byte ptr [rbx] ; inc rdx ; jmp 0xffffff8000719a8c
0xffffff800089bdfb : cmp al, 2 ; mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff800089b79c : cmp al, 2 ; mov qword ptr [rdx + rax + 8], rsi ; pop rbp ; ret
0xffffff80004aabad : cmp al, 2 ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800066575d : cmp al, 3 ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80006fdf31 : cmp al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008aa795 : cmp al, 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80004fa7dd : cmp al, 8 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800029e420 : cmp al, 8 ; mov rsi, r12 ; call r15
0xffffff80003cac8f : cmp al, 8 ; ret 0xf44
0xffffff8000651e72 : cmp al, bl ; ret
0xffffff80004b3025 : cmp al, byte ptr [rax + rax] ; add byte ptr [rbx - 0x6af00007], al ; ret 0xf981
0xffffff80002cbfb7 : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800078d86d : cmp al, byte ptr [rax] ; add byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800078f247 : cmp al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800078f283 : cmp al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800073790e : cmp al, byte ptr [rax] ; call 0xffffff80003924d8
0xffffff8000780032 : cmp al, byte ptr [rax] ; call 0xffffff8000392a49
0xffffff8000786d72 : cmp al, byte ptr [rax] ; call 0xffffff8000393044
0xffffff8000658133 : cmp al, byte ptr [rax] ; mov rax, qword ptr [rcx + rax*8 - 8] ; call qword ptr [rax]
0xffffff80006c53d9 : cmp al, byte ptr [rax] ; pop rbp ; jmp rax
0xffffff800072f3c7 : cmp al, byte ptr [rax] ; pop rbp ; ret
0xffffff800078749a : cmp al, byte ptr [rax] ; test rax, rax ; je 0xffffff80007874aa ; call rax
0xffffff800085114d : cmp al, byte ptr [rcx + 0x10] ; adc dword ptr [rsi + 0xf], esp ; out dx, eax ; ret
0xffffff8000851133 : cmp al, byte ptr [rcx + 0x10] ; adc dword ptr [rsi + 0xf], esp ; out dx, eax ; ret 0xf66
0xffffff80008511ab : cmp al, byte ptr [rcx + rdx*2 + 0x20] ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0xffffff80008511cd : cmp al, byte ptr [rcx + rdx*2 + 0x30] ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0xffffff800073f1a2 : cmp al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003adc8a : cmp al, byte ptr [rdi + 0x72] ; add byte ptr [rcx - 0x7d], cl ; ret 0xbe08
0xffffff800031ed25 : cmp al, byte ptr [rdi] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800054fd2a : cmp al, byte ptr [rsi - 0x76b7ffa8] ; ret 0xaae8
0xffffff800068e8c7 : cmp al, ch ; ret
0xffffff800032b2b8 : cmp al, ch ; ret 0x5d5
0xffffff80005ed8a8 : cmp al, ch ; ret 0xda4d
0xffffff80007669bc : cmp al, ch ; scasb al, byte ptr [rdi] ; ret
0xffffff8000765da2 : cmp al, dh ; ret 0x31ff
0xffffff8000651492 : cmp ax, word ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff800039a203 : cmp bh, 0xff ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800071dce6 : cmp bh, 0xff ; cmovbe eax, edx ; pop rbp ; ret
0xffffff800039944a : cmp bh, 0xff ; dec dword ptr [rax + 9] ; clc ; pop rbp ; ret
0xffffff80003a4f6f : cmp bh, 0xff ; dec dword ptr [rax + 9] ; ret
0xffffff80004b3bb0 : cmp bh, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007ad055 : cmp bh, bh ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80005eef6c : cmp bh, bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d121d : cmp bh, bh ; ret
0xffffff800060361b : cmp bh, bh ; ret 0x8348
0xffffff8000773142 : cmp bh, byte ptr [rdx] ; ret 0x48ff
0xffffff80005c0248 : cmp bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004c469c : cmp bh, dh ; ret 0
0xffffff80002f23eb : cmp bh, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000757142 : cmp bh, dl ; ret
0xffffff80006f7726 : cmp bl, 0xff ; dec dword ptr [rdi] ; xchg eax, esi ; ret 0x3b48
0xffffff80003cdc00 : cmp bl, 0xff ; inc dword ptr [rcx - 0x77] ; ret
0xffffff80007a0b6a : cmp bl, bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006046ff : cmp bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000881c3c : cmp bl, ch ; loope 0xffffff8000881ca1 ; ret
0xffffff80006250ca : cmp bl, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000881c3b : cmp bl, r13b ; loope 0xffffff8000881ca2 ; ret
0xffffff80003437f4 : cmp byte ptr [r13 + r9*4 + 0x25], cl ; ret
0xffffff800057ac6b : cmp byte ptr [r15], r9b ; test dword ptr [rbp - 0xa000000], ecx ; ret
0xffffff8000698a2a : cmp byte ptr [r8 + 0x39], cl ; ret 0x1573
0xffffff80002d2d1f : cmp byte ptr [r8 + rcx*2], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80008456e4 : cmp byte ptr [r8 - 0x77], r9b ; ret 0xff5d
0xffffff80004295f6 : cmp byte ptr [r8 - 0x7d], cl ; ret
0xffffff80004b36d5 : cmp byte ptr [r8], r8b ; add byte ptr [rax + rax], al ; pop rbp ; ret
0xffffff80004b3ab5 : cmp byte ptr [r8], r8b ; add byte ptr [rax], 0 ; pop rbp ; ret
0xffffff80004a4df8 : cmp byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000796364 : cmp byte ptr [r9 + 0x5dc03102], r9b ; ret
0xffffff8000526855 : cmp byte ptr [r9 + 0x5dc03106], r9b ; ret
0xffffff80007722cd : cmp byte ptr [r9 + rcx*4 - 0x19], cl ; call 0xffffff8000392a48
0xffffff8000763101 : cmp byte ptr [r9 + rcx*4 - 1], cl ; call 0xffffff8000392a48
0xffffff8000840f2b : cmp byte ptr [r9], dil ; ret 0xc76
0xffffff80002bf829 : cmp byte ptr [r9], sil ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800065f224 : cmp byte ptr [rax + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000698a2b : cmp byte ptr [rax + 0x39], cl ; ret 0x1573
0xffffff80004b37ac : cmp byte ptr [rax + 0x5b057508], ch ; pop r14 ; pop rbp ; ret
0xffffff800070ad85 : cmp byte ptr [rax + 0xd], 0xf ; ret
0xffffff80004a2211 : cmp byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004a2210 : cmp byte ptr [rax + rax], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80002d2d20 : cmp byte ptr [rax + rcx*2], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80007651cd : cmp byte ptr [rax - 0x39], cl ; ret
0xffffff8000845791 : cmp byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0xff5d
0xffffff800029df3d : cmp byte ptr [rax - 0x75], cl ; jne 0xffffff800029decf ; call rcx
0xffffff800084234a : cmp byte ptr [rax - 0x75], cl ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800064aad0 : cmp byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x39], 1 ; ret
0xffffff80005dba24 : cmp byte ptr [rax - 0x76b7ffe3], dl ; ret
0xffffff80008be537 : cmp byte ptr [rax - 0x77], cl ; add al, 0x24 ; call r10
0xffffff80002d245b : cmp byte ptr [rax - 0x77], cl ; ret
0xffffff80008456e5 : cmp byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff80008be536 : cmp byte ptr [rax - 0x77], r9b ; add al, 0x24 ; call r10
0xffffff80007b9525 : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xb] ; pop rbp ; ret
0xffffff800083ccdb : cmp byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff800027394c : cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff800036f021 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4c08
0xffffff800071c3a7 : cmp byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0xff ; ret 0xff81
0xffffff80006c8e3e : cmp byte ptr [rax - 0xb76f70], dl ; ret
0xffffff80008704c9 : cmp byte ptr [rax - 1], cl ; ret
0xffffff80002ead69 : cmp byte ptr [rax - 1], cl ; ret 0x8148
0xffffff80003ca05c : cmp byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800039a32f : cmp byte ptr [rax], 0x16 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800038c0e3 : cmp byte ptr [rax], 0xa8 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004b36d6 : cmp byte ptr [rax], al ; add byte ptr [rax + rax], al ; pop rbp ; ret
0xffffff80002cc150 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004b3ab6 : cmp byte ptr [rax], al ; add byte ptr [rax], 0 ; pop rbp ; ret
0xffffff80002817d9 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff80004a4df9 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80003993ec : cmp byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; call rsi
0xffffff80006a449b : cmp byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; or edi, eax ; ret 0x48ff
0xffffff80004b3791 : cmp byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000756fc5 : cmp byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007567fd : cmp byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000797374 : cmp byte ptr [rax], al ; jne 0xffffff8000797381 ; mov eax, ecx ; pop rbp ; ret
0xffffff800077dc81 : cmp byte ptr [rax], al ; lea rax, [rax + 1] ; jne 0xffffff800077dc89 ; pop rbp ; ret
0xffffff8000651eb1 : cmp byte ptr [rax], al ; mov rdx, r13 ; call 0xffffff800028e1b7
0xffffff80005f4e03 : cmp byte ptr [rax], al ; pop rbp ; ret
0xffffff80007b4177 : cmp byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d7ad4 : cmp byte ptr [rax], cl ; add byte ptr [rax], al ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff80007cfeaf : cmp byte ptr [rbp + 0x31], al ; in al, 0xf6 ; ret 0x7501
0xffffff8000827df3 : cmp byte ptr [rbp + rcx*4 + 0x25], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80003437f5 : cmp byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0xffffff800080cd24 : cmp byte ptr [rbp - 0x17], dh ; mov eax, edi ; pop rbp ; ret
0xffffff800025fdc4 : cmp byte ptr [rbp - 0x73], dl ; add byte ptr [rbx - 0x7cb7f7b8], cl ; ret
0xffffff800062c384 : cmp byte ptr [rbp - 0x76b70001], bl ; ret
0xffffff80006b42ac : cmp byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff8000616deb : cmp byte ptr [rbp - 0x77], cl ; imul ecx ; ret
0xffffff8000276955 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff8000811ad1 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800028e914 : cmp byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002a1774 : cmp byte ptr [rbx + 0x7e00307b], al ; sbb cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000356bdd : cmp byte ptr [rbx + rbp + 0x68], cl ; adc byte ptr [rax - 0x39], cl ; ret
0xffffff8000369884 : cmp byte ptr [rbx - 0x3d09ceec], cl ; add dword ptr [rax - 0x39], ecx ; ret 0xffff
0xffffff800065f124 : cmp byte ptr [rcx + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000560924 : cmp byte ptr [rcx + 0x25], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000796365 : cmp byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff8000526856 : cmp byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff800071ec59 : cmp byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a052d : cmp byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000770308 : cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000392937
0xffffff80007722ce : cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000392a47
0xffffff8000763102 : cmp byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000392a47
0xffffff80003523d2 : cmp byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff800010e696
0xffffff80006ebdb2 : cmp byte ptr [rcx - 0x4a], al ; add esi, esi ; ret
0xffffff80006198ae : cmp byte ptr [rcx - 0x73], cl ; jl 0xffffff80006198f4 ; add edi, esi ; rol byte ptr [rcx], 1 ; ret 0xc3e8
0xffffff8000880504 : cmp byte ptr [rcx - 0x73], cl ; jl 0xffffff8000880512 ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000880574 : cmp byte ptr [rcx - 0x73], cl ; jl 0xffffff8000880582 ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000880674 : cmp byte ptr [rcx - 0x73], cl ; jl 0xffffff8000880682 ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000896ab4 : cmp byte ptr [rcx - 0x76b70009], ch ; ret
0xffffff800065a924 : cmp byte ptr [rcx - 0x76b7ffeb], ah ; ret
0xffffff80008906a0 : cmp byte ptr [rcx - 0x77], cl ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff80008761d1 : cmp byte ptr [rcx - 0x77], cl ; or eax, 0xffd08930 ; ret 0x394c
0xffffff8000b45271 : cmp byte ptr [rcx - 0x78], al ; ret 0x45
0xffffff8000653659 : cmp byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0xffffff8000420363 : cmp byte ptr [rcx - 0xa], al ; ret 0x7408
0xffffff8000420362 : cmp byte ptr [rcx - 0xa], r8b ; ret 0x7408
0xffffff8000560fb3 : cmp byte ptr [rcx - 1], cl ; ret 0xff49
0xffffff800073f2ac : cmp byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003bad3d : cmp byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800058dcc8 : cmp byte ptr [rcx], ah ; ret 0xd0f7
0xffffff8000526e86 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000591ec8 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xffffff800010e149
0xffffff8000797025 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000887e37 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bd368 : cmp byte ptr [rcx], bh ; ret 0x4d0f
0xffffff8000590b4d : cmp byte ptr [rcx], bh ; ret 0x87d
0xffffff8000528841 : cmp byte ptr [rcx], bh ; ret 0xc75
0xffffff8000840f2c : cmp byte ptr [rcx], bh ; ret 0xc76
0xffffff80002bf82a : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000859124 : cmp byte ptr [rdi + 0x28], 0 ; setne al ; pop rbp ; ret
0xffffff80008135a4 : cmp byte ptr [rdi + 0xc], 0 ; sete al ; pop rbp ; ret
0xffffff800071c3f1 : cmp byte ptr [rdi + 0xf], 0xf6 ; ret 0xf80
0xffffff80002d8a84 : cmp byte ptr [rdi + r9], al ; xchg eax, esp ; ret
0xffffff80002d8a85 : cmp byte ptr [rdi + rcx], al ; xchg eax, esp ; ret
0xffffff80002d51de : cmp byte ptr [rdi - 1], 0xff ; dec dword ptr [rax + 0x39] ; ret
0xffffff800034dffc : cmp byte ptr [rdi - 1], 0xff ; dec dword ptr [rax + 1] ; ret
0xffffff80002ffad3 : cmp byte ptr [rdi], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff8000506a9e : cmp byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800057ac6c : cmp byte ptr [rdi], cl ; test dword ptr [rbp - 0xa000000], ecx ; ret
0xffffff8000314b07 : cmp byte ptr [rdi], cl ; test dword ptr [rsi], ebx ; add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret 0xfff0
0xffffff800074e614 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0xffffff800074c4a5 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf44
0xffffff80007f9984 : cmp byte ptr [rdx - 0x76b7000b], al ; ret
0xffffff8000775374 : cmp byte ptr [rdx - 0x76b80000], dl ; ret
0xffffff8000388142 : cmp byte ptr [rdx - 0xb], dh ; pop rbp ; ret
0xffffff80008918ae : cmp byte ptr [rdx], ch ; add byte ptr [rax], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002df9d7 : cmp byte ptr [rdx], dh ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000510a45 : cmp byte ptr [rip + 0x5bc03100], ah ; pop r14 ; pop rbp ; ret
0xffffff8000611d24 : cmp byte ptr [rip - 0x76b7ffe6], ch ; ret
0xffffff80005365d3 : cmp byte ptr [rip - 0x7ab80000], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055e424 : cmp byte ptr [rsi + 0x25], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007a7584 : cmp byte ptr [rsi - 0x76b70006], ah ; ret
0xffffff8000654871 : cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039a330 : cmp byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000754d79 : cmp ch, 0xff ; dec dword ptr [rax + 0x63] ; ret
0xffffff80004f2907 : cmp ch, 0xff ; jmp qword ptr [rax]
0xffffff80007817d2 : cmp ch, al ; pop rax ; mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000884fc4 : cmp ch, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008dca22 : cmp ch, bh ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006ff915 : cmp ch, byte ptr [rax + rax] ; jmp 0xffffff80006ff94f
0xffffff8000423c16 : cmp ch, byte ptr [rcx + 0x63] ; add byte ptr [rcx], bh ; ret 0x4c0f
0xffffff800083d6f5 : cmp ch, byte ptr [rcx] ; ret 0x1a76
0xffffff800069da4a : cmp ch, byte ptr [rdx + 0x3d] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000537302 : cmp ch, byte ptr [rsi - 0x43] ; dec dword ptr [rax - 0x39] ; ret 0xfff8
0xffffff8000b3b436 : cmp ch, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b8b04 : cmp ch, dh ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008c9c0f : cmp cl, byte ptr [rax - 0x7d] ; ret
0xffffff80004918ae : cmp cl, byte ptr [rax - 0x7d] ; ret 0x44fe
0xffffff80004f99bc : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff80004a24ca : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4818
0xffffff800066db0b : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4902
0xffffff80002aad3a : cmp cl, byte ptr [rax - 0x7f] ; ret
0xffffff8000839a7b : cmp cl, byte ptr [rax - 1] ; ret
0xffffff800066daf0 : cmp cl, byte ptr [rax - 1] ; ret 0x1aeb
0xffffff800066da32 : cmp cl, byte ptr [rax - 1] ; ret 0x2c6
0xffffff800066db25 : cmp cl, byte ptr [rax - 1] ; ret 0x42c6
0xffffff800066da38 : cmp cl, byte ptr [rax - 1] ; ret 0xba41
0xffffff80003b1ed0 : cmp cl, byte ptr [rcx - 0x762fce10] ; ret
0xffffff800063616b : cmp cl, byte ptr [rcx - 1] ; ret
0xffffff8000772702 : cmp cl, byte ptr [rcx] ; ret 0x45ff
0xffffff8000392adf : cmp cl, cl ; ret
0xffffff800061dabd : cmp dh, 0xff ; inc dword ptr [rbx - 0xf35b] ; call qword ptr [rax]
0xffffff800083aa4a : cmp dh, 0xff ; inc dword ptr [rcx - 1] ; ret
0xffffff80004be870 : cmp dh, 0xff ; ljmp [rcx] ; ret
0xffffff800026254f : cmp dh, al ; cmp al, 1 ; pop rbp ; ret
0xffffff80007b6bc4 : cmp dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c9a64 : cmp dh, bh ; push rax ; add byte ptr [rax - 0x77], cl ; ret 0x70e8
0xffffff8000793e05 : cmp dh, byte ptr [rax + 0x458948ff] ; ror byte ptr [rax - 0x77], 1 ; ret
0xffffff80002991a4 : cmp dh, byte ptr [rbp - 0x37] ; mov eax, ecx ; pop rbp ; ret
0xffffff800029f7a2 : cmp dh, byte ptr [rbp] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800042a7da : cmp dh, cl ; inc dword ptr [rax - 0x68673] ; jmp qword ptr [rax]
0xffffff8000452fd7 : cmp dh, dh ; ret
0xffffff800035a0d4 : cmp dh, dh ; ret 0xf02
0xffffff80004b4915 : cmp dh, dh ; ret 0xf0d
0xffffff80004db2d7 : cmp dh, dh ; ret 0xf30
0xffffff800084a07e : cmp dl, 0xff ; dec dword ptr [rax - 0x7f] ; ret 0xfff
0xffffff80007cc68a : cmp dl, ah ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80005d0272 : cmp dl, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f83f6 : cmp dl, bh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800065f621 : cmp dl, bl ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006784b9 : cmp dword ptr [r14], eax ; call 0xffffff800029afa7
0xffffff80004fa077 : cmp dword ptr [rax + 0x38], edi ; je 0xffffff80004fa086 ; xor eax, eax ; pop rbp ; ret
0xffffff800066d89d : cmp dword ptr [rax + 0x39], ecx ; ret 0x2774
0xffffff8000766f2c : cmp dword ptr [rax + rax], -0x18 ; or al, 0xc1 ; ret 0x48ff
0xffffff80005cede6 : cmp dword ptr [rax + rax], -0x47 ; ret
0xffffff8000389827 : cmp dword ptr [rax - 0x75], ecx ; jnp 0xffffff8000389841 ; call qword ptr [rax]
0xffffff800041ec5e : cmp dword ptr [rax - 0x77], ecx ; cmp eax, 0x6b60fa ; pop rbp ; ret
0xffffff800081bf04 : cmp dword ptr [rax - 0x77], ecx ; fucomip st(0) ; ret
0xffffff80003cfcbd : cmp dword ptr [rax - 0x77], ecx ; ret
0xffffff80006446b5 : cmp dword ptr [rax - 0x77], ecx ; ret 0x14d
0xffffff80005a1e6e : cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff80007f4bb4 : cmp dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], 0x48 ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff800046d003 : cmp dword ptr [rax - 0xe], esp ; push rdi ; ret
0xffffff800029ead8 : cmp dword ptr [rax - 1], ecx ; add eax, 0x78d548 ; pop rbp ; ret
0xffffff800028e558 : cmp dword ptr [rax - 1], ecx ; add eax, 0x79dac8 ; pop rbp ; ret
0xffffff800069bac9 : cmp dword ptr [rax - 1], ecx ; ret 0xff48
0xffffff8000377002 : cmp dword ptr [rax], 0x5d068948 ; ret
0xffffff800075664a : cmp dword ptr [rax], 0xc9eee800 ; ret
0xffffff8000793fe1 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000740bd7 : cmp dword ptr [rax], eax ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800073d78f : cmp dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000745012 : cmp dword ptr [rax], eax ; pop rbp ; ret
0xffffff80006db6ba : cmp dword ptr [rax], eax ; push rax ; ret
0xffffff8000631147 : cmp dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000299c07 : cmp dword ptr [rax], esp ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000299c06 : cmp dword ptr [rax], r12d ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80007e1249 : cmp dword ptr [rbp + 0x29], eax ; ret 0x6349
0xffffff8000345c08 : cmp dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff80003621bf : cmp dword ptr [rbx + 0x41], ebx ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002588b7 : cmp dword ptr [rbx + 8], eax ; je 0xffffff80002588ca ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002fdef7 : cmp dword ptr [rbx + 8], eax ; je 0xffffff80002fdf0a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003343e4 : cmp dword ptr [rbx], 0 ; je 0xffffff80003343f7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000345c04 : cmp dword ptr [rbx], 0 ; js 0xffffff8000345c4b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000345cb4 : cmp dword ptr [rbx], 0 ; js 0xffffff8000345cfb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008126e3 : cmp dword ptr [rbx], ebp ; xor al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000393173 : cmp dword ptr [rbx], esp ; js 0xffffff800039317c ; leave ; ret
0xffffff80004cb295 : cmp dword ptr [rcx + 0x10], 0 ; jne 0xffffff80004cb2a6 ; xor eax, eax ; pop rbp ; ret
0xffffff800072f14b : cmp dword ptr [rcx + 0x10], edx ; je 0xffffff800072f158 ; pop rbp ; ret
0xffffff800072f2c0 : cmp dword ptr [rcx + 8], 0 ; je 0xffffff800072f2cf ; pop rbp ; ret
0xffffff800080f9b7 : cmp dword ptr [rcx + 8], 0 ; sete al ; pop rbp ; ret
0xffffff80002da9f8 : cmp dword ptr [rcx - 0x3b7cb800], eax ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007227e3 : cmp dword ptr [rcx - 0x45], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d11ee : cmp dword ptr [rcx - 0x75], eax ; and byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000b3b349 : cmp dword ptr [rcx], -0x33 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070a816 : cmp dword ptr [rcx], 0x1000001 ; xor eax, eax ; pop rbp ; ret
0xffffff800073f2ad : cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003bad3e : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000621145 : cmp dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ed977 : cmp dword ptr [rcx], ebx ; and dword ptr [rax], eax ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0xffffff800076dd93 : cmp dword ptr [rcx], esp ; cmp al, 0 ; call 0xffffff8000393047
0xffffff80003a49ab : cmp dword ptr [rdi + 0x10], 0 ; jne 0xffffff80003a49af ; ret
0xffffff80007d1907 : cmp dword ptr [rdi + 0x14], esi ; jbe 0xffffff80007d1918 ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff8000900987 : cmp dword ptr [rdi + 0x23], ebp ; add byte ptr [rax - 1], cl ; ret
0xffffff8000717094 : cmp dword ptr [rdi + 0x2c], 0 ; sete al ; pop rbp ; ret
0xffffff8000293675 : cmp dword ptr [rdi + 8], 0 ; jne 0xffffff8000293684 ; pop rbp ; ret
0xffffff80003a48d1 : cmp dword ptr [rdi + 8], 0 ; jne 0xffffff80003a48d5 ; ret
0xffffff80002ff3c3 : cmp dword ptr [rdi + 8], ecx ; jne 0xffffff80002ff3d4 ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80008cf400 : cmp dword ptr [rdi + rbx - 1], esi ; ret
0xffffff8000663823 : cmp dword ptr [rdi - 0x3fceffcc], eax ; call 0xffffff800028e4a9
0xffffff80005dfdcc : cmp dword ptr [rdi], 0 ; je 0xffffff80005dfddd ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80004953b5 : cmp dword ptr [rdi], esi ; jge 0xffffff80004953c4 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80004953a5 : cmp dword ptr [rdi], esi ; jle 0xffffff80004953b4 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff8000357a53 : cmp dword ptr [rdx - 0x76b70005], edx ; ret
0xffffff8000641f15 : cmp dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80006572e2 : cmp dword ptr [rip - 0x173fcf00], esi ; mov ah, 0x71 ; ret
0xffffff800028a850 : cmp dword ptr [rsi + rcx*8], 0 ; je 0xffffff800028a861 ; xor eax, eax ; pop rbp ; ret
0xffffff800028a8a0 : cmp dword ptr [rsi + rcx*8], 0 ; je 0xffffff800028a8b1 ; xor eax, eax ; pop rbp ; ret
0xffffff80006783f7 : cmp dword ptr [rsi], eax ; call 0xffffff800029afa6
0xffffff80006547e1 : cmp dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d17ee : cmp dword ptr [rsi], esp ; add byte ptr [rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800074b7f7 : cmp dword ptr cs:[rax], eax ; pop rbp ; ret
0xffffff800079ddb2 : cmp dword ptr gs:[rax], eax ; pop rbp ; ret
0xffffff80003a6e84 : cmp eax, 0x100 ; jne 0xffffff80003a6e48 ; pop rbp ; ret
0xffffff80006551d9 : cmp eax, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c3093 : cmp eax, 0x158d4800 ; ret
0xffffff8000451ecc : cmp eax, 0x16 ; jb 0xffffff8000451edf ; movzx eax, si ; pop rbp ; ret
0xffffff8000812504 : cmp eax, 0x1d9067 ; xor eax, eax ; call 0xffffff800080e769
0xffffff80008dc642 : cmp eax, 0x208e49 ; call 0xffffff8000858907
0xffffff8000b476cf : cmp eax, 0x21492ffe ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80008790d6 : cmp eax, 0x21dd75 ; pop rbp ; ret
0xffffff800086c7ab : cmp eax, 0x278ce0 ; call 0xffffff8000858a27
0xffffff80008667ff : cmp eax, 0x27ec34 ; call 0xffffff8000392a47
0xffffff8000866780 : cmp eax, 0x27ecb3 ; call 0xffffff8000392a47
0xffffff80008a6e15 : cmp eax, 0x28e36e ; call 0xffffff8000393047
0xffffff80008a6e07 : cmp eax, 0x28e37c ; call 0xffffff8000393047
0xffffff80007e2b62 : cmp eax, 0x2a9d5c ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0xffffff8000775894 : cmp eax, 0x2b7757 ; call 0xffffff800039a708
0xffffff8000772ac2 : cmp eax, 0x2ba529 ; call 0xffffff800039a708
0xffffff80006ff913 : cmp eax, 0x2c3a62 ; jmp 0xffffff80006ff951
0xffffff80006ff923 : cmp eax, 0x2c3f42 ; jmp 0xffffff80006ff951
0xffffff80006ff933 : cmp eax, 0x2c3fa5 ; jmp 0xffffff80006ff951
0xffffff800081eb86 : cmp eax, 0x2c56cd ; sete al ; pop rbp ; ret
0xffffff80006e2632 : cmp eax, 0x2dd8d4 ; xor eax, eax ; call 0xffffff800029e859
0xffffff8000852479 : cmp eax, 0x2e4039 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000845635 : cmp eax, 0x2efe76 ; xor eax, eax ; pop rbp ; ret
0xffffff8000326fc7 : cmp eax, 0x30c48348 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800068981b : cmp eax, 0x327cba ; jmp 0xffffff80006897ea
0xffffff80007b3da6 : cmp eax, 0x32fe15 ; pop rbp ; ret
0xffffff800066072d : cmp eax, 0x34c357 ; call 0xffffff800028e1b8
0xffffff800066039d : cmp eax, 0x34c4f1 ; call 0xffffff800028e1b8
0xffffff80005c26db : cmp eax, 0x358d4800 ; ret 0x3d24
0xffffff800076b568 : cmp eax, 0x3732d3 ; call 0xffffff8000393048
0xffffff800076b52e : cmp eax, 0x37330d ; call 0xffffff8000392a48
0xffffff800076aac1 : cmp eax, 0x373d7a ; call 0xffffff8000393048
0xffffff800076aa31 : cmp eax, 0x373e0a ; call 0xffffff8000392a48
0xffffff800076a929 : cmp eax, 0x373f12 ; call 0xffffff8000393048
0xffffff800076a8fc : cmp eax, 0x373f3f ; call 0xffffff8000393048
0xffffff800076a8a2 : cmp eax, 0x373f99 ; call 0xffffff8000393048
0xffffff800076a872 : cmp eax, 0x373fc9 ; call 0xffffff8000392a48
0xffffff800076a830 : cmp eax, 0x37400b ; call 0xffffff8000392a48
0xffffff800076a683 : cmp eax, 0x3741b8 ; call 0xffffff8000393048
0xffffff800076a632 : cmp eax, 0x374209 ; call 0xffffff8000392a48
0xffffff800076a520 : cmp eax, 0x37431b ; call 0xffffff8000393048
0xffffff800076a4b9 : cmp eax, 0x374382 ; call 0xffffff8000393048
0xffffff800076a406 : cmp eax, 0x374435 ; call 0xffffff8000393048
0xffffff800076a3ef : cmp eax, 0x37444c ; call 0xffffff8000393048
0xffffff800076a396 : cmp eax, 0x3744a5 ; call 0xffffff8000393048
0xffffff800076a32f : cmp eax, 0x37450c ; call 0xffffff8000392a48
0xffffff8000769d5c : cmp eax, 0x374adf ; call 0xffffff8000393048
0xffffff8000769d3c : cmp eax, 0x374aff ; call 0xffffff8000392a48
0xffffff8000769d23 : cmp eax, 0x374b18 ; call 0xffffff8000393048
0xffffff8000769cfc : cmp eax, 0x374b3f ; call 0xffffff8000393048
0xffffff8000769cb7 : cmp eax, 0x374b84 ; call 0xffffff8000392a48
0xffffff8000769c83 : cmp eax, 0x374bb8 ; call 0xffffff8000393048
0xffffff8000769be5 : cmp eax, 0x374c56 ; call 0xffffff8000393048
0xffffff8000769b81 : cmp eax, 0x374cba ; call 0xffffff8000392a48
0xffffff8000769a8d : cmp eax, 0x374dae ; call 0xffffff8000393048
0xffffff8000769a06 : cmp eax, 0x374e35 ; call 0xffffff8000392a48
0xffffff80007699db : cmp eax, 0x374e60 ; call 0xffffff8000393048
0xffffff800076996c : cmp eax, 0x374ecf ; call 0xffffff8000392a48
0xffffff80007698bb : cmp eax, 0x374f80 ; call 0xffffff8000393048
0xffffff800076981f : cmp eax, 0x37501c ; call 0xffffff8000393048
0xffffff80007697cf : cmp eax, 0x37506c ; call 0xffffff8000393048
0xffffff80007696b9 : cmp eax, 0x375182 ; call 0xffffff8000393048
0xffffff8000769512 : cmp eax, 0x375329 ; call 0xffffff8000393048
0xffffff80007693da : cmp eax, 0x375461 ; call 0xffffff8000393048
0xffffff80007691e4 : cmp eax, 0x375657 ; call 0xffffff8000392a48
0xffffff80007691b7 : cmp eax, 0x375684 ; call 0xffffff8000393048
0xffffff8000769092 : cmp eax, 0x3757a9 ; call 0xffffff8000392a48
0xffffff800076835e : cmp eax, 0x3764dd ; call 0xffffff8000392a48
0xffffff80007682a4 : cmp eax, 0x376597 ; call 0xffffff8000393048
0xffffff8000767f91 : cmp eax, 0x3768aa ; call 0xffffff8000392a48
0xffffff8000767f0a : cmp eax, 0x376931 ; call 0xffffff8000393048
0xffffff8000767ebc : cmp eax, 0x37697f ; call 0xffffff8000392a48
0xffffff8000767db9 : cmp eax, 0x376a42 ; call 0xffffff8000392798
0xffffff8000767d87 : cmp eax, 0x376a74 ; call 0xffffff8000392608
0xffffff8000767a60 : cmp eax, 0x376d9b ; call 0xffffff8000392798
0xffffff8000767a19 : cmp eax, 0x376de2 ; call 0xffffff8000392608
0xffffff8000767659 : cmp eax, 0x377192 ; call 0xffffff8000392a48
0xffffff800076730b : cmp eax, 0x3774e0 ; call 0xffffff8000392a48
0xffffff80007672df : cmp eax, 0x37750c ; call 0xffffff8000393048
0xffffff8000767238 : cmp eax, 0x3775b3 ; call 0xffffff8000393048
0xffffff800076721c : cmp eax, 0x3775cf ; call 0xffffff8000392a48
0xffffff8000765070 : cmp eax, 0x37978b ; call 0xffffff8000392798
0xffffff800076503b : cmp eax, 0x3797c0 ; call 0xffffff8000392798
0xffffff8000764f3b : cmp eax, 0x3798c0 ; call 0xffffff80003924d8
0xffffff8000764a73 : cmp eax, 0x379d88 ; call 0xffffff8000392798
0xffffff800076474d : cmp eax, 0x37a0ae ; call 0xffffff80003924d8
0xffffff80007646ca : cmp eax, 0x37a131 ; call 0xffffff8000392798
0xffffff800076467c : cmp eax, 0x37a17f ; call 0xffffff80003924d8
0xffffff800076794d : cmp eax, 0x37c746 ; call 0xffffff8000393048
0xffffff8000767920 : cmp eax, 0x37c773 ; call 0xffffff8000392a48
0xffffff80007d2ff7 : cmp eax, 0x39002b8d ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff8000740bd4 : cmp eax, 0x39c80e ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000786d6f : cmp eax, 0x3a851c ; call 0xffffff8000393047
0xffffff80005e530b : cmp eax, 0x3b5641 ; jmp 0xffffff80005e52da
0xffffff80006b67d8 : cmp eax, 0x3be433 ; call 0xffffff8000392a47
0xffffff8000770d9b : cmp eax, 0x3be4f8 ; call 0xffffff8000393048
0xffffff8000770d7b : cmp eax, 0x3be518 ; call 0xffffff8000392a48
0xffffff800076ea40 : cmp eax, 0x3c148b ; call 0xffffff8000392938
0xffffff800076d393 : cmp eax, 0x3c1ef8 ; call 0xffffff8000393048
0xffffff800076d37f : cmp eax, 0x3c1f0c ; call 0xffffff8000392a48
0xffffff800076de0b : cmp eax, 0x3c20c0 ; call 0xffffff8000393048
0xffffff800076dd92 : cmp eax, 0x3c2139 ; call 0xffffff8000393048
0xffffff800076dd4e : cmp eax, 0x3c217d ; call 0xffffff8000392938
0xffffff800076cf9f : cmp eax, 0x3c22f4 ; call 0xffffff8000393048
0xffffff800076cf82 : cmp eax, 0x3c2311 ; call 0xffffff8000392a48
0xffffff800076cf6c : cmp eax, 0x3c2327 ; call 0xffffff8000393048
0xffffff8000766f9b : cmp eax, 0x3c82f8 ; call 0xffffff8000392a48
0xffffff8000766f6e : cmp eax, 0x3c831d ; call 0xffffff8000393048
0xffffff8000766f5a : cmp eax, 0x3c8331 ; call 0xffffff8000392a48
0xffffff8000766f4a : cmp eax, 0x3c8341 ; call 0xffffff8000393048
0xffffff8000766f36 : cmp eax, 0x3c8355 ; call 0xffffff8000392a48
0xffffff8000766f2a : cmp eax, 0x3c8369 ; call 0xffffff8000393048
0xffffff8000766f04 : cmp eax, 0x3c838f ; call 0xffffff8000392a48
0xffffff8000768bc3 : cmp eax, 0x3cba5f ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca20
0xffffff8000746d73 : cmp eax, 0x3e8518 ; call 0xffffff8000393047
0xffffff8000495496 : cmp eax, 0x3f ; jl 0xffffff8000495456 ; pop rbp ; ret
0xffffff8000388b2f : cmp eax, 0x40 ; jne 0xffffff8000388b26 ; pop rbp ; ret
0xffffff8000388b67 : cmp eax, 0x40 ; jne 0xffffff8000388b56 ; pop rbp ; ret
0xffffff80002ab245 : cmp eax, 0x415c415b ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff8000541ecf : cmp eax, 0x448af3 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000541eea : cmp eax, 0x448b48 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000541f2c : cmp eax, 0x448b7a ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000541f45 : cmp eax, 0x448bd9 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800068c380 : cmp eax, 0x44fcc3 ; call 0xffffff80003985e7
0xffffff8000252e23 : cmp eax, 0x45 ; jne 0xffffff8000252dd9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061027b : cmp eax, 0x4580a7 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80002615cf : cmp eax, 0x468b008d ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80005cf57f : cmp eax, 0x48000005 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80008383df : cmp eax, 0x48002c3e ; mov eax, dword ptr [rax] ; pop rbp ; ret
0xffffff800074479f : cmp eax, 0x48003eb2 ; test eax, eax ; je 0xffffff80007447b3 ; call rax
0xffffff80005e673e : cmp eax, 0x482565 ; call 0xffffff8000392a47
0xffffff80005d791a : cmp eax, 0x49312c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff25
0xffffff8000586813 : cmp eax, 0x4e2490 ; call 0xffffff8000392a47
0xffffff80006326bb : cmp eax, 0x4f231c ; pop rbp ; ret
0xffffff800063269b : cmp eax, 0x4f232c ; pop rbp ; ret
0xffffff800063267b : cmp eax, 0x4f2354 ; pop rbp ; ret
0xffffff800063265b : cmp eax, 0x4f2364 ; pop rbp ; ret
0xffffff800062b97b : cmp eax, 0x4f8394 ; pop rbp ; ret
0xffffff800062b95b : cmp eax, 0x4f83a4 ; pop rbp ; ret
0xffffff800062b93b : cmp eax, 0x4f83cc ; pop rbp ; ret
0xffffff800062b91b : cmp eax, 0x4f83dc ; pop rbp ; ret
0xffffff80005d6553 : cmp eax, 0x5034e4 ; call 0xffffff8000392797
0xffffff8000618c5f : cmp eax, 0x50b2cc ; call 0xffffff80002d4ef7
0xffffff8000554271 : cmp eax, 0x514a9e ; xor esi, esi ; call rax
0xffffff800050e46e : cmp eax, 0x51eb7d ; call 0xffffff800039a707
0xffffff80005f57c0 : cmp eax, 0x52e292 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800053677f : cmp eax, 0x532524 ; call 0xffffff8000392a47
0xffffff80005367ff : cmp eax, 0x53314c ; call 0xffffff8000392a47
0xffffff80004225c4 : cmp eax, 0x54c385 ; xor eax, eax ; call 0xffffff800029e859
0xffffff8000566e2b : cmp eax, 0x5717d0 ; call 0xffffff8000393047
0xffffff8000566e0a : cmp eax, 0x5717f1 ; call 0xffffff8000393047
0xffffff8000566d55 : cmp eax, 0x5718a6 ; call 0xffffff8000393047
0xffffff8000546da0 : cmp eax, 0x59155b ; call 0xffffff8000393047
0xffffff800053648c : cmp eax, 0x5a1b0f ; call 0xffffff8000392797
0xffffff8000574da8 : cmp eax, 0x5acc3a ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff8000515a62 : cmp eax, 0x5bc03100 ; pop r14 ; pop rbp ; ret
0xffffff8000411ec2 : cmp eax, 0x5c1c2f ; call 0xffffff800028e1b7
0xffffff80007d044f : cmp eax, 0x5d000011 ; ret
0xffffff80008e25c7 : cmp eax, 0x5d002550 ; ret
0xffffff80008d6ab7 : cmp eax, 0x5d00260a ; ret
0xffffff800085cdc7 : cmp eax, 0x5d002d98 ; ret
0xffffff80003a9d87 : cmp eax, 0x5d00727e ; ret
0xffffff80004b6df3 : cmp eax, 0x61fbb8 ; call 0xffffff8000393047
0xffffff80004b6692 : cmp eax, 0x620319 ; call 0xffffff8000392937
0xffffff8000321ec1 : cmp eax, 0x62daa6 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800077a446 : cmp eax, 0x6348ffb1 ; ret
0xffffff80004b7bad : cmp eax, 0x63590e ; mov rax, rdi ; pop rbp ; ret
0xffffff80004d6dd6 : cmp eax, 0x642f15 ; call 0xffffff8000393047
0xffffff80004d6d43 : cmp eax, 0x642fa8 ; call 0xffffff8000393047
0xffffff8000410f91 : cmp eax, 0x64a6fd ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0xffffff80004c67e6 : cmp eax, 0x653505 ; pop rbp ; jmp 0xffffff8000392a48
0xffffff80004c098a : cmp eax, 0x659278 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x40f6
0xffffff800075c25e : cmp eax, 0x67dbe800 ; ret
0xffffff80002c1f45 : cmp eax, 0x680651 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80003b0fa5 : cmp eax, 0x6a1332 ; pop rbp ; ret
0xffffff80003a2589 : cmp eax, 0x6aec2a ; pop rbp ; ret
0xffffff80003a254b : cmp eax, 0x6aec60 ; pop rbp ; ret
0xffffff800037c6f5 : cmp eax, 0x6b08ce ; pop rbp ; ret
0xffffff800041ec61 : cmp eax, 0x6b60fa ; pop rbp ; ret
0xffffff8000369045 : cmp eax, 0x6c3e82 ; pop rbp ; ret
0xffffff800075c272 : cmp eax, 0x6dc7e800 ; ret
0xffffff80003b1807 : cmp eax, 0x720d3c ; jmp 0xffffff80003b181e
0xffffff80003ac1f5 : cmp eax, 0x7260a6 ; call rax
0xffffff80003ac105 : cmp eax, 0x726196 ; call rax
0xffffff80003ac009 : cmp eax, 0x726292 ; call rax
0xffffff80003aade4 : cmp eax, 0x726dcf ; call rax
0xffffff80003a9d86 : cmp eax, 0x727e3d ; pop rbp ; ret
0xffffff80003a92ad : cmp eax, 0x728906 ; call rax
0xffffff80003a8566 : cmp eax, 0x7294dd ; pop rbp ; ret
0xffffff80003a2a80 : cmp eax, 0x72eed7 ; pop rbp ; ret
0xffffff8000287cfc : cmp eax, 0x738b138b ; add al, 0xff ; ret 0x6666
0xffffff80003c5d0f : cmp eax, 0x73bd3f ; add dword ptr [rbp + 0x2f], esi ; pop rbp ; ret
0xffffff80003c05c9 : cmp eax, 0x745729 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80003b1bf5 : cmp eax, 0x74fc1e ; pop rbp ; ret
0xffffff80003b1865 : cmp eax, 0x74ffb1 ; add esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff80005702a7 : cmp eax, 0x7506fa83 ; sub al, 0x89 ; ret 0xc283
0xffffff80003acbb6 : cmp eax, 0x752c24 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff80003aafc9 : cmp eax, 0x753b62 ; call 0xffffff8000397207
0xffffff80003a61a7 : cmp eax, 0x75910c ; call 0xffffff80003923e7
0xffffff80002af995 : cmp eax, 0x77c8ca ; pop rbp ; ret
0xffffff80002ae403 : cmp eax, 0x77ebe8 ; call 0xffffff800039a707
0xffffff80003767f1 : cmp eax, 0x786252 ; call 0xffffff8000392a47
0xffffff800029e904 : cmp eax, 0x78d70e ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca08
0xffffff8000297db5 : cmp eax, 0x79432a ; pop rbp ; ret
0xffffff8000346dde : cmp eax, 0x7b34ad ; call 0xffffff8000393047
0xffffff80002e8cbb : cmp eax, 0x7d65a8 ; xor esi, esi ; call 0xffffff80002d4ef9
0xffffff80002e8bf5 : cmp eax, 0x7d666e ; xor esi, esi ; call 0xffffff80002d4ef9
0xffffff80002ce374 : cmp eax, 0x7f0b27 ; mov rsi, rbx ; call rax
0xffffff80002a5b91 : cmp eax, 0x800 ; jne 0xffffff80002a5b58 ; pop rbp ; ret
0xffffff8000498b8d : cmp eax, 0x8348005c ; ret 0x3110
0xffffff80002b251a : cmp eax, 0x83a060 ; add byte ptr [rdi], cl ; lahf ; ret
0xffffff800029d486 : cmp eax, 0x84e6d5 ; pop rbp ; ret
0xffffff8000290705 : cmp eax, 0x85b47a ; xor eax, eax ; pop rbp ; ret
0xffffff8000288a4c : cmp eax, 0x87098e ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf685
0xffffff80004e319f : cmp eax, 0x89000106 ; ret
0xffffff80002884ef : cmp eax, 0x890001e5 ; ret
0xffffff80003e10ff : cmp eax, 0x89000694 ; ret
0xffffff8000370613 : cmp eax, 0x89006bc9 ; ret 0xca31
0xffffff80003e4e95 : cmp eax, 0x89410006 ; ret 0x8545
0xffffff80006043ed : cmp eax, 0x8941001b ; fmul dword ptr [rax - 0x77] ; ret
0xffffff8000551940 : cmp eax, 0x89480000 ; ret
0xffffff8000654372 : cmp eax, 0x89480016 ; ret
0xffffff80004c657b : cmp eax, 0x8948002b ; ret
0xffffff8000335cb1 : cmp eax, 0x8948007c ; ret 0xc148
0xffffff8000724ba3 : cmp eax, 0x8948ffbb ; ret
0xffffff8000544b37 : cmp eax, 0x8948ffd9 ; ret
0xffffff80008d2b6b : cmp eax, 0x8948fff4 ; ret
0xffffff80008b2b90 : cmp eax, 0x8948fff6 ; ret
0xffffff80007b664d : cmp eax, 0x8948fffe ; ret
0xffffff800086669f : cmp eax, 0x89ffa3d2 ; ret
0xffffff80007a1fcf : cmp eax, 0x89ffaf7d ; ret
0xffffff800048083f : cmp eax, 0x89fff666 ; ret
0xffffff80007088cf : cmp eax, 0x89fffcc1 ; ret
0xffffff80002fcd7f : cmp eax, 0x89ffffdb ; ret
0xffffff8000744284 : cmp eax, 0x958d4800 ; call 0xffffff8000744295
0xffffff800075f225 : cmp eax, 0x95a4e800 ; ret
0xffffff80006fe774 : cmp eax, 0xd8d4800 ; ret
0xffffff80004b5e94 : cmp eax, 0xe8004c02 ; ret
0xffffff80005b7085 : cmp eax, 0xe8c03100 ; ret 0xce77
0xffffff8000363bff : cmp eax, 0xe9003e70 ; ret
0xffffff800042038f : cmp eax, 0xe9ffe843 ; ret
0xffffff80008cf4ca : cmp eax, 0xf41c3ff ; mov bh, 0x47 ; xor byte ptr [rcx], bh ; ret
0xffffff800069c8ab : cmp eax, 0xfc08500 ; mov fs, word ptr [rax] ; idiv edi ; call rcx
0xffffff800067b953 : cmp eax, 0xfdb8545 ; xchg eax, esp ; ret
0xffffff80008b1789 : cmp eax, 0xffff ; sete al ; pop rbp ; ret
0xffffff8000698b5f : cmp eax, 0xffffbf59 ; ret
0xffffff80006d6489 : cmp eax, 1 ; bswap eax ; adc eax, 0 ; pop rbp ; ret
0xffffff800027fd27 : cmp eax, 1 ; jbe 0xffffff800027fd34 ; pop rbp ; ret
0xffffff8000371075 : cmp eax, 1 ; jg 0xffffff8000371046 ; pop rbp ; ret
0xffffff800029bd36 : cmp eax, 1 ; jne 0xffffff800029bd5d ; pop rbp ; ret
0xffffff800078c6f6 : cmp eax, 2 ; jge 0xffffff800078c6e6 ; pop rbp ; ret
0xffffff80004fa37e : cmp eax, 2 ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80005f49a5 : cmp eax, 2 ; setg dl ; jmp 0xffffff80005f49b9
0xffffff800043da0b : cmp eax, 3 ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80005492bc : cmp eax, 4 ; jbe 0xffffff80005492c9 ; pop rbp ; ret
0xffffff800055fdcb : cmp eax, 4 ; jl 0xffffff800055fdb9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002cc624 : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006b67db : cmp eax, dword ptr [rax] ; call 0xffffff8000392a44
0xffffff8000770d7e : cmp eax, dword ptr [rax] ; call 0xffffff8000392a45
0xffffff8000770d7e : cmp eax, dword ptr [rax] ; call 0xffffff8000392a49
0xffffff8000770d9e : cmp eax, dword ptr [rax] ; call 0xffffff8000393045
0xffffff80007760c2 : cmp eax, dword ptr [rax] ; call 0xffffff80003987d5
0xffffff80003343e5 : cmp eax, dword ptr [rax] ; je 0xffffff80003343f6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005e530e : cmp eax, dword ptr [rax] ; jmp 0xffffff80005e52d7
0xffffff8000345c05 : cmp eax, dword ptr [rax] ; js 0xffffff8000345c4a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000345cb5 : cmp eax, dword ptr [rax] ; js 0xffffff8000345cfa ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000651493 : cmp eax, dword ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff8000656470 : cmp eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80008e60fd : cmp eax, dword ptr [rbx + 0xc] ; jne 0xffffff80008e6110 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c0e48 : cmp eax, dword ptr [rbx + rax*4] ; ret
0xffffff800034f456 : cmp eax, dword ptr [rcx + 0x29] ; ret 0x3d83
0xffffff800088d81e : cmp eax, dword ptr [rdi + 0x30] ; sete al ; pop rbp ; ret
0xffffff80008e7221 : cmp eax, dword ptr [rdi - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008982dd : cmp eax, dword ptr [rip + 0x1fec65] ; setne dl ; jmp 0xffffff80008982f2
0xffffff800033849a : cmp eax, dword ptr [rip + 0x7c16b8] ; jne 0xffffff80003384ad ; pop rbp ; ret
0xffffff800082bb39 : cmp eax, dword ptr [rsi + 0x10] ; sete al ; pop rbp ; ret
0xffffff8000847281 : cmp eax, dword ptr [rsi] ; add bh, bh ; ret
0xffffff8000555d89 : cmp eax, dword ptr [rsi] ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff8000589ea7 : cmp eax, dword ptr [rsi] ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800039f25b : cmp eax, ebx ; jb 0xffffff800039f258 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ad44b : cmp eax, ecx ; jl 0xffffff80007ad445 ; pop rbp ; ret
0xffffff800051bd81 : cmp eax, ecx ; mov eax, 0x16 ; cmove eax, edx ; pop rbp ; ret
0xffffff800071dce2 : cmp eax, ecx ; mov eax, 0xffff8024 ; cmovbe eax, edx ; pop rbp ; ret
0xffffff80003ab793 : cmp eax, ecx ; setb dl ; movzx eax, dl ; pop rbp ; ret
0xffffff80003a2d9c : cmp eax, edi ; jne 0xffffff80003a2dab ; xor eax, eax ; pop rbp ; ret
0xffffff800050fc66 : cmp eax, edx ; cmovg eax, edx ; pop rbp ; ret
0xffffff800087966b : cmp eax, edx ; cmovg ecx, edx ; sub eax, ecx ; pop rbp ; ret
0xffffff80005d02d6 : cmp eax, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039f736 : cmp eax, edx ; jb 0xffffff800039f715 ; pop rbp ; ret
0xffffff8000437959 : cmp eax, edx ; jb 0xffffff8000437968 ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80002d6062 : cmp eax, edx ; jbe 0xffffff80002d6048 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d6110 : cmp eax, edx ; jbe 0xffffff80002d60f8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003923ba : cmp eax, esi ; jb 0xffffff80003923a0 ; xor rax, rax ; pop r9 ; ret
0xffffff800071cd7b : cmp eax, esi ; jb 0xffffff800071cd75 ; pop rbp ; ret
0xffffff80004296bf : cmp eax, esi ; lea r8, [r8 + 1] ; jne 0xffffff8000429699 ; pop rbp ; ret
0xffffff800080e05c : cmp eax, esi ; sete al ; pop rbp ; ret
0xffffff80004571c1 : cmp ebp, 2 ; cmovg eax, edx ; jmp 0xffffff80004571e7
0xffffff800088161e : cmp ebp, dword ptr [rbx] ; add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff8000524de2 : cmp ebp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003c616d : cmp ebp, dword ptr [rcx] ; lea rax, [rcx + rax*4 + 4] ; pop rbp ; ret
0xffffff80003c619c : cmp ebp, dword ptr [rcx] ; pop rbp ; ret
0xffffff800083d8db : cmp ebp, dword ptr [rcx] ; ret 0x1e76
0xffffff80006dcc0f : cmp ebp, dword ptr [rcx] ; ret 0x8b4d
0xffffff80003ad530 : cmp ebp, dword ptr [rdx] ; call qword ptr [rax]
0xffffff80007a5037 : cmp ebp, eax ; jle 0xffffff80007a5041 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3b34a : cmp ebp, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d2067 : cmp ebp, ecx ; ret
0xffffff8000760af1 : cmp ebx, dword ptr [rsi] ; ret
0xffffff800038a4a4 : cmp ebx, eax ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002ade7f : cmp ebx, ecx ; jb 0xffffff80002ade34 ; pop rbp ; ret
0xffffff800079a138 : cmp ebx, esi ; jb 0xffffff800079a138 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008035d2 : cmp ecx, -1 ; je 0xffffff80008035df ; pop rbp ; ret
0xffffff800079db4c : cmp ecx, -1 ; jne 0xffffff800079db36 ; pop rbp ; ret
0xffffff80007a965a : cmp ecx, -1 ; jne 0xffffff80007a9656 ; pop rbp ; ret
0xffffff80002a6aee : cmp ecx, 0 ; cmove eax, edx ; jmp 0xffffff80002a6b02
0xffffff8000821d68 : cmp ecx, 0x10 ; jne 0xffffff8000821d56 ; pop rbp ; ret
0xffffff800083b172 : cmp ecx, 0x10 ; jne 0xffffff800083b166 ; pop rbp ; ret
0xffffff800083b2e5 : cmp ecx, 0x10 ; jne 0xffffff800083b2d6 ; pop rbp ; ret
0xffffff80006c59ce : cmp ecx, 0x100 ; jne 0xffffff80006c59a9 ; pop rbp ; ret
0xffffff80008c3c0c : cmp ecx, 0x1000000d ; jne 0xffffff80008c3c1f ; pop rbp ; ret
0xffffff80004f3cea : cmp ecx, 0x11 ; jne 0xffffff80004f3cd6 ; pop rbp ; ret
0xffffff80007888ef : cmp ecx, 0x1f ; jne 0xffffff80007888d6 ; pop rbp ; ret
0xffffff800073d901 : cmp ecx, 0x39 ; add byte ptr [rax + 0x21], cl ; fmul dword ptr [rax + 0x39] ; ret
0xffffff800063066f : cmp ecx, 1 ; je 0xffffff800063067e ; xor eax, eax ; pop rbp ; ret
0xffffff800075e449 : cmp ecx, 1 ; jg 0xffffff800075e428 ; xor eax, eax ; pop rbp ; ret
0xffffff8000389823 : cmp ecx, 1 ; jne 0xffffff800038986a ; mov rdi, qword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff8000397cba : cmp ecx, 1 ; jne 0xffffff8000397cd6 ; pop rbp ; ret
0xffffff8000397cfb : cmp ecx, 1 ; jne 0xffffff8000397d08 ; pop rbp ; ret
0xffffff80006b1724 : cmp ecx, 1 ; jne 0xffffff80006b1731 ; pop rbp ; ret
0xffffff8000397d2b : cmp ecx, 2 ; jne 0xffffff8000397d38 ; pop rbp ; ret
0xffffff800070545b : cmp ecx, 2 ; jne 0xffffff8000705468 ; pop rbp ; ret
0xffffff8000706d1f : cmp ecx, 2 ; jne 0xffffff8000706d32 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061d9ae : cmp ecx, 3 ; je 0xffffff800061d9cf ; mov rdi, r13 ; call rax
0xffffff8000776b30 : cmp ecx, 3 ; jne 0xffffff8000776afb ; jmp 0xffffff8000776b57
0xffffff80006daa67 : cmp ecx, 8 ; jl 0xffffff80006daa28 ; xor eax, eax ; pop rbp ; ret
0xffffff80006daad7 : cmp ecx, 8 ; jl 0xffffff80006daa98 ; xor eax, eax ; pop rbp ; ret
0xffffff80007f5e75 : cmp ecx, dword ptr [rax + 0x29] ; ret
0xffffff800052829c : cmp ecx, dword ptr [rax + 1] ; ret
0xffffff800028b230 : cmp ecx, dword ptr [rax + 1] ; ret 0x8d48
0xffffff80008e5704 : cmp ecx, dword ptr [rax - 0x3f] ; loopne 0xffffff80008e571a ; or rax, rdx ; pop rbp ; ret
0xffffff8000360556 : cmp ecx, dword ptr [rax - 0x3f] ; sti ; and byte ptr [rax + 1], cl ; ret
0xffffff800072f33f : cmp ecx, dword ptr [rax - 0x77] ; ret 0x2948
0xffffff8000278272 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800055337a : cmp ecx, dword ptr [rax - 1] ; ret 0xf631
0xffffff80002d75b2 : cmp ecx, dword ptr [rbx + 0x7551bb05] ; add byte ptr [rcx], cl ; ret
0xffffff800035241f : cmp ecx, dword ptr [rbx - 0x76b3c78d] ; imul eax ; ret 0xffdb
0xffffff8000b465d0 : cmp ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80002ffb0e : cmp ecx, dword ptr [rcx + 0x29] ; ret 0x694c
0xffffff80002bf609 : cmp ecx, dword ptr [rcx + 0x29] ; ret 0xc149
0xffffff80002b140d : cmp ecx, dword ptr [rcx + 0x63] ; fmul qword ptr [rax + 1] ; ret
0xffffff8000630811 : cmp ecx, dword ptr [rcx] ; sbb al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80007ae214 : cmp ecx, dword ptr [rdi + 4] ; jne 0xffffff80007ae1d7 ; pop rbx ; pop rbp ; ret
0xffffff800037c58c : cmp ecx, dword ptr [rdx + 8] ; jne 0xffffff800037c59b ; xor eax, eax ; pop rbp ; ret
0xffffff800062e18b : cmp ecx, eax ; cmova eax, ecx ; pop rbp ; ret
0xffffff80005d8679 : cmp ecx, eax ; cmova eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083ebd6 : cmp ecx, eax ; cmova ecx, eax ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff800041eed9 : cmp ecx, eax ; jae 0xffffff800041eea4 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800078cc65 : cmp ecx, eax ; jl 0xffffff800078cc55 ; pop rbp ; ret
0xffffff80002994a8 : cmp ecx, eax ; jle 0xffffff80002994b8 ; mov qword ptr [rdx], rcx ; pop rbx ; pop rbp ; ret
0xffffff80003667b6 : cmp ecx, eax ; jne 0xffffff80003667c9 ; test cl, cl ; jne 0xffffff80003667a9 ; pop rbp ; ret
0xffffff80003a7fde : cmp ecx, eax ; jne 0xffffff80003a7fe9 ; pop rbp ; ret
0xffffff800072bf3b : cmp ecx, eax ; mov eax, esi ; jb 0xffffff800072bf08 ; pop rbx ; pop rbp ; ret
0xffffff8000584833 : cmp ecx, eax ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff8000584842 : cmp ecx, eax ; setae al ; movzx eax, al ; pop rbp ; ret
0xffffff8000338281 : cmp ecx, eax ; setb al ; movzx eax, al ; pop rbp ; ret
0xffffff800082cbae : cmp ecx, eax ; setb al ; pop rbp ; ret
0xffffff800049f748 : cmp ecx, edi ; cmovge eax, edx ; pop rbp ; ret
0xffffff80008d90c5 : cmp ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002cb137 : cmp ecx, edi ; ja 0xffffff80002cb144 ; xor eax, eax ; pop rbp ; ret
0xffffff800083bb8f : cmp ecx, edx ; cmovb rax, rsi ; pop rbp ; ret
0xffffff800072c17d : cmp ecx, edx ; jae 0xffffff800072c155 ; pop rbp ; ret
0xffffff8000366c99 : cmp ecx, edx ; je 0xffffff8000366c85 ; pop rbp ; ret
0xffffff800038b1c9 : cmp ecx, edx ; je 0xffffff800038b1d6 ; xor eax, eax ; pop rbp ; ret
0xffffff800081e99e : cmp ecx, edx ; jle 0xffffff800081e9ab ; xor eax, eax ; pop rbp ; ret
0xffffff8000250029 : cmp ecx, edx ; jne 0xffffff8000250025 ; pop rbp ; ret
0xffffff800038aeec : cmp ecx, esi ; je 0xffffff800038aef9 ; xor eax, eax ; pop rbp ; ret
0xffffff800058476b : cmp ecx, esi ; setae al ; movzx eax, al ; pop rbp ; ret
0xffffff8000556d66 : cmp ecx, esp ; je 0xffffff8000556d8d ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff800072c17c : cmp ecx, r10d ; jae 0xffffff800072c156 ; pop rbp ; ret
0xffffff800072bf3a : cmp ecx, r8d ; mov eax, esi ; jb 0xffffff800072bf09 ; pop rbx ; pop rbp ; ret
0xffffff8000b4b4a5 : cmp edi, -1 ; mov edi, edi ; call qword ptr [rdi]
0xffffff800026e234 : cmp edi, -9 ; jbe 0xffffff800026e245 ; xor eax, eax ; pop rbp ; ret
0xffffff8000755f0d : cmp edi, 1 ; mov rsi, rax ; jg 0xffffff8000755ee9 ; pop rbp ; ret
0xffffff80006531c5 : cmp edi, 1 ; sbb eax, eax ; or eax, 0x10 ; pop rbp ; ret
0xffffff80006536b5 : cmp edi, 1 ; sbb eax, eax ; or eax, 0x18 ; pop rbp ; ret
0xffffff8000653be5 : cmp edi, 1 ; sbb eax, eax ; or eax, 0x20 ; pop rbp ; ret
0xffffff8000652365 : cmp edi, 1 ; sbb eax, eax ; pop rbp ; ret
0xffffff800084d087 : cmp edi, 2 ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff800038af61 : cmp edi, 3 ; je 0xffffff800038af70 ; xor eax, eax ; pop rbp ; ret
0xffffff800038afd1 : cmp edi, 3 ; je 0xffffff800038afe0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000831ce7 : cmp edi, 3 ; mov edi, ecx ; ja 0xffffff8000831ce8 ; pop rbp ; ret
0xffffff80003d3d26 : cmp edi, 4 ; jae 0xffffff80003d3d37 ; mov eax, edi ; pop rbp ; ret
0xffffff80003a172e : cmp edi, dword ptr [rax + 0x310] ; je 0xffffff80003a1741 ; pop rbp ; ret
0xffffff800028ac21 : cmp edi, dword ptr [rax + rdx - 0x7f] ; ret
0xffffff80006ab5a5 : cmp edi, dword ptr [rsi + 1] ; mov rdi, rbx ; call rax
0xffffff8000354e06 : cmp edi, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028376c : cmp edi, eax ; je 0xffffff8000283777 ; pop rbp ; ret
0xffffff80002ebe3c : cmp edi, eax ; jne 0xffffff80002ebe47 ; pop rbp ; ret
0xffffff80002ed12c : cmp edi, eax ; jne 0xffffff80002ed137 ; pop rbp ; ret
0xffffff80003000ce : cmp edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002daf57 : cmp edi, ecx ; cmovne rax, rcx ; pop rbp ; ret
0xffffff80002b7371 : cmp edi, ecx ; jne 0xffffff80002b7365 ; pop rbp ; ret
0xffffff80004d904a : cmp edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cf957 : cmp edi, edi ; ret
0xffffff8000b442cb : cmp edi, edi ; ret 0x3148
0xffffff8000340958 : cmp edi, edi ; ret 0xb70f
0xffffff8000726ca5 : cmp edi, edi ; ret 0xc239
0xffffff8000743e11 : cmp edi, edi ; ror dword ptr [rax - 0x75], 1 ; sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff80002f2215 : cmp edi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000392adc : cmp edi, edx ; jne 0xffffff8000392b1f ; leave ; ret
0xffffff8000393101 : cmp edi, edx ; jne 0xffffff8000393144 ; leave ; ret
0xffffff80007b6830 : cmp edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008eb605 : cmp edi, esi ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800080eea5 : cmp edi, esi ; sete al ; pop rbp ; ret
0xffffff80004d9049 : cmp edi, r15d ; dec dword ptr [rax - 0x77] ; ret
0xffffff800050fc61 : cmp edx, -1 ; je 0xffffff800050fc74 ; cmp eax, edx ; cmovg eax, edx ; pop rbp ; ret
0xffffff8000706abf : cmp edx, 0x10 ; jne 0xffffff8000706aa8 ; pop rbp ; ret
0xffffff800080cd22 : cmp edx, 0x38 ; jne 0xffffff800080cd18 ; mov eax, edi ; pop rbp ; ret
0xffffff800080cfa2 : cmp edx, 0x70 ; jne 0xffffff800080cf98 ; mov eax, edi ; pop rbp ; ret
0xffffff8000252857 : cmp edx, 0xa ; jb 0xffffff8000252846 ; pop rbp ; ret
0xffffff8000366957 : cmp edx, 0xa ; jb 0xffffff8000366946 ; pop rbp ; ret
0xffffff800080c871 : cmp edx, 5 ; je 0xffffff800080c83c ; jmp 0xffffff800080c856
0xffffff800065ef60 : cmp edx, dword ptr [rdi] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000b3d366 : cmp edx, dword ptr [rip - 0x87e08cf] ; ret
0xffffff80004ab0ab : cmp edx, eax ; jb 0xffffff80004ab0a7 ; sub eax, edx ; pop rbp ; ret
0xffffff8000829c30 : cmp edx, eax ; jb 0xffffff8000829c15 ; pop rbp ; ret
0xffffff800083b6de : cmp edx, eax ; jb 0xffffff800083b6d5 ; pop rbp ; ret
0xffffff800061a9c1 : cmp edx, eax ; jl 0xffffff800061a9ce ; xor eax, eax ; pop rbp ; ret
0xffffff800081284d : cmp edx, eax ; mov eax, 0xffffffff ; cmovb eax, edx ; pop rbp ; ret
0xffffff80004f858c : cmp edx, eax ; mov rdi, rsi ; jl 0xffffff80004f8568 ; pop rbp ; ret
0xffffff800061ae9d : cmp edx, ecx ; cmovae eax, ecx ; pop rbp ; ret
0xffffff80006d0565 : cmp edx, ecx ; jae 0xffffff80006d0545 ; pop rbp ; ret
0xffffff800027171c : cmp edx, ecx ; jb 0xffffff8000271705 ; pop rbp ; ret
0xffffff80003a9ea2 : cmp edx, ecx ; jb 0xffffff80003a9e85 ; pop rbp ; ret
0xffffff8000802476 : cmp edx, ecx ; jne 0xffffff8000802483 ; xor eax, eax ; pop rbp ; ret
0xffffff80008c5927 : cmp edx, ecx ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff800033830e : cmp edx, ecx ; setb al ; movzx eax, al ; pop rbp ; ret
0xffffff8000656892 : cmp edx, edi ; jae 0xffffff80006568b9 ; mov rdi, r13 ; call rax
0xffffff80002d5faf : cmp edx, esi ; jbe 0xffffff80002d5f88 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000451eff : cmp edx, esi ; jle 0xffffff8000451ef8 ; movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff8000622784 : cmp edx, esi ; jns 0xffffff8000622778 ; mov dword ptr [rdi + 0x64], esi ; pop rbp ; ret
0xffffff800058fea5 : cmp edx, esi ; setae dl ; jmp 0xffffff800058fedf
0xffffff800058fe89 : cmp edx, esi ; setbe dl ; jmp 0xffffff800058fedf
0xffffff800058fe65 : cmp edx, esi ; sete dl ; jmp 0xffffff800058fedf
0xffffff8000260200 : cmp edx, esi ; setl dl ; jmp 0xffffff8000260228
0xffffff800058fe72 : cmp edx, esi ; setne dl ; jmp 0xffffff800058fedf
0xffffff800061a9c0 : cmp edx, r8d ; jl 0xffffff800061a9cf ; xor eax, eax ; pop rbp ; ret
0xffffff80004f858b : cmp edx, r8d ; mov rdi, rsi ; jl 0xffffff80004f8569 ; pop rbp ; ret
0xffffff8000388d95 : cmp esi, 0x200 ; jne 0xffffff8000388d49 ; pop rbp ; ret
0xffffff80004650e1 : cmp esi, 0x2f ; je 0xffffff80004650d6 ; jmp 0xffffff80004650b1
0xffffff800078c9f9 : cmp esi, 1 ; ja 0xffffff800078ca0a ; mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff8000584f4c : cmp esi, 2 ; je 0xffffff8000584f94 ; pop rbp ; ret
0xffffff80003aafcb : cmp esi, dword ptr [rbp] ; call 0xffffff8000397205
0xffffff80002af4bc : cmp esi, dword ptr [rbx + 0x68] ; jne 0xffffff80002af4cf ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a72e : cmp esi, dword ptr [rdi + 0x18] ; jne 0xffffff800039a705 ; ret
0xffffff8000763ac1 : cmp esi, dword ptr [rdi] ; ret
0xffffff800069bf01 : cmp esi, dword ptr [rsi - 0x15] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065ab71 : cmp esi, dword ptr [rsi] ; ret
0xffffff8000350ced : cmp esi, eax ; jb 0xffffff8000350cd8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a49ba : cmp esi, ebx ; jne 0xffffff80008a49b8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a4a0a : cmp esi, ebx ; jne 0xffffff80008a4a08 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000395104 : cmp esi, ecx ; jb 0xffffff80003950f7 ; xor eax, eax ; pop rbp ; ret
0xffffff8000315bc7 : cmp esi, ecx ; jbe 0xffffff8000315bd4 ; xor eax, eax ; pop rbp ; ret
0xffffff80008e7466 : cmp esi, ecx ; je 0xffffff80008e7473 ; xor eax, eax ; pop rbp ; ret
0xffffff8000289004 : cmp esi, ecx ; jl 0xffffff8000288fe8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028a784 : cmp esi, ecx ; jl 0xffffff800028a768 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a6501 : cmp esi, ecx ; jl 0xffffff80003a64f5 ; pop rbp ; ret
0xffffff800049aee8 : cmp esi, ecx ; jl 0xffffff800049ae88 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b3e3cb : cmp esi, ecx ; push rcx ; jmp qword ptr [rdx]
0xffffff8000584762 : cmp esi, ecx ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80008135c5 : cmp esi, edi ; sete al ; pop rbp ; ret
0xffffff80006307ef : cmp esi, edx ; cmovb edx, esi ; mov dword ptr [r8], edx ; pop rbp ; ret
0xffffff800083d75b : cmp esi, edx ; jb 0xffffff800083d6ef ; mov edx, eax ; jmp 0xffffff800083d76c
0xffffff80002b4ed0 : cmp esi, esi ; jne 0xffffff80002b4ec8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d9a87 : cmp esi, esi ; ret
0xffffff800036fcee : cmp esp, dword ptr [rcx - 0x3e912615] ; ret 0x891e
0xffffff800086a565 : cmp esp, dword ptr [rdx - 0x1600ce01] ; ret
0xffffff800032e2e1 : cmp esp, dword ptr [rsi - 0x76b70006] ; ret
0xffffff8000756649 : cmp qword ptr [r8], -0x36111800 ; ret
0xffffff80004fa076 : cmp qword ptr [rax + 0x38], rdi ; je 0xffffff80004fa087 ; xor eax, eax ; pop rbp ; ret
0xffffff800072f14a : cmp qword ptr [rcx + 0x10], rdx ; je 0xffffff800072f159 ; pop rbp ; ret
0xffffff8000293674 : cmp qword ptr [rdi + 8], 0 ; jne 0xffffff8000293685 ; pop rbp ; ret
0xffffff80004953b4 : cmp qword ptr [rdi], rsi ; jge 0xffffff80004953c5 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80004953a4 : cmp qword ptr [rdi], rsi ; jle 0xffffff80004953b5 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80002ade7e : cmp r11, r9 ; jb 0xffffff80002ade35 ; pop rbp ; ret
0xffffff80003babeb : cmp r12b, byte ptr [rax] ; mov qword ptr [rsi], r9 ; xor eax, eax ; pop rbp ; ret
0xffffff80003ad52f : cmp r13, qword ptr [r10] ; call qword ptr [rax]
0xffffff80003c619b : cmp r13, qword ptr [rcx] ; pop rbp ; ret
0xffffff80004571c0 : cmp r13d, 2 ; cmovg eax, edx ; jmp 0xffffff80004571e8
0xffffff8000350cec : cmp r14, rax ; jb 0xffffff8000350cd9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000289003 : cmp r14, rcx ; jl 0xffffff8000288fe9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028a783 : cmp r14, rcx ; jl 0xffffff800028a769 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049aee7 : cmp r14, rcx ; jl 0xffffff800049ae89 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b4ecf : cmp r14, rsi ; jne 0xffffff80002b4ec9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800026254e : cmp r14b, r8b ; cmp al, 1 ; pop rbp ; ret
0xffffff80008a49b9 : cmp r14d, ebx ; jne 0xffffff80008a49b9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a4a09 : cmp r14d, ebx ; jne 0xffffff80008a4a09 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005eef6b : cmp r15b, dil ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c0e47 : cmp r8d, dword ptr [rbx + rax*4] ; ret
0xffffff80006daa66 : cmp r9, 8 ; jl 0xffffff80006daa29 ; xor eax, eax ; pop rbp ; ret
0xffffff80006daad6 : cmp r9, 8 ; jl 0xffffff80006daa99 ; xor eax, eax ; pop rbp ; ret
0xffffff80003a6e83 : cmp rax, 0x100 ; jne 0xffffff80003a6e49 ; pop rbp ; ret
0xffffff8000495495 : cmp rax, 0x3f ; jl 0xffffff8000495457 ; pop rbp ; ret
0xffffff8000388b2e : cmp rax, 0x40 ; jne 0xffffff8000388b27 ; pop rbp ; ret
0xffffff8000388b66 : cmp rax, 0x40 ; jne 0xffffff8000388b57 ; pop rbp ; ret
0xffffff80002a5b90 : cmp rax, 0x800 ; jne 0xffffff80002a5b59 ; pop rbp ; ret
0xffffff8000371074 : cmp rax, 1 ; jg 0xffffff8000371047 ; pop rbp ; ret
0xffffff80005492bb : cmp rax, 4 ; jbe 0xffffff80005492ca ; pop rbp ; ret
0xffffff800088d81d : cmp rax, qword ptr [rdi + 0x30] ; sete al ; pop rbp ; ret
0xffffff80008982dc : cmp rax, qword ptr [rip + 0x1fec65] ; setne dl ; jmp 0xffffff80008982f3
0xffffff800082bb38 : cmp rax, qword ptr [rsi + 0x10] ; sete al ; pop rbp ; ret
0xffffff800039f25a : cmp rax, rbx ; jb 0xffffff800039f259 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ad44a : cmp rax, rcx ; jl 0xffffff80007ad446 ; pop rbp ; ret
0xffffff80003ab792 : cmp rax, rcx ; setb dl ; movzx eax, dl ; pop rbp ; ret
0xffffff800039f735 : cmp rax, rdx ; jb 0xffffff800039f716 ; pop rbp ; ret
0xffffff800079a137 : cmp rbx, r14 ; jb 0xffffff800079a139 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000821d67 : cmp rcx, 0x10 ; jne 0xffffff8000821d57 ; pop rbp ; ret
0xffffff800083b171 : cmp rcx, 0x10 ; jne 0xffffff800083b167 ; pop rbp ; ret
0xffffff800083b2e4 : cmp rcx, 0x10 ; jne 0xffffff800083b2d7 ; pop rbp ; ret
0xffffff80004f3ce9 : cmp rcx, 0x11 ; jne 0xffffff80004f3cd7 ; pop rbp ; ret
0xffffff80007888ee : cmp rcx, 0x1f ; jne 0xffffff80007888d7 ; pop rbp ; ret
0xffffff800037c58b : cmp rcx, qword ptr [rdx + 8] ; jne 0xffffff800037c59c ; xor eax, eax ; pop rbp ; ret
0xffffff800038b1c8 : cmp rcx, r10 ; je 0xffffff800038b1d7 ; xor eax, eax ; pop rbp ; ret
0xffffff800078cc64 : cmp rcx, r8 ; jl 0xffffff800078cc56 ; pop rbp ; ret
0xffffff80002cb136 : cmp rcx, rdi ; ja 0xffffff80002cb145 ; xor eax, eax ; pop rbp ; ret
0xffffff800083bb8e : cmp rcx, rdx ; cmovb rax, rsi ; pop rbp ; ret
0xffffff800081e99d : cmp rcx, rdx ; jle 0xffffff800081e9ac ; xor eax, eax ; pop rbp ; ret
0xffffff8000250028 : cmp rcx, rdx ; jne 0xffffff8000250026 ; pop rbp ; ret
0xffffff800038aeeb : cmp rcx, rsi ; je 0xffffff800038aefa ; xor eax, eax ; pop rbp ; ret
0xffffff8000652364 : cmp rdi, 1 ; sbb eax, eax ; pop rbp ; ret
0xffffff800028376b : cmp rdi, rax ; je 0xffffff8000283778 ; pop rbp ; ret
0xffffff80002ebe3b : cmp rdi, rax ; jne 0xffffff80002ebe48 ; pop rbp ; ret
0xffffff80002ed12b : cmp rdi, rax ; jne 0xffffff80002ed138 ; pop rbp ; ret
0xffffff80002daf56 : cmp rdi, rcx ; cmovne rax, rcx ; pop rbp ; ret
0xffffff80002b7370 : cmp rdi, rcx ; jne 0xffffff80002b7366 ; pop rbp ; ret
0xffffff8000392adb : cmp rdi, rdx ; jne 0xffffff8000392b20 ; leave ; ret
0xffffff8000393100 : cmp rdi, rdx ; jne 0xffffff8000393145 ; leave ; ret
0xffffff800080eea4 : cmp rdi, rsi ; sete al ; pop rbp ; ret
0xffffff8000706abe : cmp rdx, 0x10 ; jne 0xffffff8000706aa9 ; pop rbp ; ret
0xffffff800080cd21 : cmp rdx, 0x38 ; jne 0xffffff800080cd19 ; mov eax, edi ; pop rbp ; ret
0xffffff800080cfa1 : cmp rdx, 0x70 ; jne 0xffffff800080cf99 ; mov eax, edi ; pop rbp ; ret
0xffffff8000656891 : cmp rdx, r15 ; jae 0xffffff80006568ba ; mov rdi, r13 ; call rax
0xffffff8000829c2f : cmp rdx, r8 ; jb 0xffffff8000829c16 ; pop rbp ; ret
0xffffff800083b6dd : cmp rdx, r8 ; jb 0xffffff800083b6d6 ; pop rbp ; ret
0xffffff80004ab0aa : cmp rdx, rax ; jb 0xffffff80004ab0a8 ; sub eax, edx ; pop rbp ; ret
0xffffff800027171b : cmp rdx, rcx ; jb 0xffffff8000271706 ; pop rbp ; ret
0xffffff8000802475 : cmp rdx, rcx ; jne 0xffffff8000802484 ; xor eax, eax ; pop rbp ; ret
0xffffff80008c5926 : cmp rdx, rcx ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff8000315bc6 : cmp rsi, rcx ; jbe 0xffffff8000315bd5 ; xor eax, eax ; pop rbp ; ret
0xffffff80008e7465 : cmp rsi, rcx ; je 0xffffff80008e7474 ; xor eax, eax ; pop rbp ; ret
0xffffff80008135c4 : cmp rsi, rdi ; sete al ; pop rbp ; ret
0xffffff8000452fd6 : cmp sil, r14b ; ret
0xffffff8000320b66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000268df6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b412ed : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc byte ptr [rdx], ch ; add byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0xffffff8000658950 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rsi], esi ; add byte ptr [rcx], dh ; shr al, 0x55 ; pop rax ; ret
0xffffff8000265cb1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], -0x7b ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff80002656bd : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026571b ; call rax
0xffffff8000273abc : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; jmp 0xffffff8000273a88
0xffffff80008747e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800089e94a : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, r14 ; jmp rax
0xffffff80006087dc : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rcx, rsi ; sub edx, esi ; jg 0xffffff80006087d9 ; pop rbp ; ret
0xffffff8000641616 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800034b617 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800032e2e2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082d47a : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000321ec2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; fisub dword ptr [rdx] ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80004600d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0xffffff800046014c ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff800031f174 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jge 0xffffff800031f17b ; pop rbp ; ret
0xffffff800025dbde : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000588db6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esp, 0x89480022 ; ret
0xffffff80008e24ce : cmpsb byte ptr [rsi], byte ptr [rdi] ; movsxd rdx, dword ptr [rax + rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80003a9d69 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000658806 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rcx ; ret
0xffffff80002c43a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; popfq ; cld ; dec dword ptr [rax + 0x69] ; ret
0xffffff80005d62ea : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0xffffff8000892f7e : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rcx ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800050ad96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80004e3a6b : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0xffffff8000768365 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x44ff
0xffffff8000663dd1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x49ff
0xffffff8000663d9e : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xf0ff
0xffffff8000566d56 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb byte ptr [rdi], dl ; call 0xffffff8000393046
0xffffff80006932d5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80007a32d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stosb byte ptr [rdi], al ; std ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002a1f6c : cmpsb byte ptr [rsi], byte ptr [rdi] ; test byte ptr [rax], al ; push rax ; ret
0xffffff80008e43b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, 0xc031fffa ; pop rbp ; ret
0xffffff8000498d05 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; add bh, bh ; ret
0xffffff800074813f : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rbp ; mov bh, bh ; ret
0xffffff800048b276 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, ch ; ret 0xf07d
0xffffff80007c36e7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(1) ; ret
0xffffff80003a24d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; sti ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000866c45 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000820f66 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0xffffff800081fb9a : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c7835 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivp st(7) ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000749e15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jge 0xffffff8000749e1e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000826065 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jl 0xffffff800082606d ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025db18 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff8000866235 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0x8948fffa ; ret
0xffffff8000764661 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebx, 0x3c ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003612d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov esp, 0x8948ffff ; ret
0xffffff800059ed15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax - 0x77], cl ; ret 0xbfe8
0xffffff800064f205 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; ret
0xffffff80004196fa : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; xor al, 0xc2 ; jmp 0xffffff800041971a
0xffffff800054db23 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000316335 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rcx ; clc ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392609
0xffffff80004f9fbb : cmpsd dword ptr [rsi], dword ptr [rdi] ; push rsi ; add byte ptr [rbx], cl ; xor al, 0x81 ; mov eax, esi ; pop rbp ; ret
0xffffff800034e755 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000663a5e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x41ff
0xffffff800065920d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x4d
0xffffff80003fe295 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80003f88fe : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; push rsi ; ret
0xffffff80006aa445 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff8000759995 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg eax, esi ; ret
0xffffff80005f0015 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg eax, esp ; add byte ptr [rax], al ; add bl, bh ; pop rbp ; ret
0xffffff8000353535 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg esp, esi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000662a20 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000863ea1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000663a5d : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x41ff
0xffffff80008970ad : cmpxchg byte ptr [rcx], al ; pop rbp ; ret
0xffffff8000392354 : cmpxchg byte ptr [rdi], cl ; jne 0xffffff800039235f ; ret
0xffffff800080dea9 : cmpxchg byte ptr [rdx], dh ; sete al ; pop rbp ; ret
0xffffff800080dea8 : cmpxchg byte ptr [rdx], sil ; sete al ; pop rbp ; ret
0xffffff800080e106 : cmpxchg byte ptr [rsi], cl ; jne 0xffffff800080e109 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e126 : cmpxchg byte ptr [rsi], cl ; jne 0xffffff800080e129 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e146 : cmpxchg byte ptr [rsi], cl ; jne 0xffffff800080e149 ; movzx eax, al ; pop rbp ; ret
0xffffff8000327369 : cmpxchg dword ptr [rax], ecx ; mov eax, 1 ; pop rbp ; ret
0xffffff800032735a : cmpxchg dword ptr [rax], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80003a4243 : cmpxchg dword ptr [rcx], edi ; pop rbp ; ret
0xffffff80002c02b6 : cmpxchg dword ptr [rdi], ecx ; jne 0xffffff80002c02b9 ; movzx eax, ax ; pop rbp ; ret
0xffffff80003675f6 : cmpxchg dword ptr [rdi], ecx ; jne 0xffffff80003675f9 ; and eax, 1 ; pop rbp ; ret
0xffffff80003924ed : cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392530 ; ret
0xffffff8000392621 : cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392664 ; ret
0xffffff80003934a7 : cmpxchg dword ptr [rdi], edx ; jne 0xffffff80003934a9 ; mov eax, edx ; ret
0xffffff80003934c7 : cmpxchg dword ptr [rdi], edx ; jne 0xffffff80003934c9 ; mov eax, edx ; ret
0xffffff80008d72fe : cmpxchg dword ptr [rdi], edx ; sete dl ; movzx eax, dl ; ret
0xffffff800049ce68 : cmpxchg dword ptr [rdi], esi ; jne 0xffffff800049ce66 ; pop rbp ; ret
0xffffff80002991a2 : cmpxchg dword ptr [rdx], edi ; jne 0xffffff8000299178 ; mov eax, ecx ; pop rbp ; ret
0xffffff800080dec9 : cmpxchg dword ptr [rdx], esi ; sete al ; pop rbp ; ret
0xffffff800080dfb5 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfb6 ; pop rbp ; ret
0xffffff800080dfd5 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfd6 ; pop rbp ; ret
0xffffff800080dff5 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dff6 ; pop rbp ; ret
0xffffff800080e186 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080e189 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1a6 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080e1a9 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1c6 : cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080e1c9 ; movzx eax, ax ; pop rbp ; ret
0xffffff8000327359 : cmpxchg qword ptr [r8], rcx ; xor eax, eax ; pop rbp ; ret
0xffffff80003a4242 : cmpxchg qword ptr [rcx], rdi ; pop rbp ; ret
0xffffff800049ce67 : cmpxchg qword ptr [rdi], rsi ; jne 0xffffff800049ce67 ; pop rbp ; ret
0xffffff80002991a1 : cmpxchg qword ptr [rdx], rdi ; jne 0xffffff8000299179 ; mov eax, ecx ; pop rbp ; ret
0xffffff800080def8 : cmpxchg qword ptr [rdx], rsi ; sete al ; pop rbp ; ret
0xffffff80008ca742 : cvtdq2ps xmm0, xmmword ptr [rcx + 0x5e] ; pop rbp ; ret
0xffffff80005671a4 : cwde ; adc al, 0x57 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005439c4 : cwde ; adc byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000756fe6 : cwde ; add al, 0 ; add byte ptr [rcx + 0x5dc03107], cl ; ret
0xffffff800081b281 : cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000284cad : cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005cd8f7 : cwde ; add byte ptr [rax + 0xf], cl ; ret 0x81f6
0xffffff8000567809 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004a567a : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800055472b : cwde ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0xb60f
0xffffff80008aaae7 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800049d90d : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000613a36 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff80006773ed : cwde ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff800066be73 : cwde ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff80002a228d : cwde ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800054fbc4 : cwde ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff800047f573 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax + 0x5d08464f], al ; ret
0xffffff800058fbcf : cwde ; add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 - 0x3e], al ; jmp 0xffffff800058fc0d
0xffffff80008cf1f1 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff80005d084e : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000815952 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000b4b9d9 : cwde ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x31d921c1], cl ; ret
0xffffff800088e71e : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0xd2 ; pop rbp ; jmp rax
0xffffff80006f8599 : cwde ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004954ff : cwde ; add qword ptr [rdi + rax*8 + 8], r8 ; pop rbp ; ret
0xffffff8000365f9d : cwde ; add rax, rbx ; jmp 0xffffff8000365fba
0xffffff800030de9f : cwde ; add rbx, rax ; jmp 0xffffff800030deb9
0xffffff8000258315 : cwde ; add rcx, rax ; jmp rcx
0xffffff800064bc28 : cwde ; add rcx, rax ; mov rbx, qword ptr [rbp - 0x80] ; jmp rcx
0xffffff80004c051b : cwde ; add rdi, rax ; jmp rdi
0xffffff800030f5d5 : cwde ; add rdx, rax ; jmp 0xffffff800030f5ea
0xffffff800030f5d5 : cwde ; add rdx, rax ; jmp 0xffffff800030f5ef
0xffffff8000315ba2 : cwde ; add rdx, rax ; jmp 0xffffff8000315bb7
0xffffff8000315ba2 : cwde ; add rdx, rax ; jmp 0xffffff8000315bbc
0xffffff8000725dd6 : cwde ; add rsp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d667b : cwde ; call 0xffffff8000392933
0xffffff80002d6d48 : cwde ; call 0xffffff8000393043
0xffffff80007a0812 : cwde ; call 0xffffff80007633d8
0xffffff8000799c6c : cwde ; call rax
0xffffff80006788d5 : cwde ; call rbx
0xffffff8000799c3d : cwde ; call rcx
0xffffff8000b44564 : cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff800038f0da : cwde ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005564c4 : cwde ; in eax, 0x25 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800049817c : cwde ; jmp 0xffffff80004981c1
0xffffff800049817b : cwde ; jmp 0xffffff80004981c2
0xffffff80003b6174 : cwde ; jns 0xffffff80003b61d0 ; add ah, dh ; pop rbp ; ret
0xffffff800064765c : cwde ; lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff8000678989 : cwde ; lea rsi, [rbp - 0x74] ; mov edx, r15d ; call rbx
0xffffff800086df74 : cwde ; mov byte ptr [rax + rax], ch ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff800066ea8f : cwde ; mov byte ptr [rbx + rax], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b45799 : cwde ; mov ebp, 0x21490ff9 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80002a63e4 : cwde ; mov r10, rax ; jmp 0xffffff80002a640f
0xffffff80002a63e3 : cwde ; mov r10, rax ; jmp 0xffffff80002a6410
0xffffff800081cdba : cwde ; mov rcx, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x50] ; call rcx
0xffffff80003aa603 : cwde ; mov rdi, qword ptr [rbp - 0x70] ; mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff800051cf5d : cwde ; mov rdx, r15 ; call rax
0xffffff8000785055 : cwde ; movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0xffffff80006141c4 : cwde ; or byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005d41c4 : cwde ; or byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800061856f : cwde ; or dword ptr [rax], eax ; add bh, bh ; ret 0x3145
0xffffff800031f27b : cwde ; pop rbp ; ret
0xffffff8000721082 : cwde ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f0454 : cwde ; pop rcx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075d9a4 : cwde ; push rsi ; ret
0xffffff80006a79c4 : cwde ; rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800032fa34 : cwde ; ret
0xffffff800076d367 : cwde ; ret 0x48ff
0xffffff80007691eb : cwde ; ret 0x4dff
0xffffff80003ef759 : cwde ; ret 0x57
0xffffff800034bfd3 : cwde ; ret 0x60
0xffffff80007697d6 : cwde ; ret 0xbbff
0xffffff8000605017 : cwde ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x890b
0xffffff800089b96e : cwde ; sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000392b14 : cwde ; sub dword ptr [rax], edi ; leave ; ret
0xffffff8000679529 : cwde ; xor esi, esi ; call rax
0xffffff80005c81d6 : cwde ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800071dddd : dec byte ptr [rax + 0x29] ; ret 0xb70f
0xffffff800033ccf6 : dec byte ptr [rax + 0x39] ; ret
0xffffff8000584d72 : dec byte ptr [rax + 0x63] ; ret 0x8948
0xffffff80002674e8 : dec byte ptr [rax + 1] ; jb 0xffffff80002674fd ; xor eax, eax ; pop rbp ; ret
0xffffff800083cc47 : dec byte ptr [rax + 1] ; ret 0x8948
0xffffff8000454213 : dec byte ptr [rax - 0x73] ; push rbp ; shr al, 1 ; ret
0xffffff800057fe15 : dec byte ptr [rax - 0x77] ; enter -0x76b7, 0x41 ; js 0xffffff800057fe84 ; ret
0xffffff80005821a5 : dec byte ptr [rax - 0x77] ; enter -0x76b7, 0x41 ; pop rbp ; ret
0xffffff8000713d99 : dec byte ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0xc732
0xffffff800066b16d : dec byte ptr [rax - 0x77] ; ret
0xffffff80004ddd8d : dec byte ptr [rax - 0x77] ; ret 0x1ae8
0xffffff8000327815 : dec byte ptr [rax - 0x77] ; ret 0x8348
0xffffff800027543d : dec byte ptr [rax - 0x77] ; ret 0x8944
0xffffff80003276fa : dec byte ptr [rax - 0x77] ; ret 0x8948
0xffffff80003990fc : dec byte ptr [rax - 0x77] ; ret 0x894c
0xffffff8000327694 : dec byte ptr [rax - 0x77] ; ret 0x8b44
0xffffff800028f40c : dec byte ptr [rax - 0x77] ; ret 0x8b4c
0xffffff800028f321 : dec byte ptr [rax - 0x77] ; ret 0x8d8b
0xffffff800086d6dd : dec byte ptr [rax - 0x77] ; ret 0x91ff
0xffffff8000766e19 : dec byte ptr [rax - 0x77] ; ret 0xaee8
0xffffff80008bfa90 : dec byte ptr [rax - 0x77] ; ret 0xd7e8
0xffffff80007f3918 : dec byte ptr [rax - 0x77] ; ret 0xfe8
0xffffff8000397b75 : dec byte ptr [rax - 0x77] ; ret 0xff41
0xffffff8000708af2 : dec byte ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000371073 : dec byte ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x3a], edi ; pop rbp ; ret
0xffffff80002aa795 : dec byte ptr [rax - 0x7d] ; ret
0xffffff80005fce73 : dec byte ptr [rax - 0x7d] ; ret 0x8408
0xffffff800083e30b : dec byte ptr [rax - 0x7d] ; sar ah, 0x83 ; ret 0x75fe
0xffffff80007d78c8 : dec byte ptr [rax - 1] ; ret 0x3948
0xffffff800035a6eb : dec byte ptr [rax] ; ret 0x5188
0xffffff8000259fbd : dec byte ptr [rbp + 0x21480251] ; ret 0xc748
0xffffff80004987e6 : dec byte ptr [rbp + rcx*4 + 0x25] ; ret 0x63d1
0xffffff80003431b1 : dec byte ptr [rbp + rcx*4 + 0x3d] ; jmp qword ptr [rdx]
0xffffff80006793a9 : dec byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0xffffff8000264164 : dec byte ptr [rbx + rax + 0x78] ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800076eb6e : dec byte ptr [rcx + rcx*4 - 0x16] ; call 0xffffff8000396b87
0xffffff8000440998 : dec byte ptr [rcx + rcx*4 - 0x16] ; call 0xffffff80007ecbf6
0xffffff800087f094 : dec byte ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff80008fe32c : dec byte ptr [rcx + rcx*4 - 0x16] ; mov r8, r14 ; call rax
0xffffff80008f6a03 : dec byte ptr [rcx + rcx*4 - 0x17] ; mov r9, r14 ; call rax
0xffffff80008bcfbc : dec byte ptr [rcx + rcx*4 - 0x2e] ; mov rcx, r11 ; call r14
0xffffff800049d1d5 : dec byte ptr [rcx + rcx*4 - 0xe] ; call qword ptr [rbx]
0xffffff800060fc93 : dec byte ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff800060ec24 : dec byte ptr [rcx + rcx*4 - 0xe] ; call rcx
0xffffff80006c63b2 : dec byte ptr [rcx - 0x3e7cb7c7] ; add al, 0xf6 ; ret 0x7404
0xffffff8000779fc6 : dec byte ptr [rcx - 0x7d] ; ret 0x48fd
0xffffff800071ea77 : dec byte ptr [rdi] ; mov bh, 0xc1 ; pop rbp ; ret
0xffffff80007a4737 : dec byte ptr [rdi] ; ret
0xffffff80002601b5 : dec byte ptr [rdi] ; ret 0xe8c1
0xffffff80007e2c7f : dec byte ptr [rdi] ; test byte ptr [rbx - 0x1000000], bl ; ret 0x8348
0xffffff8000524b0b : dec byte ptr [rdi] ; test esi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80005fce68 : dec byte ptr [rdi] ; xchg eax, ebp ; ret
0xffffff8000577fd6 : dec byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff800071def3 : dec byte ptr [rsi] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002c2077 : dec cx ; mov word ptr [rax], cx ; je 0xffffff80002c208a ; pop rbp ; ret
0xffffff8000393421 : dec dword ptr [0x18] ; ret
0xffffff800037555a : dec dword ptr [eax - 0x7d] ; ret
0xffffff800044fe42 : dec dword ptr [r14] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049e574 : dec dword ptr [r8 - 0x7b] ; ret
0xffffff80002bc2c8 : dec dword ptr [rax + 0x21] ; ret
0xffffff80004654e8 : dec dword ptr [rax + 0x21] ; ret 0x148
0xffffff80006f106a : dec dword ptr [rax + 0x21] ; ret 0x8148
0xffffff8000854bc7 : dec dword ptr [rax + 0x21] ; ret 0x8948
0xffffff80008533c5 : dec dword ptr [rax + 0x21] ; ret 0x894c
0xffffff800049461a : dec dword ptr [rax + 0x21] ; ret 0x8b49
0xffffff80002b3270 : dec dword ptr [rax + 0x21] ; ret 0x948
0xffffff8000366a17 : dec dword ptr [rax + 0x29] ; clc ; pop rbp ; ret
0xffffff80004f4c1b : dec dword ptr [rax + 0x29] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0xffffff800035ac61 : dec dword ptr [rax + 0x29] ; ret
0xffffff800071e5a1 : dec dword ptr [rax + 0x29] ; ret 0x148
0xffffff80004b20a5 : dec dword ptr [rax + 0x29] ; ret 0x3b48
0xffffff800061fa3e : dec dword ptr [rax + 0x29] ; ret 0x8348
0xffffff800032c4ae : dec dword ptr [rax + 0x29] ; ret 0x850f
0xffffff8000481c0f : dec dword ptr [rax + 0x29] ; ret 0x8548
0xffffff80004beb08 : dec dword ptr [rax + 0x29] ; ret 0x8948
0xffffff8000702342 : dec dword ptr [rax + 0x29] ; ret 0x8949
0xffffff8000481aa5 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0xffffff8000320d92 : dec dword ptr [rax + 0x29] ; ror dword ptr [rax + 1], cl ; ret
0xffffff800025a07d : dec dword ptr [rax + 0x31] ; ret 0xc148
0xffffff80003c15d8 : dec dword ptr [rax + 0x39] ; fmul dword ptr [rax + 0xf] ; ret
0xffffff8000291fa9 : dec dword ptr [rax + 0x39] ; ret
0xffffff80006f0857 : dec dword ptr [rax + 0x39] ; ret 0x430f
0xffffff800079c54f : dec dword ptr [rax + 0x39] ; ret 0x850f
0xffffff800030df42 : dec dword ptr [rax + 0x39] ; ret 0x860f
0xffffff800089da10 : dec dword ptr [rax + 0x39] ; ret 0x8948
0xffffff800037fc86 : dec dword ptr [rax + 0x39] ; ret 0xbb
0xffffff8000271060 : dec dword ptr [rax + 0x39] ; ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0xffffff80005eef6d : dec dword ptr [rax + 0x48] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076537e : dec dword ptr [rax + 0x5c] ; mov rdi, r12 ; call 0xffffff80003923e9
0xffffff80008670f4 : dec dword ptr [rax + 0x5e415bd8] ; pop rbp ; ret
0xffffff80005f9836 : dec dword ptr [rax + 0x63] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80005ade19 : dec dword ptr [rax + 0x63] ; fmul dword ptr [rax - 0x7d] ; ret
0xffffff80006691bd : dec dword ptr [rax + 0x63] ; or al, 0x88 ; add rcx, rax ; jmp rcx
0xffffff8000399b7f : dec dword ptr [rax + 0x63] ; ret
0xffffff800079fe69 : dec dword ptr [rax + 0x63] ; ret 0x8948
0xffffff8000510b9a : dec dword ptr [rax + 0x69] ; call rbx
0xffffff80002c43a9 : dec dword ptr [rax + 0x69] ; ret
0xffffff80004044f9 : dec dword ptr [rax + 0x69] ; ret 0xca00
0xffffff80002d76eb : dec dword ptr [rax + 0x6b] ; ret
0xffffff80008786a8 : dec dword ptr [rax + 0x6b] ; ret 0x4d38
0xffffff8000813584 : dec dword ptr [rax + 0xf] ; enter -0x74b8, 1 ; pop rbp ; ret
0xffffff800039edd8 : dec dword ptr [rax + 0xf] ; ret
0xffffff800083bbd3 : dec dword ptr [rax + 0xf] ; ret 0x148
0xffffff800057a319 : dec dword ptr [rax + 0xf] ; ret 0x8948
0xffffff800035dc77 : dec dword ptr [rax + 0xf] ; ret 0xf748
0xffffff80003262d4 : dec dword ptr [rax + 1] ; ret
0xffffff80005e10d4 : dec dword ptr [rax + 1] ; ret 0x3948
0xffffff80004c32a6 : dec dword ptr [rax + 1] ; ret 0x394c
0xffffff8000851736 : dec dword ptr [rax + 1] ; ret 0x8d4c
0xffffff800039944d : dec dword ptr [rax + 9] ; clc ; pop rbp ; ret
0xffffff80002bc2fa : dec dword ptr [rax + 9] ; ret
0xffffff80005d14f0 : dec dword ptr [rax - 0x2d] ; loop 0xffffff80005d151b ; ret 0x5574
0xffffff80002c9356 : dec dword ptr [rax - 0x39] ; ret
0xffffff800026700e : dec dword ptr [rax - 0x39] ; ret 0xefff
0xffffff80003626fb : dec dword ptr [rax - 0x39] ; ret 0xff7f
0xffffff800084e000 : dec dword ptr [rax - 0x39] ; ret 0xfff1
0xffffff8000537305 : dec dword ptr [rax - 0x39] ; ret 0xfff8
0xffffff8000383742 : dec dword ptr [rax - 0x39] ; ret 0xfffe
0xffffff8000270cdd : dec dword ptr [rax - 0x39] ; ret 0xffff
0xffffff800074bca6 : dec dword ptr [rax - 0x3f] ; call 0xffffff7fc42e04b7
0xffffff800074bd56 : dec dword ptr [rax - 0x3f] ; call 0xffffff7fc42e0567
0xffffff80006dba1b : dec dword ptr [rax - 0x73] ; adc eax, 0x3fb705 ; call rax
0xffffff80004cc1bf : dec dword ptr [rax - 0x73] ; adc eax, 0x60af61 ; call rax
0xffffff80004cc09b : dec dword ptr [rax - 0x73] ; adc eax, 0x60b085 ; call rax
0xffffff8000679525 : dec dword ptr [rax - 0x73] ; cdqe ; xor esi, esi ; call rax
0xffffff8000556b60 : dec dword ptr [rax - 0x73] ; jge 0xffffff8000556af4 ; call 0xffffff8000752d77
0xffffff8000606967 : dec dword ptr [rax - 0x73] ; mov ebp, 0xfffffe00 ; call rcx
0xffffff800060c7f0 : dec dword ptr [rax - 0x73] ; mov ebp, 0xfffffe80 ; call rcx
0xffffff8000607db1 : dec dword ptr [rax - 0x73] ; mov ebp, 0xfffffed8 ; call rcx
0xffffff800048948d : dec dword ptr [rax - 0x73] ; xchg eax, ebp ; push 0x41ffffff ; call qword ptr [rdi]
0xffffff800041078a : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0xffffff8000855b61 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx - 0x42], al ; ret
0xffffff80005650a6 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800055d97c : dec dword ptr [rax - 0x75] ; je 0xffffff800055d951 ; call rax
0xffffff80002d6e0c : dec dword ptr [rax - 0x75] ; jge 0xffffff80002d6db0 ; call 0xffffff8000393047
0xffffff80006064ac : dec dword ptr [rax - 0x75] ; jge 0xffffff8000606489 ; mov esi, r13d ; call rbx
0xffffff8000763458 : dec dword ptr [rax - 0x75] ; jge 0xffffff800076342d ; call 0xffffff80003923e8
0xffffff800076346c : dec dword ptr [rax - 0x75] ; jge 0xffffff8000763449 ; call 0xffffff8000392a48
0xffffff8000763591 : dec dword ptr [rax - 0x75] ; jge 0xffffff800076356e ; call 0xffffff8000393048
0xffffff8000763ccb : dec dword ptr [rax - 0x75] ; jge 0xffffff8000763ca0 ; call 0xffffff80003923e8
0xffffff8000763cfe : dec dword ptr [rax - 0x75] ; jge 0xffffff8000763cd3 ; call 0xffffff80003923e8
0xffffff80002cf128 : dec dword ptr [rax - 0x75] ; jne 0xffffff80002cf0d6 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80008f9b32 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008f9b0f ; mov rdx, r12 ; call rbx
0xffffff80008f9c19 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008f9bf6 ; mov rdx, r12 ; call rbx
0xffffff80008fbff2 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fbfcf ; mov rdx, r12 ; call rbx
0xffffff80008fc0d9 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fc0b6 ; mov rdx, r12 ; call rbx
0xffffff80008fc242 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fc21f ; mov rdx, r12 ; call rbx
0xffffff80008fc329 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fc306 ; mov rdx, r12 ; call rbx
0xffffff80008fc492 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fc46f ; mov rdx, r12 ; call rbx
0xffffff80008fc579 : dec dword ptr [rax - 0x75] ; jne 0xffffff80008fc556 ; mov rdx, r12 ; call rbx
0xffffff80006521a9 : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff38 ; call qword ptr [r15]
0xffffff8000651a84 : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff48 ; call qword ptr [r15]
0xffffff8000729fc8 : dec dword ptr [rax - 0x75] ; mov r8b, 1 ; ret
0xffffff800048fa1e : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x77], cl ; ret
0xffffff800073b77a : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x72b8, 0x35 ; pop rdx ; ret
0xffffff8000500b8d : dec dword ptr [rax - 0x75] ; push rax ; adc byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff800089fd7b : dec dword ptr [rax - 0x75] ; ror byte ptr [r8 + 1], 1 ; ret
0xffffff800049cab8 : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff80003514ae : dec dword ptr [rax - 0x75] ; test al, 0x89 ; ret
0xffffff8000848e87 : dec dword ptr [rax - 0x75] ; test dword ptr [rax + 0x39fffffa], edi ; ret
0xffffff800030c170 : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x76000002], eax ; ret
0xffffff80003f3384 : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x76000008], eax ; ret 0x8948
0xffffff8000718332 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x23c
0xffffff8000799a67 : dec dword ptr [rax - 0x75] ; xor byte ptr [rdx + 1], bh ; call rcx
0xffffff8000799ae6 : dec dword ptr [rax - 0x75] ; xor dword ptr [rdx + 1], edi ; call rax
0xffffff80008cdc6c : dec dword ptr [rax - 0x77] ; add eax, 0x217bdc ; pop rbp ; ret
0xffffff80008ad9e6 : dec dword ptr [rax - 0x77] ; add eax, 0x237e3a ; pop rbp ; ret
0xffffff80008ed0d4 : dec dword ptr [rax - 0x77] ; add eax, 0x24a5fc ; pop rbp ; ret
0xffffff800089ab1e : dec dword ptr [rax - 0x77] ; add eax, 0x24ac02 ; pop rbp ; ret
0xffffff8000884f84 : dec dword ptr [rax - 0x77] ; add eax, 0x26078c ; pop rbp ; ret
0xffffff80008c0e66 : dec dword ptr [rax - 0x77] ; add eax, 0x276432 ; pop rbp ; ret
0xffffff800080ec41 : dec dword ptr [rax - 0x77] ; add eax, 0x2d553f ; pop rbp ; ret
0xffffff80007faf62 : dec dword ptr [rax - 0x77] ; add eax, 0x2e915e ; pop rbp ; ret
0xffffff80007db5e1 : dec dword ptr [rax - 0x77] ; add eax, 0x3088ff ; pop rbp ; ret
0xffffff800080ee0b : dec dword ptr [rax - 0x77] ; add eax, 0x32637d ; pop rbp ; ret
0xffffff80007a560a : dec dword ptr [rax - 0x77] ; add eax, 0x339486 ; pop rbp ; ret
0xffffff80007a2518 : dec dword ptr [rax - 0x77] ; add eax, 0x33c540 ; pop rbp ; ret
0xffffff80007e9337 : dec dword ptr [rax - 0x77] ; add eax, 0x34b469 ; pop rbp ; ret
0xffffff80007e7cd8 : dec dword ptr [rax - 0x77] ; add eax, 0x34ca80 ; pop rbp ; ret
0xffffff800075225a : dec dword ptr [rax - 0x77] ; add eax, 0x38c53e ; pop rbp ; ret
0xffffff8000751caa : dec dword ptr [rax - 0x77] ; add eax, 0x38cae6 ; pop rbp ; ret
0xffffff8000751326 : dec dword ptr [rax - 0x77] ; add eax, 0x38d45a ; pop rbp ; ret
0xffffff800074b7f2 : dec dword ptr [rax - 0x77] ; add eax, 0x392e9e ; pop rbp ; ret
0xffffff8000798ae0 : dec dword ptr [rax - 0x77] ; add eax, 0x397788 ; pop rbp ; ret
0xffffff800072f3c1 : dec dword ptr [rax - 0x77] ; add eax, 0x3ad53f ; pop rbp ; ret
0xffffff8000758660 : dec dword ptr [rax - 0x77] ; add eax, 0x3d7778 ; pop rbp ; ret
0xffffff800073bb7e : dec dword ptr [rax - 0x77] ; add eax, 0x3f3202 ; pop rbp ; ret
0xffffff80005000aa : dec dword ptr [rax - 0x77] ; add eax, 0x61b2a6 ; pop rbp ; ret
0xffffff80004ced6d : dec dword ptr [rax - 0x77] ; add eax, 0x64b0db ; pop rbp ; ret
0xffffff80004c948e : dec dword ptr [rax - 0x77] ; add eax, 0x6508d2 ; pop rbp ; ret
0xffffff80004829c7 : dec dword ptr [rax - 0x77] ; add eax, 0x6525b1 ; pop rbp ; ret
0xffffff800042062c : dec dword ptr [rax - 0x77] ; add eax, 0x6b475c ; pop rbp ; ret
0xffffff800041ea64 : dec dword ptr [rax - 0x77] ; add eax, 0x6b6304 ; pop rbp ; ret
0xffffff800074fceb : dec dword ptr [rax - 0x77] ; and al, 0x5d ; ret
0xffffff8000696b25 : dec dword ptr [rax - 0x77] ; and byte ptr [rax - 0x77], cl ; ret
0xffffff80007b99aa : dec dword ptr [rax - 0x77] ; clc ; pop rbp ; ret
0xffffff8000452fd3 : dec dword ptr [rax - 0x77] ; cmp sil, r14b ; ret
0xffffff80002f788a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80003c90b4 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80007a6909 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7f] ; ret 0x2d4
0xffffff80002ba5f1 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0xffffff800077fa9f : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x75] ; jne 0xffffff800077fa80 ; call r12
0xffffff800041c882 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret
0xffffff80007f70f5 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x2fe8
0xffffff80007b0dc9 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x5be8
0xffffff8000543387 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; ret
0xffffff8000505c2e : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; ret 0x428b
0xffffff800076a174 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret
0xffffff8000254125 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret 0x80d
0xffffff80004d1ef5 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret 0xffc3
0xffffff800077469c : dec dword ptr [rax - 0x77] ; fsubp st(0) ; wait ; call qword ptr [rdi]
0xffffff80006a4cf6 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; int1 ; ret
0xffffff800077b3d8 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; jmp qword ptr [rdi]
0xffffff80006a2ce8 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; jmp rbx
0xffffff800075f5bc : dec dword ptr [rax - 0x77] ; fucomip st(0) ; jnp 0xffffff800075f604 ; ret
0xffffff800075d5ae : dec dword ptr [rax - 0x77] ; fucomip st(0) ; jns 0xffffff800075d60f ; ret
0xffffff800075d5be : dec dword ptr [rax - 0x77] ; fucomip st(0) ; jns 0xffffff800075d626 ; ret
0xffffff800076d1bf : dec dword ptr [rax - 0x77] ; fucomip st(0) ; js 0xffffff800076d22b ; ret 0x49ff
0xffffff8000553008 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; lahf ; jmp rbx
0xffffff800076f92c : dec dword ptr [rax - 0x77] ; fucomip st(0) ; or esi, dword ptr [rcx] ; ret 0x41ff
0xffffff800044187b : dec dword ptr [rax - 0x77] ; fucomip st(0) ; pop rsp ; ret
0xffffff80004eb2cd : dec dword ptr [rax - 0x77] ; fucomip st(0) ; push 0x2e ; ret 0xc7ff
0xffffff800076d19b : dec dword ptr [rax - 0x77] ; fucomip st(0) ; pushfq ; pop rsi ; ret 0x49ff
0xffffff800031eec4 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff80006e9cb5 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0x1b7
0xffffff8000430a15 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0x9d1
0xffffff80005ddde5 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xdb51
0xffffff800041ec15 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xe58d
0xffffff8000505dc5 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xe8c9
0xffffff80005e6df7 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffda
0xffffff80005f6325 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 9
0xffffff800036c9cf : dec dword ptr [rax - 0x77] ; loopne 0xffffff800036c9d1 ; ret
0xffffff800055d47d : dec dword ptr [rax - 0x77] ; mov rsi, qword ptr [rdx + rcx*8 + 0x48] ; call rax
0xffffff80004acc34 : dec dword ptr [rax - 0x77] ; or dil, r14b ; ret 0x80
0xffffff8000254e2f : dec dword ptr [rax - 0x77] ; ret
0xffffff80005e7c64 : dec dword ptr [rax - 0x77] ; ret 0x10eb
0xffffff8000324f85 : dec dword ptr [rax - 0x77] ; ret 0x148
0xffffff80003c13f9 : dec dword ptr [rax - 0x77] ; ret 0x14c
0xffffff80008c99cd : dec dword ptr [rax - 0x77] ; ret 0x1ceb
0xffffff800076dbf4 : dec dword ptr [rax - 0x77] ; ret 0x2948
0xffffff8000779e1c : dec dword ptr [rax - 0x77] ; ret 0x294c
0xffffff80005cfe0f : dec dword ptr [rax - 0x77] ; ret 0x2b48
0xffffff8000429362 : dec dword ptr [rax - 0x77] ; ret 0x2e66
0xffffff80004545a9 : dec dword ptr [rax - 0x77] ; ret 0x2ee8
0xffffff800072e9f6 : dec dword ptr [rax - 0x77] ; ret 0x31e8
0xffffff8000501bc7 : dec dword ptr [rax - 0x77] ; ret 0x348
0xffffff80008dfe75 : dec dword ptr [rax - 0x77] ; ret 0x42c7
0xffffff80007c27f5 : dec dword ptr [rax - 0x77] ; ret 0x42f6
0xffffff800084a69d : dec dword ptr [rax - 0x77] ; ret 0x44c7
0xffffff80006b1b62 : dec dword ptr [rax - 0x77] ; ret 0x4b8b
0xffffff80003e6b49 : dec dword ptr [rax - 0x77] ; ret 0x4ee8
0xffffff80007fa788 : dec dword ptr [rax - 0x77] ; ret 0x4fe8
0xffffff800035d647 : dec dword ptr [rax - 0x77] ; ret 0x50e8
0xffffff80008cfd2a : dec dword ptr [rax - 0x77] ; ret 0x8041
0xffffff800035a4a5 : dec dword ptr [rax - 0x77] ; ret 0x8148
0xffffff800028e83f : dec dword ptr [rax - 0x77] ; ret 0x8348
0xffffff80005a9c81 : dec dword ptr [rax - 0x77] ; ret 0x8548
0xffffff8000440e11 : dec dword ptr [rax - 0x77] ; ret 0x86e8
0xffffff800026ed87 : dec dword ptr [rax - 0x77] ; ret 0x8948
0xffffff800026ef7b : dec dword ptr [rax - 0x77] ; ret 0x8949
0xffffff800026ee6a : dec dword ptr [rax - 0x77] ; ret 0x894c
0xffffff80006df1b8 : dec dword ptr [rax - 0x77] ; ret 0x894d
0xffffff800028f2ae : dec dword ptr [rax - 0x77] ; ret 0x8b44
0xffffff80006886e6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff800066dc7a : dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80005ad30d : dec dword ptr [rax - 0x77] ; ret 0x8b66
0xffffff800068b38d : dec dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff80004e9dff : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0xffffff80006a0049 : dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff80004b21cc : dec dword ptr [rax - 0x77] ; ret 0xabe8
0xffffff80006a1156 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff800068bb6d : dec dword ptr [rax - 0x77] ; ret 0xbd83
0xffffff80003e6cd9 : dec dword ptr [rax - 0x77] ; ret 0xbee8
0xffffff80004b1fda : dec dword ptr [rax - 0x77] ; ret 0xc148
0xffffff8000688b16 : dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80007b0e06 : dec dword ptr [rax - 0x77] ; ret 0xd285
0xffffff80007fa354 : dec dword ptr [rax - 0x77] ; ret 0xd3e8
0xffffff8000756b0b : dec dword ptr [rax - 0x77] ; ret 0xe95d
0xffffff80006a77ea : dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff8000369c2b : dec dword ptr [rax - 0x77] ; ret 0xfce8
0xffffff80005e6bbd : dec dword ptr [rax - 0x77] ; ret 0xfeb
0xffffff80003d0463 : dec dword ptr [rax - 0x77] ; ret 0xff48
0xffffff8000347ef7 : dec dword ptr [rax - 0x77] ; ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff8000682b16 : dec dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0xffffff8000399f3e : dec dword ptr [rax - 0x77] ; sbb byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005588fb : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff800043a8b3 : dec dword ptr [rax - 0x7b] ; push qword ptr [rax + rdx - 0x18] ; ret 0xffc9
0xffffff8000557209 : dec dword ptr [rax - 0x7b] ; push qword ptr [rcx + rdx - 0x77] ; ret
0xffffff8000430953 : dec dword ptr [rax - 0x7b] ; push qword ptr [rsi + rsi - 0x77] ; ret
0xffffff800049e575 : dec dword ptr [rax - 0x7b] ; ret
0xffffff80003f93b3 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x73], 0x35 ; cdq ; ret
0xffffff8000586a38 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0xffffff8000298716 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 1
0xffffff800058a13d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80008dd516 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8548
0xffffff8000708c0d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80007f110f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3bb
0xffffff80006f299f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdx + 0x48], 0x89 ; ret
0xffffff80007191d7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x48], 0x89 ; ret 0xc748
0xffffff80007b6f47 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0xd], 0x5d ; ret
0xffffff80005b420f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0xffffff800026f31a : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rax*2 + 0x48], 0x39 ; ret 0x3c74
0xffffff800046264f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rdx*2 + 0x48], 0x89 ; ret
0xffffff80006f356e : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rbx*2 + 0x48], 0x89 ; ret
0xffffff80002552d4 : dec dword ptr [rax - 0x7d] ; ret
0xffffff800084e21d : dec dword ptr [rax - 0x7d] ; ret 0x4450
0xffffff800071cf6e : dec dword ptr [rax - 0x7d] ; ret 0x4802
0xffffff8000407917 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0xffffff80003a6e2e : dec dword ptr [rax - 0x7d] ; ret 0x4808
0xffffff80007d783e : dec dword ptr [rax - 0x7d] ; ret 0x480e
0xffffff8000471384 : dec dword ptr [rax - 0x7d] ; ret 0x4810
0xffffff80006e26cf : dec dword ptr [rax - 0x7d] ; ret 0x4870
0xffffff80006c93f0 : dec dword ptr [rax - 0x7d] ; ret 0x8308
0xffffff80007146cf : dec dword ptr [rax - 0x7d] ; ret 0xc732
0xffffff80003685f5 : dec dword ptr [rax - 0x7d] ; ret 0xff0c
0xffffff8000283ce5 : dec dword ptr [rax - 0x7d] ; ret 0xff10
0xffffff80007aa336 : dec dword ptr [rax - 0x7f] ; leave ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff800029698d : dec dword ptr [rax - 0x7f] ; ret
0xffffff80006cd2ac : dec dword ptr [rax - 0x7f] ; ret 0x144
0xffffff80007e783c : dec dword ptr [rax - 0x7f] ; ret 0x3000
0xffffff8000517e69 : dec dword ptr [rax - 0x7f] ; ret 0xfff
0xffffff800047f868 : dec dword ptr [rax - 0x7f] ; ret 0xffff
0xffffff8000771716 : dec dword ptr [rax - 0xb7e9f4] ; ret 0xc984
0xffffff800027fb5d : dec dword ptr [rax - 1] ; ret
0xffffff80007e492f : dec dword ptr [rax - 1] ; ret 0x3948
0xffffff8000280237 : dec dword ptr [rax - 1] ; ret 0x5189
0xffffff800052e2c2 : dec dword ptr [rax - 1] ; ret 0x8348
0xffffff8000447af4 : dec dword ptr [rax - 1] ; ret 0xc139
0xffffff80006c93bd : dec dword ptr [rax - 1] ; ret 0xc7ff
0xffffff8000802e83 : dec dword ptr [rax - 1] ; ret 0xce89
0xffffff80005bd8a4 : dec dword ptr [rax - 1] ; ret 0xff48
0xffffff80005fdb38 : dec dword ptr [rax - 1] ; ror dword ptr [rax - 0x77], 0xd ; in eax, dx ; ret
0xffffff800077cccc : dec dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80006f3ef7 : dec dword ptr [rax] ; call 0xffffff7fef4e3f05
0xffffff800068c2f7 : dec dword ptr [rax] ; fdivp st(7) ; jmp rsi
0xffffff800058ae9f : dec dword ptr [rax] ; idiv edi ; call qword ptr [rdi]
0xffffff80007709e4 : dec dword ptr [rbp + 0xf030a44] ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000754f11 : dec dword ptr [rbp + 0xf] ; ret 0x858b
0xffffff8000755393 : dec dword ptr [rbp + 0xf] ; ret 0x8b48
0xffffff80006c9428 : dec dword ptr [rbp + 0xfff889] ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff8000b48ef5 : dec dword ptr [rbp + 1] ; ret
0xffffff8000733693 : dec dword ptr [rbp + rax*4 + 0x70] ; xor byte ptr [rdi], cl ; test byte ptr [rdi], dh ; ret
0xffffff80005af542 : dec dword ptr [rbp + rcx*4 + 0x1d] ; ret 0x382a
0xffffff80007f455a : dec dword ptr [rbp + rcx*4 + 0x25] ; push rsi ; sysenter
0xffffff80004acaed : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0xffffff80006dbbb7 : dec dword ptr [rbp + rcx*4 + 0x2d] ; xchg eax, ecx ; ret
0xffffff8000b3a1c3 : dec dword ptr [rbp + rcx*4 + 0x35] ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000659209 : dec dword ptr [rbp + rcx*4 + 0x3d] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x4d
0xffffff800058fc42 : dec dword ptr [rbp + rcx*4 + 0x4b] ; adc bl, ch ; push rdx ; mov dl, r8b ; jmp 0xffffff800058fc64
0xffffff80005a1da2 : dec dword ptr [rbp + rcx*4 + 0x68] ; sub byte ptr [rax - 0x77], cl ; ret
0xffffff80004b5e90 : dec dword ptr [rbp + rcx*4 + 5] ; cmp eax, 0xe8004c02 ; ret
0xffffff800044fac1 : dec dword ptr [rbp + rcx*4 - 0x4c] ; ret 0x100
0xffffff8000535585 : dec dword ptr [rbp + rcx*4 - 0x4e] ; ret
0xffffff800071f574 : dec dword ptr [rbp - 0x48f0feb0] ; ret 0x8b48
0xffffff80006586f5 : dec dword ptr [rbp - 0x77] ; clc ; call r9
0xffffff8000776feb : dec dword ptr [rbp - 0x77] ; cld ; jmp 0xffffff8000777000
0xffffff80004854d7 : dec dword ptr [rbp - 0x77] ; loop 0xffffff800048546f ; or ecx, dword ptr [rax - 0x77] ; ret 0xc148
0xffffff80003eba5c : dec dword ptr [rbp - 0x77] ; out 0x89, eax ; ret
0xffffff8000849c83 : dec dword ptr [rbp - 0x77] ; ret
0xffffff80003dfd5d : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, ebp ; ret
0xffffff8000535403 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rcx + rcx*4 + 0x25], 0x62 ; ret
0xffffff8000646f35 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rcx + rcx*4 - 0xd], 0x75 ; ret 0xc5e9
0xffffff800068ddf3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x85 ; ret
0xffffff80006b828f : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0xffffff80002dcb66 : dec dword ptr [rbx + 0x134c8908] ; xor byte ptr [rcx - 0x7f], al ; jmp rax
0xffffff80003e72ce : dec dword ptr [rbx + 0x27083] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000780c82 : dec dword ptr [rbx + 0x30db8705] ; add byte ptr [rcx], bh ; ret
0xffffff800077865e : dec dword ptr [rbx + 0x36623715] ; add bh, bh ; ret 0x1589
0xffffff800058dc9b : dec dword ptr [rbx + 0x518b4041] ; xor byte ptr [rcx], ah ; ret 0xd0f7
0xffffff80005af093 : dec dword ptr [rbx + 0x52a1ce05] ; add byte ptr [rcx], bh ; ret
0xffffff80005af009 : dec dword ptr [rbx + 0x52a24805] ; add byte ptr [rcx], bh ; ret
0xffffff8000535ea7 : dec dword ptr [rbx + 0x589b845] ; jmp qword ptr [rcx]
0xffffff80003aa26e : dec dword ptr [rbx + 0x682fab05] ; add bh, bh ; ret
0xffffff80003a9def : dec dword ptr [rbx + 0x68342a05] ; add bh, bh ; ret
0xffffff80003c5063 : dec dword ptr [rbx + 0x740c8e05] ; add cl, ch ; ret 0xffef
0xffffff80003aa28c : dec dword ptr [rbx + 0x754ec91d] ; add byte ptr [rax + 1], cl ; ret
0xffffff8000369edc : dec dword ptr [rbx + 0x76548905] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000369cac : dec dword ptr [rbx + 0x7656b905] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000266c5e : dec dword ptr [rbx + 0x7c524705] ; add byte ptr [rax - 0x77], cl ; ret 0x148
0xffffff80003355bf : dec dword ptr [rbx + 0x7fa6ca15] ; add bh, dh ; ret 0xfff7
0xffffff8000621829 : dec dword ptr [rbx + 0x9492] ; add dh, dh ; ret 0x7408
0xffffff80003143f8 : dec dword ptr [rbx + 0xc883] ; add cl, ch ; ret
0xffffff800072eeae : dec dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800073c22d : dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0xffffff8000728cdd : dec dword ptr [rbx + rcx*4 + 0x45] ; ror byte ptr [rbp - 0x77], 1 ; ret 0x758b
0xffffff8000728de7 : dec dword ptr [rbx + rcx*4 + 0x45] ; ror byte ptr [rbp - 0x77], 1 ; ret 0x8b44
0xffffff80002ec0c1 : dec dword ptr [rbx + rcx*4 + 0x73] ; and byte ptr [rax - 0x7d], cl ; ret
0xffffff80002ec1b1 : dec dword ptr [rbx + rcx*4 + 0x73] ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff800060c736 : dec dword ptr [rbx + rcx*4 - 0x73] ; push -0x16000003 ; ret
0xffffff8000335477 : dec dword ptr [rbx + rdi + 0x24] ; ret
0xffffff80002d4ff6 : dec dword ptr [rbx + rdi + 0x3d] ; ret 0x818e
0xffffff800025b553 : dec dword ptr [rbx - 0x10b43] ; jmp qword ptr [rcx]
0xffffff80006d17d4 : dec dword ptr [rbx - 0x14b6b] ; push rsi ; ret 0xf01
0xffffff8000751a67 : dec dword ptr [rbx - 0x1577b] ; jmp qword ptr [rcx]
0xffffff8000485cb6 : dec dword ptr [rbx - 0x2576e1] ; ret 0x1b8
0xffffff80004af9dc : dec dword ptr [rbx - 0x29373] ; jmp qword ptr [rcx]
0xffffff8000339d42 : dec dword ptr [rbx - 0x445e7bf] ; jg 0xffffff8000339d51 ; jmp qword ptr [rcx]
0xffffff80006dffaa : dec dword ptr [rbx - 0x46b75fbb] ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff8000425147 : dec dword ptr [rbx - 0x5cb6b] ; push rdi ; ret 0x3574
0xffffff80003fbf44 : dec dword ptr [rbx - 0x7637f100] ; ret
0xffffff800052dc52 : dec dword ptr [rbx - 0x76b3238b] ; out 0xe8, eax ; ret 0xac
0xffffff800074aea4 : dec dword ptr [rbx - 0x76b74b8b] ; ret 0x8b48
0xffffff800025f3df : dec dword ptr [rbx - 0x778735f3] ; add dh, dh ; ret
0xffffff80003cbdb2 : dec dword ptr [rbx - 0x7c35f0ed] ; ret 0x8303
0xffffff800045b1ad : dec dword ptr [rbx - 0x7c35f0f0] ; ret 0x8303
0xffffff800056792d : dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff8000406a14 : dec dword ptr [rbx - 0x7cf6b] ; jmp qword ptr [rbx]
0xffffff800077c567 : dec dword ptr [rbx - 0x7eb7ef8e] ; ret 0x2d4
0xffffff800025b79a : dec dword ptr [rbx - 0xc343] ; jmp qword ptr [rcx]
0xffffff800035a3fb : dec dword ptr [rbx - 0xdf73] ; jmp qword ptr [rcx]
0xffffff800052d68b : dec dword ptr [rbx] ; idiv edi ; call rdi
0xffffff800052d687 : dec dword ptr [rbx] ; idiv edi ; dec dword ptr [rbx] ; idiv edi ; call rdi
0xffffff80007856b5 : dec dword ptr [rcx + 0x16483] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000397cb7 : dec dword ptr [rcx + 0x1f983c1] ; jne 0xffffff8000397cd9 ; pop rbp ; ret
0xffffff8000397cf8 : dec dword ptr [rcx + 0x1f983c1] ; jne 0xffffff8000397d0b ; pop rbp ; ret
0xffffff8000b49fab : dec dword ptr [rcx + 0x21] ; fisttp qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000397d28 : dec dword ptr [rcx + 0x2f983c1] ; jne 0xffffff8000397d3b ; pop rbp ; ret
0xffffff8000705458 : dec dword ptr [rcx + 0x2f983c1] ; jne 0xffffff800070546b ; pop rbp ; ret
0xffffff80004b91cf : dec dword ptr [rcx + 0x31] ; ret
0xffffff800026ff21 : dec dword ptr [rcx + 0x39] ; ret 0x970f
0xffffff8000311c24 : dec dword ptr [rcx + 0x39] ; ret 0xf4c
0xffffff80005163e9 : dec dword ptr [rcx + 0x5e415bc8] ; pop rbp ; ret
0xffffff800026eb20 : dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff8000840680 : dec dword ptr [rcx + 0x5e415bf0] ; pop rbp ; ret
0xffffff80008ecefb : dec dword ptr [rcx + 0x63] ; ret 0xf48
0xffffff80007b94c1 : dec dword ptr [rcx + 0x63] ; sbb byte ptr [rax + 1], r9b ; ret
0xffffff8000420a5e : dec dword ptr [rcx + 0x63] ; xor byte ptr [r8 - 0x77], r9b ; ret 0xff48
0xffffff80006f6960 : dec dword ptr [rcx + 0x6885c701] ; idiv bh ; call qword ptr [rax]
0xffffff80004a54a4 : dec dword ptr [rcx + 0x778b49d8] ; sub bh, bh ; ret
0xffffff800079c206 : dec dword ptr [rcx + 0xfd8f7d8] ; ret
0xffffff80004b91c7 : dec dword ptr [rcx + 9] ; ret
0xffffff8000791a85 : dec dword ptr [rcx + rax + 0x73] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b9992 : dec dword ptr [rcx + rax*2 + 0x1c] ; mov word ptr [rdi + 0x1c], si ; pop rbp ; ret
0xffffff80005c5421 : dec dword ptr [rcx + rcx*4 + 0x34] ; ret
0xffffff800029e293 : dec dword ptr [rcx + rcx*4 + 0x45] ; mov byte ptr [rcx + 1], al ; ret 0x8a41
0xffffff80002c5753 : dec dword ptr [rcx + rcx*4 + 0x7d] ; mov eax, 0x8948589c ; ret
0xffffff800031dea9 : dec dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000316338 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392606
0xffffff8000771549 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392a47
0xffffff80007644f5 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000393047
0xffffff800059714e : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff80005833e6
0xffffff80007eaf42 : dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, r14 ; call rbx
0xffffff800028e066 : dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, r15 ; call r14
0xffffff80008ddb83 : dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call rbx
0xffffff80004e9ece : dec dword ptr [rcx + rcx*4 - 0x12] ; call 0xffffff800010e147
0xffffff80007eaf37 : dec dword ptr [rcx + rcx*4 - 0x12] ; call rbx
0xffffff8000909466 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rcx, r12 ; call rax
0xffffff80004d6d90 : dec dword ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff80003063a0 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000392606
0xffffff800076482c : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000392a47
0xffffff8000770318 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000393047
0xffffff8000654d74 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [rax]
0xffffff80007615d3 : dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0xffffff80006d441e : dec dword ptr [rcx + rcx*4 - 0x19] ; jmp 0xffffff80006d43eb
0xffffff800028d7c6 : dec dword ptr [rcx + rcx*4 - 0x19] ; mov rsi, r15 ; call r14
0xffffff80007cc566 : dec dword ptr [rcx + rcx*4 - 0x19] ; mov rsi, r15 ; call rcx
0xffffff80002c8fa7 : dec dword ptr [rcx + rcx*4 - 0x1a] ; call r14
0xffffff80007ccfa9 : dec dword ptr [rcx + rcx*4 - 0x1a] ; call rax
0xffffff80007cd26f : dec dword ptr [rcx + rcx*4 - 0x1a] ; call rcx
0xffffff80008f8d72 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000900483 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov ecx, r14d ; call r8
0xffffff80008f68ba : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov ecx, r14d ; call rax
0xffffff80007d04cd : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov edx, ebx ; call rax
0xffffff80008f7602 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rcx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000900853 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rcx, r14 ; call r8
0xffffff8000901aca : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rcx, r14 ; call r9
0xffffff80008f5971 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rcx, r14 ; call rax
0xffffff80008fcd26 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdx, r14 ; call r8
0xffffff80008fcc42 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdx, r14 ; call rax
0xffffff800060533d : dec dword ptr [rcx + rcx*4 - 0x1e] ; call rax
0xffffff80008bde17 : dec dword ptr [rcx + rcx*4 - 0x26] ; mov rcx, rax ; call r12
0xffffff8000766355 : dec dword ptr [rcx + rcx*4 - 0x35] ; call 0xffffff80003923e7
0xffffff80005931b5 : dec dword ptr [rcx + rcx*4 - 0x35] ; mov rcx, rbx ; call rax
0xffffff8000526366 : dec dword ptr [rcx + rcx*4 - 0x44] ; ret
0xffffff8000555246 : dec dword ptr [rcx + rcx*4 - 0xa] ; call r15
0xffffff80004b4f51 : dec dword ptr [rcx + rcx*4 - 0xa] ; call rbx
0xffffff80008eec5a : dec dword ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff8000905d76 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdx, r12 ; call r8
0xffffff8000905c92 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdx, r12 ; call rax
0xffffff80008f629c : dec dword ptr [rcx + rcx*4 - 0xe] ; call r8
0xffffff800064cfcc : dec dword ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff80008eefe3 : dec dword ptr [rcx + rcx*4 - 0xe] ; call rcx
0xffffff80007f9879 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80002b5b66
0xffffff8000762e28 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e7
0xffffff80004e6666 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000392936
0xffffff80007a67f5 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000392a46
0xffffff800076d3d8 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000392a47
0xffffff8000763171 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000393047
0xffffff8000773dbe : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000397207
0xffffff80004602c8 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80004cc566
0xffffff80004602c7 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80004cc567
0xffffff8000553dc7 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000550046
0xffffff80006362cc : dec dword ptr [rcx + rcx*4 - 1] ; call rbx
0xffffff80007cd26c : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, r12 ; call rcx
0xffffff80004b4f4e : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, r14 ; call rbx
0xffffff80008ddc72 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, rax ; call rbx
0xffffff800075765c : dec dword ptr [rcx + rcx*4 - 2] ; call r12
0xffffff8000440995 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdx, r13 ; call 0xffffff80007ecbf9
0xffffff80006a6e03 : dec dword ptr [rcx + rcx*4 - 5] ; mov rdi, r12 ; call 0xffffff8000393049
0xffffff800047d22c : dec dword ptr [rcx + rcx*4 - 6] ; call 0xffffff80004494a6
0xffffff80006ea41d : dec dword ptr [rcx + rcx*4 - 6] ; call 0xffffff8000726716
0xffffff80004eb43e : dec dword ptr [rcx + rcx*4 - 6] ; call rax
0xffffff8000757622 : dec dword ptr [rcx + rcx*4 - 7] ; call r12
0xffffff800058d0f7 : dec dword ptr [rcx + rcx*4 - 7] ; call rax
0xffffff8000763bd2 : dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff80003923e7
0xffffff80007674eb : dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000392a47
0xffffff80006a6d57 : dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393046
0xffffff80008bcc68 : dec dword ptr [rcx + rcx*4 - 9] ; call r10
0xffffff80006f02d2 : dec dword ptr [rcx + rcx*4 - 9] ; mov r8, rbx ; call 0xffffff80004fc589
0xffffff80008bcd2e : dec dword ptr [rcx + rcx*4 - 9] ; mov r9, r11 ; call r10
0xffffff80008bccc8 : dec dword ptr [rcx + rcx*4 - 9] ; mov r9, rax ; call r10
0xffffff80004a2d56 : dec dword ptr [rcx + rdi + 0x3d] ; ret 0x5c10
0xffffff8000438fce : dec dword ptr [rcx - 0x10b7b] ; inc dword ptr [rcx - 0x77] ; ret
0xffffff80002b6a73 : dec dword ptr [rcx - 0x1600000d] ; idiv edi ; jmp rsp
0xffffff80003ba725 : dec dword ptr [rcx - 0x1f3eb740] ; or al, 0x5d ; ret
0xffffff800030108d : dec dword ptr [rcx - 0x39] ; ret
0xffffff8000299063 : dec dword ptr [rcx - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800047357a : dec dword ptr [rcx - 0x3d7687b9] ; jmp 0xffffff80004735e4
0xffffff80007f81ae : dec dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80007de37b : dec dword ptr [rcx - 0x3fcefb82] ; pop rbp ; ret
0xffffff80004b2170 : dec dword ptr [rcx - 0x51f6b] ; jmp qword ptr [rbx]
0xffffff80005060fa : dec dword ptr [rcx - 0x75] ; jle 0xffffff8000506164 ; call rax
0xffffff800072fcff : dec dword ptr [rcx - 0x75] ; pop rbp ; and byte ptr [rax - 0x7d], cl ; ret
0xffffff800063e920 : dec dword ptr [rcx - 0x75] ; pop rsi ; adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80003a1e1a : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x7f], cl ; ret 0x22c
0xffffff80007630b5 : dec dword ptr [rcx - 0x76b33d] ; call 0xffffff8000393049
0xffffff800061fca3 : dec dword ptr [rcx - 0x76b7e7b8] ; ret
0xffffff800033e1c9 : dec dword ptr [rcx - 0x77] ; fimul dword ptr [rcx - 0x77] ; ret
0xffffff80003b4e5e : dec dword ptr [rcx - 0x77] ; fisttp word ptr [rax - 0x77] ; ret
0xffffff80006cbd22 : dec dword ptr [rcx - 0x77] ; fsub st(1), st(0) ; ret 0xb
0xffffff8000651d9e : dec dword ptr [rcx - 0x77] ; fsubr st(0) ; or esp, eax ; ret
0xffffff800082ad75 : dec dword ptr [rcx - 0x77] ; fsubr st(0) ; ret 2
0xffffff8000719de4 : dec dword ptr [rcx - 0x77] ; fsubr st(1) ; ret 0
0xffffff80002915b1 : dec dword ptr [rcx - 0x77] ; pop rsi ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006d4f60 : dec dword ptr [rcx - 0x77] ; pop rsi ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003c2ca1 : dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff80003c3651 : dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80006d564f : dec dword ptr [rcx - 0x77] ; ret 0x854d
0xffffff80006d4f3b : dec dword ptr [rcx - 0x77] ; sub bl, r13b ; and esi, esi ; ret 0x7502
0xffffff80005b50a3 : dec dword ptr [rcx - 0x77] ; test eax, ecx ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80003a95fb : dec dword ptr [rcx - 0x77] ; vaddps ymm1, ymm12, ymmword ptr [rax - 0x77] ; ret
0xffffff80002637cd : dec dword ptr [rcx - 0x77baaffb] ; add bh, dh ; ret 0
0xffffff800065268c : dec dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff80007e8977 : dec dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80007d6dad : dec dword ptr [rcx - 0x876b33d] ; call 0xffffff8000393048
0xffffff800083c91b : dec dword ptr [rcx - 1] ; ret
0xffffff800032af2f : dec dword ptr [rcx - 1] ; ret 0x3949
0xffffff8000847817 : dec dword ptr [rcx - 1] ; ret 0x3b4c
0xffffff800083c8ab : dec dword ptr [rcx - 1] ; ret 0x8349
0xffffff800061a7b3 : dec dword ptr [rcx] ; ret
0xffffff800062367a : dec dword ptr [rcx] ; ret 0x1689
0xffffff80006b049c : dec dword ptr [rcx] ; ret 0x8941
0xffffff8000576fcb : dec dword ptr [rcx] ; ret 0x8948
0xffffff80006acb76 : dec dword ptr [rcx] ; ret 0x9589
0xffffff800040c874 : dec dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800059f470 : dec dword ptr [rdi + 0x54] ; je 0xffffff800059f47d ; pop rbp ; ret
0xffffff8000516463 : dec dword ptr [rdi + 8] ; je 0xffffff8000516470 ; pop rbp ; ret
0xffffff800057a433 : dec dword ptr [rdi + rcx + 0x45] ; ret 0xf48
0xffffff80006024ec : dec dword ptr [rdi - 0x73] ; xor al, 0xae ; jmp 0xffffff80006024bb
0xffffff8000603119 : dec dword ptr [rdi - 0x73] ; xor al, 0xae ; jmp 0xffffff80006030e8
0xffffff80002665e6 : dec dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret
0xffffff800038007b : dec dword ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80003a21a9 : dec dword ptr [rdi] ; and ah, al ; mov dword ptr [rdi + 0x60], esi ; pop rbp ; ret
0xffffff80005b973f : dec dword ptr [rdi] ; cdq ; ret 0xf44
0xffffff8000605015 : dec dword ptr [rdi] ; cwde ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x890b
0xffffff80007bd045 : dec dword ptr [rdi] ; lahf ; ret 0x5589
0xffffff8000491cd7 : dec dword ptr [rdi] ; loope 0xffffff8000491ce2 ; dec dword ptr [rdi] ; loope 0xffffff8000491ce6 ; jmp qword ptr [rsi]
0xffffff8000491cdb : dec dword ptr [rdi] ; loope 0xffffff8000491ce2 ; jmp qword ptr [rsi]
0xffffff800058be44 : dec dword ptr [rdi] ; mov bh, 0x56 ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff80006b2444 : dec dword ptr [rdi] ; mov bh, 0x85 ; ret 0xfffe
0xffffff80005a97ba : dec dword ptr [rdi] ; mov dh, 0x41 ; js 0xffffff80005a97ff ; ret
0xffffff80003d4422 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0xffffff80003d4418 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8589
0xffffff80006caa00 : dec dword ptr [rdi] ; mov dh, 0x53 ; and cl, byte ptr [rax - 1] ; ret 0x73e8
0xffffff80006bedcd : dec dword ptr [rdi] ; mov dh, 0x53 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80005e1dfe : dec dword ptr [rdi] ; mov dh, 0x80 ; ret
0xffffff800052d3fb : dec dword ptr [rdi] ; mov dh, 0x83 ; ret 0
0xffffff800069f99c : dec dword ptr [rdi] ; mov dh, 0x88 ; ret
0xffffff80006a1a38 : dec dword ptr [rdi] ; mov dh, 0x90 ; ret
0xffffff80006a1330 : dec dword ptr [rdi] ; mov dh, 0x91 ; ret
0xffffff800069f6e5 : dec dword ptr [rdi] ; mov dh, 0xb1 ; ret
0xffffff800056b0b9 : dec dword ptr [rdi] ; mov dh, 0xf3 ; mov rdi, r13 ; call 0xffffff80006b73b9
0xffffff80008de54a : dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2074
0xffffff80004c13e2 : dec dword ptr [rdi] ; popfq ; ret
0xffffff800083cda4 : dec dword ptr [rdi] ; rcr dword ptr [r11 + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003e3267 : dec dword ptr [rdi] ; ret
0xffffff800071dce8 : dec dword ptr [rdi] ; ret 0xc35d
0xffffff80002d8eb6 : dec dword ptr [rdi] ; ret 0xc821
0xffffff8000472db1 : dec dword ptr [rdi] ; ret 0xd285
0xffffff80006f6b39 : dec dword ptr [rdi] ; ret 0xe8c1
0xffffff80005f9727 : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; add dword ptr [rcx], edi ; ret
0xffffff800066356e : dec dword ptr [rdi] ; test bl, bl ; add eax, 0x89480000 ; ret
0xffffff8000355c47 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x76ffffff], ah ; ret
0xffffff800059e768 : dec dword ptr [rdi] ; test byte ptr [rcx - 0xa000000], al ; ret 0x7480
0xffffff800025e8f7 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff80004cd29c : dec dword ptr [rdi] ; test byte ptr [rip - 0x9ffffff], ah ; ret 0x7534
0xffffff8000439b2e : dec dword ptr [rdi] ; test dl, dh ; idiv bh ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff800083fe23 : dec dword ptr [rdi] ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf40
0xffffff8000729e2b : dec dword ptr [rdi] ; test dword ptr [rdx - 0x9fffffe], edx ; ret
0xffffff800044fbea : dec dword ptr [rdi] ; test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff80002aebb9 : dec dword ptr [rdi] ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x69], cl ; ret
0xffffff80002537f3 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80007e5978 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x940f
0xffffff800044cffd : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xb60f
0xffffff800025ef68 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xca84
0xffffff80004d14fa : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf44
0xffffff80004b302b : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf981
0xffffff800047b90e : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret 0xc985
0xffffff800069bcd8 : dec dword ptr [rdi] ; xchg eax, ebp ; ror dword ptr [rdi], 0x94 ; ret 0xc184
0xffffff80006ddd3c : dec dword ptr [rdi] ; xchg eax, ebx ; ret 0x3944
0xffffff80006ddea2 : dec dword ptr [rdi] ; xchg eax, ebx ; rol byte ptr [rcx + rdi - 0x36], 0xf ; xchg eax, edi ; ret 0xf41
0xffffff80006f7651 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0x3b48
0xffffff80006f74e2 : dec dword ptr [rdi] ; xchg eax, esi ; ret 0x8d3b
0xffffff8000265cb5 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff80002d508a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3145
0xffffff80008399f0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3944
0xffffff8000478318 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0xffffff80007d354e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x950f
0xffffff80003a816b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff80007a159f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0xffffff80008af9d3 : dec dword ptr [rdx + rsi*2] ; sbb dword ptr [rcx - 1], ecx ; ret 0x8348
0xffffff8000630285 : dec dword ptr [rip + 0x440035] ; xor eax, eax ; pop rbp ; ret
0xffffff800062e615 : dec dword ptr [rip + 0x441a95] ; xor eax, eax ; pop rbp ; ret
0xffffff800062e265 : dec dword ptr [rip + 0x441dd5] ; xor eax, eax ; pop rbp ; ret
0xffffff8000568536 : dec dword ptr [rip + 0x570134] ; pop rbp ; ret
0xffffff800055b8a5 : dec dword ptr [rip + 0x57ccc1] ; pop rbp ; ret
0xffffff800055b155 : dec dword ptr [rip + 0x57d40d] ; pop rbp ; ret
0xffffff800055ac25 : dec dword ptr [rip + 0x57d92d] ; pop rbp ; ret
0xffffff8000528e61 : dec dword ptr [rip + 0x5af125] ; pop rbp ; ret
0xffffff80004d3be6 : dec dword ptr [rip + 0x6461c4] ; pop rbp ; ret
0xffffff80004d3c6a : dec dword ptr [rip + 0x646220] ; pop rbp ; ret
0xffffff80004d3c41 : dec dword ptr [rip + 0x646239] ; pop rbp ; ret
0xffffff80004d3c1e : dec dword ptr [rip + 0x646264] ; pop rbp ; ret
0xffffff80002e97b9 : dec dword ptr [rip + 0x804c09] ; xor eax, eax ; pop rbp ; ret
0xffffff80007a99b6 : dec dword ptr [rip - 0x76b7e68b] ; ret 0x8348
0xffffff800079d099 : dec dword ptr [rsi + 8] ; pop rbp ; ret
0xffffff8000634a23 : dec dword ptr [rsi] ; mov rdi, rcx ; pop rbp ; jmp r8
0xffffff800044fe43 : dec dword ptr [rsi] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000393420 : dec dword ptr gs:[0x18] ; ret
0xffffff80002d5c36 : dec eax ; and eax, edi ; lea rax, [rcx + rax*4] ; pop rbp ; ret
0xffffff800030f5d2 : dec eax ; cdqe ; add rdx, rax ; jmp 0xffffff800030f5ed
0xffffff8000315b9f : dec eax ; cdqe ; add rdx, rax ; jmp 0xffffff8000315bba
0xffffff800031f278 : dec eax ; cdqe ; pop rbp ; ret
0xffffff80003b2820 : dec eax ; jne 0xffffff80003b27c5 ; pop rbp ; ret
0xffffff8000491c53 : dec eax ; loop 0xffffff8000491c5a ; jmp qword ptr [rsi]
0xffffff8000582b54 : dec eax ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006f3f23 : dec eax ; out 0xff, eax ; call qword ptr [rdi]
0xffffff80003baeea : dec eax ; pop rbp ; ret
0xffffff80008d443d : dec ebp ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b4b4a3 : dec ebp ; cmp edi, -1 ; mov edi, edi ; call qword ptr [rdi]
0xffffff800043d9d1 : dec ebx ; je 0xffffff800043d9e2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004447a1 : dec ebx ; je 0xffffff80004447b2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c0052 : dec ebx ; je 0xffffff80005c0063 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a2df2 : dec ebx ; je 0xffffff80006a2e03 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800079db4a : dec ecx ; cmp ecx, -1 ; jne 0xffffff800079db38 ; pop rbp ; ret
0xffffff800035d9ae : dec ecx ; jne 0xffffff800035d9a5 ; pop rbp ; ret
0xffffff80006c5a4c : dec ecx ; jne 0xffffff80006c59f5 ; pop rbp ; ret
0xffffff80008a6c11 : dec ecx ; jne 0xffffff80008a6c05 ; pop rbp ; ret
0xffffff8000719343 : dec ecx ; mov qword ptr [rdi + 0x18], rcx ; pop rbp ; ret
0xffffff80002c2078 : dec ecx ; mov word ptr [rax], cx ; je 0xffffff80002c2089 ; pop rbp ; ret
0xffffff80003a48a7 : dec ecx ; ret
0xffffff80006a72ad : dec ecx ; ret 0x48ff
0xffffff800085cc74 : dec edi ; mov eax, dword ptr [rsi + rdi*4] ; sub eax, dword ptr [rdx + rdi*4] ; pop rbp ; ret
0xffffff80007401e7 : dec edx ; idiv bh ; call qword ptr [rbx]
0xffffff8000740263 : dec edx ; idiv bh ; jmp rax
0xffffff800036687f : dec edx ; jne 0xffffff8000366847 ; xor eax, eax ; pop rbp ; ret
0xffffff8000395509 : dec edx ; jne 0xffffff8000395505 ; pop rbp ; ret
0xffffff80003965a1 : dec edx ; jne 0xffffff8000396597 ; xor eax, eax ; pop rbp ; ret
0xffffff80004ab004 : dec edx ; jne 0xffffff80004aaff9 ; not edi ; mov eax, edi ; pop rbp ; ret
0xffffff800083b69b : dec edx ; jne 0xffffff800083b685 ; pop rbp ; ret
0xffffff80003710b3 : dec esi ; jne 0xffffff80003710a5 ; pop rbp ; ret
0xffffff800038a240 : dec esi ; jne 0xffffff800038a1e5 ; pop rbp ; ret
0xffffff80005481a1 : dec esi ; jne 0xffffff8000548198 ; jmp 0xffffff80005481c2
0xffffff800071936e : dec esi ; mov qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff80004d3be5 : dec qword ptr [rip + 0x6461c4] ; pop rbp ; ret
0xffffff80004d3c69 : dec qword ptr [rip + 0x646220] ; pop rbp ; ret
0xffffff80004d3c40 : dec qword ptr [rip + 0x646239] ; pop rbp ; ret
0xffffff80004d3c1d : dec qword ptr [rip + 0x646264] ; pop rbp ; ret
0xffffff800079d098 : dec qword ptr [rsi + 8] ; pop rbp ; ret
0xffffff800079db49 : dec r9 ; cmp ecx, -1 ; jne 0xffffff800079db39 ; pop rbp ; ret
0xffffff80003baee9 : dec rax ; pop rbp ; ret
0xffffff800035d9ad : dec rcx ; jne 0xffffff800035d9a6 ; pop rbp ; ret
0xffffff80008a6c10 : dec rcx ; jne 0xffffff80008a6c06 ; pop rbp ; ret
0xffffff8000719342 : dec rcx ; mov qword ptr [rdi + 0x18], rcx ; pop rbp ; ret
0xffffff800036687e : dec rdx ; jne 0xffffff8000366848 ; xor eax, eax ; pop rbp ; ret
0xffffff8000395508 : dec rdx ; jne 0xffffff8000395506 ; pop rbp ; ret
0xffffff80003965a0 : dec rdx ; jne 0xffffff8000396598 ; xor eax, eax ; pop rbp ; ret
0xffffff800083b69a : dec rdx ; jne 0xffffff800083b686 ; pop rbp ; ret
0xffffff80003710b2 : dec rsi ; jne 0xffffff80003710a6 ; pop rbp ; ret
0xffffff80005481a0 : dec rsi ; jne 0xffffff8000548199 ; jmp 0xffffff80005481c3
0xffffff800071936d : dec rsi ; mov qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff800026a0e1 : div bh ; ret
0xffffff80006c5bed : div bh ; ret 0x8000
0xffffff800052ee52 : div byte ptr [rax + rdi - 0x78] ; pop rbp ; ret
0xffffff800088196e : div byte ptr [rax] ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000879929 : div byte ptr [rbp + 5] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b3cc9 : div byte ptr [rbp + rax + 0x5b] ; pop r14 ; pop rbp ; ret
0xffffff80007b87c2 : div byte ptr [rbp + rcx + 0x4c] ; mov edi, esi ; call 0xffffff80007b4a68
0xffffff80006021c8 : div byte ptr [rbp + rcx - 9] ; ret
0xffffff800067a01d : div byte ptr [rbp - 0x10] ; jmp 0xffffff800067a063
0xffffff80002b4ed1 : div byte ptr [rbp - 0x14] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000451824 : div byte ptr [rbp - 0x17] ; pop rbp ; ret
0xffffff80005dcf9b : div byte ptr [rbp - 0x3e] ; jmp 0xffffff80005dcfb5
0xffffff80007b95b9 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000870c55 : div byte ptr [rbx + rax - 0x75] ; sub eax, ecx ; pop rbp ; ret
0xffffff8000451716 : div byte ptr [rcx + rdx - 1] ; push rsi ; xor byte ptr [rax - 0x77], cl ; ret
0xffffff80004a160c : div byte ptr [rcx + rdx - 1] ; ret 0xf2eb
0xffffff8000602d8e : div byte ptr [rcx + rdx - 9] ; ret
0xffffff800038888b : div byte ptr [rcx] ; div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; call 0xffffff8000384b49
0xffffff8000546b57 : div byte ptr [rcx] ; leave ; mov rdi, r14 ; call 0xffffff8000532e68
0xffffff800088d2b6 : div byte ptr [rcx] ; leave ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff800089a42a : div byte ptr [rcx] ; rcr byte ptr [rbp + 0x41], cl ; jmp rcx
0xffffff8000409202 : div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80007a3203 : div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xb014
0xffffff800078beab : div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff80006b65de : div byte ptr [rcx] ; ror byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80002d8929
0xffffff800038888d : div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; call 0xffffff8000384b47
0xffffff8000267159 : div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; call rbx
0xffffff80003aefcd : div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; pop rbp ; jmp rax
0xffffff800065e852 : div byte ptr [rcx] ; shr al, 0x56 ; stc ; ret 0x44ff
0xffffff800065e545 : div byte ptr [rcx] ; shr al, 0x63 ; cld ; ret 0x45ff
0xffffff800065e712 : div byte ptr [rcx] ; shr al, 0x96 ; cli ; ret 0x44ff
0xffffff80002d6e05 : div byte ptr [rcx] ; shr al, cl ; ret
0xffffff800030d106 : div byte ptr [rcx] ; shr al, cl ; ret 0xf975
0xffffff80002fb3a6 : div byte ptr [rcx] ; shr al, cl ; ret 0xfaa4
0xffffff80004b3b7b : div byte ptr [rdi + 0x2100001e] ; ja 0xffffff80004b3bc4 ; pop rbp ; ret
0xffffff80005491ba : div byte ptr [rdi + rax + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007913e6 : div byte ptr [rdi - 0x76b7fff9] ; ret
0xffffff80003403c6 : div byte ptr [rdx + rax + 0x5d] ; ret
0xffffff8000602d4d : div byte ptr [rdx + rdx*2 - 9] ; ret
0xffffff8000541626 : div byte ptr [rdx - 0x27] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008850b8 : div byte ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff800036b64b : div dh ; ret
0xffffff800058578a : div dh ; ret 0x4802
0xffffff800035195d : div dh ; ret 0x7401
0xffffff80004109d5 : div dh ; ret 0x7407
0xffffff8000336c6e : div dh ; ret 0x7519
0xffffff80006c2b65 : div dword ptr [rax - 0x76b70001] ; ret
0xffffff80002ed128 : div dword ptr [rbx] ; cmp rdi, rax ; jne 0xffffff80002ed13b ; pop rbp ; ret
0xffffff800084b723 : div dword ptr [rdi + 0x24] ; mov eax, edx ; pop rbp ; ret
0xffffff80002f84e5 : div dword ptr [rdi] ; cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800026e236 : div dword ptr [rsi + 4] ; xor eax, eax ; pop rbp ; ret
0xffffff800040c5eb : div eax ; mov dword ptr [rsi + 0x70], edx ; pop rbp ; ret
0xffffff800060631c : div ecx ; mov eax, edx ; pop rbp ; ret
0xffffff8000891cdb : div edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007aa38d : div edi ; ret 0x20
0xffffff800077d8e5 : div edx ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff8000b41486 : div esi ; add ecx, dword ptr [rax + 0x31] ; ret 0x8941
0xffffff800029b22e : div esi ; ret
0xffffff800040c5ea : div r8 ; mov dword ptr [rsi + 0x70], edx ; pop rbp ; ret
0xffffff800084b73c : div rcx ; mov eax, edx ; pop rbp ; ret
0xffffff8000399711 : emms ; add eax, 0x730c4f39 ; or al, 0xff ; ret 0x8348
0xffffff8000810d79 : emms ; and ebp, ebx ; cmp dword ptr [rax - 0x7d], ecx ; ret
0xffffff80004fa6ef : enter -0x118b, 0x5d ; ret
0xffffff80004ab070 : enter -0x128b, 0x48 ; mov esi, eax ; sub eax, esi ; pop rbp ; ret
0xffffff800075f84f : enter -0x1418, 0x37 ; ret
0xffffff80005c0b13 : enter -0x173f, 0x10 ; xor eax, ecx ; pop rbp ; ret
0xffffff8000b3eadb : enter -0x187f, 0x5f ; call rdi
0xffffff800049d773 : enter -0x19, -0x77 ; ret
0xffffff80006a77e5 : enter -0x1a18, 0x61 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff8000490f70 : enter -0x1c0a, -0x78 ; shr dword ptr [rax], cl ; ret
0xffffff8000694955 : enter -0x1c8b, -0x15 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800054072b : enter -0x1d8b, -0x15 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff80003896f7 : enter -0x1e01, 0x41 ; mov edi, dword ptr [rsp] ; call qword ptr [rax]
0xffffff80003b84f4 : enter -0x1ed, -1 ; xor eax, eax ; pop rbp ; ret
0xffffff80008d50ef : enter -0x1f01, -0x45 ; ret 2
0xffffff80004a1d9d : enter -0x1f01, 0x49 ; mov esi, dword ptr [rsi] ; jmp 0xffffff80004a1d6f
0xffffff80007ec3e4 : enter -0x218, -1 ; add rsp, 0x30 ; pop rbp ; ret
0xffffff80005c0bb8 : enter -0x26d7, -0x77 ; fcmovb st(0), st(1) ; ret 0x3108
0xffffff800084192e : enter -0x26ff, 0x39 ; ror dword ptr [rdi], 1 ; ret
0xffffff8000763d02 : enter -0x2718, -0x1a ; ret 0x31ff
0xffffff8000366e03 : enter -0x2777, 0x48 ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0xffffff80002579e2 : enter -0x27c7, 0xf ; ret
0xffffff800075f666 : enter -0x2b18, 0x33 ; ret
0xffffff800064dadf : enter -0x2c77, 1 ; ret
0xffffff800058ec20 : enter -0x2ec7, 0xf ; xchg eax, esp ; ret
0xffffff80005d156e : enter -0x2f09, 0x21 ; ret 0x8941
0xffffff800037f9a5 : enter -0x2f77, -0x7f ; ret 0x200
0xffffff80006d648d : enter -0x2f7d, 0 ; pop rbp ; ret
0xffffff800071e1d3 : enter -0x2fd7, 0xf ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80008d31ef : enter -0x3578, -0x80 ; ret 0xfd0
0xffffff800087e3ee : enter -0x36cf, 0x48 ; mov esi, ebx ; mov rdx, r14 ; call rax
0xffffff80007dab4e : enter -0x36cf, 0x4c ; mov edx, esp ; call rax
0xffffff80002fd347 : enter -0x3777, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800083ebda : enter -0x3777, 0x5b ; pop rbp ; ret
0xffffff8000387d22 : enter -0x3777, 0x5d ; ret
0xffffff80003667c6 : enter -0x37d7, 0x5d ; ret
0xffffff8000604f2f : enter -0x37f1, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80008c4661 : enter -0x3ca3, 0x48 ; lea eax, [rcx + rdx + 0xc] ; pop rbp ; ret
0xffffff800057f129 : enter -0x3ca3, 0x48 ; mov eax, ecx ; pop rbp ; ret
0xffffff800041ee1c : enter -0x3ca3, 0x4c ; mov eax, ecx ; pop rbp ; ret
0xffffff800057f122 : enter -0x3ca3, 0x5d ; ret
0xffffff80004c4cc1 : enter -0x3dc7, 0xf ; ret 0x6348
0xffffff8000349997 : enter -0x3eb8, -0x15 ; or al, 0x31 ; ret
0xffffff80007bf6e1 : enter -0x3eb8, -0x18 ; add cl, byte ptr [rcx - 0x48] ; ret
0xffffff80002fec03 : enter -0x3eb8, -0x18 ; or al, 0x89 ; ret 0x3948
0xffffff8000861d7a : enter -0x3eb8, -0x1e ; add ebp, eax ; cld ; ret 0xff8a
0xffffff80002608ca : enter -0x3f01, -0x77 ; ret
0xffffff8000584f7d : enter -0x3f01, 0xf ; enter 0x4789, 4 ; pop rbp ; ret
0xffffff8000584f63 : enter -0x3f01, 0xf ; enter 0x4789, 8 ; pop rbp ; ret
0xffffff8000584f91 : enter -0x3f01, 0xf ; enter 0x789, 0x5d ; ret
0xffffff80006a830a : enter -0x3f18, 0x56 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff800044c07e : enter -0x3f7b, 0xf ; xchg eax, ebp ; ret
0xffffff8000440065 : enter -0x3f7b, 0xf ; xchg eax, ebp ; ret 0x450f
0xffffff800043d04d : enter -0x3f97, 0x58 ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x428d
0xffffff80004ed6a4 : enter -0x3fe7, -0x7d ; loopne 0xffffff80004ed6b2 ; pop rbp ; ret
0xffffff80004ed704 : enter -0x3fe7, -0x7d ; loopne 0xffffff80004ed712 ; pop rbp ; ret
0xffffff8000b4a178 : enter -0x3fff, 0x29 ; ret 0xf281
0xffffff8000b3cc4a : enter -0x4000, -0x78 ; ret 0xe280
0xffffff8000701fdf : enter -0x47, 0x66 ; mov eax, 0x5d980016 ; ret
0xffffff80006ec6f7 : enter -0x479a, 0x15 ; add bl, ch ; ret 0x9066
0xffffff8000737ea5 : enter -0x48f1, -0x3f ; pop rbp ; ret
0xffffff800074c332 : enter -0x48f1, -0x40 ; pop rbp ; ret
0xffffff800080dbdd : enter -0x48f1, -0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a1700 : enter -0x49f1, -0x40 ; pop rbp ; ret
0xffffff8000737650 : enter -0x54e, 0x74 ; add cl, byte ptr [rdx - 0x3d49f0f0] ; pop rbp ; ret
0xffffff80003b2821 : enter -0x638b, 0x5d ; ret
0xffffff800030f5d3 : enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff800030f5ec
0xffffff8000315ba0 : enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff8000315bb9
0xffffff800031f279 : enter -0x67b8, 0x5d ; ret
0xffffff80003ab794 : enter -0x6df1, -0x3e ; movzx eax, dl ; pop rbp ; ret
0xffffff8000819a0b : enter -0x6e01, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000491ffd : enter -0x6f9a, -0x76 ; or cl, byte ptr [rax - 1] ; ret 0xe88
0xffffff80004c96b3 : enter -0x72b4, 0x25 ; ret 0x4ae3
0xffffff8000575158 : enter -0x72b4, 0x35 ; ret 0x41b8
0xffffff800073b77e : enter -0x72b8, 0x35 ; pop rdx ; ret
0xffffff80006360c3 : enter -0x72b8, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0xffffff800036c23c : enter -0x72b8, 0x5c ; ret
0xffffff800080365e : enter -0x72b8, 4 ; ror byte ptr [rax - 0x75], 0x5c ; ret 0xeb20
0xffffff80004bd199 : enter -0x72b8, 5 ; pop rdi ; ret 0x63
0xffffff800083bffb : enter -0x72bb, 0x5a ; push qword ptr [rcx] ; inc dword ptr [rcx - 0xa] ; ret 0x7403
0xffffff80003b03b5 : enter -0x74b4, 0x55 ; rol byte ptr [rcx - 1], 1 ; ret 0x3941
0xffffff80005d1ae5 : enter -0x74b8, 0x40 ; or byte ptr [rax + 0x29], cl ; ret
0xffffff8000620ef2 : enter -0x74b8, 0x48 ; or bh, bh ; ret 0x8548
0xffffff80008f8fc5 : enter -0x74b8, 0x55 ; ror byte ptr [rcx + rcx*4 - 0x17], 1 ; call rbx
0xffffff8000315a11 : enter -0x74b8, 0x5a ; and byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff8000813588 : enter -0x74b8, 1 ; pop rbp ; ret
0xffffff80006132ad : enter -0x74b8, 5 ; ret
0xffffff800060af6d : enter -0x74bf, 0x45 ; xor al, 0x89 ; ret 0xff25
0xffffff80003266a0 : enter -0x769a, 0x43 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054dedf : enter -0x76b3, -0x39 ; call r15
0xffffff800074f2a9 : enter -0x76b3, -0xf ; call rax
0xffffff80005b0131 : enter -0x76b4, -0x40 ; pop rbx ; pop rbp ; ret
0xffffff80004578e8 : enter -0x76b4, -0xf ; jmp rax
0xffffff80003c56bc : enter -0x76b4, 0x55 ; mov byte ptr [rcx - 0x77], al ; ret 0xb60f
0xffffff80008bc000 : enter -0x76b7, -0x3f ; call r10
0xffffff800057fe18 : enter -0x76b7, 0x41 ; js 0xffffff800057fe81 ; ret
0xffffff80005821a8 : enter -0x76b7, 0x41 ; pop rbp ; ret
0xffffff80008f0850 : enter -0x76b8, -0x22 ; mov rdx, r15 ; call rax
0xffffff800054dfa9 : enter -0x76b8, -0x2d ; call rbx
0xffffff800028e84c : enter -0x76b8, -0x2f ; jne 0xffffff800028e847 ; pop rbp ; ret
0xffffff80004a53cc : enter -0x76b8, -0x2f ; jne 0xffffff80004a53c7 ; pop rbp ; ret
0xffffff80004be86c : enter -0x76b8, -0x7b ; cmp dh, 0xff ; ljmp [rcx] ; ret
0xffffff800039f17b : enter -0x76b8, 0xa ; pop rbp ; ret
0xffffff8000389575 : enter -0x76b8, 0xe ; xor eax, eax ; pop rbp ; ret
0xffffff800033e4f2 : enter -0x76bf, 0x40 ; or byte ptr [rax - 0x7f], cl ; ret
0xffffff80007b3211 : enter -0x76fc, 5 ; ret
0xffffff80007719c4 : enter -0x77d0, 0x45 ; rol esi, 0x45 ; ret 0x4800
0xffffff80008158b9 : enter -0x7abb, -0x40 ; sete al ; pop rbp ; ret
0xffffff80008ecd26 : enter -0x7cb7, -1 ; or ebx, dword ptr [rax] ; fisttp dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff80002b8e07 : enter -0x7cb8, -0x20 ; adc byte ptr [rax + 9], cl ; ret 0x8348
0xffffff80004dd1d9 : enter -0x7cb8, -0x3a ; adc byte ptr [rax + 0x39], cl ; ret 0xbd72
0xffffff8000797645 : enter -0x7cb8, -0x3c ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000671247 : enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002b5b51 : enter -0x7cb8, -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800025b93e : enter -0x7cb8, -0x3c ; pop rbx ; pop rbp ; ret
0xffffff80002d5c37 : enter -0x7df, 0x48 ; lea eax, [rcx + rax*4] ; pop rbp ; ret
0xffffff800030e093 : enter -0x7df1, -0x2c ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9176
0xffffff80002a33f2 : enter -0x7df1, 0x6e ; add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80002a3356 : enter -0x7df1, 0xa ; add eax, dword ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff800064a00a : enter -0x9c0, -0x3f ; add al, 0xf ; ret 0x8941
0xffffff800064896a : enter -0x9cf, 0x4c ; mov edi, esp ; mov rdx, r15 ; call rax
0xffffff8000370250 : enter -0xc77, -0x3f ; ret
0xffffff8000358384 : enter -0xca3, -1 ; jmp 0xffffff8000358351
0xffffff8000597fcc : enter -0xcd7, 0x29 ; ret
0xffffff80007ad44c : enter -0xe84, 0x5d ; ret
0xffffff80002bbece : enter -0xf7d, 1 ; pop rbp ; ret
0xffffff8000367155 : enter -0xff7, 0x44 ; or eax, eax ; pop rbp ; ret
0xffffff8000278f03 : enter -1, -0x77 ; ret
0xffffff80003b542f : enter -1, -1 ; ret
0xffffff80008f2a28 : enter -1, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80002564a4 : enter -1, 0x7f ; add byte ptr [rax - 0x39], cl ; ret
0xffffff8000287642 : enter -2, -0x77 ; ret
0xffffff80007c7b4a : enter -2, -1 ; call 0xffffff80007d3e26
0xffffff80005c0306 : enter -2, -1 ; call rax
0xffffff800072a58a : enter -3, -0x77 ; ret
0xffffff800045c39b : enter -3, -1 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff800047d229 : enter -3, -1 ; mov rdx, r15 ; call 0xffffff80004494a9
0xffffff8000568105 : enter -4, -0x77 ; ret
0xffffff80008a8b44 : enter 0, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff80002a998a : enter 0, 0 ; add byte ptr [rdx + rax - 0x78], dh ; ret 0xc031
0xffffff800083d526 : enter 0, 0 ; add dword ptr [rdi], ecx ; lahf ; ret 0xf983
0xffffff80007f051e : enter 0, 0 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800072da06 : enter 0, 0 ; or byte ptr [rdi + 0x30], 2 ; pop rbp ; ret
0xffffff80004b3c26 : enter 0, 0 ; pop rbp ; ret
0xffffff8000850c19 : enter 0, 0 ; pop rbx ; leave ; ret
0xffffff80008b3d87 : enter 0, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000389e5b : enter 0, 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80007ae64f : enter 0x100, 0 ; add byte ptr [rcx + rcx*4 + 2], al ; pop rbp ; ret
0xffffff80007ae6b4 : enter 0x100, 0 ; add byte ptr [rcx + rcx*4 + 6], al ; pop rbp ; ret
0xffffff8000895468 : enter 0x124, -0xa ; ret 0x7410
0xffffff80007636c7 : enter 0x13e8, -0x13 ; ret 0x41ff
0xffffff800071ea97 : enter 0x148, -0x10 ; pop rbp ; ret
0xffffff80003464a3 : enter 0x148, 3 ; add qword ptr [rbx + 0x10], rcx ; jmp 0xffffff8000346479
0xffffff800051bd82 : enter 0x16b8, 0 ; add byte ptr [rax], al ; cmove eax, edx ; pop rbp ; ret
0xffffff800075f601 : enter 0x187e, -0x77 ; ret
0xffffff800054ff78 : enter 0x18b, 0x5d ; ret
0xffffff800081289e : enter 0x1b0, 0x48 ; mov dword ptr [rdx], esi ; pop rbp ; ret
0xffffff800075e30c : enter 0x1ee8, 0x46 ; ret
0xffffff8000522b21 : enter 0x22, -0x77 ; ret
0xffffff8000813644 : enter 0x238, 0 ; pop rbp ; ret
0xffffff800072571a : enter 0x25, 0 ; add byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff800035d844 : enter 0x26b, 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80002c808a : enter 0x2b48, 6 ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800072b124 : enter 0x2b77, -0x77 ; ret 0xeac1
0xffffff8000545f0a : enter 0x3145, -0x13 ; jmp rax
0xffffff800067ec39 : enter 0x3145, -1 ; jmp rax
0xffffff80007a5bf6 : enter 0x3175, -0xa ; ret 0xf04
0xffffff80003724a5 : enter 0x3344, 0x55 ; rol byte ptr [rcx - 0x2f], 1 ; ret 0x8944
0xffffff8000740bd6 : enter 0x39, 0 ; je 0xffffff8000740be5 ; pop rbp ; ret
0xffffff80002c1302 : enter 0x394c, 0x2d ; ret
0xffffff8000763abf : enter 0x3be8, 0x37 ; ret
0xffffff800027177b : enter 0x415b, 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000836a10 : enter 0x415b, 0x5e ; pop r15 ; pop rbp ; ret
0xffffff80002fd349 : enter 0x415b, 0x5e ; pop rbp ; ret
0xffffff800053f60c : enter 0x4374, -0x77 ; ror byte ptr [rax - 0x7d], cl ; ret
0xffffff8000582b55 : enter 0x4389, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d86b9 : enter 0x4789, 0x4c ; pop rbp ; ret
0xffffff8000584f81 : enter 0x4789, 4 ; pop rbp ; ret
0xffffff8000584f67 : enter 0x4789, 8 ; pop rbp ; ret
0xffffff80004b743e : enter 0x4890, -0x75 ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000763a92 : enter 0x48e8, -0x17 ; ret 0x31ff
0xffffff8000652b6a : enter 0x48ff, -0x77 ; ret
0xffffff800048a3af : enter 0x48ff, -0x7d ; ret
0xffffff80008989be : enter 0x4908, -0x77 ; adc al, 8 ; mov al, 1 ; pop rbp ; ret
0xffffff80007aadf2 : enter 0x4980, 9 ; add al, 0x89 ; ret
0xffffff80004d6702 : enter 0x4b89, 0x40 ; mov rdi, r12 ; call 0xffffff8000392939
0xffffff80002b5de1 : enter 0x4bb, 0 ; add byte ptr [rax], al ; jmp rax
0xffffff8000908c61 : enter 0x4d8b, -0x2c ; call rbx
0xffffff80008f4e20 : enter 0x4d8b, -0x34 ; call rbx
0xffffff800073f83c : enter 0x4ebb, 0 ; add byte ptr [rax], al ; jmp rax
0xffffff800073d5b9 : enter 0x574, -0x10 ; inc qword ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800073d620 : enter 0x574, -0x10 ; inc qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff8000763b81 : enter 0x59e8, -0x18 ; ret 0x48ff
0xffffff800070743d : enter 0x5bff, 0x41 ; pop rsi ; pop rbp ; ret
0xffffff80004ce317 : enter 0x5c8a, 0x32 ; add dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff8000763c7b : enter 0x5fe8, -0x19 ; ret 0x45ff
0xffffff800048da66 : enter 0x6349, 0x34 ; mov dh, 0x4c ; add esi, esi ; jmp rsi
0xffffff8000763976 : enter 0x64e8, -0x16 ; ret 0x41ff
0xffffff8000369f74 : enter 0x6b48, -0x10 ; jo 0xffffff8000369f68 ; ret 0xda41
0xffffff8000763b6f : enter 0x6be8, -0x18 ; ret 0x45ff
0xffffff800076358c : enter 0x6ee8, 0x3c ; ret
0xffffff80002af997 : enter 0x77, 0x5d ; ret
0xffffff800071ac52 : enter 0x773, -1 ; ret
0xffffff8000584f95 : enter 0x789, 0x5d ; ret
0xffffff800028e55c : enter 0x79da, 0 ; pop rbp ; ret
0xffffff8000350afc : enter 0x7a8e, 0 ; mov edi, 1 ; call rax
0xffffff800076345c : enter 0x7ee8, -0x11 ; ret 0x31ff
0xffffff8000414758 : enter 0x973, -0x76 ; sbb cl, byte ptr [rax - 1] ; ret 0xdb84
0xffffff8000763ccf : enter 0xbe8, -0x19 ; ret 0x31ff
0xffffff80003a03e1 : enter 0xbf, 0xc ; add byte ptr [rax], al ; mov rbx, r8 ; call rax
0xffffff800040d614 : enter 0xc73, -0x7f ; ret 0xfff
0xffffff8000282591 : enter 0xe73, -0x77 ; ret 0xc0ff
0xffffff8000391594 : enter 0xf08, 0x22 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800039a9f1 : enter 0xf40, 0x22 ; loopne 0xffffff800039aa5b ; pop r14 ; pop rbp ; ret
0xffffff800047bd40 : enter 0xf41, -0x49 ; ret
0xffffff80008ec322 : enter 0xf41, -0x6a ; ret
0xffffff80003b3e17 : enter 0xf41, 0x44 ; ret 0x4589
0xffffff8000810884 : enter 0xf44, -0x51 ; ret 0xc031
0xffffff8000340ec2 : enter 0xf44, 0x42 ; ret 0x8944
0xffffff80008ecdc6 : enter 0xf48, -0x5d ; ret 0x820f
0xffffff800071fd3f : enter 0xf48, 0x44 ; ret 0x8b4c
0xffffff80006d5d95 : enter 0xf48, 0x45 ; ret 0xc984
0xffffff80005ae1cc : enter 0xf48, 0x46 ; ret 0xcb29
0xffffff800039974c : enter 0xf48, 0x47 ; ret 0x470f
0xffffff80004235a2 : enter 0xf48, 0x47 ; ret 0x8948
0xffffff80004c1af4 : enter 0xf48, 0x4e ; ret
0xffffff800054d243 : enter 0xf49, -0x51 ; ret 0xc148
0xffffff800082ff6a : enter 1, 0 ; mov rsi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff800089064a : enter 1, 0 ; pop rbp ; jmp rax
0xffffff800038dece : enter 1, 0 ; pop rbp ; ret
0xffffff8000663a56 : enter 2, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000796632 : enter 2, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000879966 : enter 7, 0 ; pop rbp ; jmp rax
0xffffff80008abd29 : enter 8, 0 ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff80006b0044 : fadd dword ptr [rax - 0x76b7fff0] ; ret
0xffffff80004640e4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000414823 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004fa0a7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800072da16 : fadd dword ptr [rax] ; add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x20 ; pop rbp ; ret
0xffffff80004b75d6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b6927 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006729b4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80002b25b4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; test rax, rax ; je 0xffffff80002b2636 ; call rax
0xffffff80006d7f36 : fadd dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80008d29e9 : fadd dword ptr [rbp - 0x7b] ; ror byte ptr [rcx + 0xf], 0x44 ; ret
0xffffff80003669d8 : fadd dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x44 ; ret 0xc35d
0xffffff80006b2f4e : fadd dword ptr [rbx + 0xf410df9] ; xchg eax, esp ; ret
0xffffff80005baa88 : fadd dword ptr [rbx - 0x3c090420] ; adc dword ptr [rdi], ecx ; ret
0xffffff800061c554 : fadd dword ptr [rbx - 0x6bf0f207] ; ret
0xffffff80005c0e5b : fadd dword ptr [rcx - 0x3f] ; ret
0xffffff800037052f : fadd dword ptr [rcx - 0x3f] ; ret 0x411e
0xffffff80008cf5f7 : fadd dword ptr [rcx - 0x42] ; ret 2
0xffffff80008d2533 : fadd dword ptr [rcx - 0x47] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rax ; jmp 0xffffff80008d2593
0xffffff80008d2565 : fadd dword ptr [rcx - 0x47] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov r10, rax ; jmp 0xffffff80008d2593
0xffffff8000421c94 : fadd dword ptr [rcx - 0x76b7fff7] ; ret
0xffffff80003ced2f : fadd dword ptr [rcx - 0x77] ; ret
0xffffff800049e347 : fadd dword ptr [rcx - 1] ; ret 0x8944
0xffffff8000878e5f : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80003b4486 : fadd dword ptr [rcx] ; ret
0xffffff80005c0bab : fadd dword ptr [rcx] ; shr dword ptr [rcx], 1 ; ret 0xc389
0xffffff800087996e : fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff8000807eba : fadd dword ptr [rip + 0x5d5b0000] ; ret
0xffffff80008aa2d4 : fadd dword ptr [rip - 0x76b70005] ; ret
0xffffff80008b7555 : fadd qword ptr [r9 + 0xfffe3] ; add byte ptr [rcx], cl ; ret
0xffffff800082dd97 : fadd qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072dc06 : fadd qword ptr [rax] ; add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 0x40 ; pop rbp ; ret
0xffffff8000555dc2 : fadd qword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000311e70 : fadd qword ptr [rbp - 0x77] ; jmp 0xffffff8041f3a7c7
0xffffff80005644d7 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b7556 : fadd qword ptr [rcx + 0xfffe3] ; add byte ptr [rcx], cl ; ret
0xffffff8000493baa : fadd qword ptr [rcx - 0x75] ; xor byte ptr [rax - 1], r9b ; ret
0xffffff8000259f7f : fadd qword ptr [rcx - 0x77] ; fdecstp ; ret 0x7403
0xffffff8000625fa8 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003b1cdc : fadd qword ptr [rdi] ; jb 0xffffff80003b1ce5 ; pop rbp ; ret
0xffffff80005f8874 : fadd st(1) ; call 0xffffff8054ecc9a2
0xffffff80005f89c2 : fadd st(1) ; call 0xffffff8054eccaf0
0xffffff80005f8b10 : fadd st(1) ; call 0xffffff8054eccc3e
0xffffff800036fa1a : faddp st(1) ; ret 0x451e
0xffffff8000b45967 : fbld tbyte ptr [rax] ; ret
0xffffff80004b7c0d : fbld tbyte ptr [rbp] ; pop rbp ; ret
0xffffff800054f65d : fbld tbyte ptr [rcx] ; pop rbp ; add byte ptr [rax - 0x77], cl ; ret 0x77e8
0xffffff8000909929 : fbld tbyte ptr [rdx] ; add bl, ch ; ret 0x8348
0xffffff80009098d1 : fbld tbyte ptr [rdx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80007760ed : fbld tbyte ptr [rsi] ; ret 0x48ff
0xffffff80002d5fa8 : fbstp tbyte ptr [rax + rcx - 1] ; ret 0xc031
0xffffff80004d9385 : fbstp tbyte ptr [rax - 0x17] ; ret
0xffffff800049cfaa : fbstp tbyte ptr [rbp - 0x1d] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800085ea53 : fbstp tbyte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006cae82 : fcmovb st(0), st(0) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005666b2 : fcmovb st(0), st(0) ; loop 0xffffff80005666be ; jmp 0xffffff8000566722
0xffffff80005c0bbc : fcmovb st(0), st(1) ; ret 0x3108
0xffffff8000372846 : fcmovb st(0), st(1) ; ret 0x8d05
0xffffff800082aa9a : fcmovb st(0), st(6) ; add al, 0x16 ; and dword ptr [rcx - 0x7d], eax ; ret
0xffffff800057ae91 : fcmovbe st(0), st(5) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006518d2 : fcmove st(0), st(0) ; ret
0xffffff8000b45d87 : fcmovnb st(0), st(1) ; jmp 0xffffff8000b45da8
0xffffff8000b4720b : fcmovnb st(0), st(1) ; jmp 0xffffff8000b47224
0xffffff8000370432 : fcmovnb st(0), st(1) ; rcr dword ptr [rsi], 0xd1 ; ret
0xffffff8000374670 : fcmovnb st(0), st(1) ; ret
0xffffff800036fb78 : fcmovnbe st(0), st(1) ; ret
0xffffff800057ad68 : fcmovnbe st(0), st(5) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006516d1 : fcmovne st(0), st(2) ; ret
0xffffff80005d06a6 : fcmovne st(0), st(3) ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000274592 : fcmovu st(0), st(3) ; imul eax, dword ptr [rax], -0x75 ; add al, 0x81 ; pop rbp ; ret
0xffffff800053b484 : fcom dword ptr [rbp - 0x76b7ffd9] ; ret
0xffffff8000653709 : fcom dword ptr [rcx + 0x35] ; add byte ptr [rcx], dh ; shr al, 0x8c ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800056ac11 : fcom st(2) ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff8000770316 : fcom st(5) ; dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000393049
0xffffff80008d8df4 : fcomi st(3) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c3811 : fcomi st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d6c6c : fcomi st(6) ; ret 0x7502
0xffffff800039367e : fcomi st(6) ; ret 0xbe03
0xffffff80004d5b5b : fcomi st(6) ; ret 0xf01
0xffffff8000b3fa07 : fcomip st(6) ; push rsp ; xor ecx, dword ptr [rax + 0x31] ; ret 0x8d4c
0xffffff80007aa2ce : fcomip st(7) ; ret 0
0xffffff80005631d1 : fcomip st(7) ; shl dword ptr [rcx], cl ; ret
0xffffff800040c047 : fcomp dword ptr [rbp - 0x3d] ; mov rax, rcx ; pop rbp ; ret
0xffffff800055ee84 : fcomp dword ptr [rbx + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006901c1 : fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff800025d1bb : fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008aa477 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800025458b : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000843547 : fcomp dword ptr [rbx + 0x5d] ; ret
0xffffff80007fcb5c : fcomp dword ptr [rip - 0x118affd7] ; xor eax, eax ; pop rbp ; ret
0xffffff8000582493 : fcomp qword ptr [rbp - 0x3d] ; mov rax, rcx ; pop rbp ; ret
0xffffff80002d6113 : fcomp qword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000765164 : fcomp st(0) ; ret 0x31ff
0xffffff8000616224 : fcomp st(0), st(1) ; push rax ; add byte ptr [rcx], bh ; ret
0xffffff80008c3810 : fcomp st(0), st(3) ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005a48a0 : fcomp st(0), st(5) ; push rdi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006bdcfd : fcos ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000606188 : fcos ; jmp 0xffffff80006061ec
0xffffff80008cf1ee : fcos ; nop ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff8000374a4d : fcos ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000865515 : fdecstp ; pop r8 ; add dword ptr [rbx + rdx*8 - 0x15], esi ; ret 0x8b49
0xffffff80004b15f2 : fdecstp ; ret
0xffffff8000259f82 : fdecstp ; ret 0x7403
0xffffff8000685361 : fdisi8087_nop ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000289dec : fdiv dword ptr [rbp + 7] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800077a2b4 : fdiv dword ptr [rcx - 0x3b7cb701] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80006a5744 : fdiv dword ptr [rcx] ; ret
0xffffff80004a3bf2 : fdiv dword ptr [rdi + rdx*2 - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0xffffff80004918e0 : fdiv dword ptr [rdi - 0x77] ; ret
0xffffff8000679784 : fdiv dword ptr [rdx - 0x76b7ffed] ; ret
0xffffff800039f25c : fdiv dword ptr [rdx - 0xf] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800027fcc5 : fdiv dword ptr [rsi + 0x21] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007f1639 : fdiv qword ptr [rbx] ; add al, ch ; call qword ptr [rbx]
0xffffff800049162c : fdiv qword ptr [rcx] ; leave ; jmp 0xffffff80004919ca
0xffffff80004a76e5 : fdiv st(0) ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000379644 : fdiv st(2) ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800079c208 : fdiv st(7) ; fmul dword ptr [rdi] ; ret
0xffffff80005bc4c6 : fdiv st(7) ; ret
0xffffff80007f4140 : fdiv st(7) ; ret 0
0xffffff800042458c : fdiv st(7) ; ret 0x3574
0xffffff80002afc4a : fdiv st(7), st(0) ; call 0xffffff80002be749
0xffffff800063f559 : fdiv st(7), st(0) ; call qword ptr [rsi]
0xffffff80005c7a65 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80005e750b : fdiv st(7), st(0) ; dec dword ptr [rax - 1] ; ret
0xffffff80005cf537 : fdiv st(7), st(0) ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a4062 : fdiv st(7), st(0) ; ret
0xffffff80007075f4 : fdiv st(7), st(0) ; xor eax, eax ; pop rbp ; ret
0xffffff80005d0613 : fdiv st(7), st(0) ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bbc2e : fdivp st(2) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000793d59 : fdivp st(3) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000828a20 : fdivp st(6) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d9d2a : fdivp st(7) ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800075db2d : fdivp st(7) ; call qword ptr [rdx]
0xffffff800052c370 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c7836 : fdivp st(7) ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000b439e0 : fdivp st(7) ; jmp rbx
0xffffff800068c2f9 : fdivp st(7) ; jmp rsi
0xffffff800080ef21 : fdivp st(7) ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008123ae : fdivp st(7) ; nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff80004b3985 : fdivp st(7) ; pop rbp ; ret
0xffffff80004b4ba6 : fdivp st(7) ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000876cba : fdivp st(7) ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006e684f : fdivp st(7) ; xor eax, eax ; pop rbp ; ret
0xffffff80006e67c7 : fdivp st(7) ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000690945 : fdivr dword ptr [edi + 0x5dc031ff] ; ret
0xffffff80003b0d04 : fdivr dword ptr [rax + rax] ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0xffffff80004c6364 : fdivr dword ptr [rax] ; add bh, bh ; ret
0xffffff800025ed64 : fdivr dword ptr [rbx + rdx] ; add dh, dh ; ret
0xffffff80002f2214 : fdivr dword ptr [rbx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003ad35a : fdivr dword ptr [rcx] ; add cl, ch ; ret
0xffffff80007c1422 : fdivr dword ptr [rcx] ; ret 0x4d0f
0xffffff8000b40adf : fdivr dword ptr [rcx] ; ret 0xb60f
0xffffff8000690946 : fdivr dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff800078f4b7 : fdivr dword ptr [rdx + 4] ; mov rdi, r15 ; call rax
0xffffff80007908a8 : fdivr dword ptr [rdx + 8] ; mov rdi, rbx ; call rax
0xffffff8000895810 : fdivr qword ptr [rbx - 0x76b70009] ; ret
0xffffff800063f660 : fdivr qword ptr [rcx - 0x76b7ffb7] ; ret 0x74e8
0xffffff800028e385 : fdivr qword ptr [rcx] ; add byte ptr [rax], dh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800028e351 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002d6e0a : fdivr st(4) ; dec dword ptr [rax - 0x75] ; jge 0xffffff80002d6db2 ; call 0xffffff8000393049
0xffffff8000784368 : fdivr st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800064efc0 : fdivr st(4), st(0) ; ret
0xffffff80007f1de4 : fdivr st(5) ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800090195f : fdivr st(6) ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007420b0 : fdivr st(7) ; call 0xffffff80007fe354
0xffffff80007420af : fdivr st(7) ; call 0xffffff80007fe355
0xffffff800077f7f1 : fdivr st(7) ; dec dword ptr [rax + 0x39] ; ret
0xffffff8000341b0a : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006eb37d : fdivr st(7) ; jmp qword ptr [rsi]
0xffffff80006eb379 : fdivr st(7) ; jmp rsp
0xffffff8000514d32 : fdivr st(7) ; mov eax, 0x16 ; pop rbp ; ret
0xffffff800051219b : fdivr st(7) ; mov eax, 0xc ; jmp 0xffffff800051216e
0xffffff800050bfb0 : fdivr st(7) ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80006064ab : fdivr st(7) ; mov rdi, qword ptr [rbp - 0x30] ; mov esi, r13d ; call rbx
0xffffff800050f855 : fdivr st(7) ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000306098 : fdivr st(7) ; ret
0xffffff800038b583 : fdivr st(7) ; xchg rsi, rdi ; call rsi
0xffffff800060cddc : fdivr st(7) ; xor esi, esi ; mov rdi, r15 ; call 0xffffff8000529009
0xffffff8000273c8e : fdivrp st(0) ; add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbp ; ret
0xffffff8000885fbd : fdivrp st(1) ; sub al, byte ptr [rax] ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008d33a2 : fdivrp st(5) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000764754 : ffree st(2) ; inc dword ptr [rbx + rcx*4 + 0x3d] ; ret 0x3cb6
0xffffff80003b3fa0 : ffreep st(1) ; call qword ptr [rax]
0xffffff800080ff09 : fiadd dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007c6c5c : fiadd dword ptr [rax] ; add byte ptr [rbx + 0xf00c47d], al ; xchg eax, ebp ; ret 0x888d
0xffffff8000b3d268 : fiadd dword ptr [rax] ; ret 0xd820
0xffffff8000374595 : fiadd dword ptr [rbp + 0x31] ; fiadd dword ptr [rbp + 0x31] ; ret 0x8b48
0xffffff8000374598 : fiadd dword ptr [rbp + 0x31] ; ret 0x8b48
0xffffff80004eb9f1 : fiadd dword ptr [rbx - 0x6bf0f307] ; ret
0xffffff8000281b65 : fiadd dword ptr [rcx + rcx*4 - 7] ; call qword ptr [rdi]
0xffffff80003727aa : fiadd dword ptr [rcx - 0x2f] ; ret 0xcf89
0xffffff80008cf4d5 : fiadd dword ptr [rcx - 0x42] ; ret 2
0xffffff80003b42d4 : fiadd dword ptr [rcx - 0x7f] ; ret
0xffffff8000b47227 : fiadd dword ptr [rcx - 0x80] ; ret 0x41c8
0xffffff8000b3e428 : fiadd dword ptr [rcx - 0x80] ; ret 0x45cd
0xffffff800029e19e : fiadd dword ptr [rcx - 1] ; ret 0xf41
0xffffff8000589fdf : fiadd dword ptr [rcx] ; ret
0xffffff800058c6c2 : fiadd dword ptr [rcx] ; ret 0x880f
0xffffff800064f2da : fiadd dword ptr [rcx] ; ret 0x8b48
0xffffff800072930e : fiadd dword ptr [rcx] ; ret 0xc148
0xffffff800058bbec : fiadd dword ptr [rcx] ; ret 0xd089
0xffffff8000b3cc28 : fiadd dword ptr [rcx] ; ret 0xda01
0xffffff800036f762 : fiadd dword ptr [rcx] ; ret 0xf089
0xffffff8000454d08 : fiadd dword ptr [rdx] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000616672 : fiadd word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x5ff
0xffffff800088568e : fiadd word ptr [rax] ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008b50bd : fiadd word ptr [rax] ; sub byte ptr [rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800085e6ee : fiadd word ptr [rbp - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007c742c : fiadd word ptr [rcx + 0x800fe] ; add byte ptr [rdi], cl ; lahf ; ret 0x8548
0xffffff800036bc80 : fiadd word ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086e369 : fiadd word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800066120a : fiadd word ptr [rcx + rcx*4 - 6] ; call 0xffffff800028e1b7
0xffffff8000696f65 : ficom dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff8000686fe2 : ficom dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000860e2e : ficom word ptr [rax] ; sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80002d6065 : ficomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800031fa72 : ficomp dword ptr [rdx - 0x7eb7ff83] ; ret
0xffffff8000606fe5 : ficomp dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005cf6ac : ficomp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff800082b5bd : ficomp word ptr [rbx + 0x5b280030] ; pop r14 ; pop rbp ; ret
0xffffff80007feed2 : fidiv dword ptr [rdi - 0x3fce0052] ; pop rbp ; ret
0xffffff80007fe2cd : fidiv dword ptr [rsi + 0x1b8ff] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800082e0bd : fidiv word ptr [rax + 0x30] ; add byte ptr [rax + 0x5b], dl ; pop r14 ; pop rbp ; ret
0xffffff80008a49bb : fidiv word ptr [rbp - 0xe] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076f85e : fidiv word ptr [rcx] ; ret 0x49ff
0xffffff80005ba049 : fidiv word ptr [rcx] ; shr cl, cl ; ret 0
0xffffff800089504e : fidiv word ptr [rdi] ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007a7c6e : fidiv word ptr [rdx - 3] ; push rsi ; ret
0xffffff800076741e : fidiv word ptr [rdx] ; ret
0xffffff80007fe2f6 : fidiv word ptr [rsi + 0x5dc031ff] ; ret
0xffffff8000725ecd : fidiv word ptr [rsp + rax + 0x66] ; mov eax, 0x5d980005 ; ret
0xffffff800028e55d : fidivr dword ptr [rcx] ; pop rbp ; ret
0xffffff800025da9c : fidivr dword ptr [rcx] ; ret
0xffffff80007f51d2 : fidivr word ptr [rcx + 0x5bc031ff] ; pop r14 ; pop rbp ; ret
0xffffff800081745e : fidivr word ptr [rcx - 0x76b7ffff] ; ret
0xffffff8000b46d62 : fidivr word ptr [rdi - 0x100625] ; call qword ptr [rbx]
0xffffff8000674327 : fidivr word ptr [rdi] ; add byte ptr [rcx], dh ; shr al, 0x1f ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe9ff
0xffffff8000345508 : fild dword ptr [rax + rax] ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ee2e8 : fild dword ptr [rbp + 0x31] ; in al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800061c3ae : fild dword ptr [rbp + 0xf] ; ret
0xffffff8000696271 : fild dword ptr [rbp - 0x76b70040] ; fucomip st(0) ; ret
0xffffff800067346b : fild dword ptr [rbx - 0x6af0fd05] ; ret
0xffffff800057310d : fild dword ptr [rbx - 0x6bf0d105] ; ret
0xffffff8000b456fa : fild dword ptr [rcx + 0x100e3] ; add byte ptr [rcx], al ; ret
0xffffff80003d1247 : fild dword ptr [rcx + 0xf] ; ret
0xffffff80003c30ee : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8b4c
0xffffff800085cc32 : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0xffffff8000b49ed0 : fild dword ptr [rcx + 8] ; ret
0xffffff800036fe3a : fild dword ptr [rcx - 0x2f] ; ret
0xffffff800077f48e : fild dword ptr [rcx - 0x77] ; popfq ; add bh, bh ; ret
0xffffff8000b3d77a : fild dword ptr [rcx - 0x77] ; ret 0xc141
0xffffff80003919e1 : fild dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff8000526fc5 : fild dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000b498d4 : fild dword ptr [rcx - 0x80] ; ret
0xffffff800058bc48 : fild dword ptr [rcx] ; ret
0xffffff80005afa9a : fild dword ptr [rdi + rcx - 0x4a] ; ret 0xf44
0xffffff80003b1dec : fild dword ptr [rdx - 0x77] ; pop rsp ; adc al, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e0c : fild dword ptr [rdx - 0x77] ; pop rsp ; adc cl, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e2c : fild dword ptr [rdx - 0x77] ; pop rsp ; adc dl, byte ptr [rax + rcx*4] ; ret
0xffffff8000663571 : fild dword ptr [rip - 0x76b80000] ; ret
0xffffff80003db0a0 : fild dword ptr [rsi] ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80002bb501 : fild word ptr [r13 + 0x80a75f6] ; ret 0xf280
0xffffff80006164cc : fild word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002bb502 : fild word ptr [rbp + 0x80a75f6] ; ret 0xf280
0xffffff80002759f4 : fild word ptr [rbp + rcx*4 + 0x41] ; inc dword ptr [rbp - 0x77] ; ret 0x2941
0xffffff8000609092 : fild word ptr [rcx + rcx*4 - 0xa] ; call r15
0xffffff8000566fcf : fild word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff80008ba621 : fild word ptr [rcx + rcx*4 - 0xa] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80003518e7 : fild word ptr [rcx + rcx*4 - 2] ; call 0xffffff80008edb16
0xffffff80005ef2e6 : fild word ptr [rcx + rcx*4 - 2] ; call r14
0xffffff800077f0fd : fild word ptr [rcx - 0x75] ; pop rdi ; and al, 0x74 ; sbb edi, edi ; ret
0xffffff8000584383 : fild word ptr [rcx] ; ret
0xffffff8000283874 : fimul dword ptr [rax + 0x21] ; ret
0xffffff800077c1ba : fimul dword ptr [rax + 0x21] ; ret 0x1b9
0xffffff800035967a : fimul dword ptr [rax + 0x21] ; ret 0x8545
0xffffff80007df649 : fimul dword ptr [rax + 0x21] ; ret 0xc931
0xffffff80002d5f3e : fimul dword ptr [rax + 0x29] ; ret 0xc148
0xffffff800051fa8c : fimul dword ptr [rax + 0x39] ; ret
0xffffff80004f4c1e : fimul dword ptr [rax + 0x39] ; ret 0xf48
0xffffff80002fa1ac : fimul dword ptr [rax + 0x63] ; ret
0xffffff80006c3991 : fimul dword ptr [rax + 0x63] ; ret 0x8d48
0xffffff80003c90b7 : fimul dword ptr [rax - 0x77] ; ret
0xffffff800078ce95 : fimul dword ptr [rax - 0x7d] ; ret 0x3148
0xffffff8000589a5c : fimul dword ptr [rax - 0x7d] ; ret 0x3178
0xffffff800057adba : fimul dword ptr [rax - 0x7d] ; ret 0x4108
0xffffff800031669f : fimul dword ptr [rax - 0x7d] ; ret 0x4918
0xffffff80004eea36 : fimul dword ptr [rax - 0x7d] ; ret 0x4c04
0xffffff80005a4f3d : fimul dword ptr [rax - 0x7d] ; ret 0x4c24
0xffffff8000263672 : fimul dword ptr [rax - 0x7d] ; ret 0x8002
0xffffff80008cbcb8 : fimul dword ptr [rax - 0x7d] ; ret 0x8302
0xffffff800057d27e : fimul dword ptr [rax - 0x7d] ; ret 0xb908
0xffffff8000713d9c : fimul dword ptr [rax - 0x7d] ; ret 0xc732
0xffffff80007a690c : fimul dword ptr [rax - 0x7f] ; ret 0x2d4
0xffffff8000826101 : fimul dword ptr [rax - 0x7f] ; ret 0x88
0xffffff8000790b9c : fimul dword ptr [rax - 1] ; ret 0x894c
0xffffff800027c7d1 : fimul dword ptr [rbp - 0x77] ; clc ; call 0xffffff80002689e6
0xffffff80007c1285 : fimul dword ptr [rbp - 0x77] ; loope 0xffffff80007c1277 ; ret 0xfcbf
0xffffff8000b47948 : fimul dword ptr [rbx] ; mov bh, 0xfa ; jmp rdi
0xffffff8000b4a4d9 : fimul dword ptr [rcx + 0x31d121c1] ; ret 0x48d
0xffffff80003aad45 : fimul dword ptr [rcx + 0x7276001d] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80008bd2b5 : fimul dword ptr [rcx + rcx*4 - 0x2f] ; mov r8, r14 ; call r15
0xffffff80008bd692 : fimul dword ptr [rcx + rcx*4 - 0x2f] ; mov r8, r15 ; call r14
0xffffff80007aefe8 : fimul dword ptr [rcx + rcx*4 - 0x30] ; pop rbp ; ret
0xffffff8000791dbc : fimul dword ptr [rcx + rcx*4 - 9] ; mov rsi, rbx ; call rax
0xffffff800033e1cc : fimul dword ptr [rcx - 0x77] ; ret
0xffffff80003b1faa : fimul dword ptr [rcx] ; ret 0x8545
0xffffff80002af94f : fimul dword ptr [rdi] ; rol qword ptr [rcx], 1 ; ret 0x1589
0xffffff80002af7a6 : fimul dword ptr [rdi] ; rol qword ptr [rcx], 1 ; ret 0x58b
0xffffff800038093f : fimul dword ptr [rdi] ; test al, bh ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff8000610bda : fimul dword ptr [rdi] ; test byte ptr [rsi - 0x9fffffd], dl ; ret
0xffffff8000387ed1 : fimul dword ptr [rdx - 0x1d7fefec] ; add edi, edi ; ret
0xffffff80007c0bb9 : fimul word ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002ba5f4 : fimul word ptr [rax - 0x77] ; ret
0xffffff80004e6d55 : fimul word ptr [rax - 0x77] ; ret 0x22e8
0xffffff80002c9814 : fimul word ptr [rax - 0x77] ; ret 0x23e8
0xffffff80008d800b : fimul word ptr [rax - 0x77] ; ret 0x8948
0xffffff800048ceb3 : fimul word ptr [rax - 0x77] ; ret 0x8d48
0xffffff80008171fc : fimul word ptr [rax - 0x77] ; ret 0x91ff
0xffffff8000267742 : fimul word ptr [rax - 0x77] ; ret 0xb5e8
0xffffff80008b9ca8 : fimul word ptr [rax - 0x77] ; ret 0xbfe8
0xffffff80002b5ac2 : fimul word ptr [rax - 0x77] ; ret 0xd5e8
0xffffff80006c8aa2 : fimul word ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x394d
0xffffff80002d3583 : fimul word ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800082dc27 : fimul word ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx + 0x4d], 0x89 ; iretd ; call rax
0xffffff8000493e21 : fimul word ptr [rax - 0x7d] ; ret
0xffffff8000394f41 : fimul word ptr [rbx + rcx*4 + 5] ; ret
0xffffff8000b46ad6 : fimul word ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80007d23ed : fimul word ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80003b823f : fimul word ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800087e8e2 : fimul word ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff8000882200 : fimul word ptr [rcx + rcx*4 - 0x1e] ; mov rax, qword ptr [rbp - 0x30] ; call rax
0xffffff8000757ace : fimul word ptr [rcx + rcx*4 - 0x1f] ; call r15
0xffffff80008bd658 : fimul word ptr [rcx + rcx*4 - 0x2e] ; mov rcx, r15 ; call r14
0xffffff800087e3f3 : fimul word ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff80008f0853 : fimul word ptr [rcx + rcx*4 - 6] ; call rax
0xffffff800058a898 : fimul word ptr [rdi] ; xchg eax, esi ; ret
0xffffff80005f1f9f : fimul word ptr [rdi] ; xchg eax, esp ; ret
0xffffff80007aeebf : fimul word ptr [rdx + rax] ; je 0xffffff80007aeece ; xor eax, eax ; pop rbp ; ret
0xffffff80008846bd : fimul word ptr [rdx] ; sub eax, dword ptr [rax] ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000766021 : fist dword ptr [rcx] ; ret
0xffffff8000686e7c : fist dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000566cdd : fist word ptr [rbx] ; push rdi ; add al, ch ; pop rdx ; ret
0xffffff8000b3a69d : fist word ptr [rcx - 0x2e] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000686a75 : fist word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000888175 : fist word ptr [rsi] ; add al, ch ; ret
0xffffff80004ebde1 : fistp dword ptr [rbp + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800046b824 : fistp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003000cd : fistp qword ptr [rbx] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006ab65d : fistp qword ptr [rcx - 0x32] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800026349f : fistp qword ptr [rcx] ; ret 0x490f
0xffffff80005cf71f : fistp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff8000350cf0 : fistp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000627a4a : fisttp dword ptr [rax + 0x39] ; ret 0x476
0xffffff80008881af : fisttp dword ptr [rax + 0x5e415bd8] ; pop rbp ; ret
0xffffff80005c78f5 : fisttp dword ptr [rax + 0xf] ; ret 0x8b48
0xffffff800064f368 : fisttp dword ptr [rax + 1] ; ret
0xffffff8000467796 : fisttp dword ptr [rax + 9] ; ret
0xffffff80008e23bc : fisttp dword ptr [rax - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000796a12 : fisttp dword ptr [rax - 0x73] ; call 0xffffff7fc3bd796b
0xffffff800025d1b8 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007bd038 : fisttp dword ptr [rax - 0x77] ; pop rbp ; or byte ptr [rdi], 0x95 ; ret 0x9589
0xffffff80008caa47 : fisttp dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x89 ; ret
0xffffff800062b9fb : fisttp dword ptr [rax - 0x7d] ; ret
0xffffff80002dd4cc : fisttp dword ptr [rax - 1] ; ret
0xffffff80002a914b : fisttp dword ptr [rbp + rcx*4 + 0x35] ; ret
0xffffff800029a740 : fisttp dword ptr [rbp + rcx*4 + 0x3d] ; ret
0xffffff8000835837 : fisttp dword ptr [rbp - 0x77] ; call 0xffffff7fc482118f
0xffffff80004937fc : fisttp dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80008f2954 : fisttp dword ptr [rcx + rcx*4 - 1] ; mov rsi, r14 ; call rcx
0xffffff80008f2794 : fisttp dword ptr [rcx + rcx*4 - 9] ; call rcx
0xffffff80005170c8 : fisttp dword ptr [rcx - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80005fe56c : fisttp dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret
0xffffff80004b905b : fisttp dword ptr [rcx - 0x77] ; ret
0xffffff80008ecd2c : fisttp dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff8000535761 : fisttp dword ptr [rcx - 0x7eb70043] ; ret
0xffffff800035aa46 : fisttp dword ptr [rcx] ; ret
0xffffff80003a498a : fisttp dword ptr [rdi] ; add eax, 0x58595b41 ; ret
0xffffff8000711f64 : fisttp dword ptr [rdi] ; mov dword ptr [rbx + rax - 0x48f10000], eax ; ret
0xffffff80006de77e : fisttp dword ptr [rdi] ; mov dword ptr [rsi + rax - 0x48f10000], ecx ; ret
0xffffff80003e1525 : fisttp dword ptr [rdi] ; ret
0xffffff80003b1f20 : fisttp dword ptr [rdi] ; ret 0xf031
0xffffff800086d5a0 : fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x44ffffff], edi ; ret 2
0xffffff80007c29d4 : fisttp dword ptr [rdi] ; test dword ptr [rip - 0x16000001], esi ; ret
0xffffff80002ec8a6 : fisttp dword ptr [rdi] ; test edi, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0xc031
0xffffff80002c8969 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0xffffff80008367ea : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8441
0xffffff80006d8b2f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8566
0xffffff800045a9d1 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8d8b
0xffffff80007e5a62 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xf44
0xffffff80005af6d8 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff80005af708 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x3944
0xffffff80005af6c6 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8944
0xffffff80007bd00d : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8b44
0xffffff8000325c42 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0xffffff80007533a8 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0xffffff800061edfc : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xc1f6
0xffffff800064eb08 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xc4f6
0xffffff8000753350 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0xf641
0xffffff80002eb08c : fisttp qword ptr [rax + 0x63] ; ret
0xffffff800042cc96 : fisttp qword ptr [rax + rax] ; mov r10d, eax ; jmp 0xffffff800042ccef
0xffffff800065fff0 : fisttp qword ptr [rax - 0x73] ; xchg eax, ebp ; mov eax, 0xe8fffffe ; ret
0xffffff80005a71cb : fisttp qword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x410
0xffffff800029e266 : fisttp qword ptr [rax - 0x77] ; ret
0xffffff80006ee7c5 : fisttp qword ptr [rax - 1] ; ret 0x8d48
0xffffff8000b49940 : fisttp qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80007e5052 : fisttp qword ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000590a25 : fisttp word ptr [rax + 0x63] ; sbb al, 0x8f ; add rbx, rdi ; jmp rbx
0xffffff80004bc640 : fisttp word ptr [rax + 9] ; ret
0xffffff80002597c2 : fisttp word ptr [rax - 0x3f] ; jmp qword ptr [rax]
0xffffff80004c4850 : fisttp word ptr [rax - 0x75] ; jne 0xffffff80004c47fa ; call rax
0xffffff800054dedb : fisttp word ptr [rax - 0x75] ; jne 0xffffff800054deb1 ; mov r15, r8 ; call r15
0xffffff80007636eb : fisttp word ptr [rax - 0x75] ; jne 0xffffff8000763695 ; call rax
0xffffff800077f700 : fisttp word ptr [rax - 0x75] ; jne 0xffffff800077f6d3 ; call r15
0xffffff800077f74f : fisttp word ptr [rax - 0x75] ; jne 0xffffff800077f722 ; call r15
0xffffff800077faa2 : fisttp word ptr [rax - 0x75] ; jne 0xffffff800077fa7d ; call r12
0xffffff800077fba7 : fisttp word ptr [rax - 0x75] ; jne 0xffffff800077fb82 ; call r12
0xffffff800044e953 : fisttp word ptr [rax - 0x75] ; shr r8b, 1 ; ret
0xffffff80008b22d5 : fisttp word ptr [rax - 0x77] ; pop rbp ; ror byte ptr [rcx + rcx*4 - 0x1a], 1 ; call rax
0xffffff800075e308 : fisttp word ptr [rax - 0x77] ; push rbp ; enter 0x1ee8, 0x46 ; ret
0xffffff8000399768 : fisttp word ptr [rax - 0x77] ; ret
0xffffff8000605fd6 : fisttp word ptr [rax - 0x77] ; ret 0x1e8
0xffffff80007f70f8 : fisttp word ptr [rax - 0x77] ; ret 0x2fe8
0xffffff800035d365 : fisttp word ptr [rax - 0x77] ; ret 0x32e8
0xffffff8000293a45 : fisttp word ptr [rax - 0x77] ; ret 0x52e8
0xffffff80007b0dcc : fisttp word ptr [rax - 0x77] ; ret 0x5be8
0xffffff8000664374 : fisttp word ptr [rax - 0x77] ; ret 0x63e8
0xffffff80005b5eab : fisttp word ptr [rax - 0x77] ; ret 0x7d83
0xffffff8000877d54 : fisttp word ptr [rax - 0x77] ; ret 0x894c
0xffffff80004e758b : fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff800089a08f : fisttp word ptr [rax - 0x77] ; ret 0x91ff
0xffffff80006e607d : fisttp word ptr [rax - 0x77] ; ret 0x9ae8
0xffffff80002888dc : fisttp word ptr [rax - 0x77] ; ret 0xbbe8
0xffffff80002887cc : fisttp word ptr [rax - 0x77] ; ret 0xcbe8
0xffffff800074ba42 : fisttp word ptr [rax - 0x77] ; ret 0xd5e8
0xffffff80006e602f : fisttp word ptr [rax - 0x77] ; ret 0xe8e8
0xffffff800090a895 : fisttp word ptr [rax - 0x77] ; ret 0xe95b
0xffffff80007a49db : fisttp word ptr [rax - 0x77] ; ret 0xff41
0xffffff80003728e8 : fisttp word ptr [rax - 0x7d] ; ret
0xffffff80007ae7c7 : fisttp word ptr [rax - 1] ; ret 0x8949
0xffffff8000833af8 : fisttp word ptr [rbp - 0xb72f89] ; ret
0xffffff80004d94a7 : fisttp word ptr [rbx - 0x76b3778b] ; cli ; call rcx
0xffffff800075debb : fisttp word ptr [rcx + rcx*4 - 0x12] ; call rax
0xffffff800062c227 : fisttp word ptr [rcx + rcx*4 - 0x16] ; call rax
0xffffff80007ceff1 : fisttp word ptr [rcx + rcx*4 - 0x16] ; call rcx
0xffffff80007cf5a2 : fisttp word ptr [rcx + rcx*4 - 0x16] ; mov qword ptr [rbp - 0x48], r13 ; call rcx
0xffffff80003a0b05 : fisttp word ptr [rcx + rcx*4 - 0x1a] ; call rax
0xffffff800088f79d : fisttp word ptr [rcx + rcx*4 - 0x1a] ; mov edx, r15d ; call rbx
0xffffff80008fe57d : fisttp word ptr [rcx + rcx*4 - 0x1a] ; mov rcx, r14 ; call r8
0xffffff8000398027 : fisttp word ptr [rcx + rcx*4 - 0x1a] ; mov rdx, rax ; call r14
0xffffff80005ed3d4 : fisttp word ptr [rcx + rcx*4 - 0x1e] ; call rax
0xffffff80004b49aa : fisttp word ptr [rcx + rcx*4 - 0xa] ; call r12
0xffffff80005225d0 : fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff800054fb8e : fisttp word ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff80007908d4 : fisttp word ptr [rcx + rcx*4 - 0xa] ; mov rdx, r12 ; call rax
0xffffff80003592ee : fisttp word ptr [rcx + rcx*4 - 0xa] ; mov rdx, r15 ; call 0xffffff8000315579
0xffffff8000845689 : fisttp word ptr [rcx + rcx*4 - 0xa] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800081f94c : fisttp word ptr [rcx + rcx*4 - 0xe] ; call r12
0xffffff800054c7a6 : fisttp word ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff8000855ed6 : fisttp word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007ce05e : fisttp word ptr [rcx + rcx*4 - 0xe] ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff80006534a7 : fisttp word ptr [rcx + rcx*4 - 2] ; call qword ptr [rax]
0xffffff80002db832 : fisttp word ptr [rcx + rcx*4 - 2] ; call r12
0xffffff80007909a2 : fisttp word ptr [rcx + rcx*4 - 2] ; call rax
0xffffff8000397b72 : fisttp word ptr [rcx + rcx*4 - 2] ; mov rdx, rax ; call r14
0xffffff800052b077 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0xffffff80007715ab : fisttp word ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393047
0xffffff8000b493e6 : fisttp word ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800075c7bc : fisttp word ptr [rcx - 0x77] ; fsub st(0), st(0) ; jnp 0xffffff800075c832 ; ret
0xffffff800075b051 : fisttp word ptr [rcx - 0x77] ; fsub st(0), st(0) ; out 0x7f, al ; ret
0xffffff800075cb89 : fisttp word ptr [rcx - 0x77] ; fsub st(0), st(0) ; scasb al, byte ptr [rdi] ; ret
0xffffff800075c780 : fisttp word ptr [rcx - 0x77] ; fucomp st(0) ; mov bh, 0x68 ; ret
0xffffff80006ebc37 : fisttp word ptr [rdi] ; popfq ; ret
0xffffff80002721f0 : fisttp word ptr [rdi] ; xchg eax, ebp ; ret
0xffffff8000650463 : fisttp word ptr [rdi] ; xchg eax, ebp ; ret 0x3d83
0xffffff80002642a7 : fisttp word ptr [rdi] ; xchg eax, esp ; ret
0xffffff800062f23d : fisttp word ptr [rsi - 0x76b7ffe8] ; ret
0xffffff80006c364d : fisttp word ptr [rsi - 0x76b7fff1] ; ret
0xffffff800056e652 : fisub dword ptr [rax - 0x76b7ffaa] ; ret 0x82e8
0xffffff80003b242e : fisub dword ptr [rcx] ; ret 0xd0f7
0xffffff8000321ec3 : fisub dword ptr [rdx] ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff800084aba3 : fisub dword ptr [rip + 0x1c8b4800] ; ret
0xffffff800065937a : fisub dword ptr [rsi - 0x3f] ; ret 0x6608
0xffffff8000317f2d : fisub dword ptr [rsi - 9] ; ret 0xfff
0xffffff80006784b2 : fisub dword ptr [rsi] ; ret 0x48ff
0xffffff80004cbdc1 : fisub word ptr [r8 + r8 + 0x48] ; test eax, eax ; je 0xffffff80004cbddd ; call rax
0xffffff80004cbdc2 : fisub word ptr [rax + rax + 0x48] ; test eax, eax ; je 0xffffff80004cbddc ; call rax
0xffffff8000826e5e : fisub word ptr [rbx - 0x76b80000] ; ret
0xffffff80008dfd7e : fisub word ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008e6c2e : fisub word ptr [rdx] ; adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800078d2e7 : fisub word ptr [rip + 0x450f4800] ; ret
0xffffff8000658bf6 : fisubr dword ptr [rax] ; add byte ptr [rcx], sil ; shr al, 0x9f ; pop rax ; ret
0xffffff8000491381 : fisubr dword ptr [rax] ; ret 0xca80
0xffffff800061c68b : fisubr dword ptr [rcx] ; ret 0xd285
0xffffff800059c3c3 : fisubr dword ptr [rcx] ; ret 0xd689
0xffffff8000764322 : fisubr dword ptr [rsi] ; ret
0xffffff800088a8bd : fisubr word ptr [rax + 0x5b38002a] ; pop r14 ; pop rbp ; ret
0xffffff800030d3ce : fisubr word ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800047c4c2 : fisubr word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006784be : fisubr word ptr [rdx] ; ret 0x48ff
0xffffff80002fe073 : fld dword ptr [rax] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800072d425 : fld dword ptr [rbp - 0x77] ; loopne 0xffffff800072d417 ; ret 0xe9
0xffffff800082aa7f : fld dword ptr [rcx - 1] ; ret
0xffffff8000510463 : fld dword ptr [rcx] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800058a042 : fld dword ptr [rcx] ; ret
0xffffff800029abcc : fld qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000455a0d : fld qword ptr [rcx - 0x3f] ; in eax, dx ; adc dh, byte ptr [rcx] ; div bh ; ret
0xffffff80008cf962 : fld qword ptr [rcx - 0x44] ; ret 2
0xffffff8000370372 : fld st(1) ; ret 0xd11e
0xffffff8000274593 : fld xword ptr [rbx] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800031f6f1 : fld xword ptr [rip - 0x7cb7fff9] ; ret
0xffffff80003565d9 : fld xword ptr [rsi + 0x79] ; add byte ptr [rax + 1], cl ; ret 0xc931
0xffffff800054bf0e : fld1 ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0xffffff8000635219 : fld1 ; and ebx, esp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800069beff : fld1 ; cmp esi, dword ptr [rsi - 0x15] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002cc14d : fld1 ; in eax, dx ; cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004bca37 : fld1 ; mov bl, 0x3c ; add byte ptr [rax], al ; jmp 0xffffff80004bca7e
0xffffff80004b4445 : fld1 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0xffffff80008483ec : fld1 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; jmp 0xffffff8000848450
0xffffff80002fe944 : fld1 ; push bx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800038d447 : fld1 ; ret
0xffffff8000855088 : fld1 ; ret 0xa497
0xffffff800028f6e8 : fld1 ; ret 0xfff9
0xffffff800066a592 : fld1 ; test al, 0x8f ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000754f88 : fld1 ; xchg eax, edx ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005980c9 : fldcw word ptr [rcx] ; ret 0xca29
0xffffff8000371d93 : fldcw word ptr [rsi - 0x3f] ; ret
0xffffff800036fbf7 : fldcw word ptr [rsi - 0x3f] ; ret 0x441e
0xffffff800036fcf1 : fldcw word ptr [rsi - 0x3f] ; ret 0x891e
0xffffff80007b4523 : fldenv [rcx - 0x42] ; dec dword ptr [rax + 1] ; ret
0xffffff8000585044 : fldenv [rsi - 0x77] ; ret
0xffffff800026835d : fldl2t ; ret
0xffffff80004486a6 : fldpi ; mov bh, 0x5d ; ret
0xffffff80002888d8 : fmul dword ptr [r8 - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xbbe8
0xffffff80002887c8 : fmul dword ptr [r8 - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xcbe8
0xffffff800073d868 : fmul dword ptr [rax + 0x39] ; ret
0xffffff80003c1159 : fmul dword ptr [rax + 0x6b] ; ret
0xffffff80003c1155 : fmul dword ptr [rax + 0xf] ; fmul dword ptr [rax + 0x6b] ; ret
0xffffff80003ac5ce : fmul dword ptr [rax + 0xf] ; ret
0xffffff800029dab4 : fmul dword ptr [rax + 0xf] ; ret 0x8548
0xffffff80004c1dcd : fmul dword ptr [rax + 0xf] ; ret 0x8948
0xffffff800038ba1e : fmul dword ptr [rax - 0x39] ; ret 6
0xffffff800036bc31 : fmul dword ptr [rax - 0x3f] ; jmp 0xffffff800036bc76
0xffffff80003c3c4d : fmul dword ptr [rax - 0x3f] ; jmp 0xffffff80003c3c60
0xffffff80002af1e1 : fmul dword ptr [rax - 0x77] ; add eax, 0x83e28f ; pop rbp ; ret
0xffffff80002888d9 : fmul dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xbbe8
0xffffff80002887c9 : fmul dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xcbe8
0xffffff80003b99e7 : fmul dword ptr [rax - 0x77] ; ret
0xffffff800048e824 : fmul dword ptr [rax - 0x77] ; ret 0x2948
0xffffff8000505c31 : fmul dword ptr [rax - 0x77] ; ret 0x428b
0xffffff80005da59b : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff800035449f : fmul dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff800048eede : fmul dword ptr [rax - 0x7d] ; ret
0xffffff80003c9c2f : fmul dword ptr [rax - 0x7d] ; ret 0xc602
0xffffff800039026d : fmul dword ptr [rax - 1] ; ret
0xffffff80002a4613 : fmul dword ptr [rax - 1] ; ror dword ptr [rdi], 0xbe ; rol byte ptr [rcx], cl ; ret 0xd269
0xffffff80003ac5cb : fmul dword ptr [rax - 9] ; fmul dword ptr [rax + 0xf] ; ret
0xffffff80008b07ba : fmul dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800085179d : fmul dword ptr [rbp + r9*4 + 0x35] ; ret 0x8ba8
0xffffff800085179e : fmul dword ptr [rbp + rcx*4 + 0x35] ; ret 0x8ba8
0xffffff800048fff4 : fmul dword ptr [rbp - 1] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003ea0db : fmul dword ptr [rbx - 0x76b743a3] ; ret 0xb941
0xffffff8000767a04 : fmul dword ptr [rbx] ; ret
0xffffff80002642a4 : fmul dword ptr [rcx + 1] ; fisttp word ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000489963 : fmul dword ptr [rcx + rcx*4 - 0xa] ; call 0xffffff8000495bc6
0xffffff800082ca44 : fmul dword ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff800049f9a6 : fmul dword ptr [rcx + rcx*4 - 0xe] ; mov rcx, r15 ; call rax
0xffffff80008f5077 : fmul dword ptr [rcx + rcx*4 - 1] ; call rcx
0xffffff8000909767 : fmul dword ptr [rcx + rcx*4 - 1] ; mov esi, r14d ; call rcx
0xffffff80008f2dc7 : fmul dword ptr [rcx + rcx*4 - 1] ; mov rsi, r14 ; call rcx
0xffffff8000698d90 : fmul dword ptr [rcx + rcx*4 - 6] ; call 0xffffff80002c53a7
0xffffff800059bde8 : fmul dword ptr [rcx + rcx*4 - 9] ; call 0xffffff80007b8026
0xffffff800059bde7 : fmul dword ptr [rcx + rcx*4 - 9] ; call 0xffffff80007b8027
0xffffff80008f26b7 : fmul dword ptr [rcx + rcx*4 - 9] ; call rcx
0xffffff8000289dc3 : fmul dword ptr [rcx - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000b4518c : fmul dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000727325 : fmul dword ptr [rcx - 0x50f0b740] ; ret 0x8948
0xffffff8000900307 : fmul dword ptr [rcx - 0x75] ; jle 0xffffff8000900369 ; call rcx
0xffffff8000900c37 : fmul dword ptr [rcx - 0x75] ; jle 0xffffff8000900c91 ; call rcx
0xffffff8000901887 : fmul dword ptr [rcx - 0x75] ; jle 0xffffff80009018a9 ; call rcx
0xffffff8000901947 : fmul dword ptr [rcx - 0x75] ; mov esi, 0x88 ; call rcx
0xffffff80008f5377 : fmul dword ptr [rcx - 0x75] ; mov esi, 0xe0 ; call rcx
0xffffff8000525509 : fmul dword ptr [rcx - 0x77] ; ret 0xf641
0xffffff8000767df4 : fmul dword ptr [rcx] ; ret
0xffffff80002579e4 : fmul dword ptr [rdi] ; ret
0xffffff8000289ae5 : fmul dword ptr [rdi] ; ret 0xc289
0xffffff80004a133a : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2040
0xffffff8000554f01 : fmul dword ptr [rdx - 0x76b6fea8] ; ret 0x8841
0xffffff800072f33b : fmul qword ptr [r8 - 0x75] ; cmp ecx, dword ptr [rax - 0x77] ; ret 0x2948
0xffffff8000368dce : fmul qword ptr [rax + 0x39] ; ret
0xffffff80002eb370 : fmul qword ptr [rax + 0x63] ; ret
0xffffff80002b1410 : fmul qword ptr [rax + 1] ; ret
0xffffff800072f33c : fmul qword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x77] ; ret 0x2948
0xffffff80004ea1c6 : fmul qword ptr [rax - 0x77] ; ret
0xffffff800066c835 : fmul qword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80003c60b6 : fmul qword ptr [rbx - 0x73] ; add al, 0x80 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800074879f : fmul qword ptr [rcx + rcx*4 - 0x11] ; mov esi, ebx ; call 0xffffff8000370e89
0xffffff800084589d : fmul qword ptr [rcx + rcx*4 - 1] ; mov rsi, rbx ; call qword ptr [rax]
0xffffff8000b4572d : fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800052ff40 : fmul qword ptr [rcx - 0x76b70026] ; ret
0xffffff8000b49108 : fmul qword ptr [rcx - 0x77] ; ret 0x8349
0xffffff800025794c : fmul qword ptr [rcx - 1] ; ret
0xffffff8000886cd1 : fmul qword ptr [rdi] ; xchg eax, ebp ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000765804 : fmul st(3) ; ret 0x45ff
0xffffff8000754761 : fnclex ; ret
0xffffff80002d6675 : fnsave dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000392939
0xffffff80003c7f87 : fnsave dword ptr [rbx] ; pop rbp ; ret
0xffffff80007fe30d : fnsave dword ptr [rsi + 0x1b8ff] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000654c3f : fnsave dword ptr [rsi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800045cb43 : fnstcw word ptr [rbp - 0x76b70019] ; ret
0xffffff8000841930 : fnstcw word ptr [rcx] ; ror dword ptr [rdi], 1 ; ret
0xffffff80003b8b03 : fnstcw word ptr [rdx] ; out dx, al ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000379209 : fnstenv [rbp + rsi - 0xa] ; ret
0xffffff8000b4b9e0 : fnstenv [rcx] ; ret
0xffffff800025d143 : fnstenv [rdi - 0x76b7fff9] ; ret
0xffffff80007fe2a6 : fnstenv [rsi + 0x3e0c1ff] ; pop rbp ; ret
0xffffff8000776f73 : fnstenv [rsi + rdx + 0x31] ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff800037bfd8 : fnstenv [rsp + rcx*2 - 0xa] ; ret
0xffffff80003b77af : fnstenv [rsp + rsi - 0xa] ; ret
0xffffff80006a0047 : frndint ; dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff80004cbf76 : frstor dword ptr [rax + rax - 0x18] ; ret 0xec6a
0xffffff8000422f73 : frstor dword ptr [rax - 0x170876b4] ; ret
0xffffff8000813117 : frstor dword ptr [rax] ; xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff80008f253f : frstor dword ptr [rbx - 0x62] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ce73f : frstor dword ptr [rcx - 0x76b70050] ; ret
0xffffff800076835f : frstor dword ptr [rdi + rsi] ; call 0xffffff8000392a47
0xffffff80008d741e : frstor dword ptr [rip + 0x415b5000] ; pop rsi ; pop rbp ; ret
0xffffff800090189c : fsin ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000411b63 : fst dword ptr [rax + rdi*8] ; push rsi ; ret
0xffffff8000833843 : fst dword ptr [rax - 0x56] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055ac28 : fst dword ptr [rdi] ; pop rbp ; ret
0xffffff8000783c53 : fst dword ptr [rdx - 0x76b70001] ; ret
0xffffff80002b457f : fst qword ptr [rdx + 3] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000686c75 : fst qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e105f : fst st(0) ; ret 0xc7ff
0xffffff80005f7155 : fstp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800026dd02 : fstp qword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80006601cf : fstp st(7) ; ret 0x41ff
0xffffff80002d5ed2 : fstp xword ptr [rax + 7] ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000366d23 : fstp xword ptr [rcx] ; ret
0xffffff80004dafef : fstpnce st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082a1d4 : fsub dword ptr [rax - 0x3fceffd5] ; mov rbx, r10 ; call rbx
0xffffff800055e484 : fsub dword ptr [rbp + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081090f : fsub dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff800067a784 : fsub dword ptr [rdx - 0x76b7ffed] ; ret
0xffffff8000587240 : fsub dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000691260 : fsub qword ptr [rdx] ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000775a09 : fsub qword ptr [rip + 0x358d4800] ; ret 0x25dc
0xffffff800075c7bf : fsub st(0), st(0) ; jnp 0xffffff800075c82f ; ret
0xffffff800075b054 : fsub st(0), st(0) ; out 0x7f, al ; ret
0xffffff800075cb8c : fsub st(0), st(0) ; scasb al, byte ptr [rdi] ; ret
0xffffff80006cbd25 : fsub st(1), st(0) ; ret 0xb
0xffffff80008230fd : fsub st(3), st(0) ; ret
0xffffff8000763d04 : fsub st(6) ; ret 0x31ff
0xffffff80007a2ce0 : fsub st(6), st(0) ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000651699 : fsubp st(0) ; adc ebx, ecx ; ret
0xffffff8000370954 : fsubp st(0) ; add eax, 0x63480000 ; ret
0xffffff80006be520 : fsubp st(0) ; add rax, -0x76b80000 ; ret
0xffffff8000638295 : fsubp st(0) ; cmc ; sub byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80006aa443 : fsubp st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80007b51c6 : fsubp st(0) ; in al, 0x8f ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80002fe91e : fsubp st(0) ; in al, dx ; ret 0xfff9
0xffffff80002ec45e : fsubp st(0) ; insb byte ptr [rdi], dx ; ret
0xffffff80007bf7d9 : fsubp st(0) ; jno 0xffffff80007bf7b9 ; std ; ljmp [rcx] ; ret
0xffffff80007bf8c1 : fsubp st(0) ; mov esp, edx ; std ; ljmp [rcx] ; ret
0xffffff8000631f3f : fsubp st(0) ; or ecx, eax ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000772663 : fsubp st(0) ; out 0xc1, eax ; mov dl, 0xff ; call 0xffffff8000399243
0xffffff8000322962 : fsubp st(0) ; pop rax ; jne 0xffffff8000322971 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a6190 : fsubp st(0) ; pop rdx ; in eax, dx ; ret 0x4cff
0xffffff80007bf88a : fsubp st(0) ; rcl ah, 0xfd ; ljmp [rcx] ; ret
0xffffff8000264027 : fsubp st(0) ; ret
0xffffff80006b2e58 : fsubp st(0) ; ret 0x1052
0xffffff8000668698 : fsubp st(0) ; ret 0x11d
0xffffff80003aab78 : fsubp st(0) ; ret 0x3a00
0xffffff8000254128 : fsubp st(0) ; ret 0x80d
0xffffff800079d1b8 : fsubp st(0) ; ret 0xbf99
0xffffff80004600e8 : fsubp st(0) ; ret 0xe2e0
0xffffff80004c1218 : fsubp st(0) ; ret 0xff67
0xffffff80004d1ef8 : fsubp st(0) ; ret 0xffc3
0xffffff8000264038 : fsubp st(0) ; ret 0xfff0
0xffffff800083280e : fsubp st(0) ; sbb eax, 0x7894800 ; pop rbp ; ret
0xffffff800083788f : fsubp st(0) ; sbb ebx, edx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a39df : fsubp st(0) ; sub esp, dword ptr [rbx - 0x76b70002] ; ret
0xffffff80003d6871 : fsubp st(0) ; test eax, 0x8900072e ; ret 0x35eb
0xffffff800077469f : fsubp st(0) ; wait ; call qword ptr [rdi]
0xffffff8000415f43 : fsubp st(0) ; xchg dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a5d55 : fsubp st(0) ; xchg eax, ebp ; int1 ; ret 0x41ff
0xffffff80006a6154 : fsubp st(0) ; xchg eax, esi ; in eax, dx ; ret 0xebff
0xffffff8000284cda : fsubp st(3) ; sbb cl, byte ptr [rbx + 0x1043154] ; ret 0x8b48
0xffffff800065f1ce : fsubp st(7) ; ret 0x31ff
0xffffff80004f15b5 : fsubr dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000273274 : fsubr dword ptr [rbp - 0x7cb70017] ; ret
0xffffff80004eb764 : fsubr dword ptr [rcx] ; ret 0xebff
0xffffff80006d1b40 : fsubr qword ptr [rbp - 0x40] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3d11b : fsubr qword ptr [rcx] ; or al, 0x89 ; ret 0xca21
0xffffff800061344c : fsubr st(0) ; add eax, 0x89480000 ; ret
0xffffff800064e7ae : fsubr st(0) ; in al, dx ; cld ; ret
0xffffff800064f8e3 : fsubr st(0) ; mov bh, 0xeb ; ret
0xffffff8000337e02 : fsubr st(0) ; mov eax, 0x89fffc6b ; ret
0xffffff8000651da1 : fsubr st(0) ; or esp, eax ; ret
0xffffff800079652c : fsubr st(0) ; outsb dx, byte ptr [rsi] ; ret
0xffffff800064eed7 : fsubr st(0) ; ret
0xffffff80004da4a8 : fsubr st(0) ; ret 0x2847
0xffffff80006f0313 : fsubr st(0) ; ret 0xffe0
0xffffff80005d1ff8 : fsubr st(0) ; ret 0xffe7
0xffffff800082ad78 : fsubr st(0) ; ret 2
0xffffff80006986c7 : fsubr st(0) ; ror esp, cl ; ret 0x48ff
0xffffff8000696508 : fsubr st(0) ; xchg eax, edx ; out dx, al ; ret 0x48ff
0xffffff80005eeab7 : fsubr st(1) ; ret
0xffffff8000719de7 : fsubr st(1) ; ret 0
0xffffff80006fb658 : fsubr st(1) ; ret 0xfff6
0xffffff80008cd669 : fsubr st(3) ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007c3a5b : fsubr st(3) ; add eax, 0x1dbb70f ; ret
0xffffff800027fd03 : fsubr st(3) ; ret 0x2e66
0xffffff80006253f0 : fsubr st(3), st(0) ; dec dword ptr [rax + 0x63] ; ret
0xffffff8000754264 : fsubr st(5) ; ret
0xffffff800064fac1 : fucomi st(1) ; ret
0xffffff8000350898 : fucomi st(1) ; ret 0
0xffffff80003534d8 : fucomi st(1) ; ret 1
0xffffff80008952ff : fucomi st(1) ; xlatb ; add al, 0 ; add bh, dh ; ret
0xffffff80006a2ce6 : fucomi st(2) ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; jmp rbx
0xffffff80007e4fea : fucomi st(3) ; or byte ptr [rcx - 0x7d], cl ; ret 0x4814
0xffffff80003c9c2a : fucomi st(3) ; sbb byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret 0xc602
0xffffff80003c90a2 : fucomi st(3) ; sbb byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff80006f410a : fucomip st(0) ; adc byte ptr [rax - 0x42], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000742609 : fucomip st(0) ; adc dword ptr [rbx - 0x47], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081bdb7 : fucomip st(0) ; adc ebp, dword ptr [rdi + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000511f07 : fucomip st(0) ; adc ebp, dword ptr [rdx - 0x24] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000669a47 : fucomip st(0) ; adc esi, dword ptr [rax - 0x76b7ffec] ; ret
0xffffff8000652f16 : fucomip st(0) ; add al, 0x5a ; enter 0x48ff, -0x77 ; ret
0xffffff800069f758 : fucomip st(0) ; add dl, byte ptr [rbx + 0x11] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800066fc39 : fucomip st(0) ; add dword ptr [rdx + rdx*8], esi ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000770639 : fucomip st(0) ; add dword ptr [rdx], ebp ; ret 0x8aff
0xffffff80006b7017 : fucomip st(0) ; add ebx, dword ptr [rcx] ; ret 0x48ff
0xffffff800081b9c7 : fucomip st(0) ; add esi, dword ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072e8f8 : fucomip st(0) ; and ah, byte ptr [rax - 0x76b70046] ; ret
0xffffff8000653cf6 : fucomip st(0) ; and al, 0x4c ; enter 0x48ff, -0x77 ; ret
0xffffff800069b4f8 : fucomip st(0) ; and dl, ah ; ret
0xffffff80005784f9 : fucomip st(0) ; and dword ptr [rsi + rdx*8], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081baa7 : fucomip st(0) ; and esi, dword ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000764f52 : fucomip st(0) ; call 0xffffff804976123d
0xffffff8000670f3b : fucomip st(0) ; call rcx
0xffffff80002a50db : fucomip st(0) ; call rdx
0xffffff800076e3a1 : fucomip st(0) ; cdq ; ret 0x45ff
0xffffff8000634e81 : fucomip st(0) ; cdq ; xor bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000717422 : fucomip st(0) ; clc ; adc al, 0xbc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000604762 : fucomip st(0) ; clc ; add bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006b2862 : fucomip st(0) ; clc ; and dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000666562 : fucomip st(0) ; clc ; in al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006bc062 : fucomip st(0) ; clc ; mov dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000666d42 : fucomip st(0) ; clc ; ret 0xffd2
0xffffff80006c0462 : fucomip st(0) ; clc ; str word ptr [r8 - 0x77] ; ret
0xffffff800077f7ee : fucomip st(0) ; cld ; fdivr st(7) ; dec dword ptr [rax + 0x39] ; ret
0xffffff80007831ea : fucomip st(0) ; cli ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000759140 : fucomip st(0) ; cli ; cwde ; ret
0xffffff8000634b20 : fucomip st(0) ; cli ; xor eax, 0x89480018 ; ret
0xffffff8000517b45 : fucomip st(0) ; cmc ; call rdi
0xffffff8000760205 : fucomip st(0) ; cmc ; outsd dx, dword ptr [rsi] ; ret
0xffffff800076b4fe : fucomip st(0) ; cmp al, 0x7b ; ret 0x41ff
0xffffff800065f222 : fucomip st(0) ; cmp byte ptr [rax + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005dba22 : fucomip st(0) ; cmp byte ptr [rax - 0x76b7ffe3], dl ; ret
0xffffff800065f122 : fucomip st(0) ; cmp byte ptr [rcx + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000560922 : fucomip st(0) ; cmp byte ptr [rcx + 0x25], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065a922 : fucomip st(0) ; cmp byte ptr [rcx - 0x76b7ffeb], ah ; ret
0xffffff8000611d22 : fucomip st(0) ; cmp byte ptr [rip - 0x76b7ffe6], ch ; ret
0xffffff800055e422 : fucomip st(0) ; cmp byte ptr [rsi + 0x25], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007227e1 : fucomip st(0) ; cmp dword ptr [rcx - 0x45], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006551d7 : fucomip st(0) ; cmp eax, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000588db4 : fucomip st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esp, 0x89480022 ; ret
0xffffff8000826063 : fucomip st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jl 0xffffff800082606f ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005439c2 : fucomip st(0) ; cwde ; adc byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800054fbc2 : fucomip st(0) ; cwde ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80005564c2 : fucomip st(0) ; cwde ; in eax, 0x25 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006141c2 : fucomip st(0) ; cwde ; or byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005d41c2 : fucomip st(0) ; cwde ; or byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a79c2 : fucomip st(0) ; cwde ; rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d443b : fucomip st(0) ; dec ebp ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000541624 : fucomip st(0) ; div byte ptr [rdx - 0x27] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b0042 : fucomip st(0) ; fadd dword ptr [rax - 0x76b7fff0] ; ret
0xffffff800053b482 : fucomip st(0) ; fcom dword ptr [rbp - 0x76b7ffd9] ; ret
0xffffff800055ee82 : fucomip st(0) ; fcomp dword ptr [rbx + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000679782 : fucomip st(0) ; fdiv dword ptr [rdx - 0x76b7ffed] ; ret
0xffffff80006ab65b : fucomip st(0) ; fistp qword ptr [rcx - 0x32] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800062f23b : fucomip st(0) ; fisttp word ptr [rsi - 0x76b7ffe8] ; ret
0xffffff800048fff2 : fucomip st(0) ; fmul dword ptr [rbp - 1] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000767a02 : fucomip st(0) ; fmul dword ptr [rbx] ; ret
0xffffff800052ff3e : fucomip st(0) ; fmul qword ptr [rcx - 0x76b70026] ; ret
0xffffff800025d141 : fucomip st(0) ; fnstenv [rdi - 0x76b7fff9] ; ret
0xffffff8000833841 : fucomip st(0) ; fst dword ptr [rax - 0x56] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004dafec : fucomip st(0) ; fstpnce st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055e482 : fucomip st(0) ; fsub dword ptr [rbp + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800067a782 : fucomip st(0) ; fsub dword ptr [rdx - 0x76b7ffed] ; ret
0xffffff80006d1b3e : fucomip st(0) ; fsubr qword ptr [rbp - 0x40] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bcf26 : fucomip st(0) ; hlt ; mov ecx, 0x8948ffc1 ; ret
0xffffff800073c5b1 : fucomip st(0) ; imul eax, ebx, 0x8948ffb9 ; ret
0xffffff800057bfaf : fucomip st(0) ; imul ecx, ecx, -0x2b ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073b5af : fucomip st(0) ; imul edx, ebx, -0x47 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004cf1f4 : fucomip st(0) ; in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80003e8e35 : fucomip st(0) ; in eax, 0xfa ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076f94d : fucomip st(0) ; in eax, dx ; ret 0x49ff
0xffffff80006a4cf9 : fucomip st(0) ; int1 ; ret
0xffffff80005cd412 : fucomip st(0) ; jbe 0xffffff80005cd43d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005614d2 : fucomip st(0) ; je 0xffffff80005614b6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075e6bb : fucomip st(0) ; jg 0xffffff800075e70c ; ret
0xffffff80006ab1f8 : fucomip st(0) ; jle 0xffffff80006ab1d3 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800075c7ac : fucomip st(0) ; jle 0xffffff800075c815 ; ret
0xffffff800077b3db : fucomip st(0) ; jmp qword ptr [rdi]
0xffffff800031468b : fucomip st(0) ; jmp rax
0xffffff80006a2ceb : fucomip st(0) ; jmp rbx
0xffffff800081b787 : fucomip st(0) ; jne 0xffffff800081b795 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081bb87 : fucomip st(0) ; jno 0xffffff800081bb95 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000570dcf : fucomip st(0) ; jnp 0xffffff8000570db2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075f5af : fucomip st(0) ; jnp 0xffffff800075f5ea ; ret
0xffffff800075f5bf : fucomip st(0) ; jnp 0xffffff800075f601 ; ret
0xffffff800078340f : fucomip st(0) ; jnp 0xffffff800078341e ; std ; dec dword ptr [rax + 0x39] ; ret
0xffffff800075d5b1 : fucomip st(0) ; jns 0xffffff800075d60c ; ret
0xffffff800075d5c1 : fucomip st(0) ; jns 0xffffff800075d623 ; ret
0xffffff80008cd8ea : fucomip st(0) ; jo 0xffffff80008cd8d6 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800061d6c0 : fucomip st(0) ; jp 0xffffff800061d6c8 ; adc eax, 0x3d8b4800 ; ret
0xffffff80008c0eb4 : fucomip st(0) ; jp 0xffffff80008c0e62 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000674c57 : fucomip st(0) ; jrcxz 0xffffff8000674c8d ; ret 0xbbff
0xffffff80005478e2 : fucomip st(0) ; js 0xffffff80005478bf ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff800076d1b2 : fucomip st(0) ; js 0xffffff800076d211 ; ret 0x48ff
0xffffff800076d1c2 : fucomip st(0) ; js 0xffffff800076d228 ; ret 0x49ff
0xffffff800055300b : fucomip st(0) ; lahf ; jmp rbx
0xffffff800025958b : fucomip st(0) ; lahf ; mov al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800041a27b : fucomip st(0) ; lahf ; out 0xeb, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005a3a8d : fucomip st(0) ; lea ecx, [rsi - 0x2d] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000834e8d : fucomip st(0) ; lea edi, [rdx] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000547851 : fucomip st(0) ; leave ; or byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800068cc01 : fucomip st(0) ; leave ; or eax, 0x8948fffe ; ret 0x894c
0xffffff800065486e : fucomip st(0) ; lodsb al, byte ptr [rsi] ; cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800076027e : fucomip st(0) ; lodsb al, byte ptr [rsi] ; ret
0xffffff80004e3504 : fucomip st(0) ; lodsb al, byte ptr ss:[rsi] ; ret 0x41ff
0xffffff800075e07d : fucomip st(0) ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000453779 : fucomip st(0) ; loope 0xffffff8000453797 ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff8000652b66 : fucomip st(0) ; mov ah, 0x5d ; enter 0x48ff, -0x77 ; ret
0xffffff800075e87a : fucomip st(0) ; mov al, 0x40 ; ret
0xffffff8000677a83 : fucomip st(0) ; mov bh, 0xba ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000341e67 : fucomip st(0) ; mov bl, 0x6a ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065a9d2 : fucomip st(0) ; mov byte ptr [rax - 0x76b7ffeb], ah ; ret
0xffffff800062ccd2 : fucomip st(0) ; mov byte ptr [rbp + 0x18], bh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055ecd2 : fucomip st(0) ; mov byte ptr [rbp + 0x25], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006def92 : fucomip st(0) ; mov byte ptr [rcx - 0x76b70041], bl ; ret
0xffffff800065efd2 : fucomip st(0) ; mov byte ptr [rdx + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007c24d2 : fucomip st(0) ; mov byte ptr [rip - 0x76b70001], ah ; ret
0xffffff8000623cd2 : fucomip st(0) ; mov byte ptr [rip - 0x76b7ffe7], cl ; ret
0xffffff800065ebd2 : fucomip st(0) ; mov byte ptr [rsi + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065abd2 : fucomip st(0) ; mov byte ptr [rsi - 0x76b7ffeb], bl ; ret
0xffffff80004533d2 : fucomip st(0) ; mov byte ptr [rsi], dl ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff8000760225 : fucomip st(0) ; mov ch, 0x21 ; ret
0xffffff800075cb79 : fucomip st(0) ; mov cl, 0x5d ; ret
0xffffff80008a9c89 : fucomip st(0) ; mov cl, 0x75 ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000775744 : fucomip st(0) ; mov dh, 0x1a ; ret 0xbeff
0xffffff80004e3384 : fucomip st(0) ; mov dh, 0xad ; ret 0x41ff
0xffffff80006bcd90 : fucomip st(0) ; mov dh, byte ptr [rbx - 0x76b7fff1] ; ret
0xffffff8000630e90 : fucomip st(0) ; mov dh, byte ptr [rdx + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800057d1d4 : fucomip st(0) ; mov dil, 0xd5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000679812 : fucomip st(0) ; mov dl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006cf590 : fucomip st(0) ; mov dl, byte ptr [rbx - 0x76b70040] ; ret
0xffffff8000423113 : fucomip st(0) ; mov dword ptr [rcx], 0x83480000 ; ret
0xffffff8000347a60 : fucomip st(0) ; mov edx, 0x89fffffa ; ret
0xffffff8000834376 : fucomip st(0) ; movsb byte ptr [rdi], byte ptr [rsi] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066dd95 : fucomip st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; push rdi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000535675 : fucomip st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; xor bl, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bfab7 : fucomip st(0) ; movsxd rax, dword ptr [rsi - 0x76b7fff1] ; ret
0xffffff800066ffc7 : fucomip st(0) ; movsxd rdi, dword ptr [rax - 0x76b7fffd] ; ret
0xffffff800081bc67 : fucomip st(0) ; movsxd rsi, dword ptr [rax + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c2664 : fucomip st(0) ; mul byte ptr [rbx] ; str word ptr [rax - 0x77] ; ret
0xffffff80007602e3 : fucomip st(0) ; mul dword ptr [rax] ; ret
0xffffff800060540d : fucomip st(0) ; neg byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000482e24 : fucomip st(0) ; neg byte ptr [rdx - 0x1b] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000291823 : fucomip st(0) ; neg dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073d933 : fucomip st(0) ; not dword ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800069cfbe : fucomip st(0) ; or al, 0xa ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006b8352 : fucomip st(0) ; or bh, al ; str word ptr [rax - 0x77] ; ret
0xffffff800065f552 : fucomip st(0) ; or byte ptr [rbp + 0x15], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065a552 : fucomip st(0) ; or byte ptr [rbp - 0x76b7ffeb], ah ; ret
0xffffff8000679752 : fucomip st(0) ; or byte ptr [rbx - 0x76b7ffed], dh ; ret
0xffffff8000679152 : fucomip st(0) ; or byte ptr [rcx - 0x76b7ffed], bh ; ret
0xffffff800055e352 : fucomip st(0) ; or byte ptr [rdi + 0x25], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000679852 : fucomip st(0) ; or byte ptr [rdx - 0x76b7ffed], dh ; ret
0xffffff8000664552 : fucomip st(0) ; or byte ptr [rip - 0x76b7ffeb], al ; ret
0xffffff8000669c52 : fucomip st(0) ; or byte ptr [rsi - 0x76b7ffec], ch ; ret
0xffffff80006c5510 : fucomip st(0) ; or dh, byte ptr [rcx + rax*8] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000765630 : fucomip st(0) ; or dl, ah ; ret 0x49ff
0xffffff8000517f99 : fucomip st(0) ; or dword ptr [rcx], 0x8948ffdc ; ret
0xffffff800076f92f : fucomip st(0) ; or esi, dword ptr [rcx] ; ret 0x41ff
0xffffff800069cf7e : fucomip st(0) ; or r15b, bpl ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800076a227 : fucomip st(0) ; out 0xb6, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039742b : fucomip st(0) ; out dx, eax ; adc al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006dccac : fucomip st(0) ; outsb dx, byte ptr [rsi] ; mov esp, 0x8948ffbf ; ret
0xffffff80007534ac : fucomip st(0) ; outsb dx, byte ptr [rsi] ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c3702 : fucomip st(0) ; pop rax ; adc ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000453702 : fucomip st(0) ; pop rax ; adc esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800077cf92 : fucomip st(0) ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000672602 : fucomip st(0) ; pop rax ; and al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004c68c2 : fucomip st(0) ; pop rax ; and cl, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000686d02 : fucomip st(0) ; pop rax ; fst qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000666502 : fucomip st(0) ; pop rax ; in eax, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006bde02 : fucomip st(0) ; pop rax ; insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0xffffff80007cd902 : fucomip st(0) ; pop rax ; jno 0xffffff80007cd90d ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d4202 : fucomip st(0) ; pop rax ; or byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000666402 : fucomip st(0) ; pop rax ; out 0x14, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a7702 : fucomip st(0) ; pop rax ; rcl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000547802 : fucomip st(0) ; pop rax ; shl byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000547902 : fucomip st(0) ; pop rax ; shl dword ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007d1d02 : fucomip st(0) ; pop rax ; sub eax, 0x8948fffe ; ret
0xffffff80005bccbd : fucomip st(0) ; pop rbp ; mov esp, 0x8948ffd1 ; ret
0xffffff80006c25cc : fucomip st(0) ; pop rbx ; str word ptr [rax - 0x77] ; ret
0xffffff800048c731 : fucomip st(0) ; pop rcx ; add dword ptr [rax], eax ; add bh, bh ; ret
0xffffff8000476cdb : fucomip st(0) ; pop rdi ; ret
0xffffff800075cec5 : fucomip st(0) ; pop rdx ; ret
0xffffff800044187e : fucomip st(0) ; pop rsp ; ret
0xffffff80008342be : fucomip st(0) ; pop rsp ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027603d : fucomip st(0) ; popfq ; ret
0xffffff80008a98ad : fucomip st(0) ; popfq ; xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004eb2d0 : fucomip st(0) ; push 0x2e ; ret 0xc7ff
0xffffff800073a3ca : fucomip st(0) ; push rax ; in eax, 0xb9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072d7ca : fucomip st(0) ; push rax ; mov cl, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008338ce : fucomip st(0) ; push rax ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081b877 : fucomip st(0) ; push rbx ; je 0xffffff800081b885 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800029abc9 : fucomip st(0) ; push rcx ; fld qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065faf9 : fucomip st(0) ; push rcx ; rcl byte ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004399c8 : fucomip st(0) ; push rdx ; out dx, eax ; jmp 0xffffff7fc3cce2d8
0xffffff80007c2804 : fucomip st(0) ; push rsi ; and bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006532d6 : fucomip st(0) ; push rsi ; enter 0x48ff, -0x77 ; ret
0xffffff8000780d94 : fucomip st(0) ; push rsi ; ret
0xffffff80004e35e4 : fucomip st(0) ; push rsi ; stosd dword ptr [rdi], eax ; ret 0x41ff
0xffffff80006537c6 : fucomip st(0) ; push rsp ; push rcx ; enter 0x48ff, -0x77 ; ret
0xffffff800076d19e : fucomip st(0) ; pushfq ; pop rsi ; ret 0x49ff
0xffffff800076d18e : fucomip st(0) ; pushfq ; push rdi ; ret 0x48ff
0xffffff80006cc67e : fucomip st(0) ; pushfq ; ret 0xffc0
0xffffff8000765068 : fucomip st(0) ; rcr bh, cl ; ret 0x48ff
0xffffff80004fb8f4 : fucomip st(0) ; rcr ch, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000764f67 : fucomip st(0) ; rcr edx, cl ; ret 0x48ff
0xffffff8000259977 : fucomip st(0) ; ret
0xffffff800056f874 : fucomip st(0) ; ret 0
0xffffff8000274f18 : fucomip st(0) ; ret 0x11d4
0xffffff800025d078 : fucomip st(0) ; ret 0x1359
0xffffff800081f308 : fucomip st(0) ; ret 0x139
0xffffff80006e9cb8 : fucomip st(0) ; ret 0x1b7
0xffffff80002b5b38 : fucomip st(0) ; ret 0x1c
0xffffff8000704758 : fucomip st(0) ; ret 0x219
0xffffff800076dfeb : fucomip st(0) ; ret 0x41ff
0xffffff800076e547 : fucomip st(0) ; ret 0x45ff
0xffffff80003518bc : fucomip st(0) ; ret 0x59
0xffffff80007cc0e8 : fucomip st(0) ; ret 0x62
0xffffff8000853948 : fucomip st(0) ; ret 0x9a1
0xffffff8000430a18 : fucomip st(0) ; ret 0x9d1
0xffffff8000857fe8 : fucomip st(0) ; ret 0xa454
0xffffff80007a3208 : fucomip st(0) ; ret 0xb014
0xffffff80007c6d58 : fucomip st(0) ; ret 0xd0
0xffffff800054bd58 : fucomip st(0) ; ret 0xd8cb
0xffffff80005ffb78 : fucomip st(0) ; ret 0xd934
0xffffff80005ddde8 : fucomip st(0) ; ret 0xdb51
0xffffff80006c6d08 : fucomip st(0) ; ret 0xdd
0xffffff80002d4b78 : fucomip st(0) ; ret 0xe395
0xffffff80004ed528 : fucomip st(0) ; ret 0xe51f
0xffffff800041ec18 : fucomip st(0) ; ret 0xe58d
0xffffff8000538008 : fucomip st(0) ; ret 0xe5a4
0xffffff8000536a68 : fucomip st(0) ; ret 0xe5be
0xffffff8000536a78 : fucomip st(0) ; ret 0xe5c5
0xffffff8000505dc8 : fucomip st(0) ; ret 0xe8c9
0xffffff80002ae5f8 : fucomip st(0) ; ret 0xeb2
0xffffff80002a3ff8 : fucomip st(0) ; ret 0xee4
0xffffff8000442578 : fucomip st(0) ; ret 0xf50a
0xffffff8000399b98 : fucomip st(0) ; ret 0xf9
0xffffff8000503ce8 : fucomip st(0) ; ret 0xfb11
0xffffff80002c78d8 : fucomip st(0) ; ret 0xfd85
0xffffff80003b17f8 : fucomip st(0) ; ret 0xfe80
0xffffff8000781cb8 : fucomip st(0) ; ret 0xffc9
0xffffff80005e6dfa : fucomip st(0) ; ret 0xffda
0xffffff80007c19f8 : fucomip st(0) ; ret 0xfff2
0xffffff80002821e8 : fucomip st(0) ; ret 0xfff7
0xffffff80005f6328 : fucomip st(0) ; ret 9
0xffffff800069fc88 : fucomip st(0) ; ror byte ptr [rbp + 0x11], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003e7a5a : fucomip st(0) ; ror byte ptr [rsi], 0xef ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081bbf7 : fucomip st(0) ; sal dword ptr [rax + 1], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c5759 : fucomip st(0) ; sal dword ptr [rcx], 0xc1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000676c27 : fucomip st(0) ; sbb al, 0xc6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000446742 : fucomip st(0) ; sbb bl, ah ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff8000672200 : fucomip st(0) ; sbb bl, byte ptr [rdi + 0x14] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a9322 : fucomip st(0) ; sbb byte ptr [rbp - 0x7cb70032], bl ; ret
0xffffff8000680e42 : fucomip st(0) ; sbb byte ptr [rbx + rdx], bh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800063b442 : fucomip st(0) ; sbb byte ptr [rsi - 0x76b7ffe9], dl ; ret
0xffffff80006bcdac : fucomip st(0) ; scasb al, byte ptr [rdi] ; jl 0xffffff80006bcdc8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075e98b : fucomip st(0) ; scasd eax, dword ptr [rdi] ; ret
0xffffff800072e06b : fucomip st(0) ; scasd eax, dword ptr [rdi] ; test al, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff800068f40b : fucomip st(0) ; setne ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a1221 : fucomip st(0) ; stc ; jbe 0xffffff80007a11e1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006240f1 : fucomip st(0) ; stc ; stc ; ljmp [rcx] ; ret
0xffffff8000558fd2 : fucomip st(0) ; stc ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003d011d : fucomip st(0) ; std ; xchg eax, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bf6b0 : fucomip st(0) ; stosb byte ptr [rdi], al ; push rbx ; str word ptr [rax - 0x77] ; ret
0xffffff800065436f : fucomip st(0) ; stosd dword ptr [rdi], eax ; cmp eax, 0x89480016 ; ret
0xffffff80007c87ff : fucomip st(0) ; stosd dword ptr [rdi], eax ; ret
0xffffff800065b030 : fucomip st(0) ; sub bl, byte ptr [rdx - 0x76b7ffeb] ; ret
0xffffff800065f532 : fucomip st(0) ; sub byte ptr [rbp + 0x15], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000453732 : fucomip st(0) ; sub byte ptr [rbx], dl ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff80007c2532 : fucomip st(0) ; sub byte ptr [rip - 0x76b70001], ah ; ret
0xffffff8000547832 : fucomip st(0) ; sub dl, dl ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff800043b9fd : fucomip st(0) ; sub eax, 0x89003894 ; ret 0xd285
0xffffff8000519f99 : fucomip st(0) ; sub ecx, 0x8948ffdb ; ret
0xffffff80006a04bf : fucomip st(0) ; sub ecx, dword ptr [rbp + 0x11] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007a67ff : fucomip st(0) ; sub esp, dword ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c03b2 : fucomip st(0) ; test al, 0x46 ; str word ptr [rax - 0x77] ; ret
0xffffff800059f596 : fucomip st(0) ; test byte ptr [rbx - 0x76b7002d], dl ; ret
0xffffff8000398596 : fucomip st(0) ; test byte ptr [rbx], al ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025647f : fucomip st(0) ; wait ; and al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006cae7f : fucomip st(0) ; wait ; fcmovb st(0), st(0) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076e69f : fucomip st(0) ; wait ; ret 0x45ff
0xffffff800076e75f : fucomip st(0) ; wait ; ret 0x48ff
0xffffff80006a97b4 : fucomip st(0) ; xchg byte ptr [rax - 0x7cb70032], bl ; ret
0xffffff80006ab5b4 : fucomip st(0) ; xchg byte ptr [rdx - 0x32], bh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800048c653 : fucomip st(0) ; xchg dword ptr [rdi - 0x7cb70010], edi ; ret
0xffffff800081ba37 : fucomip st(0) ; xchg eax, ebx ; jb 0xffffff800081ba45 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000865939 : fucomip st(0) ; xchg eax, ecx ; sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a4c98 : fucomip st(0) ; xchg eax, edx ; ret
0xffffff80004d6684 : fucomip st(0) ; xchg eax, esi ; and ah, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000706386 : fucomip st(0) ; xchg eax, esp ; and eax, 0x8948ffbd ; ret
0xffffff80006c4a86 : fucomip st(0) ; xchg eax, esp ; str word ptr ss:[rax - 0x77] ; ret
0xffffff80008df6d6 : fucomip st(0) ; xchg eax, esp ; sub ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000610d83 : fucomip st(0) ; xlatb ; cmp al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800038ae23 : fucomip st(0) ; xlatb ; ret
0xffffff80006c3f43 : fucomip st(0) ; xlatb ; str word ptr [r8 - 0x77] ; ret
0xffffff80007e9fe6 : fucomip st(0) ; xor al, 0xe9 ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005446e8 : fucomip st(0) ; xor al, byte ptr [rdx - 0x27] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d15ea : fucomip st(0) ; xor byte ptr [rbx - 0x40], dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fb288 : fucomip st(0) ; xor ch, byte ptr [rcx - 0xb] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000670405 : fucomip st(0) ; xor eax, 0x89000417 ; ret
0xffffff800081be97 : fucomip st(0) ; xor ebp, dword ptr [rsi + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c57b3 : fucomip st(0) ; xor ecx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000690500 : fucomip st(3) ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800041c4e4 : fucomip st(3) ; and dword ptr [rax - 0x77], ecx ; ret 0x2c6
0xffffff800058e602 : fucomip st(3) ; or dword ptr [rax - 0x7d], ecx ; ret
0xffffff80005697fd : fucomip st(5) ; loop 0xffffff8000569805 ; pop rbp ; ret
0xffffff8000b465ce : fucomip st(7) ; cmp ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800075c783 : fucomp st(0) ; mov bh, 0x68 ; ret
0xffffff8000798f9a : fucomp st(1) ; ret
0xffffff80006517cf : fxch st(0), st(1) ; ret
0xffffff8000624075 : hlt ; add byte ptr [rax], al ; add byte ptr [rbp + 0x15e74d2], al ; ret 0xd339
0xffffff8000391aec : hlt ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002955da : hlt ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800028ef43 : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800076cfa0 : hlt ; and bh, byte ptr [rax + rax] ; call 0xffffff8000393047
0xffffff80002b95d8 : hlt ; and ebx, edi ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800039a795 : hlt ; call rdi
0xffffff800043bf6f : hlt ; clc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000705520 : hlt ; cld ; push rsi ; ret
0xffffff80002ba66a : hlt ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003544b2 : hlt ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800038f0db : hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000347ef6 : hlt ; dec dword ptr [rax - 0x77] ; ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff8000350c75 : hlt ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800033f44d : hlt ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800034bfda : hlt ; inc dword ptr [rcx - 0x75] ; cmp al, 0xe9 ; ret 1
0xffffff8000340f0b : hlt ; inc r10 ; jmp 0xffffff8000340f17
0xffffff8000744ee8 : hlt ; jl 0xffffff8000744efd ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800033a499 : hlt ; jnp 0xffffff800033a4a3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003578d7 : hlt ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800050d87c : hlt ; mov dword ptr [rbx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072631e : hlt ; mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006bcf28 : hlt ; mov ecx, 0x8948ffc1 ; ret
0xffffff800057f11f : hlt ; mov rax, rcx ; pop rbp ; ret
0xffffff80008eefe0 : hlt ; mov rdi, r15 ; mov rdx, r14 ; call rcx
0xffffff80003b6178 : hlt ; pop rbp ; ret
0xffffff800079a13b : hlt ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086cb18 : hlt ; popfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000444ecd : hlt ; push rdi ; ret
0xffffff8000446b91 : hlt ; push rsi ; ret
0xffffff800064efc1 : hlt ; ret
0xffffff8000762f4e : hlt ; ret 0x31ff
0xffffff800065ed03 : hlt ; ret 0x41ff
0xffffff8000762f8f : hlt ; ret 0x48ff
0xffffff80004cbb3d : hlt ; ret 0x4a
0xffffff800065f055 : hlt ; ret 0xe8ff
0xffffff800065ecb4 : hlt ; ret 0xebff
0xffffff80002960e8 : hlt ; ret 0xf
0xffffff800070f628 : hlt ; ret 0xffda
0xffffff8000625368 : hlt ; sahf ; cld ; dec dword ptr [rax + 0x63] ; ret
0xffffff8000b48024 : hlt ; sbb eax, dword ptr [rax + 0x4436e3] ; jrcxz 0xffffff8000b47fb6 ; ret
0xffffff800088c48a : hlt ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bafb3 : hlt ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a7b88 : hlt ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff8000815dae : hlt ; xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff80007f53e1 : hlt ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b3fa0a : hlt ; xor ecx, dword ptr [rax + 0x31] ; ret 0x8d4c
0xffffff800030c628 : idiv al ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800032863d : idiv bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b471cb : idiv bh ; and ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800072d2a8 : idiv bh ; call qword ptr [rax - 0x1ee]
0xffffff80006fb668 : idiv bh ; call qword ptr [rax - 0x3c3]
0xffffff800056f4dd : idiv bh ; call qword ptr [rax]
0xffffff80007401e9 : idiv bh ; call qword ptr [rbx]
0xffffff80006f81cf : idiv bh ; call qword ptr [rcx]
0xffffff800068005d : idiv bh ; call qword ptr [rdx]
0xffffff80006f80c8 : idiv bh ; call qword ptr [rsi]
0xffffff800053b55d : idiv bh ; call rax
0xffffff80006df6e5 : idiv bh ; call rbx
0xffffff800058ae8d : idiv bh ; call rdi
0xffffff80005fe2a1 : idiv bh ; call rdx
0xffffff80006bc044 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800058ae9d : idiv bh ; dec dword ptr [rax] ; idiv edi ; call qword ptr [rdi]
0xffffff80007401e5 : idiv bh ; dec edx ; idiv bh ; call qword ptr [rbx]
0xffffff8000740261 : idiv bh ; dec edx ; idiv bh ; jmp rax
0xffffff8000b3fa08 : idiv bh ; hlt ; xor ecx, dword ptr [rax + 0x31] ; ret 0x8d4c
0xffffff8000439b32 : idiv bh ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000784c79 : idiv bh ; inc ecx ; idiv bh ; jmp rbx
0xffffff8000807659 : idiv bh ; inc edi ; idiv bh ; jmp qword ptr [rcx]
0xffffff8000458359 : idiv bh ; jmp qword ptr [rax]
0xffffff80006f8166 : idiv bh ; jmp qword ptr [rbx]
0xffffff800062b879 : idiv bh ; jmp qword ptr [rcx]
0xffffff80002f9d39 : idiv bh ; jmp qword ptr [rdx]
0xffffff8000740265 : idiv bh ; jmp rax
0xffffff8000784c7d : idiv bh ; jmp rbx
0xffffff8000680055 : idiv bh ; jmp rcx
0xffffff80008d854d : idiv bh ; jmp rdx
0xffffff80002f9d35 : idiv bh ; jmp rsp
0xffffff80005ec94d : idiv bh ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000810430 : idiv bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800085ed65 : idiv bh ; nop ; nop ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039f0d1 : idiv bh ; push rax ; or byte ptr [rax - 0x39], cl ; ret
0xffffff80005b4695 : idiv bh ; ret
0xffffff80005d878f : idiv bh ; ret 0x5389
0xffffff8000326aa0 : idiv bh ; xor eax, eax ; pop rbp ; ret
0xffffff80006ae3a1 : idiv bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800062278e : idiv byte ptr [rax + 3] ; mov dword ptr [rdi + 0x64], eax ; pop rbp ; ret
0xffffff800030dcb6 : idiv byte ptr [rbx - 0x7eb7fffd] ; ret
0xffffff80002fd25b : idiv byte ptr [rcx] ; ret
0xffffff80007214ed : idiv byte ptr [rcx] ; ret 0xf44
0xffffff8000571e4f : idiv byte ptr [rdx + 0x10] ; call 0xffffff800010e0d8
0xffffff80002671d2 : idiv byte ptr [rdx + 0x28] ; call r15
0xffffff80003aef9d : idiv byte ptr [rdx + 1] ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff8000266c1b : idiv byte ptr [rdx + 8] ; call r14
0xffffff8000267131 : idiv byte ptr [rdx + 8] ; call r15
0xffffff800065a9a6 : idiv byte ptr [rdx] ; ret
0xffffff8000281e8a : idiv byte ptr [rsi + 0x440] ; call 0xffffff800028e158
0xffffff80007efb9a : idiv byte ptr [rsi + 7] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000279460 : idiv dh ; inc dword ptr [rcx - 0x7f] ; out 0xff, al ; jmp rax
0xffffff80006f77f3 : idiv dil ; jmp qword ptr [rax]
0xffffff80004f8590 : idiv dword ptr [rbp + rcx*8 + 0x5d] ; ret
0xffffff8000281edf : idiv dword ptr [rsi + 0x44d] ; call 0xffffff800028e158
0xffffff800048240c : idiv ecx ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002a122d : idiv ecx ; mov r10d, eax ; jmp 0xffffff80002a123f
0xffffff80003ca655 : idiv edi ; call qword ptr [rax]
0xffffff8000458711 : idiv edi ; call qword ptr [rcx]
0xffffff800058aea1 : idiv edi ; call qword ptr [rdi]
0xffffff80004056b6 : idiv edi ; call rcx
0xffffff800052d68d : idiv edi ; call rdi
0xffffff80004044f7 : idiv edi ; dec dword ptr [rax + 0x69] ; ret 0xca00
0xffffff80006907d9 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000409933 : idiv edi ; dec dword ptr [rbx - 0x7637f100] ; ret
0xffffff800052d689 : idiv edi ; dec dword ptr [rbx] ; idiv edi ; call rdi
0xffffff80004f6929 : idiv edi ; inc dword ptr [rcx - 0x77] ; ret 0x894d
0xffffff80007aa7fc : idiv edi ; inc dword ptr [rcx - 9] ; ret
0xffffff800031dedd : idiv edi ; jmp 0xffffff800031de82
0xffffff800034321c : idiv edi ; jmp 0xffffff800034322d
0xffffff800034321b : idiv edi ; jmp 0xffffff800034322e
0xffffff80007da292 : idiv edi ; jmp 0xffffff80007da25b
0xffffff800042979c : idiv edi ; jmp qword ptr [rax]
0xffffff80003ce0aa : idiv edi ; jmp qword ptr [rbx]
0xffffff8000329c56 : idiv edi ; jmp qword ptr [rcx]
0xffffff80008363a1 : idiv edi ; jmp qword ptr [rsi]
0xffffff800038dadd : idiv edi ; jmp rax
0xffffff80008d8545 : idiv edi ; jmp rdx
0xffffff80002b6a79 : idiv edi ; jmp rsp
0xffffff80004b3b58 : idiv edi ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff8000420793 : idiv edi ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b34ee : idiv edi ; nop ; add byte ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800085f00a : idiv edi ; nop ; add qword ptr [rax], rax ; add bh, bh ; ret
0xffffff8000886d97 : idiv edi ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008264fb : idiv edi ; nop ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008657c1 : idiv edi ; nop ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ae4fc : idiv edi ; nop ; mov eax, 0xff000001 ; ret
0xffffff8000861385 : idiv edi ; nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000333dd6 : idiv edi ; pop rbp ; ret
0xffffff8000422db1 : idiv edi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000812b6e : idiv edi ; push rax ; sub byte ptr [rax - 1], cl ; ret
0xffffff80007aa307 : idiv edi ; push rdi ; ret 0
0xffffff8000642e74 : idiv edi ; push rsi ; ret
0xffffff80004c50d4 : idiv edi ; ret
0xffffff80005d74ed : idiv edi ; ret 0x8941
0xffffff8000695920 : idiv edi ; ret 0x9589
0xffffff80008d2a58 : idiv edi ; ret 0xc931
0xffffff80004fd188 : idiv edi ; ret 0xf631
0xffffff80008d0ebf : idiv edi ; ret 0xf875
0xffffff800030fe70 : idiv edi ; xor eax, eax ; pop rbp ; ret
0xffffff80002ba33c : idiv edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800078346c : idiv esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048240b : idiv rcx ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800042979b : idiv rdi ; jmp qword ptr [rax]
0xffffff80008dc637 : imul al ; add al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065e998 : imul al ; add bh, bl ; ret 0x66ff
0xffffff80008d2c08 : imul al ; add bl, byte ptr [rsi - 0x76b70007] ; ret
0xffffff80002cfcc5 : imul al ; add eax, 0x89000002 ; ret
0xffffff80006908f5 : imul al ; add eax, 0xff00121e ; ret
0xffffff80006a65c9 : imul al ; and ecx, ebp ; ret 0x83ff
0xffffff8000804bd4 : imul al ; cdq ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000301f11 : imul al ; cdq ; ret 0xfff8
0xffffff80008d351e : imul al ; cld ; xchg eax, ebx ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000358010 : imul al ; cli ; ret
0xffffff80008a8585 : imul al ; cmc ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000698b5d : imul al ; cmp eax, 0xffffbf59 ; ret
0xffffff800050e8a2 : imul al ; cwde ; ret
0xffffff8000793d56 : imul al ; fdivp st(3) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004eb762 : imul al ; fsubr dword ptr [rcx] ; ret 0xebff
0xffffff8000345651 : imul al ; imul esp, dword ptr [rax], 0x89480000 ; ret
0xffffff800052b48e : imul al ; in al, dx ; mov edx, 0xff480003 ; ret
0xffffff8000420b5d : imul al ; insd dword ptr [rdi], dx ; ret 0xa
0xffffff80002ba9cb : imul al ; int1 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006ded0b : imul al ; jmp rsi
0xffffff80002ba97b : imul al ; lahf ; int1 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d8fb1 : imul al ; leave ; cmp bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005ac29e : imul al ; lodsb al, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000488a6c : imul al ; mov ds, word ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003b542c : imul al ; mov esi, 0xffffffc8 ; ret
0xffffff8000433e7d : imul al ; or eax, 0x890001a8 ; ret
0xffffff80002bbc2b : imul al ; out dx, eax ; fdivp st(2) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002e8bfb : imul al ; out dx, eax ; ret 0xfffe
0xffffff80002b95ab : imul al ; outsd dx, dword ptr [rsi] ; add eax, 0x8948fffb ; ret
0xffffff8000691e51 : imul al ; pop rcx ; ret
0xffffff800050e8de : imul al ; pop rsp ; ret
0xffffff80002baa1b : imul al ; push rax ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004da22a : imul al ; push rax ; ret
0xffffff8000489966 : imul al ; push rsp ; ret 0
0xffffff8000488b28 : imul al ; rcr byte ptr [rcx + 1], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002d0157 : imul al ; ret
0xffffff80008babe8 : imul al ; ret 0x10f
0xffffff80003c52b8 : imul al ; ret 0xd48d
0xffffff80006b25a8 : imul al ; ret 0xe775
0xffffff8000482998 : imul al ; ret 0xf15b
0xffffff8000333118 : imul al ; ret 0xf707
0xffffff80007f9758 : imul al ; ret 0xfb0
0xffffff8000684dea : imul al ; ret 0xffec
0xffffff800055e7b8 : imul al ; ret 5
0xffffff80008597a2 : imul al ; sbb byte ptr [rcx + rax], dh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a24a2 : imul al ; sbb byte ptr [rdx], dl ; ret 0x48ff
0xffffff8000630af0 : imul al ; sub dh, byte ptr [rsi + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d8ff6 : imul al ; test byte ptr [rdx], bh ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005ac2b9 : imul al ; xchg eax, ecx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000721074 : imul al ; xchg eax, esi ; ret
0xffffff800085976c : imul al ; xor al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004887ca : imul al ; xor byte ptr [rbp + 1], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065cdd6 : imul bl ; add eax, 0x8948cf89 ; ret 0x8948
0xffffff800085c31c : imul bl ; seto bh ; ret
0xffffff8000525381 : imul byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002608c8 : imul byte ptr [rcx] ; enter -0x3f01, -0x77 ; ret
0xffffff800041b869 : imul byte ptr [rcx] ; ret
0xffffff800045adf9 : imul byte ptr [rcx] ; ret 0x8d48
0xffffff80004b0845 : imul byte ptr [rcx] ; ret 0xc2ff
0xffffff8000420a7f : imul byte ptr [rcx] ; ret 0xd139
0xffffff800063f706 : imul byte ptr [rdi + 0x148ffd5] ; ret
0xffffff8000866a89 : imul cl ; ret 0
0xffffff800026d3b5 : imul dword ptr [rax + 6] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000444b68 : imul dword ptr [rax + rax - 0x77] ; ret
0xffffff8000525343 : imul dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800078ca75 : imul dword ptr [rbp - 0x76b70050] ; ret
0xffffff80006273c5 : imul dword ptr [rcx] ; xlatb ; sub edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff800076c526 : imul eax ; adc al, 0x6b ; ret 0xebff
0xffffff8000b3b5e9 : imul eax ; adc dword ptr [rdi - 0x76b70033], ecx ; ret
0xffffff8000760629 : imul eax ; adc dword ptr [rdx], ebp ; ret
0xffffff800075ca06 : imul eax ; and al, 0x5f ; ret
0xffffff8000762f1a : imul eax ; and byte ptr [rcx], al ; ret
0xffffff8000760518 : imul eax ; and ch, byte ptr [rbx] ; ret
0xffffff800029cd3b : imul eax ; call qword ptr [rbx]
0xffffff800075fa91 : imul eax ; cdq ; ret
0xffffff80008afffc : imul eax ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000601d42 : imul eax ; clc ; ret
0xffffff80005e7dfe : imul eax ; cld ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000752c40 : imul eax ; cli ; std ; ret
0xffffff8000775372 : imul eax ; cmp byte ptr [rdx - 0x76b80000], dl ; ret
0xffffff8000537300 : imul eax ; cmp ch, byte ptr [rsi - 0x43] ; dec dword ptr [rax - 0x39] ; ret 0xfff8
0xffffff800048083d : imul eax ; cmp eax, 0x89fff666 ; ret
0xffffff80007088cd : imul eax ; cmp eax, 0x89fffcc1 ; ret
0xffffff800042038d : imul eax ; cmp eax, 0xe9ffe843 ; ret
0xffffff8000760aef : imul eax ; cmp ebx, dword ptr [rsi] ; ret
0xffffff8000320b64 : imul eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800038f0d7 : imul eax ; cwde ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000765162 : imul eax ; fcomp st(0) ; ret 0x31ff
0xffffff800085e6ec : imul eax ; fiadd word ptr [rbp - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081745c : imul eax ; fidivr word ptr [rcx - 0x76b7ffff] ; ret
0xffffff8000767df2 : imul eax ; fmul dword ptr [rcx] ; ret
0xffffff80002b457d : imul eax ; fst qword ptr [rdx + 3] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002960e6 : imul eax ; hlt ; ret 0xf
0xffffff800078ca73 : imul eax ; imul dword ptr [rbp - 0x76b70050] ; ret
0xffffff8000781dbf : imul eax ; imul ecx, dword ptr [rsi], -3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d3356 : imul eax ; in al, 0xad ; ret
0xffffff8000767456 : imul eax ; in al, 0xb5 ; ret 0x4cff
0xffffff8000536cce : imul eax ; insb byte ptr [rdi], dx ; ret
0xffffff800052c36d : imul eax ; insd dword ptr [rdi], dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800087ad0d : imul eax ; int 0x9c
0xffffff800075ed49 : imul eax ; int1 ; ret
0xffffff80003eddc3 : imul eax ; ja 0xffffff80003ede20 ; cli ; push rsi ; ret
0xffffff800076b7c7 : imul eax ; jae 0xffffff800076b847 ; ret 0x48ff
0xffffff80007608c8 : imul eax ; jb 0xffffff80007608f7 ; ret
0xffffff800076c4c8 : imul eax ; jb 0xffffff800076c535 ; ret 0x4dff
0xffffff800075bdb6 : imul eax ; je 0xffffff800075be29 ; ret
0xffffff800076e9c6 : imul eax ; je 0xffffff800076ea0e ; ret 0x41ff
0xffffff8000759eab : imul eax ; jg 0xffffff8000759e3d ; ret
0xffffff80008e462b : imul eax ; jg 0xffffff80008e4643 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000504f3b : imul eax ; jmp rax
0xffffff80005a409b : imul eax ; jmp rbx
0xffffff8000681b8b : imul eax ; jmp rdi
0xffffff800075afb9 : imul eax ; jno 0xffffff800075b03a ; ret
0xffffff80003fe2bf : imul eax ; jnp 0xffffff80003fe317 ; stc ; push rsi ; ret
0xffffff80007ad5ca : imul eax ; jo 0xffffff80007ad57b ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x39] ; ret
0xffffff80006a0b50 : imul eax ; jp 0xffffff80006a0b2a ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff8000759ec2 : imul eax ; js 0xffffff8000759e5b ; ret
0xffffff800075bac2 : imul eax ; js 0xffffff800075bb3f ; ret
0xffffff800085e7c2 : imul eax ; js 0xffffff800085e814 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b9f0b : imul eax ; lahf ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 1] ; ret
0xffffff800078d98b : imul eax ; lahf ; push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000759d9b : imul eax ; lahf ; xchg eax, edx ; ret
0xffffff8000837efb : imul eax ; lcall [rbx - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000875311 : imul eax ; leave ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028eb21 : imul eax ; leave ; inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000549ad1 : imul eax ; leave ; ret 0x26
0xffffff800038e18e : imul eax ; lodsb al, byte ptr [rsi] ; call rdi
0xffffff8000762e86 : imul eax ; mov ah, 0xfb ; ret 0x48ff
0xffffff8000771587 : imul eax ; mov bl, 0x1a ; ret 0x48ff
0xffffff80005cdef4 : imul eax ; mov byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800029f76d : imul eax ; mov ebp, 0x89000073 ; ret
0xffffff80008b0f0f : imul eax ; mov ebx, 0xbbfffa5b ; ret 2
0xffffff800081739c : imul eax ; mov ecx, 0x89480001 ; ret
0xffffff800085e6ac : imul eax ; mov es, word ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004322bc : imul eax ; mov esi, 0x890001b5 ; ret
0xffffff800079485c : imul eax ; mov esi, 0x89ffbb0c ; ret
0xffffff80007d8bcc : imul eax ; mov esi, 0x89ffff42 ; ret
0xffffff80003eab7e : imul eax ; mov esp, 0xf6fffa84 ; ret
0xffffff80007607af : imul eax ; mov esp, dword ptr [rdx] ; ret
0xffffff80007715ae : imul eax ; mov word ptr [rdx], ds ; ret 0x48ff
0xffffff80008788e6 : imul eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0xffffff8000546bb5 : imul eax ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0xffffff80003e7daa : imul eax ; nop ; mov dl, 0xfa ; push rsi ; ret
0xffffff80006b326d : imul eax ; or eax, 0x89fffa5d ; ret
0xffffff80007c491f : imul eax ; or eax, dword ptr [rsi - 0x76b70005] ; ret
0xffffff800075ee53 : imul eax ; out 0x41, eax ; ret
0xffffff800075a544 : imul eax ; out 0x83, al ; ret
0xffffff800075a554 : imul eax ; out 0x8a, al ; ret
0xffffff800076e64c : imul eax ; out dx, al ; ret 0x45ff
0xffffff800075eee2 : imul eax ; pop rax ; ret
0xffffff800085e772 : imul eax ; pop rax ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e819d : imul eax ; pop rbp ; or eax, 0x89480000 ; ret
0xffffff80003e78df : imul eax ; pop rbx ; mov bh, 0xfa ; push rsi ; ret
0xffffff800056d6b1 : imul eax ; pop rcx ; xor al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005e7da0 : imul eax ; pop rdx ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008b2bc0 : imul eax ; pop rdx ; popfq ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008173dc : imul eax ; pop rsi ; mov edx, 0x89480001 ; ret
0xffffff800085e66c : imul eax ; pop rsi ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000756d9d : imul eax ; popfq ; ret 0xffc3
0xffffff800075b562 : imul eax ; push -0x760028e8 ; ret
0xffffff80006b4122 : imul eax ; push -0x76ffee2a ; ret
0xffffff80003dba32 : imul eax ; push -0x76fff90a ; ret
0xffffff800050e030 : imul eax ; push -1 ; sti ; push rsi ; ret
0xffffff800076b6d0 : imul eax ; push 0x73 ; ret 0x80ff
0xffffff800078d9e9 : imul eax ; push r10 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000566435 : imul eax ; push rbp ; ret
0xffffff800072a587 : imul eax ; push rbx ; enter -3, -0x77 ; ret
0xffffff800082df19 : imul eax ; push rcx ; cdq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000886ce9 : imul eax ; push rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763ba9 : imul eax ; push rcx ; ret
0xffffff8000554dd3 : imul eax ; push rdi ; ret 0xffff
0xffffff80006bbec4 : imul eax ; push rsi ; ret 0xf
0xffffff8000767d44 : imul eax ; push rsi ; stosd dword ptr [rdi], eax ; ret 0x49ff
0xffffff8000758dfa : imul eax ; pushfq ; ret
0xffffff80003f5a79 : imul eax ; rcl ebp, 0xf9 ; push rsi ; ret
0xffffff8000320037 : imul eax ; ret
0xffffff800086ad28 : imul eax ; ret 0
0xffffff800026a838 : imul eax ; ret 0x12c9
0xffffff800077a508 : imul eax ; ret 0x162
0xffffff800077edb8 : imul eax ; ret 0x1b
0xffffff800042bbb8 : imul eax ; ret 0x226
0xffffff8000319dc8 : imul eax ; ret 0x789
0xffffff8000301438 : imul eax ; ret 0x911
0xffffff80002fe478 : imul eax ; ret 0x94b
0xffffff80006a4978 : imul eax ; ret 0xa697
0xffffff80005ffa78 : imul eax ; ret 0xb0e6
0xffffff8000771578 : imul eax ; ret 0xc214
0xffffff800076b778 : imul eax ; ret 0xc272
0xffffff8000483a78 : imul eax ; ret 0xc8a6
0xffffff8000525c58 : imul eax ; ret 0xd5
0xffffff800054e558 : imul eax ; ret 0xd8a3
0xffffff80002b2618 : imul eax ; ret 0xdfd
0xffffff800050be78 : imul eax ; ret 0xe871
0xffffff800066a028 : imul eax ; ret 0xee70
0xffffff800048c078 : imul eax ; ret 0xf069
0xffffff8000478578 : imul eax ; ret 0xf1aa
0xffffff800044e668 : imul eax ; ret 0xf442
0xffffff800044e678 : imul eax ; ret 0xf449
0xffffff80008cb628 : imul eax ; ret 0xff9c
0xffffff800054b8f6 : imul eax ; ret 0xffd4
0xffffff8000352425 : imul eax ; ret 0xffdb
0xffffff80004bc9f5 : imul eax ; ret 0xffe7
0xffffff80002b06e8 : imul eax ; ret 0xffee
0xffffff8000549f08 : imul eax ; ret 4
0xffffff800082778a : imul eax ; rol byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008873f2 : imul eax ; sahf ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000676cbc : imul eax ; sahf ; jbe 0xffffff8000676cc8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800037ae5c : imul eax ; sahf ; ret
0xffffff8000766abe : imul eax ; sbb al, 0xb9 ; ret 0x45ff
0xffffff800075f620 : imul eax ; sbb bh, byte ptr [rdx] ; ret
0xffffff800081741c : imul eax ; scasb al, byte ptr [rdi] ; mov eax, 0x89480001 ; ret
0xffffff800028602b : imul eax ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000740331 : imul eax ; stc ; sub byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800056c83f : imul eax ; stosd dword ptr [rdi], eax ; mov edx, 0x8948ffd2 ; ret
0xffffff800075ca7f : imul eax ; stosd dword ptr [rdi], eax ; pop rsi ; ret
0xffffff800075ca8f : imul eax ; stosd dword ptr [rdi], eax ; ret
0xffffff800085ed12 : imul eax ; sub byte ptr [rcx - 3], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005def72 : imul eax ; sub byte ptr [rdx - 0x76b7000c], ah ; ret
0xffffff80003b4e3f : imul eax ; sub ebp, dword ptr [rdx] ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075ee82 : imul eax ; test al, 0x3a ; ret
0xffffff8000529794 : imul eax ; test byte ptr [rdi - 0x72b7001a], 0x3d ; jmp rdi
0xffffff8000866143 : imul eax ; test esp, 0x8948fffc ; ret
0xffffff80008d339f : imul eax ; wait ; fdivrp st(5) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000558a04 : imul eax ; xchg byte ptr [rcx], bl ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b87c7 : imul eax ; xchg eax, ebx ; ret 0xffff
0xffffff800075c999 : imul eax ; xchg eax, ecx ; pop rdi ; ret
0xffffff8000566269 : imul eax ; xchg eax, ecx ; ret
0xffffff80005e7e68 : imul eax ; xchg eax, edx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e6ca4 : imul eax ; xchg eax, esi ; ret
0xffffff8000762da6 : imul eax ; xchg eax, esp ; cld ; ret 0x8bff
0xffffff8000762fa6 : imul eax ; xchg eax, esp ; cli ; ret 0x48ff
0xffffff80004020b8 : imul eax, dword ptr [rax + rax], -0x77 ; ret
0xffffff800045ff4f : imul eax, dword ptr [rax], -0x18 ; jp 0xffffff800045fee5 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800027d34c : imul eax, dword ptr [rax], -0x42 ; mov byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000280cf8 : imul eax, dword ptr [rax], -0x42 ; ret
0xffffff8000420665 : imul eax, dword ptr [rax], -0x42 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff800078c8c9
0xffffff8000274594 : imul eax, dword ptr [rax], -0x75 ; add al, 0x81 ; pop rbp ; ret
0xffffff8000370615 : imul eax, dword ptr [rax], -0x77 ; ret 0xca31
0xffffff8000398dce : imul eax, dword ptr [rax], 0x192be8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002aa981 : imul eax, dword ptr [rax], 0x1a9be ; add al, ch ; ret
0xffffff80004575c5 : imul eax, dword ptr [rax], 0x21 ; ret 0x1589
0xffffff800039a446 : imul eax, dword ptr [rax], 0x2b3e8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002afb71 : imul eax, dword ptr [rax], 0x47158d48 ; ret 0x6a
0xffffff800041ecaf : imul eax, dword ptr [rax], 0x48 ; mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff800037c6f8 : imul eax, dword ptr [rax], 0x5d ; ret
0xffffff80002a23ad : imul eax, dword ptr [rax], 0x62158d48 ; ret
0xffffff80003c616e : imul eax, dword ptr [rax], 0x81448d48 ; add al, 0x5d ; ret
0xffffff80003c712c : imul eax, dword ptr [rax], 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff80002a220e : imul eax, dword ptr [rax], 0xae158d48 ; ret
0xffffff80003b80b0 : imul eax, dword ptr [rax], 0xc889ec75 ; pop rbp ; ret
0xffffff80002a21d0 : imul eax, dword ptr [rax], 0xec158d48 ; ret
0xffffff80006ec3cf : imul eax, dword ptr [rbx], 0x89480000 ; ret 0x6348
0xffffff8000575696 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000684de5 : imul eax, dword ptr [rcx], 0xf6310000 ; call 0xffffff8000551038
0xffffff800084cc25 : imul eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80004aabc6 : imul eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff800084fc55 : imul eax, dword ptr [rdi + 0x20] ; add rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff800035d845 : imul eax, dword ptr [rdx], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000567580 : imul eax, dword ptr [rdx], 0x8944c031 ; imul al ; ret
0xffffff80008cb316 : imul eax, dword ptr [rip + 0x26c027], 0x78 ; pop rbp ; ret
0xffffff8000366eeb : imul eax, dword ptr [rip + 0x6c5b16] ; pop rbp ; ret
0xffffff8000366ecb : imul eax, dword ptr [rip + 0x6c5b36] ; pop rbp ; ret
0xffffff80008dbae9 : imul eax, ebx, 0x3c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000671d13 : imul eax, ebx, 0x8348ffa9 ; ret
0xffffff800073c5b3 : imul eax, ebx, 0x8948ffb9 ; ret
0xffffff800036b766 : imul eax, ecx ; shr rax, 0x38 ; pop rbp ; ret
0xffffff80008cbba7 : imul eax, ecx, 0x1c ; pop rbp ; ret
0xffffff80008900c8 : imul ebp, dword ptr [rdx], 0 ; pop rbp ; ret
0xffffff800078d2e6 : imul ebx, esi, 0xf480025 ; ret
0xffffff8000616dee : imul ecx ; ret
0xffffff80005b2c7f : imul ecx ; ret 0
0xffffff80003861d0 : imul ecx ; ret 4
0xffffff800077bf5e : imul ecx, dword ptr [rax - 0x75], 0x8148985d ; ret
0xffffff8000855142 : imul ecx, dword ptr [rax], 0x49 ; movsxd rax, dword ptr [rsp + rcx*4] ; add rax, r12 ; jmp rax
0xffffff8000578b9e : imul ecx, dword ptr [rax], 0x89480eeb ; ret 0xc749
0xffffff8000579849 : imul ecx, dword ptr [rax], 0x894811eb ; ret 0xc749
0xffffff80002be721 : imul ecx, dword ptr [rbp + 0xd], 0 ; test eax, eax ; je 0xffffff80002be734 ; pop rbp ; ret
0xffffff800050aac8 : imul ecx, dword ptr [rbp - 0x36ce00be], -0xa ; ret 0x7401
0xffffff80003ea461 : imul ecx, dword ptr [rdi], -0x4a ; ret 0xc001
0xffffff8000781dc1 : imul ecx, dword ptr [rsi], -3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039f179 : imul ecx, eax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800060783d : imul ecx, eax, 0x605ffff ; ret 0x51
0xffffff800057bfb1 : imul ecx, ecx, -0x2b ; dec dword ptr [rax - 0x77] ; ret
0xffffff800047c5d0 : imul ecx, ecx, 0xffffff38 ; add eax, ecx ; pop rbp ; ret
0xffffff800069bedb : imul ecx, edi, 0x3d8b48ff ; ret
0xffffff80007f57a1 : imul edi, dword ptr [rax - 7], -1 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002cc623 : imul edi, dword ptr [rbx], 0x89480000 ; ret
0xffffff80007fc4b6 : imul edi, dword ptr [rcx - 0x3b7cb701], 0x10 ; pop rbp ; ret
0xffffff80002c3025 : imul edi, dword ptr [rsi], -0x18 ; ret
0xffffff80006dfec1 : imul edi, ebp, 0x7d81ffff ; nop ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff80006667cb : imul edi, ebx, -1 ; call qword ptr [rax - 0x523]
0xffffff80003b66f1 : imul edi, edi, -1 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800033cbac : imul edi, edx, -1 ; jmp rdi
0xffffff800050f129 : imul edi, edx, -1 ; xor eax, eax ; pop rbp ; ret
0xffffff8000772324 : imul edi, esi, 0xe7894cff ; call 0xffffff8000393049
0xffffff8000b3eb2e : imul edx, dword ptr [rcx + rax*4 - 0xf], 0x77 ; ret
0xffffff80005ccb03 : imul edx, dword ptr [rsi + 0x48], -1 ; ret 0xfa83
0xffffff8000661461 : imul edx, dword ptr [rsi], 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800080abfd : imul edx, dword ptr [rsi], 0x894c0000 ; ret
0xffffff80005ccb02 : imul edx, dword ptr fs:[rsi + 0x48], -1 ; ret 0xfa83
0xffffff800073b5b1 : imul edx, ebx, -0x47 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007c1961 : imul edx, edx, -1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000369db8 : imul edx, edx, 0x70 ; mov qword ptr [rsi + rdx + 0x60], rcx ; pop rbp ; ret
0xffffff8000797c97 : imul esi, dword ptr [rax - 0x3b7cb701], 0x10 ; pop rbp ; ret
0xffffff800041e81b : imul esi, dword ptr [rax], 0x8a91c54c ; ret
0xffffff800041e8eb : imul esi, dword ptr [rax], 0x8aa1c54c ; ret
0xffffff8000767ebe : imul esi, dword ptr [rdi], 0xab7ae800 ; ret 0x41ff
0xffffff8000767f0c : imul esi, dword ptr [rdi], 0xb12ce800 ; ret 0x44ff
0xffffff8000367fcd : imul esi, dword ptr [rdx], 0xc031ee75 ; pop rbp ; ret
0xffffff8000633864 : imul esi, edx, 0x5bd889ff ; pop r14 ; pop rbp ; ret
0xffffff8000345653 : imul esp, dword ptr [rax], 0x89480000 ; ret
0xffffff800079ddb1 : imul esp, dword ptr [rbp + 0x39], 0 ; pop rbp ; ret
0xffffff80003f88d1 : imul esp, dword ptr [rcx - 0x74be0007], 0x5f ; sub al, 0xf6 ; ret
0xffffff80004196f9 : imul esp, dword ptr [rdi - 0x74b7ff91], 0x34 ; ret 0x11eb
0xffffff800082015c : imul esp, dword ptr [rdi], 0xc0854800 ; je 0xffffff800082016e ; call rax
0xffffff800035ea13 : imul esp, ebp, 0x8948ffff ; ret
0xffffff80008d30d1 : imul esp, ecx, -0xb ; dec dword ptr [rax - 0x77] ; ret
0xffffff800050f128 : imul r15d, edx, -1 ; xor eax, eax ; pop rbp ; ret
0xffffff8000402950 : imul r8, qword ptr [rax + rax], -0x77 ; ret
0xffffff8000420631 : imul r8d, dword ptr [r8], 0x5d ; ret
0xffffff80002aa980 : imul rax, qword ptr [rax], 0x1a9be ; add al, ch ; ret
0xffffff8000366eea : imul rax, qword ptr [rip + 0x6c5b16] ; pop rbp ; ret
0xffffff8000366eca : imul rax, qword ptr [rip + 0x6c5b36] ; pop rbp ; ret
0xffffff800036b765 : imul rax, rcx ; shr rax, 0x38 ; pop rbp ; ret
0xffffff800039f178 : imul rcx, rax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800027fce4 : in al, 0 ; add bl, ch ; ret 0x8d48
0xffffff800027fcfe : in al, 0 ; add byte ptr [rax - 0x77], cl ; fsubr st(3) ; ret 0x2e66
0xffffff80002a171a : in al, 0 ; add byte ptr [rax], al ; add eax, dword ptr [rcx + 0x5c] ; pop rbp ; ret
0xffffff80007fe17c : in al, 0 ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x30] ; call r15
0xffffff80002a1756 : in al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000666565 : in al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000909472 : in al, 0x22 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008e6cee : in al, 0x24 ; add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff800082e72b : in al, 0x24 ; add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff800065afc8 : in al, 0x31 ; ret
0xffffff800058e89f : in al, 0x31 ; shr al, 0xa9 ; call rax
0xffffff80004836db : in al, 0x31 ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8548
0xffffff80003b4a8c : in al, 0x39 ; ret
0xffffff80006b67da : in al, 0x3b ; add al, ch ; pop rsi ; ret 0xffcd
0xffffff8000778f78 : in al, 0x43 ; ret 0x4dff
0xffffff80007f8578 : in al, 0x4b ; int 0xff
0xffffff80005e3328 : in al, 0x53 ; add byte ptr [rsi + 1], bh ; call rax
0xffffff800025285b : in al, 0x5d ; ret
0xffffff80007dabca : in al, 0x74 ; add eax, 0x24448b49 ; and byte ptr [rcx], ch ; ret
0xffffff80005dfd7e : in al, 0x74 ; and dword ptr [rbx - 0x7cb7f3b5], ecx ; ret
0xffffff8000566676 : in al, 0x74 ; insd dword ptr [rdi], dx ; mov rdi, r12 ; call 0xffffff8000392938
0xffffff80003e731a : in al, 0x74 ; ret
0xffffff8000760453 : in al, 0x74 ; sub eax, 0xe8ff894c ; loop 0xffffff8000760490 ; ret
0xffffff80006b8cda : in al, 0x75 ; ret
0xffffff80003fa8e1 : in al, 0x75 ; xor cl, byte ptr [rax + 0x63] ; ret
0xffffff800080c86d : in al, 0x83 ; loop 0xffffff800080c880 ; cmp edx, 5 ; je 0xffffff800080c840 ; jmp 0xffffff800080c85a
0xffffff80003b5460 : in al, 0x85 ; jmp qword ptr [rsi + 0x44]
0xffffff80008ee2eb : in al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0xffffff8000655cb8 : in al, 0x87 ; ret
0xffffff800069dec8 : in al, 0x8e ; sbb al, byte ptr [rax] ; int 0xf6
0xffffff80007b51c8 : in al, 0x8f ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000759658 : in al, 0x99 ; ret
0xffffff8000659828 : in al, 0xa ; xor eax, 0xe8c03100 ; insd dword ptr [rdi], dx ; ret
0xffffff8000758d58 : in al, 0xa2 ; ret
0xffffff80004d3358 : in al, 0xad ; ret
0xffffff80008d34b8 : in al, 0xb3 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072fcfd : in al, 0xb5 ; dec dword ptr [rcx - 0x75] ; pop rbp ; and byte ptr [rax - 0x7d], cl ; ret
0xffffff8000767458 : in al, 0xb5 ; ret 0x4cff
0xffffff80008dfcf3 : in al, 0xb8 ; ret 2
0xffffff800073a4a3 : in al, 0xb9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e4589 : in al, 0xba ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006ca4ed : in al, 0xc0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800068a472 : in al, 0xc4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c83f4 : in al, 0xde ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065baa8 : in al, 0xeb ; add eax, 0x8948ce89 ; ret 0x8948
0xffffff800066739b : in al, 0xeb ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff80006bd3e3 : in al, 0xeb ; ret
0xffffff80007c9ee4 : in al, 0xf ; sahf ; ret 0xc208
0xffffff80004f6a98 : in al, 0xf ; test byte ptr [rbp - 0xa000000], dl ; ret
0xffffff80003555e4 : in al, 0xf ; test ch, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000406235 : in al, 0xf ; test dword ptr [rbp - 0x7cffffef], esp ; ret
0xffffff80003dfd60 : in al, 0xf ; xchg eax, ebp ; ret
0xffffff8000607e79 : in al, 0xf ; xchg eax, ebp ; ret 0x8548
0xffffff8000747e49 : in al, 0xf ; xchg eax, ebp ; ret 0x894c
0xffffff80007c2453 : in al, 0xf ; xchg eax, ebp ; ret 0xf41
0xffffff80004d14a5 : in al, 0xf ; xchg eax, ebp ; ret 0xf981
0xffffff8000476c33 : in al, 0xf ; xchg eax, esp ; ret
0xffffff8000288a81 : in al, 0xf ; xchg eax, esp ; ret 0x854d
0xffffff80003a806f : in al, 0xf ; xchg eax, esp ; ret 0xb60f
0xffffff80003a4abf : in al, 0xf6 ; ret
0xffffff80007cfeb2 : in al, 0xf6 ; ret 0x7501
0xffffff80004ba918 : in al, 0xf7 ; ret
0xffffff8000753158 : in al, 0xf8 ; ret
0xffffff800064e3c8 : in al, 0xfd ; ret
0xffffff800048bc51 : in al, 0xff ; call qword ptr [rsi]
0xffffff80004a5df6 : in al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027b6d5 : in al, 0xff ; jmp rax
0xffffff8000737361 : in al, 0xff ; jmp rcx
0xffffff8000448625 : in al, 0xff ; pop rbp ; ret
0xffffff80003e5e16 : in al, 0xff ; ret
0xffffff800054bb6e : in al, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d91ef : in al, 1 ; add byte ptr [rax], al ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff8000467430 : in al, dx ; adc al, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cf556 : in al, dx ; adc byte ptr [rbp - 0x77], cl ; ret 0x8948
0xffffff800060be66 : in al, dx ; adc byte ptr [rbp - 0x77], cl ; ret 0xc889
0xffffff80008eb519 : in al, dx ; adc byte ptr [rbx + rcx*4 + 0x35], cl ; pop rsi ; ret 0x24
0xffffff80003999d6 : in al, dx ; adc dh, dh ; ret 0x7401
0xffffff800070ec5d : in al, dx ; add al, 0 ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff800083c1e9 : in al, dx ; add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800082c8d4 : in al, dx ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800026f1fd : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff8000314685 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; jmp rax
0xffffff80003174c1 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80004696ee : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000558dbf : in al, dx ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800060b8d1 : in al, dx ; add byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80007f53bd : in al, dx ; add byte ptr cs:[rax - 0x77], cl ; ret 0x18e8
0xffffff80004bc4b3 : in al, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003431ad : in al, dx ; and byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp + rcx*4 + 0x3d] ; jmp qword ptr [rdx]
0xffffff80006416d0 : in al, dx ; and dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800064e7b0 : in al, dx ; cld ; ret
0xffffff80006b42ab : in al, dx ; cmp byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800089069f : in al, dx ; cmp byte ptr [rcx - 0x77], cl ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff8000265cb0 : in al, dx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], -0x7b ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0xffffff80006548c0 : in al, dx ; cwde ; ret
0xffffff8000414869 : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004cf1f8 : in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80003c5062 : in al, dx ; dec dword ptr [rbx + 0x740c8e05] ; add cl, ch ; ret 0xffef
0xffffff80004cfc6f : in al, dx ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80004ccb7a : in al, dx ; dec dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800033a498 : in al, dx ; hlt ; jnp 0xffffff800033a4a4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004056b5 : in al, dx ; idiv edi ; call rcx
0xffffff800059bcd5 : in al, dx ; inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0x9103
0xffffff80004cc544 : in al, dx ; inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000704038 : in al, dx ; jmp 0xffffff7feea04044
0xffffff80002a1d33 : in al, dx ; jmp 0xffffff80002a1d6c
0xffffff80002a1d93 : in al, dx ; jmp 0xffffff80002a1e33
0xffffff80008b4407 : in al, dx ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80003b7398 : in al, dx ; mov byte ptr [rsi], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b80b3 : in al, dx ; mov eax, ecx ; pop rbp ; ret
0xffffff800052b490 : in al, dx ; mov edx, 0xff480003 ; ret
0xffffff8000845610 : in al, dx ; mov esi, 0x8b48001c ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000389002 : in al, dx ; movzx ecx, al ; mov eax, ecx ; pop rbp ; ret
0xffffff80003ae4ba : in al, dx ; movzx esi, al ; mov eax, esi ; pop rbp ; ret
0xffffff8000388b33 : in al, dx ; pop rbp ; ret
0xffffff80002b4ed3 : in al, dx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a254d : in al, dx ; push 0 ; pop rbp ; ret
0xffffff80004c6c30 : in al, dx ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000827184 : in al, dx ; push rcx ; sbb al, 0 ; mov rdi, r13 ; call rbx
0xffffff80002a21d5 : in al, dx ; ret
0xffffff80008d2130 : in al, dx ; ret 0x13
0xffffff80008a946f : in al, dx ; ret 0x23
0xffffff80006aaed9 : in al, dx ; ret 0x30
0xffffff800065f4b8 : in al, dx ; ret 0x48ff
0xffffff80002fe920 : in al, dx ; ret 0xfff9
0xffffff80006ac0e0 : in al, dx ; sbb ah, bh ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff800048d67f : in al, dx ; sbb byte ptr [rbx - 0x38b6efb9], cl ; ret
0xffffff80002f8bea : in al, dx ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000887e68 : in al, dx ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800064fb0f : in al, dx ; sub byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800036ea0f : in al, dx ; sub byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff80008909bf : in al, dx ; sub byte ptr [rcx - 0x44], al ; ret 2
0xffffff80008df51c : in eax, 0 ; add byte ptr [rax - 0x1a76b7ab], dl ; pop rbp ; ret
0xffffff8000666505 : in eax, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007b3cd6 : in eax, 0x15 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80006ac2e7 : in eax, 0x16 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80005564c5 : in eax, 0x25 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e36a9 : in eax, 0x26 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004a18ba : in eax, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80006b6649 : in eax, 0x3b ; add al, ch ; out dx, eax ; ret
0xffffff8000b3e3ca : in eax, 0x3b ; int1 ; push rcx ; jmp qword ptr [rdx]
0xffffff80008d5ca3 : in eax, 0x40 ; mov byte ptr [rdi + 0x88], dh ; pop rbp ; ret
0xffffff80008d5ce3 : in eax, 0x40 ; mov byte ptr [rdi + 0xb8], dh ; pop rbp ; ret
0xffffff80008d5d03 : in eax, 0x40 ; mov byte ptr [rdi + 0xb9], dh ; pop rbp ; ret
0xffffff80008790d3 : in eax, 0x40 ; mov byte ptr [rip + 0x21dd75], bh ; pop rbp ; ret
0xffffff800029ed13 : in eax, 0x40 ; movsx edi, bh ; pop rbp ; jmp rsi
0xffffff80002b7b03 : in eax, 0x40 ; movzx eax, bh ; pop rbp ; ret
0xffffff8000568bd3 : in eax, 0x41 ; mov dword ptr [rcx], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800049e4b3 : in eax, 0x44 ; mov eax, eax ; pop rbp ; ret
0xffffff80008e7177 : in eax, 0x47 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002c80a3 : in eax, 0x48 ; add dword ptr [rdi + 8], esi ; pop rbp ; ret
0xffffff8000495753 : in eax, 0x48 ; add dword ptr [rdi], esi ; pop rbp ; ret
0xffffff80005223aa : in eax, 0x48 ; add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a190a : in eax, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000293673 : in eax, 0x48 ; cmp dword ptr [rdi + 8], 0 ; jne 0xffffff8000293686 ; pop rbp ; ret
0xffffff8000652363 : in eax, 0x48 ; cmp edi, 1 ; sbb eax, eax ; pop rbp ; ret
0xffffff800080eea3 : in eax, 0x48 ; cmp edi, esi ; sete al ; pop rbp ; ret
0xffffff80008135c3 : in eax, 0x48 ; cmp esi, edi ; sete al ; pop rbp ; ret
0xffffff80004956a3 : in eax, 0x48 ; inc dword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80004953c3 : in eax, 0x48 ; inc dword ptr [rdi] ; pop rbp ; ret
0xffffff8000751de3 : in eax, 0x48 ; lea eax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000749bb3 : in eax, 0x48 ; lea eax, [rdi + 0x2d4] ; pop rbp ; ret
0xffffff80007f0703 : in eax, 0x48 ; lea eax, [rdi + 0x3bc] ; pop rbp ; ret
0xffffff80007f06f3 : in eax, 0x48 ; lea eax, [rdi + 0x3c0] ; pop rbp ; ret
0xffffff8000756b73 : in eax, 0x48 ; lea eax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c3 : in eax, 0x48 ; lea eax, [rdi + 0x68] ; pop rbp ; ret
0xffffff80004f9383 : in eax, 0x48 ; lea eax, [rdi + 0x84] ; pop rbp ; ret
0xffffff80004b3aa3 : in eax, 0x48 ; lea eax, [rdi + 0xe8] ; pop rbp ; ret
0xffffff80008455e3 : in eax, 0x48 ; lea eax, [rip + 0x1aab37] ; pop rbp ; ret
0xffffff80008e75b3 : in eax, 0x48 ; lea eax, [rip + 0x2500ed] ; pop rbp ; ret
0xffffff80008e6d23 : in eax, 0x48 ; lea eax, [rip + 0x250955] ; pop rbp ; ret
0xffffff80008e6a63 : in eax, 0x48 ; lea eax, [rip + 0x250bed] ; pop rbp ; ret
0xffffff80008e5533 : in eax, 0x48 ; lea eax, [rip + 0x2520f5] ; pop rbp ; ret
0xffffff80008e25c3 : in eax, 0x48 ; lea eax, [rip + 0x25503d] ; pop rbp ; ret
0xffffff80008d7933 : in eax, 0x48 ; lea eax, [rip + 0x25fca5] ; pop rbp ; ret
0xffffff80008d76c3 : in eax, 0x48 ; lea eax, [rip + 0x25feed] ; pop rbp ; ret
0xffffff80008d7453 : in eax, 0x48 ; lea eax, [rip + 0x260135] ; pop rbp ; ret
0xffffff80008d6ab3 : in eax, 0x48 ; lea eax, [rip + 0x260a3d] ; pop rbp ; ret
0xffffff80008d6253 : in eax, 0x48 ; lea eax, [rip + 0x261275] ; pop rbp ; ret
0xffffff80008d5ac3 : in eax, 0x48 ; lea eax, [rip + 0x2619dd] ; pop rbp ; ret
0xffffff80008d4ac3 : in eax, 0x48 ; lea eax, [rip + 0x2629b5] ; pop rbp ; ret
0xffffff80008d1823 : in eax, 0x48 ; lea eax, [rip + 0x265c1d] ; pop rbp ; ret
0xffffff80008d0763 : in eax, 0x48 ; lea eax, [rip + 0x266cb5] ; pop rbp ; ret
0xffffff80008ceb33 : in eax, 0x48 ; lea eax, [rip + 0x2688bd] ; pop rbp ; ret
0xffffff80008ce193 : in eax, 0x48 ; lea eax, [rip + 0x269235] ; pop rbp ; ret
0xffffff80008cc393 : in eax, 0x48 ; lea eax, [rip + 0x26b00d] ; pop rbp ; ret
0xffffff80008c41b3 : in eax, 0x48 ; lea eax, [rip + 0x27314d] ; pop rbp ; ret
0xffffff80008c36e3 : in eax, 0x48 ; lea eax, [rip + 0x273bf5] ; pop rbp ; ret
0xffffff80008c2a53 : in eax, 0x48 ; lea eax, [rip + 0x27485d] ; pop rbp ; ret
0xffffff80008c0b03 : in eax, 0x48 ; lea eax, [rip + 0x27676d] ; pop rbp ; ret
0xffffff80008b6953 : in eax, 0x48 ; lea eax, [rip + 0x2808cd] ; pop rbp ; ret
0xffffff80008b6333 : in eax, 0x48 ; lea eax, [rip + 0x280ec5] ; pop rbp ; ret
0xffffff8000864203 : in eax, 0x48 ; lea eax, [rip + 0x281295] ; pop rbp ; ret
0xffffff80008b5ce3 : in eax, 0x48 ; lea eax, [rip + 0x2814ed] ; pop rbp ; ret
0xffffff80008b5a33 : in eax, 0x48 ; lea eax, [rip + 0x281775] ; pop rbp ; ret
0xffffff80008b50f3 : in eax, 0x48 ; lea eax, [rip + 0x28208d] ; pop rbp ; ret
0xffffff80008b3db3 : in eax, 0x48 ; lea eax, [rip + 0x2833a5] ; pop rbp ; ret
0xffffff80008b32c3 : in eax, 0x48 ; lea eax, [rip + 0x283e6d] ; pop rbp ; ret
0xffffff80008b29c3 : in eax, 0x48 ; lea eax, [rip + 0x284745] ; pop rbp ; ret
0xffffff80008af363 : in eax, 0x48 ; lea eax, [rip + 0x287d7d] ; pop rbp ; ret
0xffffff80008ae053 : in eax, 0x48 ; lea eax, [rip + 0x289065] ; pop rbp ; ret
0xffffff80008ad363 : in eax, 0x48 ; lea eax, [rip + 0x289d2d] ; pop rbp ; ret
0xffffff80008ab4b3 : in eax, 0x48 ; lea eax, [rip + 0x28bb85] ; pop rbp ; ret
0xffffff80008ab153 : in eax, 0x48 ; lea eax, [rip + 0x28bebd] ; pop rbp ; ret
0xffffff80008aab13 : in eax, 0x48 ; lea eax, [rip + 0x28c4d5] ; pop rbp ; ret
0xffffff80008a9f43 : in eax, 0x48 ; lea eax, [rip + 0x28d07d] ; pop rbp ; ret
0xffffff80008a7b83 : in eax, 0x48 ; lea eax, [rip + 0x28f405] ; pop rbp ; ret
0xffffff80008a7173 : in eax, 0x48 ; lea eax, [rip + 0x28fded] ; pop rbp ; ret
0xffffff80008a6273 : in eax, 0x48 ; lea eax, [rip + 0x290cbd] ; pop rbp ; ret
0xffffff80008a52e3 : in eax, 0x48 ; lea eax, [rip + 0x291c25] ; pop rbp ; ret
0xffffff80008a2a13 : in eax, 0x48 ; lea eax, [rip + 0x2944cd] ; pop rbp ; ret
0xffffff800089d183 : in eax, 0x48 ; lea eax, [rip + 0x299d2d] ; pop rbp ; ret
0xffffff800089cfe3 : in eax, 0x48 ; lea eax, [rip + 0x299ea5] ; pop rbp ; ret
0xffffff800089bcd3 : in eax, 0x48 ; lea eax, [rip + 0x29b185] ; pop rbp ; ret
0xffffff800089b9a3 : in eax, 0x48 ; lea eax, [rip + 0x29b48d] ; pop rbp ; ret
0xffffff800089b673 : in eax, 0x48 ; lea eax, [rip + 0x29b795] ; pop rbp ; ret
0xffffff800089b053 : in eax, 0x48 ; lea eax, [rip + 0x29bd8d] ; pop rbp ; ret
0xffffff8000899c83 : in eax, 0x48 ; lea eax, [rip + 0x29d135] ; pop rbp ; ret
0xffffff8000899013 : in eax, 0x48 ; lea eax, [rip + 0x29dd7d] ; pop rbp ; ret
0xffffff8000896743 : in eax, 0x48 ; lea eax, [rip + 0x2a0625] ; pop rbp ; ret
0xffffff8000895123 : in eax, 0x48 ; lea eax, [rip + 0x2a1c1d] ; pop rbp ; ret
0xffffff8000893ea3 : in eax, 0x48 ; lea eax, [rip + 0x2a2e75] ; pop rbp ; ret
0xffffff8000893073 : in eax, 0x48 ; lea eax, [rip + 0x2a3c7d] ; pop rbp ; ret
0xffffff8000892483 : in eax, 0x48 ; lea eax, [rip + 0x2a4845] ; pop rbp ; ret
0xffffff80008918e3 : in eax, 0x48 ; lea eax, [rip + 0x2a53bd] ; pop rbp ; ret
0xffffff8000891223 : in eax, 0x48 ; lea eax, [rip + 0x2a5a55] ; pop rbp ; ret
0xffffff80008900c3 : in eax, 0x48 ; lea eax, [rip + 0x2a6b8d] ; pop rbp ; ret
0xffffff800088ee43 : in eax, 0x48 ; lea eax, [rip + 0x2a7de5] ; pop rbp ; ret
0xffffff800088e323 : in eax, 0x48 ; lea eax, [rip + 0x2a88dd] ; pop rbp ; ret
0xffffff800088cb73 : in eax, 0x48 ; lea eax, [rip + 0x2aa065] ; pop rbp ; ret
0xffffff800088a8f3 : in eax, 0x48 ; lea eax, [rip + 0x2ac2bd] ; pop rbp ; ret
0xffffff800088a453 : in eax, 0x48 ; lea eax, [rip + 0x2ac735] ; pop rbp ; ret
0xffffff8000889cc3 : in eax, 0x48 ; lea eax, [rip + 0x2ace9d] ; pop rbp ; ret
0xffffff8000887e63 : in eax, 0x48 ; lea eax, [rip + 0x2aecd5] ; pop rbp ; ret
0xffffff8000885ff3 : in eax, 0x48 ; lea eax, [rip + 0x2b0b1d] ; pop rbp ; ret
0xffffff8000885763 : in eax, 0x48 ; lea eax, [rip + 0x2b135d] ; pop rbp ; ret
0xffffff8000884e33 : in eax, 0x48 ; lea eax, [rip + 0x2b1c65] ; pop rbp ; ret
0xffffff80008846f3 : in eax, 0x48 ; lea eax, [rip + 0x2b237d] ; pop rbp ; ret
0xffffff80008823f3 : in eax, 0x48 ; lea eax, [rip + 0x2b4655] ; pop rbp ; ret
0xffffff8000882073 : in eax, 0x48 ; lea eax, [rip + 0x2b49ad] ; pop rbp ; ret
0xffffff8000881a63 : in eax, 0x48 ; lea eax, [rip + 0x2b4f95] ; pop rbp ; ret
0xffffff8000881653 : in eax, 0x48 ; lea eax, [rip + 0x2b537d] ; pop rbp ; ret
0xffffff8000881333 : in eax, 0x48 ; lea eax, [rip + 0x2b5675] ; pop rbp ; ret
0xffffff8000863833 : in eax, 0x48 ; lea eax, [rip + 0x2d2ed5] ; pop rbp ; ret
0xffffff8000863623 : in eax, 0x48 ; lea eax, [rip + 0x2d31ad] ; pop rbp ; ret
0xffffff80008633c3 : in eax, 0x48 ; lea eax, [rip + 0x2d33e5] ; pop rbp ; ret
0xffffff8000863163 : in eax, 0x48 ; lea eax, [rip + 0x2d361d] ; pop rbp ; ret
0xffffff8000862f03 : in eax, 0x48 ; lea eax, [rip + 0x2d3855] ; pop rbp ; ret
0xffffff8000862ca3 : in eax, 0x48 ; lea eax, [rip + 0x2d3a8d] ; pop rbp ; ret
0xffffff8000862a43 : in eax, 0x48 ; lea eax, [rip + 0x2d3c9d] ; pop rbp ; ret
0xffffff80008627b3 : in eax, 0x48 ; lea eax, [rip + 0x2d3f05] ; pop rbp ; ret
0xffffff800080f323 : in eax, 0x48 ; lea eax, [rip + 0x2d4e75] ; pop rbp ; ret
0xffffff8000860f23 : in eax, 0x48 ; lea eax, [rip + 0x2d576d] ; pop rbp ; ret
0xffffff800085d023 : in eax, 0x48 ; lea eax, [rip + 0x2d961d] ; pop rbp ; ret
0xffffff800085cdc3 : in eax, 0x48 ; lea eax, [rip + 0x2d983d] ; pop rbp ; ret
0xffffff8000858e93 : in eax, 0x48 ; lea eax, [rip + 0x2dd69d] ; pop rbp ; ret
0xffffff8000832903 : in eax, 0x48 ; lea eax, [rip + 0x302b65] ; pop rbp ; ret
0xffffff8000830a83 : in eax, 0x48 ; lea eax, [rip + 0x3049bd] ; pop rbp ; ret
0xffffff800082f743 : in eax, 0x48 ; lea eax, [rip + 0x305cd5] ; pop rbp ; ret
0xffffff800082ec33 : in eax, 0x48 ; lea eax, [rip + 0x3067bd] ; pop rbp ; ret
0xffffff800082e0f3 : in eax, 0x48 ; lea eax, [rip + 0x3072d5] ; pop rbp ; ret
0xffffff800082c213 : in eax, 0x48 ; lea eax, [rip + 0x30918d] ; pop rbp ; ret
0xffffff800082b5f3 : in eax, 0x48 ; lea eax, [rip + 0x309d85] ; pop rbp ; ret
0xffffff8000818e03 : in eax, 0x48 ; lea eax, [rip + 0x31c54d] ; pop rbp ; ret
0xffffff8000818123 : in eax, 0x48 ; lea eax, [rip + 0x31d195] ; pop rbp ; ret
0xffffff80008162d3 : in eax, 0x48 ; lea eax, [rip + 0x31efbd] ; pop rbp ; ret
0xffffff8000814d73 : in eax, 0x48 ; lea eax, [rip + 0x3204f5] ; pop rbp ; ret
0xffffff8000814373 : in eax, 0x48 ; lea eax, [rip + 0x320ecd] ; pop rbp ; ret
0xffffff8000813bb3 : in eax, 0x48 ; lea eax, [rip + 0x321665] ; pop rbp ; ret
0xffffff8000813113 : in eax, 0x48 ; lea eax, [rip + 0x3220dd] ; pop rbp ; ret
0xffffff8000811b03 : in eax, 0x48 ; lea eax, [rip + 0x3236c5] ; pop rbp ; ret
0xffffff8000810e23 : in eax, 0x48 ; lea eax, [rip + 0x32437d] ; pop rbp ; ret
0xffffff8000391153 : in eax, 0x48 ; lea eax, [rip + 0x6a6f65] ; pop rbp ; ret
0xffffff8000366e93 : in eax, 0x48 ; lea eax, [rip + 0x6c5bd5] ; pop rbp ; ret
0xffffff80002a0413 : in eax, 0x48 ; lea eax, [rip + 0x84c015] ; pop rbp ; ret
0xffffff8000290ee3 : in eax, 0x48 ; lea eax, [rip + 0x85a425] ; pop rbp ; ret
0xffffff8000290ed3 : in eax, 0x48 ; lea eax, [rip + 0x85a435] ; pop rbp ; ret
0xffffff8000290ec3 : in eax, 0x48 ; lea eax, [rip + 0x85a445] ; pop rbp ; ret
0xffffff800083c2e3 : in eax, 0x48 ; lea eax, [rip + 0xe7f75] ; pop rbp ; ret
0xffffff800088e843 : in eax, 0x48 ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff8000350703 : in eax, 0x48 ; mov dword ptr [rdi + 0x20], esi ; pop rbp ; ret
0xffffff8000796223 : in eax, 0x48 ; mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000796243 : in eax, 0x48 ; mov dword ptr [rdi + 0x28], esi ; pop rbp ; ret
0xffffff80002daf13 : in eax, 0x48 ; mov dword ptr [rdi + 0x318], esi ; pop rbp ; ret
0xffffff80007f0663 : in eax, 0x48 ; mov dword ptr [rdi + 0x388], esi ; pop rbp ; ret
0xffffff8000698733 : in eax, 0x48 ; mov dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff80007f0683 : in eax, 0x48 ; mov dword ptr [rdi + 0x390], esi ; pop rbp ; ret
0xffffff80007f06c3 : in eax, 0x48 ; mov dword ptr [rdi + 0x3a0], esi ; pop rbp ; ret
0xffffff80007f0873 : in eax, 0x48 ; mov dword ptr [rdi + 0x3a8], esi ; pop rbp ; ret
0xffffff80007f0723 : in eax, 0x48 ; mov dword ptr [rdi + 0x3b0], esi ; pop rbp ; ret
0xffffff80007f0773 : in eax, 0x48 ; mov dword ptr [rdi + 0x438], esi ; pop rbp ; ret
0xffffff80007f06e3 : in eax, 0x48 ; mov dword ptr [rdi + 0x450], esi ; pop rbp ; ret
0xffffff80007f0853 : in eax, 0x48 ; mov dword ptr [rdi + 0x458], esi ; pop rbp ; ret
0xffffff8000342b03 : in eax, 0x48 ; mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff800031ed73 : in eax, 0x48 ; mov dword ptr [rdi + 0x60], esi ; pop rbp ; ret
0xffffff80004b40c3 : in eax, 0x48 ; mov dword ptr [rdi + 0x68], esi ; pop rbp ; ret
0xffffff80004b3c93 : in eax, 0x48 ; mov dword ptr [rdi + 0x78], esi ; pop rbp ; ret
0xffffff80008a82b3 : in eax, 0x48 ; mov dword ptr [rdi + 0x88], esi ; pop rbp ; ret
0xffffff80008a82c3 : in eax, 0x48 ; mov dword ptr [rdi + 0x90], esi ; pop rbp ; ret
0xffffff80008a82d3 : in eax, 0x48 ; mov dword ptr [rdi + 0x98], esi ; pop rbp ; ret
0xffffff80004b4133 : in eax, 0x48 ; mov dword ptr [rdi + 0xb0], esi ; pop rbp ; ret
0xffffff80004b4153 : in eax, 0x48 ; mov dword ptr [rdi + 0xb8], esi ; pop rbp ; ret
0xffffff80007f0793 : in eax, 0x48 ; mov dword ptr [rdi + 0xd80], esi ; pop rbp ; ret
0xffffff8000796093 : in eax, 0x48 ; mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0xffffff80007640b3 : in eax, 0x48 ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0xffffff800080ee53 : in eax, 0x48 ; mov dword ptr [rdi], 0xffffffff ; pop rbp ; ret
0xffffff80002c80b3 : in eax, 0x48 ; mov dword ptr [rdi], esi ; pop rbp ; ret
0xffffff80007b3da3 : in eax, 0x48 ; mov dword ptr [rip + 0x32fe15], edi ; pop rbp ; ret
0xffffff80003a9d83 : in eax, 0x48 ; mov dword ptr [rip + 0x727e3d], edi ; pop rbp ; ret
0xffffff80003a8563 : in eax, 0x48 ; mov dword ptr [rip + 0x7294dd], edi ; pop rbp ; ret
0xffffff800029d483 : in eax, 0x48 ; mov dword ptr [rip + 0x84e6d5], edi ; pop rbp ; ret
0xffffff800039f203 : in eax, 0x48 ; mov dword ptr [rsi], edi ; pop rbp ; ret
0xffffff800049f683 : in eax, 0x48 ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff8000870c33 : in eax, 0x48 ; mov eax, dword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff80007951c3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800082fd93 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800082fda3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x24] ; pop rbp ; ret
0xffffff800082fdb3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff8000516523 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002db143 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff800086ee93 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x28] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff80002db563 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff80002db1c3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x290] ; pop rbp ; ret
0xffffff80002db133 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x2b0] ; pop rbp ; ret
0xffffff80004f9033 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x30] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff800081e943 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002db543 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x310] ; pop rbp ; ret
0xffffff80002daeb3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x318] ; pop rbp ; ret
0xffffff80002daf23 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x350] ; pop rbp ; ret
0xffffff80007f0653 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x388] ; pop rbp ; ret
0xffffff80002a0403 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80007f0673 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x390] ; pop rbp ; ret
0xffffff80007f06b3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x3a0] ; pop rbp ; ret
0xffffff80007f0863 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x3a8] ; pop rbp ; ret
0xffffff80007f0713 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x3b0] ; pop rbp ; ret
0xffffff80005644d3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x3dc] ; pop rbp ; ret
0xffffff80007f0763 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x438] ; pop rbp ; ret
0xffffff800077e0f3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x440] ; pop rbp ; ret
0xffffff8000389e73 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x448] ; pop rbp ; ret
0xffffff80007f06d3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x450] ; pop rbp ; ret
0xffffff80007f0843 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x458] ; pop rbp ; ret
0xffffff80002b7183 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x488] ; pop rbp ; ret
0xffffff800077e093 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff800039a6a3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x4a0] ; pop rbp ; ret
0xffffff8000342183 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80002db573 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80004b40b3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b40a3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa0c3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x70] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80004b3c83 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff80004b4163 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x80] ; pop rbp ; ret
0xffffff80004b4173 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff80004f9413 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x8f8] ; pop rbp ; ret
0xffffff80004b4183 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff8000356d63 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x98] ; pop rbp ; ret
0xffffff80004f8fb3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x998] ; pop rbp ; ret
0xffffff80004f9043 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0x9d0] ; pop rbp ; ret
0xffffff80008adf03 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff80004b4123 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xb0] ; pop rbp ; ret
0xffffff80004b4143 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff8000895d03 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xc0] ; pop rbp ; ret
0xffffff80004fa033 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff80007f0783 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xd80] ; pop rbp ; ret
0xffffff80004fa093 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xd8] ; pop rbp ; ret
0xffffff80004b41a3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xe0] ; pop rbp ; ret
0xffffff8000504ad3 : in eax, 0x48 ; mov eax, dword ptr [rdi + 0xf0] ; pop rbp ; ret
0xffffff8000303743 : in eax, 0x48 ; mov eax, dword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff80004f9f03 : in eax, 0x48 ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800088af03 : in eax, 0x48 ; mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800028ba53 : in eax, 0x48 ; mov eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff80008790c3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x26c565] ; pop rbp ; ret
0xffffff80008661c3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x27f265] ; pop rbp ; ret
0xffffff80008661a3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x27f40d] ; pop rbp ; ret
0xffffff80008661b3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x27f415] ; pop rbp ; ret
0xffffff8000864663 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x280f35] ; pop rbp ; ret
0xffffff800085d343 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x28805d] ; pop rbp ; ret
0xffffff80006c5493 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3a3795] ; pop rbp ; jmp rax
0xffffff80006c54a3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3a379d] ; pop rbp ; jmp rax
0xffffff80006c53e3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3a37fd] ; pop rbp ; jmp rax
0xffffff80006c53d3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3a3805] ; pop rbp ; jmp rax
0xffffff8000559163 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x50fac5] ; pop rbp ; jmp rax
0xffffff8000559173 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x50facd] ; pop rbp ; jmp rax
0xffffff80005590d3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x50fb0d] ; pop rbp ; jmp rax
0xffffff80005590c3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x50fb15] ; pop rbp ; jmp rax
0xffffff80003c71e3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x692c65] ; pop rbp ; ret
0xffffff80003c7173 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x692cdd] ; pop rbp ; ret
0xffffff80003a38b3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x75b9ed] ; pop rbp ; ret
0xffffff80003a2d63 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x75bd65] ; pop rbp ; ret
0xffffff8000366eb3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x79824d] ; pop rbp ; ret
0xffffff8000366ea3 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x798265] ; pop rbp ; ret
0xffffff800028f013 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x79d01d] ; pop rbp ; jmp rax
0xffffff8000262983 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x83d3fd] ; pop rbp ; ret
0xffffff800049fb23 : in eax, 0x48 ; mov eax, edi ; mov rdi, rsi ; pop rbp ; jmp rax
0xffffff8000372943 : in eax, 0x48 ; mov eax, edi ; pop rbp ; ret
0xffffff800049e6d3 : in eax, 0x48 ; mov eax, esi ; pop rbp ; ret
0xffffff80007960a3 : in eax, 0x48 ; movsxd rax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007961e3 : in eax, 0x48 ; movsxd rax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff8000342753 : in eax, 0x48 ; movsxd rax, esi ; mov eax, dword ptr [rdi + rax*8] ; pop rbp ; ret
0xffffff80004d26c3 : in eax, 0x48 ; shr edi, 0x20 ; mov eax, edi ; pop rbp ; ret
0xffffff80002c80c3 : in eax, 0x48 ; sub esi, dword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80003403c3 : in eax, 0x48 ; test esi, esi ; je 0xffffff80003403d2 ; pop rbp ; ret
0xffffff800049cf3a : in eax, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80002510e3 : in eax, 0x5d ; ret
0xffffff80006a77e7 : in eax, 0x61 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80002b4aca : in eax, 0x66 ; insd dword ptr [rdi], dx ; add bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0xffffff80004fa643 : in eax, 0x66 ; mov dword ptr [rdi + 0x6a], esi ; pop rbp ; ret
0xffffff80006676b7 : in eax, 0x6d ; ret 0x48ff
0xffffff800088ee47 : in eax, 0x7d ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80004b3af3 : in eax, 0x80 ; add qword ptr [r8], r10 ; pop rbp ; ret
0xffffff80005f0013 : in eax, 0x80 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg eax, esp ; add byte ptr [rax], al ; add bl, bh ; pop rbp ; ret
0xffffff80004b3ad3 : in eax, 0x80 ; mov rbp, cr3 ; ret
0xffffff80004b36d3 : in eax, 0x81 ; cmp byte ptr [r8], r8b ; add byte ptr [rax + rax], al ; pop rbp ; ret
0xffffff80004b3ab3 : in eax, 0x81 ; cmp byte ptr [r8], r8b ; add byte ptr [rax], 0 ; pop rbp ; ret
0xffffff80003e7913 : in eax, 0x81 ; ret 0xd8de
0xffffff80004d26b3 : in eax, 0x83 ; out 0xf, eax ; mov eax, edi ; pop rbp ; ret
0xffffff800026e233 : in eax, 0x83 ; push rdi ; jbe 0xffffff800026e246 ; xor eax, eax ; pop rbp ; ret
0xffffff80007742f3 : in eax, 0x85 ; push qword ptr [rsp + rax - 0x77] ; clc ; pop rbp ; ret
0xffffff80007f94d7 : in eax, 0x86 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b0fa3 : in eax, 0x89 ; cmp eax, 0x6a1332 ; pop rbp ; ret
0xffffff800037c6f3 : in eax, 0x89 ; cmp eax, 0x6b08ce ; pop rbp ; ret
0xffffff8000369043 : in eax, 0x89 ; cmp eax, 0x6c3e82 ; pop rbp ; ret
0xffffff80003b1bf3 : in eax, 0x89 ; cmp eax, 0x74fc1e ; pop rbp ; ret
0xffffff80002af993 : in eax, 0x89 ; cmp eax, 0x77c8ca ; pop rbp ; ret
0xffffff8000297db3 : in eax, 0x89 ; cmp eax, 0x79432a ; pop rbp ; ret
0xffffff80004b3bd3 : in eax, 0x89 ; ja 0xffffff80004b3c24 ; pop rbp ; ret
0xffffff80004b3bf3 : in eax, 0x89 ; ja 0xffffff80004b3c40 ; pop rbp ; ret
0xffffff80004b3c13 : in eax, 0x89 ; ja 0xffffff80004b3c68 ; pop rbp ; ret
0xffffff8000588ea3 : in eax, 0x89 ; ja 0xffffff8000588ec0 ; pop rbp ; ret
0xffffff8000588eb3 : in eax, 0x89 ; ja 0xffffff8000588ed4 ; pop rbp ; ret
0xffffff80007960b3 : in eax, 0x89 ; ja 0xffffff80007960d4 ; pop rbp ; ret
0xffffff80007961f3 : in eax, 0x89 ; ja 0xffffff800079622c ; pop rbp ; ret
0xffffff80007f07e3 : in eax, 0x89 ; ja 0xffffff80007f082c ; pop rbp ; ret
0xffffff8000815603 : in eax, 0x89 ; ja 0xffffff800081562e ; mov eax, esi ; pop rbp ; ret
0xffffff800089fb13 : in eax, 0x89 ; ja 0xffffff800089fb74 ; pop rbp ; ret
0xffffff80008a6553 : in eax, 0x89 ; ja 0xffffff80008a6570 ; pop rbp ; ret
0xffffff800088c523 : in eax, 0x89 ; push rsi ; sub al, 0x5d ; ret
0xffffff8000757665 : in eax, 0x89 ; ret
0xffffff8000813593 : in eax, 0x8a ; or al, 0x5d ; ret
0xffffff800088f593 : in eax, 0x8a ; pop r12 ; pop rbp ; ret
0xffffff80008d5cc3 : in eax, 0x8a ; xchg dword ptr [rax + 0x5d000000], ecx ; ret
0xffffff80008d5cf3 : in eax, 0x8a ; xchg dword ptr [rax + 0x5d000000], edi ; ret
0xffffff80008d5c13 : in eax, 0x8a ; xchg dword ptr [rax + 0x5d000000], esp ; ret
0xffffff80008d5d13 : in eax, 0x8a ; xchg dword ptr [rcx + 0x5d000000], edi ; ret
0xffffff80005e0483 : in eax, 0x8b ; adc al, 0x5d ; ret
0xffffff8000781793 : in eax, 0x8b ; adc byte ptr [r9 + 0x5dc03102], r9b ; ret
0xffffff800028e133 : in eax, 0x8b ; add al, 0x2b ; add al, 0x5d ; ret
0xffffff8000767823 : in eax, 0x8b ; add al, 0x5d ; ret
0xffffff8000541063 : in eax, 0x8b ; add cl, byte ptr [rcx + 0x5dc03101] ; ret
0xffffff80008ed0b3 : in eax, 0x8b ; add eax, 0x1f89ba ; pop rbp ; ret
0xffffff80007f05f3 : in eax, 0x8b ; add eax, 0x23c12e ; pop rbp ; ret
0xffffff800085d353 : in eax, 0x8b ; add eax, 0x288066 ; pop rbp ; ret
0xffffff8000369cf3 : in eax, 0x8b ; add eax, 0x6c31d6 ; pop rbp ; ret
0xffffff8000369033 : in eax, 0x8b ; add eax, 0x6c3e92 ; pop rbp ; ret
0xffffff80003a31b3 : in eax, 0x8b ; add eax, 0x72e7a2 ; pop rbp ; ret
0xffffff8000394e43 : in eax, 0x8b ; add eax, 0x73c466 ; pop rbp ; ret
0xffffff80003c7f83 : in eax, 0x8b ; add eax, 0x73dd92 ; pop rbp ; ret
0xffffff8000390733 : in eax, 0x8b ; add eax, 0x740b2e ; pop rbp ; ret
0xffffff80003c21d3 : in eax, 0x8b ; add eax, 0x742e66 ; pop rbp ; ret
0xffffff80002e9793 : in eax, 0x8b ; add eax, 0x742ffe ; pop rbp ; ret
0xffffff80003ba7d3 : in eax, 0x8b ; add eax, 0x74708e ; pop rbp ; ret
0xffffff800036b083 : in eax, 0x8b ; add eax, 0x76433e ; pop rbp ; ret
0xffffff8000369e33 : in eax, 0x8b ; add eax, 0x765532 ; pop rbp ; ret
0xffffff8000368383 : in eax, 0x8b ; add eax, 0x766526 ; pop rbp ; ret
0xffffff8000368303 : in eax, 0x8b ; add eax, 0x7665c2 ; pop rbp ; ret
0xffffff8000368283 : in eax, 0x8b ; add eax, 0x766646 ; pop rbp ; ret
0xffffff8000367fe3 : in eax, 0x8b ; add eax, 0x7668da ; pop rbp ; ret
0xffffff8000367f23 : in eax, 0x8b ; add eax, 0x766996 ; pop rbp ; ret
0xffffff8000367963 : in eax, 0x8b ; add eax, 0x766f42 ; pop rbp ; ret
0xffffff8000366dc3 : in eax, 0x8b ; add eax, 0x784d92 ; pop rbp ; ret
0xffffff80002ed3e3 : in eax, 0x8b ; add eax, 0x7d1e4e ; pop rbp ; ret
0xffffff80002da693 : in eax, 0x8b ; add eax, 0x813ca6 ; pop rbp ; ret
0xffffff80002c9ed3 : in eax, 0x8b ; add eax, 0x823dae ; pop rbp ; ret
0xffffff8000262b23 : in eax, 0x8b ; add eax, 0x83d25a ; pop rbp ; ret
0xffffff800025ebf3 : in eax, 0x8b ; add eax, 0x8880ca ; pop rbp ; ret
0xffffff800025ebe3 : in eax, 0x8b ; add eax, 0x8880d6 ; pop rbp ; ret
0xffffff80008107c3 : in eax, 0x8b ; and al, 0x5d ; ret
0xffffff8000581593 : in eax, 0x8b ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa0d3 : in eax, 0x8b ; and rax, 1 ; pop rbp ; ret
0xffffff8000526853 : in eax, 0x8b ; cmp byte ptr [r9 + 0x5dc03106], r9b ; ret
0xffffff80004fa023 : in eax, 0x8b ; insb byte ptr [rdi], dx ; pop rbp ; ret
0xffffff80002db703 : in eax, 0x8b ; je 0xffffff80002db76a ; ret
0xffffff80004f9103 : in eax, 0x8b ; jo 0xffffff80004f9093 ; loopne 0xffffff80004f9113 ; pop rbp ; ret
0xffffff80004f9113 : in eax, 0x8b ; jo 0xffffff80004f90a3 ; loopne 0xffffff80004f9124 ; pop rbp ; ret
0xffffff800057f203 : in eax, 0x8b ; js 0xffffff800057f193 ; loopne 0xffffff800057f213 ; pop rbp ; ret
0xffffff80005e0453 : in eax, 0x8b ; or al, 0x5d ; ret
0xffffff80005c0143 : in eax, 0x8b ; pop r12 ; add rax, rsi ; pop rbp ; ret
0xffffff80008980a3 : in eax, 0x8b ; pop r8 ; inc eax ; pop rbp ; ret
0xffffff800089fb23 : in eax, 0x8b ; pop r8 ; pop rbp ; ret
0xffffff80002ae7f3 : in eax, 0x8b ; pop rbp ; ret
0xffffff80005eaf03 : in eax, 0x8b ; push 0x5d01e083 ; ret
0xffffff80004b40e3 : in eax, 0x8b ; push r8 ; pop rbp ; ret
0xffffff80005cf383 : in eax, 0x8b ; sbb al, 0x5d ; ret
0xffffff8000780143 : in eax, 0x8b ; sub al, 0x5d ; ret
0xffffff80007817a3 : in eax, 0x8b ; sub byte ptr [r9 + 0x5dc03102], r9b ; ret
0xffffff80004f9363 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000000], eax ; ret
0xffffff80008ade73 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000000], edx ; ret
0xffffff80008a88c3 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000000], esi ; ret
0xffffff80002daf33 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000001], edi ; ret
0xffffff80007f0693 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000003], ebx ; ret
0xffffff80007f0733 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000003], edi ; ret
0xffffff80003676b3 : in eax, 0x8b ; xchg dword ptr [rax + 0x5d000003], edx ; ret
0xffffff80008dec63 : in eax, 0x8b ; xchg dword ptr [rax + 2], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002db733 : in eax, 0x8b ; xchg dword ptr [rax + 3], edx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007f07a3 : in eax, 0x8b ; xchg dword ptr [rcx + rax], ebx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004f9473 : in eax, 0x8b ; xchg dword ptr [rcx + rcx], ebx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800077e083 : in eax, 0x8b ; xchg dword ptr [rsp + rax], esi ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800082c6d3 : in eax, 0x8b ; xor al, 0x5d ; ret
0xffffff80005260c3 : in eax, 0x8b ; xor byte ptr [r9 + 0x5dc03106], r9b ; ret
0xffffff80004e5457 : in eax, 0x8c ; ret 0x8bff
0xffffff80008ed997 : in eax, 0x9d ; and al, 0 ; add rax, 8 ; pop rbp ; ret
0xffffff800075be97 : in eax, 0xac ; ret
0xffffff80002d2a67 : in eax, 0xb6 ; sti ; jmp qword ptr [rbx]
0xffffff80006564c3 : in eax, 0xb8 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800079dcb3 : in eax, 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002a0b43 : in eax, 0xb8 ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800084f543 : in eax, 0xb8 ; add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800039b883 : in eax, 0xb8 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000657a73 : in eax, 0xb8 ; add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b3c03 : in eax, 0xb8 ; add dword ptr [rax], eax ; add al, ah ; pop rbp ; ret
0xffffff8000310e43 : in eax, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800029c5d3 : in eax, 0xb8 ; add eax, 0x5d000000 ; ret
0xffffff80003bb4c3 : in eax, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005664c3 : in eax, 0xb8 ; and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000797023 : in eax, 0xb8 ; cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065a4a3 : in eax, 0xb8 ; jno 0xffffff800065a4ae ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007960c3 : in eax, 0xb8 ; loopne 0xffffff80007960ce ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000622e03 : in eax, 0xb8 ; mov eax, 0x5d000002 ; ret
0xffffff8000366e83 : in eax, 0xb8 ; or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000797253 : in eax, 0xb8 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800050bfd3 : in eax, 0xb8 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000622df3 : in eax, 0xb8 ; push 0x5d000002 ; ret
0xffffff80008ae6e3 : in eax, 0xb8 ; ret 2
0xffffff8000766733 : in eax, 0xb8 ; sbb dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003bba03 : in eax, 0xb8 ; sub eax, 0x5d000000 ; ret
0xffffff80008455f3 : in eax, 0xb8 ; test eax, 0x5d000000 ; ret
0xffffff800073a3cd : in eax, 0xb9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e453d : in eax, 0xba ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008b5143 : in eax, 0xbf ; sub byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff80008113f8
0xffffff800049e4a3 : in eax, 0xc1 ; out 0x18, eax ; or edi, esi ; mov eax, edi ; pop rbp ; ret
0xffffff80004d26d3 : in eax, 0xc1 ; out dx, eax ; add al, 0x89 ; clc ; pop rbp ; ret
0xffffff800037017d : in eax, 0xc1 ; ret 0x441e
0xffffff80008a3273 : in eax, 0xc6 ; push 0x5dc03101 ; ret
0xffffff800088e873 : in eax, 0xc6 ; sub byte ptr [r8], r8b ; pop rbp ; ret
0xffffff80008d5c03 : in eax, 0xc6 ; xchg dword ptr [rax + 0x1000000], esp ; pop rbp ; ret
0xffffff8000265db3 : in eax, 0xcc ; pop rbp ; ret
0xffffff80007fe333 : in eax, 0xe8 ; mov bh, 0xe3 ; mov dh, 0xff ; xor eax, eax ; pop rbp ; ret
0xffffff80005f6163 : in eax, 0xe8 ; out 0xaf, eax ; sbb eax, 0x5dc03100 ; ret
0xffffff80006b1463 : in eax, 0xe8 ; out 0xfc, eax ; adc dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006a4fca : in eax, 0xea ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f4557 : in eax, 0xea ; mov ecx, 0x258d4cff ; push rsi ; sysenter
0xffffff80004f2a3d : in eax, 0xeb ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800068318e : in eax, 0xeb ; or dh, byte ptr [rax] ; ret
0xffffff80004fa0f3 : in eax, 0xf ; mov bh, 0x47 ; and rax, 1 ; pop rbp ; ret
0xffffff80004fa653 : in eax, 0xf ; mov bh, 0x47 ; push 0x5d ; ret
0xffffff80007960d3 : in eax, 0xf ; mov bh, 0x47 ; sbb al, 0x5d ; ret
0xffffff80004fa163 : in eax, 0xf ; mov dh, 0x47 ; and r8, 1 ; pop rbp ; ret
0xffffff800086b6d3 : in eax, 0xf ; mov dh, 0x47 ; pop rbp ; ret
0xffffff8000898093 : in eax, 0xf ; mov dh, 0x47 ; pop rsp ; pop rbp ; ret
0xffffff80004847a3 : in eax, 0xf ; mov dh, 5 ; add eax, 0x5d006508 ; ret
0xffffff80003918f3 : in eax, 0xf ; mov dh, 5 ; jne 0xffffff80003918fb ; jae 0xffffff8000391904 ; pop rbp ; ret
0xffffff800039a603 : in eax, 0xf ; mov dh, 5 ; or eax, 0x5d007373 ; ret
0xffffff8000516483 : in eax, 0xf ; mov dh, 7 ; pop rbp ; ret
0xffffff8000802a73 : in eax, 0xf ; scasb al, byte ptr [rdi] ; clc ; pop rbp ; ret
0xffffff800055b8a3 : in eax, 0xf0 ; dec dword ptr [rip + 0x57ccc1] ; pop rbp ; ret
0xffffff800055b153 : in eax, 0xf0 ; dec dword ptr [rip + 0x57d40d] ; pop rbp ; ret
0xffffff800055ac23 : in eax, 0xf0 ; dec dword ptr [rip + 0x57d92d] ; pop rbp ; ret
0xffffff80004cb1a3 : in eax, 0xf0 ; inc dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff8000550663 : in eax, 0xf0 ; inc dword ptr [rip + 0x5d11fd] ; pop rbp ; ret
0xffffff8000550653 : in eax, 0xf0 ; inc dword ptr [rip + 0x5d1209] ; pop rbp ; ret
0xffffff800080df53 : in eax, 0xf0 ; xadd dword ptr [rsi], edi ; mov eax, edi ; pop rbp ; ret
0xffffff80008e4906 : in eax, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003e8e37 : in eax, 0xfa ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006307e7 : in eax, 0xfb ; add r11b, dl ; loop 0xffffff80006307f6 ; ret 0xd639
0xffffff8000900c4c : in eax, 0xfe ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000512e53 : in eax, 0xff ; add al, 0x5d ; ret
0xffffff800046a5b5 : in eax, 0xff ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004e4e4f : in eax, 0xff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000572f85 : in eax, 0xff ; call rdx
0xffffff800035ea14 : in eax, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081a311 : in eax, 0xff ; inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x95 ; ret
0xffffff80005350e8 : in eax, 0xff ; jmp 0xffffff800053698b
0xffffff8000572f81 : in eax, 0xff ; jmp qword ptr [rax - 0x1b]
0xffffff8000285201 : in eax, 0xff ; jmp rax
0xffffff8000444870 : in eax, 0xff ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000875f83 : in eax, 0xff ; xchg dword ptr [rax + 0x5d000000], edx ; ret
0xffffff80005348af : in eax, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000796203 : in eax, 1 ; ja 0xffffff800079623c ; pop rbp ; ret
0xffffff8000455a10 : in eax, dx ; adc dh, byte ptr [rcx] ; div bh ; ret
0xffffff800027afb6 : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000638270 : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret
0xffffff8000795cf5 : in eax, dx ; add dword ptr [rax], eax ; test rax, rax ; jne 0xffffff8000795cf9 ; pop rbp ; ret
0xffffff800065091f : in eax, dx ; add r14b, r14b ; ret 0x7402
0xffffff8000b45fb5 : in eax, dx ; and ecx, dword ptr [rax + 0x21] ; fmul dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800066c749 : in eax, dx ; call 0xffffff800028e4a4
0xffffff80003993a5 : in eax, dx ; call rbx
0xffffff800039a774 : in eax, dx ; call rcx
0xffffff80006628af : in eax, dx ; call rdx
0xffffff800053e1bf : in eax, dx ; call rsp
0xffffff800035a1b4 : in eax, dx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002cc14f : in eax, dx ; cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007b682f : in eax, dx ; cmp edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033ccf5 : in eax, dx ; dec byte ptr [rax + 0x39] ; ret
0xffffff8000677a87 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004bb695 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004c6778 : in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000828a1f : in eax, dx ; fdivp st(6) ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070551f : in eax, dx ; hlt ; cld ; push rsi ; ret
0xffffff800033f44c : in eax, dx ; hlt ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800046028f : in eax, dx ; je 0xffffff8000460305 ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff80006187ca : in eax, dx ; je 0xffffff80006187ea ; mov rdi, r13 ; call 0xffffff80007b4a68
0xffffff800069676f : in eax, dx ; je 0xffffff80006967ac ; mov rdi, r13 ; call 0xffffff8000392a48
0xffffff80008db04f : in eax, dx ; jg 0xffffff80008db002 ; push rsi ; ret
0xffffff8000686ccd : in eax, dx ; jmp 0xffffff8000686d96
0xffffff80008b7f92 : in eax, dx ; jmp 0xffffff80008b7fb8
0xffffff80008b8112 : in eax, dx ; jmp 0xffffff80008b8152
0xffffff80008b8362 : in eax, dx ; jmp 0xffffff80008b83a2
0xffffff80008b8422 : in eax, dx ; jmp 0xffffff80008b8470
0xffffff80008bf552 : in eax, dx ; jmp 0xffffff80008bf578
0xffffff80008bf602 : in eax, dx ; jmp 0xffffff80008bf650
0xffffff80008cd432 : in eax, dx ; jmp 0xffffff80008cd4f2
0xffffff8000545f0d : in eax, dx ; jmp rax
0xffffff8000476c74 : in eax, dx ; jne 0xffffff8000476c87 ; mov rdi, r14 ; call 0xffffff8000422eb8
0xffffff800060599d : in eax, dx ; jne 0xffffff8000605994 ; jmp 0xffffff8000605968
0xffffff80005c102f : in eax, dx ; js 0xffffff80005c1009 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005697fe : in eax, dx ; loop 0xffffff8000569804 ; pop rbp ; ret
0xffffff80003741af : in eax, dx ; mov dl, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff80005512db : in eax, dx ; mov dl, al ; jmp 0xffffff80005512ed
0xffffff80004ab072 : in eax, dx ; mov rsi, rax ; sub eax, esi ; pop rbp ; ret
0xffffff800039a792 : in eax, dx ; mov rsp, rsi ; call rdi
0xffffff80002931df : in eax, dx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000451f02 : in eax, dx ; movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff80005f041f : in eax, dx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004bb1af : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005e47c2 : in eax, dx ; pop rbp ; ret
0xffffff8000671b4f : in eax, dx ; pop rdi ; ret 0x4cff
0xffffff80004b9e5a : in eax, dx ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800028fbe8 : in eax, dx ; ret
0xffffff80007636ca : in eax, dx ; ret 0x41ff
0xffffff80005f0cff : in eax, dx ; ret 0x43
0xffffff800076f94f : in eax, dx ; ret 0x49ff
0xffffff80006a6193 : in eax, dx ; ret 0x4cff
0xffffff80006a6157 : in eax, dx ; ret 0xebff
0xffffff80008a7177 : in eax, dx ; std ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ef3f7 : in eax, dx ; test byte ptr [rax + rax], ah ; test rax, rax ; je 0xffffff80008ef40b ; call rax
0xffffff8000663dc9 : in eax, dx ; xchg eax, ecx ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff800088266f : in eax, dx ; xchg eax, edx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800079b3d3 : in eax, dx ; xor eax, 0x83480034 ; ret
0xffffff800066d8cc : in eax, dx ; xor esi, esi ; mov rdi, rdx ; call 0xffffff8000529b78
0xffffff8000388d96 : inc byte ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x5d], dh ; pop rbp ; ret
0xffffff80003b2397 : inc byte ptr [rax] ; add bh, bh ; add byte ptr [rdi], cl ; ret 0xf41
0xffffff8000388c9f : inc byte ptr [rax] ; mov edx, edi ; movzx eax, dx ; pop rbx ; pop rbp ; ret
0xffffff80008d2a7a : inc byte ptr [rax] ; mov rax, rdi ; pop rbp ; ret
0xffffff80007c742e : inc byte ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x8548
0xffffff80005327c8 : inc byte ptr [rax] ; ret 0xbeb
0xffffff800088566e : inc byte ptr [rax] ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80002b7b39 : inc byte ptr [rax] ; test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff8000b40a06 : inc byte ptr [rbp + rcx*4 - 0x4e] ; ret
0xffffff8000428184 : inc byte ptr [rbp - 0x77] ; loope 0xffffff8000428176 ; ret
0xffffff800046177f : inc byte ptr [rbx + 0x470f02fa] ; ret
0xffffff80007aa2c8 : inc byte ptr [rbx - 0x187cdf32] ; fcomip st(7) ; ret 0
0xffffff80007455fe : inc byte ptr [rbx - 0x6bf08001] ; ret
0xffffff800041b419 : inc byte ptr [rbx - 0x7cb71f40] ; ret 0x8304
0xffffff80006658b3 : inc byte ptr [rbx] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000448a3b : inc byte ptr [rbx] ; jg 0xffffff8000448a4a ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff800065f1f9 : inc byte ptr [rcx + rcx*4 - 0x1e] ; call 0xffffff800028e1b7
0xffffff80008fb9b8 : inc byte ptr [rcx + rcx*4 - 0x1f] ; call rbx
0xffffff8000658397 : inc byte ptr [rcx + rcx*4 - 0xe] ; call r8
0xffffff80008ee15d : inc byte ptr [rcx + rcx*4 - 0xe] ; call rcx
0xffffff80008b91f6 : inc byte ptr [rcx - 0x41] ; ret 2
0xffffff80008ba499 : inc byte ptr [rcx - 0x43] ; ret 2
0xffffff80008b04b6 : inc byte ptr [rcx - 0x44] ; ret 2
0xffffff8000451f22 : inc byte ptr [rcx - 0x73] ; add dword ptr [r9 - 0x7d], r8d ; call qword ptr [rax]
0xffffff80009091f4 : inc byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x58bd445], ecx ; ret
0xffffff80004e4d69 : inc byte ptr [rcx - 0x75] ; pop rsi ; jo 0xffffff80004e4d6b ; ret
0xffffff800039192f : inc byte ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff800029b0a6 : inc byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000532781 : inc byte ptr [rcx - 1] ; xchg eax, esi ; push -0x76fffffd ; ret
0xffffff800078c9fa : inc byte ptr [rcx] ; ja 0xffffff800078ca09 ; mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff8000272fef : inc byte ptr [rdi + rcx] ; xchg eax, ebp ; ret 0xb60f
0xffffff8000584f4d : inc byte ptr [rdx] ; je 0xffffff8000584f93 ; pop rbp ; ret
0xffffff80004489f0 : inc byte ptr [rdx] ; jg 0xffffff80004489ff ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff800052881d : inc byte ptr [rip - 0xb7f281] ; ret 0xb60f
0xffffff80003b5cf5 : inc cl ; mov byte ptr [rip + 0x731ffb], cl ; pop rbp ; ret
0xffffff80003933e1 : inc dword ptr [0x18] ; ret
0xffffff80003be307 : inc dword ptr [ebx*4 + 0x22c] ; jmp rdx
0xffffff80002759f7 : inc dword ptr [r13 - 0x77] ; ret 0x2941
0xffffff800073d5be : inc dword ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800073d625 : inc dword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff80003a2fea : inc dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff800059f762 : inc dword ptr [rax + 0x54] ; pop rbp ; ret
0xffffff800066877d : inc dword ptr [rax + 0x70] ; mov rdi, r12 ; call 0xffffff80007b4a68
0xffffff8000668821 : inc dword ptr [rax + 0x70] ; mov rdi, rbx ; call 0xffffff80007b4a68
0xffffff80007972af : inc dword ptr [rax + 0x74001000] ; sub al, 0x81 ; call qword ptr [rax]
0xffffff8000663e18 : inc dword ptr [rax + 0x74001000] ; xor dword ptr [rcx - 0x7f], eax ; call qword ptr [rax]
0xffffff80006d7a2a : inc dword ptr [rax + 8] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004838bd : inc dword ptr [rax + rax*8 - 0xb7bf8c] ; ret
0xffffff800048f09d : inc dword ptr [rax + rax*8 - 0xb7e98c] ; ret
0xffffff800048e07c : inc dword ptr [rax + rax*8 - 0xb7f18c] ; ret
0xffffff80004402e4 : inc dword ptr [rax + rbx] ; shl byte ptr [rax], cl ; ret 0x8545
0xffffff800085923c : inc dword ptr [rax + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b2a69 : inc dword ptr [rax - 0x1be73] ; call qword ptr [rax]
0xffffff80004b2cc5 : inc dword ptr [rax - 0x1be73] ; jmp qword ptr [rax]
0xffffff80004af7bb : inc dword ptr [rax - 0x2a273] ; call qword ptr [rax]
0xffffff80004af89c : inc dword ptr [rax - 0x2a273] ; jmp qword ptr [rax]
0xffffff80004af5f6 : inc dword ptr [rax - 0x2a373] ; jmp qword ptr [rax]
0xffffff80004aee8c : inc dword ptr [rax - 0x2ac73] ; call qword ptr [rax]
0xffffff80004ae6c1 : inc dword ptr [rax - 0x2ad73] ; call qword ptr [rax]
0xffffff80004ae795 : inc dword ptr [rax - 0x2ad73] ; jmp qword ptr [rax]
0xffffff80004ade63 : inc dword ptr [rax - 0x2ae73] ; call qword ptr [rax]
0xffffff80004adf7a : inc dword ptr [rax - 0x2ae73] ; jmp qword ptr [rax]
0xffffff80004ad843 : inc dword ptr [rax - 0x2af73] ; call qword ptr [rax]
0xffffff80004ad924 : inc dword ptr [rax - 0x2af73] ; jmp qword ptr [rax]
0xffffff80007fa772 : inc dword ptr [rax - 0x35673] ; jmp qword ptr [rax]
0xffffff80004b1a6d : inc dword ptr [rax - 0x51b73] ; call qword ptr [rax]
0xffffff80004b1ad7 : inc dword ptr [rax - 0x51b73] ; jmp qword ptr [rax]
0xffffff80004b166b : inc dword ptr [rax - 0x51d73] ; jmp qword ptr [rax]
0xffffff80004b0fa7 : inc dword ptr [rax - 0x51e73] ; call qword ptr [rax]
0xffffff80004b107f : inc dword ptr [rax - 0x51e73] ; jmp qword ptr [rax]
0xffffff800042a7dc : inc dword ptr [rax - 0x68673] ; jmp qword ptr [rax]
0xffffff8000455a65 : inc dword ptr [rax - 0x9000000] ; ret
0xffffff8000669b23 : inc dword ptr [rax - 1] ; jmp qword ptr [rsi - 0x20]
0xffffff8000455a9b : inc dword ptr [rax] ; add al, byte ptr [rax] ; add bh, dh ; ret
0xffffff8000626202 : inc dword ptr [rax] ; add bl, dl ; loop 0xffffff8000626247 ; ret 0x1073
0xffffff800062eb54 : inc dword ptr [rax] ; add bl, dl ; loopne 0xffffff800062eb99 ; ret 0x420f
0xffffff8000319b42 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret 0xb60f
0xffffff8000322b6f : inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x4f74
0xffffff8000322ae7 : inc dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0xffffff800028eb24 : inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004819b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000607636 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000292007 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000b411f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8948
0xffffff800048e237 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; call qword ptr [rsi]
0xffffff8000577f96 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80008e0c44 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800069a646 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xffffff800069a657 ; xor eax, eax ; pop rbp ; ret
0xffffff800071d3f9 : inc dword ptr [rax] ; add byte ptr [rax], al ; jne 0xffffff800071d40a ; xor eax, eax ; pop rbp ; ret
0xffffff800050cfb9 : inc dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80006c942c : inc dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff80005219a3 : inc dword ptr [rax] ; add byte ptr [rcx], ah ; ret 0xf44
0xffffff80008b1732 : inc dword ptr [rax] ; add byte ptr [rcx], ch ; enter -0x48f1, -0x40 ; pop rbp ; ret
0xffffff800059bcd6 : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0x9103
0xffffff80003006e8 : inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800033e68e : inc dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc109
0xffffff80002fa8a1 : inc dword ptr [rax] ; add byte ptr [rsi + 4], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80002bb887 : inc dword ptr [rax] ; add cl, al ; call 0xffffff7fc1ee419b
0xffffff8000455a80 : inc dword ptr [rax] ; add dword ptr [rax], eax ; add bh, dh ; ret
0xffffff80006d7f34 : inc dword ptr [rax] ; fadd dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000572f7f : inc dword ptr [rax] ; in eax, 0xff ; jmp qword ptr [rax - 0x1b]
0xffffff80002c6d32 : inc dword ptr [rax] ; inc dword ptr [rbx - 0x68f0fa07] ; ret 0xf44
0xffffff80008365df : inc dword ptr [rax] ; je 0xffffff80008365ee ; xor eax, eax ; pop rbp ; ret
0xffffff800029b6c4 : inc dword ptr [rax] ; jmp qword ptr [rbx]
0xffffff8000491cc3 : inc dword ptr [rax] ; loope 0xffffff8000491cca ; jmp rbx
0xffffff800049e498 : inc dword ptr [rax] ; mov eax, edi ; pop rbp ; ret
0xffffff80007ab72f : inc dword ptr [rax] ; mov esi, 0x200 ; call rax
0xffffff80007ab873 : inc dword ptr [rax] ; mov esi, 0x200 ; call rcx
0xffffff80007aac3b : inc dword ptr [rax] ; mov esi, 0x400 ; call rax
0xffffff80007fef5c : inc dword ptr [rax] ; or edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff80002b7b19 : inc dword ptr [rax] ; test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff80002bacb6 : inc dword ptr [rax] ; xor eax, eax ; and ecx, 7 ; cmovne eax, edx ; pop rbp ; ret
0xffffff80007aae40 : inc dword ptr [rax] ; xor ebx, ebx ; xor esi, esi ; call rax
0xffffff80007ab078 : inc dword ptr [rax] ; xor esi, esi ; call rax
0xffffff80007ab530 : inc dword ptr [rax] ; xor esi, esi ; call rcx
0xffffff80007ab8f3 : inc dword ptr [rax] ; xor esi, esi ; mov edi, ebx ; call rax
0xffffff80007aaf0e : inc dword ptr [rax] ; xor esi, esi ; mov edi, r12d ; call rax
0xffffff80007ac51f : inc dword ptr [rax] ; xor esi, esi ; mov edi, r13d ; call rax
0xffffff80007ab1f0 : inc dword ptr [rax] ; xor esi, esi ; mov edi, r14d ; call rcx
0xffffff80007acb1e : inc dword ptr [rax] ; xor esi, esi ; mov r15, rdx ; call rax
0xffffff80002fc078 : inc dword ptr [rbp + 0x29] ; ret
0xffffff80003d610e : inc dword ptr [rbp + 0x31] ; div dh ; ret
0xffffff8000866a86 : inc dword ptr [rbp + 0x31] ; imul cl ; ret 0
0xffffff80003a4abc : inc dword ptr [rbp + 0x31] ; in al, 0xf6 ; ret
0xffffff80003e5e13 : inc dword ptr [rbp + 0x31] ; in al, 0xff ; ret
0xffffff80005512d8 : inc dword ptr [rbp + 0x31] ; in eax, dx ; mov dl, al ; jmp 0xffffff80005512f0
0xffffff80002cec29 : inc dword ptr [rbp + 0x31] ; push rsi ; ret
0xffffff80003d547c : inc dword ptr [rbp + 0x31] ; push rsi ; ret 0xf20
0xffffff800071ebca : inc dword ptr [rbp + 0x39] ; ret 0x870f
0xffffff80008efdd4 : inc dword ptr [rbp + 0x39] ; ret 0x8d4d
0xffffff80006763be : inc dword ptr [rbp + 0x558b48c0] ; or byte ptr [rdi], 0x85 ; ret 0
0xffffff8000397187 : inc dword ptr [rbp + 0x5b0574c0] ; pop r14 ; pop rbp ; ret
0xffffff800036636b : inc dword ptr [rbp + 0x5d0275c0] ; ret
0xffffff800054f008 : inc dword ptr [rbp + 0x5d1174c0] ; ret
0xffffff8000599a3a : inc dword ptr [rbp + 0x7e1178c0] ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff80006a08b4 : inc dword ptr [rbp + 0xf] ; mov dh, 0xaf ; ret
0xffffff8000b40769 : inc dword ptr [rbp + rcx*4 - 0x50] ; adc ecx, dword ptr [rsi] ; ret 0x441d
0xffffff800035242a : inc dword ptr [rbp - 0x141e8b40] ; ret
0xffffff8000441130 : inc dword ptr [rbp - 0x3d6bf040] ; jmp 0xffffff8000441160
0xffffff800083925e : inc dword ptr [rbp - 0x73] ; jl 0xffffff800083926f ; add dword ptr [rax - 0x7f], ecx ; ret
0xffffff80004438fc : inc dword ptr [rbp - 0x75] ; push rbx ; or byte ptr [rcx + 0x39], al ; ret 0x1575
0xffffff80003b711e : inc dword ptr [rbp - 0x76868b40] ; ret
0xffffff80006e0d26 : inc dword ptr [rbp - 0x76d78b40] ; ret
0xffffff8000257f1a : inc dword ptr [rbp - 0x76e08b40] ; ret 0xe283
0xffffff8000711453 : inc dword ptr [rbp - 0x76f28b40] ; ret 0xb58b
0xffffff80006ff4b2 : inc dword ptr [rbp - 0x76f88b40] ; ret
0xffffff8000703e91 : inc dword ptr [rbp - 0x77] ; jmp 0xffffff7fe032c587
0xffffff80003c451b : inc dword ptr [rbp - 0x77] ; ret
0xffffff80002759f8 : inc dword ptr [rbp - 0x77] ; ret 0x2941
0xffffff800070ccca : inc dword ptr [rbp - 0x77] ; ret 0x8941
0xffffff800044f0c0 : inc dword ptr [rbp - 0x7af18b40] ; ror byte ptr [rdi], 0x95 ; ret 0x8d49
0xffffff800052ee4f : inc dword ptr [rbp - 0x7b] ; div byte ptr [rax + rdi - 0x78] ; pop rbp ; ret
0xffffff8000476c30 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret
0xffffff80003b7a76 : inc dword ptr [rbp - 0x7b] ; sal byte ptr [rcx + rbp + 0x44], 0x89 ; ret 0x8d48
0xffffff80007e3fcf : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0
0xffffff8000322dc4 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0xffffff800081a1a3 : inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x95 ; ret
0xffffff80008c2fc3 : inc dword ptr [rbx + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004cb90e : inc dword ptr [rbx + 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005e03d0 : inc dword ptr [rbx + 0x14] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000858943 : inc dword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800088e5a2 : inc dword ptr [rbx + 0x28] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800088d92f : inc dword ptr [rbx + 0x30] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002cd4a1 : inc dword ptr [rbx + 0x35] ; ret
0xffffff80002b0fdd : inc dword ptr [rbx + 0x440f30f8] ; ret
0xffffff800071dea1 : inc dword ptr [rbx + 0x60] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800026498a : inc dword ptr [rbx + 0x634805f8] ; ret 0xb9
0xffffff8000669033 : inc dword ptr [rbx + 0x6348fec2] ; ret 0x8948
0xffffff8000813db6 : inc dword ptr [rbx + 0xc] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072f0a7 : inc dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800079c512 : inc dword ptr [rbx + rbx*8 - 0x49f0d68c] ; ret
0xffffff8000764756 : inc dword ptr [rbx + rcx*4 + 0x3d] ; ret 0x3cb6
0xffffff80002a120e : inc dword ptr [rbx + rcx*4 + 0x3d] ; ret 0x84b3
0xffffff80003b40ec : inc dword ptr [rbx + rcx*4 + 0x5d] ; mov word ptr [rcx + 1], es ; ret
0xffffff8000611013 : inc dword ptr [rbx + rdi*8 - 1] ; jmp qword ptr [rax]
0xffffff80003d3d27 : inc dword ptr [rbx + rsi*2] ; add al, 0x89 ; clc ; pop rbp ; ret
0xffffff80004c0ec8 : inc dword ptr [rbx - 0x10743] ; call qword ptr [rax]
0xffffff8000669860 : inc dword ptr [rbx - 0x11f43] ; call qword ptr [rbx]
0xffffff80003e56c7 : inc dword ptr [rbx - 0x1e3efe1f] ; adc bh, dh ; ret 0
0xffffff80004559a9 : inc dword ptr [rbx - 0x35b73] ; jmp qword ptr [rax]
0xffffff80003a9e9e : inc dword ptr [rbx - 0x35c6fd3e] ; jb 0xffffff80003a9e89 ; pop rbp ; ret
0xffffff8000271d19 : inc dword ptr [rbx - 0x38b70005] ; ret 0xffff
0xffffff8000b4a61b : inc dword ptr [rbx - 0x3af4b] ; call qword ptr [rsi]
0xffffff800073811a : inc dword ptr [rbx - 0x4699f907] ; ret
0xffffff80002c6d34 : inc dword ptr [rbx - 0x68f0fa07] ; ret 0xf44
0xffffff8000572407 : inc dword ptr [rbx - 0x68f0fb08] ; ret
0xffffff80005723e7 : inc dword ptr [rbx - 0x68f0fc08] ; ret
0xffffff8000572987 : inc dword ptr [rbx - 0x68f0fe02] ; ret 0x8d44
0xffffff8000304238 : inc dword ptr [rbx - 0x6af0fc08] ; ret
0xffffff80008399ed : inc dword ptr [rbx - 0x6bf00008] ; ret 0x3944
0xffffff8000533594 : inc dword ptr [rbx - 0x6bf0fd07] ; ret
0xffffff80006f1b70 : inc dword ptr [rbx - 0x6bf0fe07] ; ret
0xffffff800044135a : inc dword ptr [rbx - 0x6df0fb01] ; ret
0xffffff8000491b57 : inc dword ptr [rbx - 0x6e00003d] ; ret
0xffffff800045b9c7 : inc dword ptr [rbx - 0x70f0e008] ; ret
0xffffff800047ff19 : inc dword ptr [rbx - 0x70f0fe05] ; ret
0xffffff800084eeb9 : inc dword ptr [rbx - 0x76b2ce07] ; ret 0x894c
0xffffff8000577cd0 : inc dword ptr [rbx - 0x78f0e805] ; ret 1
0xffffff80002dcbf7 : inc dword ptr [rbx - 0x7bf0b808] ; ret 0
0xffffff8000543d28 : inc dword ptr [rbx - 0x7bf0fe05] ; ret 0
0xffffff80002b7c5f : inc dword ptr [rbx - 0x7cf0f907] ; ret 2
0xffffff800048766e : inc dword ptr [rbx - 0x7cf0fd07] ; ret 0xffe6
0xffffff800066765c : inc dword ptr [rbx - 0x7df0fd07] ; ret 0xc
0xffffff80007736a9 : inc dword ptr [rbx - 0x9b5b] ; call qword ptr [rax]
0xffffff80007a90ba : inc dword ptr [rbx - 0xb35b] ; call qword ptr [rax]
0xffffff800061dac0 : inc dword ptr [rbx - 0xf35b] ; call qword ptr [rax]
0xffffff80003be308 : inc dword ptr [rbx*4 + 0x22c] ; jmp rdx
0xffffff80007cccbc : inc dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007e57a7 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret
0xffffff80004bd174 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0xffffff80004989fe : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80006658db : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000273d9a : inc dword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b4274b : inc dword ptr [rbx] ; idiv bh ; jmp qword ptr [rax]
0xffffff800038af62 : inc dword ptr [rbx] ; je 0xffffff800038af6f ; xor eax, eax ; pop rbp ; ret
0xffffff800038afd2 : inc dword ptr [rbx] ; je 0xffffff800038afdf ; xor eax, eax ; pop rbp ; ret
0xffffff8000831ce8 : inc dword ptr [rbx] ; mov edi, ecx ; ja 0xffffff8000831ce7 ; pop rbp ; ret
0xffffff80007636c2 : inc dword ptr [rbx] ; mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e9
0xffffff800076410f : inc dword ptr [rbx] ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff8000276653 : inc dword ptr [rcx + 0x100f9] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc189
0xffffff80003126c6 : inc dword ptr [rcx + 0x20] ; ret
0xffffff80006dfec4 : inc dword ptr [rcx + 0x28ff907d] ; jmp qword ptr [rsi]
0xffffff80002eb089 : inc dword ptr [rcx + 0x29] ; fisttp qword ptr [rax + 0x63] ; ret
0xffffff8000b49e2f : inc dword ptr [rcx + 0x29] ; ret 0xf083
0xffffff8000849898 : inc dword ptr [rcx + 0x39] ; ret
0xffffff8000843183 : inc dword ptr [rcx + 0x5affb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x9d8b
0xffffff80005e0d3f : inc dword ptr [rcx + 0xf] ; mov dh, 0x86 ; ret
0xffffff80006a8284 : inc dword ptr [rcx + 0xf] ; mov dh, 0x8e ; ret
0xffffff80005e1145 : inc dword ptr [rcx + 0xf] ; mov dh, 0x95 ; ret
0xffffff800066aa2c : inc dword ptr [rcx + 0xf] ; mov dh, 0x96 ; ret
0xffffff80006a0926 : inc dword ptr [rcx + 0xf] ; mov dh, 0x97 ; ret
0xffffff80005656b5 : inc dword ptr [rcx + 0xf] ; mov dh, 0xc6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800033e68a : inc dword ptr [rcx + 0xffffe1] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc109
0xffffff800083be4f : inc dword ptr [rcx + 1] ; ret 0x840f
0xffffff800029e052 : inc dword ptr [rcx + 1] ; ret 0x854d
0xffffff80006dab15 : inc dword ptr [rcx + 8] ; xor eax, eax ; pop rbp ; ret
0xffffff80002c3daf : inc dword ptr [rcx + 9] ; ret 0x8d48
0xffffff80006dab97 : inc dword ptr [rcx + rax*4 + 8] ; xor eax, eax ; pop rbp ; ret
0xffffff800054ffb5 : inc dword ptr [rcx + rcx*4 + 0x73] ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002b59d2 : inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077575e : inc dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff80003998c7
0xffffff80008ef041 : inc dword ptr [rcx + rcx*4 - 0x1a] ; mov rdx, r14 ; call rcx
0xffffff800065b336 : inc dword ptr [rcx + rcx*4 - 0x1e] ; call rax
0xffffff800080d10a : inc dword ptr [rcx + rcx*4 - 0x38] ; pop rbp ; ret
0xffffff80008ee32a : inc dword ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff800074f389 : inc dword ptr [rcx + rcx*4 - 0xe] ; call rax
0xffffff800089e13a : inc dword ptr [rcx - 0x41] ; ret 2
0xffffff80008b9120 : inc dword ptr [rcx - 0x42] ; ret 2
0xffffff80008906a3 : inc dword ptr [rcx - 0x43] ; ret 2
0xffffff8000866d30 : inc dword ptr [rcx - 0x44] ; ret 2
0xffffff80008df0c0 : inc dword ptr [rcx - 0x49] ; add edi, esi ; ret
0xffffff8000464609 : inc dword ptr [rcx - 0x75] ; adc byte ptr [r8 - 1], r9b ; ret
0xffffff80004e2de9 : inc dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call 0xffffff800075f017
0xffffff800034bfdb : inc dword ptr [rcx - 0x75] ; cmp al, 0xe9 ; ret 1
0xffffff80003ec849 : inc dword ptr [rcx - 0x75] ; lahf ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80004ad54d : inc dword ptr [rcx - 0x75] ; or al, byte ptr [rax - 0x2ac73] ; jmp qword ptr [rax]
0xffffff800033ebd5 : inc dword ptr [rcx - 0x75] ; or byte ptr [rax - 0x7f], cl ; ret
0xffffff80003f6bc7 : inc dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0xffffff80003fb3e9 : inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff80003e78b8 : inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80004c6d2c : inc dword ptr [rcx - 0x75] ; popfq ; nop ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff8000506eaf : inc dword ptr [rcx - 0x75] ; push rsi ; add al, 0xff ; ret 0x8941
0xffffff80003eab4e : inc dword ptr [rcx - 0x75] ; sahf ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80008ef955 : inc dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 1], r9b ; ret
0xffffff80002fe359 : inc dword ptr [rcx - 0x75] ; sub al, 0x39 ; ret
0xffffff800074e0ef : inc dword ptr [rcx - 0x75] ; xchg eax, edi ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff80003402ad : inc dword ptr [rcx - 0x77] ; cmp al, 0xf6 ; ret 0x7402
0xffffff800064e7ab : inc dword ptr [rcx - 0x77] ; fsubr st(0) ; in al, dx ; cld ; ret
0xffffff800064f8e0 : inc dword ptr [rcx - 0x77] ; fsubr st(0) ; mov bh, 0xeb ; ret
0xffffff8000798f97 : inc dword ptr [rcx - 0x77] ; fucomp st(1) ; ret
0xffffff8000311be3 : inc dword ptr [rcx - 0x77] ; ret
0xffffff80005fa3d1 : inc dword ptr [rcx - 0x77] ; ret 0x3eb
0xffffff800083a4c3 : inc dword ptr [rcx - 0x77] ; ret 0x4e9
0xffffff8000356235 : inc dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff800083af74 : inc dword ptr [rcx - 0x77] ; ret 0x894c
0xffffff80004f692b : inc dword ptr [rcx - 0x77] ; ret 0x894d
0xffffff800083ac1e : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0xffffff80007f0ed4 : inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0xffffff800027c5ab : inc dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; ret 0xc8ff
0xffffff80002de893 : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80007b0c6c : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rbx]
0xffffff80003d0769 : inc dword ptr [rcx - 0x7d] ; ret 0x4107
0xffffff8000455a48 : inc dword ptr [rcx - 0x7d] ; stc ; add al, 0x7c ; jge 0xffffff8000455a4f ; ret
0xffffff80005fc237 : inc dword ptr [rcx - 0x7d] ; sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2044
0xffffff800047c070 : inc dword ptr [rcx - 0x7f] ; call qword ptr [rbx]
0xffffff8000279462 : inc dword ptr [rcx - 0x7f] ; out 0xff, al ; jmp rax
0xffffff800085023e : inc dword ptr [rcx - 0x80] ; and al, 0x2e ; add dword ptr [rax - 0x7f], ecx ; ret
0xffffff800077377f : inc dword ptr [rcx - 0x80] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff800077532a : inc dword ptr [rcx - 0x80] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff800083c001 : inc dword ptr [rcx - 0xa] ; ret 0x7403
0xffffff800083aa4d : inc dword ptr [rcx - 1] ; ret
0xffffff8000256670 : inc dword ptr [rcx - 1] ; ret 0x4e8a
0xffffff800029e033 : inc dword ptr [rcx - 1] ; ret 0x8b4c
0xffffff800029e2bf : inc dword ptr [rcx - 1] ; ret 0xbe0f
0xffffff800029e173 : inc dword ptr [rcx - 1] ; ret 0xf41
0xffffff80007e27be : inc dword ptr [rcx - 1] ; ret 0xff48
0xffffff800031f8fb : inc dword ptr [rcx - 9] ; ret
0xffffff80008113a4 : inc dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004aac9a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret
0xffffff8000313078 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80003c1e9b : inc dword ptr [rcx] ; add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff8000797175 : inc dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, ecx ; pop rbp ; ret
0xffffff80002c6d7e : inc dword ptr [rcx] ; inc dword ptr [rbx - 0x68f0fa07] ; ret 0xf44
0xffffff80002b7c5d : inc dword ptr [rcx] ; inc dword ptr [rbx - 0x7cf0f907] ; ret 2
0xffffff8000831f72 : inc dword ptr [rcx] ; jne 0xffffff8000831f85 ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff8000755f0e : inc dword ptr [rcx] ; mov rsi, rax ; jg 0xffffff8000755ee8 ; pop rbp ; ret
0xffffff80003a2fcd : inc dword ptr [rcx] ; pop rbp ; ret
0xffffff80002db61e : inc dword ptr [rcx] ; ret
0xffffff80005b523c : inc dword ptr [rcx] ; ret 0x1189
0xffffff800033e6a3 : inc dword ptr [rcx] ; ret 0x8948
0xffffff80005be1ac : inc dword ptr [rcx] ; ret 0x894c
0xffffff80005d1653 : inc dword ptr [rcx] ; ret 0x8b41
0xffffff80007bf666 : inc dword ptr [rcx] ; ret 0x8b4c
0xffffff800060c765 : inc dword ptr [rcx] ; ret 0xbd83
0xffffff80005962a2 : inc dword ptr [rcx] ; ret 0xd089
0xffffff80006531c6 : inc dword ptr [rcx] ; sbb eax, eax ; or eax, 0x10 ; pop rbp ; ret
0xffffff80006536b6 : inc dword ptr [rcx] ; sbb eax, eax ; or eax, 0x18 ; pop rbp ; ret
0xffffff8000653be6 : inc dword ptr [rcx] ; sbb eax, eax ; or eax, 0x20 ; pop rbp ; ret
0xffffff8000652366 : inc dword ptr [rcx] ; sbb eax, eax ; pop rbp ; ret
0xffffff800058ae41 : inc dword ptr [rcx] ; sete al ; movzx edx, al ; inc edx ; jmp 0xffffff800058ae63
0xffffff8000298c4f : inc dword ptr [rdi + 0x10] ; xor eax, eax ; pop rbp ; ret
0xffffff8000889e2d : inc dword ptr [rdi + 0x18] ; xor eax, eax ; pop rbp ; ret
0xffffff800073d597 : inc dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800040c7c4 : inc dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800053235d : inc dword ptr [rdi + 0x472] ; pop rbp ; ret
0xffffff8000875f84 : inc dword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff80004cb1a5 : inc dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff80002a8047 : inc dword ptr [rdi + 0xad4] ; pop rbp ; ret
0xffffff800059cd59 : inc dword ptr [rdi + 0xc8] ; pop rbp ; ret
0xffffff800059cd66 : inc dword ptr [rdi + 0xcc] ; pop rbp ; ret
0xffffff8000316573 : inc dword ptr [rdi + 0xec] ; call 0xffffff8000392798
0xffffff8000512e54 : inc dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff80006dac03 : inc dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff80008ec186 : inc dword ptr [rdi + rcx + 0x44] ; ret 0x8d48
0xffffff80006dac34 : inc dword ptr [rdi + rcx*4 + 8] ; pop rbp ; ret
0xffffff800027282a : inc dword ptr [rdi + rcx] ; xchg eax, ebp ; ret
0xffffff8000284ba0 : inc dword ptr [rdi + rcx] ; xchg eax, ebp ; ret 0xb60f
0xffffff800044135c : inc dword ptr [rdi + rcx] ; xchg eax, edx ; ret
0xffffff80003d33e5 : inc dword ptr [rdi + rcx] ; xchg eax, edx ; ret 0xc085
0xffffff80006cd593 : inc dword ptr [rdi + rdi*8 - 1] ; call rdi
0xffffff8000669b4b : inc dword ptr [rdi - 0x7800000a] ; idiv bh ; jmp qword ptr [rdx]
0xffffff80006a043b : inc dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; mov dh, 0xaf ; ret
0xffffff800069fd65 : inc dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x9f ; ret
0xffffff80002fc1ec : inc dword ptr [rdi] ; add byte ptr [rcx], cl ; ret
0xffffff80004956a5 : inc dword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff800062b877 : inc dword ptr [rdi] ; idiv bh ; jmp qword ptr [rcx]
0xffffff80004953c5 : inc dword ptr [rdi] ; pop rbp ; ret
0xffffff8000593583 : inc dword ptr [rdi] ; sar bh, cl ; call qword ptr [rdx + rdx*8]
0xffffff80007a0a3a : inc dword ptr [rdx + 0xc] ; xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80003c9d16 : inc dword ptr [rdx + rsi*2] ; adc dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff80003a48a2 : inc dword ptr [rdx - 0xffd8] ; leave ; ret
0xffffff80008802b5 : inc dword ptr [rdx] ; pop rbp ; ret
0xffffff800084d088 : inc dword ptr [rdx] ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80007f4b84 : inc dword ptr [rdx] ; xor eax, eax ; pop rbp ; ret
0xffffff80007ce567 : inc dword ptr [rip + 0x366107] ; pop rbp ; ret
0xffffff8000764cdd : inc dword ptr [rip + 0x3cb14d] ; pop rbp ; ret
0xffffff80006306e0 : inc dword ptr [rip + 0x43fbda] ; pop rbp ; ret
0xffffff8000630275 : inc dword ptr [rip + 0x440045] ; xor eax, eax ; pop rbp ; ret
0xffffff800062ee4a : inc dword ptr [rip + 0x441260] ; pop rbp ; ret
0xffffff800062e58b : inc dword ptr [rip + 0x441aaf] ; pop rbp ; ret
0xffffff800062e255 : inc dword ptr [rip + 0x441de5] ; xor eax, eax ; pop rbp ; ret
0xffffff8000550665 : inc dword ptr [rip + 0x5d11fd] ; pop rbp ; ret
0xffffff8000550655 : inc dword ptr [rip + 0x5d1209] ; pop rbp ; ret
0xffffff800055063c : inc dword ptr [rip + 0x5d1226] ; pop rbp ; ret
0xffffff800059326c : inc dword ptr [rip + 0x5ff4800] ; ret 0x58e8
0xffffff800029eada : inc dword ptr [rip + 0x78d548] ; pop rbp ; ret
0xffffff800028e55a : inc dword ptr [rip + 0x79dac8] ; pop rbp ; ret
0xffffff800031f171 : inc dword ptr [rip + 0x7da6b1] ; pop rbp ; ret
0xffffff80002ff9f2 : inc dword ptr [rip + 0x7f8120] ; pop rbp ; ret
0xffffff80002ff9d5 : inc dword ptr [rip + 0x7f8141] ; xor eax, eax ; pop rbp ; ret
0xffffff80002ea93c : inc dword ptr [rip + 0x8066d6] ; pop rbp ; ret
0xffffff800028f9b3 : inc dword ptr [rip + 0x85bba7] ; pop rbp ; ret
0xffffff800028f967 : inc dword ptr [rip + 0x85bbd3] ; pop rbp ; ret
0xffffff800084d065 : inc dword ptr [rip + 0xfc0940f] ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800073c057 : inc dword ptr [rip - 0xb7ea8e] ; ret
0xffffff80007cead9 : inc dword ptr [rsi + 0x10] ; je 0xffffff80007ceaec ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000781727 : inc dword ptr [rsi + 0x14] ; xor eax, eax ; pop rbp ; ret
0xffffff8000875513 : inc dword ptr [rsi + 0x38] ; mov al, 1 ; pop rbp ; ret
0xffffff8000880833 : inc dword ptr [rsi + 0x3c] ; mov al, 1 ; pop rbp ; ret
0xffffff80003e7936 : inc dword ptr [rsi + 0x98] ; pop rbp ; ret
0xffffff8000b4b4b3 : inc dword ptr [rsi] ; js 0xffffff8000b4b4ba ; jmp rax
0xffffff80002777dd : inc dword ptr [rsi] ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029ed2b : inc dword ptr [rsi] ; pop rbp ; ret
0xffffff80008365de : inc dword ptr ds:[rax] ; je 0xffffff80008365ef ; xor eax, eax ; pop rbp ; ret
0xffffff80003933e0 : inc dword ptr gs:[0x18] ; ret
0xffffff80003be306 : inc dword ptr gs:[ebx*4 + 0x22c] ; jmp rdx
0xffffff80006d7bc7 : inc dx ; jne 0xffffff80006d7b88 ; xor eax, eax ; pop rbp ; ret
0xffffff800066e930 : inc eax ; add dl, dl ; jns 0xffffff800066e937 ; pop rbp ; ret
0xffffff8000584f7e : inc eax ; bswap eax ; mov dword ptr [rdi + 4], eax ; pop rbp ; ret
0xffffff8000584f64 : inc eax ; bswap eax ; mov dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff8000584f92 : inc eax ; bswap eax ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80007ad448 : inc eax ; cmp rax, rcx ; jl 0xffffff80007ad448 ; pop rbp ; ret
0xffffff8000747108 : inc eax ; jmp qword ptr [rbx]
0xffffff800039a6ed : inc eax ; jne 0xffffff800039a6fc ; inc eax ; mov dword ptr [rsi + 0x18], eax ; ret
0xffffff80003894bf : inc eax ; mov dword ptr [r8 + 0x18], eax ; ret
0xffffff80006cc781 : inc eax ; mov dword ptr [rbp - 0x2c], eax ; jmp 0xffffff80006cc795
0xffffff800039a6f1 : inc eax ; mov dword ptr [rsi + 0x18], eax ; ret
0xffffff80007ff9eb : inc eax ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff8000719365 : inc eax ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0xffffff80003952cd : inc eax ; pop rbp ; ret
0xffffff8000682ffc : inc ebx ; add dl, dl ; js 0xffffff8000683005 ; jmp 0xffffff8000683010
0xffffff80002ade7c : inc ebx ; cmp r11, r9 ; jb 0xffffff80002ade37 ; pop rbp ; ret
0xffffff80008323b4 : inc ebx ; jmp 0xffffff80008323ca
0xffffff8000495507 : inc ecx ; add qword ptr [rdi + rcx*8 + 8], r8 ; pop rbp ; ret
0xffffff8000821d65 : inc ecx ; cmp rcx, 0x10 ; jne 0xffffff8000821d59 ; pop rbp ; ret
0xffffff80004f3ce7 : inc ecx ; cmp rcx, 0x11 ; jne 0xffffff80004f3cd9 ; pop rbp ; ret
0xffffff80007888ec : inc ecx ; cmp rcx, 0x1f ; jne 0xffffff80007888d9 ; pop rbp ; ret
0xffffff8000784c7b : inc ecx ; idiv bh ; jmp rbx
0xffffff8000340f08 : inc ecx ; jne 0xffffff8000340f06 ; inc r10 ; jmp 0xffffff8000340f1a
0xffffff80003924ea : inc ecx ; lock cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392533 ; ret
0xffffff80007fe2a8 : inc ecx ; loopne 0xffffff80007fe2b4 ; pop rbp ; ret
0xffffff80007fe2e8 : inc ecx ; loopne 0xffffff80007fe2f4 ; pop rbp ; ret
0xffffff80007fe328 : inc ecx ; loopne 0xffffff80007fe333 ; pop rbp ; ret
0xffffff80004cf136 : inc ecx ; mov dword ptr [rdi + 0x5c], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800029360f : inc ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff8000807edb : inc ecx ; mov qword ptr [rdi], rcx ; pop rbp ; ret
0xffffff8000370516 : inc ecx ; ret
0xffffff80003727d6 : inc ecx ; ret 0xd11e
0xffffff8000252855 : inc edi ; cmp edx, 0xa ; jb 0xffffff8000252848 ; pop rbp ; ret
0xffffff8000366955 : inc edi ; cmp edx, 0xa ; jb 0xffffff8000366948 ; pop rbp ; ret
0xffffff80003710b0 : inc edi ; dec rsi ; jne 0xffffff80003710a8 ; pop rbp ; ret
0xffffff800080765b : inc edi ; idiv bh ; jmp qword ptr [rcx]
0xffffff8000301143 : inc edi ; inc r10d ; jmp 0xffffff800030110b
0xffffff8000443855 : inc edi ; jne 0xffffff8000443851 ; inc rdx ; jmp 0xffffff8000443867
0xffffff80003d3d09 : inc edi ; mov eax, edi ; pop rbp ; ret
0xffffff8000267801 : inc edi ; movsx edi, r12b ; mov rbx, rax ; call rbx
0xffffff80008d2a28 : inc edi ; test cl, cl ; jne 0xffffff80008d2a27 ; pop rbp ; ret
0xffffff800048b95a : inc edi ; test dword ptr [rbp + rdi*8 - 1], eax ; call qword ptr [rsi]
0xffffff8000750ee3 : inc edi ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rcx]
0xffffff800037d94b : inc edi ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rcx]
0xffffff8000557b8f : inc edi ; test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0xffffff800049f744 : inc edi ; xor eax, eax ; cmp ecx, edi ; cmovge eax, edx ; pop rbp ; ret
0xffffff800036676e : inc edi ; xor eax, eax ; test cl, cl ; jne 0xffffff8000366769 ; pop rbp ; ret
0xffffff8000706abc : inc edx ; cmp rdx, 0x10 ; jne 0xffffff8000706aab ; pop rbp ; ret
0xffffff800083b6db : inc edx ; cmp rdx, r8 ; jb 0xffffff800083b6d8 ; pop rbp ; ret
0xffffff800025d968 : inc edx ; jmp 0xffffff800025d97d
0xffffff8000301146 : inc edx ; jmp 0xffffff8000301108
0xffffff8000336ebf : inc edx ; jmp 0xffffff8000336ecb
0xffffff8000340f0d : inc edx ; jmp 0xffffff8000340f15
0xffffff800044385a : inc edx ; jmp 0xffffff8000443862
0xffffff80004a160f : inc edx ; jmp 0xffffff80004a1606
0xffffff800058ae49 : inc edx ; jmp 0xffffff800058ae5b
0xffffff800066daf2 : inc edx ; jmp 0xffffff800066db11
0xffffff80006d8034 : inc edx ; jmp 0xffffff80006d8045
0xffffff8000719a6f : inc edx ; jmp 0xffffff8000719a84
0xffffff8000719a57 : inc edx ; jmp 0xffffff8000719a87
0xffffff8000719a57 : inc edx ; jmp 0xffffff8000719a8c
0xffffff800071a3af : inc edx ; jmp 0xffffff800071a3c1
0xffffff800071adba : inc edx ; jmp 0xffffff800071ade2
0xffffff8000720c88 : inc edx ; jmp 0xffffff8000720c98
0xffffff800072289d : inc edx ; jmp 0xffffff80007228ab
0xffffff800073abf3 : inc edx ; jmp 0xffffff800073abfc
0xffffff800080078e : inc edx ; jmp 0xffffff80008007a5
0xffffff800080084e : inc edx ; jmp 0xffffff8000800866
0xffffff8000800bde : inc edx ; jmp 0xffffff8000800bf5
0xffffff8000800c9e : inc edx ; jmp 0xffffff8000800cb5
0xffffff8000800d5e : inc edx ; jmp 0xffffff8000800d75
0xffffff8000800e1e : inc edx ; jmp 0xffffff8000800e35
0xffffff80006d7bc8 : inc edx ; jne 0xffffff80006d7b87 ; xor eax, eax ; pop rbp ; ret
0xffffff8000858432 : inc edx ; jne 0xffffff8000858438 ; and edi, 0xfffffff8 ; mov edx, eax ; jmp 0xffffff800085844c
0xffffff800066daec : inc edx ; mov byte ptr [rdx], 0x3a ; inc rdx ; jmp 0xffffff800066db17
0xffffff80007923ce : inc edx ; mov rdi, r14 ; call rax
0xffffff8000790b9e : inc edx ; mov rdi, r14 ; mov rsi, rbx ; call rax
0xffffff80008ea335 : inc edx ; mov rdi, r15 ; call rax
0xffffff800078eeb5 : inc edx ; mov rdi, rbx ; call rax
0xffffff8000622bfe : inc edx ; mov rdi, rbx ; mov rsi, r14 ; call rax
0xffffff800079099e : inc edx ; mov rdi, rbx ; mov rsi, r15 ; call rax
0xffffff80006c5a4a : inc esi ; dec ecx ; jne 0xffffff80006c59f7 ; pop rbp ; ret
0xffffff80008422cb : inc esi ; out 0xff, eax ; call qword ptr [rax]
0xffffff80008e3709 : inc esi ; ret
0xffffff8000596ce6 : inc esi ; ret 0x4132
0xffffff80006889e1 : inc esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a120d : inc qword ptr [r11 + rcx*4 + 0x3d] ; ret 0x84b3
0xffffff800073d5bd : inc qword ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800073d624 : inc qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff80003a2fe9 : inc qword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff800066877c : inc qword ptr [rax + 0x70] ; mov rdi, r12 ; call 0xffffff80007b4a69
0xffffff8000668820 : inc qword ptr [rax + 0x70] ; mov rdi, rbx ; call 0xffffff80007b4a69
0xffffff800076410e : inc qword ptr [rbx] ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff8000889e2c : inc qword ptr [rdi + 0x18] ; xor eax, eax ; pop rbp ; ret
0xffffff800073d596 : inc qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80004956a4 : inc qword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80004953c4 : inc qword ptr [rdi] ; pop rbp ; ret
0xffffff8000764cdc : inc qword ptr [rip + 0x3cb14d] ; pop rbp ; ret
0xffffff800029ead9 : inc qword ptr [rip + 0x78d548] ; pop rbp ; ret
0xffffff800028e559 : inc qword ptr [rip + 0x79dac8] ; pop rbp ; ret
0xffffff800028f9b2 : inc qword ptr [rip + 0x85bba7] ; pop rbp ; ret
0xffffff800028f966 : inc qword ptr [rip + 0x85bbd3] ; pop rbp ; ret
0xffffff800029ed2a : inc qword ptr [rsi] ; pop rbp ; ret
0xffffff8000340f0c : inc r10 ; jmp 0xffffff8000340f16
0xffffff8000301145 : inc r10d ; jmp 0xffffff8000301109
0xffffff80006d8033 : inc r10d ; jmp 0xffffff80006d8046
0xffffff80002ade7b : inc r11 ; cmp r11, r9 ; jb 0xffffff80002ade38 ; pop rbp ; ret
0xffffff80008323b3 : inc r11d ; jmp 0xffffff80008323cb
0xffffff80007ff9ea : inc r8 ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff80007ad447 : inc rax ; cmp rax, rcx ; jl 0xffffff80007ad449 ; pop rbp ; ret
0xffffff8000719364 : inc rax ; mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0xffffff8000807eda : inc rcx ; mov qword ptr [rdi], rcx ; pop rbp ; ret
0xffffff8000252854 : inc rdi ; cmp edx, 0xa ; jb 0xffffff8000252849 ; pop rbp ; ret
0xffffff8000366954 : inc rdi ; cmp edx, 0xa ; jb 0xffffff8000366949 ; pop rbp ; ret
0xffffff80003710af : inc rdi ; dec rsi ; jne 0xffffff80003710a9 ; pop rbp ; ret
0xffffff8000301142 : inc rdi ; inc r10d ; jmp 0xffffff800030110c
0xffffff80008d2a27 : inc rdi ; test cl, cl ; jne 0xffffff80008d2a28 ; pop rbp ; ret
0xffffff800083b6da : inc rdx ; cmp rdx, r8 ; jb 0xffffff800083b6d9 ; pop rbp ; ret
0xffffff800025d967 : inc rdx ; jmp 0xffffff800025d97e
0xffffff8000443859 : inc rdx ; jmp 0xffffff8000443863
0xffffff8000443858 : inc rdx ; jmp 0xffffff8000443864
0xffffff800066daf1 : inc rdx ; jmp 0xffffff800066db12
0xffffff8000719a6e : inc rdx ; jmp 0xffffff8000719a85
0xffffff8000719a56 : inc rdx ; jmp 0xffffff8000719a88
0xffffff8000719a56 : inc rdx ; jmp 0xffffff8000719a8d
0xffffff800071a3ae : inc rdx ; jmp 0xffffff800071a3c2
0xffffff800071adb9 : inc rdx ; jmp 0xffffff800071ade3
0xffffff8000720c87 : inc rdx ; jmp 0xffffff8000720c99
0xffffff800072289c : inc rdx ; jmp 0xffffff80007228ac
0xffffff800073abf2 : inc rdx ; jmp 0xffffff800073abfd
0xffffff800080078d : inc rdx ; jmp 0xffffff80008007a6
0xffffff800080078c : inc rdx ; jmp 0xffffff80008007a7
0xffffff800080084d : inc rdx ; jmp 0xffffff8000800867
0xffffff800080084c : inc rdx ; jmp 0xffffff8000800868
0xffffff8000800bdd : inc rdx ; jmp 0xffffff8000800bf6
0xffffff8000800bdc : inc rdx ; jmp 0xffffff8000800bf7
0xffffff8000800c9d : inc rdx ; jmp 0xffffff8000800cb6
0xffffff8000800c9c : inc rdx ; jmp 0xffffff8000800cb7
0xffffff8000800d5d : inc rdx ; jmp 0xffffff8000800d76
0xffffff8000800d5c : inc rdx ; jmp 0xffffff8000800d77
0xffffff8000800e1d : inc rdx ; jmp 0xffffff8000800e36
0xffffff8000800e1c : inc rdx ; jmp 0xffffff8000800e37
0xffffff800066daeb : inc rdx ; mov byte ptr [rdx], 0x3a ; inc rdx ; jmp 0xffffff800066db18
0xffffff80007923cd : inc rdx ; mov rdi, r14 ; call rax
0xffffff8000790b9d : inc rdx ; mov rdi, r14 ; mov rsi, rbx ; call rax
0xffffff80008ea334 : inc rdx ; mov rdi, r15 ; call rax
0xffffff800078eeb4 : inc rdx ; mov rdi, rbx ; call rax
0xffffff8000622bfd : inc rdx ; mov rdi, rbx ; mov rsi, r14 ; call rax
0xffffff800079099d : inc rdx ; mov rdi, rbx ; mov rsi, r15 ; call rax
0xffffff80006c5a49 : inc rsi ; dec ecx ; jne 0xffffff80006c59f8 ; pop rbp ; ret
0xffffff800053235c : inc word ptr [rdi + 0x472] ; pop rbp ; ret
0xffffff80007cff3c : insb byte ptr [rdi], dx ; adc dh, dh ; ret 0x7440
0xffffff800026f82c : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e85ed : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, ch ; pop rbx ; ret 0x48ff
0xffffff8000278a1f : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000752070 : insb byte ptr [rdi], dx ; add byte ptr es:[rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000563c67 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff800074e10e : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0xffffff80005ddf3d : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007cff28 : insb byte ptr [rdi], dx ; add esi, esi ; ret 0x7410
0xffffff8000751f1d : insb byte ptr [rdi], dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007f643d : insb byte ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800056dca7 : insb byte ptr [rdi], dx ; cld ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff80007faf87 : insb byte ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800056ac10 : insb byte ptr [rdi], dx ; fcom st(2) ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff800084aba2 : insb byte ptr [rdi], dx ; fisub dword ptr [rip + 0x1c8b4800] ; ret
0xffffff80007d38ad : insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0xffffff8000375cd8 : insb byte ptr [rdi], dx ; js 0xffffff8000375ce4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800076da40 : insb byte ptr [rdi], dx ; mov bl, 0xff ; mov rdi, r13 ; call 0xffffff8000393049
0xffffff800059de02 : insb byte ptr [rdi], dx ; mov dword ptr [rdi + 0x20], ecx ; pop rbp ; ret
0xffffff80007f30bf : insb byte ptr [rdi], dx ; mov dword ptr [rdx], eax ; pop rbp ; ret
0xffffff8000666920 : insb byte ptr [rdi], dx ; mov edx, 0x89480015 ; ret
0xffffff80007cff32 : insb byte ptr [rdi], dx ; or dh, dh ; ret 0x7420
0xffffff80005d9b90 : insb byte ptr [rdi], dx ; or ebx, esp ; dec dword ptr [rax + 1] ; ret
0xffffff80004f19c0 : insb byte ptr [rdi], dx ; pminsw mm7, mm7 ; mov rdi, rbx ; call 0xffffff80004cdbe9
0xffffff80004fa026 : insb byte ptr [rdi], dx ; pop rbp ; ret
0xffffff80005c0529 : insb byte ptr [rdi], dx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000791110 : insb byte ptr [rdi], dx ; pop rdx ; sar bh, 0x89 ; ret
0xffffff80005d6866 : insb byte ptr [rdi], dx ; push rcx ; add byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff80002ec460 : insb byte ptr [rdi], dx ; ret
0xffffff80003216ed : insb byte ptr [rdi], dx ; ret 0x62
0xffffff8000591ed0 : insb byte ptr [rdi], dx ; ret 0xffb7
0xffffff80007615d0 : insb byte ptr [rdi], dx ; sbb al, bl ; dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0xffffff800089fd79 : insb byte ptr [rdi], dx ; scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ror byte ptr [r8 + 1], 1 ; ret
0xffffff80007f0c32 : insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bde05 : insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0xffffff80005d9cc0 : insb byte ptr [rdi], dx ; sub byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800059d81e : insb byte ptr [rdi], dx ; test edx, edx ; jne 0xffffff800059d83a ; xor eax, eax ; pop rbp ; ret
0xffffff80002b111f : insd dword ptr [rdi], dx ; adc ch, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000352236 : insd dword ptr [rdi], dx ; add al, ch ; ret
0xffffff80002b4acc : insd dword ptr [rdi], dx ; add bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0xffffff800043efb2 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800045f4b9 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0xffffff800045f344 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff8000357402 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003b1b54 : insd dword ptr [rdi], dx ; add byte ptr [rax - 1], cl ; ret
0xffffff800026078f : insd dword ptr [rdi], dx ; add byte ptr [rcx], ch ; ret
0xffffff8000271ea1 : insd dword ptr [rdi], dx ; add byte ptr [rsi + 0xe6e], bh ; call 0xffffff800028e159
0xffffff80004294e1 : insd dword ptr [rdi], dx ; add cl, ch ; mov ecx, 0xe8fffff4 ; ret
0xffffff80005f4444 : insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff800038f588 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800075f665 : insd dword ptr [rdi], dx ; enter -0x2b18, 0x33 ; ret
0xffffff800052c36f : insd dword ptr [rdi], dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003aade6 : insd dword ptr [rdi], dx ; jb 0xffffff80003aadec ; call rax
0xffffff80003baab4 : insd dword ptr [rdi], dx ; je 0xffffff80003baabb ; pop rbp ; ret
0xffffff80006b1b5f : insd dword ptr [rdi], dx ; mov esi, 0x8948fffb ; ret 0x4b8b
0xffffff8000566678 : insd dword ptr [rdi], dx ; mov rdi, r12 ; call 0xffffff8000392936
0xffffff80004a67cf : insd dword ptr [rdi], dx ; out dx, al ; add byte ptr [rbx - 0x9f3f7ac], cl ; ret 0xbe01
0xffffff8000336235 : insd dword ptr [rdi], dx ; outsd dx, dword ptr [rsi] ; add al, ch ; ret
0xffffff800075dbcf : insd dword ptr [rdi], dx ; push rsp ; ret
0xffffff800065982f : insd dword ptr [rdi], dx ; ret
0xffffff80006676b8 : insd dword ptr [rdi], dx ; ret 0x48ff
0xffffff800077251e : insd dword ptr [rdi], dx ; ret 0x66ff
0xffffff8000420b5f : insd dword ptr [rdi], dx ; ret 0xa
0xffffff80003af430 : insd dword ptr [rdi], dx ; rol byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x144
0xffffff80002b303a : insd dword ptr [rdi], dx ; sal byte ptr [rdi + rsi + 0x48], 0x89 ; ret 0x6666
0xffffff8000567ab3 : insd dword ptr [rdi], dx ; sar edi, cl ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fea44 : insd dword ptr [rdi], dx ; shr al, 1 ; jne 0xffffff80007fea83 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000676f6a : insd dword ptr [rdi], dx ; shr al, 1 ; mov edi, 0x89fffffb ; ret
0xffffff800079c6a8 : insd dword ptr [rdi], dx ; shr al, 1 ; xor dword ptr [rip - 0x76b7fff9], eax ; ret
0xffffff80008b1ca2 : insd dword ptr [rdi], dx ; shr bl, 1 ; sub ecx, dword ptr [rax - 0x77] ; ret
0xffffff80007536af : insd dword ptr [rdi], dx ; sub byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008b32c7 : insd dword ptr [rdi], dx ; sub byte ptr ds:[rax], al ; pop rbp ; ret
0xffffff80003164b5 : insd dword ptr [rdi], dx ; test al, 0x4c ; mov edi, ebp ; call 0xffffff8000392797
0xffffff800078940f : insd dword ptr [rdi], dx ; xlatb ; sar bh, 0x89 ; ret
0xffffff80006784ab : insd dword ptr [rdi], dx ; xor eax, dword ptr [rax] ; mov rsi, rax ; call 0xffffff800029ab99
0xffffff80002b4acb : insw word ptr [rdi], dx ; add bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0xffffff800065414f : int 0x3f
0xffffff800070607f : int 0x42
0xffffff80007e2781 : int 0x48
0xffffff80002b9b4f : int 0x58
0xffffff80004575a8 : int 0x6b
0xffffff80004dadef : int 0x6d
0xffffff800034e88b : int 0x7a
0xffffff80003553e7 : int 0x80
0xffffff8000b4b4a4 : int 0x83
0xffffff8000489324 : int 0x8b
0xffffff800087ad0f : int 0x9c
0xffffff80006614a5 : int 0xc2
0xffffff8000250c1f : int 0xc3
0xffffff80007d8eaf : int 0xdc
0xffffff8000680050 : int 0xef
0xffffff80007f19e3 : int 0xf6
0xffffff800056e2ae : int 0xfb
0xffffff80003b9d8d : int 0xfd
0xffffff800028712e : int 0xfe
0xffffff80007f857a : int 0xff
0xffffff800062910b : int1 ; adc eax, 0x8948ffd7 ; ret
0xffffff8000526b76 : int1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x5dc03106], cl ; ret
0xffffff800058ff82 : int1 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0xffffff8000506043 : int1 ; add dword ptr [rax], eax ; add bh, bh ; ret
0xffffff8000273beb : int1 ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff80008a07d7 : int1 ; add dword ptr [rcx], ecx ; ror dword ptr [rcx + rdi + 0xd], 0x26 ; ret 0x18
0xffffff800039f1ec : int1 ; add rcx, rax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800066a019 : int1 ; call 0xffffff800028e4a4
0xffffff80003951a3 : int1 ; call 0xffffff8000381403
0xffffff8000770ff8 : int1 ; call 0xffffff8000396b84
0xffffff800030d37c : int1 ; call 0xffffff8000398878
0xffffff8000845e8b : int1 ; call qword ptr [r12 + 0x10]
0xffffff8000872d89 : int1 ; call qword ptr [rbx + 0x938]
0xffffff80004fbc16 : int1 ; call qword ptr [rbx + 0x9b8]
0xffffff80002672bb : int1 ; call qword ptr [rbx]
0xffffff80008bd23c : int1 ; call r15
0xffffff80008fe583 : int1 ; call r8
0xffffff8000901ad0 : int1 ; call r9
0xffffff800074f2ac : int1 ; call rax
0xffffff80008f7199 : int1 ; call rbx
0xffffff80002ba97e : int1 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004650e0 : int1 ; cmp esi, 0x2f ; je 0xffffff80004650d7 ; jmp 0xffffff80004650b2
0xffffff800038aeea : int1 ; cmp rcx, rsi ; je 0xffffff800038aefb ; xor eax, eax ; pop rbp ; ret
0xffffff800072c30b : int1 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000482010 : int1 ; dec dword ptr [rax + 0x63] ; ret
0xffffff800035ba6a : int1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008f6c83 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff8000377aeb : int1 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800083b699 : int1 ; dec rdx ; jne 0xffffff800083b687 ; pop rbp ; ret
0xffffff800039f177 : int1 ; imul rcx, rax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800047ff18 : int1 ; inc dword ptr [rbx - 0x70f0fe05] ; ret
0xffffff800038aeed : int1 ; je 0xffffff800038aef8 ; xor eax, eax ; pop rbp ; ret
0xffffff800076c521 : int1 ; jl 0xffffff800076c4ef ; mov rdi, r14 ; call 0xffffff8000393049
0xffffff80004578eb : int1 ; jmp rax
0xffffff8000440225 : int1 ; jmp rcx
0xffffff80002bd446 : int1 ; jmp rdi
0xffffff8000366912 : int1 ; jne 0xffffff8000366907 ; mov rax, rdi ; pop rbp ; ret
0xffffff80007bc1bb : int1 ; jp 0xffffff80007bc1f6 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80007128ab : int1 ; js 0xffffff80007128ba ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003b82b8 : int1 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800029995d : int1 ; lock or dword ptr [rcx], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000795f3a : int1 ; mov dword ptr [rdi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff8000838753 : int1 ; mov eax, ecx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800060631d : int1 ; mov eax, edx ; pop rbp ; ret
0xffffff80008b8c1e : int1 ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006582d7 : int1 ; mov r8, qword ptr [rbp - 0x1b0] ; call r9
0xffffff8000593ace : int1 ; mov r8, qword ptr [rbp - 0xe0] ; call rax
0xffffff800051bc8e : int1 ; mov r8, rbx ; call rax
0xffffff80006674ca : int1 ; mov r8, rdi ; call 0xffffff800028e4a7
0xffffff80008fa637 : int1 ; mov r9d, dword ptr [rbp - 0x44] ; call r10
0xffffff8000895e86 : int1 ; mov rax, rcx ; pop rbp ; ret
0xffffff80008ad1d7 : int1 ; mov rdi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80002908e4 : int1 ; mov rsi, rdi ; jne 0xffffff80002908d7 ; pop rbp ; ret
0xffffff800080ddae : int1 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080dd4e : int1 ; movzx eax, si ; pop rbp ; ret
0xffffff80006a24bb : int1 ; or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800077d9de : int1 ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff8000327557 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff80005be887 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbp ; ret
0xffffff80005b1177 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x28], rcx ; pop rbp ; ret
0xffffff80005815b7 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x40], rcx ; pop rbp ; ret
0xffffff80005eaf27 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x68], rcx ; pop rbp ; ret
0xffffff800057f227 : int1 ; or rcx, rax ; mov qword ptr [rdi + 0x78], rcx ; pop rbp ; ret
0xffffff8000257e22 : int1 ; pop rbp ; ret
0xffffff800086e959 : int1 ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800039f25e : int1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000662ccb : int1 ; push rcx ; add byte ptr [rax - 1], r9b ; ret 0x8948
0xffffff8000b3e3cc : int1 ; push rcx ; jmp qword ptr [rdx]
0xffffff80006a4cfb : int1 ; ret
0xffffff8000b45b3f : int1 ; ret 0
0xffffff8000858eb3 : int1 ; ret 0x2d
0xffffff80006a5d58 : int1 ; ret 0x41ff
0xffffff80005bd4da : int1 ; ret 0x51
0xffffff80007336b2 : int1 ; ret 0xffff
0xffffff800058476c : int1 ; setae al ; movzx eax, al ; pop rbp ; ret
0xffffff80002cefac : int1 ; sti ; jmp qword ptr [rbx]
0xffffff800088793e : int1 ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000885fbe : int1 ; sub al, byte ptr [rax] ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004ab0ae : int1 ; sub eax, edx ; pop rbp ; ret
0xffffff80006087df : int1 ; sub edx, esi ; jg 0xffffff80006087d6 ; pop rbp ; ret
0xffffff80007c112b : int1 ; xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff8000716f8d : int1 ; xor eax, 0xf801c400 ; pop rbp ; ret
0xffffff800029d8bd : int1 ; xor eax, eax ; xor esi, esi ; xor r8d, r8d ; jmp rcx
0xffffff800066d966 : iretd ; add eax, 0xc0310034 ; call 0xffffff800028e4a9
0xffffff80003eb0e4 : iretd ; call 0xffffff8000393047
0xffffff800074efa0 : iretd ; call r10
0xffffff800055e71c : iretd ; call rax
0xffffff80003aade5 : iretd ; insd dword ptr [rdi], dx ; jb 0xffffff80003aaded ; call rax
0xffffff8000266964 : iretd ; jmp rdi
0xffffff800060ca74 : iretd ; lea rcx, [rbp - 0x180] ; call rax
0xffffff80006788d1 : iretd ; lea rsi, [rbp - 0x68] ; call rbx
0xffffff8000892ade : iretd ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff800052bcf8 : iretd ; mov rbx, rcx ; call rax
0xffffff8000658394 : iretd ; mov rsi, r15 ; mov edx, r14d ; call r8
0xffffff80008744b6 : iretd ; mov rsi, rax ; mov rcx, r9 ; pop rbp ; jmp r11
0xffffff80005e38d8 : iretd ; pop rbp ; jmp r8
0xffffff800053ec24 : iretd ; pop rbp ; jmp rax
0xffffff800065f04e : iretd ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff80002ab079 : ja 0xffffff80002ab0df ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002ae406 : ja 0xffffff80002ae40c ; call 0xffffff800039a704
0xffffff80002af998 : ja 0xffffff80002af99d ; pop rbp ; ret
0xffffff80002bb912 : ja 0xffffff80002bb92a ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002c80a6 : ja 0xffffff80002c80b3 ; pop rbp ; ret
0xffffff80002c80c9 : ja 0xffffff80002c80d6 ; pop rbp ; ret
0xffffff80002cb139 : ja 0xffffff80002cb142 ; xor eax, eax ; pop rbp ; ret
0xffffff80002f874e : ja 0xffffff80002f8757 ; xor eax, eax ; pop rbp ; ret
0xffffff80002f9db5 : ja 0xffffff80002f9dc2 ; pop rbp ; ret
0xffffff8000309620 : ja 0xffffff8000309649 ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0xffffff8000313b60 : ja 0xffffff8000313baf ; xor eax, eax ; pop rbp ; ret
0xffffff800031aed2 : ja 0xffffff800031aee0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800031ebe2 : ja 0xffffff800031ebf1 ; mov eax, 0x100 ; pop rbp ; ret
0xffffff800031ebf6 : ja 0xffffff800031ec21 ; setae al ; movzx eax, al ; pop rbp ; ret
0xffffff800031ed76 : ja 0xffffff800031eddb ; pop rbp ; ret
0xffffff8000338e8b : ja 0xffffff8000338e94 ; xor eax, eax ; pop rbp ; ret
0xffffff8000342b06 : ja 0xffffff8000342b63 ; pop rbp ; ret
0xffffff8000350706 : ja 0xffffff800035072b ; pop rbp ; ret
0xffffff80003578d5 : ja 0xffffff800035794e ; hlt ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800036e909 : ja 0xffffff800036e936 ; pop rbp ; ret
0xffffff80003713e9 : ja 0xffffff8000371416 ; pop rbp ; ret
0xffffff80003990c9 : ja 0xffffff80003990d3 ; jmp 0xffffff80003990dc
0xffffff800039a72f : ja 0xffffff800039a74d ; jne 0xffffff800039a704 ; ret
0xffffff80003a21ae : ja 0xffffff80003a2213 ; pop rbp ; ret
0xffffff80003a491f : ja 0xffffff80003a492e ; mov dword ptr [rdi + 8], 0 ; ret
0xffffff80003a4a05 : ja 0xffffff80003a4a18 ; mov dword ptr [rdi + 0x10], 0 ; ret
0xffffff80003b3953 : ja 0xffffff80003b3973 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0xffffff80003b633b : ja 0xffffff80003b6394 ; add dh, dh ; ret
0xffffff80003b634a : ja 0xffffff80003b63a4 ; add byte ptr [rax - 1], cl ; ret
0xffffff80003eddc5 : ja 0xffffff80003ede1e ; cli ; push rsi ; ret
0xffffff8000422672 : ja 0xffffff8000422682 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800043795e : ja 0xffffff80004379ab ; pop rbp ; ret
0xffffff80004956a9 : ja 0xffffff80004956b6 ; pop rbp ; ret
0xffffff80004b3b6b : ja 0xffffff80004b3ba8 ; pop rbp ; ret
0xffffff80004b3b81 : ja 0xffffff80004b3bbe ; pop rbp ; ret
0xffffff80004b3bd5 : ja 0xffffff80004b3c22 ; pop rbp ; ret
0xffffff80004b3bf5 : ja 0xffffff80004b3c3e ; pop rbp ; ret
0xffffff80004b3c15 : ja 0xffffff80004b3c66 ; pop rbp ; ret
0xffffff80004b3c76 : ja 0xffffff80004b3cd3 ; pop rbp ; ret
0xffffff80004b3c96 : ja 0xffffff80004b3d13 ; pop rbp ; ret
0xffffff80004b40c6 : ja 0xffffff80004b4133 ; pop rbp ; ret
0xffffff80004b40d6 : ja 0xffffff80004b413b ; pop rbp ; ret
0xffffff80004cbf75 : ja 0xffffff80004cbf59 ; add al, ch ; ret 0xec6a
0xffffff80004ebc45 : ja 0xffffff80004ebcac ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80004fa646 : ja 0xffffff80004fa6b5 ; pop rbp ; ret
0xffffff800051eaf7 : ja 0xffffff800051eb10 ; xor edx, edx ; mov rdi, r14 ; call rax
0xffffff8000542003 : ja 0xffffff8000541f8d ; add dword ptr ss:[rsi - 0x75], esp ; ret 0x8966
0xffffff800054b8e1 : ja 0xffffff800054b8e3 ; add rdi, -8 ; call 0xffffff8000297b48
0xffffff800054ff2d : ja 0xffffff800054ff39 ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800055ec8f : ja 0xffffff800055ecbb ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055ec8e : ja 0xffffff800055ecbc ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055fe12 : ja 0xffffff800055fe27 ; pop rbp ; ret
0xffffff800055fe19 : ja 0xffffff800055fe36 ; pop rbp ; ret
0xffffff800055fe0b : ja 0xffffff800055fe40 ; pop rbp ; ret
0xffffff800055fe20 : ja 0xffffff800055fe45 ; pop rbp ; ret
0xffffff800055fe27 : ja 0xffffff800055fe54 ; pop rbp ; ret
0xffffff800056ec88 : ja 0xffffff800056ecc1 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0xffffff8000584711 : ja 0xffffff8000584720 ; mov eax, 1 ; pop rbp ; ret
0xffffff8000588ea5 : ja 0xffffff8000588ebe ; pop rbp ; ret
0xffffff8000588eb5 : ja 0xffffff8000588ed2 ; pop rbp ; ret
0xffffff80005a7a2f : ja 0xffffff80005a7a33 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006000e2 : ja 0xffffff80006000b2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000622789 : ja 0xffffff80006227f2 ; pop rbp ; ret
0xffffff80006240bd : ja 0xffffff8000624143 ; add byte ptr [rcx], r15b ; ror byte ptr [rdi], 1 ; ret 0x4189
0xffffff800066f552 : ja 0xffffff800066f555 ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000671b0b : ja 0xffffff8000671b0e ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000671b48 : ja 0xffffff8000671b4b ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000671bfd : ja 0xffffff8000671c00 ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000671c2c : ja 0xffffff8000671c2f ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000674039 : ja 0xffffff800067403c ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff800067467e : ja 0xffffff8000674681 ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff8000698736 : ja 0xffffff8000698773 ; pop rbp ; ret
0xffffff80006ba590 : ja 0xffffff80006ba57e ; jmp 0xffffff80006ba627
0xffffff80006d636e : ja 0xffffff80006d63df ; or byte ptr [rdi + 6], 0x80 ; pop rbp ; ret
0xffffff80006d6407 : ja 0xffffff80006d647c ; pop rbp ; ret
0xffffff80006e2028 : ja 0xffffff80006e2037 ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff8000719372 : ja 0xffffff800071938f ; pop rbp ; ret
0xffffff8000738147 : ja 0xffffff800073815a ; add edi, 0x55 ; movzx eax, di ; pop rbp ; ret
0xffffff8000738167 : ja 0xffffff800073817a ; add edi, 0x63 ; movzx eax, di ; pop rbp ; ret
0xffffff80007484d0 : ja 0xffffff8000748477 ; xor eax, dword ptr [rax] ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff800075b9b5 : ja 0xffffff800075ba28 ; ret
0xffffff800076f405 : ja 0xffffff800076f480 ; ret 0x41ff
0xffffff800078c95b : ja 0xffffff800078c980 ; pop rbp ; ret
0xffffff800078c9cb : ja 0xffffff800078c9e0 ; pop rbp ; ret
0xffffff800078c9fc : ja 0xffffff800078ca07 ; mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff800078c9ff : ja 0xffffff800078ca20 ; pop rbp ; ret
0xffffff8000795279 : ja 0xffffff8000795293 ; mov dword ptr [rdi + 0x18], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000796096 : ja 0xffffff80007960a3 ; pop rbp ; ret
0xffffff80007960b5 : ja 0xffffff80007960d2 ; pop rbp ; ret
0xffffff80007961f5 : ja 0xffffff800079622a ; pop rbp ; ret
0xffffff8000796205 : ja 0xffffff800079623a ; pop rbp ; ret
0xffffff8000796226 : ja 0xffffff800079624d ; xor eax, eax ; pop rbp ; ret
0xffffff8000796246 : ja 0xffffff8000796273 ; pop rbp ; ret
0xffffff80007962aa : ja 0xffffff80007962ed ; xor eax, eax ; pop rbp ; ret
0xffffff80007962fc : ja 0xffffff800079633a ; mov dword ptr [rdi + 0x38], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800079639c : ja 0xffffff80007963da ; mov dword ptr [rdi + 0x38], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000797409 : ja 0xffffff8000797458 ; xor eax, eax ; pop rbp ; ret
0xffffff8000798420 : ja 0xffffff8000798429 ; xor eax, eax ; pop rbp ; ret
0xffffff800079d543 : ja 0xffffff800079d55e ; xor eax, eax ; pop rbp ; ret
0xffffff80007a7545 : ja 0xffffff80007a74f3 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b2f28 : ja 0xffffff80007b2eed ; dec dword ptr [rax + 1] ; ret
0xffffff80007b4175 : ja 0xffffff80007b4183 ; cmp byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b735a : ja 0xffffff80007b7395 ; mov rax, rdi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b8119 : ja 0xffffff80007b814e ; pop rbp ; ret
0xffffff80007b9998 : ja 0xffffff80007b99b9 ; pop rbp ; ret
0xffffff80007be3c6 : ja 0xffffff80007be3f7 ; movsxd rdx, dword ptr [r11 + rdx*4] ; add rdx, r11 ; jmp rdx
0xffffff80007d1908 : ja 0xffffff80007d1926 ; jbe 0xffffff80007d1917 ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff80007d190d : ja 0xffffff80007d1926 ; pop rbp ; ret
0xffffff80007d7610 : ja 0xffffff80007d7643 ; call 0xffffff8000297b49
0xffffff80007db8c6 : ja 0xffffff80007db8c8 ; add rdi, -8 ; call 0xffffff8000297b48
0xffffff80007f07e5 : ja 0xffffff80007f082a ; pop rbp ; ret
0xffffff8000810d7a : ja 0xffffff8000810da5 ; jmp 0xffffff8000810dbd
0xffffff8000811a9a : ja 0xffffff8000811ac5 ; jmp 0xffffff8000811add
0xffffff8000812362 : ja 0xffffff800081238a ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008130aa : ja 0xffffff80008130d5 ; jmp 0xffffff80008130ed
0xffffff8000813b4a : ja 0xffffff8000813b75 ; jmp 0xffffff8000813b8d
0xffffff8000813dd6 : ja 0xffffff8000813deb ; pop rbp ; ret
0xffffff800081430a : ja 0xffffff8000814335 ; jmp 0xffffff800081434d
0xffffff8000814d0a : ja 0xffffff8000814d35 ; jmp 0xffffff8000814d4d
0xffffff8000815605 : ja 0xffffff800081562c ; mov eax, esi ; pop rbp ; ret
0xffffff800081626a : ja 0xffffff8000816295 ; jmp 0xffffff80008162ad
0xffffff8000817c1d : ja 0xffffff8000817bfa ; xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff80008180ba : ja 0xffffff80008180e5 ; jmp 0xffffff80008180fd
0xffffff8000818d9d : ja 0xffffff8000818dcb ; jmp 0xffffff8000818de6
0xffffff800082b58a : ja 0xffffff800082b5b5 ; jmp 0xffffff800082b5cd
0xffffff800082c1aa : ja 0xffffff800082c1d5 ; jmp 0xffffff800082c1ed
0xffffff800082c1a9 : ja 0xffffff800082c1d6 ; jmp 0xffffff800082c1ee
0xffffff800082ca02 : ja 0xffffff800082ca3a ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff800082e08a : ja 0xffffff800082e0b5 ; jmp 0xffffff800082e0cd
0xffffff800082e089 : ja 0xffffff800082e0b6 ; jmp 0xffffff800082e0ce
0xffffff800082ebca : ja 0xffffff800082ebf5 ; jmp 0xffffff800082ec0d
0xffffff800082ee01 : ja 0xffffff800082ee21 ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff800082f6da : ja 0xffffff800082f705 ; jmp 0xffffff800082f71d
0xffffff8000830a1a : ja 0xffffff8000830a45 ; jmp 0xffffff8000830a5d
0xffffff8000831cec : ja 0xffffff8000831ce3 ; pop rbp ; ret
0xffffff800083289a : ja 0xffffff80008328c5 ; jmp 0xffffff80008328dd
0xffffff800084b724 : ja 0xffffff800084b74f ; mov eax, edx ; pop rbp ; ret
0xffffff800084c09d : ja 0xffffff800084c0b8 ; add r14, qword ptr [rax + 8] ; mov rdi, r14 ; call rbx
0xffffff800084c51d : ja 0xffffff800084c538 ; add r14, qword ptr [rax + 8] ; mov rdi, r14 ; call rbx
0xffffff8000858e2a : ja 0xffffff8000858e55 ; jmp 0xffffff8000858e6d
0xffffff800085cd5a : ja 0xffffff800085cd85 ; jmp 0xffffff800085cd9d
0xffffff800085cfba : ja 0xffffff800085cfe5 ; jmp 0xffffff800085cffd
0xffffff8000860eba : ja 0xffffff8000860ee5 ; jmp 0xffffff8000860efd
0xffffff8000860eb9 : ja 0xffffff8000860ee6 ; jmp 0xffffff8000860efe
0xffffff800086274d : ja 0xffffff800086277b ; jmp 0xffffff8000862796
0xffffff80008629da : ja 0xffffff8000862a05 ; jmp 0xffffff8000862a1d
0xffffff8000862c3a : ja 0xffffff8000862c65 ; jmp 0xffffff8000862c7d
0xffffff8000862c39 : ja 0xffffff8000862c66 ; jmp 0xffffff8000862c7e
0xffffff8000862e9a : ja 0xffffff8000862ec5 ; jmp 0xffffff8000862edd
0xffffff80008630fa : ja 0xffffff8000863125 ; jmp 0xffffff800086313d
0xffffff800086335d : ja 0xffffff800086338b ; jmp 0xffffff80008633a6
0xffffff80008635ba : ja 0xffffff80008635e5 ; jmp 0xffffff80008635fd
0xffffff80008637ca : ja 0xffffff80008637f5 ; jmp 0xffffff800086380d
0xffffff8000875511 : ja 0xffffff8000875543 ; inc dword ptr [rsi + 0x38] ; mov al, 1 ; pop rbp ; ret
0xffffff8000880831 : ja 0xffffff800088086b ; inc dword ptr [rsi + 0x3c] ; mov al, 1 ; pop rbp ; ret
0xffffff80008812ca : ja 0xffffff80008812f8 ; jmp 0xffffff8000881313
0xffffff80008815ea : ja 0xffffff8000881615 ; jmp 0xffffff800088162d
0xffffff80008819fd : ja 0xffffff8000881a2b ; jmp 0xffffff8000881a46
0xffffff800088200a : ja 0xffffff8000882035 ; jmp 0xffffff800088204d
0xffffff800088238d : ja 0xffffff80008823bb ; jmp 0xffffff80008823d6
0xffffff800088468a : ja 0xffffff80008846b5 ; jmp 0xffffff80008846cd
0xffffff8000884dca : ja 0xffffff8000884df5 ; jmp 0xffffff8000884e0d
0xffffff80008856fa : ja 0xffffff8000885725 ; jmp 0xffffff800088573d
0xffffff8000885f8a : ja 0xffffff8000885fb5 ; jmp 0xffffff8000885fcd
0xffffff8000887dfd : ja 0xffffff8000887e2b ; jmp 0xffffff8000887e46
0xffffff8000889c5a : ja 0xffffff8000889c85 ; jmp 0xffffff8000889c9d
0xffffff8000889e2a : ja 0xffffff8000889e45 ; inc qword ptr [rdi + 0x18] ; xor eax, eax ; pop rbp ; ret
0xffffff800088a3ea : ja 0xffffff800088a415 ; jmp 0xffffff800088a42d
0xffffff800088a88a : ja 0xffffff800088a8b5 ; jmp 0xffffff800088a8cd
0xffffff800088cb0a : ja 0xffffff800088cb35 ; jmp 0xffffff800088cb4d
0xffffff800088cb09 : ja 0xffffff800088cb36 ; jmp 0xffffff800088cb4e
0xffffff800088e2ba : ja 0xffffff800088e2e5 ; jmp 0xffffff800088e2fd
0xffffff800088e2b9 : ja 0xffffff800088e2e6 ; jmp 0xffffff800088e2fe
0xffffff800088e826 : ja 0xffffff800088e84b ; pop rbp ; ret
0xffffff800088e846 : ja 0xffffff800088e85b ; pop rbp ; ret
0xffffff800088edda : ja 0xffffff800088ee05 ; jmp 0xffffff800088ee1d
0xffffff800088edd9 : ja 0xffffff800088ee06 ; jmp 0xffffff800088ee1e
0xffffff800089005a : ja 0xffffff8000890085 ; jmp 0xffffff800089009d
0xffffff8000890059 : ja 0xffffff8000890086 ; jmp 0xffffff800089009e
0xffffff80008911ba : ja 0xffffff80008911e5 ; jmp 0xffffff80008911fd
0xffffff800089187a : ja 0xffffff80008918a5 ; jmp 0xffffff80008918bd
0xffffff800089241d : ja 0xffffff800089244b ; jmp 0xffffff8000892466
0xffffff8000892ada : ja 0xffffff8000892b3d ; mov rdi, rcx ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff8000892b0a : ja 0xffffff8000892b6d ; mov rdi, rcx ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff800089300a : ja 0xffffff8000893038 ; jmp 0xffffff8000893050
0xffffff8000893009 : ja 0xffffff8000893089 ; jmp 0xffffff8000893051
0xffffff800089397d : ja 0xffffff80008939b7 ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000893e3a : ja 0xffffff8000893e65 ; jmp 0xffffff8000893e7d
0xffffff80008950bd : ja 0xffffff80008950eb ; jmp 0xffffff8000895106
0xffffff8000895e82 : ja 0xffffff8000895e93 ; add rcx, rsi ; mov rax, rcx ; pop rbp ; ret
0xffffff80008966da : ja 0xffffff8000896708 ; jmp 0xffffff8000896720
0xffffff80008966d9 : ja 0xffffff8000896759 ; jmp 0xffffff8000896721
0xffffff80008985b2 : ja 0xffffff8000898601 ; mov rdx, r15 ; call rax
0xffffff8000898fad : ja 0xffffff8000898fdb ; jmp 0xffffff8000898ff6
0xffffff8000899c1d : ja 0xffffff8000899c4b ; jmp 0xffffff8000899c66
0xffffff800089afea : ja 0xffffff800089b015 ; jmp 0xffffff800089b02d
0xffffff800089b60a : ja 0xffffff800089b635 ; jmp 0xffffff800089b64d
0xffffff800089b93a : ja 0xffffff800089b965 ; jmp 0xffffff800089b97d
0xffffff800089bc6a : ja 0xffffff800089bc95 ; jmp 0xffffff800089bcad
0xffffff800089cf7a : ja 0xffffff800089cfa5 ; jmp 0xffffff800089cfbd
0xffffff800089d11d : ja 0xffffff800089d14b ; jmp 0xffffff800089d166
0xffffff800089fb15 : ja 0xffffff800089fb72 ; pop rbp ; ret
0xffffff80008a29ad : ja 0xffffff80008a29db ; jmp 0xffffff80008a29f6
0xffffff80008a527a : ja 0xffffff80008a52a8 ; jmp 0xffffff80008a52c0
0xffffff80008a620a : ja 0xffffff80008a6235 ; jmp 0xffffff80008a624d
0xffffff80008a6555 : ja 0xffffff80008a656e ; pop rbp ; ret
0xffffff80008a710a : ja 0xffffff80008a7138 ; jmp 0xffffff80008a7150
0xffffff80008a7b1d : ja 0xffffff80008a7b4b ; jmp 0xffffff80008a7b66
0xffffff80008a9edd : ja 0xffffff80008a9f0b ; jmp 0xffffff80008a9f26
0xffffff80008aaaad : ja 0xffffff80008aaadb ; jmp 0xffffff80008aaaf6
0xffffff80008ab0ed : ja 0xffffff80008ab11b ; jmp 0xffffff80008ab136
0xffffff80008ab44d : ja 0xffffff80008ab47b ; jmp 0xffffff80008ab496
0xffffff80008ad2fd : ja 0xffffff80008ad32b ; jmp 0xffffff80008ad346
0xffffff80008adeb7 : ja 0xffffff80008adec8 ; mov dword ptr [rdi + 0x94], esi ; pop rbp ; ret
0xffffff80008adfed : ja 0xffffff80008ae01b ; jmp 0xffffff80008ae036
0xffffff80008af2fd : ja 0xffffff80008af32b ; jmp 0xffffff80008af346
0xffffff80008b295d : ja 0xffffff80008b298b ; jmp 0xffffff80008b29a6
0xffffff80008b325d : ja 0xffffff80008b328b ; jmp 0xffffff80008b32a6
0xffffff80008b3d4d : ja 0xffffff80008b3d7b ; jmp 0xffffff80008b3d96
0xffffff80008b508a : ja 0xffffff80008b50b5 ; jmp 0xffffff80008b50cd
0xffffff80008b59ca : ja 0xffffff80008b59f5 ; jmp 0xffffff80008b5a0d
0xffffff80008b5c7a : ja 0xffffff80008b5ca5 ; jmp 0xffffff80008b5cbd
0xffffff80008b5c79 : ja 0xffffff80008b5ca6 ; jmp 0xffffff80008b5cbe
0xffffff80008b62ca : ja 0xffffff80008b62f5 ; jmp 0xffffff80008b630d
0xffffff80008b68ed : ja 0xffffff80008b691b ; jmp 0xffffff80008b6936
0xffffff80008c0a9a : ja 0xffffff80008c0ac5 ; jmp 0xffffff80008c0add
0xffffff80008c29ed : ja 0xffffff80008c2a1b ; jmp 0xffffff80008c2a36
0xffffff80008c367a : ja 0xffffff80008c36a5 ; jmp 0xffffff80008c36bd
0xffffff80008c414a : ja 0xffffff80008c4175 ; jmp 0xffffff80008c418d
0xffffff80008cb1ff : ja 0xffffff80008cb1f9 ; movsxd rax, dword ptr [r9 + rax*4] ; add rax, r9 ; jmp rax
0xffffff80008cc32d : ja 0xffffff80008cc35b ; jmp 0xffffff80008cc376
0xffffff80008ce12d : ja 0xffffff80008ce15b ; jmp 0xffffff80008ce176
0xffffff80008ceacd : ja 0xffffff80008ceafb ; jmp 0xffffff80008ceb16
0xffffff80008d06fd : ja 0xffffff80008d072b ; jmp 0xffffff80008d0746
0xffffff80008d17ba : ja 0xffffff80008d17e5 ; jmp 0xffffff80008d17fd
0xffffff80008d4a5d : ja 0xffffff80008d4a8b ; jmp 0xffffff80008d4aa6
0xffffff80008d5a5d : ja 0xffffff80008d5a8b ; jmp 0xffffff80008d5aa6
0xffffff80008d61ed : ja 0xffffff80008d621b ; jmp 0xffffff80008d6236
0xffffff80008d6a4a : ja 0xffffff80008d6a75 ; jmp 0xffffff80008d6a8d
0xffffff80008d73ea : ja 0xffffff80008d7415 ; jmp 0xffffff80008d742d
0xffffff80008d73e9 : ja 0xffffff80008d7416 ; jmp 0xffffff80008d742e
0xffffff80008d765a : ja 0xffffff80008d7685 ; jmp 0xffffff80008d769d
0xffffff80008d78cd : ja 0xffffff80008d78fb ; jmp 0xffffff80008d7916
0xffffff80008e255a : ja 0xffffff80008e2585 ; jmp 0xffffff80008e259d
0xffffff80008e2559 : ja 0xffffff80008e2586 ; jmp 0xffffff80008e259e
0xffffff80008e54ca : ja 0xffffff80008e54f5 ; jmp 0xffffff80008e550d
0xffffff80008e5680 : ja 0xffffff80008e56c4 ; mov rdi, rax ; pop rbp ; jmp rcx
0xffffff80008e69fa : ja 0xffffff80008e6a25 ; jmp 0xffffff80008e6a3d
0xffffff80008e6cba : ja 0xffffff80008e6ce5 ; jmp 0xffffff80008e6cfd
0xffffff80008e754d : ja 0xffffff80008e757b ; jmp 0xffffff80008e7596
0xffffff8000900118 : ja 0xffffff8000900142 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000b3eb2c : ja 0xffffff8000b3eaf8 ; imul edx, dword ptr [rcx + rax*4 - 0xf], 0x77 ; ret
0xffffff8000b43b6c : ja 0xffffff8000b43bbd ; or cl, byte ptr [rbp - 0x1b47d850] ; ret
0xffffff8000b44a16 : ja 0xffffff8000b44a15 ; call qword ptr [rdx]
0xffffff8000b4b515 : ja 0xffffff8000b4b518 ; jmp rsi
0xffffff80004ce87e : jae 0xffffff7f89951883 ; ret
0xffffff800065c396 : jae 0xffffff7fc867b484 ; pop rbp ; ret
0xffffff80002518e1 : jae 0xffffff80002518ec ; xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff800025281c : jae 0xffffff8000252813 ; pop rbp ; ret
0xffffff800025325c : jae 0xffffff8000253259 ; mov dword ptr [rip + 0x7d8c08], ecx ; pop rbp ; ret
0xffffff80002765eb : jae 0xffffff8000276578 ; ret 0xeac1
0xffffff80002af4bd : jae 0xffffff80002af52f ; jne 0xffffff80002af4ce ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bbb03 : jae 0xffffff80002bbb0e ; call 0xffffff800028e159
0xffffff80002d3bf8 : jae 0xffffff80002d3c09 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ed129 : jae 0xffffff80002ed133 ; cmp rdi, rax ; jne 0xffffff80002ed13a ; pop rbp ; ret
0xffffff8000328fe2 : jae 0xffffff800032900d ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800033d169 : jae 0xffffff800033d15c ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80003523d1 : jae 0xffffff8000352412 ; mov rdi, r14 ; call 0xffffff800010e697
0xffffff8000352421 : jae 0xffffff8000352462 ; mov rdi, r14 ; call 0xffffff800010e697
0xffffff800035c82d : jae 0xffffff800035c83e ; mov eax, 4 ; pop rbp ; ret
0xffffff800035c84d : jae 0xffffff800035c85e ; mov eax, 4 ; pop rbp ; ret
0xffffff800038985b : jae 0xffffff8000389877 ; call qword ptr [rax]
0xffffff80003918f9 : jae 0xffffff80003918fe ; pop rbp ; ret
0xffffff8000393139 : jae 0xffffff8000393163 ; js 0xffffff8000393142 ; leave ; ret
0xffffff8000394e48 : jae 0xffffff8000394e4d ; pop rbp ; ret
0xffffff8000396152 : jae 0xffffff8000396165 ; mov byte ptr [rbx], r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003961b2 : jae 0xffffff80003961c5 ; mov byte ptr [rbx], r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003962d2 : jae 0xffffff80003962e5 ; mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396332 : jae 0xffffff8000396345 ; mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396392 : jae 0xffffff80003963a5 ; mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003963f2 : jae 0xffffff8000396405 ; mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396452 : jae 0xffffff8000396465 ; mov qword ptr [rbx], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003964b2 : jae 0xffffff80003964c5 ; mov qword ptr [rbx], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a609 : jae 0xffffff800039a60e ; pop rbp ; ret
0xffffff800039aa17 : jae 0xffffff800039aa1c ; pop rbp ; ret
0xffffff800039f32a : jae 0xffffff800039f334 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003ab1da : jae 0xffffff80003ab22d ; add esp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003b0b52 : jae 0xffffff80003b0b63 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b5cfb : jae 0xffffff80003b5d00 ; pop rbp ; ret
0xffffff80003c5d12 : jae 0xffffff80003c5d1a ; add dword ptr [rbp + 0x2f], esi ; pop rbp ; ret
0xffffff80003c5da5 : jae 0xffffff80003c5dae ; test eax, eax ; jne 0xffffff80003c5de1 ; pop rbp ; ret
0xffffff80003c7f88 : jae 0xffffff80003c7f8d ; pop rbp ; ret
0xffffff80003d3d07 : jae 0xffffff80003d3d16 ; inc edi ; mov eax, edi ; pop rbp ; ret
0xffffff80003d3d29 : jae 0xffffff80003d3d34 ; mov eax, edi ; pop rbp ; ret
0xffffff80003eae21 : jae 0xffffff80003eae34 ; mov dword ptr [rdx], 1 ; pop rbp ; ret
0xffffff800041e994 : jae 0xffffff800041e9f4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800041eedb : jae 0xffffff800041eea2 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000422acd : jae 0xffffff8000422add ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000437846 : jae 0xffffff8000437870 ; mov eax, 3 ; pop rbp ; ret
0xffffff800043785f : jae 0xffffff800043787c ; mov eax, 2 ; pop rbp ; ret
0xffffff80004a699b : jae 0xffffff80004a69bb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800050d837 : jae 0xffffff800050d86d ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800050f090 : jae 0xffffff800050f083 ; pop rbp ; ret
0xffffff80005398b3 : jae 0xffffff80005398d5 ; mov rdi, r12 ; mov rdx, r14 ; call rax
0xffffff800053a010 : jae 0xffffff800053a030 ; mov rdi, qword ptr [rbx + 0x28] ; call rax
0xffffff800054bfbe : jae 0xffffff800054bfe6 ; mov rdx, qword ptr [rbx + 0x28] ; call rax
0xffffff800054fdc1 : jae 0xffffff800054fe2d ; call rax
0xffffff800054ffb8 : jae 0xffffff800054ffc8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800055fe06 : jae 0xffffff800055fe2c ; lock add qword ptr [rdi + 0x30], rsi ; pop rbp ; ret
0xffffff8000596ce4 : jae 0xffffff8000596ca2 ; inc esi ; ret 0x4132
0xffffff80005a159c : jae 0xffffff80005a1576 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e6bb7 : jae 0xffffff80005e6bcc ; mov ebx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e6bdb
0xffffff80005e87b7 : jae 0xffffff80005e87cc ; mov ecx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e87db
0xffffff80006127be : jae 0xffffff80006127b8 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000656894 : jae 0xffffff80006568b7 ; mov rdi, r13 ; call rax
0xffffff8000656a29 : jae 0xffffff8000656aa7 ; ret
0xffffff8000664355 : jae 0xffffff80006643a4 ; add al, ch ; insb byte ptr [rdi], dx ; ret
0xffffff800066436f : jae 0xffffff80006643c0 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x63e8
0xffffff8000671b76 : jae 0xffffff8000671b75 ; call 0xffffff8000297b45
0xffffff80006747d9 : jae 0xffffff800067477d ; ret 0xebff
0xffffff8000695041 : jae 0xffffff8000694fcd ; add byte ptr [r8 + 1], r9b ; ret 0x8b48
0xffffff800069ee89 : jae 0xffffff800069eea0 ; dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80006ab359 : jae 0xffffff80006ab387 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c6d9c : jae 0xffffff80006c6d47 ; dec dword ptr [rax + 0x69] ; ret
0xffffff80006d0567 : jae 0xffffff80006d0543 ; pop rbp ; ret
0xffffff80006d0595 : jae 0xffffff80006d05a6 ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80006d15ed : jae 0xffffff80006d15b4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d6151 : jae 0xffffff80006d6199 ; add byte ptr [rax - 0x77], cl ; ret 0x4865
0xffffff80006d6150 : jae 0xffffff80006d619a ; add byte ptr [rax - 0x77], cl ; ret 0x4865
0xffffff80006dac01 : jae 0xffffff80006dac0e ; inc dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800072c17f : jae 0xffffff800072c153 ; pop rbp ; ret
0xffffff8000752f6b : jae 0xffffff8000752f74 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000767451 : jae 0xffffff8000767493 ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000392a49
0xffffff80007674d6 : jae 0xffffff8000767518 ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000393049
0xffffff800076b6cc : jae 0xffffff800076b72e ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff800076b7c9 : jae 0xffffff800076b845 ; ret 0x48ff
0xffffff80007727c9 : jae 0xffffff80007727d5 ; ret 0x48ff
0xffffff8000780349 : jae 0xffffff8000780369 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800079157a : jae 0xffffff80007915c4 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000791a88 : jae 0xffffff8000791ad0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000793354 : jae 0xffffff800079331b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007c2e02 : jae 0xffffff80007c2e6a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ea893 : jae 0xffffff80007ea890 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081b8ea : jae 0xffffff800081b8f2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081b95a : jae 0xffffff800081b962 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081b9ca : jae 0xffffff800081b9d2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008598e8 : jae 0xffffff80008598f5 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000865c5a : jae 0xffffff8000865c9a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000875866 : jae 0xffffff8000875877 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008808b4 : jae 0xffffff8000880910 ; call rax
0xffffff800088de75 : jae 0xffffff800088dea5 ; add al, ch ; ret
0xffffff8000896d5c : jae 0xffffff8000896d86 ; mov al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c3bca : jae 0xffffff80008c3bda ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c99c7 : jae 0xffffff80008c99e9 ; mov ebx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80008c99f8
0xffffff80008da814 : jae 0xffffff80008da85a ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e246c : jae 0xffffff80008e24b2 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e4bff : jae 0xffffff80008e4c45 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e4c79 : jae 0xffffff80008e4cbf ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e4cfe : jae 0xffffff80008e4d44 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e4d71 : jae 0xffffff80008e4db7 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008e71e9 : jae 0xffffff80008e7238 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b4582d : jae 0xffffff8000b458a6 ; ror byte ptr [rcx + 0x21], 1 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800025285a : jb 0xffffff8000252843 ; pop rbp ; ret
0xffffff80002674eb : jb 0xffffff80002674fa ; xor eax, eax ; pop rbp ; ret
0xffffff800027171e : jb 0xffffff8000271703 ; pop rbp ; ret
0xffffff8000271bc7 : jb 0xffffff8000271bf1 ; add rdx, 0x24 ; call 0xffffff800026de98
0xffffff800027c4ef : jb 0xffffff800027c4ea ; ret 0
0xffffff800029db1f : jb 0xffffff800029db29 ; add byte ptr [rax], al ; mov rsi, rbx ; call r15
0xffffff80002ade81 : jb 0xffffff80002ade32 ; pop rbp ; ret
0xffffff80002bbd69 : jb 0xffffff80002bbd81 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002dbe0b : jb 0xffffff80002dbe21 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002dc218 : jb 0xffffff80002dc222 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002dc6e8 : jb 0xffffff80002dc6f2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002dc6e7 : jb 0xffffff80002dc6f3 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002dcf18 : jb 0xffffff80002dcf22 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002dd398 : jb 0xffffff80002dd3a2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002df9d8 : jb 0xffffff80002df9e2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002dfe48 : jb 0xffffff80002dfe52 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e0858 : jb 0xffffff80002e0862 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e0c98 : jb 0xffffff80002e0ca2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e2fd8 : jb 0xffffff80002e2fe2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000350cef : jb 0xffffff8000350cd6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800036695a : jb 0xffffff8000366943 ; pop rbp ; ret
0xffffff8000367fce : jb 0xffffff8000367fd7 ; jne 0xffffff8000367fc7 ; xor eax, eax ; pop rbp ; ret
0xffffff800036808e : jb 0xffffff8000368097 ; jne 0xffffff8000368087 ; xor eax, eax ; pop rbp ; ret
0xffffff8000388143 : jb 0xffffff800038813d ; pop rbp ; ret
0xffffff800038813d : jb 0xffffff8000388143 ; lock bts dword ptr [rax], edi ; jb 0xffffff8000388143 ; pop rbp ; ret
0xffffff80003916a1 : jb 0xffffff800039169c ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003923bc : jb 0xffffff800039239e ; xor rax, rax ; pop r9 ; ret
0xffffff80003950bb : jb 0xffffff80003950cc ; mov dword ptr [rip + 0x769e69], edx ; pop rbp ; ret
0xffffff8000395106 : jb 0xffffff80003950f5 ; xor eax, eax ; pop rbp ; ret
0xffffff800039d3e5 : jb 0xffffff800039d447 ; pop r14 ; pop rbp ; ret
0xffffff800039f25d : jb 0xffffff800039f256 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039f738 : jb 0xffffff800039f713 ; pop rbp ; ret
0xffffff80003a2a83 : jb 0xffffff80003a2a88 ; pop rbp ; ret
0xffffff80003a2f82 : jb 0xffffff80003a2f8c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a31b8 : jb 0xffffff80003a31bd ; pop rbp ; ret
0xffffff80003a5418 : jb 0xffffff80003a5422 ; test edx, edx ; je 0xffffff80003a5427 ; in al, dx ; pop rbp ; ret
0xffffff80003a853f : jb 0xffffff80003a8546 ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff80003a853f : jb 0xffffff80003a8548 ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff80003a8569 : jb 0xffffff80003a856e ; pop rbp ; ret
0xffffff80003a85f6 : jb 0xffffff80003a8600 ; add byte ptr [rax], al ; mov rdi, rsi ; call rcx
0xffffff80003a8d89 : jb 0xffffff80003a8d94 ; shl edi, 4 ; mov eax, dword ptr [rax + rdi] ; pop rbp ; ret
0xffffff80003a8da9 : jb 0xffffff80003a8db4 ; shl edi, 4 ; mov dword ptr [rax + rdi], esi ; pop rbp ; ret
0xffffff80003a8df9 : jb 0xffffff80003a8e04 ; mov dword ptr [rax + 0x300], esi ; pop rbp ; ret
0xffffff80003a919c : jb 0xffffff80003a91a0 ; call rax
0xffffff80003a92b0 : jb 0xffffff80003a92b4 ; call rax
0xffffff80003a9d89 : jb 0xffffff80003a9d8e ; pop rbp ; ret
0xffffff80003a9ea4 : jb 0xffffff80003a9e83 ; pop rbp ; ret
0xffffff80003aade7 : jb 0xffffff80003aadeb ; call rax
0xffffff80003ac00c : jb 0xffffff80003ac010 ; call rax
0xffffff80003ac108 : jb 0xffffff80003ac10c ; call rax
0xffffff80003ac1f8 : jb 0xffffff80003ac1fc ; call rax
0xffffff80003acfcc : jb 0xffffff80003acfd7 ; mov rax, qword ptr [rip + 0x6a40ab] ; call qword ptr [rax]
0xffffff80003ad52a : jb 0xffffff80003ad535 ; mov rax, qword ptr [rip + 0x6a3b4d] ; call qword ptr [rax]
0xffffff80003b090f : jb 0xffffff80003b0919 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b180a : jb 0xffffff80003b1812 ; jmp 0xffffff80003b181b
0xffffff80003b1c7c : jb 0xffffff80003b1c84 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003b1cd6 : jb 0xffffff80003b1cdb ; pop rbp ; ret
0xffffff80003b1cde : jb 0xffffff80003b1ce3 ; pop rbp ; ret
0xffffff80003e71d2 : jb 0xffffff80003e71db ; xor eax, eax ; pop rbp ; ret
0xffffff80003e7222 : jb 0xffffff80003e722b ; xor eax, eax ; pop rbp ; ret
0xffffff80003fd0ca : jb 0xffffff80003fd12e ; stc ; inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff800042965a : jb 0xffffff800042968f ; jmp 0xffffff8000429623
0xffffff800043795b : jb 0xffffff8000437966 ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff800044cca9 : jb 0xffffff800044ccc7 ; jmp 0xffffff800044d30a
0xffffff8000451ecf : jb 0xffffff8000451edc ; movzx eax, si ; pop rbp ; ret
0xffffff800049e17b : jb 0xffffff800049e1e8 ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80004a165b : jb 0xffffff80004a1645 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004ab0ad : jb 0xffffff80004ab0a5 ; sub eax, edx ; pop rbp ; ret
0xffffff800053235f : jb 0xffffff800053236a ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000541627 : jb 0xffffff8000541607 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005620aa : jb 0xffffff80005620fd ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800056451f : jb 0xffffff800056452f ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800056476f : jb 0xffffff800056477f ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800057f11e : jb 0xffffff800057f11a ; mov rax, rcx ; pop rbp ; ret
0xffffff800062627e : jb 0xffffff8000626287 ; xor eax, eax ; pop rbp ; ret
0xffffff8000630e93 : jb 0xffffff8000630eb2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800064de1d : jb 0xffffff800064de8c ; jmp 0xffffff800064de87
0xffffff800064ec2a : jb 0xffffff800064ec26 ; ret
0xffffff800065133a : jb 0xffffff800065130c ; ret
0xffffff800065373e : jb 0xffffff800065379a ; xor eax, 0xe8c03100 ; push rdi ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000663067 : jb 0xffffff8000663013 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff800066382a : jb 0xffffff80006637da ; ret 0x49ff
0xffffff8000682017 : jb 0xffffff8000682008 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000682016 : jb 0xffffff8000682009 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d796b : jb 0xffffff80006d79b7 ; add byte ptr [rax - 0x77], cl ; ret 0x6ae8
0xffffff800071cd7d : jb 0xffffff800071cd73 ; pop rbp ; ret
0xffffff800072bf3f : jb 0xffffff800072bf04 ; pop rbx ; pop rbp ; ret
0xffffff80007530ac : jb 0xffffff80007530b5 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007608ca : jb 0xffffff80007608f5 ; ret
0xffffff80007675e2 : jb 0xffffff8000767624 ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000392a49
0xffffff800076c4ca : jb 0xffffff800076c533 ; ret 0x4dff
0xffffff800076d4ca : jb 0xffffff800076d529 ; ret 0xbeff
0xffffff8000772c0a : jb 0xffffff8000772c4d ; ret 0x4cff
0xffffff800078624a : jb 0xffffff800078620b ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff800078ca30 : jb 0xffffff800078ca39 ; xor eax, eax ; pop rbp ; ret
0xffffff800079a13a : jb 0xffffff800079a136 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800079a139 : jb 0xffffff800079a137 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007a7c6f : jb 0xffffff80007a7c72 ; push rsi ; ret
0xffffff80007cf22a : jb 0xffffff80007cf1e1 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007d8f83 : jb 0xffffff80007d8fad ; xor esi, esi ; mov rdi, r12 ; call 0xffffff80007b51f9
0xffffff80007f5ed3 : jb 0xffffff80007f5ed2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081ba3a : jb 0xffffff800081ba42 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081baaa : jb 0xffffff800081bab2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000829c32 : jb 0xffffff8000829c13 ; pop rbp ; ret
0xffffff800082cbac : jb 0xffffff800082cba8 ; cmp ecx, eax ; setb al ; pop rbp ; ret
0xffffff800083b6e0 : jb 0xffffff800083b6d3 ; pop rbp ; ret
0xffffff800083b997 : jb 0xffffff800083b949 ; pop rbp ; ret
0xffffff800083b9d7 : jb 0xffffff800083b9c3 ; pop rbp ; ret
0xffffff800083ba17 : jb 0xffffff800083ba03 ; pop rbp ; ret
0xffffff800083ba87 : jb 0xffffff800083ba73 ; pop rbp ; ret
0xffffff800083baf7 : jb 0xffffff800083bab3 ; pop rbp ; ret
0xffffff800083d75d : jb 0xffffff800083d6ed ; mov edx, eax ; jmp 0xffffff800083d76a
0xffffff8000848381 : jb 0xffffff8000848344 ; add eax, 0xf6000000 ; ret
0xffffff800085ba65 : jb 0xffffff800085ba69 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800087bde2 : jb 0xffffff800087bd99 ; push rsi ; ret
0xffffff80008aa1c1 : jb 0xffffff80008aa1be ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008f2ee1 : jb 0xffffff80008f2e38 ; call 0xffffff80008ef1d8
0xffffff8000256acf : jbe 0xffffff8000256add ; add byte ptr [rax + 5], bh ; pop rbp ; ret
0xffffff8000256aef : jbe 0xffffff8000256afd ; add byte ptr [rax + 5], bh ; pop rbp ; ret
0xffffff8000265376 : jbe 0xffffff800026532a ; add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002653f9 ; call rax
0xffffff800026db07 : jbe 0xffffff800026db18 ; mov qword ptr [rsi + 0x10], rsi ; pop rbp ; ret
0xffffff800026db0b : jbe 0xffffff800026db20 ; pop rbp ; ret
0xffffff800026e237 : jbe 0xffffff800026e242 ; xor eax, eax ; pop rbp ; ret
0xffffff800027fcc6 : jbe 0xffffff800027fcf1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800027fd2a : jbe 0xffffff800027fd31 ; pop rbp ; ret
0xffffff80002cb091 : jbe 0xffffff80002cb096 ; pop rbp ; ret
0xffffff80002cb0bb : jbe 0xffffff80002cb0c0 ; pop rbp ; ret
0xffffff80002d5fb1 : jbe 0xffffff80002d5f86 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d6064 : jbe 0xffffff80002d6046 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d6112 : jbe 0xffffff80002d60f6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002dc49c : jbe 0xffffff80002dc4d0 ; call rax
0xffffff80002f69ca : jbe 0xffffff80002f69f5 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002f8610 : jbe 0xffffff80002f8621 ; mov eax, 1 ; pop rbp ; ret
0xffffff80002fa8a4 : jbe 0xffffff80002fa8af ; xor eax, eax ; pop rbp ; ret
0xffffff80002ffd2a : jbe 0xffffff80002ffd55 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000315bc9 : jbe 0xffffff8000315bd2 ; xor eax, eax ; pop rbp ; ret
0xffffff80003381aa : jbe 0xffffff80003381b7 ; movzx eax, al ; pop rbp ; ret
0xffffff8000367732 : jbe 0xffffff8000367737 ; pop rbp ; ret
0xffffff8000367968 : jbe 0xffffff800036796d ; pop rbp ; ret
0xffffff80003679f0 : jbe 0xffffff80003679fb ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000367f28 : jbe 0xffffff8000367f2d ; pop rbp ; ret
0xffffff8000367fe8 : jbe 0xffffff8000367fed ; pop rbp ; ret
0xffffff8000368288 : jbe 0xffffff800036828d ; pop rbp ; ret
0xffffff8000368287 : jbe 0xffffff800036828e ; pop rbp ; ret
0xffffff8000368286 : jbe 0xffffff800036828f ; pop rbp ; ret
0xffffff8000368308 : jbe 0xffffff800036830d ; pop rbp ; ret
0xffffff8000368307 : jbe 0xffffff800036830e ; pop rbp ; ret
0xffffff8000368388 : jbe 0xffffff800036838d ; pop rbp ; ret
0xffffff8000368387 : jbe 0xffffff800036838e ; pop rbp ; ret
0xffffff8000368386 : jbe 0xffffff800036838f ; pop rbp ; ret
0xffffff8000369e38 : jbe 0xffffff8000369e3d ; pop rbp ; ret
0xffffff800036b088 : jbe 0xffffff800036b08d ; pop rbp ; ret
0xffffff800036b087 : jbe 0xffffff800036b08e ; pop rbp ; ret
0xffffff800036b086 : jbe 0xffffff800036b08f ; pop rbp ; ret
0xffffff8000387ee5 : jbe 0xffffff8000387ed9 ; movzx eax, dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000388224 : jbe 0xffffff800038828c ; add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0xa], 0x41 ; call rdi
0xffffff80003934fc : jbe 0xffffff8000393504 ; mov cr3, rcx ; pop rbp ; ret
0xffffff8000393f98 : jbe 0xffffff8000393f9c ; call qword ptr [rax]
0xffffff8000394edb : jbe 0xffffff8000394ee5 ; mov eax, 1 ; pop rbp ; ret
0xffffff8000394fe8 : jbe 0xffffff8000394fed ; pop rbp ; ret
0xffffff8000394fe2 : jbe 0xffffff8000394ff3 ; mov dword ptr [rip + 0x769f4a], ecx ; pop rbp ; ret
0xffffff8000395025 : jbe 0xffffff800039502f ; mov eax, 1 ; pop rbp ; ret
0xffffff80003950c1 : jbe 0xffffff80003950c6 ; pop rbp ; ret
0xffffff800039a223 : jbe 0xffffff800039a228 ; pop rbp ; ret
0xffffff800039a222 : jbe 0xffffff800039a229 ; pop rbp ; ret
0xffffff800039a239 : jbe 0xffffff800039a243 ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff800039a238 : jbe 0xffffff800039a244 ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80003aad49 : jbe 0xffffff80003aadc2 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80003b39c9 : jbe 0xffffff80003b3950 ; ret
0xffffff80003fb3e7 : jbe 0xffffff80003fb3ea ; inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff800040c776 : jbe 0xffffff800040c7ec ; add al, ch ; ret 0xf868
0xffffff8000451820 : jbe 0xffffff800045183a ; test rsi, rsi ; jne 0xffffff8000451818 ; pop rbp ; ret
0xffffff80004600d7 : jbe 0xffffff800046014b ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff800051eea2 : jbe 0xffffff800051eebb ; mov edx, 3 ; call rax
0xffffff800053b5ec : jbe 0xffffff800053b60b ; mov rdi, rbx ; call rax
0xffffff800053b607 : jbe 0xffffff800053b626 ; mov rdi, rbx ; call rax
0xffffff80005492bf : jbe 0xffffff80005492c6 ; pop rbp ; ret
0xffffff800055eeb6 : jbe 0xffffff800055eed2 ; mov rdx, qword ptr [rbp - 0x50] ; call rcx
0xffffff800055fc53 : jbe 0xffffff800055fc6f ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff8000569964 : jbe 0xffffff80005699ae ; mov edi, dword ptr [rsi + 0x7e] ; xor esi, esi ; call rax
0xffffff8000591f3c : jbe 0xffffff8000591f5b ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000591f78 : jbe 0xffffff8000591f97 ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80005cd415 : jbe 0xffffff80005cd43a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005cd414 : jbe 0xffffff80005cd43b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005f443e : jbe 0xffffff80005f4459 ; push rsp ; add byte ptr [rbp - 0x75], cl ; insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff800061a8f0 : jbe 0xffffff800061a8fd ; mov dword ptr [rsi + 0x14], r8d ; pop rbp ; ret
0xffffff8000630af3 : jbe 0xffffff8000630b12 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065d5a2 : jbe 0xffffff800065d5ae ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000663436 : jbe 0xffffff80006633e7 ; ret 0x49ff
0xffffff8000673674 : jbe 0xffffff80006736b1 ; ret 0x840f
0xffffff8000674653 : jbe 0xffffff8000674652 ; call 0xffffff8000297b45
0xffffff8000676cbf : jbe 0xffffff8000676cc5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800069bf02 : jbe 0xffffff800069bef4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006abf56 : jbe 0xffffff80006abf78 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80006b43f9 : jbe 0xffffff80006b440a ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80006d04fa : jbe 0xffffff80006d050b ; mov eax, 1 ; pop rbp ; ret
0xffffff80007163da : jbe 0xffffff80007163eb ; mov eax, 1 ; pop rbp ; ret
0xffffff8000719306 : jbe 0xffffff8000719316 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800075f0c6 : jbe 0xffffff800075f109 ; ret
0xffffff8000762c9d : jbe 0xffffff8000762ca5 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000764c93 : jbe 0xffffff8000764ca4 ; mov eax, 0x16 ; pop rbp ; ret
0xffffff8000795303 : jbe 0xffffff80007952fd ; ret 0x7501
0xffffff800079840b : jbe 0xffffff800079841c ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007a1224 : jbe 0xffffff80007a11de ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007d190a : jbe 0xffffff80007d1915 ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff80007e04da : jbe 0xffffff80007e04eb ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007e0faa : jbe 0xffffff80007e0fbb ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007e313a : jbe 0xffffff80007e314b ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007f0a89 : jbe 0xffffff80007f0a9a ; mov eax, 0x16 ; pop rbp ; ret
0xffffff8000815563 : jbe 0xffffff8000815583 ; test esi, esi ; je 0xffffff8000815571 ; call rax
0xffffff80008197b7 : jbe 0xffffff8000819773 ; dec dword ptr [rax + 0x63] ; ret
0xffffff800082fb20 : jbe 0xffffff800082fb3d ; pop rbp ; jmp rax
0xffffff800082ff70 : jbe 0xffffff800082ff8d ; pop rbp ; jmp rax
0xffffff8000830eb0 : jbe 0xffffff8000830ecd ; pop rbp ; jmp rax
0xffffff8000888be6 : jbe 0xffffff8000888c1b ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008917ee : jbe 0xffffff800089185b ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800089534d : jbe 0xffffff800089536f ; add byte ptr [rbp + 0x31], al ; div bh ; ret
0xffffff80008a9bd2 : jbe 0xffffff80008a9bd1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c9f77 : jbe 0xffffff80008c9f99 ; mov ecx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80008c9fa8
0xffffff80008d174e : jbe 0xffffff80008d1799 ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff80008e696e : jbe 0xffffff80008e699b ; adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e74be : jbe 0xffffff80008e74e4 ; adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008f0c9c : jbe 0xffffff80008f0c9e ; call 0xffffff8000297b48
0xffffff80009001ef : jbe 0xffffff8000900219 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900208 : jbe 0xffffff8000900236 ; add bl, ch ; add eax, 0xff001f0f ; ret
0xffffff80009002b9 : jbe 0xffffff80009002e3 ; add byte ptr [rax - 1], cl ; ret
0xffffff80002588ba : je 0xffffff80002588c7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025a1f0 : je 0xffffff800025a1fd ; call rax
0xffffff800025ce65 : je 0xffffff800025ce72 ; call rax
0xffffff800025d070 : je 0xffffff800025d07a ; mov edi, ebx ; call rax
0xffffff80002632bd : je 0xffffff8000263312 ; call rax
0xffffff8000263a0f : je 0xffffff8000263a18 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80002649ed : je 0xffffff80002649fd ; mov edi, 1 ; call rax
0xffffff8000264da8 : je 0xffffff8000264df2 ; call rax
0xffffff800026537d : je 0xffffff80002653f2 ; call rax
0xffffff800026559a : je 0xffffff80002655a4 ; xor edi, edi ; call rax
0xffffff80002656c3 : je 0xffffff8000265715 ; call rax
0xffffff8000265a25 : je 0xffffff8000265a6d ; call rax
0xffffff8000265c55 : je 0xffffff8000265ca2 ; call rax
0xffffff8000266138 : je 0xffffff8000266185 ; call rax
0xffffff80002661c3 : je 0xffffff8000266215 ; call rax
0xffffff80002667d0 : je 0xffffff80002667ea ; xor eax, eax ; pop rbp ; ret
0xffffff8000266a7f : je 0xffffff8000266a90 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000269372 : je 0xffffff80002693f1 ; xor byte ptr [rcx - 0x75], al ; push rbp ; sub byte ptr [rcx], bh ; ret 0xc75
0xffffff8000269371 : je 0xffffff80002693f2 ; xor byte ptr [rcx - 0x75], al ; push rbp ; sub byte ptr [rcx], bh ; ret 0xc75
0xffffff800026a78a : je 0xffffff800026a7a5 ; mov ah, 0x83 ; ret 0x481c
0xffffff800026a89d : je 0xffffff800026a82a ; ret 0x2b41
0xffffff800026a89c : je 0xffffff800026a82b ; ret 0x2b41
0xffffff800026b567 : je 0xffffff800026b578 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002723bd : je 0xffffff80002723ce ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000273b88 : je 0xffffff8000273b93 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff8000273b9e : je 0xffffff8000273bad ; mov eax, 2 ; pop rbp ; ret
0xffffff800027fe58 : je 0xffffff800027fe65 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800027fecd : je 0xffffff800027feda ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028048d : je 0xffffff800028049e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028376e : je 0xffffff8000283775 ; pop rbp ; ret
0xffffff8000287780 : je 0xffffff800028778b ; mov eax, dword ptr [rcx + 0x2c] ; pop rbp ; ret
0xffffff80002882ff : je 0xffffff800028832d ; mov edi, r12d ; mov rsi, rbx ; call rcx
0xffffff8000288457 : je 0xffffff8000288463 ; mov rdi, r15 ; call rax
0xffffff8000288c24 : je 0xffffff8000288c32 ; mov rdi, qword ptr [r15 + 0x20] ; call rax
0xffffff8000288df4 : je 0xffffff8000288e02 ; mov rdi, qword ptr [rbx + 0x20] ; call rax
0xffffff8000288fef : je 0xffffff8000288ffb ; call rcx
0xffffff800028a6fe : je 0xffffff800028a712 ; call rax
0xffffff800028a76f : je 0xffffff800028a77b ; call rcx
0xffffff800028a854 : je 0xffffff800028a85d ; xor eax, eax ; pop rbp ; ret
0xffffff800028a8a4 : je 0xffffff800028a8ad ; xor eax, eax ; pop rbp ; ret
0xffffff800028af7e : je 0xffffff800028af89 ; cli ; mov rdi, r15 ; call 0xffffff8000397208
0xffffff800028bc7a : je 0xffffff800028bca5 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028bd2a : je 0xffffff800028bd55 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028c85e : je 0xffffff800028c869 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800028c85d : je 0xffffff800028c86a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800028e042 : je 0xffffff800028e056 ; mov rdi, r13 ; mov rsi, r15 ; call r14
0xffffff800028ef04 : je 0xffffff800028ef14 ; mov esi, 1 ; call rax
0xffffff800028f7f5 : je 0xffffff800028f804 ; mov eax, 5 ; pop rbp ; ret
0xffffff8000293c24 : je 0xffffff8000293c4b ; mov edi, r14d ; mov rdx, r12 ; call r15
0xffffff8000298c4c : je 0xffffff8000298c5d ; lock inc dword ptr [rdi + 0x10] ; xor eax, eax ; pop rbp ; ret
0xffffff8000298c6c : je 0xffffff8000298c77 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800029aeaa : je 0xffffff800029aeb7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029c7f0 : je 0xffffff800029c804 ; mov edi, dword ptr [r12 + 0x4c] ; xor esi, esi ; call rax
0xffffff800029d44e : je 0xffffff800029d456 ; pop rbp ; jmp rax
0xffffff800029db14 : je 0xffffff800029db1e ; add byte ptr [rax], al ; mov rsi, rbx ; call r15
0xffffff800029e931 : je 0xffffff800029e942 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029e97a : je 0xffffff800029e981 ; pop rbp ; ret
0xffffff800029ea06 : je 0xffffff800029ea17 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029ea96 : je 0xffffff800029eaa7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029f20a : je 0xffffff800029f21b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029f27c : je 0xffffff800029f289 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a14bd : je 0xffffff80002a14d5 ; nop ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80002a1510 : je 0xffffff80002a151f ; mov eax, 3 ; pop rbp ; ret
0xffffff80002a16fd : je 0xffffff80002a1709 ; mov al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff80002a635d : je 0xffffff80002a6389 ; mov rbx, r8 ; call rcx
0xffffff80002a8045 : je 0xffffff80002a8056 ; inc dword ptr [rdi + 0xad4] ; pop rbp ; ret
0xffffff80002a9830 : je 0xffffff80002a983f ; mov eax, 3 ; pop rbp ; ret
0xffffff80002a99fb : je 0xffffff80002a9a07 ; mov al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff80002aace0 : je 0xffffff80002aacef ; mov eax, 3 ; pop rbp ; ret
0xffffff80002ac2dd : je 0xffffff80002ac2e9 ; mov al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff80002ace02 : je 0xffffff80002acdb4 ; mov rdx, r14 ; call 0xffffff8000299028
0xffffff80002ae862 : je 0xffffff80002ae86b ; xor eax, eax ; pop rbp ; ret
0xffffff80002ae897 : je 0xffffff80002ae8a0 ; call rax
0xffffff80002b009f : je 0xffffff80002b00ab ; call rcx
0xffffff80002b034f : je 0xffffff80002b035b ; call rcx
0xffffff80002b05b8 : je 0xffffff80002b05be ; call rax
0xffffff80002b0c1f : je 0xffffff80002b0c2c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b204c : je 0xffffff80002b2055 ; call rax
0xffffff80002b25bb : je 0xffffff80002b262f ; call rax
0xffffff80002b2697 : je 0xffffff80002b26a0 ; call rax
0xffffff80002b3cca : je 0xffffff80002b3cd7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b466c : je 0xffffff80002b467d ; mov eax, dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff80002b4c2b : je 0xffffff80002b4c32 ; pop rbp ; ret
0xffffff80002b762c : je 0xffffff80002b763b ; mov qword ptr [rdx], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff80002b93a0 : je 0xffffff80002b93b1 ; mov eax, dword ptr [rcx + 0x7c] ; and eax, 1 ; pop rbp ; ret
0xffffff80002baa70 : je 0xffffff80002baa81 ; mov eax, dword ptr [rcx + 0x7c] ; and eax, 1 ; pop rbp ; ret
0xffffff80002bad6e : je 0xffffff80002bad7d ; or byte ptr [rsi + 2], 0x80 ; xor eax, eax ; pop rbp ; ret
0xffffff80002be727 : je 0xffffff80002be72e ; pop rbp ; ret
0xffffff80002c0939 : je 0xffffff80002c094a ; mov eax, dword ptr [rdi + 0x35c] ; pop rbp ; ret
0xffffff80002c0988 : je 0xffffff80002c0993 ; mov eax, dword ptr [rcx + 0x4c] ; pop rbp ; ret
0xffffff80002c09d9 : je 0xffffff80002c09e6 ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80002c0a47 : je 0xffffff80002c0a58 ; mov dword ptr [rdi + 0x35c], esi ; pop rbp ; ret
0xffffff80002c0bda : je 0xffffff80002c0be7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c207d : je 0xffffff80002c2084 ; pop rbp ; ret
0xffffff80002cd19d : je 0xffffff80002cd1aa ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80002d0891 : je 0xffffff80002d08a3 ; mov rdi, r14 ; mov rsi, r13 ; call rax
0xffffff80002d10c5 : je 0xffffff80002d10d4 ; mov eax, 1 ; pop rbp ; ret
0xffffff80002db706 : je 0xffffff80002db767 ; ret
0xffffff80002db705 : je 0xffffff80002db768 ; ret
0xffffff80002dc280 : je 0xffffff80002dc28d ; call rax
0xffffff80002dc755 : je 0xffffff80002dc762 ; call rax
0xffffff80002dcf7d : je 0xffffff80002dcf8a ; call rax
0xffffff80002dd400 : je 0xffffff80002dd40d ; call rax
0xffffff80002dfa45 : je 0xffffff80002dfa52 ; call rax
0xffffff80002dfeb0 : je 0xffffff80002dfebd ; call rax
0xffffff80002e08bd : je 0xffffff80002e08ca ; call rax
0xffffff80002e0d00 : je 0xffffff80002e0d0d ; call rax
0xffffff80002e3040 : je 0xffffff80002e304d ; call rax
0xffffff80002e5730 : je 0xffffff80002e573d ; call rax
0xffffff80002e70c0 : je 0xffffff80002e70cd ; call rax
0xffffff80002e7775 : je 0xffffff80002e7782 ; call rax
0xffffff80002e7b00 : je 0xffffff80002e7b0d ; call rax
0xffffff80002e8420 : je 0xffffff80002e842d ; call rax
0xffffff80002e9120 : je 0xffffff80002e912d ; call rax
0xffffff80002e9798 : je 0xffffff80002e979d ; pop rbp ; ret
0xffffff80002ea437 : je 0xffffff80002ea43c ; pop rbp ; ret
0xffffff80002ebe39 : je 0xffffff80002ebe43 ; cmp rdi, rax ; jne 0xffffff80002ebe4a ; pop rbp ; ret
0xffffff80002ed676 : je 0xffffff80002ed686 ; call 0xffffff80002779e9
0xffffff80002edaf3 : je 0xffffff80002edafe ; mov dword ptr [rcx + 0x48], edi ; pop rbp ; ret
0xffffff80002ee00d : je 0xffffff80002ee01a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ee4b0 : je 0xffffff80002ee4bd ; call rax
0xffffff80002eecb0 : je 0xffffff80002eecbd ; call rax
0xffffff80002ef8f0 : je 0xffffff80002ef8fd ; call rax
0xffffff80002f2900 : je 0xffffff80002f290d ; call rax
0xffffff80002f4a90 : je 0xffffff80002f4a9d ; call rax
0xffffff80002f7c7f : je 0xffffff80002f7c90 ; mov eax, 4 ; pop rbp ; ret
0xffffff80002fdefa : je 0xffffff80002fdf07 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002fed77 : je 0xffffff80002fed86 ; mov eax, 1 ; pop rbp ; ret
0xffffff80002ffd97 : je 0xffffff80002ffda4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000303548 : je 0xffffff8000303559 ; mov dword ptr [rsi], 1 ; pop rbp ; ret
0xffffff80003037ff : je 0xffffff8000303807 ; pop rbp ; jmp rax
0xffffff8000311352 : je 0xffffff800031137d ; sbb byte ptr [rsi - 9], ah ; ret
0xffffff800031f16f : je 0xffffff800031f182 ; inc dword ptr [rip + 0x7da6b1] ; pop rbp ; ret
0xffffff800031f22c : je 0xffffff800031f237 ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff800033437f : je 0xffffff800033438c ; ret 0x2475
0xffffff80003343e7 : je 0xffffff80003343f4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000337a39 : je 0xffffff8000337a4a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000338cfc : je 0xffffff8000338d0b ; mov eax, 1 ; pop rbp ; ret
0xffffff80003403c7 : je 0xffffff80003403ce ; pop rbp ; ret
0xffffff80003420fc : je 0xffffff8000342162 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800034bfd8 : je 0xffffff800034c004 ; hlt ; inc dword ptr [rcx - 0x75] ; cmp al, 0xe9 ; ret 1
0xffffff800034f32a : je 0xffffff800034f33b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800034fb37 : je 0xffffff800034fb48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800035242d : je 0xffffff8000352413 ; jmp 0xffffff80003523f7
0xffffff8000359277 : je 0xffffff8000359288 ; xor ecx, ecx ; pop rbp ; jmp 0xffffff8000315577
0xffffff8000359297 : je 0xffffff80003592a8 ; xor ecx, ecx ; pop rbp ; jmp 0xffffff8000315577
0xffffff8000359d31 : je 0xffffff8000359d42 ; mov eax, 0x16 ; pop rbp ; ret
0xffffff800035daa0 : je 0xffffff800035daad ; call rax
0xffffff8000365ad2 : je 0xffffff8000365ad8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000366c9b : je 0xffffff8000366c83 ; pop rbp ; ret
0xffffff8000367630 : je 0xffffff800036763c ; mov rdi, rbx ; call rax
0xffffff800036aff0 : je 0xffffff800036affc ; xor edi, 1 ; call rax
0xffffff800036ed86 : je 0xffffff800036edc0 ; or al, 0xe8 ; ret 0xd9f2
0xffffff8000375d4e : je 0xffffff8000375d64 ; mov rdi, qword ptr [r14 + 0x10] ; call rax
0xffffff8000375e32 : je 0xffffff8000375e3f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000375e40 : je 0xffffff8000375e56 ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0xffffff8000376486 : je 0xffffff800037649c ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff800037653e : je 0xffffff8000376554 ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff8000376866 : je 0xffffff800037687f ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0xffffff80003768b6 : je 0xffffff80003768cc ; mov rdi, qword ptr [r13 + 0x10] ; call rax
0xffffff80003769a2 : je 0xffffff80003769bb ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0xffffff800038aeee : je 0xffffff800038aef7 ; xor eax, eax ; pop rbp ; ret
0xffffff800038af64 : je 0xffffff800038af6d ; xor eax, eax ; pop rbp ; ret
0xffffff800038afd4 : je 0xffffff800038afdd ; xor eax, eax ; pop rbp ; ret
0xffffff800038b1cb : je 0xffffff800038b1d4 ; xor eax, eax ; pop rbp ; ret
0xffffff800038db39 : je 0xffffff800038db3e ; pop rbp ; ret
0xffffff800038db38 : je 0xffffff800038db3f ; pop rbp ; ret
0xffffff800038dfb9 : je 0xffffff800038dfc2 ; mov rax, qword ptr [rax + 0x60] ; pop rbp ; ret
0xffffff800038e039 : je 0xffffff800038e042 ; movzx eax, byte ptr [rax + 0x4c] ; pop rbp ; ret
0xffffff800038e089 : je 0xffffff800038e094 ; mov eax, dword ptr [rax + 0x1a0] ; pop rbp ; ret
0xffffff800038e0d9 : je 0xffffff800038e0e4 ; mov eax, dword ptr [rax + 0xf8] ; pop rbp ; ret
0xffffff800038e129 : je 0xffffff800038e134 ; mov eax, dword ptr [rax + 0xfc] ; pop rbp ; ret
0xffffff80003903c0 : je 0xffffff80003903c8 ; call rax
0xffffff8000390738 : je 0xffffff800039073d ; pop rbp ; ret
0xffffff80003907a9 : je 0xffffff80003907b4 ; mov eax, dword ptr [rcx + 0x1c] ; pop rbp ; ret
0xffffff80003907e9 : je 0xffffff80003907f6 ; movzx eax, byte ptr [rcx + 0x11] ; pop rbp ; ret
0xffffff800039096d : je 0xffffff8000390979 ; mov rdi, rbx ; call rax
0xffffff8000390b76 : je 0xffffff8000390b8d ; lea rdi, [r13 + 0x148] ; call rax
0xffffff80003925ec : je 0xffffff80003925d4 ; xor eax, eax ; ret
0xffffff80003928d3 : je 0xffffff80003928ef ; leave ; ret
0xffffff8000393248 : je 0xffffff8000393253 ; add byte ptr [rax], al ; popfq ; xor rax, rax ; ret
0xffffff8000393ebd : je 0xffffff8000393ec3 ; call rax
0xffffff80003952ab : je 0xffffff80003952a8 ; bsf eax, eax ; or eax, ecx ; pop rbp ; ret
0xffffff80003952c8 : je 0xffffff80003952d7 ; bsf eax, edi ; inc eax ; pop rbp ; ret
0xffffff800039718a : je 0xffffff8000397197 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000397628 : je 0xffffff8000397635 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000399913 : je 0xffffff800039991d ; cli ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a1734 : je 0xffffff80003a173b ; pop rbp ; ret
0xffffff80003a21d7 : je 0xffffff80003a21df ; pop rbp ; jmp rax
0xffffff80003a25ea : je 0xffffff80003a2609 ; call rax
0xffffff80003a2653 : je 0xffffff80003a265b ; pop rbp ; jmp rax
0xffffff80003a2846 : je 0xffffff80003a284e ; pop rbp ; jmp rax
0xffffff80003a28c7 : je 0xffffff80003a28cf ; pop rbp ; jmp rax
0xffffff80003a28fa : je 0xffffff80003a2902 ; pop rbp ; jmp rax
0xffffff80003a292a : je 0xffffff80003a2932 ; pop rbp ; jmp rax
0xffffff80003a2972 : je 0xffffff80003a2978 ; call rcx
0xffffff80003a29a2 : je 0xffffff80003a29a8 ; call rcx
0xffffff80003a29c7 : je 0xffffff80003a29cf ; pop rbp ; jmp rax
0xffffff80003a29f3 : je 0xffffff80003a29fb ; pop rbp ; jmp rax
0xffffff80003a2a17 : je 0xffffff80003a2a1f ; pop rbp ; jmp rax
0xffffff80003a2a7a : je 0xffffff80003a2a82 ; pop rbp ; jmp rax
0xffffff80003a2ad8 : je 0xffffff80003a2afd ; mov esi, eax ; call rcx
0xffffff80003a2d53 : je 0xffffff80003a2d5b ; pop rbp ; jmp rax
0xffffff80003a2f5f : je 0xffffff80003a2f73 ; call rax
0xffffff80003a2fca : je 0xffffff80003a2fd7 ; lock inc dword ptr [rcx] ; pop rbp ; ret
0xffffff80003a3052 : je 0xffffff80003a305f ; call rax
0xffffff80003a3ddd : je 0xffffff80003a3de8 ; mov dword ptr [rax + 0x48], edi ; pop rbp ; ret
0xffffff80003a41bd : je 0xffffff80003a41c8 ; mov dword ptr [rax + 0x2c], edi ; pop rbp ; ret
0xffffff80003a41f7 : je 0xffffff80003a4202 ; mov dword ptr [rcx + 0x30], eax ; pop rbp ; ret
0xffffff80003a541c : je 0xffffff80003a5423 ; in al, dx ; pop rbp ; ret
0xffffff80003a5727 : je 0xffffff80003a5737 ; mov edi, 1 ; call rax
0xffffff80003a85b0 : je 0xffffff80003a875f ; mov rdi, rsi ; call rax
0xffffff80003a8713 : je 0xffffff80003a8771 ; mov rdi, rsi ; call rax
0xffffff80003a85f4 : je 0xffffff80003a8775 ; mov rdi, rsi ; call rcx
0xffffff80003a8a1f : je 0xffffff80003a8a30 ; mov eax, 1 ; pop rbp ; ret
0xffffff80003a91f9 : je 0xffffff80003a9217 ; mov esi, 2 ; call rax
0xffffff80003a92a9 : je 0xffffff80003a92bd ; mov rdi, qword ptr [rip + 0x728906] ; call rax
0xffffff80003aa149 : je 0xffffff80003aa155 ; mov rdi, r14 ; call rbx
0xffffff80003aa153 : je 0xffffff80003aa161 ; mov rdi, r14 ; call r15
0xffffff80003aade0 : je 0xffffff80003aadf4 ; mov rdi, qword ptr [rip + 0x726dcf] ; call rax
0xffffff80003ab3ab : je 0xffffff80003ab3bb ; mov esi, 2 ; call rax
0xffffff80003ab730 : je 0xffffff80003ab740 ; mov esi, 1 ; call rax
0xffffff80003ab86f : je 0xffffff80003ab87b ; call rcx
0xffffff80003ab909 : je 0xffffff80003aba94 ; call rcx
0xffffff80003abb40 : je 0xffffff80003abb57 ; mov esi, 2 ; call rax
0xffffff80003abcaa : je 0xffffff80003abcba ; mov esi, 2 ; call rax
0xffffff80003abea5 : je 0xffffff80003abeb5 ; mov esi, 1 ; call rax
0xffffff80003ac005 : je 0xffffff80003ac019 ; mov rdi, qword ptr [rip + 0x726292] ; call rax
0xffffff80003ac101 : je 0xffffff80003ac115 ; mov rdi, qword ptr [rip + 0x726196] ; call rax
0xffffff80003ac1f1 : je 0xffffff80003ac205 ; mov rdi, qword ptr [rip + 0x7260a6] ; call rax
0xffffff80003acbbc : je 0xffffff80003acbc3 ; pop rbp ; ret
0xffffff80003ace3d : je 0xffffff80003ace43 ; call rax
0xffffff80003acf8e : je 0xffffff80003acf94 ; call rax
0xffffff80003ad18b : je 0xffffff80003ad1a1 ; add rdi, 0x148 ; call rcx
0xffffff80003ad1be : je 0xffffff80003ad1c4 ; call rax
0xffffff80003ad8ce : je 0xffffff80003ad906 ; xor edi, edi ; call rax
0xffffff80003b1868 : je 0xffffff80003b1870 ; add esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff80003b1bf8 : je 0xffffff80003b1bfd ; pop rbp ; ret
0xffffff80003b1cd0 : je 0xffffff80003b1ce3 ; mov dword ptr [rip + 0x7207e0], eax ; pop rbp ; ret
0xffffff80003b619c : je 0xffffff80003b61ac ; mov edi, 1 ; call rax
0xffffff80003b61f2 : je 0xffffff80003b61f9 ; cli ; pop rbp ; ret
0xffffff80003b7634 : je 0xffffff80003b763d ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003ba02d : je 0xffffff80003ba037 ; test rax, rax ; je 0xffffff80003ba05f ; pop rbp ; ret
0xffffff80003ba032 : je 0xffffff80003ba05a ; pop rbp ; ret
0xffffff80003ba032 : je 0xffffff80003ba05e ; pop rbp ; ret
0xffffff80003ba78d : je 0xffffff80003ba7b5 ; pop rbp ; ret
0xffffff80003ba7d8 : je 0xffffff80003ba7dd ; pop rbp ; ret
0xffffff80003baab5 : je 0xffffff80003baaba ; pop rbp ; ret
0xffffff80003c05cc : je 0xffffff80003c05d4 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80003c21d8 : je 0xffffff80003c21dd ; pop rbp ; ret
0xffffff80003c21d7 : je 0xffffff80003c21de ; pop rbp ; ret
0xffffff80003c21d6 : je 0xffffff80003c21df ; pop rbp ; ret
0xffffff80003c2329 : je 0xffffff80003c2332 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003d5f5b : je 0xffffff80003d5f68 ; or byte ptr [rsi + 1], 0x40 ; pop rbp ; ret
0xffffff80003e7934 : je 0xffffff80003e7945 ; inc dword ptr [rsi + 0x98] ; pop rbp ; ret
0xffffff800040c284 : je 0xffffff800040c295 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800040fc18 : je 0xffffff800040fc25 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000422a20 : je 0xffffff8000422a30 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000422a1f : je 0xffffff8000422a31 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800043d9d3 : je 0xffffff800043d9e0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800043ebe0 : je 0xffffff800043ebf1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000442cc3 : je 0xffffff8000442cd0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800044358f : je 0xffffff8000443526 ; or byte ptr [rax - 1], cl ; ret 0x6349
0xffffff8000443bd5 : je 0xffffff8000443be6 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004447a3 : je 0xffffff80004447b0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000451732 : je 0xffffff80004516e6 ; jmp 0xffffff8000451740
0xffffff8000460290 : je 0xffffff8000460304 ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff80004650e4 : je 0xffffff80004650d3 ; jmp 0xffffff80004650ae
0xffffff8000477a7d : je 0xffffff8000477a8e ; mov eax, 6 ; pop rbp ; ret
0xffffff8000484bbc : je 0xffffff8000484b83 ; sbb dh, dh ; ret
0xffffff8000486dbb : je 0xffffff8000486d89 ; test dword ptr [rsi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0xffffff800048bf7c : je 0xffffff800048bf87 ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff800048c386 : je 0xffffff800048c39e ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049a31c : je 0xffffff800049a2d9 ; add byte ptr [rcx + rax - 0x12], cl ; jmp rsi
0xffffff800049d09e : je 0xffffff800049d0a6 ; pop rbp ; jmp rax
0xffffff800049d3af : je 0xffffff800049d3b8 ; xor eax, eax ; pop rbp ; ret
0xffffff800049db62 : je 0xffffff800049db69 ; cli ; pop rbp ; ret
0xffffff800049eb0f : je 0xffffff800049eb1d ; not rcx ; mov rax, rcx ; pop rbp ; ret
0xffffff80004a160d : je 0xffffff80004a1623 ; inc edx ; jmp 0xffffff80004a1608
0xffffff80004a6395 : je 0xffffff80004a63a2 ; mov eax, dword ptr [rcx + rdx + 0x14] ; pop rbp ; ret
0xffffff80004a690f : je 0xffffff80004a691c ; mov eax, dword ptr [rcx + rdx + 0x10] ; pop rbp ; ret
0xffffff80004a8263 : je 0xffffff80004a8297 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004a996a : je 0xffffff80004a9977 ; mov eax, dword ptr [rcx + rdx + 0x14] ; pop rbp ; ret
0xffffff80004b3cad : je 0xffffff80004b3cba ; mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80004bc9f1 : je 0xffffff80004bca02 ; mov rdi, r14 ; call 0xffffff8000338c67
0xffffff80004c8826 : je 0xffffff80004c8896 ; add byte ptr [rip - 0x7cb7568b], al ; ret
0xffffff80004c8825 : je 0xffffff80004c8897 ; add byte ptr [rip - 0x7cb7568b], al ; ret
0xffffff80004cb90c : je 0xffffff80004cb91f ; inc dword ptr [rbx + 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cb976 : je 0xffffff80004cb983 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cb976 : je 0xffffff80004cb986 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cbdc8 : je 0xffffff80004cbdd6 ; call rax
0xffffff80004d1d9b : je 0xffffff80004d1da8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d4560 : je 0xffffff80004d456a ; xor edi, edi ; call rax
0xffffff80004e2d6e : je 0xffffff80004e2d86 ; mov edi, dword ptr [r12] ; call 0xffffff800075f018
0xffffff80004e664d : je 0xffffff80004e666e ; mov rdi, rbx ; call 0xffffff8000392937
0xffffff80004ed679 : je 0xffffff80004ed68a ; test dl, dl ; jne 0xffffff80004ed68c ; xor eax, eax ; pop rbp ; ret
0xffffff80004ed6d9 : je 0xffffff80004ed6ea ; test dl, dl ; jne 0xffffff80004ed6ec ; xor eax, eax ; pop rbp ; ret
0xffffff80004f8948 : je 0xffffff80004f8950 ; pop rbp ; jmp rax
0xffffff80004f8978 : je 0xffffff80004f8980 ; pop rbp ; jmp rax
0xffffff80004f8b08 : je 0xffffff80004f8b10 ; pop rbp ; jmp rax
0xffffff80004f9190 : je 0xffffff80004f91a1 ; mov eax, dword ptr [rdi + 0x9f0] ; pop rbp ; ret
0xffffff80004f935b : je 0xffffff80004f93bc ; ret
0xffffff80004f935a : je 0xffffff80004f93bd ; ret
0xffffff80004f946b : je 0xffffff80004f94cc ; ret
0xffffff80004f946a : je 0xffffff80004f94cd ; ret
0xffffff80004f9b79 : je 0xffffff80004f9b86 ; mov ecx, dword ptr [rax + 0x10] ; mov eax, ecx ; pop rbp ; ret
0xffffff80004f9d50 : je 0xffffff80004f9d5d ; mov rax, qword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff80004fa07a : je 0xffffff80004fa083 ; xor eax, eax ; pop rbp ; ret
0xffffff80005028f3 : je 0xffffff8000502901 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff80005061e7 : je 0xffffff80005061f5 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff800050733f : je 0xffffff800050734b ; mov rdi, r14 ; call rax
0xffffff80005076d1 : je 0xffffff80005076ff ; push rsp ; mov rdx, qword ptr [r12 + 0x58] ; call rax
0xffffff800050bff1 : je 0xffffff800050c000 ; mov eax, 5 ; pop rbp ; ret
0xffffff800050dd09 : je 0xffffff800050dd22 ; mov edi, dword ptr [rbp - 0x54] ; call rax
0xffffff800050f010 : je 0xffffff800050f034 ; mov edi, r14d ; call rax
0xffffff800050fc64 : je 0xffffff800050fc71 ; cmp eax, edx ; cmovg eax, edx ; pop rbp ; ret
0xffffff800050fc64 : je 0xffffff800050fc73 ; cmp eax, edx ; cmovg eax, edx ; pop rbp ; ret
0xffffff800050fd5f : je 0xffffff800050fd6a ; xor eax, eax ; pop rbp ; ret
0xffffff8000512a8c : je 0xffffff8000512a99 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005163af : je 0xffffff80005163d9 ; call 0xffffff8000392674
0xffffff8000516466 : je 0xffffff800051646d ; pop rbp ; ret
0xffffff800051e9c7 : je 0xffffff800051e9d4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000520188 : je 0xffffff8000520208 ; jmp 0xffffff8000520227
0xffffff8000520187 : je 0xffffff8000520209 ; jmp 0xffffff8000520228
0xffffff80005225cc : je 0xffffff80005225de ; mov rdi, rbx ; mov rsi, r14 ; call rax
0xffffff8000528d35 : je 0xffffff8000528d43 ; mov dword ptr [rsi], r9d ; mov rax, r8 ; pop rbp ; ret
0xffffff800052905e : je 0xffffff800052906b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000529ba6 : je 0xffffff8000529bd0 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800052b2ee : je 0xffffff800052b2fb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800052b345 : je 0xffffff800052b367 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800052c73d : je 0xffffff800052cd8b ; mov rdi, rax ; call rcx
0xffffff800053491d : je 0xffffff800053492d ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff8000534dec : je 0xffffff8000534dfe ; mov rdi, r14 ; mov esi, r15d ; call rax
0xffffff8000539911 : je 0xffffff8000539923 ; mov rdi, r12 ; mov rsi, r14 ; call rax
0xffffff800053b5e8 : je 0xffffff800053b617 ; mov esi, dword ptr [r14 + 0x18] ; mov rdi, rbx ; call rax
0xffffff800053c687 : je 0xffffff800053c68d ; call rax
0xffffff800053e581 : je 0xffffff800053e58f ; mov rdi, r13 ; call r12
0xffffff800053e69f : je 0xffffff800053e6b0 ; mov dword ptr [rax], 0 ; pop rbp ; ret
0xffffff800053ec09 : je 0xffffff800053ec1a ; mov eax, 1 ; pop rbp ; ret
0xffffff8000541fda : je 0xffffff8000541fee ; mov rdi, r14 ; mov rsi, rbx ; call r15
0xffffff80005491bb : je 0xffffff80005491cc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800054bb6d : je 0xffffff800054bb5c ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800054bf97 : je 0xffffff800054bfa9 ; xor esi, esi ; mov rdi, rbx ; call r15
0xffffff800054ceea : je 0xffffff800054ceff ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054f00b : je 0xffffff800054f021 ; pop rbp ; ret
0xffffff800054f50c : je 0xffffff800054f521 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054f8ec : je 0xffffff800054f901 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800054f93c : je 0xffffff800054f951 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800054f9e5 : je 0xffffff800054f9f4 ; xor esi, esi ; call rax
0xffffff800054fb11 : je 0xffffff800054fb26 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054fc09 : je 0xffffff800054fc1e ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005526db : je 0xffffff80005526e8 ; call rax
0xffffff8000552752 : je 0xffffff80005527b0 ; mov edi, 1 ; xor edx, edx ; call rax
0xffffff80005538fa : je 0xffffff8000553906 ; mov rdi, rbx ; call rax
0xffffff80005539ac : je 0xffffff80005539b4 ; call rax
0xffffff8000556d68 : je 0xffffff8000556d8b ; mov rdi, rbx ; call 0xffffff8000393047
0xffffff8000557959 : je 0xffffff800055796d ; mov rdi, r13 ; mov rsi, rax ; call rcx
0xffffff8000558b7d : je 0xffffff8000558b89 ; mov rdi, r12 ; call rax
0xffffff8000558e45 : je 0xffffff8000558f4e ; mov rdi, r12 ; call rax
0xffffff800055d483 : je 0xffffff800055d452 ; call rax
0xffffff800055d97f : je 0xffffff800055d94e ; call rax
0xffffff800055dbd0 : je 0xffffff800055dba1 ; call rax
0xffffff800055e71b : je 0xffffff800055e6ef ; call rax
0xffffff80005614d5 : je 0xffffff80005614b3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005614d4 : je 0xffffff80005614b4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005630d9 : je 0xffffff80005630e6 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005630f9 : je 0xffffff8000563106 ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff8000563119 : je 0xffffff800056312a ; mov eax, dword ptr [rdi + 0x178] ; pop rbp ; ret
0xffffff8000563139 : je 0xffffff800056314a ; mov eax, dword ptr [rdi + 0x17c] ; pop rbp ; ret
0xffffff80005634c9 : je 0xffffff80005634da ; mov eax, dword ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff8000563699 : je 0xffffff80005636aa ; mov eax, dword ptr [rdi + 0x584] ; pop rbp ; ret
0xffffff80005638f9 : je 0xffffff800056390a ; mov eax, dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff8000563a99 : je 0xffffff8000563aaa ; mov eax, dword ptr [rdi + 0xa8] ; pop rbp ; ret
0xffffff8000563e39 : je 0xffffff8000563e4a ; mov eax, dword ptr [rdi + 0x4b8] ; pop rbp ; ret
0xffffff8000563f19 : je 0xffffff8000563f2a ; mov eax, dword ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff8000563fe9 : je 0xffffff8000563ffa ; mov eax, dword ptr [rdi + 0xc8] ; pop rbp ; ret
0xffffff80005640c9 : je 0xffffff80005640da ; mov eax, dword ptr [rdi + 0xcc] ; pop rbp ; ret
0xffffff8000564139 : je 0xffffff800056414a ; mov eax, dword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff8000565849 : je 0xffffff8000565856 ; mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80005659f9 : je 0xffffff8000565a06 ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80005664a9 : je 0xffffff80005664ba ; mov eax, dword ptr [rdi + 0xd4] ; pop rbp ; ret
0xffffff80005664e3 : je 0xffffff80005664ef ; mov rdi, rbx ; call rax
0xffffff8000566677 : je 0xffffff80005666ed ; mov rdi, r12 ; call 0xffffff8000392937
0xffffff8000566fcb : je 0xffffff8000566fe1 ; mov rdi, rbx ; mov esi, r14d ; call rax
0xffffff80005684ae : je 0xffffff80005684bd ; mov eax, 0x2a ; pop rbp ; ret
0xffffff8000569963 : je 0xffffff80005699e3 ; mov edi, dword ptr [r14 + 0x7e] ; xor esi, esi ; call rax
0xffffff800056a3e5 : je 0xffffff800056a446 ; mov rsi, rbx ; call rax
0xffffff800056a4a9 : je 0xffffff800056a4de ; mov edi, dword ptr [rbx + 0x7e] ; xor esi, esi ; call rax
0xffffff800056dc2e : je 0xffffff800056dc3d ; mov eax, 0x2a ; pop rbp ; ret
0xffffff8000570009 : je 0xffffff800057001a ; mov eax, dword ptr [rdi + 0x80] ; pop rbp ; ret
0xffffff8000570049 : je 0xffffff800057005a ; mov eax, dword ptr [rdi + 0x84] ; pop rbp ; ret
0xffffff80005706e9 : je 0xffffff80005706fa ; mov eax, dword ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff800057095d : je 0xffffff800057096e ; mov eax, dword ptr [rcx + 0x18c] ; pop rbp ; ret
0xffffff800057401f : je 0xffffff8000574028 ; xor eax, eax ; pop rbp ; ret
0xffffff8000576cbd : je 0xffffff8000576cce ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005841cb : je 0xffffff80005841d6 ; xor eax, eax ; pop rbp ; ret
0xffffff800058467d : je 0xffffff8000584695 ; movzx eax, al ; pop rbp ; ret
0xffffff8000584f4f : je 0xffffff8000584f91 ; pop rbp ; ret
0xffffff800058909d : je 0xffffff80005890af ; sub eax, ecx ; jne 0xffffff80005890b1 ; call rcx
0xffffff8000589260 : je 0xffffff8000589272 ; sub eax, ecx ; jne 0xffffff8000589274 ; call rcx
0xffffff800059c5dc : je 0xffffff800059c5ed ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800059cdf5 : je 0xffffff800059ce23 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800059f473 : je 0xffffff800059f47a ; pop rbp ; ret
0xffffff80005b963c : je 0xffffff80005b9661 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005bbe25 : je 0xffffff80005bbe32 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005bd5d6 : je 0xffffff80005bd5aa ; sub byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80005bff29 : je 0xffffff80005bff36 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c0054 : je 0xffffff80005c0061 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c132e : je 0xffffff80005c133b ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80005c169f : je 0xffffff80005c16b4 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c179f : je 0xffffff80005c17c0 ; xor esi, esi ; mov rdi, rbx ; call rcx
0xffffff80005c1bf9 : je 0xffffff80005c1c0e ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c2653 : je 0xffffff80005c2668 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c27e0 : je 0xffffff80005c27f5 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c2917 : je 0xffffff80005c292c ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c2adb : je 0xffffff80005c2af5 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c2bac : je 0xffffff80005c2bc1 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c2c9c : je 0xffffff80005c2cb1 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c2ceb : je 0xffffff80005c2d07 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c31c7 : je 0xffffff80005c31dc ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c3219 : je 0xffffff80005c3237 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c32ac : je 0xffffff80005c32c7 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c3444 : je 0xffffff80005c3459 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c350a : je 0xffffff80005c351f ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c3d49 : je 0xffffff80005c3d9f ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c4705 : je 0xffffff80005c471a ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c47f9 : je 0xffffff80005c480e ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c5071 : je 0xffffff80005c5086 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c5de5 : je 0xffffff80005c5dfa ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c6254 : je 0xffffff80005c6277 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c646f : je 0xffffff80005c6484 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c65f0 : je 0xffffff80005c6637 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c68d1 : je 0xffffff80005c68e6 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c6ad2 : je 0xffffff80005c6ae7 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c6bde : je 0xffffff80005c6bf3 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c737e : je 0xffffff80005c7393 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c76a8 : je 0xffffff80005c76bd ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c78c0 : je 0xffffff80005c78dd ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c7b0c : je 0xffffff80005c7b21 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c8a5e : je 0xffffff80005c8a73 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c9165 : je 0xffffff80005c917a ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c9212 : je 0xffffff80005c924e ; mov rdi, r14 ; call 0xffffff80005c5507
0xffffff80005cfd8d : je 0xffffff80005cfdca ; jmp 0xffffff80005cfda9
0xffffff80005d5799 : je 0xffffff80005d57a6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005dc036 : je 0xffffff80005dc045 ; mov eax, 1 ; pop rbp ; ret
0xffffff80005dcf94 : je 0xffffff80005dcfa9 ; mov r14, qword ptr [r14] ; test r14, r14 ; jne 0xffffff80005dcf69 ; jmp 0xffffff80005dcfbc
0xffffff80005dfca1 : je 0xffffff80005dfcb2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005dfdcf : je 0xffffff80005dfdda ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80005e20fd : je 0xffffff80005e2109 ; mov rdi, r14 ; call rax
0xffffff80005e2ed5 : je 0xffffff80005e2ee1 ; mov rdi, r13 ; call rax
0xffffff80005e32d9 : je 0xffffff80005e32e7 ; or byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0xffffff80005e3311 : je 0xffffff80005e331d ; mov rdi, r13 ; call rax
0xffffff80005e3657 : je 0xffffff80005e365d ; call rax
0xffffff80005e51bd : je 0xffffff80005e51e7 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005e8d21 : je 0xffffff80005e8d2e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005ee47b : je 0xffffff80005ee487 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005ef998 : je 0xffffff80005ef9a9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005f02b1 : je 0xffffff80005f02bd ; mov rdi, rbx ; call rax
0xffffff80005f0aee : je 0xffffff80005f0a69 ; mov rdi, rbx ; call rax
0xffffff80005f0a9a : je 0xffffff80005f0ab8 ; mov rdi, rbx ; call rax
0xffffff80005f49a1 : je 0xffffff80005f49bd ; sub eax, esi ; cmp eax, 2 ; setg dl ; jmp 0xffffff80005f49bd
0xffffff80005f57c6 : je 0xffffff80005f57cd ; pop rbp ; ret
0xffffff8000605edc : je 0xffffff8000605ec0 ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff800060de02 : je 0xffffff800060ddfc ; ret
0xffffff800061118e : je 0xffffff800061119b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006111d8 : je 0xffffff8000611202 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80006116fc : je 0xffffff8000611703 ; pop rbp ; ret
0xffffff8000617c84 : je 0xffffff8000617c96 ; mov rdi, rbx ; mov rsi, r12 ; call rax
0xffffff80006187cb : je 0xffffff80006187e9 ; mov rdi, r13 ; call 0xffffff80007b4a67
0xffffff8000619099 : je 0xffffff80006190ab ; mov rdi, r12 ; mov rsi, r14 ; call rax
0xffffff800061a476 : je 0xffffff800061a482 ; mov rdi, rbx ; call rax
0xffffff800061b3b7 : je 0xffffff800061b3c3 ; mov rdi, r14 ; call rax
0xffffff800061b65d : je 0xffffff800061b669 ; mov rdi, rbx ; call rax
0xffffff800061b685 : je 0xffffff800061b697 ; mov rdi, rbx ; mov esi, r14d ; call rax
0xffffff800061b6eb : je 0xffffff800061b6f7 ; mov rdi, rbx ; call rax
0xffffff800061b744 : je 0xffffff800061b750 ; mov rdi, rbx ; call rax
0xffffff800061b76c : je 0xffffff800061b77e ; mov rdi, rbx ; mov esi, r14d ; call rax
0xffffff800061b813 : je 0xffffff800061b81f ; mov rdi, rbx ; call rax
0xffffff800061ce54 : je 0xffffff800061ce60 ; mov rdi, r14 ; call rax
0xffffff800061d037 : je 0xffffff800061d043 ; mov rdi, r15 ; call rax
0xffffff800061d9b1 : je 0xffffff800061d9cc ; mov rdi, r13 ; call rax
0xffffff8000624244 : je 0xffffff8000624250 ; mov rdi, rbx ; call rax
0xffffff8000624aac : je 0xffffff8000624ab8 ; mov rdi, r13 ; call rax
0xffffff8000625547 : je 0xffffff8000625553 ; mov rdi, r14 ; call rax
0xffffff8000625fa4 : je 0xffffff8000625fe1 ; mov dword ptr [rdi + 0x1dc], eax ; pop rbp ; ret
0xffffff8000625fce : je 0xffffff8000625fed ; mov dword ptr [rdi + 0x1dc], eax ; pop rbp ; ret
0xffffff8000627804 : je 0xffffff8000627810 ; mov rdi, rbx ; call rax
0xffffff8000628257 : je 0xffffff8000628280 ; mov rdi, r13 ; call rax
0xffffff8000628797 : je 0xffffff80006287a3 ; mov rdi, r13 ; call rax
0xffffff80006286e8 : je 0xffffff80006287b8 ; mov rdi, r13 ; call rax
0xffffff8000628873 : je 0xffffff800062889c ; mov rdi, r13 ; call rax
0xffffff8000629038 : je 0xffffff8000628ff2 ; add byte ptr [r8 + 0x9417501], r13b ; ret 0xc2f6
0xffffff800062f123 : je 0xffffff800062f134 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000630672 : je 0xffffff800063067b ; xor eax, eax ; pop rbp ; ret
0xffffff800063085c : je 0xffffff8000630863 ; pop rbp ; ret
0xffffff8000634d71 : je 0xffffff8000634dba ; xor esi, esi ; call 0xffffff8000551036
0xffffff8000636451 : je 0xffffff800063645f ; mov rdi, r14 ; call r12
0xffffff8000637cb0 : je 0xffffff8000637cb9 ; xor eax, eax ; pop rbp ; ret
0xffffff800063fd47 : je 0xffffff800063fd56 ; mov rdi, rbx ; call rax
0xffffff800063fd60 : je 0xffffff800063fd6f ; mov rdi, rbx ; call rcx
0xffffff8000643949 : je 0xffffff8000643956 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006456ed : je 0xffffff80006456f8 ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff8000646396 : je 0xffffff80006463a7 ; mov eax, dword ptr [rcx + 0xc0] ; pop rbp ; ret
0xffffff800064d5e5 : je 0xffffff800064d602 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000654e28 : je 0xffffff8000654dc2 ; ret
0xffffff8000656554 : je 0xffffff8000656628 ; mov rdi, rbx ; call rcx
0xffffff8000656c28 : je 0xffffff8000656ca4 ; ret
0xffffff8000657328 : je 0xffffff800065739d ; ret
0xffffff8000661678 : je 0xffffff8000661689 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006660b1 : je 0xffffff80006660b8 ; pop rbp ; ret
0xffffff800066b8b8 : je 0xffffff800066b84b ; jl 0xffffff800066b920 ; pop r14 ; pop rbp ; ret
0xffffff800066b8b7 : je 0xffffff800066b84c ; jl 0xffffff800066b921 ; pop r14 ; pop rbp ; ret
0xffffff800066b809 : je 0xffffff800066b86b ; pop r14 ; pop rbp ; ret
0xffffff800066b808 : je 0xffffff800066b86c ; pop r14 ; pop rbp ; ret
0xffffff80006807ee : je 0xffffff80006807fb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000680838 : je 0xffffff8000680862 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff8000683d34 : je 0xffffff8000683d4b ; movzx eax, byte ptr [rax + 0x30] ; pop rbp ; ret
0xffffff8000683dbb : je 0xffffff8000683dcd ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80006896cd : je 0xffffff80006896f7 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800068c5c1 : je 0xffffff800068c5ce ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800068e025 : je 0xffffff800068e074 ; xor esi, esi ; mov rdx, r15 ; call rax
0xffffff800068e611 : je 0xffffff800068e625 ; xor esi, esi ; mov qword ptr [rbp - 0x80], rdi ; call rax
0xffffff800068fa25 : je 0xffffff800068fa36 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800068faa5 : je 0xffffff800068fab6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000691f69 : je 0xffffff8000691f76 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000694d1d : je 0xffffff8000694d68 ; add byte ptr [rax - 0x77], cl ; ret 0xb8e8
0xffffff8000696770 : je 0xffffff80006967ab ; mov rdi, r13 ; call 0xffffff8000392a47
0xffffff800069a36a : je 0xffffff800069a378 ; or byte ptr [rcx + 0xf], al ; mov dh, 0x96 ; ret
0xffffff800069a3bc : je 0xffffff800069a3c8 ; mov rdi, rbx ; call rax
0xffffff800069a3d3 : je 0xffffff800069a425 ; add byte ptr [rsi + 1], bh ; call rax
0xffffff800069a5a8 : je 0xffffff800069a5b4 ; mov rdi, rbx ; call rax
0xffffff800069a64a : je 0xffffff800069a653 ; xor eax, eax ; pop rbp ; ret
0xffffff800069e380 : je 0xffffff800069e386 ; call rax
0xffffff80006a123e : je 0xffffff80006a124a ; mov rdi, r12 ; call rax
0xffffff80006a2df4 : je 0xffffff80006a2e01 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a6d55 : je 0xffffff80006a6d1d ; dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393048
0xffffff80006a9bb6 : je 0xffffff80006a9be0 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80006a9d5e : je 0xffffff80006a9d6b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006ab9a1 : je 0xffffff80006ab9ae ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006ac8d9 : je 0xffffff80006ac903 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80006b5b0d : je 0xffffff80006b5b1a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006bd823 : je 0xffffff80006bd8d0 ; mov rsi, r12 ; call rax
0xffffff80006be8a8 : je 0xffffff80006be8c0 ; mov rdi, rbx ; call rax
0xffffff80006be94c : je 0xffffff80006be9ad ; mov rdi, rbx ; call rax
0xffffff80006c0e13 : je 0xffffff80006c0e37 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80006fc411 : je 0xffffff80006fc428 ; retf 0x8941 ; push rsp ; sysenter
0xffffff80006fc7ac : je 0xffffff80006fc7c3 ; retf 0x8941 ; push rsp ; sysenter
0xffffff8000705ddc : je 0xffffff8000705dfa ; movzx eax, word ptr [rsi + 0x28] ; pop rbp ; ret
0xffffff8000708cd3 : je 0xffffff8000708ce8 ; xor esi, esi ; mov rdi, r12 ; call 0xffffff80006d4f79
0xffffff800071c0e3 : je 0xffffff800071c0f2 ; mov dword ptr [rcx + 0x44], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000725994 : je 0xffffff800072599c ; or bh, bh ; ret 0x5589
0xffffff8000725b9f : je 0xffffff8000725ba6 ; or bh, bh ; ret 0x5589
0xffffff8000725ece : je 0xffffff8000725edc ; mov ax, 5 ; cwde ; pop rbp ; ret
0xffffff800072f14e : je 0xffffff800072f155 ; pop rbp ; ret
0xffffff800072f2c4 : je 0xffffff800072f2cb ; pop rbp ; ret
0xffffff8000737653 : je 0xffffff800073765d ; mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff8000737653 : je 0xffffff800073765f ; mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff80007376dc : je 0xffffff80007376e9 ; mov dword ptr [rsi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff8000737866 : je 0xffffff8000737872 ; movzx edx, word ptr [rax] ; movzx eax, dx ; pop rbp ; ret
0xffffff8000737866 : je 0xffffff8000737874 ; movzx edx, word ptr [rax] ; movzx eax, dx ; pop rbp ; ret
0xffffff8000738459 : je 0xffffff8000738467 ; movzx ecx, word ptr [rdx] ; movzx eax, cx ; pop rbp ; ret
0xffffff800073d593 : je 0xffffff800073d5a2 ; lock inc qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800073d5ba : je 0xffffff800073d5c9 ; lock inc qword ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800073d621 : je 0xffffff800073d630 ; lock inc qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff8000740424 : je 0xffffff8000740431 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000740bda : je 0xffffff8000740be1 ; pop rbp ; ret
0xffffff80007447a6 : je 0xffffff80007447ac ; call rax
0xffffff8000751dd2 : je 0xffffff8000751ddb ; xor eax, eax ; pop rbp ; ret
0xffffff8000755ec7 : je 0xffffff8000755ed3 ; jne 0xffffff8000755ed8 ; mov rax, rsi ; pop rbp ; ret
0xffffff8000755ec6 : je 0xffffff8000755ed4 ; jne 0xffffff8000755ed9 ; mov rax, rsi ; pop rbp ; ret
0xffffff8000756ac9 : je 0xffffff8000756ad4 ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff8000756bb5 : je 0xffffff8000756bc2 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff8000756be3 : je 0xffffff8000756bf0 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff800075bdb8 : je 0xffffff800075be27 ; ret
0xffffff800075deb7 : je 0xffffff800075dec9 ; mov rdi, rbx ; mov rsi, r13 ; call rax
0xffffff800075e497 : je 0xffffff800075e4a2 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff80007657dd : je 0xffffff8000765808 ; add rdi, 8 ; call 0xffffff80003923e9
0xffffff8000767cff : je 0xffffff8000767d16 ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff800076b397 : je 0xffffff800076b3ad ; mov rdi, qword ptr [rax + 0x10] ; call 0xffffff8000392a49
0xffffff800076d0e6 : je 0xffffff800076d0f6 ; call 0xffffff80002779e9
0xffffff800076d18a : je 0xffffff800076d1ac ; mov rdi, rbx ; call 0xffffff8000392938
0xffffff800076d1ae : je 0xffffff800076d1d0 ; mov rdi, rbx ; call 0xffffff8000392938
0xffffff800076d316 : je 0xffffff800076d322 ; mov rdi, r15 ; call rax
0xffffff800076d8d1 : je 0xffffff800076d8f3 ; mov rdi, r15 ; call 0xffffff8000392938
0xffffff800076d8f5 : je 0xffffff800076d917 ; mov rdi, r15 ; call 0xffffff8000392938
0xffffff800076d9e0 : je 0xffffff800076d9ec ; mov rdi, r14 ; call rax
0xffffff800076e36a : je 0xffffff800076e38c ; mov rdi, rbx ; call 0xffffff8000392938
0xffffff800076e2f3 : je 0xffffff800076e569 ; mov rdi, r15 ; call rax
0xffffff800076e647 : je 0xffffff800076e676 ; pop rax ; mov rdi, r14 ; call 0xffffff8000392a49
0xffffff800076e684 : je 0xffffff800076e6b2 ; mov rdi, rbx ; call 0xffffff8000392938
0xffffff800076e727 : je 0xffffff800076e756 ; pop rax ; mov rdi, r14 ; call 0xffffff8000392a49
0xffffff800076e9c8 : je 0xffffff800076ea0c ; ret 0x41ff
0xffffff80007713f8 : je 0xffffff8000771404 ; mov rdi, rbx ; call rax
0xffffff800077141e : je 0xffffff800077142a ; mov rdi, rbx ; call rax
0xffffff800077159b : je 0xffffff80007715c9 ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000772729 : je 0xffffff80007727fa ; call 0xffffff8000399243
0xffffff80007733fc : je 0xffffff8000773408 ; mov rdi, r13 ; call rax
0xffffff80007742f6 : je 0xffffff8000774301 ; mov eax, edi ; pop rbp ; ret
0xffffff80007749b6 : je 0xffffff80007749c1 ; mov eax, edi ; pop rbp ; ret
0xffffff8000778359 : je 0xffffff800077836b ; mov rdi, r15 ; mov rsi, rbx ; call rax
0xffffff8000778391 : je 0xffffff800077848a ; mov rsi, rbx ; call rax
0xffffff80007792a5 : je 0xffffff80007792b1 ; mov rdi, r12 ; call rax
0xffffff800077d8ac : je 0xffffff800077d8b7 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800077d8cc : je 0xffffff800077d8d7 ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800077ffc5 : je 0xffffff800077ffd2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077ffc5 : je 0xffffff800077ffd5 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000780917 : je 0xffffff8000780928 ; mov dword ptr [rdi + 0x4a0], esi ; pop rbp ; ret
0xffffff8000781cb1 : je 0xffffff8000781ce0 ; or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffc9
0xffffff80007837dc : je 0xffffff80007837e7 ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff800078749f : je 0xffffff80007874a5 ; call rax
0xffffff80007887e9 : je 0xffffff80007887f6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007887e9 : je 0xffffff80007887f9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800078c5a9 : je 0xffffff800078c5b6 ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff800078c957 : je 0xffffff800078c964 ; mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff800078c999 : je 0xffffff800078c9a4 ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800078c9a9 : je 0xffffff800078c9b6 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800078c9c7 : je 0xffffff800078c9d4 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff800078c9dc : je 0xffffff800078c9e7 ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff800078cbc7 : je 0xffffff800078cbd8 ; test byte ptr [rdi + 0x30], 2 ; jne 0xffffff800078cbda ; pop rbp ; ret
0xffffff800079606a : je 0xffffff8000796079 ; mov qword ptr [rdi], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff8000796340 : je 0xffffff800079634f ; mov ecx, dword ptr [rdi + 0x68] ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff80007a0a38 : je 0xffffff80007a0a46 ; inc dword ptr [rdx + 0xc] ; xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80007a5986 : je 0xffffff80007a5992 ; mov rdi, rbx ; call rax
0xffffff80007a5ba9 : je 0xffffff80007a5bbe ; mov rdi, r12 ; mov r15, rdx ; call rax
0xffffff80007a6566 : je 0xffffff80007a6572 ; mov rdi, r12 ; call rax
0xffffff80007a666c : je 0xffffff80007a6678 ; mov rdi, r15 ; call rax
0xffffff80007a6a2d : je 0xffffff80007a6a39 ; mov rdi, rbx ; call rax
0xffffff80007a73a1 : je 0xffffff80007a73c3 ; mov rdi, r12 ; mov rsi, r15 ; call rcx
0xffffff80007a7304 : je 0xffffff80007a795a ; mov rdi, r12 ; call rax
0xffffff80007a800f : je 0xffffff80007a80a7 ; mov rdi, rbx ; call rdx
0xffffff80007a86f4 : je 0xffffff80007a874a ; mov rdi, r15 ; call rax
0xffffff80007a8db9 : je 0xffffff80007a8dc5 ; mov rdi, rbx ; call rax
0xffffff80007a8df8 : je 0xffffff80007a8dcb ; mov esi, 0x23 ; jmp 0xffffff80007a8dcb
0xffffff80007a8fa8 : je 0xffffff80007a8fb4 ; mov rdi, r12 ; call rax
0xffffff80007a93ba : je 0xffffff80007a93c6 ; mov rdi, r15 ; call rax
0xffffff80007a9406 : je 0xffffff80007a9412 ; mov rdi, r15 ; call rax
0xffffff80007a96d4 : je 0xffffff80007a96e0 ; mov rdi, rbx ; call rax
0xffffff80007aab22 : je 0xffffff80007aab3d ; or byte ptr [rax - 0x77], cl ; cmp al, 0x11 ; pop rbp ; ret
0xffffff80007aafae : je 0xffffff80007aafc0 ; mov edi, r12d ; mov rsi, r13 ; call rax
0xffffff80007ab9ab : je 0xffffff80007ab9bf ; mov esi, 0x200 ; mov edi, ebx ; call rax
0xffffff80007aeec2 : je 0xffffff80007aeecb ; xor eax, eax ; pop rbp ; ret
0xffffff80007aef44 : je 0xffffff80007aef4d ; xor eax, eax ; pop rbp ; ret
0xffffff80007aefe0 : je 0xffffff80007aefe9 ; xor eax, eax ; pop rbp ; ret
0xffffff80007af84f : je 0xffffff80007af85c ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007af87f : je 0xffffff80007af88c ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80007af9ff : je 0xffffff80007afa0c ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80007afbf8 : je 0xffffff80007afc07 ; mov eax, 1 ; pop rbp ; ret
0xffffff80007b03cb : je 0xffffff80007b03da ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007b11df : je 0xffffff80007b11ec ; mov rax, qword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff80007b1e0e : je 0xffffff80007b1da0 ; adc al, 0x89 ; ret 0xca0f
0xffffff80007b1e7f : je 0xffffff80007b1e8a ; xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff80007b2798 : je 0xffffff80007b27ad ; mov rdi, rbx ; mov rsi, r14 ; call rcx
0xffffff80007b408f : je 0xffffff80007b4099 ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b410e : je 0xffffff80007b411a ; mov rdi, rbx ; call rax
0xffffff80007b438f : je 0xffffff80007b4399 ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b447f : je 0xffffff80007b4472 ; call rax
0xffffff80007b8116 : je 0xffffff80007b8121 ; add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80007b8104 : je 0xffffff80007b8123 ; sub eax, esi ; add dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff80007b87c3 : je 0xffffff80007b87d9 ; mov rdi, r14 ; call 0xffffff80007b4a67
0xffffff80007b95ba : je 0xffffff80007b95c5 ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff80007c5279 : je 0xffffff80007c5285 ; mov rdi, r15 ; call rax
0xffffff80007c52c5 : je 0xffffff80007c52da ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c55d7 : je 0xffffff80007c55ec ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c577f : je 0xffffff80007c5794 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c58bb : je 0xffffff80007c58d0 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007c5a3f : je 0xffffff80007c5a54 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007c5c17 : je 0xffffff80007c5c2c ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c5cc4 : je 0xffffff80007c5cd9 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c876f : je 0xffffff80007c8819 ; mov rdi, rbx ; call rax
0xffffff80007c92ba : je 0xffffff80007c92d1 ; xor esi, esi ; mov rdi, r13 ; mov rdx, r8 ; call rcx
0xffffff80007ca229 : je 0xffffff80007ca231 ; adc byte ptr [rax - 1], cl ; ret
0xffffff80007ceadc : je 0xffffff80007ceae9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d0d05 : je 0xffffff80007d0d1a ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80007d13d1 : je 0xffffff80007d13e6 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007d39ad : je 0xffffff80007d39c7 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80007d3f83 : je 0xffffff80007d3fd4 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007d4f86 : je 0xffffff80007d4f8f ; xor eax, eax ; pop rbp ; ret
0xffffff80007d57cd : je 0xffffff80007d582e ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007d611d : je 0xffffff80007d6132 ; xor esi, esi ; mov rbx, rdi ; call rax
0xffffff80007d6846 : je 0xffffff80007d685b ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80007db1aa : je 0xffffff80007db1e6 ; test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rax
0xffffff80007dbf11 : je 0xffffff80007dbf26 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007ebd56 : je 0xffffff80007ebd6b ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007ebef2 : je 0xffffff80007ebf07 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007ecba4 : je 0xffffff80007ecbb5 ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007ef899 : je 0xffffff80007ef8a5 ; mov al, 2 ; movzx eax, al ; pop rbp ; ret
0xffffff80007f00a5 : je 0xffffff80007f00ad ; pop rbp ; jmp rax
0xffffff80007f30bb : je 0xffffff80007f30ca ; mov eax, dword ptr [rax + 0x6c] ; mov dword ptr [rdx], eax ; pop rbp ; ret
0xffffff80007f5ca0 : je 0xffffff80007f5c9f ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f5c9f : je 0xffffff80007f5ca0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f6fbf : je 0xffffff80007f6fcc ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007f859b : je 0xffffff80007f85aa ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007fc9ef : je 0xffffff80007fca41 ; mov rdi, r14 ; mov rsi, r12 ; call rax
0xffffff80007fcb8e : je 0xffffff80007fcb96 ; pop rbp ; jmp rax
0xffffff80007fcc98 : je 0xffffff80007fcca3 ; mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff80007fef22 : je 0xffffff80007fef2b ; xor eax, eax ; pop rbp ; ret
0xffffff80007ff9e8 : je 0xffffff80007ff9fb ; inc r8 ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff80007ffc51 : je 0xffffff80007ffc5d ; mov rdi, rbx ; call rax
0xffffff80008035d5 : je 0xffffff80008035dc ; pop rbp ; ret
0xffffff80008035d0 : je 0xffffff80008035e1 ; cmp ecx, -1 ; je 0xffffff80008035e1 ; pop rbp ; ret
0xffffff8000803835 : je 0xffffff8000803849 ; mov rdi, r15 ; call rax
0xffffff8000803904 : je 0xffffff8000803910 ; mov rdi, r15 ; call rax
0xffffff800080c874 : je 0xffffff800080c839 ; jmp 0xffffff800080c853
0xffffff800080c86c : je 0xffffff800080c85b ; and edx, 7 ; cmp edx, 5 ; je 0xffffff800080c841 ; jmp 0xffffff800080c85b
0xffffff8000815567 : je 0xffffff800081556d ; call rax
0xffffff800081582a : je 0xffffff8000815837 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000815855 : je 0xffffff8000815866 ; mov eax, esi ; add rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800081b80a : je 0xffffff800081b812 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081b87a : je 0xffffff800081b882 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081cdac : je 0xffffff800081cdc8 ; mov rdi, qword ptr [rbp - 0x50] ; mov rsi, rax ; call rcx
0xffffff8000820162 : je 0xffffff8000820168 ; call rax
0xffffff8000821a8b : je 0xffffff8000821a9d ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0xffffff8000821d3b : je 0xffffff8000821d4c ; mov eax, 1 ; pop rbp ; ret
0xffffff800082d747 : je 0xffffff800082d752 ; call rax
0xffffff800082dc2b : je 0xffffff800082dc45 ; mov r15, r9 ; call rax
0xffffff80008329c7 : je 0xffffff80008329d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008365e1 : je 0xffffff80008365ec ; xor eax, eax ; pop rbp ; ret
0xffffff8000840413 : je 0xffffff800084042b ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800084233c : je 0xffffff8000842358 ; mov rdi, qword ptr [rbx + 0x50] ; mov rsi, rax ; call rcx
0xffffff8000845556 : je 0xffffff8000845572 ; mov rdi, qword ptr [rbp - 0x30] ; mov rsi, rax ; call rcx
0xffffff8000845594 : je 0xffffff80008455b0 ; mov rdi, qword ptr [rbp - 0x30] ; mov rsi, rax ; call rcx
0xffffff800084e653 : je 0xffffff800084e660 ; add rax, 0x10 ; pop rbp ; ret
0xffffff8000856bbc : je 0xffffff8000856bc8 ; mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff800085867a : je 0xffffff8000858681 ; pop rbp ; ret
0xffffff8000858a3b : je 0xffffff8000858a4c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000859b20 : je 0xffffff8000859b26 ; call rax
0xffffff800085b942 : je 0xffffff800085b946 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086072d : je 0xffffff8000860738 ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff80008640d7 : je 0xffffff8000864158 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086551a : je 0xffffff80008654f2 ; jmp 0xffffff80008654e3
0xffffff8000865514 : je 0xffffff80008654f8 ; test byte ptr [rbx + 0x58], 1 ; je 0xffffff80008654f8 ; jmp 0xffffff80008654e9
0xffffff8000869be1 : je 0xffffff8000869bea ; mov al, cl ; pop rbp ; ret
0xffffff800086dfb2 : je 0xffffff800086dfb8 ; call rcx
0xffffff8000870593 : je 0xffffff800087059d ; mov rsi, qword ptr [rcx] ; call rax
0xffffff8000870c56 : je 0xffffff8000870c63 ; mov ecx, dword ptr [rsi + 0x40] ; sub eax, ecx ; pop rbp ; ret
0xffffff800087d3fb : je 0xffffff800087d40c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800087d6eb : je 0xffffff800087d6fc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800087e52a : je 0xffffff800087e547 ; mov esi, r13d ; mov rdx, r15 ; call rax
0xffffff800087e810 : je 0xffffff800087e864 ; mov esi, r13d ; mov rdx, r12 ; call rax
0xffffff80008802b3 : je 0xffffff80008802bc ; inc dword ptr [rdx] ; pop rbp ; ret
0xffffff80008850b9 : je 0xffffff80008850c6 ; mov rax, qword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff8000892ab4 : je 0xffffff8000892ac4 ; mov rdi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff8000898667 : je 0xffffff8000898674 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a0050 : je 0xffffff80008a005d ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80008a2076 : je 0xffffff80008a2086 ; call 0xffffff80003400e9
0xffffff80008afbd4 : je 0xffffff80008afbe5 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008b0f5b : je 0xffffff80008b0f49 ; mov eax, dword ptr [rbx + 8] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b0fab : je 0xffffff80008b0f99 ; mov eax, dword ptr [rbx + 0xc] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b69cc : je 0xffffff80008b69d3 ; pop rbp ; ret
0xffffff80008b6a92 : je 0xffffff80008b6aa1 ; mov eax, 0xe00002e2 ; pop rbp ; ret
0xffffff80008c45ad : je 0xffffff80008c45b6 ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff80008de391 : je 0xffffff80008de3bb ; add byte ptr [rax], al ; sete al ; pop rbp ; ret
0xffffff80008e7468 : je 0xffffff80008e7471 ; xor eax, eax ; pop rbp ; ret
0xffffff80008e8273 : je 0xffffff80008e827a ; pop rbp ; ret
0xffffff80008ed85d : je 0xffffff80008ed86d ; lea rdi, [rbp - 0x10] ; call r8
0xffffff80008ed8f4 : je 0xffffff80008ed902 ; lea rdi, [rbp - 0x10] ; call rax
0xffffff80008ed961 : je 0xffffff80008ed986 ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0xffffff80008ee3fa : je 0xffffff80008ee3d8 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008ee6c2 : je 0xffffff80008ee752 ; mov rdi, r14 ; call rcx
0xffffff80008ee79a : je 0xffffff80008ee775 ; mov rdi, r14 ; call rcx
0xffffff80008ee97a : je 0xffffff80008ee958 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008eea72 : je 0xffffff80008eeb02 ; mov rdi, r14 ; call rcx
0xffffff80008eeb4a : je 0xffffff80008eeb25 ; mov rdi, r14 ; call rcx
0xffffff80008eed2a : je 0xffffff80008eed08 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008ef3fe : je 0xffffff80008ef404 ; call rax
0xffffff80008ef4c0 : je 0xffffff80008ef4c6 ; call rax
0xffffff80008efa69 : je 0xffffff80008efa7a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008efee2 : je 0xffffff80008efeee ; mov rdi, r12 ; call rax
0xffffff80008f00a1 : je 0xffffff80008f00ad ; mov rdi, r15 ; call rax
0xffffff80008f265e : je 0xffffff80008f2670 ; mov rdi, r14 ; call rcx
0xffffff80008f26b6 : je 0xffffff80008f2695 ; mov rdi, r14 ; call rcx
0xffffff80008f273b : je 0xffffff80008f274d ; mov rdi, r14 ; call rcx
0xffffff80008f2793 : je 0xffffff80008f2775 ; mov rdi, r14 ; call rcx
0xffffff80008f28fb : je 0xffffff80008f2913 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2953 : je 0xffffff80008f2938 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f29bb : je 0xffffff80008f29cd ; mov rdi, r14 ; call rcx
0xffffff80008f2a13 : je 0xffffff80008f29f5 ; mov rdi, r14 ; call rcx
0xffffff80008f2a6b : je 0xffffff80008f2a7d ; mov rdi, r14 ; call rcx
0xffffff80008f2ac3 : je 0xffffff80008f2aa5 ; mov rdi, r14 ; call rcx
0xffffff80008f2b1b : je 0xffffff80008f2b33 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2b73 : je 0xffffff80008f2b58 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2d6e : je 0xffffff80008f2d86 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2dc6 : je 0xffffff80008f2da8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2f27 : je 0xffffff80008f2f08 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f30e7 : je 0xffffff80008f30c8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f32ca : je 0xffffff80008f32a8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f34aa : je 0xffffff80008f3488 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f367a : je 0xffffff80008f3658 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f383a : je 0xffffff80008f3818 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f39fa : je 0xffffff80008f39d8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f4102 : je 0xffffff80008f4192 ; mov rdi, r14 ; call rcx
0xffffff80008f41da : je 0xffffff80008f41b5 ; mov rdi, r14 ; call rcx
0xffffff80008f43ba : je 0xffffff80008f4398 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f477a : je 0xffffff80008f4758 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f4c32 : je 0xffffff80008f4cc2 ; mov rdi, r14 ; call rcx
0xffffff80008f4d0a : je 0xffffff80008f4ce5 ; mov rdi, r14 ; call rcx
0xffffff80008f501e : je 0xffffff80008f5030 ; mov rdi, r15 ; call rcx
0xffffff80008f5076 : je 0xffffff80008f5055 ; mov rdi, r15 ; call rcx
0xffffff80008f511e : je 0xffffff80008f5130 ; mov rdi, r15 ; call rcx
0xffffff80008f5176 : je 0xffffff80008f5155 ; mov rdi, r15 ; call rcx
0xffffff80008f520e : je 0xffffff80008f5220 ; mov rdi, r14 ; call rcx
0xffffff80008f5266 : je 0xffffff80008f5245 ; mov rdi, r14 ; call rcx
0xffffff80008f531e : je 0xffffff80008f5338 ; mov rdi, qword ptr [r14 + 0xe0] ; call rcx
0xffffff80008f5376 : je 0xffffff80008f5359 ; mov rdi, qword ptr [r14 + 0xe0] ; call rcx
0xffffff80008f53ee : je 0xffffff80008f5400 ; mov rdi, r15 ; call rcx
0xffffff80008f5446 : je 0xffffff80008f5425 ; mov rdi, r15 ; call rcx
0xffffff80008f54ce : je 0xffffff80008f54e0 ; mov rdi, r15 ; call rcx
0xffffff80008f5526 : je 0xffffff80008f5505 ; mov rdi, r15 ; call rcx
0xffffff80008f559e : je 0xffffff80008f55b0 ; mov rdi, r14 ; call rcx
0xffffff80008f55f6 : je 0xffffff80008f55d5 ; mov rdi, r14 ; call rcx
0xffffff80008f566e : je 0xffffff80008f5686 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f56ca : je 0xffffff80008f56a8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f570e : je 0xffffff80008f5720 ; mov rdi, r14 ; call rcx
0xffffff80008f5766 : je 0xffffff80008f5745 ; mov rdi, r14 ; call rcx
0xffffff80008f587e : je 0xffffff80008f5896 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f58d6 : je 0xffffff80008f58b8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008fee12 : je 0xffffff80008feea2 ; mov rdi, r14 ; call rcx
0xffffff80008feeea : je 0xffffff80008feec5 ; mov rdi, r14 ; call rcx
0xffffff80008fefd2 : je 0xffffff80008ff062 ; mov rdi, r14 ; call rcx
0xffffff80008ff0aa : je 0xffffff80008ff085 ; mov rdi, r14 ; call rcx
0xffffff80008ff27a : je 0xffffff80008ff258 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008ff352 : je 0xffffff80008ff3e2 ; mov rdi, r14 ; call rcx
0xffffff80008ff42a : je 0xffffff80008ff405 ; mov rdi, r14 ; call rcx
0xffffff80008ff5fa : je 0xffffff80008ff5d8 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008ff6d2 : je 0xffffff80008ff762 ; mov rdi, r14 ; call rcx
0xffffff80008ff7aa : je 0xffffff80008ff785 ; mov rdi, r14 ; call rcx
0xffffff80008fff3a : je 0xffffff80008fff18 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff800090004e : je 0xffffff8000900060 ; mov rdi, r15 ; call rcx
0xffffff80009000a6 : je 0xffffff8000900085 ; mov rdi, r15 ; call rcx
0xffffff800090010e : je 0xffffff8000900120 ; mov rdi, r15 ; call rcx
0xffffff8000900166 : je 0xffffff8000900145 ; mov rdi, r15 ; call rcx
0xffffff80009002ae : je 0xffffff80009002c2 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff8000900306 : je 0xffffff80009002e6 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff800090097e : je 0xffffff8000900990 ; mov rdi, r15 ; call rcx
0xffffff80009009d6 : je 0xffffff80009009b5 ; mov rdi, r15 ; call rcx
0xffffff8000900a3e : je 0xffffff8000900a50 ; mov rdi, r15 ; call rcx
0xffffff8000900a96 : je 0xffffff8000900a75 ; mov rdi, r15 ; call rcx
0xffffff8000900bde : je 0xffffff8000900bf2 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff8000900c36 : je 0xffffff8000900c16 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff80009014ae : je 0xffffff80009014c0 ; mov rdi, r15 ; call rcx
0xffffff8000901506 : je 0xffffff80009014e5 ; mov rdi, r15 ; call rcx
0xffffff80009015ae : je 0xffffff80009015c0 ; mov rdi, r15 ; call rcx
0xffffff8000901606 : je 0xffffff80009015e5 ; mov rdi, r15 ; call rcx
0xffffff800090182e : je 0xffffff8000901842 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff8000901886 : je 0xffffff8000901866 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff80009018ee : je 0xffffff8000901908 ; mov rdi, qword ptr [r14 + 0x88] ; call rcx
0xffffff8000901946 : je 0xffffff8000901929 ; mov rdi, qword ptr [r14 + 0x88] ; call rcx
0xffffff80009026fe : je 0xffffff8000902710 ; mov rdi, r15 ; call rcx
0xffffff8000902756 : je 0xffffff8000902735 ; mov rdi, r15 ; call rcx
0xffffff80009027be : je 0xffffff80009027d0 ; mov rdi, r15 ; call rcx
0xffffff8000902816 : je 0xffffff80009027f5 ; mov rdi, r15 ; call rcx
0xffffff8000902b6a : je 0xffffff8000902b48 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009033ee : je 0xffffff8000903400 ; mov rdi, r15 ; call rcx
0xffffff8000903446 : je 0xffffff8000903425 ; mov rdi, r15 ; call rcx
0xffffff80009034ae : je 0xffffff80009034c0 ; mov rdi, r15 ; call rcx
0xffffff8000903506 : je 0xffffff80009034e5 ; mov rdi, r15 ; call rcx
0xffffff800090385a : je 0xffffff8000903838 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009058ae : je 0xffffff80009058c0 ; mov rdi, r14 ; call rcx
0xffffff8000905906 : je 0xffffff80009058e5 ; mov rdi, r14 ; call rcx
0xffffff800090598e : je 0xffffff80009059a0 ; mov rdi, r14 ; call rcx
0xffffff80009059e6 : je 0xffffff80009059c5 ; mov rdi, r14 ; call rcx
0xffffff8000905a7e : je 0xffffff8000905a96 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000905ad6 : je 0xffffff8000905ab8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000906b7a : je 0xffffff8000906b58 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009070da : je 0xffffff80009070b8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000907382 : je 0xffffff8000907412 ; mov rdi, r14 ; call rcx
0xffffff800090745a : je 0xffffff8000907435 ; mov rdi, r14 ; call rcx
0xffffff800090762a : je 0xffffff8000907608 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009077ea : je 0xffffff80009077c8 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000907ace : je 0xffffff8000907ae0 ; mov rdi, r15 ; call rcx
0xffffff8000907b26 : je 0xffffff8000907b05 ; mov rdi, r15 ; call rcx
0xffffff8000907c5e : je 0xffffff8000907c70 ; mov rdi, r15 ; call rcx
0xffffff8000907cb6 : je 0xffffff8000907c95 ; mov rdi, r15 ; call rcx
0xffffff8000907d32 : je 0xffffff8000907dc2 ; mov rdi, r14 ; call rcx
0xffffff8000907e0a : je 0xffffff8000907de5 ; mov rdi, r14 ; call rcx
0xffffff800090962a : je 0xffffff8000909608 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff800090970e : je 0xffffff800090972c ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff8000909766 : je 0xffffff8000909748 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff8000909848 : je 0xffffff800090982f ; and al, byte ptr [rax] ; jmp 0xffffff8000909815
0xffffff8000909a7a : je 0xffffff8000909a58 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000909c3a : je 0xffffff8000909c18 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000909d12 : je 0xffffff8000909da2 ; mov rdi, r14 ; call rcx
0xffffff8000909dea : je 0xffffff8000909dc5 ; mov rdi, r14 ; call rcx
0xffffff8000909fca : je 0xffffff8000909fa8 ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800090a3ca : je 0xffffff800090a3a8 ; mov rdi, r12 ; mov esi, r15d ; call rcx
0xffffff800090a533 : je 0xffffff800090a588 ; mov edi, esp ; mov esi, r13d ; call rcx
0xffffff800090a532 : je 0xffffff800090a5b0 ; mov rdi, r12 ; mov esi, r13d ; call rcx
0xffffff800090a5fd : je 0xffffff800090a5d8 ; mov rdi, r12 ; mov esi, r13d ; call rcx
0xffffff800090a71e : je 0xffffff800090a730 ; mov rdi, r14 ; call rcx
0xffffff800090a776 : je 0xffffff800090a755 ; mov rdi, r14 ; call rcx
0xffffff80002552ce : jg 0xffffff80002552d9 ; call 0xffffff80002551a9
0xffffff800025d721 : jg 0xffffff800025d71b ; ret 0x7580
0xffffff800025e1e6 : jg 0xffffff800025e206 ; add byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff800025ed60 : jg 0xffffff800025ecf3 ; add al, ch ; fdivr dword ptr [rbx + rdx] ; add dh, dh ; ret
0xffffff8000265175 : jg 0xffffff80002651f4 ; add eax, 0x7512fb83 ; movsxd rsi, esi ; ret 0x7580
0xffffff8000269116 : jg 0xffffff800026909f ; add al, ch ; ret 0x1292
0xffffff800026dd4e : jg 0xffffff800026dd5f ; mov qword ptr [rdi + 0x10], rdi ; pop rbp ; ret
0xffffff800026dd52 : jg 0xffffff800026dd67 ; pop rbp ; ret
0xffffff8000288c28 : jg 0xffffff8000288c4c ; call rax
0xffffff8000293676 : jg 0xffffff8000293686 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80002ce377 : jg 0xffffff80002ce37e ; mov rsi, rbx ; call rax
0xffffff80002d5f39 : jg 0xffffff80002d5ec4 ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0xc148
0xffffff80002d5f38 : jg 0xffffff80002d5ec5 ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0xc148
0xffffff80002ef96d : jg 0xffffff80002ef9d9 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f85b8 : jg 0xffffff80002f85c1 ; shl rax, 0xc ; pop rbp ; ret
0xffffff80002f85e5 : jg 0xffffff80002f85ef ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80002f8623 : jg 0xffffff80002f862d ; sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff80002fa870 : jg 0xffffff80002fa876 ; pop rbx ; pop rbp ; ret
0xffffff80002fadc9 : jg 0xffffff80002fadd1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002fb5be : jg 0xffffff80002fb5c3 ; pop rbp ; ret
0xffffff80002ff9d9 : jg 0xffffff80002ff9e0 ; xor eax, eax ; pop rbp ; ret
0xffffff80002ff9f6 : jg 0xffffff80002ff9fb ; pop rbp ; ret
0xffffff80002ffad4 : jg 0xffffff80002ffadc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ffb8b : jg 0xffffff80002ffc14 ; add byte ptr [rcx + 0x39ead1ca], cl ; ret 0x870f
0xffffff80002ffcd9 : jg 0xffffff80002ffce2 ; mov dword ptr [rdx + rcx*8 + 0x14], eax ; pop rbp ; ret
0xffffff80002ffcf8 : jg 0xffffff80002ffd01 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000311410 : jg 0xffffff800031145f ; or al, 0xf ; xchg eax, ebp ; ret 0xe181
0xffffff800031f6ee : jg 0xffffff800031f709 ; call 0xffffff80003924d9
0xffffff8000321766 : jg 0xffffff80003217ea ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000321790 : jg 0xffffff8000321814 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000339d48 : jg 0xffffff8000339d4b ; jmp qword ptr [rcx]
0xffffff800033a639 : jg 0xffffff800033a677 ; call 0xffffff8000396864
0xffffff800033e75b : jg 0xffffff800033e75e ; jmp qword ptr [rcx]
0xffffff800033fab7 : jg 0xffffff800033faba ; jmp qword ptr [rcx]
0xffffff800034fae6 : jg 0xffffff800034faf3 ; pop rbp ; ret
0xffffff80003683f8 : jg 0xffffff800036838c ; or al, 0x91 ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000371078 : jg 0xffffff8000371043 ; pop rbp ; ret
0xffffff800037648a : jg 0xffffff800037649e ; call rax
0xffffff8000376542 : jg 0xffffff8000376556 ; call rax
0xffffff800037781a : jg 0xffffff800037781c ; jmp qword ptr [rbx]
0xffffff800038a585 : jg 0xffffff800038a58b ; dec dword ptr [rax + 1] ; ret
0xffffff80003913a1 : jg 0xffffff80003913a3 ; jmp qword ptr [rbx]
0xffffff800039a454 : jg 0xffffff800039a4ce ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800039a453 : jg 0xffffff800039a4cf ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80003a48d2 : jg 0xffffff80003a48e1 ; add byte ptr [rbp - 8], dh ; ret
0xffffff80003a49ac : jg 0xffffff80003a49c3 ; add byte ptr [rbp - 8], dh ; ret
0xffffff80003a9c5e : jg 0xffffff80003a9cd7 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80003a9c5d : jg 0xffffff80003a9cd8 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80003ab90b : jg 0xffffff80003ab912 ; add byte ptr [rax], al ; call rcx
0xffffff80003b9134 : jg 0xffffff80003b9121 ; ret
0xffffff80003eb08d : jg 0xffffff80003eb08d ; push rsi ; ret
0xffffff80003eb0e7 : jg 0xffffff80003eb0e7 ; push rsi ; ret
0xffffff80003f12bd : jg 0xffffff80003f12e1 ; cli ; push rsi ; ret
0xffffff80003f1f2b : jg 0xffffff80003f1f3e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003f1f2a : jg 0xffffff80003f1f3f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800042181f : jg 0xffffff8000421876 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x844
0xffffff800043e188 : jg 0xffffff800043e18b ; jmp qword ptr [rcx]
0xffffff800043e6c4 : jg 0xffffff800043e6c7 ; jmp qword ptr [rbx]
0xffffff80004489f2 : jg 0xffffff80004489fd ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff8000448a3d : jg 0xffffff8000448a48 ; xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff80004ab02a : jg 0xffffff80004ab058 ; cld ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004d01fa : jg 0xffffff80004d025c ; pop r14 ; pop rbp ; ret
0xffffff80004d581f : jg 0xffffff80004d581a ; ret 0xffef
0xffffff8000547fdf : jg 0xffffff8000548030 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000548d7e : jg 0xffffff8000548dcf ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000549185 : jg 0xffffff80005491e7 ; pop r14 ; pop rbp ; ret
0xffffff800054dfa4 : jg 0xffffff800054dfbf ; mov rsi, qword ptr [rbp - 0x38] ; mov rbx, rdx ; call rbx
0xffffff800055ee6d : jg 0xffffff800055ee90 ; lea rsi, [r14 + 0x88] ; call rcx
0xffffff800057401b : jg 0xffffff8000574026 ; add byte ptr [rcx], al ; je 0xffffff800057402c ; xor eax, eax ; pop rbp ; ret
0xffffff800058e601 : jg 0xffffff800058e5e8 ; jmp 0xffffff800058e614
0xffffff800059bbb4 : jg 0xffffff800059bbc5 ; sar rcx, 0x3f ; mov eax, ecx ; pop rbp ; ret
0xffffff800059df1c : jg 0xffffff800059ded1 ; jmp 0xffffff800059df2f
0xffffff80005bfad4 : jg 0xffffff80005bfaa6 ; jmp 0xffffff80005bfae7
0xffffff80005bfbd4 : jg 0xffffff80005bfb99 ; jmp 0xffffff80005bfc92
0xffffff80005bfc7f : jg 0xffffff80005bfc43 ; jmp 0xffffff80005bfc8f
0xffffff80006087e2 : jg 0xffffff80006087d3 ; pop rbp ; ret
0xffffff80006140c6 : jg 0xffffff8000614097 ; xchg dword ptr [rbx], esp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065841d : jg 0xffffff8000658481 ; ret
0xffffff800066462d : jg 0xffffff80006645cc ; ret 0x8bff
0xffffff80006809d0 : jg 0xffffff800068099c ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006809cf : jg 0xffffff800068099d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000698f1d : jg 0xffffff8000698ee5 ; ret 0xffff
0xffffff80006c024d : jg 0xffffff80006c02c5 ; str word ptr [rax - 0x77] ; ret
0xffffff80006c1e3a : jg 0xffffff80006c1e72 ; add byte ptr [rcx], dh ; shr al, 0x6c ; ret
0xffffff8000716fba : jg 0xffffff8000716f74 ; and eax, 0xc821487c ; pop rbp ; ret
0xffffff8000718bdd : jg 0xffffff8000718bea ; pop rbp ; ret
0xffffff80007455dd : jg 0xffffff80007455f1 ; xchg eax, esp ; ret
0xffffff8000745601 : jg 0xffffff8000745615 ; xchg eax, esp ; ret
0xffffff8000745626 : jg 0xffffff800074563a ; xchg eax, esp ; ret
0xffffff8000745646 : jg 0xffffff800074565a ; xchg eax, esp ; ret 0x8440
0xffffff800074566d : jg 0xffffff8000745681 ; xchg eax, esp ; ret 0x8440
0xffffff8000745694 : jg 0xffffff80007456a8 ; xchg eax, esp ; ret 0x8440
0xffffff80007456bb : jg 0xffffff80007456cf ; xchg eax, esp ; ret 0x8440
0xffffff8000749bd6 : jg 0xffffff8000749bdd ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800074b39a : jg 0xffffff800074b3fc ; pop r14 ; pop rbp ; ret
0xffffff8000755f13 : jg 0xffffff8000755ee3 ; pop rbp ; ret
0xffffff800075987f : jg 0xffffff8000759868 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000759ead : jg 0xffffff8000759e3b ; ret
0xffffff800075e44c : jg 0xffffff800075e425 ; xor eax, eax ; pop rbp ; ret
0xffffff800075e6bd : jg 0xffffff800075e70a ; ret
0xffffff8000766992 : jg 0xffffff8000766953 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e9
0xffffff80007691bd : jg 0xffffff800076915f ; ret 0x4aff
0xffffff8000769cbd : jg 0xffffff8000769c4e ; ret 0x48ff
0xffffff8000771584 : jg 0xffffff80007715d9 ; mov edi, esi ; call 0xffffff8000393047
0xffffff80007a989c : jg 0xffffff80007a98ef ; add esp, 0x30 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007bca13 : jg 0xffffff80007bca1a ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80007eaf56 : jg 0xffffff80007eaf88 ; mov rdi, r15 ; mov rsi, r14 ; call rbx
0xffffff80007f4c1f : jg 0xffffff80007f4c27 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f6305 : jg 0xffffff80007f6319 ; ret
0xffffff800080fe60 : jg 0xffffff800080fe7a ; test rdi, rdi ; jne 0xffffff800080fe58 ; pop rbp ; ret
0xffffff80008192cf : jg 0xffffff80008192d7 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081931b : jg 0xffffff8000819323 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000821a96 : jg 0xffffff8000821ae7 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000861236 : jg 0xffffff8000861287 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000861235 : jg 0xffffff8000861288 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000865a7d : jg 0xffffff8000865a6f ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086cc8d : jg 0xffffff800086cc31 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000876c80 : jg 0xffffff8000876cf0 ; add byte ptr [rdx + rdi - 0x48], dh ; ret 2
0xffffff8000880536 : jg 0xffffff8000880513 ; pop rbp ; ret
0xffffff80008805a6 : jg 0xffffff8000880583 ; pop rbp ; ret
0xffffff8000880636 : jg 0xffffff8000880614 ; pop rbx ; pop rbp ; ret
0xffffff80008806a6 : jg 0xffffff8000880683 ; pop rbp ; ret
0xffffff80008812c9 : jg 0xffffff8000881349 ; jmp 0xffffff8000881314
0xffffff8000892b4d : jg 0xffffff8000892b95 ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80008d270b : jg 0xffffff80008d2706 ; ret 0xffef
0xffffff80008db050 : jg 0xffffff80008db001 ; push rsi ; ret
0xffffff80008de98b : jg 0xffffff80008de985 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008e462d : jg 0xffffff80008e4641 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b45f41 : jg 0xffffff8000b45f33 ; ret
0xffffff8000253262 : jge 0xffffff8000253267 ; pop rbp ; ret
0xffffff8000256804 : jge 0xffffff80002567ca ; call 0xffffff8000392a44
0xffffff8000272e92 : jge 0xffffff8000272e45 ; call 0xffffff80003923e9
0xffffff8000276a7d : jge 0xffffff8000276a28 ; mov esi, 0x34 ; call 0xffffff8000292d79
0xffffff8000276b55 : jge 0xffffff8000276b00 ; mov esi, 0x20 ; call 0xffffff8000292d79
0xffffff80002d667a : jge 0xffffff80002d6618 ; call 0xffffff8000392934
0xffffff80002d66a6 : jge 0xffffff80002d6644 ; call 0xffffff8000392934
0xffffff80002d6d47 : jge 0xffffff80002d6ce5 ; call 0xffffff8000393044
0xffffff80002d6d43 : jge 0xffffff80002d6cfd ; mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000393048
0xffffff80002d6e0f : jge 0xffffff80002d6dad ; call 0xffffff8000393044
0xffffff80002e8bf8 : jge 0xffffff80002e8c00 ; xor esi, esi ; call 0xffffff80002d4ef6
0xffffff80002e8bf7 : jge 0xffffff80002e8c01 ; xor esi, esi ; call 0xffffff80002d4ef7
0xffffff80002e8cbe : jge 0xffffff80002e8cc6 ; xor esi, esi ; call 0xffffff80002d4ef6
0xffffff80002e8cbd : jge 0xffffff80002e8cc7 ; xor esi, esi ; call 0xffffff80002d4ef7
0xffffff80002ed3e8 : jge 0xffffff80002ed3ed ; pop rbp ; ret
0xffffff80002ede61 : jge 0xffffff80002ede33 ; jmp 0xffffff80002edd18
0xffffff8000301c81 : jge 0xffffff8000301c5c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x738b
0xffffff800030fc90 : jge 0xffffff800030fc9b ; mov rax, rdi ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff800031ad64 : jge 0xffffff800031ad7f ; call 0xffffff8000392609
0xffffff800031aece : jge 0xffffff800031aee9 ; call 0xffffff8000392609
0xffffff800031b581 : jge 0xffffff800031b59c ; call 0xffffff8000392609
0xffffff800031f175 : jge 0xffffff800031f17a ; pop rbp ; ret
0xffffff80003768ba : jge 0xffffff80003768ce ; call rax
0xffffff8000389783 : jge 0xffffff800038975b ; call qword ptr [rax]
0xffffff80003aa487 : jge 0xffffff80003aa420 ; mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003aa606 : jge 0xffffff80003aa59e ; mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff80003aa9ba : jge 0xffffff80003aa953 ; mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003c2ef4 : jge 0xffffff80003c2ecb ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd184
0xffffff80003efba4 : jge 0xffffff80003efb5e ; call 0xffffff8000393048
0xffffff80003efd57 : jge 0xffffff80003efd11 ; call 0xffffff8000393048
0xffffff80003efdf7 : jge 0xffffff80003efdb1 ; call 0xffffff8000393048
0xffffff80003f0a41 : jge 0xffffff80003f09f3 ; call 0xffffff8000393048
0xffffff8000455a4e : jge 0xffffff8000455a49 ; ret
0xffffff80004953b7 : jge 0xffffff80004953c2 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80004954dc : jge 0xffffff80004954eb ; add qword ptr [rdi + 8], r8 ; pop rbp ; ret
0xffffff800049f9a5 : jge 0xffffff800049f987 ; mov rdx, r14 ; mov rcx, r15 ; call rax
0xffffff80004be385 : jge 0xffffff80004be394 ; add dword ptr [rdi], ecx ; lahf ; ret
0xffffff800050dd0c : jge 0xffffff800050dcbc ; call rax
0xffffff8000516352 : jge 0xffffff8000516318 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800051cf5c : jge 0xffffff800051cefb ; mov rdx, r15 ; call rax
0xffffff800054544e : jge 0xffffff800054540e ; mov rsi, r12 ; call r14
0xffffff8000556b63 : jge 0xffffff8000556af1 ; call 0xffffff8000752d74
0xffffff800055fc17 : jge 0xffffff800055fc3a ; lea rsi, [r14 + 0x88] ; call rcx
0xffffff80005f1f9a : jge 0xffffff80005f1f78 ; add byte ptr [rcx - 0x77], cl ; fimul word ptr [rdi] ; xchg eax, esp ; ret
0xffffff80006064af : jge 0xffffff8000606486 ; mov esi, r13d ; call rbx
0xffffff800061bd90 : jge 0xffffff800061bde6 ; add byte ptr [rcx], ch ; ret 0xca39
0xffffff800061be5f : jge 0xffffff800061beb5 ; add byte ptr [rcx], ch ; ret 0xca39
0xffffff800062ccd5 : jge 0xffffff800062ccf4 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006568b4 : jge 0xffffff800065683b ; mov rdx, r15 ; call rax
0xffffff8000657d1f : jge 0xffffff8000657d8a ; ret
0xffffff8000660512 : jge 0xffffff80006604e1 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000660b2f : jge 0xffffff8000660b09 ; ret 0x8bff
0xffffff800066d4a7 : jge 0xffffff800066d4b9 ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000678988 : jge 0xffffff800067892b ; lea rsi, [rbp - 0x74] ; mov edx, r15d ; call rbx
0xffffff80006789b2 : jge 0xffffff8000678955 ; lea rsi, [rbp - 0x74] ; mov edx, r15d ; call rbx
0xffffff800068e28f : jge 0xffffff800068e216 ; mov rdx, rbx ; call rax
0xffffff800068e617 : jge 0xffffff800068e59b ; call rax
0xffffff800068e787 : jge 0xffffff800068e70e ; mov rdx, rbx ; call rax
0xffffff800069714f : jge 0xffffff80006971bf ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006b48eb : jge 0xffffff80006b48ca ; mov esi, 4 ; call 0xffffff8000370bc9
0xffffff80006b6efe : jge 0xffffff80006b6e8b ; ret
0xffffff80006b6efe : jge 0xffffff80006b6e8e ; ret
0xffffff80006dfec6 : jge 0xffffff80006dfe5c ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff80006f13bc : jge 0xffffff80006f138e ; call 0xffffff8000393048
0xffffff800070df9b : jge 0xffffff800070df62 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80007100b8 : jge 0xffffff8000710061 ; mov r14, rdx ; call 0xffffff800078c387
0xffffff8000720c82 : jge 0xffffff8000720c3b ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000720c9e
0xffffff8000749e16 : jge 0xffffff8000749e1d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800074d4a1 : jge 0xffffff800074d47c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800076345b : jge 0xffffff800076342a ; call 0xffffff80003923e5
0xffffff800076346f : jge 0xffffff8000763446 ; call 0xffffff8000392a45
0xffffff8000763594 : jge 0xffffff800076356b ; call 0xffffff8000393045
0xffffff80007636c6 : jge 0xffffff8000763695 ; call 0xffffff80003923e5
0xffffff80007637e2 : jge 0xffffff80007637b9 ; call 0xffffff8000393045
0xffffff80007637f6 : jge 0xffffff80007637cd ; call 0xffffff8000393045
0xffffff800076380a : jge 0xffffff80007637e1 ; call 0xffffff8000393045
0xffffff8000763931 : jge 0xffffff8000763908 ; call 0xffffff8000393045
0xffffff8000763975 : jge 0xffffff8000763944 ; call 0xffffff80003923e5
0xffffff8000763a91 : jge 0xffffff8000763a60 ; call 0xffffff80003923e5
0xffffff8000763b6e : jge 0xffffff8000763b3d ; call 0xffffff80003923e5
0xffffff8000763b80 : jge 0xffffff8000763b4f ; call 0xffffff80003923e5
0xffffff8000763c7a : jge 0xffffff8000763c49 ; call 0xffffff80003923e5
0xffffff8000763cce : jge 0xffffff8000763c9d ; call 0xffffff80003923e5
0xffffff8000763d01 : jge 0xffffff8000763cd0 ; call 0xffffff80003923e5
0xffffff800076520b : jge 0xffffff80007651bd ; mov rbx, rax ; call 0xffffff8000393048
0xffffff8000766a3e : jge 0xffffff8000766a64 ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff80007696bf : jge 0xffffff800076965c ; ret 0x49ff
0xffffff800076a4bf : jge 0xffffff800076a44e ; ret 0x41ff
0xffffff800076dd4f : jge 0xffffff800076dd79 ; cmp al, 0 ; call 0xffffff8000392937
0xffffff8000770cff : jge 0xffffff8000770d61 ; ret 0x41ff
0xffffff800078c6f9 : jge 0xffffff800078c6e3 ; pop rbp ; ret
0xffffff800079c21c : jge 0xffffff800079c229 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c6c60 : jge 0xffffff80007c6c2b ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x888d
0xffffff80007eb016 : jge 0xffffff80007eafd1 ; mov rsi, r13 ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80007ece7a : jge 0xffffff80007ece82 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007fb73f : jge 0xffffff80007fb7ab ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fe181 : jge 0xffffff80007fe156 ; call r15
0xffffff800080ee0f : jge 0xffffff800080ee79 ; xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000810e27 : jge 0xffffff8000810e71 ; xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff800081cdb0 : jge 0xffffff800081cd67 ; mov rsi, rax ; call rcx
0xffffff800081cdc1 : jge 0xffffff800081cd75 ; call rcx
0xffffff800084555a : jge 0xffffff8000845531 ; mov rsi, rax ; call rcx
0xffffff800084556b : jge 0xffffff800084553f ; call rcx
0xffffff8000845598 : jge 0xffffff800084556f ; mov rsi, rax ; call rcx
0xffffff80008455a9 : jge 0xffffff800084557d ; call rcx
0xffffff80008460ca : jge 0xffffff80008460e2 ; add byte ptr [rax + 0xf], cl ; ret 0x8b4c
0xffffff800084627a : jge 0xffffff8000846292 ; add byte ptr [rax + 0xf], cl ; ret 0x8b4c
0xffffff800084d205 : jge 0xffffff800084d229 ; jmp rdx
0xffffff8000859ed2 : jge 0xffffff8000859e85 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800086aadf : jge 0xffffff800086aaf5 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000881657 : jge 0xffffff80008816b1 ; sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80008846f7 : jge 0xffffff8000884721 ; sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000893077 : jge 0xffffff80008930ba ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800089426d : jge 0xffffff800089428d ; mov rsi, r13 ; call r15
0xffffff8000899017 : jge 0xffffff8000898ffb ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff80008a9f47 : jge 0xffffff80008a9f1e ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008af367 : jge 0xffffff80008af3eb ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ed861 : jge 0xffffff80008ed856 ; call r8
0xffffff80008ed8f8 : jge 0xffffff80008ed8ec ; call rax
0xffffff80008f04bf : jge 0xffffff80008f046a ; mov rsi, qword ptr [rbp - 0x50] ; mov rdx, r14 ; call rbx
0xffffff80008f084f : jge 0xffffff80008f0821 ; mov rsi, rbx ; mov rdx, r15 ; call rax
0xffffff80008f1794 : jge 0xffffff80008f1738 ; call rbx
0xffffff80008f181d : jge 0xffffff80008f17c1 ; call rcx
0xffffff80008f6521 : jge 0xffffff80008f64eb ; mov rcx, r13 ; mov r9, r12 ; call rbx
0xffffff80008f6628 : jge 0xffffff80008f65f2 ; mov rcx, r13 ; mov r9, r12 ; call rbx
0xffffff80008f7192 : jge 0xffffff80008f716c ; mov rsi, r12 ; mov ecx, r14d ; call rbx
0xffffff80008f7279 : jge 0xffffff80008f7253 ; mov rsi, r12 ; mov ecx, r14d ; call rbx
0xffffff80008f7f59 : jge 0xffffff80008f7f33 ; mov rsi, r12 ; mov rcx, r14 ; call rbx
0xffffff80008f8040 : jge 0xffffff80008f801a ; mov rsi, r12 ; mov rcx, r14 ; call rbx
0xffffff80008f841b : jge 0xffffff80008f83e3 ; mov rsi, r14 ; call r15
0xffffff80008f855e : jge 0xffffff80008f8526 ; mov rsi, r14 ; call r15
0xffffff80008fb8c5 : jge 0xffffff80008fb89c ; mov rsi, r15 ; call rbx
0xffffff80008fb9b4 : jge 0xffffff80008fb98e ; mov rsi, r15 ; mov ecx, r12d ; call rbx
0xffffff8000b3c96f : jge 0xffffff8000b3c8f4 ; ret 0xf7c8
0xffffff8000273946 : jl 0xffffff8000273956 ; add byte ptr [rcx + rcx*4 + 0x7b], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff8000275c14 : jl 0xffffff8000275c0e ; ret 0x7504
0xffffff8000289006 : jl 0xffffff8000288fe6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028a786 : jl 0xffffff800028a766 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000290d4d : jl 0xffffff8000290d18 ; adc byte ptr [rcx + rcx*4 + 0x74], cl ; ret
0xffffff80002990fd : jl 0xffffff80002990a8 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029c7f4 : jl 0xffffff800029c81f ; xor rsi, r14 ; call rax
0xffffff80002b93a4 : jl 0xffffff80002b932e ; loopne 0xffffff80002b93ae ; pop rbp ; ret
0xffffff80002b93a3 : jl 0xffffff80002b932f ; loopne 0xffffff80002b93af ; pop rbp ; ret
0xffffff80002baa74 : jl 0xffffff80002ba9fe ; loopne 0xffffff80002baa7e ; pop rbp ; ret
0xffffff80002baa73 : jl 0xffffff80002ba9ff ; loopne 0xffffff80002baa7f ; pop rbp ; ret
0xffffff80002bad94 : jl 0xffffff80002bad4a ; add esi, esi ; ret 0x7504
0xffffff80002da23c : jl 0xffffff80002da26b ; adc byte ptr [rax - 0x77], cl ; test al, 0x89 ; ret 0xc148
0xffffff8000307d5e : jl 0xffffff8000307d29 ; call 0xffffff800911007a
0xffffff8000307d5d : jl 0xffffff8000307d2a ; call 0xffffff800911007b
0xffffff8000310cba : jl 0xffffff8000310cbd ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000325d4f : jl 0xffffff8000325d4a ; ret 0
0xffffff8000329cca : jl 0xffffff8000329c87 ; call rdi
0xffffff8000329cca : jl 0xffffff8000329c8a ; call rdi
0xffffff800032fa8e : jl 0xffffff800032fa99 ; mov edi, 2 ; call 0xffffff800029bce9
0xffffff8000330fcd : jl 0xffffff8000330fda ; ret 0x8941
0xffffff8000331009 : jl 0xffffff8000331016 ; ret 0x8941
0xffffff8000331045 : jl 0xffffff8000331052 ; ret 0x8941
0xffffff8000331081 : jl 0xffffff800033108e ; ret 0x8941
0xffffff80003310bd : jl 0xffffff80003310ca ; ret 0x8941
0xffffff80003310f9 : jl 0xffffff8000331106 ; ret 0x8941
0xffffff8000331135 : jl 0xffffff8000331142 ; ret 0x8941
0xffffff8000331171 : jl 0xffffff800033117e ; ret 0x8941
0xffffff8000331225 : jl 0xffffff8000331232 ; ret 0x8941
0xffffff8000331261 : jl 0xffffff800033126e ; ret 0x8941
0xffffff80003312ef : jl 0xffffff80003312fc ; ret 0x8941
0xffffff800033132b : jl 0xffffff8000331338 ; ret 0x8941
0xffffff8000331367 : jl 0xffffff8000331374 ; ret 0x8941
0xffffff8000331d2d : jl 0xffffff8000331d28 ; ret
0xffffff8000331d2c : jl 0xffffff8000331d29 ; ret
0xffffff8000332333 : jl 0xffffff800033233d ; mov eax, 1 ; pop rbp ; ret
0xffffff800033379b : jl 0xffffff8000333796 ; ret 0
0xffffff8000333dac : jl 0xffffff8000333db5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000334619 : jl 0xffffff800033467f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000334a0d : jl 0xffffff8000334a12 ; pop rbp ; ret
0xffffff8000334a30 : jl 0xffffff8000334a38 ; cmovbe eax, ecx ; pop rbp ; ret
0xffffff8000337b2a : jl 0xffffff8000337b2f ; pop rbp ; ret
0xffffff800033849e : jl 0xffffff80003384a5 ; jne 0xffffff80003384a9 ; pop rbp ; ret
0xffffff8000338e89 : jl 0xffffff8000338e92 ; ja 0xffffff8000338e96 ; xor eax, eax ; pop rbp ; ret
0xffffff800033d85c : jl 0xffffff800033d836 ; sub byte ptr [rbp - 0x7b], cl ; push qword ptr [rsp + rdx - 1] ; ret 0x8b41
0xffffff80003525e6 : jl 0xffffff8000352667 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000374986 : jl 0xffffff80003749c6 ; add dword ptr [rax - 0x7d], ecx ; mov byte ptr [rdx], 0x83 ; ret 0x4810
0xffffff80003771a1 : jl 0xffffff80003771e3 ; add dword ptr [rax - 0x7d], ecx ; ret
0xffffff80003778a9 : jl 0xffffff80003778b6 ; or byte ptr [rax - 1], cl ; ret 0x8b48
0xffffff8000389672 : jl 0xffffff80003896a7 ; or byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x37] ; call qword ptr [rax]
0xffffff80003916a0 : jl 0xffffff800039171a ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000392850 : jl 0xffffff80003928b1 ; add byte ptr [rax], al ; ret
0xffffff80003a6503 : jl 0xffffff80003a64f3 ; pop rbp ; ret
0xffffff80003b1b60 : jl 0xffffff80003b1b28 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003ea444 : jl 0xffffff80003ea3d1 ; ret 0xe281
0xffffff80003ea443 : jl 0xffffff80003ea3d2 ; ret 0xe281
0xffffff80003fb413 : jl 0xffffff80003fb412 ; push rsi ; ret
0xffffff8000421141 : jl 0xffffff800042116d ; sub byte ptr [rcx + rcx*4 - 0x32], cl ; call rcx
0xffffff80004439b4 : jl 0xffffff8000443952 ; mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800047c44c : jl 0xffffff800047c4bb ; add cl, ch ; ret 0xfffc
0xffffff8000484cec : jl 0xffffff8000484cb3 ; sbb dh, dh ; ret
0xffffff8000484e0c : jl 0xffffff8000484dd3 ; sbb dh, dh ; ret
0xffffff8000495499 : jl 0xffffff8000495453 ; pop rbp ; ret
0xffffff800049aeea : jl 0xffffff800049ae86 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f8591 : jl 0xffffff80004f8563 ; pop rbp ; ret
0xffffff80005118b0 : jl 0xffffff80005118cb ; call 0xffffff7fffda65bf
0xffffff800055fdce : jl 0xffffff800055fdb6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800056313d : jl 0xffffff8000563145 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800056fb62 : jl 0xffffff800056fb41 ; or byte ptr [rax - 1], cl ; ret
0xffffff80005af0be : jl 0xffffff80005af0a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005fe98c : jl 0xffffff80005fe947 ; pop rax ; mov dword ptr [rcx + rsi*4 + 0x5c], edi ; jmp 0xffffff80005fe960
0xffffff80005fe990 : jl 0xffffff80005fe947 ; pop rsp ; jmp 0xffffff80005fe95c
0xffffff800060bcf5 : jl 0xffffff800060bd50 ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff80006198b1 : jl 0xffffff80006198f1 ; add edi, esi ; rol byte ptr [rcx], 1 ; ret 0xc3e8
0xffffff80006198b1 : jl 0xffffff80006198f3 ; add edi, esi ; rol byte ptr [rcx], 1 ; ret 0xc3e8
0xffffff800061a9c3 : jl 0xffffff800061a9cc ; xor eax, eax ; pop rbp ; ret
0xffffff80006240be : jl 0xffffff800062410d ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4189
0xffffff80006263fe : jl 0xffffff8000626428 ; add al, 0xff ; ret
0xffffff800062cd85 : jl 0xffffff800062cda4 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800062dfa2 : jl 0xffffff800062dfab ; xor eax, eax ; pop rbp ; ret
0xffffff8000651b0a : jl 0xffffff8000651b7e ; xor eax, 0xe8c03100 ; mov ecx, ecx ; ret
0xffffff8000653220 : jl 0xffffff80006531d6 ; ret
0xffffff800065f6b4 : jl 0xffffff800065f6df ; adc byte ptr [rcx + 0x39], al ; ret 0x830f
0xffffff800065fdb4 : jl 0xffffff800065fd84 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800066b806 : jl 0xffffff800066b799 ; je 0xffffff800066b86e ; pop r14 ; pop rbp ; ret
0xffffff800066b805 : jl 0xffffff800066b79a ; je 0xffffff800066b86f ; pop r14 ; pop rbp ; ret
0xffffff800066b8bb : jl 0xffffff800066b91d ; pop r14 ; pop rbp ; ret
0xffffff800066b8ba : jl 0xffffff800066b91e ; pop r14 ; pop rbp ; ret
0xffffff8000675d5b : jl 0xffffff8000675d61 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800067832b : jl 0xffffff8000678310 ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff800067a804 : jl 0xffffff800067a7c9 ; mov rcx, rax ; mov rax, rcx ; pop rbp ; ret
0xffffff800067d662 : jl 0xffffff800067d65c ; ret
0xffffff800068981d : jl 0xffffff8000689855 ; add bl, ch ; ret 0x6666
0xffffff80006a2890 : jl 0xffffff80006a28c6 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80006b4953 : jl 0xffffff80006b48e0 ; and al, 0xff ; ret
0xffffff80006bcdaf : jl 0xffffff80006bcdc5 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006daa6a : jl 0xffffff80006daa25 ; xor eax, eax ; pop rbp ; ret
0xffffff80006daada : jl 0xffffff80006daa95 ; xor eax, eax ; pop rbp ; ret
0xffffff8000716f4b : jl 0xffffff8000716f59 ; clc ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000716fdf : jl 0xffffff8000716f6e ; clc ; pop rbp ; ret
0xffffff8000716fbd : jl 0xffffff800071700c ; and eax, ecx ; pop rbp ; ret
0xffffff8000744ee9 : jl 0xffffff8000744efc ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007480a0 : jl 0xffffff80007480e5 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000766780 : jl 0xffffff800076678e ; ret
0xffffff800076c522 : jl 0xffffff800076c4ee ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff80007735ea : jl 0xffffff8000773615 ; and byte ptr [rax - 0x77], cl ; ret
0xffffff80007760e8 : jl 0xffffff8000776082 ; cmp eax, dword ptr [rax] ; call 0xffffff80003987d7
0xffffff800078cc67 : jl 0xffffff800078cc53 ; pop rbp ; ret
0xffffff800079d540 : jl 0xffffff800079d54f ; mov dword ptr [rdi + 0x14], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80007ad44d : jl 0xffffff80007ad443 ; pop rbp ; ret
0xffffff80007b0943 : jl 0xffffff80007b095f ; call 0xffffff800080cbe4
0xffffff80007e9043 : jl 0xffffff80007e8ff9 ; inc dword ptr [rbx + 0x440f30f8] ; ret
0xffffff80007eceb8 : jl 0xffffff80007ecec0 ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80007ecef6 : jl 0xffffff80007ecefe ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80007f0ed2 : jl 0xffffff80007f0efd ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0xffffff80007fef1e : jl 0xffffff80007fef3a ; xor byte ptr [rdx], al ; je 0xffffff80007fef2f ; xor eax, eax ; pop rbp ; ret
0xffffff800081fb99 : jl 0xffffff800081fb47 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000826066 : jl 0xffffff800082606c ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008365dd : jl 0xffffff8000836626 ; inc dword ptr [rax] ; je 0xffffff80008365f0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000839261 : jl 0xffffff800083926c ; add dword ptr [rax - 0x7f], ecx ; ret
0xffffff8000863ea0 : jl 0xffffff8000863ef2 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000880507 : jl 0xffffff800088050f ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000880577 : jl 0xffffff800088057f ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000880677 : jl 0xffffff800088067f ; xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff80008a6e08 : jl 0xffffff80008a6df3 ; sub byte ptr [rax], al ; call 0xffffff8000393046
0xffffff80008b600b : jl 0xffffff80008b6037 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff80008cec70 : jl 0xffffff80008cec9f ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027ff84 : jle 0xffffff800027ff8a ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028a47b : jle 0xffffff800028a403 ; add byte ptr [rax + 0x39], cl ; ret 0x2f77
0xffffff800028a49d : jle 0xffffff800028a425 ; add byte ptr [rax + 0x39], cl ; ret 0xd77
0xffffff800028a4ac : jle 0xffffff800028a434 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff80002994aa : jle 0xffffff80002994b6 ; mov qword ptr [rdx], rcx ; pop rbx ; pop rbp ; ret
0xffffff800029f31e : jle 0xffffff800029f39b ; or byte ptr [rcx], al ; ret 0x9389
0xffffff80002a69c3 : jle 0xffffff80002a69a3 ; pop rbp ; ret
0xffffff80002be33b : jle 0xffffff80002be343 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002db20d : jle 0xffffff80002db223 ; add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80002ee92c : jle 0xffffff80002ee8bf ; sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff80002f9db1 : jle 0xffffff80002f9dca ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80002f9de8 : jle 0xffffff80002f9e08 ; mov qword ptr [rax], rsi ; pop rbp ; ret
0xffffff80002ffcd8 : jle 0xffffff80002ffd61 ; add byte ptr [rcx + 0x5d14ca44], cl ; ret
0xffffff800030350e : jle 0xffffff800030350a ; or byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800030fd03 : jle 0xffffff800030fd0e ; mov rax, rdi ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff800030fd51 : jle 0xffffff800030fd56 ; pop rbp ; ret
0xffffff8000310c7d : jle 0xffffff8000310c88 ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff8000347e5e : jle 0xffffff8000347e6f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003650d4 : jle 0xffffff80003650da ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000370af1 : jle 0xffffff8000370aee ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000375d52 : jle 0xffffff8000375d66 ; call rax
0xffffff8000451f01 : jle 0xffffff8000451ef6 ; movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff800048c5d9 : jle 0xffffff800048c64c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80004953a7 : jle 0xffffff80004953b2 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80004b9480 : jle 0xffffff80004b940d ; ret 0xd2f7
0xffffff80005028f7 : jle 0xffffff800050295b ; call rax
0xffffff80005060fd : jle 0xffffff8000506161 ; call rax
0xffffff80005061eb : jle 0xffffff800050624f ; call rax
0xffffff8000569967 : jle 0xffffff80005699eb ; xor esi, esi ; call rax
0xffffff80005cfa72 : jle 0xffffff80005cfabf ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80005fa3ce : jle 0xffffff80005fa41a ; retf 0x41ff ; mov edx, eax ; jmp 0xffffff80005fa3e0
0xffffff800065232e : jle 0xffffff80006522f0 ; ret
0xffffff8000655fc0 : jle 0xffffff8000655ff3 ; mov rdi, r14 ; call qword ptr [rax]
0xffffff800065c61e : jle 0xffffff800065c640 ; ret
0xffffff800066436e : jle 0xffffff80006643ec ; add byte ptr [r8 - 0x77], r9b ; fisttp word ptr [rax - 0x77] ; ret 0x63e8
0xffffff800066aa2a : jle 0xffffff800066aa05 ; inc dword ptr [rcx + 0xf] ; mov dh, 0x96 ; ret
0xffffff800066b32e : jle 0xffffff800066b360 ; ret 0x49ff
0xffffff800067aa6f : jle 0xffffff800067aa8a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800067aa6e : jle 0xffffff800067aa8b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006965d3 : jle 0xffffff8000696636 ; mov esi, 1 ; call 0xffffff80003928a9
0xffffff80006ab1fb : jle 0xffffff80006ab1d0 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006ab1fa : jle 0xffffff80006ab1d1 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006b5b62 : jle 0xffffff80006b5b6f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007192af : jle 0xffffff80007192be ; mov eax, 5 ; pop rbp ; ret
0xffffff8000749cd5 : jle 0xffffff8000749cdc ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000752f28 : jle 0xffffff8000752f39 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800075c7ae : jle 0xffffff800075c813 ; ret
0xffffff800076345e : jle 0xffffff8000763451 ; ret 0x31ff
0xffffff800076931e : jle 0xffffff80007692b7 ; ret 0x48ff
0xffffff800076eabe : jle 0xffffff800076eb07 ; ret 0x83ff
0xffffff800077d0d6 : jle 0xffffff800077d0fe ; cmp eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000787476 : jle 0xffffff80007874b6 ; add al, ch ; ret 0xc0bb
0xffffff800079aa2e : jle 0xffffff800079aa3a ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff800079b467 : jle 0xffffff800079b473 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff800079baae : jle 0xffffff800079baba ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0xffffff80007a503a : jle 0xffffff80007a503e ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a5039 : jle 0xffffff80007a503f ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a8153 : jle 0xffffff80007a8160 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007de37d : jle 0xffffff80007de388 ; xor eax, eax ; pop rbp ; ret
0xffffff80007efb9b : jle 0xffffff80007efbac ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007fb1cf : jle 0xffffff80007fb193 ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800081e9a0 : jle 0xffffff800081e9a9 ; xor eax, eax ; pop rbp ; ret
0xffffff8000822913 : jle 0xffffff8000822962 ; xor esi, esi ; call r15
0xffffff80008456b7 : jle 0xffffff80008456f2 ; mov rsi, rcx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff8000845767 : jle 0xffffff80008457aa ; mov rsi, rcx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff8000845817 : jle 0xffffff8000845862 ; mov rsi, rcx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff8000862bce : jle 0xffffff8000862bd9 ; sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088a41d : jle 0xffffff800088a3d5 ; sub al, byte ptr [rax] ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000892ab8 : jle 0xffffff8000892ad5 ; pop rbp ; jmp rax
0xffffff800089b01d : jle 0xffffff800089afc9 ; sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008aeb36 : jle 0xffffff80008aeb37 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cd7de : jle 0xffffff80008cd7c7 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d741d : jle 0xffffff80008d7405 ; and eax, 0x415b5000 ; pop rsi ; pop rbp ; ret
0xffffff80008e543e : jle 0xffffff80008e547e ; adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80009002b2 : jle 0xffffff800090030e ; call rcx
0xffffff800090030a : jle 0xffffff8000900366 ; call rcx
0xffffff8000900be2 : jle 0xffffff8000900c36 ; call rcx
0xffffff8000900c3a : jle 0xffffff8000900c8e ; call rcx
0xffffff8000901832 : jle 0xffffff800090184e ; call rcx
0xffffff800090188a : jle 0xffffff80009018a6 ; call rcx
0xffffff8000b48468 : jle 0xffffff8000b484a2 ; call rdi
0xffffff80006338e9 : jmp 0xffffff7f83ac38f5
0xffffff80007b6f78 : jmp 0xffffff7f83c46f84
0xffffff80007b6faa : jmp 0xffffff7f83c46fb6
0xffffff800089d336 : jmp 0xffffff7f83d29375
0xffffff80002d37b5 : jmp 0xffffff7f892f1944
0xffffff8000451826 : jmp 0xffffff7f898ddb8f
0xffffff8000530ed6 : jmp 0xffffff7f899bd23f
0xffffff800089b57f : jmp 0xffffff7f89d1b5a2
0xffffff800089b59f : jmp 0xffffff7f89d1b5c2
0xffffff800089b59e : jmp 0xffffff7f89d1b5c3
0xffffff80007cde6f : jmp 0xffffff7f8a3de787
0xffffff80005f81f6 : jmp 0xffffff7fc2220b06
0xffffff80005f81f6 : jmp 0xffffff7fc2220b0b
0xffffff80005f82f0 : jmp 0xffffff7fc2220c00
0xffffff80005f82f0 : jmp 0xffffff7fc2220c05
0xffffff8000839836 : jmp 0xffffff7fc2464e4d
0xffffff8000839835 : jmp 0xffffff7fc2464e4e
0xffffff8000410a0b : jmp 0xffffff7fc24aece7
0xffffff800066a481 : jmp 0xffffff7fc2a6be72
0xffffff8000483630 : jmp 0xffffff7fc2d17b41
0xffffff800038d9c9 : jmp 0xffffff7fc34662f2
0xffffff8000273276 : jmp 0xffffff7fc3aa7b7e
0xffffff80004399cc : jmp 0xffffff7fc3cce2d4
0xffffff800046aac6 : jmp 0xffffff7fc3d0aacc
0xffffff800046ab77 : jmp 0xffffff7fc3d0ab7d
0xffffff800046ab76 : jmp 0xffffff7fc3d0ab7e
0xffffff8000b3e8ab : jmp 0xffffff7fc3d535e3
0xffffff8000657172 : jmp 0xffffff7fc3d89a63
0xffffff800050975b : jmp 0xffffff7fc3d9e063
0xffffff800050975b : jmp 0xffffff7fc3d9e066
0xffffff80005b2cf9 : jmp 0xffffff7fc3de7582
0xffffff800080cd26 : jmp 0xffffff7fc3dec5b8
0xffffff800080cfa6 : jmp 0xffffff7fc3dec838
0xffffff8000656adf : jmp 0xffffff7fc3df26d0
0xffffff80006af5c2 : jmp 0xffffff7fc3f3f5d7
0xffffff8000654dc2 : jmp 0xffffff7fc3fc26b3
0xffffff80005850fc : jmp 0xffffff7fc40f6049
0xffffff800075fd44 : jmp 0xffffff7fda660438
0xffffff8000703e94 : jmp 0xffffff7fe032c584
0xffffff80008d854c : jmp 0xffffff7fe38d854a
0xffffff80008d854c : jmp 0xffffff7fe38d854e
0xffffff800032231d : jmp 0xffffff7fe4c7ae30
0xffffff80002b6a78 : jmp 0xffffff7fe52b6a77
0xffffff80002b6a78 : jmp 0xffffff7fe52b6a7b
0xffffff8000749ed0 : jmp 0xffffff7fe5749ed7
0xffffff8000749ed0 : jmp 0xffffff7fe5749edb
0xffffff8000749c94 : jmp 0xffffff7fe674bbaf
0xffffff8000456a2d : jmp 0xffffff7fe9666a37
0xffffff8000456a31 : jmp 0xffffff7fe9696a3b
0xffffff800066b363 : jmp 0xffffff7fea667597
0xffffff8000839874 : jmp 0xffffff7fec45dd8b
0xffffff8000839873 : jmp 0xffffff7fec45dd8c
0xffffff80008398f1 : jmp 0xffffff7fec45de08
0xffffff80008398f0 : jmp 0xffffff7fec45de09
0xffffff800083996e : jmp 0xffffff7fec45de85
0xffffff800083996d : jmp 0xffffff7fec45de86
0xffffff8000704039 : jmp 0xffffff7feea04043
0xffffff80008b6e45 : jmp 0xffffff7ff914b34f
0xffffff80002d9f6c : jmp 0xffffff7ffb6fde60
0xffffff80006b07e1 : jmp 0xffffff7ffd10d1d5
0xffffff80004e63b0 : jmp 0xffffff7ffd789ea4
0xffffff8000698462 : jmp 0xffffff7ffe92cd56
0xffffff80007aada9 : jmp 0xffffff7ffe9f4f9d
0xffffff80006f81f9 : jmp 0xffffff7fff568203
0xffffff8000319b21 : jmp 0xffffff7fff662852
0xffffff80004e1541 : jmp 0xffffff800010e0d3
0xffffff8000510cb0 : jmp 0xffffff80001254f8
0xffffff80004b23b5 : jmp 0xffffff80002299a9
0xffffff80002534d4 : jmp 0xffffff8000253533
0xffffff800025a0d3 : jmp 0xffffff8000259f5b
0xffffff800025d668 : jmp 0xffffff800025d62e
0xffffff800026407d : jmp 0xffffff8000263a63
0xffffff800026835e : jmp 0xffffff800026822e
0xffffff8000268a6d : jmp 0xffffff8000268a79
0xffffff800026aa32 : jmp 0xffffff800026ac1f
0xffffff800026aa31 : jmp 0xffffff800026ac20
0xffffff800026ba96 : jmp 0xffffff800026b83c
0xffffff800026f1fc : jmp 0xffffff800026f2f4
0xffffff80002726ff : jmp 0xffffff80002725e5
0xffffff8000273abf : jmp 0xffffff8000273a85
0xffffff8000275309 : jmp 0xffffff8000275336
0xffffff800027883d : jmp 0xffffff800027888d
0xffffff800027afb5 : jmp 0xffffff800027b1ae
0xffffff800027b6d1 : jmp 0xffffff800027b717
0xffffff800027bdb5 : jmp 0xffffff800027beaa
0xffffff800027c4e6 : jmp 0xffffff800027c55a
0xffffff800027c5cd : jmp 0xffffff800027c74b
0xffffff800027c477 : jmp 0xffffff800027c801
0xffffff800027d27b : jmp 0xffffff800027ca5a
0xffffff800027d298 : jmp 0xffffff800027cb45
0xffffff800027d2b5 : jmp 0xffffff800027cb4f
0xffffff800027d2d2 : jmp 0xffffff800027cb5d
0xffffff800027d31e : jmp 0xffffff800027cc2f
0xffffff800027df72 : jmp 0xffffff800027dc51
0xffffff800027e173 : jmp 0xffffff800027dfbb
0xffffff800027fce7 : jmp 0xffffff800027fcac
0xffffff800027fd04 : jmp 0xffffff800027fcc9
0xffffff80002806f6 : jmp 0xffffff8000280721
0xffffff8000281297 : jmp 0xffffff80002812ae
0xffffff8000287827 : jmp 0xffffff8000287874
0xffffff800028b7f2 : jmp 0xffffff800028b748
0xffffff8000341f71 : jmp 0xffffff800028e1b2
0xffffff800028fbe0 : jmp 0xffffff800028fa5b
0xffffff8000295383 : jmp 0xffffff80002952ec
0xffffff800055bd75 : jmp 0xffffff8000298032
0xffffff800029d0e9 : jmp 0xffffff800029d109
0xffffff800029d245 : jmp 0xffffff800029d25c
0xffffff80002a1d34 : jmp 0xffffff80002a1d6b
0xffffff80002a1d94 : jmp 0xffffff80002a1e32
0xffffff80003384b6 : jmp 0xffffff80002a46d2
0xffffff80004d46a7 : jmp 0xffffff80002a46d6
0xffffff80002a5ff2 : jmp 0xffffff80002a5fb6
0xffffff80002ab09b : jmp 0xffffff80002ab021
0xffffff80002ab19e : jmp 0xffffff80002ab150
0xffffff80002ab8d6 : jmp 0xffffff80002ab6e6
0xffffff80002ab8c1 : jmp 0xffffff80002ab752
0xffffff80002b0e85 : jmp 0xffffff80002b0d4a
0xffffff80002b0d2a : jmp 0xffffff80002b0e5b
0xffffff80002b14d1 : jmp 0xffffff80002b1500
0xffffff80002bcb80 : jmp 0xffffff80002bcb87
0xffffff80002bd2ff : jmp 0xffffff80002bd328
0xffffff80002bd441 : jmp 0xffffff80002bd45a
0xffffff80002c2251 : jmp 0xffffff80002c2270
0xffffff80006a1ff4 : jmp 0xffffff80002c36c3
0xffffff80002c4762 : jmp 0xffffff80002c4727
0xffffff80002cb9a9 : jmp 0xffffff80002cb871
0xffffff8000278055 : jmp 0xffffff80002cc2a8
0xffffff80002cd118 : jmp 0xffffff80002cd0de
0xffffff80002cd848 : jmp 0xffffff80002cd80e
0xffffff80002cf323 : jmp 0xffffff80002cef20
0xffffff80002d2e8c : jmp 0xffffff80002d2ec2
0xffffff80002d4751 : jmp 0xffffff80002d472b
0xffffff80006ae885 : jmp 0xffffff80002d4ef3
0xffffff8000298138 : jmp 0xffffff80002d4ef7
0xffffff800073bdc5 : jmp 0xffffff80002d4ef8
0xffffff80002ede63 : jmp 0xffffff80002edd16
0xffffff80002fac8c : jmp 0xffffff80002fac9d
0xffffff800030dea3 : jmp 0xffffff800030deb5
0xffffff800030f360 : jmp 0xffffff800030f372
0xffffff800030f414 : jmp 0xffffff800030f426
0xffffff800030f5d9 : jmp 0xffffff800030f5eb
0xffffff800030fc07 : jmp 0xffffff800030fc56
0xffffff800035927c : jmp 0xffffff8000315572
0xffffff8000315ba6 : jmp 0xffffff8000315bb8
0xffffff800031dedf : jmp 0xffffff800031de80
0xffffff80003262f2 : jmp 0xffffff8000326530
0xffffff80003262f1 : jmp 0xffffff8000326531
0xffffff8000326bec : jmp 0xffffff8000326bfe
0xffffff800032db30 : jmp 0xffffff800032deb0
0xffffff8000330763 : jmp 0xffffff800033051d
0xffffff8000338053 : jmp 0xffffff8000337df5
0xffffff800033ada5 : jmp 0xffffff800033acf2
0xffffff800033f0e3 : jmp 0xffffff800033f0f2
0xffffff8000342653 : jmp 0xffffff80003423b7
0xffffff800034321e : jmp 0xffffff800034322b
0xffffff8000343544 : jmp 0xffffff800034354c
0xffffff800034353e : jmp 0xffffff800034354f
0xffffff80003464ab : jmp 0xffffff8000346471
0xffffff800034b151 : jmp 0xffffff800034ad0e
0xffffff800034b22e : jmp 0xffffff800034adbb
0xffffff800030ed41 : jmp 0xffffff800034e4a7
0xffffff800035242f : jmp 0xffffff80003523f5
0xffffff8000352f5d : jmp 0xffffff8000352f23
0xffffff800035453f : jmp 0xffffff8000354549
0xffffff80003545cf : jmp 0xffffff80003545d9
0xffffff800035466d : jmp 0xffffff8000354677
0xffffff80003547c1 : jmp 0xffffff80003547cb
0xffffff8000354b24 : jmp 0xffffff8000354b6f
0xffffff800028214a : jmp 0xffffff800035823e
0xffffff8000358388 : jmp 0xffffff800035834d
0xffffff800035c76a : jmp 0xffffff800035c77e
0xffffff800035dd33 : jmp 0xffffff800035dc36
0xffffff800035de81 : jmp 0xffffff800035ddd4
0xffffff800035dfa8 : jmp 0xffffff800035dfb8
0xffffff800035df83 : jmp 0xffffff800035dfd5
0xffffff800035e548 : jmp 0xffffff800035e558
0xffffff800035e523 : jmp 0xffffff800035e575
0xffffff800035e680 : jmp 0xffffff800035e690
0xffffff800035e653 : jmp 0xffffff800035e6ad
0xffffff800035f16c : jmp 0xffffff800035f0b7
0xffffff8000360542 : jmp 0xffffff800036057b
0xffffff8000360538 : jmp 0xffffff8000360592
0xffffff8000360fc6 : jmp 0xffffff8000360fd6
0xffffff8000360fa3 : jmp 0xffffff8000360ff3
0xffffff8000361532 : jmp 0xffffff80003613c2
0xffffff8000362199 : jmp 0xffffff80003621a9
0xffffff8000362173 : jmp 0xffffff80003621c6
0xffffff8000365fa1 : jmp 0xffffff8000365fb6
0xffffff8000368c74 : jmp 0xffffff8000368c9c
0xffffff800036af01 : jmp 0xffffff800036ada8
0xffffff800036bc34 : jmp 0xffffff800036bc73
0xffffff8000375062 : jmp 0xffffff8000375380
0xffffff8000375083 : jmp 0xffffff800037553b
0xffffff8000375c78 : jmp 0xffffff8000375c3d
0xffffff800037691a : jmp 0xffffff800037678a
0xffffff8000378f10 : jmp 0xffffff8000378f02
0xffffff800037ad33 : jmp 0xffffff800037b0e9
0xffffff800039083c : jmp 0xffffff8000390846
0xffffff8000764373 : jmp 0xffffff80003923e3
0xffffff8000516519 : jmp 0xffffff8000392792
0xffffff80004c67ec : jmp 0xffffff8000392a42
0xffffff8000766ffe : jmp 0xffffff8000393043
0xffffff800039482d : jmp 0xffffff8000394865
0xffffff80003965a4 : jmp 0xffffff80003965db
0xffffff80003990cb : jmp 0xffffff80003990da
0xffffff800076b7d7 : jmp 0xffffff8000399238
0xffffff80003ac9ef : jmp 0xffffff80003998c8
0xffffff80003aae8b : jmp 0xffffff80003aace6
0xffffff80003afba1 : jmp 0xffffff80003af54a
0xffffff80003afd1f : jmp 0xffffff80003af675
0xffffff80003b180c : jmp 0xffffff80003b1819
0xffffff80003b3a11 : jmp 0xffffff80003b3a44
0xffffff80003b6703 : jmp 0xffffff80003b672e
0xffffff80003c3c50 : jmp 0xffffff80003c3c5d
0xffffff80003c511b : jmp 0xffffff80003c3d97
0xffffff80003c84ae : jmp 0xffffff80003c98b0
0xffffff80003c839d : jmp 0xffffff80003c9d62
0xffffff80003cc97c : jmp 0xffffff80003cc9c9
0xffffff80003dba12 : jmp 0xffffff80003dba1e
0xffffff80003e27ad : jmp 0xffffff80003e27bb
0xffffff80003e6361 : jmp 0xffffff80003e6391
0xffffff80003db476 : jmp 0xffffff80003e7702
0xffffff80003f1e1b : jmp 0xffffff80003f22f4
0xffffff80003fe3e3 : jmp 0xffffff80003fda51
0xffffff80003fe216 : jmp 0xffffff80003fe221
0xffffff800040edf6 : jmp 0xffffff800040ee6b
0xffffff8000418586 : jmp 0xffffff800041886c
0xffffff800041903b : jmp 0xffffff80004191e0
0xffffff800041d22b : jmp 0xffffff800041c834
0xffffff8000427adc : jmp 0xffffff8000427b13
0xffffff80004294e3 : jmp 0xffffff80004289a7
0xffffff800042965c : jmp 0xffffff8000429621
0xffffff800042a5c1 : jmp 0xffffff800042a5d8
0xffffff8000437f7f : jmp 0xffffff8000437fac
0xffffff8000437f68 : jmp 0xffffff8000437fc8
0xffffff800043aa05 : jmp 0xffffff800043a7a8
0xffffff800044ccab : jmp 0xffffff800044d308
0xffffff8000450e2e : jmp 0xffffff8000450e5d
0xffffff8000451734 : jmp 0xffffff800045173e
0xffffff8000458710 : jmp 0xffffff800045870c
0xffffff8000461afd : jmp 0xffffff8000461aee
0xffffff8000463314 : jmp 0xffffff800046332b
0xffffff80004650e6 : jmp 0xffffff80004650ac
0xffffff800046875b : jmp 0xffffff8000468721
0xffffff8000468c3b : jmp 0xffffff8000468c01
0xffffff80004692fe : jmp 0xffffff80004692c4
0xffffff800046f050 : jmp 0xffffff800046f05e
0xffffff800049162f : jmp 0xffffff80004919c7
0xffffff8000495a6d : jmp 0xffffff8000495a77
0xffffff800049811b : jmp 0xffffff8000498172
0xffffff80004980bf : jmp 0xffffff8000498175
0xffffff8000498154 : jmp 0xffffff80004981b4
0xffffff800049809f : jmp 0xffffff80004981b7
0xffffff800049817d : jmp 0xffffff80004981c0
0xffffff800049807f : jmp 0xffffff80004982bd
0xffffff8000498375 : jmp 0xffffff80004983ab
0xffffff800049805f : jmp 0xffffff800049841b
0xffffff80004988e1 : jmp 0xffffff80004988f1
0xffffff80004a1da3 : jmp 0xffffff80004a1d69
0xffffff80004a1da2 : jmp 0xffffff80004a1d6a
0xffffff80004a32c1 : jmp 0xffffff80004a3264
0xffffff80004ac8f5 : jmp 0xffffff80004ac904
0xffffff80004b0114 : jmp 0xffffff80004b011e
0xffffff80004b0183 : jmp 0xffffff80004b018d
0xffffff80004b24a9 : jmp 0xffffff80004b24b4
0xffffff80004b253f : jmp 0xffffff80004b2554
0xffffff80004b25cf : jmp 0xffffff80004b25e4
0xffffff80004b5bfc : jmp 0xffffff80004b5bc1
0xffffff80004bca3d : jmp 0xffffff80004bca78
0xffffff80004d1be3 : jmp 0xffffff80004d11ee
0xffffff80004d3185 : jmp 0xffffff80004d3196
0xffffff80004d37a7 : jmp 0xffffff80004d37ab
0xffffff80004d7e1f : jmp 0xffffff80004d7e3b
0xffffff80004db012 : jmp 0xffffff80004db02f
0xffffff80004ee15a : jmp 0xffffff80004ee169
0xffffff80005089d3 : jmp 0xffffff80005089e4
0xffffff800050b26e : jmp 0xffffff800050b2da
0xffffff800050de5f : jmp 0xffffff800050deac
0xffffff80005121a2 : jmp 0xffffff8000512167
0xffffff8000515361 : jmp 0xffffff800051533e
0xffffff800051afe3 : jmp 0xffffff800051ada0
0xffffff800052018a : jmp 0xffffff8000520225
0xffffff800052b9e2 : jmp 0xffffff800052ba03
0xffffff8000532d09 : jmp 0xffffff8000532d25
0xffffff80005350ea : jmp 0xffffff8000536989
0xffffff8000537edb : jmp 0xffffff8000537ea1
0xffffff800054748b : jmp 0xffffff80005474aa
0xffffff800054809c : jmp 0xffffff80005480ad
0xffffff80005481a5 : jmp 0xffffff80005481be
0xffffff800054869e : jmp 0xffffff80005486af
0xffffff8000548c44 : jmp 0xffffff8000548c55
0xffffff8000548c7a : jmp 0xffffff8000548c84
0xffffff8000549011 : jmp 0xffffff8000549022
0xffffff80005490b4 : jmp 0xffffff80005490c5
0xffffff80005490ea : jmp 0xffffff80005490f4
0xffffff800054960f : jmp 0xffffff8000549461
0xffffff80005495a2 : jmp 0xffffff80005495b3
0xffffff80005498d2 : jmp 0xffffff80005498e3
0xffffff8000554077 : jmp 0xffffff8000554084
0xffffff8000554adb : jmp 0xffffff8000554b86
0xffffff800055bfc6 : jmp 0xffffff800055bf8b
0xffffff8000563337 : jmp 0xffffff800056349a
0xffffff80005666b6 : jmp 0xffffff800056671e
0xffffff8000566860 : jmp 0xffffff80005668ad
0xffffff8000568cb7 : jmp 0xffffff8000568c7c
0xffffff800056bcee : jmp 0xffffff800056bcfc
0xffffff8000575b21 : jmp 0xffffff8000575c3b
0xffffff800058e46d : jmp 0xffffff800058e477
0xffffff800058e516 : jmp 0xffffff800058e520
0xffffff800058e59e : jmp 0xffffff800058e5ae
0xffffff800058e5e0 : jmp 0xffffff800058e5ed
0xffffff800058e603 : jmp 0xffffff800058e612
0xffffff800058e6fa : jmp 0xffffff800058e704
0xffffff800058e7c4 : jmp 0xffffff800058e7ce
0xffffff800059dec9 : jmp 0xffffff800059dee4
0xffffff800059df1e : jmp 0xffffff800059df2d
0xffffff80007630b0 : jmp 0xffffff80005a7ba4
0xffffff80005ac3d5 : jmp 0xffffff80005abc14
0xffffff80005ae699 : jmp 0xffffff80005ae6aa
0xffffff80005b38d8 : jmp 0xffffff80005b389d
0xffffff80005b76e6 : jmp 0xffffff80005b76bb
0xffffff80005b945b : jmp 0xffffff80005b95bf
0xffffff80005bfad6 : jmp 0xffffff80005bfae5
0xffffff80005bfc3b : jmp 0xffffff80005bfc45
0xffffff80005bfc81 : jmp 0xffffff80005bfc8d
0xffffff80005bfbd6 : jmp 0xffffff80005bfc90
0xffffff8000749fad : jmp 0xffffff80005c301e
0xffffff80005c67a1 : jmp 0xffffff80005c67de
0xffffff80005ca001 : jmp 0xffffff80005c9f4b
0xffffff80005cfd8f : jmp 0xffffff80005cfda7
0xffffff80005dd591 : jmp 0xffffff80005dd52d
0xffffff80005ddd4e : jmp 0xffffff80005ddd63
0xffffff80005dfd8b : jmp 0xffffff80005dfd95
0xffffff80005e4e88 : jmp 0xffffff80005e4e97
0xffffff80005e5310 : jmp 0xffffff80005e52d5
0xffffff80005e5546 : jmp 0xffffff80005e5553
0xffffff80005fdb06 : jmp 0xffffff80005fdd59
0xffffff80005fe993 : jmp 0xffffff80005fe959
0xffffff80006024f1 : jmp 0xffffff80006024b6
0xffffff800060311e : jmp 0xffffff80006030e3
0xffffff80006059a0 : jmp 0xffffff8000605965
0xffffff800060618a : jmp 0xffffff80006061ea
0xffffff800060619a : jmp 0xffffff800060624b
0xffffff800060a0fd : jmp 0xffffff8000606342
0xffffff800060bab9 : jmp 0xffffff800060bac9
0xffffff8000618a41 : jmp 0xffffff8000618a07
0xffffff8000618841 : jmp 0xffffff8000618d0a
0xffffff80006222f6 : jmp 0xffffff8000622398
0xffffff8000622da2 : jmp 0xffffff8000622db8
0xffffff8000624321 : jmp 0xffffff8000624332
0xffffff8000626db2 : jmp 0xffffff8000626d89
0xffffff800062b847 : jmp 0xffffff800062b39d
0xffffff8000635012 : jmp 0xffffff8000634fd7
0xffffff8000648677 : jmp 0xffffff800064875c
0xffffff800064bc02 : jmp 0xffffff800064bdc4
0xffffff800064bcdf : jmp 0xffffff800064bdc5
0xffffff800064bc39 : jmp 0xffffff800064bdc7
0xffffff800064de1f : jmp 0xffffff800064de85
0xffffff800064de1e : jmp 0xffffff800064de86
0xffffff800064e565 : jmp 0xffffff800064e39c
0xffffff800064f8e6 : jmp 0xffffff800064f8ac
0xffffff800065123c : jmp 0xffffff800065124d
0xffffff8000657ecd : jmp 0xffffff8000657d8f
0xffffff80006593cd : jmp 0xffffff8000659faa
0xffffff800065e5e7 : jmp 0xffffff800065e5ad
0xffffff800065f657 : jmp 0xffffff800065f61c
0xffffff800065f8ad : jmp 0xffffff800065f872
0xffffff800065fcaf : jmp 0xffffff800065fc75
0xffffff800065fcec : jmp 0xffffff800065fcb2
0xffffff800065fd03 : jmp 0xffffff800065fcc9
0xffffff800065fd02 : jmp 0xffffff800065fcca
0xffffff800065fd33 : jmp 0xffffff800065fcf9
0xffffff8000663e3c : jmp 0xffffff8000663e54
0xffffff8000666d48 : jmp 0xffffff8000666d59
0xffffff800051d6f7 : jmp 0xffffff800066baeb
0xffffff800066de3c : jmp 0xffffff800066de01
0xffffff800066f520 : jmp 0xffffff800066f54a
0xffffff8000672399 : jmp 0xffffff80006723c2
0xffffff800067a020 : jmp 0xffffff800067a060
0xffffff800067fdb0 : jmp 0xffffff800067fdbd
0xffffff8000683002 : jmp 0xffffff800068300a
0xffffff8000686cce : jmp 0xffffff8000686d95
0xffffff8000688196 : jmp 0xffffff80006881a3
0xffffff8000689820 : jmp 0xffffff80006897e5
0xffffff800069a0dd : jmp 0xffffff800069a0e3
0xffffff800069ccdd : jmp 0xffffff800069cce3
0xffffff800069ccdc : jmp 0xffffff800069cce4
0xffffff800069cf76 : jmp 0xffffff800069cffa
0xffffff80006a1694 : jmp 0xffffff80006a16da
0xffffff80006a886e : jmp 0xffffff80006a8886
0xffffff80006a9966 : jmp 0xffffff80006a9af3
0xffffff80006a9f68 : jmp 0xffffff80006a9fb6
0xffffff80006aaf0e : jmp 0xffffff80006aaf29
0xffffff80006aaea9 : jmp 0xffffff80006aafec
0xffffff80006ba592 : jmp 0xffffff80006ba625
0xffffff80006bae1c : jmp 0xffffff80006bb514
0xffffff80006bd250 : jmp 0xffffff80006bd28b
0xffffff80006bd3e4 : jmp 0xffffff80006bd3aa
0xffffff80006bd1cd : jmp 0xffffff80006bd3b2
0xffffff80006c0574 : jmp 0xffffff80006c05bb
0xffffff80006c5aec : jmp 0xffffff80006c5ab2
0xffffff80006cc786 : jmp 0xffffff80006cc790
0xffffff80006cef24 : jmp 0xffffff80006ceed1
0xffffff80006cefb2 : jmp 0xffffff80006ceed4
0xffffff80006d023d : jmp 0xffffff80006d0190
0xffffff80006d0f6e : jmp 0xffffff80006d0f81
0xffffff80006d1c96 : jmp 0xffffff80006d1ca0
0xffffff80006d4422 : jmp 0xffffff80006d43e7
0xffffff80006d9a4b : jmp 0xffffff80006d9b1b
0xffffff80006da9c1 : jmp 0xffffff80006da987
0xffffff80006da9be : jmp 0xffffff80006da99b
0xffffff80006db027 : jmp 0xffffff80006db053
0xffffff80006de496 : jmp 0xffffff80006de45c
0xffffff80006df0f8 : jmp 0xffffff80006df145
0xffffff8000747b6f : jmp 0xffffff80006df763
0xffffff8000747b46 : jmp 0xffffff80006e203a
0xffffff80006e2141 : jmp 0xffffff80006e21c2
0xffffff8000747a7b : jmp 0xffffff80006eea6f
0xffffff80006efdd0 : jmp 0xffffff80006efdd5
0xffffff80006ff918 : jmp 0xffffff80006ff94c
0xffffff80006ff9b6 : jmp 0xffffff80006ff9c7
0xffffff80008f6525 : jmp 0xffffff800070ee7b
0xffffff80008f662c : jmp 0xffffff800070ef82
0xffffff800071324a : jmp 0xffffff8000713579
0xffffff80007132b9 : jmp 0xffffff800071357a
0xffffff8000716b0b : jmp 0xffffff8000716b6d
0xffffff8000716ad1 : jmp 0xffffff8000716b70
0xffffff8000719a59 : jmp 0xffffff8000719a8a
0xffffff800071fa90 : jmp 0xffffff800071faa9
0xffffff8000727e87 : jmp 0xffffff80007275b4
0xffffff800072ce8f : jmp 0xffffff800072ce99
0xffffff80007336b1 : jmp 0xffffff800072f9a9
0xffffff800073810c : jmp 0xffffff8000738116
0xffffff8000739a73 : jmp 0xffffff8000739a8c
0xffffff8000745d89 : jmp 0xffffff8000745d4f
0xffffff8000745df9 : jmp 0xffffff8000745dbf
0xffffff8000748cf6 : jmp 0xffffff8000749048
0xffffff8000749dcf : jmp 0xffffff8000749d95
0xffffff8000749ecf : jmp 0xffffff8000749ec1
0xffffff80002ee9f7 : jmp 0xffffff800074ac42
0xffffff800074b751 : jmp 0xffffff800074b77e
0xffffff8000754685 : jmp 0xffffff8000754693
0xffffff8000754c76 : jmp 0xffffff8000754cf3
0xffffff800075d018 : jmp 0xffffff800075d048
0xffffff800075d13b : jmp 0xffffff800075d16b
0xffffff80007644fb : jmp 0xffffff80007644c0
0xffffff80007644fa : jmp 0xffffff80007644c1
0xffffff800076d659 : jmp 0xffffff800076d660
0xffffff8000775776 : jmp 0xffffff8000775780
0xffffff8000775bbd : jmp 0xffffff8000775bce
0xffffff8000776fef : jmp 0xffffff8000776ffc
0xffffff80007783bd : jmp 0xffffff800077843d
0xffffff800075e143 : jmp 0xffffff800077a422
0xffffff8000761ae4 : jmp 0xffffff800078b476
0xffffff800078bf16 : jmp 0xffffff800078be79
0xffffff8000794d78 : jmp 0xffffff8000794e64
0xffffff80007972d0 : jmp 0xffffff80007972e5
0xffffff800079d2dc : jmp 0xffffff800079d329
0xffffff80007a13e8 : jmp 0xffffff80007a1525
0xffffff80007a8dff : jmp 0xffffff80007a8dc4
0xffffff80007ad0f4 : jmp 0xffffff80007ad10a
0xffffff80007ad175 : jmp 0xffffff80007ad18b
0xffffff80007b2506 : jmp 0xffffff80007b2515
0xffffff80007b5884 : jmp 0xffffff80007b589c
0xffffff80007c3763 : jmp 0xffffff80007c37b8
0xffffff80007caf91 : jmp 0xffffff80007caf53
0xffffff80007cd657 : jmp 0xffffff80007cd09d
0xffffff80007d02a7 : jmp 0xffffff80007d037c
0xffffff80007da294 : jmp 0xffffff80007da259
0xffffff80007da9b6 : jmp 0xffffff80007da7bd
0xffffff80007e9125 : jmp 0xffffff80007e913d
0xffffff80007eb872 : jmp 0xffffff80007eb976
0xffffff80007f1d15 : jmp 0xffffff80007f1d62
0xffffff80007f1e19 : jmp 0xffffff80007f1e66
0xffffff80008ef16c : jmp 0xffffff80007f7aba
0xffffff80007fb146 : jmp 0xffffff80007fb10c
0xffffff8000802604 : jmp 0xffffff800080261f
0xffffff8000802b6f : jmp 0xffffff8000802b77
0xffffff8000803dd1 : jmp 0xffffff8000803e77
0xffffff8000805844 : jmp 0xffffff8000805760
0xffffff800080a62f : jmp 0xffffff800080bdef
0xffffff80008f6a06 : jmp 0xffffff800080f35c
0xffffff80008f6a6e : jmp 0xffffff800080f3c4
0xffffff8000810d7c : jmp 0xffffff8000810dbb
0xffffff8000885204 : jmp 0xffffff80008114a2
0xffffff8000811a9c : jmp 0xffffff8000811adb
0xffffff80008130ac : jmp 0xffffff80008130eb
0xffffff8000813b4c : jmp 0xffffff8000813b8b
0xffffff800081430c : jmp 0xffffff800081434b
0xffffff8000814d0c : jmp 0xffffff8000814d4b
0xffffff800081626c : jmp 0xffffff80008162ab
0xffffff80008180bc : jmp 0xffffff80008180fb
0xffffff8000818d9f : jmp 0xffffff8000818de4
0xffffff8000818d9e : jmp 0xffffff8000818de5
0xffffff80008194f4 : jmp 0xffffff8000818fba
0xffffff80008230fe : jmp 0xffffff80008230c4
0xffffff800082b58c : jmp 0xffffff800082b5cb
0xffffff800082c1ac : jmp 0xffffff800082c1eb
0xffffff800082e08c : jmp 0xffffff800082e0cb
0xffffff800082ebcc : jmp 0xffffff800082ec0b
0xffffff800082f6dc : jmp 0xffffff800082f71b
0xffffff8000830a1c : jmp 0xffffff8000830a5b
0xffffff80008323b6 : jmp 0xffffff80008323c8
0xffffff800083289c : jmp 0xffffff80008328db
0xffffff8000838127 : jmp 0xffffff8000838152
0xffffff80008403ba : jmp 0xffffff8000840394
0xffffff8000844bf9 : jmp 0xffffff8000844c05
0xffffff80008483f2 : jmp 0xffffff800084844a
0xffffff800084c829 : jmp 0xffffff800084c7d2
0xffffff800084ecf5 : jmp 0xffffff800084ee9e
0xffffff800084fefc : jmp 0xffffff800085016f
0xffffff8000850bb0 : jmp 0xffffff8000850bc6
0xffffff8000850f49 : jmp 0xffffff8000850f6f
0xffffff8000850f9d : jmp 0xffffff8000850fb3
0xffffff8000852357 : jmp 0xffffff8000852388
0xffffff8000853c9f : jmp 0xffffff8000853cb0
0xffffff8000858e2c : jmp 0xffffff8000858e6b
0xffffff8000859950 : jmp 0xffffff8000859837
0xffffff800085bc5b : jmp 0xffffff800085bc21
0xffffff800085cd5c : jmp 0xffffff800085cd9b
0xffffff800085cfbc : jmp 0xffffff800085cffb
0xffffff8000860ebc : jmp 0xffffff8000860efb
0xffffff800086274f : jmp 0xffffff8000862794
0xffffff800086274e : jmp 0xffffff8000862795
0xffffff80008629dc : jmp 0xffffff8000862a1b
0xffffff8000862c3c : jmp 0xffffff8000862c7b
0xffffff8000862e9c : jmp 0xffffff8000862edb
0xffffff80008630fc : jmp 0xffffff800086313b
0xffffff800086335f : jmp 0xffffff80008633a4
0xffffff800086335e : jmp 0xffffff80008633a5
0xffffff80008635bc : jmp 0xffffff80008635fb
0xffffff80008637cc : jmp 0xffffff800086380b
0xffffff800086551c : jmp 0xffffff80008654e1
0xffffff80008ba5c0 : jmp 0xffffff800086b826
0xffffff80008783a7 : jmp 0xffffff800087824b
0xffffff800087d274 : jmp 0xffffff800087ce1b
0xffffff800087d182 : jmp 0xffffff800087d216
0xffffff80008812cc : jmp 0xffffff8000881311
0xffffff80008812cb : jmp 0xffffff8000881312
0xffffff80008815ec : jmp 0xffffff800088162b
0xffffff80008819ff : jmp 0xffffff8000881a44
0xffffff80008819fe : jmp 0xffffff8000881a45
0xffffff800088200c : jmp 0xffffff800088204b
0xffffff800088238f : jmp 0xffffff80008823d4
0xffffff800088238e : jmp 0xffffff80008823d5
0xffffff800088468c : jmp 0xffffff80008846cb
0xffffff8000884dcc : jmp 0xffffff8000884e0b
0xffffff80008856fc : jmp 0xffffff800088573b
0xffffff8000885f8c : jmp 0xffffff8000885fcb
0xffffff8000887dff : jmp 0xffffff8000887e44
0xffffff8000887dfe : jmp 0xffffff8000887e45
0xffffff8000889c5c : jmp 0xffffff8000889c9b
0xffffff800088a3ec : jmp 0xffffff800088a42b
0xffffff800088a88c : jmp 0xffffff800088a8cb
0xffffff800088cb0c : jmp 0xffffff800088cb4b
0xffffff800088e2bc : jmp 0xffffff800088e2fb
0xffffff800088eddc : jmp 0xffffff800088ee1b
0xffffff800088f2e5 : jmp 0xffffff800088f2ef
0xffffff800089005c : jmp 0xffffff800089009b
0xffffff80008911bc : jmp 0xffffff80008911fb
0xffffff800089187c : jmp 0xffffff80008918bb
0xffffff800089241f : jmp 0xffffff8000892464
0xffffff800089241e : jmp 0xffffff8000892465
0xffffff800089300c : jmp 0xffffff800089304e
0xffffff800089300b : jmp 0xffffff800089304f
0xffffff8000893e3c : jmp 0xffffff8000893e7b
0xffffff80008950bf : jmp 0xffffff8000895104
0xffffff80008950be : jmp 0xffffff8000895105
0xffffff8000895300 : jmp 0xffffff80008957e2
0xffffff80008966dc : jmp 0xffffff800089671e
0xffffff80008966db : jmp 0xffffff800089671f
0xffffff8000898faf : jmp 0xffffff8000898ff4
0xffffff8000898fae : jmp 0xffffff8000898ff5
0xffffff8000899c1f : jmp 0xffffff8000899c64
0xffffff8000899c1e : jmp 0xffffff8000899c65
0xffffff800089afec : jmp 0xffffff800089b02b
0xffffff800089b60c : jmp 0xffffff800089b64b
0xffffff800089b93c : jmp 0xffffff800089b97b
0xffffff800089bc6c : jmp 0xffffff800089bcab
0xffffff800089cf7c : jmp 0xffffff800089cfbb
0xffffff800089d11f : jmp 0xffffff800089d164
0xffffff800089d11e : jmp 0xffffff800089d165
0xffffff80008a0f7f : jmp 0xffffff80008a0fa7
0xffffff80008a29af : jmp 0xffffff80008a29f4
0xffffff80008a29ae : jmp 0xffffff80008a29f5
0xffffff80008a527c : jmp 0xffffff80008a52be
0xffffff80008a527b : jmp 0xffffff80008a52bf
0xffffff80008a620c : jmp 0xffffff80008a624b
0xffffff80008a710c : jmp 0xffffff80008a714e
0xffffff80008a710b : jmp 0xffffff80008a714f
0xffffff80008a7b1f : jmp 0xffffff80008a7b64
0xffffff80008a7b1e : jmp 0xffffff80008a7b65
0xffffff80008a9edf : jmp 0xffffff80008a9f24
0xffffff80008a9ede : jmp 0xffffff80008a9f25
0xffffff80008aaaaf : jmp 0xffffff80008aaaf4
0xffffff80008aaaae : jmp 0xffffff80008aaaf5
0xffffff80008aae03 : jmp 0xffffff80008aae7d
0xffffff80008aaf2e : jmp 0xffffff80008aae80
0xffffff80008ab0ef : jmp 0xffffff80008ab134
0xffffff80008ab0ee : jmp 0xffffff80008ab135
0xffffff80008ab44f : jmp 0xffffff80008ab494
0xffffff80008ab44e : jmp 0xffffff80008ab495
0xffffff80008ad2ff : jmp 0xffffff80008ad344
0xffffff80008ad2fe : jmp 0xffffff80008ad345
0xffffff80008adfef : jmp 0xffffff80008ae034
0xffffff80008adfee : jmp 0xffffff80008ae035
0xffffff80008af2ff : jmp 0xffffff80008af344
0xffffff80008af2fe : jmp 0xffffff80008af345
0xffffff80008b295f : jmp 0xffffff80008b29a4
0xffffff80008b295e : jmp 0xffffff80008b29a5
0xffffff80008b325f : jmp 0xffffff80008b32a4
0xffffff80008b325e : jmp 0xffffff80008b32a5
0xffffff80008b3d4f : jmp 0xffffff80008b3d94
0xffffff80008b3d4e : jmp 0xffffff80008b3d95
0xffffff80008b508c : jmp 0xffffff80008b50cb
0xffffff80008b59cc : jmp 0xffffff80008b5a0b
0xffffff80008b5c7c : jmp 0xffffff80008b5cbb
0xffffff80008b62cc : jmp 0xffffff80008b630b
0xffffff80008b68ef : jmp 0xffffff80008b6934
0xffffff80008b68ee : jmp 0xffffff80008b6935
0xffffff80008b711f : jmp 0xffffff80008b70e5
0xffffff80008b7f93 : jmp 0xffffff80008b7fb7
0xffffff80008b8113 : jmp 0xffffff80008b8151
0xffffff80008b823e : jmp 0xffffff80008b8288
0xffffff80008b8363 : jmp 0xffffff80008b83a1
0xffffff80008b8423 : jmp 0xffffff80008b846f
0xffffff80008b965e : jmp 0xffffff80008b96b1
0xffffff80008ba8e9 : jmp 0xffffff80008bab28
0xffffff80008bab8e : jmp 0xffffff80008baba1
0xffffff80008bcfc6 : jmp 0xffffff80008bcf8b
0xffffff80008bdfb7 : jmp 0xffffff80008bdf5b
0xffffff80008bdfef : jmp 0xffffff80008bdf5e
0xffffff80008be036 : jmp 0xffffff80008be19a
0xffffff80008be2bf : jmp 0xffffff80008be36e
0xffffff80008bf553 : jmp 0xffffff80008bf577
0xffffff80008bf603 : jmp 0xffffff80008bf64f
0xffffff80008bf8bf : jmp 0xffffff80008bf885
0xffffff80008c0a9c : jmp 0xffffff80008c0adb
0xffffff80008c29ef : jmp 0xffffff80008c2a34
0xffffff80008c29ee : jmp 0xffffff80008c2a35
0xffffff80008c367c : jmp 0xffffff80008c36bb
0xffffff80008c414c : jmp 0xffffff80008c418b
0xffffff80008cc32f : jmp 0xffffff80008cc374
0xffffff80008cc32e : jmp 0xffffff80008cc375
0xffffff80008cd433 : jmp 0xffffff80008cd4f1
0xffffff80008ce12f : jmp 0xffffff80008ce174
0xffffff80008ce12e : jmp 0xffffff80008ce175
0xffffff80008ceacf : jmp 0xffffff80008ceb14
0xffffff80008ceace : jmp 0xffffff80008ceb15
0xffffff80008cfdf2 : jmp 0xffffff80008cfef4
0xffffff80008d06ff : jmp 0xffffff80008d0744
0xffffff80008d06fe : jmp 0xffffff80008d0745
0xffffff80008d17bc : jmp 0xffffff80008d17fb
0xffffff80008d2332 : jmp 0xffffff80008d2385
0xffffff80008d4031 : jmp 0xffffff80008d4081
0xffffff80008d4a5f : jmp 0xffffff80008d4aa4
0xffffff80008d4a5e : jmp 0xffffff80008d4aa5
0xffffff80008d545e : jmp 0xffffff80008d54d3
0xffffff80008d5174 : jmp 0xffffff80008d54d6
0xffffff80008d5a5f : jmp 0xffffff80008d5aa4
0xffffff80008d5a5e : jmp 0xffffff80008d5aa5
0xffffff80008d61ef : jmp 0xffffff80008d6234
0xffffff80008d61ee : jmp 0xffffff80008d6235
0xffffff80008d6a4c : jmp 0xffffff80008d6a8b
0xffffff80008d73ec : jmp 0xffffff80008d742b
0xffffff80008d765c : jmp 0xffffff80008d769b
0xffffff80008d78cf : jmp 0xffffff80008d7914
0xffffff80008d78ce : jmp 0xffffff80008d7915
0xffffff80008dc3df : jmp 0xffffff80008dc588
0xffffff80008e255c : jmp 0xffffff80008e259b
0xffffff80008e54cc : jmp 0xffffff80008e550b
0xffffff80008e69fc : jmp 0xffffff80008e6a3b
0xffffff80008e6cbc : jmp 0xffffff80008e6cfb
0xffffff80008e754f : jmp 0xffffff80008e7594
0xffffff80008e754e : jmp 0xffffff80008e7595
0xffffff8000907159 : jmp 0xffffff80009070b6
0xffffff800090977c : jmp 0xffffff8000909741
0xffffff800090984c : jmp 0xffffff8000909811
0xffffff800090992c : jmp 0xffffff80009098f1
0xffffff8000416774 : jmp 0xffffff8000957e68
0xffffff80004ac6bd : jmp 0xffffff8000ab84b1
0xffffff8000b3d881 : jmp 0xffffff8000b3d89b
0xffffff8000b3e71f : jmp 0xffffff8000b3e729
0xffffff8000b3e8db : jmp 0xffffff8000b3e8e5
0xffffff8000b3e9d8 : jmp 0xffffff8000b3e9e2
0xffffff8000b45d89 : jmp 0xffffff8000b45da6
0xffffff8000b4720d : jmp 0xffffff8000b47222
0xffffff8000b477f3 : jmp 0xffffff8000b47801
0xffffff8000b47b9d : jmp 0xffffff8000b47bab
0xffffff8000b47e19 : jmp 0xffffff8000b47e36
0xffffff8000b4ba5b : jmp 0xffffff8000b4ba65
0xffffff800090794b : jmp 0xffffff8000d09867
0xffffff80003d6642 : jmp 0xffffff8001442fd0
0xffffff80004e628c : jmp 0xffffff8001793180
0xffffff80004e6a0c : jmp 0xffffff8001b29900
0xffffff80004db373 : jmp 0xffffff8002878b67
0xffffff80008530d7 : jmp 0xffffff80040cb4cb
0xffffff80003a689b : jmp 0xffffff800c6da9b0
0xffffff80003a69bb : jmp 0xffffff800c6daad0
0xffffff80007f2143 : jmp 0xffffff8010ab8937
0xffffff8000371b36 : jmp 0xffffff801ef9dc7f
0xffffff8000716cd8 : jmp 0xffffff8022716cdf
0xffffff80002bc7d0 : jmp 0xffffff80232bc7d3
0xffffff80004f0f8e : jmp 0xffffff802a11cc7e
0xffffff800073d47c : jmp 0xffffff802a365da4
0xffffff800073d9bb : jmp 0xffffff802a3662e3
0xffffff800073dacb : jmp 0xffffff802a3663f3
0xffffff800083d3eb : jmp 0xffffff802a465d13
0xffffff8000311e73 : jmp 0xffffff8041f3a7c4
0xffffff8000767953 : jmp 0xffffff8045763c10
0xffffff800025628c : jmp 0xffffff80482581a7
0xffffff8000300ef3 : jmp 0xffffff8048301181
0xffffff8000352733 : jmp 0xffffff80493502fc
0xffffff80005dd8c3 : jmp 0xffffff80495da3d6
0xffffff800066d8c3 : jmp 0xffffff8049669ad2
0xffffff80008c2611 : jmp 0xffffff804d4eaf62
0xffffff8000772f93 : jmp 0xffffff804d76f1d5
0xffffff8000b492a0 : jmp 0xffffff804e771bf1
0xffffff8000387ee6 : jmp 0xffffff805bfb34fd
0xffffff80007d39ef : jmp qword ptr [r8]
0xffffff80004ceb94 : jmp qword ptr [r9]
0xffffff8000572f83 : jmp qword ptr [rax - 0x1b]
0xffffff80007cd6f3 : jmp qword ptr [rax - 0x28000006]
0xffffff80005a6e17 : jmp qword ptr [rax - 0x29000045]
0xffffff800060429f : jmp qword ptr [rax - 0x2e000004]
0xffffff800074025f : jmp qword ptr [rax - 0xa]
0xffffff80006cf4a3 : jmp qword ptr [rax - 2]
0xffffff80007e0542 : jmp qword ptr [rax]
0xffffff80008bda77 : jmp qword ptr [rbp - 0x19000002]
0xffffff8000737333 : jmp qword ptr [rbp - 0x2e000078]
0xffffff80006df7b3 : jmp qword ptr [rbp - 0x6700000c]
0xffffff80007123cf : jmp qword ptr [rbp - 1]
0xffffff800067bef7 : jmp qword ptr [rbp*8 - 0x3c77eff4]
0xffffff80008363b3 : jmp qword ptr [rbx - 0x1c000005]
0xffffff800062b8af : jmp qword ptr [rbx - 0xf]
0xffffff80006d04a7 : jmp qword ptr [rbx - 1]
0xffffff80007fd9c3 : jmp qword ptr [rbx - 3]
0xffffff800025a580 : jmp qword ptr [rbx]
0xffffff80006e23e2 : jmp qword ptr [rcx + rax*4]
0xffffff80008d9813 : jmp qword ptr [rcx - 0x2b000003]
0xffffff8000b4ae18 : jmp qword ptr [rcx - 0x38d03d20]
0xffffff80003984e3 : jmp qword ptr [rcx - 0x50000001]
0xffffff80006d0ca7 : jmp qword ptr [rcx - 1]
0xffffff800025b559 : jmp qword ptr [rcx]
0xffffff800075db5f : jmp qword ptr [rdi + 0x11ffffdf]
0xffffff8000603af7 : jmp qword ptr [rdi + rdi*8 - 0x2e20001]
0xffffff800028695f : jmp qword ptr [rdi + rdi*8]
0xffffff8000441b23 : jmp qword ptr [rdi - 0x10000016]
0xffffff80003ca65f : jmp qword ptr [rdi - 0x11]
0xffffff80007f1be3 : jmp qword ptr [rdi - 0x18000001]
0xffffff80003b6577 : jmp qword ptr [rdi - 0x42000001]
0xffffff80006cd8af : jmp qword ptr [rdi - 1]
0xffffff800050d2de : jmp qword ptr [rdi]
0xffffff8000628917 : jmp qword ptr [rdx - 0x10]
0xffffff800051ff1b : jmp qword ptr [rdx - 0x2e000001]
0xffffff80006d04bf : jmp qword ptr [rdx - 5]
0xffffff80002bc7d3 : jmp qword ptr [rdx]
0xffffff80003b5462 : jmp qword ptr [rsi + 0x44]
0xffffff80004f9f7d : jmp qword ptr [rsi + 0x48b0056]
0xffffff8000350619 : jmp qword ptr [rsi + 0xf]
0xffffff80006efdeb : jmp qword ptr [rsi + rdi*8]
0xffffff8000669b27 : jmp qword ptr [rsi - 0x20]
0xffffff80002b6a83 : jmp qword ptr [rsi - 0x2e000008]
0xffffff8000720dae : jmp qword ptr [rsi - 0x39]
0xffffff8000701fe1 : jmp qword ptr [rsi - 0x48]
0xffffff80002bd805 : jmp qword ptr [rsi - 0x70]
0xffffff80005f0c3e : jmp qword ptr [rsi - 0x75]
0xffffff80006c8c03 : jmp qword ptr [rsi - 0x7b]
0xffffff8000589eb7 : jmp qword ptr [rsi - 1]
0xffffff80007f173f : jmp qword ptr [rsi - 2]
0xffffff80008363af : jmp qword ptr [rsi - 5]
0xffffff80002f9d27 : jmp qword ptr [rsi]
0xffffff80006fb693 : jmp qword ptr [rsp + rdi*8 - 0x2e20001]
0xffffff80004f8e1c : jmp r11
0xffffff800028a908 : jmp r8
0xffffff8000477a9b : jmp r9
0xffffff80006ff908 : jmp rax
0xffffff800080c707 : jmp rbp
0xffffff80002b2173 : jmp rbx
0xffffff80003b184f : jmp rcx
0xffffff8000644661 : jmp rdi
0xffffff80002bcbd3 : jmp rdx
0xffffff800029ed19 : jmp rsi
0xffffff80002b6a7b : jmp rsp
0xffffff800025002b : jne 0xffffff8000250023 ; pop rbp ; ret
0xffffff8000252e26 : jne 0xffffff8000252dd6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000252e25 : jne 0xffffff8000252dd7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025bcbc : jne 0xffffff800025bccd ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff800025f37d : jne 0xffffff800025f38e ; mov dword ptr [rip + 0x888ed7], eax ; pop rbp ; ret
0xffffff8000269f96 : jne 0xffffff8000269f83 ; pop rbp ; ret
0xffffff800026b318 : jne 0xffffff800026b343 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800026dd01 : jne 0xffffff800026dce6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800026ddb1 : jne 0xffffff800026dd96 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000272674 : jne 0xffffff8000272640 ; jmp rax
0xffffff8000276346 : jne 0xffffff8000276303 ; pop rbp ; ret
0xffffff800027c4e4 : jne 0xffffff800027c4ab ; jmp 0xffffff800027c55c
0xffffff800027fc6c : jne 0xffffff800027fc79 ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff8000281b61 : jne 0xffffff8000281b1f ; mov rdx, rbx ; mov ecx, r15d ; call qword ptr [rdi]
0xffffff80002883f7 : jne 0xffffff8000288393 ; add r14b, r14b ; ret
0xffffff8000289ded : jne 0xffffff8000289dfe ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028d8af : jne 0xffffff800028d90e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028e0fa : jne 0xffffff800028e10b ; mov eax, dword ptr [rsi + 8] ; sub eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028e850 : jne 0xffffff800028e843 ; pop rbp ; ret
0xffffff800028e8b2 : jne 0xffffff800028e8c3 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff800028e90f : jne 0xffffff800028e920 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0xffffff800028ef5e : jne 0xffffff800028ef65 ; pop rbp ; ret
0xffffff800028f06a : jne 0xffffff800028f075 ; xor eax, eax ; pop rbp ; ret
0xffffff80002908e8 : jne 0xffffff80002908d3 ; pop rbp ; ret
0xffffff8000293679 : jne 0xffffff8000293680 ; pop rbp ; ret
0xffffff80002991a5 : jne 0xffffff8000299175 ; mov eax, ecx ; pop rbp ; ret
0xffffff800029bd39 : jne 0xffffff800029bd5a ; pop rbp ; ret
0xffffff800029dcc5 : jne 0xffffff800029dc52 ; call r14
0xffffff800029dd27 : jne 0xffffff800029dcb4 ; call r15
0xffffff800029df40 : jne 0xffffff800029decc ; call rcx
0xffffff800029e4b7 : jne 0xffffff800029e444 ; call r15
0xffffff800029f39c : jne 0xffffff800029f3e7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029f7a3 : jne 0xffffff800029f7ac ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800029fae0 : jne 0xffffff800029fb45 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002a08e3 : jne 0xffffff80002a08e7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a1d32 : jne 0xffffff80002a1d27 ; jmp 0xffffff80002a1d6d
0xffffff80002a5b96 : jne 0xffffff80002a5b53 ; pop rbp ; ret
0xffffff80002ab162 : jne 0xffffff80002ab1c3 ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002af4bf : jne 0xffffff80002af4cc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b4ed2 : jne 0xffffff80002b4ec6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b7373 : jne 0xffffff80002b7363 ; pop rbp ; ret
0xffffff80002c02b9 : jne 0xffffff80002c02b6 ; movzx eax, ax ; pop rbp ; ret
0xffffff80002c6b31 : jne 0xffffff80002c6b42 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80002c7098 : jne 0xffffff80002c70a7 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002cc05b : jne 0xffffff80002cc036 ; call 0xffffff80002a2869
0xffffff80002cf12b : jne 0xffffff80002cf0d3 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80002cf3b0 : jne 0xffffff80002cf357 ; mov rdx, r12 ; call rbx
0xffffff80002d0b19 : jne 0xffffff80002d0b2a ; mov eax, 1 ; pop rbp ; ret
0xffffff80002d3a96 : jne 0xffffff80002d3a53 ; pop rbp ; ret
0xffffff80002d6676 : jne 0xffffff80002d6628 ; mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000392938
0xffffff80002d7608 : jne 0xffffff80002d7611 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002da988 : jne 0xffffff80002da999 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80002e275b : jne 0xffffff80002e26e2 ; ret 0x832f
0xffffff80002e977e : jne 0xffffff80002e978f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80002e9bd7 : jne 0xffffff80002e9be0 ; xor eax, eax ; pop rbp ; ret
0xffffff80002eacd3 : jne 0xffffff80002eace4 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff80002eaed8 : jne 0xffffff80002eaee9 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff80002ebe3e : jne 0xffffff80002ebe45 ; pop rbp ; ret
0xffffff80002ed12e : jne 0xffffff80002ed135 ; pop rbp ; ret
0xffffff80002f5c83 : jne 0xffffff80002f5cc0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f8e29 : jne 0xffffff80002f8e36 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f8fc9 : jne 0xffffff80002f8fda ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002ff3c6 : jne 0xffffff80002ff3d1 ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800030fd4b : jne 0xffffff800030fd5e ; and eax, dword ptr [rip + 0x7ecd21] ; pop rbp ; ret
0xffffff8000313b5d : jne 0xffffff8000313b6c ; mov dword ptr [rdi + 0x48], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000316439 : jne 0xffffff8000316457 ; test dx, dx ; setne dl ; jmp 0xffffff8000316459
0xffffff8000316464 : jne 0xffffff8000316477 ; test ah, 0x80 ; sete dl ; jmp 0xffffff8000316479
0xffffff800031f1c2 : jne 0xffffff800031f1d1 ; mov eax, 1 ; pop rbp ; ret
0xffffff8000322965 : jne 0xffffff800032296e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003262f0 : jne 0xffffff8000326328 ; jmp 0xffffff8000326532
0xffffff8000328416 : jne 0xffffff8000328403 ; pop rbp ; ret
0xffffff8000328482 : jne 0xffffff8000328463 ; pop rbp ; ret
0xffffff80003284b3 : jne 0xffffff80003284a3 ; pop rbp ; ret
0xffffff8000332332 : jne 0xffffff80003323b9 ; add byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff80003376b7 : jne 0xffffff80003376be ; pop rbp ; ret
0xffffff8000337bbc : jne 0xffffff8000337c01 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80003384a0 : jne 0xffffff80003384a7 ; pop rbp ; ret
0xffffff8000340f0a : jne 0xffffff8000340f04 ; inc r10 ; jmp 0xffffff8000340f18
0xffffff8000340f57 : jne 0xffffff8000340f43 ; pop rbp ; ret
0xffffff80003475ed : jne 0xffffff8000347639 ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034dee9 : jne 0xffffff800034def6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035471d : jne 0xffffff8000354748 ; mov eax, dword ptr [rbx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035d9b0 : jne 0xffffff800035d9a3 ; pop rbp ; ret
0xffffff800036636e : jne 0xffffff8000366375 ; pop rbp ; ret
0xffffff8000366774 : jne 0xffffff8000366763 ; pop rbp ; ret
0xffffff80003667bc : jne 0xffffff80003667a3 ; pop rbp ; ret
0xffffff80003667b8 : jne 0xffffff80003667c7 ; test cl, cl ; jne 0xffffff80003667a7 ; pop rbp ; ret
0xffffff800036682c : jne 0xffffff80003667e3 ; pop rbp ; ret
0xffffff8000366881 : jne 0xffffff8000366845 ; xor eax, eax ; pop rbp ; ret
0xffffff80003668ab : jne 0xffffff80003668a6 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000366913 : jne 0xffffff8000366906 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000366aec : jne 0xffffff8000366ae6 ; mov rax, rdi ; pop rbp ; ret
0xffffff80003675f9 : jne 0xffffff80003675f6 ; and eax, 1 ; pop rbp ; ret
0xffffff8000367fd0 : jne 0xffffff8000367fc5 ; xor eax, eax ; pop rbp ; ret
0xffffff8000368090 : jne 0xffffff8000368085 ; xor eax, eax ; pop rbp ; ret
0xffffff80003696ae : jne 0xffffff80003696b5 ; pop rbp ; ret
0xffffff8000369783 : jne 0xffffff800036978a ; pop rbp ; ret
0xffffff800036996e : jne 0xffffff8000369975 ; pop rbp ; ret
0xffffff800036a2e4 : jne 0xffffff800036a325 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800036ce35 : jne 0xffffff800036ce63 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003710b5 : jne 0xffffff80003710a3 ; pop rbp ; ret
0xffffff800037c58f : jne 0xffffff800037c598 ; xor eax, eax ; pop rbp ; ret
0xffffff8000388b32 : jne 0xffffff8000388b23 ; pop rbp ; ret
0xffffff8000388b31 : jne 0xffffff8000388b24 ; pop rbp ; ret
0xffffff8000388b6a : jne 0xffffff8000388b53 ; pop rbp ; ret
0xffffff8000388b69 : jne 0xffffff8000388b54 ; pop rbp ; ret
0xffffff8000388d9b : jne 0xffffff8000388d43 ; pop rbp ; ret
0xffffff80003894bd : jne 0xffffff80003894c9 ; inc eax ; mov dword ptr [r8 + 0x18], eax ; ret
0xffffff8000389678 : jne 0xffffff80003896b3 ; call qword ptr [rax]
0xffffff8000389826 : jne 0xffffff8000389867 ; mov rdi, qword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff8000389863 : jne 0xffffff8000389874 ; call qword ptr [rax]
0xffffff8000389d6a : jne 0xffffff8000389d77 ; mov dword ptr [rax + 0x54], esi ; pop rbp ; ret
0xffffff8000389dda : jne 0xffffff8000389de7 ; mov dword ptr [rax + 0x48], esi ; pop rbp ; ret
0xffffff800038a242 : jne 0xffffff800038a1e3 ; pop rbp ; ret
0xffffff80003907b5 : jne 0xffffff80003907ba ; pop rbp ; ret
0xffffff80003907f6 : jne 0xffffff80003907fb ; pop rbp ; ret
0xffffff80003918f7 : jne 0xffffff80003918f7 ; jae 0xffffff8000391900 ; pop rbp ; ret
0xffffff800039232e : jne 0xffffff800039233d ; mov eax, 1 ; ret
0xffffff8000392357 : jne 0xffffff800039235c ; ret
0xffffff8000392351 : jne 0xffffff8000392362 ; lock cmpxchg byte ptr [rdi], cl ; jne 0xffffff8000392362 ; ret
0xffffff800039237e : jne 0xffffff800039238d ; mov eax, 1 ; ret
0xffffff80003923d2 : jne 0xffffff80003923a0 ; mov eax, 1 ; pop r9 ; ret
0xffffff800039247e : jne 0xffffff800039248d ; mov eax, 1 ; ret
0xffffff80003924f0 : jne 0xffffff800039252d ; ret
0xffffff80003925d8 : jne 0xffffff80003925f5 ; mov eax, 1 ; ret
0xffffff8000392624 : jne 0xffffff8000392661 ; ret
0xffffff800039271a : jne 0xffffff800039278d ; mov eax, 1 ; ret
0xffffff800039287c : jne 0xffffff800039288b ; mov eax, 1 ; ret
0xffffff8000392ade : jne 0xffffff8000392b1d ; leave ; ret
0xffffff8000393103 : jne 0xffffff8000393142 ; leave ; ret
0xffffff8000393214 : jne 0xffffff8000393227 ; mov rax, 1 ; ret
0xffffff80003934aa : jne 0xffffff80003934a6 ; mov eax, edx ; ret
0xffffff80003934ca : jne 0xffffff80003934c6 ; mov eax, edx ; ret
0xffffff800039437a : jne 0xffffff80003943cb ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039550b : jne 0xffffff8000395503 ; pop rbp ; ret
0xffffff80003965a3 : jne 0xffffff8000396595 ; xor eax, eax ; pop rbp ; ret
0xffffff80003965e8 : jne 0xffffff80003965e6 ; sub rax, rdi ; pop rbp ; ret
0xffffff8000396680 : jne 0xffffff8000396656 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000397cbd : jne 0xffffff8000397cd3 ; pop rbp ; ret
0xffffff8000397cfe : jne 0xffffff8000397d05 ; pop rbp ; ret
0xffffff8000397d2e : jne 0xffffff8000397d35 ; pop rbp ; ret
0xffffff80003999f9 : jne 0xffffff8000399a08 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800039a0a9 : jne 0xffffff800039a0b1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a6ef : jne 0xffffff800039a6fa ; inc eax ; mov dword ptr [rsi + 0x18], eax ; ret
0xffffff800039a731 : jne 0xffffff800039a702 ; ret
0xffffff800039cd84 : jne 0xffffff800039cd91 ; mov eax, dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80003a0e71 : jne 0xffffff80003a0e82 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80003a2d69 : jne 0xffffff80003a2d6e ; pop rbp ; ret
0xffffff80003a2d9e : jne 0xffffff80003a2da9 ; xor eax, eax ; pop rbp ; ret
0xffffff80003a2fa7 : jne 0xffffff80003a2fb0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a3061 : jne 0xffffff80003a306a ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a37c1 : jne 0xffffff80003a37c9 ; mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff80003a38b9 : jne 0xffffff80003a38be ; pop rbp ; ret
0xffffff80003a48d5 : jne 0xffffff80003a48d1 ; ret
0xffffff80003a49af : jne 0xffffff80003a49ab ; ret
0xffffff80003a61aa : jne 0xffffff80003a61b0 ; call 0xffffff80003923e4
0xffffff80003a6e89 : jne 0xffffff80003a6e43 ; pop rbp ; ret
0xffffff80003a6f15 : jne 0xffffff80003a6f1d ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80003a6f38 : jne 0xffffff80003a6f40 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80003a7044 : jne 0xffffff80003a7048 ; call qword ptr [rax]
0xffffff80003a7fe0 : jne 0xffffff80003a7fe7 ; pop rbp ; ret
0xffffff80003a9a5d : jne 0xffffff80003a9a6e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003aa48b : jne 0xffffff80003aa418 ; call r8
0xffffff80003aa60a : jne 0xffffff80003aa596 ; call rax
0xffffff80003aa9be : jne 0xffffff80003aa94b ; call r8
0xffffff80003aafcc : jne 0xffffff80003aafd2 ; call 0xffffff8000397204
0xffffff80003ab7f9 : jne 0xffffff80003ab80a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003ac3ec : jne 0xffffff80003ac425 ; mov rdi, r14 ; mov rsi, r13 ; call rbx
0xffffff80003acbb9 : jne 0xffffff80003acbc1 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff80003ae12e : jne 0xffffff80003ae135 ; pop rbp ; ret
0xffffff80003b186b : jne 0xffffff80003b1872 ; pop rbp ; ret
0xffffff80003b269a : jne 0xffffff80003b26a3 ; mov edx, eax ; jmp 0xffffff80003b26cc
0xffffff80003b2822 : jne 0xffffff80003b27c3 ; pop rbp ; ret
0xffffff80003b7396 : jne 0xffffff80003b73a5 ; in al, dx ; mov byte ptr [rsi], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7446 : jne 0xffffff80003b7455 ; mov al, byte ptr [rsi] ; out dx, al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7fb0 : jne 0xffffff80003b7fa5 ; xor eax, eax ; pop rbp ; ret
0xffffff80003b80b2 : jne 0xffffff80003b80a5 ; mov eax, ecx ; pop rbp ; ret
0xffffff80003b8102 : jne 0xffffff80003b80f5 ; mov eax, ecx ; pop rbp ; ret
0xffffff80003b8462 : jne 0xffffff80003b8455 ; mov eax, ecx ; pop rbp ; ret
0xffffff80003b84a2 : jne 0xffffff80003b8495 ; mov eax, ecx ; pop rbp ; ret
0xffffff80003c0285 : jne 0xffffff80003c0290 ; xor eax, eax ; pop rbp ; ret
0xffffff80003c05cf : jne 0xffffff80003c05d6 ; pop rbp ; ret
0xffffff80003c0b2e : jne 0xffffff80003c0b6f ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c5cb3 : jne 0xffffff80003c5d20 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003c5d15 : jne 0xffffff80003c5d49 ; pop rbp ; ret
0xffffff80003c5da9 : jne 0xffffff80003c5ddd ; pop rbp ; ret
0xffffff80003e27ab : jne 0xffffff80003e2768 ; jmp 0xffffff80003e27bd
0xffffff80003e6dbe : jne 0xffffff80003e6dcf ; mov rdi, r12 ; call 0xffffff8000393047
0xffffff80003e7db3 : jne 0xffffff80003e7dc0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003eab87 : jne 0xffffff80003eab94 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800040aea9 : jne 0xffffff800040aeb0 ; pop rbp ; ret
0xffffff800040c046 : jne 0xffffff800040c023 ; pop rbp ; ret
0xffffff800040c8a7 : jne 0xffffff800040c8b8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800040c927 : jne 0xffffff800040c938 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800040eeee : jne 0xffffff800040eef5 ; pop rbp ; ret
0xffffff8000416f04 : jne 0xffffff8000416f43 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000419039 : jne 0xffffff8000419038 ; jmp 0xffffff80004191e2
0xffffff800041ecee : jne 0xffffff800041ece3 ; pop rbp ; ret
0xffffff800041ee16 : jne 0xffffff800041eda3 ; pop rbp ; ret
0xffffff8000420712 : jne 0xffffff80004206f3 ; pop rbp ; ret
0xffffff8000422ee3 : jne 0xffffff8000422ef0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800042314b : jne 0xffffff8000423158 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000423290 : jne 0xffffff80004232d1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000423653 : jne 0xffffff8000423664 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80004239f8 : jne 0xffffff80004239e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004296c5 : jne 0xffffff8000429693 ; pop rbp ; ret
0xffffff8000437776 : jne 0xffffff8000437781 ; xor eax, eax ; pop rbp ; ret
0xffffff8000437877 : jne 0xffffff8000437888 ; mov eax, 1 ; pop rbp ; ret
0xffffff800043786b : jne 0xffffff8000437888 ; mov eax, 4 ; pop rbp ; ret
0xffffff800043786a : jne 0xffffff8000437889 ; mov eax, 4 ; pop rbp ; ret
0xffffff8000443857 : jne 0xffffff800044384f ; inc rdx ; jmp 0xffffff8000443865
0xffffff80004486ba : jne 0xffffff80004486c9 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff8000448f7e : jne 0xffffff8000448f73 ; pop rbp ; ret
0xffffff800044d3ff : jne 0xffffff800044d410 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff800044ebdd : jne 0xffffff800044ebd3 ; pop rbp ; ret
0xffffff80004515ac : jne 0xffffff80004515e3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000451825 : jne 0xffffff8000451813 ; pop rbp ; ret
0xffffff80004692fc : jne 0xffffff80004692f3 ; jmp 0xffffff80004692c6
0xffffff800046f04b : jne 0xffffff800046f063 ; or byte ptr [rbx], 2 ; jmp 0xffffff800046f063
0xffffff8000476c75 : jne 0xffffff8000476c86 ; mov rdi, r14 ; call 0xffffff8000422eb7
0xffffff800049ca54 : jne 0xffffff800049ca16 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049cbf4 : jne 0xffffff800049cbea ; mov rax, rdx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049ce6b : jne 0xffffff800049ce63 ; pop rbp ; ret
0xffffff800049cf39 : jne 0xffffff800049cf26 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049cfab : jne 0xffffff800049cf98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800049e1f1 : jne 0xffffff800049e1d6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049f57c : jne 0xffffff800049f58d ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff80004a0c25 : jne 0xffffff80004a0be9 ; lfence ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a1909 : jne 0xffffff80004a18f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004a53d0 : jne 0xffffff80004a53c3 ; pop rbp ; ret
0xffffff80004a640c : jne 0xffffff80004a63b6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a6455 : jne 0xffffff80004a645e ; xor eax, eax ; pop rbp ; ret
0xffffff80004a8855 : jne 0xffffff80004a885e ; xor eax, eax ; pop rbp ; ret
0xffffff80004ab006 : jne 0xffffff80004aaff7 ; not edi ; mov eax, edi ; pop rbp ; ret
0xffffff80004ab071 : jne 0xffffff80004ab068 ; mov rsi, rax ; sub eax, esi ; pop rbp ; ret
0xffffff80004acab0 : jne 0xffffff80004aca66 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3588 : jne 0xffffff80004b3563 ; pop rbp ; ret
0xffffff80004b37af : jne 0xffffff80004b37bc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b49a6 : jne 0xffffff80004b4a03 ; mov rdi, rbx ; mov rsi, r14 ; call r12
0xffffff80004b7b34 : jne 0xffffff80004b7b41 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004bb6a2 : jne 0xffffff80004bb686 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004bc4b2 : jne 0xffffff80004bc4a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004c38db : jne 0xffffff80004c38af ; call rbx
0xffffff80004c4853 : jne 0xffffff80004c47f7 ; call rax
0xffffff80004c5f5a : jne 0xffffff80004c5f43 ; pop rbp ; ret
0xffffff80004c857f : jne 0xffffff80004c8588 ; xor eax, eax ; pop rbp ; ret
0xffffff80004c859d : jne 0xffffff80004c85a4 ; pop rbp ; ret
0xffffff80004cb299 : jne 0xffffff80004cb2a2 ; xor eax, eax ; pop rbp ; ret
0xffffff80004cd15a : jne 0xffffff80004cd163 ; xor eax, eax ; pop rbp ; ret
0xffffff80004d94a9 : jne 0xffffff80004d9438 ; mov rdx, r15 ; call rcx
0xffffff80004ed67d : jne 0xffffff80004ed688 ; xor eax, eax ; pop rbp ; ret
0xffffff80004ed6dd : jne 0xffffff80004ed6e8 ; xor eax, eax ; pop rbp ; ret
0xffffff80004eeca5 : jne 0xffffff80004eeb19 ; xor eax, eax ; pop rbp ; ret
0xffffff80004f3ced : jne 0xffffff80004f3cd3 ; pop rbp ; ret
0xffffff80004f9026 : jne 0xffffff80004f9013 ; pop rbp ; ret
0xffffff80004fa6f0 : jne 0xffffff80004fa6e3 ; pop rbp ; ret
0xffffff80004fa741 : jne 0xffffff80004fa74a ; xor eax, eax ; pop rbp ; ret
0xffffff8000511b8f : jne 0xffffff8000511b54 ; pop rbp ; ret
0xffffff8000511b8f : jne 0xffffff8000511b56 ; pop rbp ; ret
0xffffff8000512e81 : jne 0xffffff8000512ea6 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000512f59 : jne 0xffffff8000512f6a ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff8000512fcd : jne 0xffffff8000512fde ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff800051354b : jne 0xffffff8000513538 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000516461 : jne 0xffffff800051647a ; dec dword ptr [rdi + 8] ; je 0xffffff8000516472 ; pop rbp ; ret
0xffffff800051f5b7 : jne 0xffffff800051f5c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000528eef : jne 0xffffff8000528efe ; mov eax, 2 ; pop rbp ; ret
0xffffff8000530ed5 : jne 0xffffff8000530ec3 ; pop rbp ; ret
0xffffff8000530f42 : jne 0xffffff8000530f23 ; pop rbp ; ret
0xffffff8000530f73 : jne 0xffffff8000530f63 ; pop rbp ; ret
0xffffff8000530f91 : jne 0xffffff8000530fa2 ; mov eax, 2 ; pop rbp ; ret
0xffffff8000530f9d : jne 0xffffff8000530fae ; mov eax, 1 ; pop rbp ; ret
0xffffff80005322c0 : jne 0xffffff80005322c7 ; pop rbp ; ret
0xffffff80005324b2 : jne 0xffffff80005324b9 ; pop rbp ; ret
0xffffff800053256a : jne 0xffffff8000532571 ; pop rbp ; ret
0xffffff800053313c : jne 0xffffff8000533104 ; mov rdx, qword ptr [rbp - 0x30] ; call rcx
0xffffff8000534413 : jne 0xffffff80005343ed ; mov rdi, r13 ; mov rsi, r14 ; call rcx
0xffffff8000534412 : jne 0xffffff80005343ee ; mov rdi, r13 ; mov rsi, r14 ; call rcx
0xffffff800053a641 : jne 0xffffff800053a64e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800053e62b : jne 0xffffff800053e625 ; xor eax, eax ; pop rbp ; ret
0xffffff800053e650 : jne 0xffffff800053e657 ; pop rbp ; ret
0xffffff800053e6eb : jne 0xffffff800053e6e8 ; mov eax, 0xfffffffe ; pop rbp ; ret
0xffffff80005453c0 : jne 0xffffff80005453d9 ; mov rdi, r13 ; mov rsi, rbx ; call r14
0xffffff8000547489 : jne 0xffffff800054745a ; jmp 0xffffff80005474ac
0xffffff80005481a3 : jne 0xffffff8000548196 ; jmp 0xffffff80005481c0
0xffffff80005496e5 : jne 0xffffff8000549700 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054dede : jne 0xffffff800054deae ; mov r15, r8 ; call r15
0xffffff800054dfa8 : jne 0xffffff800054df77 ; mov rbx, rdx ; call rbx
0xffffff800054f3ec : jne 0xffffff800054f3c0 ; call rbx
0xffffff800054f3e8 : jne 0xffffff800054f3fa ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff800054f605 : jne 0xffffff800054f60c ; pop rbp ; ret
0xffffff800054f5ff : jne 0xffffff800054f610 ; test byte ptr [rax + 0xe], 1 ; jne 0xffffff800054f612 ; pop rbp ; ret
0xffffff800054f999 : jne 0xffffff800054f9a0 ; pop rbp ; ret
0xffffff800054ff47 : jne 0xffffff800054ff5a ; mov dword ptr [rip + 0x588459], esi ; pop rbp ; ret
0xffffff8000550a6a : jne 0xffffff8000550a77 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800055edfd : jne 0xffffff800055ee29 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800056cf1b : jne 0xffffff800056cf15 ; xor eax, eax ; pop rbp ; ret
0xffffff800056d4fc : jne 0xffffff800056d50f ; mov dword ptr [rcx], 2 ; pop rbp ; ret
0xffffff80005709a2 : jne 0xffffff80005709b3 ; mov eax, dword ptr [rdi + 0x184] ; pop rbp ; ret
0xffffff80005709e2 : jne 0xffffff80005709f3 ; mov eax, dword ptr [rdi + 0x184] ; pop rbp ; ret
0xffffff80005724e9 : jne 0xffffff8000572497 ; call 0xffffff800010e058
0xffffff800057f1a2 : jne 0xffffff800057f183 ; pop rbp ; ret
0xffffff800057f1d3 : jne 0xffffff800057f1c3 ; pop rbp ; ret
0xffffff8000580182 : jne 0xffffff8000580163 ; pop rbp ; ret
0xffffff80005801b7 : jne 0xffffff80005801a3 ; pop rbp ; ret
0xffffff8000581528 : jne 0xffffff8000581503 ; pop rbp ; ret
0xffffff800058156a : jne 0xffffff8000581553 ; pop rbp ; ret
0xffffff8000582492 : jne 0xffffff8000582473 ; pop rbp ; ret
0xffffff8000582502 : jne 0xffffff80005824e3 ; pop rbp ; ret
0xffffff8000582537 : jne 0xffffff8000582523 ; pop rbp ; ret
0xffffff8000582564 : jne 0xffffff8000582573 ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80005825b2 : jne 0xffffff8000582593 ; pop rbp ; ret
0xffffff8000583c02 : jne 0xffffff8000583c13 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005841c7 : jne 0xffffff80005841da ; test cl, cl ; je 0xffffff80005841da ; xor eax, eax ; pop rbp ; ret
0xffffff80005890a1 : jne 0xffffff80005890ad ; call rcx
0xffffff80005890a7 : jne 0xffffff80005890b0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000589264 : jne 0xffffff8000589270 ; call rcx
0xffffff800058926a : jne 0xffffff8000589273 ; xor eax, eax ; pop rbp ; ret
0xffffff800059cd57 : jne 0xffffff800059cd6a ; inc dword ptr [rdi + 0xc8] ; pop rbp ; ret
0xffffff800059cd64 : jne 0xffffff800059cd77 ; inc dword ptr [rdi + 0xcc] ; pop rbp ; ret
0xffffff800059d821 : jne 0xffffff800059d837 ; xor eax, eax ; pop rbp ; ret
0xffffff800059f46e : jne 0xffffff800059f468 ; dec dword ptr [rdi + 0x54] ; je 0xffffff800059f47f ; pop rbp ; ret
0xffffff800059f720 : jne 0xffffff800059f713 ; pop rbp ; ret
0xffffff80005a8ed0 : jne 0xffffff80005a8e17 ; pop rbp ; ret
0xffffff80005a8f52 : jne 0xffffff80005a8f33 ; pop rbp ; ret
0xffffff80005a8f83 : jne 0xffffff80005a8f73 ; pop rbp ; ret
0xffffff80005b107a : jne 0xffffff80005b1023 ; pop rbp ; ret
0xffffff80005b10f2 : jne 0xffffff80005b10d3 ; pop rbp ; ret
0xffffff80005b1123 : jne 0xffffff80005b1113 ; pop rbp ; ret
0xffffff80005b20a0 : jne 0xffffff80005b2043 ; pop rbp ; ret
0xffffff80005b2122 : jne 0xffffff80005b2103 ; pop rbp ; ret
0xffffff80005b2157 : jne 0xffffff80005b2143 ; pop rbp ; ret
0xffffff80005bc45b : jne 0xffffff80005bc458 ; mov eax, 0x2d ; pop rbp ; ret
0xffffff80005bf776 : jne 0xffffff80005bf733 ; pop rbp ; ret
0xffffff80005bf7f2 : jne 0xffffff80005bf7d3 ; pop rbp ; ret
0xffffff80005bf827 : jne 0xffffff80005bf813 ; pop rbp ; ret
0xffffff80005bf892 : jne 0xffffff80005bf873 ; pop rbp ; ret
0xffffff80005d3e86 : jne 0xffffff80005d3e81 ; ret 0
0xffffff80005d616d : jne 0xffffff80005d61bd ; add al, ch ; pop rbx ; ret
0xffffff80005dcf9c : jne 0xffffff80005dcf61 ; jmp 0xffffff80005dcfb4
0xffffff80005e47c1 : jne 0xffffff80005e47b3 ; pop rbp ; ret
0xffffff80005e4832 : jne 0xffffff80005e4813 ; pop rbp ; ret
0xffffff80005e4863 : jne 0xffffff80005e4853 ; pop rbp ; ret
0xffffff80005e48d1 : jne 0xffffff80005e48b3 ; pop rbp ; ret
0xffffff80005e4d64 : jne 0xffffff80005e4d07 ; mov byte ptr [rdi + 0x11], 1 ; pop rbp ; ret
0xffffff80005e5544 : jne 0xffffff80005e54d6 ; jmp 0xffffff80005e5555
0xffffff80005e60cf : jne 0xffffff80005e611e ; add al, ch ; stc ; ret
0xffffff80005ebe16 : jne 0xffffff80005ebdd3 ; pop rbp ; ret
0xffffff80005ebe92 : jne 0xffffff80005ebe73 ; pop rbp ; ret
0xffffff80005ebec7 : jne 0xffffff80005ebeb3 ; pop rbp ; ret
0xffffff80005f57eb : jne 0xffffff80005f57e3 ; pop rbp ; ret
0xffffff80005fb886 : jne 0xffffff80005fb874 ; add byte ptr [r9], r8b ; pop rbp ; ret
0xffffff80005fb9e2 : jne 0xffffff80005fba3b ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0xffffff8000600a6c : jne 0xffffff8000600a31 ; jmp 0xffffff8000600a7d
0xffffff8000604c89 : jne 0xffffff8000604c4d ; call rax
0xffffff800060599e : jne 0xffffff8000605993 ; jmp 0xffffff8000605967
0xffffff8000606421 : jne 0xffffff80006063fc ; mov edx, r13d ; mov ecx, r15d ; call r8
0xffffff8000611370 : jne 0xffffff8000611343 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000612abe : jne 0xffffff8000612ab9 ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061ba1c : jne 0xffffff800061ba2d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff8000625fba : jne 0xffffff8000625fc9 ; and byte ptr [rdi + 0x5b], 0xef ; pop rbp ; ret
0xffffff8000625fb9 : jne 0xffffff8000625fca ; and byte ptr [rdi + 0x5b], 0xef ; pop rbp ; ret
0xffffff8000626484 : jne 0xffffff8000626473 ; pop rbp ; ret
0xffffff80006264cb : jne 0xffffff80006264b3 ; pop rbp ; ret
0xffffff8000626540 : jne 0xffffff8000626533 ; pop rbp ; ret
0xffffff8000629b5b : jne 0xffffff8000629b6c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000629b5a : jne 0xffffff8000629b6d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000635010 : jne 0xffffff8000635005 ; jmp 0xffffff8000634fd9
0xffffff80006357d9 : jne 0xffffff800063578c ; mov edx, r15d ; call rax
0xffffff8000637a26 : jne 0xffffff80006379e3 ; pop rbp ; ret
0xffffff8000637aa2 : jne 0xffffff8000637a83 ; pop rbp ; ret
0xffffff8000637ad7 : jne 0xffffff8000637ac3 ; pop rbp ; ret
0xffffff800064765b : jne 0xffffff80006475fb ; lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff800064e519 : jne 0xffffff800064e4eb ; call 0xffffff800010e058
0xffffff8000655d27 : jne 0xffffff8000655cb2 ; ret
0xffffff8000659249 : jne 0xffffff8000659266 ; xor eax, 0xe8c03100 ; push rdx ; ret
0xffffff800065e527 : jne 0xffffff800065e52a ; ret 0xc7ff
0xffffff8000663e3a : jne 0xffffff8000663e5a ; jmp 0xffffff8000663e56
0xffffff800067203a : jne 0xffffff8000672033 ; pop rbp ; ret
0xffffff8000672397 : jne 0xffffff800067238c ; jmp 0xffffff80006723c4
0xffffff80006783d6 : jne 0xffffff8000678395 ; call 0xffffff800029aac5
0xffffff80006788d4 : jne 0xffffff8000678870 ; call rbx
0xffffff800067898c : jne 0xffffff800067891f ; mov edx, r15d ; call rbx
0xffffff80006789b6 : jne 0xffffff8000678949 ; mov edx, r15d ; call rbx
0xffffff800067a01e : jne 0xffffff800067a015 ; jmp 0xffffff800067a062
0xffffff8000687f00 : jne 0xffffff8000687ec3 ; pop rbp ; ret
0xffffff8000687f72 : jne 0xffffff8000687f53 ; pop rbp ; ret
0xffffff8000687fa3 : jne 0xffffff8000687f93 ; pop rbp ; ret
0xffffff8000688011 : jne 0xffffff8000687ff3 ; pop rbp ; ret
0xffffff8000688194 : jne 0xffffff8000688126 ; jmp 0xffffff80006881a5
0xffffff8000688394 : jne 0xffffff8000688337 ; mov byte ptr [rdi + 0x11], 1 ; pop rbp ; ret
0xffffff80006a4360 : jne 0xffffff80006a4323 ; pop rbp ; ret
0xffffff80006a43d2 : jne 0xffffff80006a43b3 ; pop rbp ; ret
0xffffff80006a4403 : jne 0xffffff80006a43f3 ; pop rbp ; ret
0xffffff80006a4471 : jne 0xffffff80006a4453 ; pop rbp ; ret
0xffffff80006b1727 : jne 0xffffff80006b172e ; pop rbp ; ret
0xffffff80006b6ef3 : jne 0xffffff80006b6eb7 ; call rax
0xffffff80006bc2b3 : jne 0xffffff80006bc2a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006c59d4 : jne 0xffffff80006c59a3 ; pop rbp ; ret
0xffffff80006c5a4e : jne 0xffffff80006c59f3 ; pop rbp ; ret
0xffffff80006c9800 : jne 0xffffff80006c97f5 ; xor eax, eax ; pop rbp ; ret
0xffffff80006d061e : jne 0xffffff80006d05f6 ; mov eax, r8d ; pop rbp ; ret
0xffffff80006d63d8 : jne 0xffffff80006d63e9 ; mov eax, dword ptr [rdi + 0x14] ; bswap eax ; pop rbp ; ret
0xffffff80006d6402 : jne 0xffffff80006d6411 ; bswap esi ; mov dword ptr [rdi + 0x70], esi ; pop rbp ; ret
0xffffff80006d7bca : jne 0xffffff80006d7b85 ; xor eax, eax ; pop rbp ; ret
0xffffff80006dfeb1 : jne 0xffffff80006dfe4c ; mov edx, 0x40 ; call 0xffffff800071c0f9
0xffffff80006e1768 : jne 0xffffff80006e1777 ; mov eax, dword ptr [rdx] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006e1869 : jne 0xffffff80006e1867 ; mov qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff80006e3bfc : jne 0xffffff80006e3be3 ; pop rbp ; ret
0xffffff80006e67f6 : jne 0xffffff80006e6803 ; xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006eec3e : jne 0xffffff80006eec18 ; mov rdx, rbx ; call 0xffffff800030f498
0xffffff800070545e : jne 0xffffff8000705465 ; pop rbp ; ret
0xffffff8000705deb : jne 0xffffff8000705dfc ; mov eax, dword ptr [rcx + 0x24c] ; pop rbp ; ret
0xffffff8000706ac2 : jne 0xffffff8000706aa5 ; pop rbp ; ret
0xffffff8000706d22 : jne 0xffffff8000706d2f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000706dbf : jne 0xffffff8000706dd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000707161 : jne 0xffffff8000707135 ; call rax
0xffffff80007098a1 : jne 0xffffff80007098b2 ; mov eax, dword ptr [rdi + 0xec] ; pop rbp ; ret
0xffffff8000710aea : jne 0xffffff8000710af5 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000711e50 : jne 0xffffff8000711dfb ; mov edx, 0x20 ; call 0xffffff800010e089
0xffffff8000717646 : jne 0xffffff8000717600 ; call 0xffffff800010e058
0xffffff8000719a51 : jne 0xffffff8000719a7a ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000719a8d
0xffffff8000719a69 : jne 0xffffff8000719a83 ; movzx edx, byte ptr [rbx] ; inc rdx ; jmp 0xffffff8000719a8a
0xffffff800071adb3 : jne 0xffffff800071ade1 ; movzx edx, byte ptr [r15] ; inc rdx ; jmp 0xffffff800071ade9
0xffffff800071d3fd : jne 0xffffff800071d406 ; xor eax, eax ; pop rbp ; ret
0xffffff800071e2c7 : jne 0xffffff800071e298 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000722897 : jne 0xffffff80007228a8 ; movzx edx, dl ; inc rdx ; jmp 0xffffff80007228b1
0xffffff8000726557 : jne 0xffffff8000726591 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072722c : jne 0xffffff800072726a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072bfd8 : jne 0xffffff800072bfa6 ; mov eax, r8d ; pop rbp ; ret
0xffffff800072c3ca : jne 0xffffff800072c3db ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072c42a : jne 0xffffff800072c43b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072db20 : jne 0xffffff800072db17 ; or byte ptr [rdi + 0x32], 8 ; pop rbp ; ret
0xffffff800072f148 : jne 0xffffff800072f159 ; cmp qword ptr [rcx + 0x10], rdx ; je 0xffffff800072f15b ; pop rbp ; ret
0xffffff800072f2be : jne 0xffffff800072f2cf ; cmp dword ptr [rcx + 8], 0 ; je 0xffffff800072f2d1 ; pop rbp ; ret
0xffffff8000737600 : jne 0xffffff800073760f ; mov eax, 1 ; pop rbp ; ret
0xffffff8000745053 : jne 0xffffff8000745060 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000746845 : jne 0xffffff8000746856 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff800074eec8 : jne 0xffffff800074ef36 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800074fde5 : jne 0xffffff800074fdc3 ; pop rbp ; ret
0xffffff8000751d4c : jne 0xffffff8000751d73 ; mov eax, 3 ; pop rbp ; ret
0xffffff8000751d6e : jne 0xffffff8000751d7f ; mov eax, 1 ; pop rbp ; ret
0xffffff8000751d62 : jne 0xffffff8000751d7f ; mov eax, 2 ; pop rbp ; ret
0xffffff8000752afb : jne 0xffffff8000752ae8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000755ec9 : jne 0xffffff8000755ed6 ; mov rax, rsi ; pop rbp ; ret
0xffffff8000756ab2 : jne 0xffffff8000756abb ; xor eax, eax ; pop rbp ; ret
0xffffff80007587c5 : jne 0xffffff80007587cc ; pop rbp ; ret
0xffffff8000758850 : jne 0xffffff8000758857 ; pop rbp ; ret
0xffffff800075c707 : jne 0xffffff800075c6af ; ret
0xffffff800076064e : jne 0xffffff800076065b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076076e : jne 0xffffff800076077b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007636ee : jne 0xffffff8000763692 ; call rax
0xffffff800076392d : jne 0xffffff80007638d8 ; mov rdi, qword ptr [rbp - 0x30] ; call 0xffffff8000393049
0xffffff8000763edc : jne 0xffffff8000763e96 ; mov rdi, r14 ; call 0xffffff80003923e8
0xffffff800076515e : jne 0xffffff8000765110 ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000765cef : jne 0xffffff8000765d00 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007674f8 : jne 0xffffff8000767505 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000769b50 : jne 0xffffff8000769b43 ; pop rbp ; ret
0xffffff800076aac7 : jne 0xffffff800076aa50 ; ret 0x4cff
0xffffff800076d3c7 : jne 0xffffff800076d427 ; ret 0x49ff
0xffffff800076e9c2 : jne 0xffffff800076e988 ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000776b33 : jne 0xffffff8000776af8 ; jmp 0xffffff8000776b54
0xffffff8000779ef3 : jne 0xffffff8000779f04 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff800077a038 : jne 0xffffff8000779fc5 ; xor eax, eax ; pop rbp ; ret
0xffffff800077b3d6 : jne 0xffffff800077b3a0 ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; jmp qword ptr [rdi]
0xffffff800077d0cf : jne 0xffffff800077d0c3 ; pop rbp ; ret
0xffffff800077d22e : jne 0xffffff800077d23f ; mov eax, dword ptr [rdi + 0x1b8] ; pop rbp ; ret
0xffffff800077d286 : jne 0xffffff800077d29c ; pop rbp ; ret
0xffffff800077dc87 : jne 0xffffff800077dc83 ; pop rbp ; ret
0xffffff800077dd77 : jne 0xffffff800077dd76 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077e055 : jne 0xffffff800077e05e ; xor eax, eax ; pop rbp ; ret
0xffffff800077e075 : jne 0xffffff800077e07e ; xor eax, eax ; pop rbp ; ret
0xffffff800077e29b : jne 0xffffff800077e293 ; pop rbp ; ret
0xffffff800077e3af : jne 0xffffff800077e3a3 ; pop rbp ; ret
0xffffff800077f703 : jne 0xffffff800077f6d0 ; call r15
0xffffff800077f752 : jne 0xffffff800077f71f ; call r15
0xffffff800077faa5 : jne 0xffffff800077fa7a ; call r12
0xffffff800077fbaa : jne 0xffffff800077fb7f ; call r12
0xffffff80007888f2 : jne 0xffffff80007888d3 ; pop rbp ; ret
0xffffff800078a800 : jne 0xffffff800078a811 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800078cbcd : jne 0xffffff800078cbd4 ; pop rbp ; ret
0xffffff800078d870 : jne 0xffffff800078d87d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000790687 : jne 0xffffff8000790697 ; call 0xffffff8000790289
0xffffff8000790747 : jne 0xffffff8000790757 ; call 0xffffff8000790469
0xffffff8000791ce8 : jne 0xffffff8000791ce8 ; sub rdx, rsi ; mov rdi, r14 ; call rax
0xffffff8000794d76 : jne 0xffffff8000794d76 ; jmp 0xffffff8000794e66
0xffffff8000795cfb : jne 0xffffff8000795cf3 ; pop rbp ; ret
0xffffff800079614c : jne 0xffffff8000796153 ; pop rbp ; ret
0xffffff800079619c : jne 0xffffff80007961a3 ; pop rbp ; ret
0xffffff80007972ce : jne 0xffffff80007972f1 ; jmp 0xffffff80007972e7
0xffffff8000797376 : jne 0xffffff800079737f ; mov eax, ecx ; pop rbp ; ret
0xffffff8000797406 : jne 0xffffff8000797415 ; mov dword ptr [rdi + 0x48], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000799439 : jne 0xffffff800079944a ; mov rdi, r12 ; call 0xffffff80002b5747
0xffffff8000799c3c : jne 0xffffff8000799bd8 ; call rcx
0xffffff8000799c6b : jne 0xffffff8000799c07 ; call rax
0xffffff8000799f3b : jne 0xffffff8000799ed7 ; call rax
0xffffff800079caef : jne 0xffffff800079cb00 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff800079cdd6 : jne 0xffffff800079cde7 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff800079d4f4 : jne 0xffffff800079d501 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800079da82 : jne 0xffffff800079da93 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff800079db4f : jne 0xffffff800079db33 ; pop rbp ; ret
0xffffff800079dbbd : jne 0xffffff800079dbc8 ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff80007a0811 : jne 0xffffff80007a07b4 ; call 0xffffff80007633d9
0xffffff80007a0b8e : jne 0xffffff80007a0b9f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007a965d : jne 0xffffff80007a9653 ; pop rbp ; ret
0xffffff80007ae217 : jne 0xffffff80007ae1d4 ; pop rbx ; pop rbp ; ret
0xffffff80007ae4ae : jne 0xffffff80007ae4a3 ; pop rbp ; ret
0xffffff80007b5882 : jne 0xffffff80007b58a2 ; jmp 0xffffff80007b589e
0xffffff80007b6f4b : jne 0xffffff80007b6f43 ; pop rbp ; ret
0xffffff80007b8809 : jne 0xffffff80007b8803 ; pop rbp ; ret
0xffffff80007b9529 : jne 0xffffff80007b9523 ; pop rbp ; ret
0xffffff80007b9a70 : jne 0xffffff80007b9a81 ; mov dword ptr [rdx], esi ; mov rax, rdi ; pop rbp ; ret
0xffffff80007c6e1e : jne 0xffffff80007c6e27 ; xor eax, eax ; pop rbp ; ret
0xffffff80007cd652 : jne 0xffffff80007cd644 ; mov dword ptr [rbp - 0x3c], eax ; jmp 0xffffff80007cd0a2
0xffffff80007cf817 : jne 0xffffff80007cf828 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007d30ab : jne 0xffffff80007d30a5 ; xor eax, eax ; pop rbp ; ret
0xffffff80007d7972 : jne 0xffffff80007d7906 ; call rbx
0xffffff80007dab4d : jne 0xffffff80007dab1e ; xor ecx, ecx ; mov rdx, r12 ; call rax
0xffffff80007db657 : jne 0xffffff80007db636 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007eb8a0 : jne 0xffffff80007eb859 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007ecc1b : jne 0xffffff80007ecc18 ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80007f5a47 : jne 0xffffff80007f5a33 ; pop rbp ; ret
0xffffff80007f8587 : jne 0xffffff80007f8566 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fc4f3 : jne 0xffffff80007fc504 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007fcab0 : jne 0xffffff80007fcaa5 ; xor eax, eax ; pop rbp ; ret
0xffffff80007fcb60 : jne 0xffffff80007fcb55 ; xor eax, eax ; pop rbp ; ret
0xffffff80007fcbe0 : jne 0xffffff80007fcbd3 ; pop rbp ; ret
0xffffff80007fce68 : jne 0xffffff80007fce3c ; call rax
0xffffff80007fea47 : jne 0xffffff80007fea80 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000800788 : jne 0xffffff8000800787 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff80008007ab
0xffffff8000800848 : jne 0xffffff8000800847 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff800080086c
0xffffff8000800bd8 : jne 0xffffff8000800bd7 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800bfb
0xffffff8000800c98 : jne 0xffffff8000800c97 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800cbb
0xffffff8000800d58 : jne 0xffffff8000800d57 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800d7b
0xffffff8000800e18 : jne 0xffffff8000800e17 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800e3b
0xffffff8000802478 : jne 0xffffff8000802481 ; xor eax, eax ; pop rbp ; ret
0xffffff8000803476 : jne 0xffffff8000803436 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800080cd25 : jne 0xffffff800080cd15 ; mov eax, edi ; pop rbp ; ret
0xffffff800080cfa5 : jne 0xffffff800080cf95 ; mov eax, edi ; pop rbp ; ret
0xffffff800080dd4d : jne 0xffffff800080dd46 ; movzx eax, si ; pop rbp ; ret
0xffffff800080ddad : jne 0xffffff800080dda6 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080de0d : jne 0xffffff800080de06 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080dfb8 : jne 0xffffff800080dfb3 ; pop rbp ; ret
0xffffff800080dfd8 : jne 0xffffff800080dfd3 ; pop rbp ; ret
0xffffff800080dff8 : jne 0xffffff800080dff3 ; pop rbp ; ret
0xffffff800080e109 : jne 0xffffff800080e106 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e129 : jne 0xffffff800080e126 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e149 : jne 0xffffff800080e146 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e189 : jne 0xffffff800080e186 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1a9 : jne 0xffffff800080e1a6 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1c9 : jne 0xffffff800080e1c6 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080f463 : jne 0xffffff800080f46a ; pop rbp ; ret
0xffffff800080fe65 : jne 0xffffff800080fe53 ; pop rbp ; ret
0xffffff8000811514 : jne 0xffffff8000811521 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000811513 : jne 0xffffff8000811522 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000811b95 : jne 0xffffff8000811b83 ; pop rbp ; ret
0xffffff8000811bd5 : jne 0xffffff8000811bc3 ; pop rbp ; ret
0xffffff8000811c15 : jne 0xffffff8000811c03 ; pop rbp ; ret
0xffffff8000813325 : jne 0xffffff8000813313 ; pop rbp ; ret
0xffffff8000813365 : jne 0xffffff8000813353 ; pop rbp ; ret
0xffffff80008133a5 : jne 0xffffff8000813393 ; pop rbp ; ret
0xffffff8000814405 : jne 0xffffff80008143f3 ; pop rbp ; ret
0xffffff8000814445 : jne 0xffffff8000814433 ; pop rbp ; ret
0xffffff8000814485 : jne 0xffffff8000814473 ; pop rbp ; ret
0xffffff8000814e05 : jne 0xffffff8000814df3 ; pop rbp ; ret
0xffffff8000814e45 : jne 0xffffff8000814e33 ; pop rbp ; ret
0xffffff8000814e85 : jne 0xffffff8000814e73 ; pop rbp ; ret
0xffffff8000816365 : jne 0xffffff8000816353 ; pop rbp ; ret
0xffffff80008163a5 : jne 0xffffff8000816393 ; pop rbp ; ret
0xffffff80008163e5 : jne 0xffffff80008163d3 ; pop rbp ; ret
0xffffff800081886e : jne 0xffffff800081887f ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff8000818e95 : jne 0xffffff8000818e83 ; pop rbp ; ret
0xffffff8000818ed5 : jne 0xffffff8000818ec3 ; pop rbp ; ret
0xffffff8000818f15 : jne 0xffffff8000818f03 ; pop rbp ; ret
0xffffff800081b71a : jne 0xffffff800081b722 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081b78a : jne 0xffffff800081b792 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081b789 : jne 0xffffff800081b793 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000821d6b : jne 0xffffff8000821d53 ; pop rbp ; ret
0xffffff800082b685 : jne 0xffffff800082b673 ; pop rbp ; ret
0xffffff800082b6c5 : jne 0xffffff800082b6b3 ; pop rbp ; ret
0xffffff800082b705 : jne 0xffffff800082b6f3 ; pop rbp ; ret
0xffffff800082c2a5 : jne 0xffffff800082c293 ; pop rbp ; ret
0xffffff800082c2e5 : jne 0xffffff800082c2d3 ; pop rbp ; ret
0xffffff800082c325 : jne 0xffffff800082c313 ; pop rbp ; ret
0xffffff800082e185 : jne 0xffffff800082e173 ; pop rbp ; ret
0xffffff800082e1c5 : jne 0xffffff800082e1b3 ; pop rbp ; ret
0xffffff800082e205 : jne 0xffffff800082e1f3 ; pop rbp ; ret
0xffffff800082e72a : jne 0xffffff800082e718 ; and al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082ecc5 : jne 0xffffff800082ecb3 ; pop rbp ; ret
0xffffff800082ed05 : jne 0xffffff800082ecf3 ; pop rbp ; ret
0xffffff800082ed45 : jne 0xffffff800082ed33 ; pop rbp ; ret
0xffffff800082f7d5 : jne 0xffffff800082f7c3 ; pop rbp ; ret
0xffffff800082f815 : jne 0xffffff800082f803 ; pop rbp ; ret
0xffffff800082f855 : jne 0xffffff800082f843 ; pop rbp ; ret
0xffffff8000830b15 : jne 0xffffff8000830b03 ; pop rbp ; ret
0xffffff8000830b55 : jne 0xffffff8000830b43 ; pop rbp ; ret
0xffffff8000830b95 : jne 0xffffff8000830b83 ; pop rbp ; ret
0xffffff8000831f74 : jne 0xffffff8000831f83 ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80008324a5 : jne 0xffffff800083245b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000832a95 : jne 0xffffff8000832a83 ; pop rbp ; ret
0xffffff8000832ad5 : jne 0xffffff8000832ac3 ; pop rbp ; ret
0xffffff8000832b15 : jne 0xffffff8000832b03 ; pop rbp ; ret
0xffffff80008331c5 : jne 0xffffff80008331a3 ; pop rbp ; ret
0xffffff800083a2c2 : jne 0xffffff800083a2d3 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff800083b175 : jne 0xffffff800083b163 ; pop rbp ; ret
0xffffff800083b2e8 : jne 0xffffff800083b2d3 ; pop rbp ; ret
0xffffff800083b69d : jne 0xffffff800083b683 ; pop rbp ; ret
0xffffff800083d14b : jne 0xffffff800083d15c ; mov qword ptr [rcx + 0x40], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff8000843546 : jne 0xffffff8000843524 ; pop rbx ; pop rbp ; ret
0xffffff800084b777 : jne 0xffffff800084b763 ; pop rbp ; ret
0xffffff800084cc1e : jne 0xffffff800084cc13 ; pop rbp ; ret
0xffffff800084fc4e : jne 0xffffff800084fc43 ; pop rbp ; ret
0xffffff8000855baa : jne 0xffffff8000855bb1 ; pop rbp ; ret
0xffffff800085818b : jne 0xffffff8000858159 ; mov eax, dword ptr [rsi] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000858434 : jne 0xffffff8000858436 ; and edi, 0xfffffff8 ; mov edx, eax ; jmp 0xffffff800085844a
0xffffff8000858456 : jne 0xffffff8000858453 ; pop rbp ; ret
0xffffff8000858f25 : jne 0xffffff8000858f13 ; pop rbp ; ret
0xffffff8000858f65 : jne 0xffffff8000858f53 ; pop rbp ; ret
0xffffff8000858fa5 : jne 0xffffff8000858f93 ; pop rbp ; ret
0xffffff800085b91f : jne 0xffffff800085b923 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085ce55 : jne 0xffffff800085ce43 ; pop rbp ; ret
0xffffff800085ce95 : jne 0xffffff800085ce83 ; pop rbp ; ret
0xffffff800085ced5 : jne 0xffffff800085cec3 ; pop rbp ; ret
0xffffff800085d0b5 : jne 0xffffff800085d0a3 ; pop rbp ; ret
0xffffff800085d0f5 : jne 0xffffff800085d0e3 ; pop rbp ; ret
0xffffff800085d135 : jne 0xffffff800085d123 ; pop rbp ; ret
0xffffff8000860fb5 : jne 0xffffff8000860fa3 ; pop rbp ; ret
0xffffff8000860ff5 : jne 0xffffff8000860fe3 ; pop rbp ; ret
0xffffff8000861035 : jne 0xffffff8000861023 ; pop rbp ; ret
0xffffff8000862845 : jne 0xffffff8000862833 ; pop rbp ; ret
0xffffff8000862885 : jne 0xffffff8000862873 ; pop rbp ; ret
0xffffff80008628c5 : jne 0xffffff80008628b3 ; pop rbp ; ret
0xffffff8000862ad5 : jne 0xffffff8000862ac3 ; pop rbp ; ret
0xffffff8000862b15 : jne 0xffffff8000862b03 ; pop rbp ; ret
0xffffff8000862b55 : jne 0xffffff8000862b43 ; pop rbp ; ret
0xffffff8000862d35 : jne 0xffffff8000862d23 ; pop rbp ; ret
0xffffff8000862d75 : jne 0xffffff8000862d63 ; pop rbp ; ret
0xffffff8000862db5 : jne 0xffffff8000862da3 ; pop rbp ; ret
0xffffff8000862f95 : jne 0xffffff8000862f83 ; pop rbp ; ret
0xffffff8000862fd5 : jne 0xffffff8000862fc3 ; pop rbp ; ret
0xffffff8000863015 : jne 0xffffff8000863003 ; pop rbp ; ret
0xffffff80008631f5 : jne 0xffffff80008631e3 ; pop rbp ; ret
0xffffff8000863235 : jne 0xffffff8000863223 ; pop rbp ; ret
0xffffff8000863275 : jne 0xffffff8000863263 ; pop rbp ; ret
0xffffff8000863455 : jne 0xffffff8000863443 ; pop rbp ; ret
0xffffff8000863495 : jne 0xffffff8000863483 ; pop rbp ; ret
0xffffff80008634d5 : jne 0xffffff80008634c3 ; pop rbp ; ret
0xffffff80008636b5 : jne 0xffffff80008636a3 ; pop rbp ; ret
0xffffff80008636f5 : jne 0xffffff80008636e3 ; pop rbp ; ret
0xffffff8000863735 : jne 0xffffff8000863723 ; pop rbp ; ret
0xffffff8000863f77 : jne 0xffffff8000863f53 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086a3e7 : jne 0xffffff800086a404 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000873eb5 : jne 0xffffff8000873ea3 ; pop rbp ; ret
0xffffff80008790d7 : jne 0xffffff80008790bb ; and dword ptr [rax], eax ; pop rbp ; ret
0xffffff800087992a : jne 0xffffff8000879937 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000879a0b : jne 0xffffff8000879a1a ; mov r9d, dword ptr [rsi + 0x60] ; mov rsi, rbx ; call rax
0xffffff8000879c5e : jne 0xffffff8000879c6d ; mov r9d, dword ptr [rsi + 0x60] ; mov rsi, rbx ; call rax
0xffffff8000879ed5 : jne 0xffffff8000879ee4 ; mov r9d, dword ptr [rsi + 0x60] ; mov rsi, r14 ; call rax
0xffffff800087a0f6 : jne 0xffffff800087a105 ; mov r9d, dword ptr [rsi + 0x60] ; mov rsi, r14 ; call rax
0xffffff800087bde8 : jne 0xffffff800087bdf5 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800087c4d3 : jne 0xffffff800087c4e2 ; mov r9d, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff800087c82a : jne 0xffffff800087c839 ; mov r9d, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff800087c9af : jne 0xffffff800087c9be ; mov r9d, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff800087e85f : jne 0xffffff800087e8c1 ; add byte ptr es:[rcx + rcx*4 - 0x12], al ; call rax
0xffffff8000881337 : jne 0xffffff8000881394 ; sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80008813c5 : jne 0xffffff80008813b3 ; pop rbp ; ret
0xffffff8000881405 : jne 0xffffff80008813f3 ; pop rbp ; ret
0xffffff8000881445 : jne 0xffffff8000881433 ; pop rbp ; ret
0xffffff80008816e5 : jne 0xffffff80008816d3 ; pop rbp ; ret
0xffffff8000881725 : jne 0xffffff8000881713 ; pop rbp ; ret
0xffffff8000881765 : jne 0xffffff8000881753 ; pop rbp ; ret
0xffffff8000881af5 : jne 0xffffff8000881ae3 ; pop rbp ; ret
0xffffff8000881b35 : jne 0xffffff8000881b23 ; pop rbp ; ret
0xffffff8000881b75 : jne 0xffffff8000881b63 ; pop rbp ; ret
0xffffff8000882105 : jne 0xffffff80008820f3 ; pop rbp ; ret
0xffffff8000882145 : jne 0xffffff8000882133 ; pop rbp ; ret
0xffffff8000882185 : jne 0xffffff8000882173 ; pop rbp ; ret
0xffffff8000882485 : jne 0xffffff8000882473 ; pop rbp ; ret
0xffffff80008824c5 : jne 0xffffff80008824b3 ; pop rbp ; ret
0xffffff8000884785 : jne 0xffffff8000884773 ; pop rbp ; ret
0xffffff80008847c5 : jne 0xffffff80008847b3 ; pop rbp ; ret
0xffffff8000884805 : jne 0xffffff80008847f3 ; pop rbp ; ret
0xffffff8000884ec5 : jne 0xffffff8000884eb3 ; pop rbp ; ret
0xffffff8000884f05 : jne 0xffffff8000884ef3 ; pop rbp ; ret
0xffffff8000884f45 : jne 0xffffff8000884f33 ; pop rbp ; ret
0xffffff80008851bd : jne 0xffffff80008851b3 ; pop rbp ; ret
0xffffff80008857f5 : jne 0xffffff80008857e3 ; pop rbp ; ret
0xffffff8000885835 : jne 0xffffff8000885823 ; pop rbp ; ret
0xffffff8000885875 : jne 0xffffff8000885863 ; pop rbp ; ret
0xffffff8000886085 : jne 0xffffff8000886073 ; pop rbp ; ret
0xffffff80008860c5 : jne 0xffffff80008860b3 ; pop rbp ; ret
0xffffff8000886105 : jne 0xffffff80008860f3 ; pop rbp ; ret
0xffffff8000887ef5 : jne 0xffffff8000887ee3 ; pop rbp ; ret
0xffffff8000887f35 : jne 0xffffff8000887f23 ; pop rbp ; ret
0xffffff8000887f75 : jne 0xffffff8000887f63 ; pop rbp ; ret
0xffffff8000889d55 : jne 0xffffff8000889d43 ; pop rbp ; ret
0xffffff8000889d95 : jne 0xffffff8000889d83 ; pop rbp ; ret
0xffffff8000889dd5 : jne 0xffffff8000889dc3 ; pop rbp ; ret
0xffffff800088a985 : jne 0xffffff800088a973 ; pop rbp ; ret
0xffffff800088a9c5 : jne 0xffffff800088a9b3 ; pop rbp ; ret
0xffffff800088aa05 : jne 0xffffff800088a9f3 ; pop rbp ; ret
0xffffff800088cc05 : jne 0xffffff800088cbf3 ; pop rbp ; ret
0xffffff800088cc45 : jne 0xffffff800088cc33 ; pop rbp ; ret
0xffffff800088cc85 : jne 0xffffff800088cc73 ; pop rbp ; ret
0xffffff800088d34e : jne 0xffffff800088d336 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d442 : jne 0xffffff800088d3f6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d4c2 : jne 0xffffff800088d476 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088eed5 : jne 0xffffff800088eec3 ; pop rbp ; ret
0xffffff800088ef15 : jne 0xffffff800088ef03 ; pop rbp ; ret
0xffffff800088ef55 : jne 0xffffff800088ef43 ; pop rbp ; ret
0xffffff800088f9ce : jne 0xffffff800088fa0b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088fabc : jne 0xffffff800088faf9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000890155 : jne 0xffffff8000890143 ; pop rbp ; ret
0xffffff8000890195 : jne 0xffffff8000890183 ; pop rbp ; ret
0xffffff80008901d5 : jne 0xffffff80008901c3 ; pop rbp ; ret
0xffffff80008912b5 : jne 0xffffff80008912a3 ; pop rbp ; ret
0xffffff80008912f5 : jne 0xffffff80008912e3 ; pop rbp ; ret
0xffffff8000891335 : jne 0xffffff8000891323 ; pop rbp ; ret
0xffffff8000891975 : jne 0xffffff8000891963 ; pop rbp ; ret
0xffffff80008919b5 : jne 0xffffff80008919a3 ; pop rbp ; ret
0xffffff80008919f5 : jne 0xffffff80008919e3 ; pop rbp ; ret
0xffffff8000892515 : jne 0xffffff8000892503 ; pop rbp ; ret
0xffffff8000892555 : jne 0xffffff8000892543 ; pop rbp ; ret
0xffffff8000892595 : jne 0xffffff8000892583 ; pop rbp ; ret
0xffffff8000893105 : jne 0xffffff80008930f3 ; pop rbp ; ret
0xffffff8000893145 : jne 0xffffff8000893133 ; pop rbp ; ret
0xffffff8000893185 : jne 0xffffff8000893173 ; pop rbp ; ret
0xffffff8000893491 : jne 0xffffff80008934d2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000893ea7 : jne 0xffffff8000893edc ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000893f35 : jne 0xffffff8000893f23 ; pop rbp ; ret
0xffffff8000893f75 : jne 0xffffff8000893f63 ; pop rbp ; ret
0xffffff8000893fb5 : jne 0xffffff8000893fa3 ; pop rbp ; ret
0xffffff80008951b5 : jne 0xffffff80008951a3 ; pop rbp ; ret
0xffffff80008951f5 : jne 0xffffff80008951e3 ; pop rbp ; ret
0xffffff8000895235 : jne 0xffffff8000895223 ; pop rbp ; ret
0xffffff80008967d5 : jne 0xffffff80008967c3 ; pop rbp ; ret
0xffffff8000896815 : jne 0xffffff8000896803 ; pop rbp ; ret
0xffffff8000896855 : jne 0xffffff8000896843 ; pop rbp ; ret
0xffffff8000897362 : jne 0xffffff800089736f ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80008985ae : jne 0xffffff80008985bd ; mov rsi, qword ptr [r15 + 0x48] ; mov rdx, r15 ; call rax
0xffffff80008990a5 : jne 0xffffff8000899093 ; pop rbp ; ret
0xffffff80008990e5 : jne 0xffffff80008990d3 ; pop rbp ; ret
0xffffff8000899125 : jne 0xffffff8000899113 ; pop rbp ; ret
0xffffff800089b0e5 : jne 0xffffff800089b0d3 ; pop rbp ; ret
0xffffff800089b125 : jne 0xffffff800089b113 ; pop rbp ; ret
0xffffff800089b165 : jne 0xffffff800089b153 ; pop rbp ; ret
0xffffff800089b705 : jne 0xffffff800089b6f3 ; pop rbp ; ret
0xffffff800089b745 : jne 0xffffff800089b733 ; pop rbp ; ret
0xffffff800089b785 : jne 0xffffff800089b773 ; pop rbp ; ret
0xffffff800089ba35 : jne 0xffffff800089ba23 ; pop rbp ; ret
0xffffff800089ba75 : jne 0xffffff800089ba63 ; pop rbp ; ret
0xffffff800089bab5 : jne 0xffffff800089baa3 ; pop rbp ; ret
0xffffff800089bd65 : jne 0xffffff800089bd53 ; pop rbp ; ret
0xffffff800089bda5 : jne 0xffffff800089bd93 ; pop rbp ; ret
0xffffff800089bde5 : jne 0xffffff800089bdd3 ; pop rbp ; ret
0xffffff800089d215 : jne 0xffffff800089d203 ; pop rbp ; ret
0xffffff800089d255 : jne 0xffffff800089d243 ; pop rbp ; ret
0xffffff800089d295 : jne 0xffffff800089d283 ; pop rbp ; ret
0xffffff80008a2aa5 : jne 0xffffff80008a2a93 ; pop rbp ; ret
0xffffff80008a2ae5 : jne 0xffffff80008a2ad3 ; pop rbp ; ret
0xffffff80008a2b25 : jne 0xffffff80008a2b13 ; pop rbp ; ret
0xffffff80008a3650 : jne 0xffffff80008a3649 ; mov dword ptr [rip + 0x293830], ecx ; pop rbp ; ret
0xffffff80008a49bc : jne 0xffffff80008a49b6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a4a0c : jne 0xffffff80008a4a06 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a5375 : jne 0xffffff80008a5363 ; pop rbp ; ret
0xffffff80008a53b5 : jne 0xffffff80008a53a3 ; pop rbp ; ret
0xffffff80008a53f5 : jne 0xffffff80008a53e3 ; pop rbp ; ret
0xffffff80008a6305 : jne 0xffffff80008a62f3 ; pop rbp ; ret
0xffffff80008a6345 : jne 0xffffff80008a6333 ; pop rbp ; ret
0xffffff80008a6385 : jne 0xffffff80008a6373 ; pop rbp ; ret
0xffffff80008a6c13 : jne 0xffffff80008a6c03 ; pop rbp ; ret
0xffffff80008a7205 : jne 0xffffff80008a71f3 ; pop rbp ; ret
0xffffff80008a7245 : jne 0xffffff80008a7233 ; pop rbp ; ret
0xffffff80008a7285 : jne 0xffffff80008a7273 ; pop rbp ; ret
0xffffff80008a7c15 : jne 0xffffff80008a7c03 ; pop rbp ; ret
0xffffff80008a7c55 : jne 0xffffff80008a7c43 ; pop rbp ; ret
0xffffff80008a7c95 : jne 0xffffff80008a7c83 ; pop rbp ; ret
0xffffff80008a81f5 : jne 0xffffff80008a81e3 ; pop rbp ; ret
0xffffff80008a8564 : jne 0xffffff80008a8559 ; mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a9c8c : jne 0xffffff80008a9c8b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008aa8ac : jne 0xffffff80008aa8b5 ; xor eax, eax ; pop rbp ; ret
0xffffff80008aaba5 : jne 0xffffff80008aab93 ; pop rbp ; ret
0xffffff80008aabe5 : jne 0xffffff80008aabd3 ; pop rbp ; ret
0xffffff80008aac25 : jne 0xffffff80008aac13 ; pop rbp ; ret
0xffffff80008aae04 : jne 0xffffff80008aadc3 ; ret 2
0xffffff80008ab1e5 : jne 0xffffff80008ab1d3 ; pop rbp ; ret
0xffffff80008ab225 : jne 0xffffff80008ab213 ; pop rbp ; ret
0xffffff80008ab545 : jne 0xffffff80008ab533 ; pop rbp ; ret
0xffffff80008ab585 : jne 0xffffff80008ab573 ; pop rbp ; ret
0xffffff80008ab5c5 : jne 0xffffff80008ab5b3 ; pop rbp ; ret
0xffffff80008ae0e5 : jne 0xffffff80008ae0d3 ; pop rbp ; ret
0xffffff80008ae125 : jne 0xffffff80008ae113 ; pop rbp ; ret
0xffffff80008ae165 : jne 0xffffff80008ae153 ; pop rbp ; ret
0xffffff80008af3f5 : jne 0xffffff80008af3e3 ; pop rbp ; ret
0xffffff80008af435 : jne 0xffffff80008af423 ; pop rbp ; ret
0xffffff80008af475 : jne 0xffffff80008af463 ; pop rbp ; ret
0xffffff80008b3915 : jne 0xffffff80008b3903 ; pop rbp ; ret
0xffffff80008b3b93 : jne 0xffffff80008b3b98 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b3e45 : jne 0xffffff80008b3e33 ; pop rbp ; ret
0xffffff80008b3e85 : jne 0xffffff80008b3e73 ; pop rbp ; ret
0xffffff80008b5185 : jne 0xffffff80008b5173 ; pop rbp ; ret
0xffffff80008b51c5 : jne 0xffffff80008b51b3 ; pop rbp ; ret
0xffffff80008b5205 : jne 0xffffff80008b51f3 ; pop rbp ; ret
0xffffff80008b5a37 : jne 0xffffff80008b5a55 ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b5d75 : jne 0xffffff80008b5d63 ; pop rbp ; ret
0xffffff80008b5db5 : jne 0xffffff80008b5da3 ; pop rbp ; ret
0xffffff80008b5df5 : jne 0xffffff80008b5de3 ; pop rbp ; ret
0xffffff80008b63c5 : jne 0xffffff80008b63b3 ; pop rbp ; ret
0xffffff80008b6405 : jne 0xffffff80008b63f3 ; pop rbp ; ret
0xffffff80008b6445 : jne 0xffffff80008b6433 ; pop rbp ; ret
0xffffff80008b711d : jne 0xffffff80008b7114 ; jmp 0xffffff80008b70e7
0xffffff80008b7b40 : jne 0xffffff80008b7b36 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b7f91 : jne 0xffffff80008b7f85 ; jmp 0xffffff80008b7fb9
0xffffff80008b8111 : jne 0xffffff80008b8105 ; jmp 0xffffff80008b8153
0xffffff80008b823c : jne 0xffffff80008b8236 ; jmp 0xffffff80008b828a
0xffffff80008b8361 : jne 0xffffff80008b8355 ; jmp 0xffffff80008b83a3
0xffffff80008b8421 : jne 0xffffff80008b8415 ; jmp 0xffffff80008b8471
0xffffff80008b965c : jne 0xffffff80008b9656 ; jmp 0xffffff80008b96b3
0xffffff80008ba8e7 : jne 0xffffff80008ba8df ; jmp 0xffffff80008bab2a
0xffffff80008bab8c : jne 0xffffff80008bab85 ; jmp 0xffffff80008baba3
0xffffff80008bbee5 : jne 0xffffff80008bbe7a ; call r10
0xffffff80008bd37a : jne 0xffffff80008bd335 ; mov rdi, r13 ; mov r9, r11 ; call r15
0xffffff80008bd3c6 : jne 0xffffff80008bd381 ; mov rdi, r13 ; mov r9, r14 ; call r15
0xffffff80008bda13 : jne 0xffffff80008bd9ce ; mov rdi, r13 ; mov r9, r11 ; call r15
0xffffff80008bda5f : jne 0xffffff80008bda1a ; mov rdi, r13 ; mov r9, r14 ; call r15
0xffffff80008bdfb5 : jne 0xffffff80008bdfa6 ; jmp 0xffffff80008bdf5d
0xffffff80008bdfed : jne 0xffffff80008bdfe1 ; jmp 0xffffff80008bdf60
0xffffff80008be34c : jne 0xffffff80008be311 ; jmp 0xffffff80008be363
0xffffff80008bf551 : jne 0xffffff80008bf545 ; jmp 0xffffff80008bf579
0xffffff80008bf601 : jne 0xffffff80008bf5f5 ; jmp 0xffffff80008bf651
0xffffff80008c0b95 : jne 0xffffff80008c0b83 ; pop rbp ; ret
0xffffff80008c0bd5 : jne 0xffffff80008c0bc3 ; pop rbp ; ret
0xffffff80008c0c15 : jne 0xffffff80008c0c03 ; pop rbp ; ret
0xffffff80008c2ae5 : jne 0xffffff80008c2ad3 ; pop rbp ; ret
0xffffff80008c2b25 : jne 0xffffff80008c2b13 ; pop rbp ; ret
0xffffff80008c2b65 : jne 0xffffff80008c2b53 ; pop rbp ; ret
0xffffff80008c3775 : jne 0xffffff80008c3763 ; pop rbp ; ret
0xffffff80008c37b5 : jne 0xffffff80008c37a3 ; pop rbp ; ret
0xffffff80008c37f5 : jne 0xffffff80008c37e3 ; pop rbp ; ret
0xffffff80008c3c12 : jne 0xffffff80008c3c19 ; pop rbp ; ret
0xffffff80008c4245 : jne 0xffffff80008c4233 ; pop rbp ; ret
0xffffff80008c4285 : jne 0xffffff80008c4273 ; pop rbp ; ret
0xffffff80008c42c5 : jne 0xffffff80008c42b3 ; pop rbp ; ret
0xffffff80008c6812 : jne 0xffffff80008c6803 ; pop rbp ; ret
0xffffff80008c6882 : jne 0xffffff80008c6863 ; pop rbp ; ret
0xffffff80008c68b3 : jne 0xffffff80008c68a3 ; pop rbp ; ret
0xffffff80008c77fc : jne 0xffffff80008c77e3 ; pop rbp ; ret
0xffffff80008c7872 : jne 0xffffff80008c7853 ; pop rbp ; ret
0xffffff80008c78a7 : jne 0xffffff80008c7893 ; pop rbp ; ret
0xffffff80008c87b2 : jne 0xffffff80008c87a3 ; pop rbp ; ret
0xffffff80008c8822 : jne 0xffffff80008c8803 ; pop rbp ; ret
0xffffff80008c8853 : jne 0xffffff80008c8843 ; pop rbp ; ret
0xffffff80008c9761 : jne 0xffffff80008c9753 ; pop rbp ; ret
0xffffff80008c97d2 : jne 0xffffff80008c97b3 ; pop rbp ; ret
0xffffff80008c9803 : jne 0xffffff80008c97f3 ; pop rbp ; ret
0xffffff80008cb8b0 : jne 0xffffff80008cb737 ; pop rbp ; ret
0xffffff80008cc425 : jne 0xffffff80008cc413 ; pop rbp ; ret
0xffffff80008cc465 : jne 0xffffff80008cc453 ; pop rbp ; ret
0xffffff80008cc4a5 : jne 0xffffff80008cc493 ; pop rbp ; ret
0xffffff80008cd431 : jne 0xffffff80008cd428 ; jmp 0xffffff80008cd4f3
0xffffff80008ce225 : jne 0xffffff80008ce213 ; pop rbp ; ret
0xffffff80008ce265 : jne 0xffffff80008ce253 ; pop rbp ; ret
0xffffff80008ce2a5 : jne 0xffffff80008ce293 ; pop rbp ; ret
0xffffff80008cebc5 : jne 0xffffff80008cebb3 ; pop rbp ; ret
0xffffff80008cec05 : jne 0xffffff80008cebf3 ; pop rbp ; ret
0xffffff80008cec45 : jne 0xffffff80008cec33 ; pop rbp ; ret
0xffffff80008d07f5 : jne 0xffffff80008d07e3 ; pop rbp ; ret
0xffffff80008d0835 : jne 0xffffff80008d0823 ; pop rbp ; ret
0xffffff80008d0875 : jne 0xffffff80008d0863 ; pop rbp ; ret
0xffffff80008d18b5 : jne 0xffffff80008d18a3 ; pop rbp ; ret
0xffffff80008d18f5 : jne 0xffffff80008d18e3 ; pop rbp ; ret
0xffffff80008d1935 : jne 0xffffff80008d1923 ; pop rbp ; ret
0xffffff80008d2a2c : jne 0xffffff80008d2a23 ; pop rbp ; ret
0xffffff80008d4b55 : jne 0xffffff80008d4b43 ; pop rbp ; ret
0xffffff80008d4b95 : jne 0xffffff80008d4b83 ; pop rbp ; ret
0xffffff80008d4bd5 : jne 0xffffff80008d4bc3 ; pop rbp ; ret
0xffffff80008d5b55 : jne 0xffffff80008d5b43 ; pop rbp ; ret
0xffffff80008d5b95 : jne 0xffffff80008d5b83 ; pop rbp ; ret
0xffffff80008d5bd5 : jne 0xffffff80008d5bc3 ; pop rbp ; ret
0xffffff80008d6b45 : jne 0xffffff80008d6b33 ; pop rbp ; ret
0xffffff80008d6b85 : jne 0xffffff80008d6b73 ; pop rbp ; ret
0xffffff80008d6bc5 : jne 0xffffff80008d6bb3 ; pop rbp ; ret
0xffffff80008d74e5 : jne 0xffffff80008d74d3 ; pop rbp ; ret
0xffffff80008d7525 : jne 0xffffff80008d7513 ; pop rbp ; ret
0xffffff80008d7565 : jne 0xffffff80008d7553 ; pop rbp ; ret
0xffffff80008d7755 : jne 0xffffff80008d7743 ; pop rbp ; ret
0xffffff80008d7795 : jne 0xffffff80008d7783 ; pop rbp ; ret
0xffffff80008d77d5 : jne 0xffffff80008d77c3 ; pop rbp ; ret
0xffffff80008d79c5 : jne 0xffffff80008d79b3 ; pop rbp ; ret
0xffffff80008d7a05 : jne 0xffffff80008d79f3 ; pop rbp ; ret
0xffffff80008d7a45 : jne 0xffffff80008d7a33 ; pop rbp ; ret
0xffffff80008d91f4 : jne 0xffffff80008d91fb ; pop rbp ; ret
0xffffff80008d9875 : jne 0xffffff80008d9863 ; pop rbp ; ret
0xffffff80008e031c : jne 0xffffff80008e02c5 ; mov edi, 0x8008501b ; call rax
0xffffff80008e0349 : jne 0xffffff80008e02f2 ; mov edi, 0x8008501a ; call rax
0xffffff80008e2655 : jne 0xffffff80008e2643 ; pop rbp ; ret
0xffffff80008e2695 : jne 0xffffff80008e2683 ; pop rbp ; ret
0xffffff80008e26d5 : jne 0xffffff80008e26c3 ; pop rbp ; ret
0xffffff80008e55c5 : jne 0xffffff80008e55b3 ; pop rbp ; ret
0xffffff80008e5605 : jne 0xffffff80008e55f3 ; pop rbp ; ret
0xffffff80008e5645 : jne 0xffffff80008e5633 ; pop rbp ; ret
0xffffff80008e5d6f : jne 0xffffff80008e5d7c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e6100 : jne 0xffffff80008e610d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e6af5 : jne 0xffffff80008e6ae3 ; pop rbp ; ret
0xffffff80008e6b35 : jne 0xffffff80008e6b23 ; pop rbp ; ret
0xffffff80008e6b75 : jne 0xffffff80008e6b63 ; pop rbp ; ret
0xffffff80008e6db5 : jne 0xffffff80008e6da3 ; pop rbp ; ret
0xffffff80008e6df5 : jne 0xffffff80008e6de3 ; pop rbp ; ret
0xffffff80008e6e35 : jne 0xffffff80008e6e23 ; pop rbp ; ret
0xffffff80008e7645 : jne 0xffffff80008e7633 ; pop rbp ; ret
0xffffff80008e7685 : jne 0xffffff80008e7673 ; pop rbp ; ret
0xffffff80008e9c24 : jne 0xffffff80008e9c31 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ec07a : jne 0xffffff80008ec078 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008ed09b : jne 0xffffff80008ed0a2 ; pop rbp ; ret
0xffffff80008f04c3 : jne 0xffffff80008f047a ; mov rdx, r14 ; call rbx
0xffffff80008f8fc4 : jne 0xffffff80008f8f97 ; mov rdx, qword ptr [rbp - 0x30] ; mov rcx, r13 ; call rbx
0xffffff80008f90ab : jne 0xffffff80008f907e ; mov rdx, qword ptr [rbp - 0x30] ; mov rcx, r13 ; call rbx
0xffffff80008f9b35 : jne 0xffffff80008f9b0c ; mov rdx, r12 ; call rbx
0xffffff80008f9c1c : jne 0xffffff80008f9bf3 ; mov rdx, r12 ; call rbx
0xffffff80008fbff5 : jne 0xffffff80008fbfcc ; mov rdx, r12 ; call rbx
0xffffff80008fc0dc : jne 0xffffff80008fc0b3 ; mov rdx, r12 ; call rbx
0xffffff80008fc245 : jne 0xffffff80008fc21c ; mov rdx, r12 ; call rbx
0xffffff80008fc32c : jne 0xffffff80008fc303 ; mov rdx, r12 ; call rbx
0xffffff80008fc495 : jne 0xffffff80008fc46c ; mov rdx, r12 ; call rbx
0xffffff80008fc57c : jne 0xffffff80008fc553 ; mov rdx, r12 ; call rbx
0xffffff800026dafe : jno 0xffffff800026db0b ; pop rbp ; ret
0xffffff800028be9a : jno 0xffffff800028beb0 ; add dh, dh ; ret
0xffffff80002e56c8 : jno 0xffffff80002e56d2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e7058 : jno 0xffffff80002e7062 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e7708 : jno 0xffffff80002e7712 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e7a98 : jno 0xffffff80002e7aa2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e83b8 : jno 0xffffff80002e83c2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002e90b8 : jno 0xffffff80002e90c2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002ee448 : jno 0xffffff80002ee452 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002ee447 : jno 0xffffff80002ee453 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002eec48 : jno 0xffffff80002eec52 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002ef888 : jno 0xffffff80002ef892 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002f2898 : jno 0xffffff80002f28a2 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80002f4a28 : jno 0xffffff80002f4a32 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80003026b5 : jno 0xffffff800030273b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800031dedb : jno 0xffffff800031dee8 ; idiv edi ; jmp 0xffffff800031de84
0xffffff8000377e06 : jno 0xffffff8000377e84 ; add byte ptr [rcx], bh ; ret
0xffffff8000377e05 : jno 0xffffff8000377e85 ; add byte ptr [rcx], bh ; ret
0xffffff80003a4188 : jno 0xffffff80003a41bb ; mov dword ptr [rax + 0x1c], edx ; mov dword ptr [rcx + 0x1c], edx ; pop rbp ; ret
0xffffff80003b3a0f : jno 0xffffff80003b3a17 ; jmp 0xffffff80003b3a46
0xffffff80003b5345 : jno 0xffffff80003b534f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b7fae : jno 0xffffff80003b7fb7 ; jne 0xffffff80003b7fa7 ; xor eax, eax ; pop rbp ; ret
0xffffff80003b8057 : jno 0xffffff80003b8062 ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b8527 : jno 0xffffff80003b852e ; xor eax, eax ; pop rbp ; ret
0xffffff80003ba788 : jno 0xffffff80003ba792 ; test rax, rax ; je 0xffffff80003ba7ba ; pop rbp ; ret
0xffffff80003bac08 : jno 0xffffff80003bac10 ; and eax, 1 ; pop rbp ; ret
0xffffff8000429656 : jno 0xffffff8000429687 ; mov qword ptr [rdx + 0x30], rsi ; jmp 0xffffff8000429627
0xffffff8000444ecb : jno 0xffffff8000444eb3 ; hlt ; push rdi ; ret
0xffffff800044fb39 : jno 0xffffff800044fba8 ; mov rdi, r14 ; call rdx
0xffffff80004cd158 : jno 0xffffff80004cd171 ; jne 0xffffff80004cd165 ; xor eax, eax ; pop rbp ; ret
0xffffff80004cd157 : jno 0xffffff80004cd172 ; jne 0xffffff80004cd166 ; xor eax, eax ; pop rbp ; ret
0xffffff80004fb37b : jno 0xffffff80004fb36d ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000506ead : jno 0xffffff8000506e77 ; inc dword ptr [rcx - 0x75] ; push rsi ; add al, 0xff ; ret 0x8941
0xffffff800051cf58 : jno 0xffffff800051cf73 ; mov rdi, qword ptr [rbp - 0x68] ; mov rdx, r15 ; call rax
0xffffff800051e8b8 : jno 0xffffff800051e907 ; add byte ptr [rcx], dh ; shr al, 0x8e ; call rdi
0xffffff8000526fc1 : jno 0xffffff8000526f88 ; push qword ptr [rcx] ; fild dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80005671cb : jno 0xffffff80005671e7 ; push rdi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000573df8 : jno 0xffffff8000573e03 ; add byte ptr [rax + rax*8 - 0xb7938c], al ; ret
0xffffff800060bfb2 : jno 0xffffff800060bfd4 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800062434b : jno 0xffffff800062434b ; add byte ptr [r9 - 0x7f], al ; call qword ptr [rdi]
0xffffff800065522b : jno 0xffffff80006551c1 ; ret
0xffffff800065592b : jno 0xffffff80006558ba ; ret
0xffffff800065a4a5 : jno 0xffffff800065a4ac ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065da7f : jno 0xffffff800065da8b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000673a9a : jno 0xffffff8000673ab9 ; add byte ptr [rbp - 0x76e48b40], al ; ret
0xffffff8000697684 : jno 0xffffff800069764b ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800069c3aa : jno 0xffffff800069c39c ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b00e4 : jno 0xffffff80006b00fb ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000706556 : jno 0xffffff800070657d ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000713040 : jno 0xffffff800071304d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800071c0e6 : jno 0xffffff800071c131 ; xor eax, eax ; pop rbp ; ret
0xffffff80007546cb : jno 0xffffff80007546b8 ; ret
0xffffff80007558cb : jno 0xffffff80007558a0 ; ret
0xffffff800075afbb : jno 0xffffff800075b038 ; ret
0xffffff800076d52c : jno 0xffffff800076d4ea ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000393049
0xffffff8000770c0b : jno 0xffffff8000770c6e ; ret 0x41ff
0xffffff80007bf7db : jno 0xffffff80007bf7b7 ; std ; ljmp [rcx] ; ret
0xffffff80007cd905 : jno 0xffffff80007cd90a ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fcfca : jno 0xffffff80007fcfff ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff8000805a89 : jno 0xffffff8000805a90 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081bb1a : jno 0xffffff800081bb22 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081bb8a : jno 0xffffff800081bb92 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081bb89 : jno 0xffffff800081bb93 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081ed16 : jno 0xffffff800081ed43 ; shr al, 6 ; pop rbp ; ret
0xffffff800081ed15 : jno 0xffffff800081ed44 ; shr al, 6 ; pop rbp ; ret
0xffffff800082290f : jno 0xffffff800082291e ; mov rdi, qword ptr [r14 + 0x48] ; xor esi, esi ; call r15
0xffffff800083d14f : jno 0xffffff800083d196 ; xor eax, eax ; pop rbp ; ret
0xffffff80008534fe : jno 0xffffff80008534b9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800090ab83 : jno 0xffffff800090abc7 ; sbb dword ptr [rax], eax ; ret
0xffffff8000859b85 : jnp 0xffffff7f89cd9baa ; ret 0xff5d
0xffffff8000859b85 : jnp 0xffffff7f89cd9bac ; ret 0xff5d
0xffffff8000256800 : jnp 0xffffff8000256862 ; mov qword ptr [rbp - 0x40], rdi ; call 0xffffff8000392a48
0xffffff800025dbdd : jnp 0xffffff800025db8e ; mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000288df8 : jnp 0xffffff8000288e1c ; call rax
0xffffff8000288f3a : jnp 0xffffff8000288f62 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800028a814 : jnp 0xffffff800028a79e ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002a14af : jnp 0xffffff80002a14bb ; call rcx
0xffffff80002a14c2 : jnp 0xffffff80002a14ce ; call qword ptr [rbx]
0xffffff80002d94fb : jnp 0xffffff80002d94f5 ; ret
0xffffff80002dc498 : jnp 0xffffff80002dc4c8 ; lea rsi, [r14 + 0x30] ; call rax
0xffffff80003381a8 : jnp 0xffffff80003381b2 ; jbe 0xffffff80003381b9 ; movzx eax, al ; pop rbp ; ret
0xffffff800033a49a : jnp 0xffffff800033a4a2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034305f : jnp 0xffffff8000343065 ; xor edi, edi ; call rax
0xffffff8000344c59 : jnp 0xffffff8000344c63 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000346de1 : jnp 0xffffff8000346de7 ; call 0xffffff8000393044
0xffffff800034934c : jnp 0xffffff8000349356 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800034b69c : jnp 0xffffff800034b6a7 ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000375e2f : jnp 0xffffff8000375e52 ; add byte ptr [rbp + rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff8000375e44 : jnp 0xffffff8000375e58 ; call rax
0xffffff800038982a : jnp 0xffffff800038983e ; call qword ptr [rax]
0xffffff8000389857 : jnp 0xffffff800038986f ; mov rsi, qword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff80003983f4 : jnp 0xffffff8000398402 ; xor esi, esi ; xor edx, edx ; call 0xffffff80002a46d8
0xffffff80003a2ba6 : jnp 0xffffff80003a2bac ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a5679 : jnp 0xffffff80003a56e7 ; add bh, bh ; ret
0xffffff80003b9ce8 : jnp 0xffffff80003b9d63 ; add byte ptr [rax - 0x7d], cl ; ret 0x8930
0xffffff80003fe2c1 : jnp 0xffffff80003fe315 ; stc ; push rsi ; ret
0xffffff80004822c3 : jnp 0xffffff80004822cd ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800049fc3c : jnp 0xffffff800049fc48 ; call qword ptr [rbx]
0xffffff80005163ab : jnp 0xffffff80005163dd ; test esi, esi ; je 0xffffff80005163dd ; call 0xffffff8000392678
0xffffff800052b511 : jnp 0xffffff800052b500 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800053a014 : jnp 0xffffff800053a040 ; call rax
0xffffff80005526f4 : jnp 0xffffff800055272d ; mov esi, 1 ; call rax
0xffffff800056a4ac : jnp 0xffffff800056a530 ; xor esi, esi ; call rax
0xffffff8000570dd2 : jnp 0xffffff8000570daf ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000570dd1 : jnp 0xffffff8000570db0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000582ee6 : jnp 0xffffff80005bab77 ; add byte ptr [rax - 0x7f], cl ; ret 0x388
0xffffff80005c92ba : jnp 0xffffff80005c9308 ; call 0xffffff80005c5504
0xffffff80005d08eb : jnp 0xffffff80005d08e5 ; ret 0xf04
0xffffff800060e5a7 : jnp 0xffffff800060e5c2 ; mov rsi, r14 ; lea rdx, [rbp - 0x78] ; call rcx
0xffffff800060e5ef : jnp 0xffffff800060e5fb ; add byte ptr [rax - 0x34073], al ; call qword ptr [rax]
0xffffff800060ec20 : jnp 0xffffff800060ec3a ; mov rsi, r15 ; mov rdx, r14 ; call rcx
0xffffff800060fc8f : jnp 0xffffff800060fca9 ; mov rsi, r15 ; mov rdx, r14 ; call rax
0xffffff800062ceb5 : jnp 0xffffff800062ced4 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000651491 : jnp 0xffffff8000651502 ; cmp eax, dword ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff8000652b2d : jnp 0xffffff8000652b9a ; xor eax, 0xe8c03100 ; js 0xffffff8000652af5 ; ret
0xffffff800066241b : jnp 0xffffff80006623d2 ; sub eax, 0xbd2ce800 ; ret 0xebff
0xffffff800066b231 : jnp 0xffffff800066b264 ; ret 0xbbff
0xffffff80006b5b5f : jnp 0xffffff80006b5b8a ; add byte ptr [rsi + 5], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006e0ef8 : jnp 0xffffff80006e0ee0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073aad1 : jnp 0xffffff800073ab0e ; popfq ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000749532 : jnp 0xffffff8000749545 ; mov esi, 2 ; xor edx, edx ; call qword ptr [rbx]
0xffffff800074b462 : jnp 0xffffff800074b475 ; mov esi, 1 ; xor edx, edx ; call qword ptr [rbx]
0xffffff800074b482 : jnp 0xffffff800074b492 ; xor esi, esi ; xor edx, edx ; call qword ptr [rbx]
0xffffff800074b4a2 : jnp 0xffffff800074b4b5 ; mov esi, 2 ; xor edx, edx ; call qword ptr [rbx]
0xffffff800075c7c1 : jnp 0xffffff800075c82d ; ret
0xffffff800075f5b1 : jnp 0xffffff800075f5e8 ; ret
0xffffff800075f5c1 : jnp 0xffffff800075f5ff ; ret
0xffffff800075fdb1 : jnp 0xffffff800075fde0 ; ret
0xffffff800075fdc1 : jnp 0xffffff800075fdf7 ; ret
0xffffff80007642ef : jnp 0xffffff800076431a ; add rdi, 8 ; call 0xffffff80003923e9
0xffffff80007643f4 : jnp 0xffffff800076441f ; add rdi, 8 ; call 0xffffff80003923e9
0xffffff8000766279 : jnp 0xffffff800076628b ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff80007662b4 : jnp 0xffffff80007662c6 ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff80007698c1 : jnp 0xffffff800076985c ; ret 0x45ff
0xffffff800076b702 : jnp 0xffffff800076b764 ; mov rdi, r15 ; call 0xffffff8000392a48
0xffffff800076d3a2 : jnp 0xffffff800076d404 ; mov rdi, r15 ; call 0xffffff8000392a48
0xffffff80007725f2 : jnp 0xffffff8000772654 ; mov rdi, r15 ; call 0xffffff8000392a48
0xffffff8000783411 : jnp 0xffffff800078341c ; std ; dec dword ptr [rax + 0x39] ; ret
0xffffff800079115c : jnp 0xffffff8000791169 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800079115b : jnp 0xffffff800079116a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000799c65 : jnp 0xffffff8000799ccf ; xor edx, edx ; mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff8000799f16 : jnp 0xffffff8000799f7f ; mov esi, 1 ; call rax
0xffffff8000799f6b : jnp 0xffffff8000799fd4 ; mov esi, 1 ; call rax
0xffffff800079b89d : jnp 0xffffff800079b920 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000821a8f : jnp 0xffffff8000821adb ; call rax
0xffffff8000836d49 : jnp 0xffffff8000836d4f ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000840417 : jnp 0xffffff800084046b ; call rcx
0xffffff8000842340 : jnp 0xffffff8000842397 ; mov rsi, rax ; call rcx
0xffffff8000842351 : jnp 0xffffff80008423a5 ; call rcx
0xffffff8000866981 : jnp 0xffffff8000866986 ; sub al, 0 ; pop rbp ; jmp rax
0xffffff80008808b0 : jnp 0xffffff8000880908 ; mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff80008944fb : jnp 0xffffff800089451b ; mov rsi, rbx ; call r15
0xffffff800089d7c3 : jnp 0xffffff800089d832 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0xffffff80008d2ec1 : jnp 0xffffff80008d2eac ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ea843 : jnp 0xffffff80008ea856 ; mov esi, 0x18 ; call 0xffffff8000856ad9
0xffffff8000b3edc0 : jnp 0xffffff8000b3ed4e ; ret 0x438f
0xffffff8000b3edbd : jnp 0xffffff8000b3ed51 ; test byte ptr [rbx - 0x76], bh ; ret 0x438f
0xffffff8000b3edb5 : jnp 0xffffff8000b3edba ; ret
0xffffff800083ba43 : jnp 0xffffff8001cbbe91 ; ret 0xc1ff
0xffffff800026dd3d : jns 0xffffff800026dd56 ; mov qword ptr [rdx + 8], rdi ; pop rbp ; ret
0xffffff800028e352 : jns 0xffffff800028e35b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800028e386 : jns 0xffffff800028e38f ; add byte ptr [rax], dh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800028e55e : jns 0xffffff800028e563 ; pop rbp ; ret
0xffffff800028f007 : jns 0xffffff800028f00c ; pop rbp ; ret
0xffffff800028f019 : jns 0xffffff800028f01e ; pop rbp ; jmp rax
0xffffff800028f037 : jns 0xffffff800028f03c ; pop rbp ; ret
0xffffff8000297db8 : jns 0xffffff8000297dbd ; pop rbp ; ret
0xffffff8000297db7 : jns 0xffffff8000297dbe ; pop rbp ; ret
0xffffff80002edaf6 : jns 0xffffff80002edb43 ; pop rbp ; ret
0xffffff800035a1b3 : jns 0xffffff800035a1a8 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000366ea9 : jns 0xffffff8000366eae ; pop rbp ; ret
0xffffff8000366eb9 : jns 0xffffff8000366ebe ; pop rbp ; ret
0xffffff80003682f2 : jns 0xffffff80003682f9 ; xor eax, eax ; pop rbp ; ret
0xffffff8000368371 : jns 0xffffff8000368378 ; xor eax, eax ; pop rbp ; ret
0xffffff8000368370 : jns 0xffffff8000368379 ; xor eax, eax ; pop rbp ; ret
0xffffff800036a3b0 : jns 0xffffff800036a3b5 ; pop rbp ; ret
0xffffff80003a6927 : jns 0xffffff80003a692c ; pop rbp ; ret
0xffffff80003a6a67 : jns 0xffffff80003a6a6c ; pop rbp ; ret
0xffffff80003b1b53 : jns 0xffffff80003b1bc7 ; add byte ptr [rax - 1], cl ; ret
0xffffff80003b6175 : jns 0xffffff80003b61cf ; add ah, dh ; pop rbp ; ret
0xffffff80003b7122 : jns 0xffffff80003b70af ; ret
0xffffff80003b9cf6 : jns 0xffffff80003b9cff ; add byte ptr [rax], al ; wrmsr ; pop rbp ; ret
0xffffff80004cb296 : jns 0xffffff80004cb2b0 ; add byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80005650c3 : jns 0xffffff80005650f7 ; sar edi, cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000579e0f : jns 0xffffff8000579e5a ; mov eax, 2 ; pop rbp ; ret
0xffffff80005bd075 : jns 0xffffff80005bd09b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005cc2b2 : jns 0xffffff80005cc289 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cc31a : jns 0xffffff80005cc2f1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cc382 : jns 0xffffff80005cc359 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e369d : jns 0xffffff80005e36ec ; add byte ptr [rax + 1], cl ; ret 0x3948
0xffffff80005e369c : jns 0xffffff80005e36ed ; add byte ptr [rax + 1], cl ; ret 0x3948
0xffffff80005fff07 : jns 0xffffff80005ffed7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005fff06 : jns 0xffffff80005ffed8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000622786 : jns 0xffffff8000622776 ; mov dword ptr [rdi + 0x64], esi ; pop rbp ; ret
0xffffff800062ef24 : jns 0xffffff800062ef1f ; addps xmm0, xmm0 ; pop rbp ; ret
0xffffff8000650492 : jns 0xffffff8000650519 ; xor eax, 0xe8c03100 ; add esp, eax ; ret
0xffffff8000660733 : jns 0xffffff8000660711 ; ret 0x66ff
0xffffff800066e934 : jns 0xffffff800066e933 ; pop rbp ; ret
0xffffff80006960c3 : jns 0xffffff80006960c7 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006a1153 : jns 0xffffff80006a1123 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff80006ab65e : jns 0xffffff80006ab633 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006ba7c9 : jns 0xffffff80006ba81a ; mov eax, 2 ; pop rbp ; ret
0xffffff800072f2c1 : jns 0xffffff800072f2d1 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000756823 : jns 0xffffff80007567e7 ; ret
0xffffff800075d5b3 : jns 0xffffff800075d60a ; ret
0xffffff800075d5c3 : jns 0xffffff800075d621 ; ret
0xffffff800075d9b3 : jns 0xffffff800075da06 ; ret
0xffffff800075d9c3 : jns 0xffffff800075da1d ; ret
0xffffff8000764753 : jns 0xffffff8000764734 ; ret 0x44ff
0xffffff8000764753 : jns 0xffffff8000764739 ; ret 0x44ff
0xffffff8000798d43 : jns 0xffffff8000798cd9 ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7643 : jns 0xffffff80007a75f0 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ac326 : jns 0xffffff80007ac34d ; add byte ptr [rdi], cl ; lahf ; ret 0xdb85
0xffffff80007cd876 : jns 0xffffff80007cd87b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007dc7a3 : jns 0xffffff80007dc76c ; scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081506d : jns 0xffffff8000815088 ; mov edx, dword ptr [rax + 0x20] ; xor ecx, ecx ; call 0xffffff80008c12a9
0xffffff8000827265 : jns 0xffffff8000827289 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0xffffff80008598b8 : jns 0xffffff80008598bc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000859aab : jns 0xffffff8000859aad ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000859aaa : jns 0xffffff8000859aae ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008640d8 : jns 0xffffff800086413a ; pop r14 ; pop rbp ; ret
0xffffff8000b3e3c9 : jns 0xffffff8000b3e3b5 ; cmp esi, ecx ; push rcx ; jmp qword ptr [rdx]
0xffffff800025bcfc : jo 0xffffff800025bd77 ; add eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000262969 : jo 0xffffff80002629cb ; pop r14 ; pop rbp ; ret
0xffffff8000269800 : jo 0xffffff800026980b ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800026dafa : jo 0xffffff800026db13 ; mov qword ptr [rcx + 8], rsi ; pop rbp ; ret
0xffffff800028d847 : jo 0xffffff800028d883 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800029a61f : jo 0xffffff800029a631 ; mov rdx, qword ptr [rax + 0x10] ; xor edi, edi ; call qword ptr [rax]
0xffffff800029db09 : jo 0xffffff800029db13 ; add byte ptr [rax], al ; mov rsi, rbx ; call r15
0xffffff80002a052c : jo 0xffffff80002a056f ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a381e : jo 0xffffff80002a3818 ; ret 0x7510
0xffffff80002b72ed : jo 0xffffff80002b72f8 ; setg al ; movzx eax, al ; pop rbp ; ret
0xffffff80002bada7 : jo 0xffffff80002badb2 ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80002cfb23 : jo 0xffffff80002cfb89 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002e0422 : jo 0xffffff80002e0484 ; pop r14 ; pop rbp ; ret
0xffffff80002eb96c : jo 0xffffff80002eb944 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800031b585 : jo 0xffffff800031b593 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000334b4c : jo 0xffffff8000334b9d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800033d57d : jo 0xffffff800033d596 ; mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff80003564ae : jo 0xffffff800035652e ; add byte ptr [rax + 1], cl ; ret 0x8548
0xffffff8000363c00 : jo 0xffffff8000363c44 ; add cl, ch ; ret
0xffffff8000369dba : jo 0xffffff8000369e0b ; mov dword ptr [rsi + rdx + 0x60], ecx ; pop rbp ; ret
0xffffff8000369f78 : jo 0xffffff8000369f64 ; ret 0xda41
0xffffff8000389d6d : jo 0xffffff8000389dc6 ; pop rbp ; ret
0xffffff8000389ddd : jo 0xffffff8000389e2a ; pop rbp ; ret
0xffffff80003a29c3 : jo 0xffffff80003a2a14 ; test eax, eax ; je 0xffffff80003a29d3 ; pop rbp ; jmp rax
0xffffff80003a29c2 : jo 0xffffff80003a2a15 ; test eax, eax ; je 0xffffff80003a29d4 ; pop rbp ; jmp rax
0xffffff80003a30bc : jo 0xffffff80003a30c4 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a3130 : jo 0xffffff80003a3138 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003c364f : jo 0xffffff80003c3653 ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80003c8311 : jo 0xffffff80003c831c ; add dword ptr [rcx + 0x5e415bd8], ecx ; pop rbp ; ret
0xffffff80003ca8e3 : jo 0xffffff80003ca8e8 ; pop rbp ; ret
0xffffff800040badf : jo 0xffffff800040bae4 ; pop rbp ; ret
0xffffff800040bfcf : jo 0xffffff800040bfd2 ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800040c4a0 : jo 0xffffff800040c501 ; ret
0xffffff800040c49f : jo 0xffffff800040c502 ; ret
0xffffff800040c5ef : jo 0xffffff800040c650 ; ret
0xffffff8000411b60 : jo 0xffffff8000411b6a ; call 0xffffff8000393048
0xffffff800042b912 : jo 0xffffff800042b911 ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff8000477a96 : jo 0xffffff8000477ab2 ; xor ecx, ecx ; pop rbp ; jmp r9
0xffffff8000486828 : jo 0xffffff800048682f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000492aef : jo 0xffffff8000492a81 ; pop rax ; and al, 0x83 ; ret
0xffffff8000492aee : jo 0xffffff8000492a82 ; pop rax ; and al, 0x83 ; ret
0xffffff80004b3cb2 : jo 0xffffff80004b3d13 ; ret
0xffffff80004b3cb1 : jo 0xffffff80004b3d14 ; ret
0xffffff80004bc47b : jo 0xffffff80004bc46f ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004c38d5 : jo 0xffffff80004c386a ; js 0xffffff80004c38f9 ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff80004c38d4 : jo 0xffffff80004c386b ; js 0xffffff80004c38fa ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff80004e3424 : jo 0xffffff80004e3477 ; mov dword ptr [rbx + 0x70], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e3428 : jo 0xffffff80004e348a ; pop r14 ; pop rbp ; ret
0xffffff80004e3427 : jo 0xffffff80004e348b ; pop r14 ; pop rbp ; ret
0xffffff80004e34de : jo 0xffffff80004e3531 ; mov dword ptr [rbx + 0x58], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e4d6d : jo 0xffffff80004e4d67 ; ret
0xffffff80004e4e04 : jo 0xffffff80004e4e4e ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e4e03 : jo 0xffffff80004e4e4f ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f9106 : jo 0xffffff80004f9090 ; loopne 0xffffff80004f9110 ; pop rbp ; ret
0xffffff80004f9105 : jo 0xffffff80004f9091 ; loopne 0xffffff80004f9111 ; pop rbp ; ret
0xffffff80004f9116 : jo 0xffffff80004f90a0 ; loopne 0xffffff80004f9121 ; pop rbp ; ret
0xffffff80004f9115 : jo 0xffffff80004f90a1 ; loopne 0xffffff80004f9122 ; pop rbp ; ret
0xffffff80004f9056 : jo 0xffffff80004f90a8 ; and eax, 0x17fff5ff ; pop rbp ; ret
0xffffff80004f9055 : jo 0xffffff80004f90a9 ; and eax, 0x17fff5ff ; pop rbp ; ret
0xffffff80004f913b : jo 0xffffff80004f919c ; ret
0xffffff80004f913a : jo 0xffffff80004f919d ; ret
0xffffff80004fa7fd : jo 0xffffff80004fa787 ; loopne 0xffffff80004fa807 ; pop rbp ; ret
0xffffff80004fa7fc : jo 0xffffff80004fa788 ; loopne 0xffffff80004fa808 ; pop rbp ; ret
0xffffff80004fa762 : jo 0xffffff80004fa7c3 ; ret
0xffffff80004fa761 : jo 0xffffff80004fa7c4 ; ret
0xffffff80004fa782 : jo 0xffffff80004fa7e3 ; ret
0xffffff80004fa781 : jo 0xffffff80004fa7e4 ; ret
0xffffff80004fa83c : jo 0xffffff80004fa8bf ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80004fea51 : jo 0xffffff80004feab7 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004feb15 : jo 0xffffff80004feb7b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004ff5f9 : jo 0xffffff80004ff65f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000540623 : jo 0xffffff8000540689 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800054f1b7 : jo 0xffffff800054f21a ; mov rax, r8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000550970 : jo 0xffffff80005509d2 ; pop r14 ; pop rbp ; ret
0xffffff800055096f : jo 0xffffff80005509d3 ; pop r14 ; pop rbp ; ret
0xffffff8000561e2b : jo 0xffffff8000561e3a ; xor eax, eax ; pop rbp ; ret
0xffffff8000561f70 : jo 0xffffff8000561fd3 ; mov qword ptr [rax + 0x60], rdx ; xor eax, eax ; pop rbp ; ret
0xffffff800058cd41 : jo 0xffffff800058cd44 ; ret
0xffffff800059ddff : jo 0xffffff800059de0c ; insb byte ptr [rdi], dx ; mov dword ptr [rdi + 0x20], ecx ; pop rbp ; ret
0xffffff800059ddfe : jo 0xffffff800059de0d ; insb byte ptr [rdi], dx ; mov dword ptr [rdi + 0x20], ecx ; pop rbp ; ret
0xffffff80005c0525 : jo 0xffffff80005c0571 ; mov dword ptr [rsi + 0x6c], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005dd7da : jo 0xffffff80005dd840 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005f3689 : jo 0xffffff80005f366a ; dec dword ptr [rax + 1] ; ret
0xffffff8000624d8f : jo 0xffffff8000624d9b ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000651eaf : jo 0xffffff8000651e8b ; cmp byte ptr [rax], al ; mov rdx, r13 ; call 0xffffff800028e1b9
0xffffff8000659e3c : jo 0xffffff8000659e83 ; ret
0xffffff80006608d3 : jo 0xffffff80006608a0 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800066877f : jo 0xffffff80006687d3 ; mov edi, esp ; call 0xffffff80007b4a66
0xffffff800066877e : jo 0xffffff80006687d4 ; mov edi, esp ; call 0xffffff80007b4a67
0xffffff8000668823 : jo 0xffffff8000668873 ; mov edi, ebx ; call 0xffffff80007b4a66
0xffffff8000668822 : jo 0xffffff8000668874 ; mov edi, ebx ; call 0xffffff80007b4a67
0xffffff800066c83c : jo 0xffffff800066c859 ; ret 0x4cff
0xffffff800066fb3a : jo 0xffffff800066fba0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000692a5c : jo 0xffffff8000692a13 ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80006a9ecd : jo 0xffffff80006a9f33 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006c024e : jo 0xffffff80006c0264 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c83a5 : jo 0xffffff80006c83d4 ; xor eax, eax ; pop rbp ; ret
0xffffff80006d6408 : jo 0xffffff80006d6469 ; ret
0xffffff80006eb86b : jo 0xffffff80006eb875 ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff800073956a : jo 0xffffff8000739576 ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800073a507 : jo 0xffffff800073a513 ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800073b9f1 : jo 0xffffff800073b9ff ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007401d9 : jo 0xffffff800074023f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000756ab0 : jo 0xffffff8000756aba ; jne 0xffffff8000756abd ; xor eax, eax ; pop rbp ; ret
0xffffff8000756aaf : jo 0xffffff8000756abb ; jne 0xffffff8000756abe ; xor eax, eax ; pop rbp ; ret
0xffffff800075a3cc : jo 0xffffff800075a35c ; ret
0xffffff8000766b7d : jo 0xffffff8000766b93 ; mov dh, 0xc1 ; pop rbp ; ret
0xffffff8000766b7c : jo 0xffffff8000766b94 ; mov dh, 0xc1 ; pop rbp ; ret
0xffffff8000769804 : jo 0xffffff800076986a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000780c73 : jo 0xffffff8000780c76 ; ret
0xffffff8000780c72 : jo 0xffffff8000780c77 ; ret
0xffffff8000785980 : jo 0xffffff80007859e6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007a68ae : jo 0xffffff80007a6914 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007ad5cc : jo 0xffffff80007ad579 ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x39] ; ret
0xffffff80007adc68 : jo 0xffffff80007adbf7 ; ror byte ptr [rdi], 0x9f ; sal dh, 0x83 ; ret 0
0xffffff80007afd44 : jo 0xffffff80007afcd7 ; sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff80007c761a : jo 0xffffff80007c7607 ; ret
0xffffff80007d041c : jo 0xffffff80007d0434 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007d4450 : jo 0xffffff80007d4446 ; add ecx, dword ptr [rcx - 0x3fcea7ba] ; pop rbp ; ret
0xffffff80007d8e43 : jo 0xffffff80007d8dd0 ; ret
0xffffff80007eedb4 : jo 0xffffff80007eed41 ; ret
0xffffff80007fab71 : jo 0xffffff80007fab6d ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fab70 : jo 0xffffff80007fab6e ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080cfa4 : jo 0xffffff800080d021 ; jmp 0xffffff7fc3dec83a
0xffffff8000819957 : jo 0xffffff80008199bd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800081bbfa : jo 0xffffff800081bc02 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081bc6a : jo 0xffffff800081bc72 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081ecf6 : jo 0xffffff800081ed23 ; shr al, 6 ; pop rbp ; ret
0xffffff800081ecf5 : jo 0xffffff800081ed24 ; shr al, 6 ; pop rbp ; ret
0xffffff800081ed3a : jo 0xffffff800081ed9b ; ret
0xffffff800081ed39 : jo 0xffffff800081ed9c ; ret
0xffffff8000821a95 : jo 0xffffff8000821b1e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800082483c : jo 0xffffff8000824841 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082a384 : jo 0xffffff800082a3ea ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800082e0be : jo 0xffffff800082e0f8 ; add byte ptr [rax + 0x5b], dl ; pop r14 ; pop rbp ; ret
0xffffff800083dfbf : jo 0xffffff800083dff8 ; mov rdi, r14 ; mov edx, ebx ; call rcx
0xffffff80008455d7 : jo 0xffffff8000845639 ; pop r14 ; pop rbp ; ret
0xffffff800084c0a1 : jo 0xffffff800084c0b0 ; mov rdi, r14 ; call rbx
0xffffff800084c521 : jo 0xffffff800084c530 ; mov rdi, r14 ; call rbx
0xffffff8000859f48 : jo 0xffffff8000859f4f ; mov rdi, r12 ; call r14
0xffffff8000859f69 : jo 0xffffff8000859f70 ; mov rdi, r12 ; call r14
0xffffff800086116e : jo 0xffffff8000861176 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008809d8 : jo 0xffffff80008809e3 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008823c7 : jo 0xffffff80008823d3 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088e867 : jo 0xffffff800088e86f ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000895d30 : jo 0xffffff8000895d40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a52b4 : jo 0xffffff80008a5316 ; pop r14 ; pop rbp ; ret
0xffffff80008a7144 : jo 0xffffff80008a71a6 ; pop r14 ; pop rbp ; ret
0xffffff80008c1ec9 : jo 0xffffff80008c1f36 ; adc eax, dword ptr [rax] ; call 0xffffff800028e156
0xffffff80008c2b7c : jo 0xffffff80008c2b6c ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cd8ec : jo 0xffffff80008cd8d4 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d545f : jo 0xffffff80008d541e ; ret 2
0xffffff80008e48d2 : jo 0xffffff80008e48cd ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025a188 : jp 0xffffff800025a192 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800025cdf8 : jp 0xffffff800025ce02 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800025cdf7 : jp 0xffffff800025ce03 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800026dd41 : jp 0xffffff800026dd4e ; pop rbp ; ret
0xffffff8000283769 : jp 0xffffff8000283773 ; cmp rdi, rax ; je 0xffffff800028377a ; pop rbp ; ret
0xffffff8000290706 : jp 0xffffff80002906c3 ; test dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002b5cfc : jp 0xffffff80002b5d0a ; add byte ptr [rax + 4], bh ; pop rbp ; ret
0xffffff8000310baa : jp 0xffffff8000310baf ; pop rbp ; ret
0xffffff800034b76c : jp 0xffffff800034b777 ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034b9ae : jp 0xffffff800034b9b9 ; setbe al ; movzx eax, al ; pop rbp ; ret
0xffffff800034d92f : jp 0xffffff800034d938 ; mov edi, 1 ; call rax
0xffffff800034f2a3 : jp 0xffffff800034f2ab ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034f89a : jp 0xffffff800034f8a2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800034fa61 : jp 0xffffff800034fa6b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000350afe : jp 0xffffff8000350b07 ; mov edi, 1 ; call rax
0xffffff800035831c : jp 0xffffff8000358326 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800035831b : jp 0xffffff8000358327 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003583e9 : jp 0xffffff80003583f3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003c2c9f : jp 0xffffff80003c2ca3 ; dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff800045ff52 : jp 0xffffff800045fee2 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000541f2d : jp 0xffffff8000541ec2 ; add byte ptr [rcx], r14b ; shr al, 0x78 ; ret 0xffd4
0xffffff800056ce33 : jp 0xffffff800056ce39 ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff80005e38d2 : jp 0xffffff80005e38d0 ; push rbx ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff80005e6df5 : jp 0xffffff80005e6dca ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffda
0xffffff800061d6c2 : jp 0xffffff800061d6c6 ; adc eax, 0x3d8b4800 ; ret
0xffffff800062cfa9 : jp 0xffffff800062cfc8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000655832 : jp 0xffffff80006557bf ; ret
0xffffff800065b022 : jp 0xffffff800065b05a ; ret
0xffffff800065e422 : jp 0xffffff800065e426 ; ret
0xffffff8000675ed9 : jp 0xffffff8000675ede ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000694a52 : jp 0xffffff80006949e9 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006a0b52 : jp 0xffffff80006a0b28 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff80006ab5b7 : jp 0xffffff80006ab58c ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000762102 : jp 0xffffff8000762150 ; ret
0xffffff8000765553 : jp 0xffffff8000765587 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; push rcx ; ret
0xffffff8000767ec2 : jp 0xffffff8000767e71 ; ret 0x41ff
0xffffff8000772e02 : jp 0xffffff8000772e43 ; ret 0x4cff
0xffffff800077cab2 : jp 0xffffff800077caed ; cmp eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80007a2b42 : jp 0xffffff80007a2b3a ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7435 : jp 0xffffff80007a7439 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7434 : jp 0xffffff80007a743a ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7474 : jp 0xffffff80007a7478 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bb622 : jp 0xffffff80007bb5e6 ; dec dword ptr [rax - 1] ; ret
0xffffff80007bc1bc : jp 0xffffff80007bc1f5 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80008c0eb7 : jp 0xffffff80008c0e5f ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c0eb6 : jp 0xffffff80008c0e60 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008dfe72 : jp 0xffffff80008dfe8f ; dec dword ptr [rax - 0x77] ; ret 0x42c7
0xffffff8000b4b511 : jp 0xffffff8000b4b518 ; push qword ptr [rdi + rsi*2 - 1] ; jmp rsi
0xffffff8000b4bb12 : jp 0xffffff8000b4bb17 ; ret
0xffffff800028b249 : jrcxz 0xffffff800028b240 ; add eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80002bce88 : jrcxz 0xffffff80002bce91 ; add al, 0 ; add byte ptr [rax + 9], cl ; ret
0xffffff80002fc1ea : jrcxz 0xffffff80002fc1f1 ; inc dword ptr [rdi] ; add byte ptr [rcx], cl ; ret
0xffffff80002fdbbb : jrcxz 0xffffff80002fdbe8 ; ret
0xffffff80003422cc : jrcxz 0xffffff8000342332 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000366c9c : jrcxz 0xffffff8000366cfd ; ret
0xffffff8000370029 : jrcxz 0xffffff8000370038 ; shl dword ptr [rcx], cl ; ret
0xffffff80003741a9 : jrcxz 0xffffff80003741b6 ; ret
0xffffff800038827c : jrcxz 0xffffff80003882e2 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000446745 : jrcxz 0xffffff8000446782 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800044682e : jrcxz 0xffffff800044686b ; add dh, dh ; ret
0xffffff800044e893 : jrcxz 0xffffff800044e8a1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800048bc45 : jrcxz 0xffffff800048bc48 ; jmp rax
0xffffff8000490f72 : jrcxz 0xffffff8000490f00 ; shr dword ptr [rax], cl ; ret
0xffffff800049cfac : jrcxz 0xffffff800049cffd ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004b43f9 : jrcxz 0xffffff80004b4401 ; and byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0xffffff80004bbe37 : jrcxz 0xffffff80004bbe69 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004bbe36 : jrcxz 0xffffff80004bbe6a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004bcb39 : jrcxz 0xffffff80004bcb41 ; and byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0xffffff80004e2959 : jrcxz 0xffffff80004e2914 ; ret 0xc7ff
0xffffff80004f6427 : jrcxz 0xffffff80004f6419 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff80004f9071 : jrcxz 0xffffff80004f9075 ; cmc ; call qword ptr [rdi]
0xffffff800051354c : jrcxz 0xffffff800051359d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000547c12 : jrcxz 0xffffff8000547c04 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800057210e : jrcxz 0xffffff8000572158 ; add byte ptr [rcx], dh ; shr al, 0x88 ; ret
0xffffff80005a3d0b : jrcxz 0xffffff80005a3d11 ; add bh, bh ; ret
0xffffff80005a409e : jrcxz 0xffffff80005a40a2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005a7905 : jrcxz 0xffffff80005a7935 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005c7301 : jrcxz 0xffffff80005c7307 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80005f66b5 : jrcxz 0xffffff80005f66d7 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006253f1 : jrcxz 0xffffff80006253ea ; dec dword ptr [rax + 0x63] ; ret
0xffffff80006264cc : jrcxz 0xffffff800062652d ; ret
0xffffff800063521c : jrcxz 0xffffff8000635214 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000659aed : jrcxz 0xffffff8000659b12 ; add byte ptr [rcx], sil ; shr al, 0xa8 ; ret
0xffffff800065dab9 : jrcxz 0xffffff800065dac6 ; ret
0xffffff800066f559 : jrcxz 0xffffff800066f4e2 ; ret 0x4dff
0xffffff8000673ddb : jrcxz 0xffffff8000673e24 ; add byte ptr [rcx], dh ; shr al, 0x6b ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff8000674c59 : jrcxz 0xffffff8000674c8b ; ret 0xbbff
0xffffff80006783d9 : jrcxz 0xffffff8000678403 ; ret 0x48ff
0xffffff8000682a51 : jrcxz 0xffffff8000682a07 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000686695 : jrcxz 0xffffff80006866ae ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000688c8c : jrcxz 0xffffff8000688c7e ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff8000694957 : jrcxz 0xffffff8000694949 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800069fd77 : jrcxz 0xffffff800069fd78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80006b26cb : jrcxz 0xffffff80006b271d ; mov edx, edi ; call rax
0xffffff80006b762c : jrcxz 0xffffff80006b761e ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800072c319 : jrcxz 0xffffff800072c2c4 ; ret
0xffffff800073bd8a : jrcxz 0xffffff800073be03 ; ret
0xffffff8000752afc : jrcxz 0xffffff8000752b4d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000754a4c : jrcxz 0xffffff8000754a3e ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff8000763269 : jrcxz 0xffffff8000763295 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80007674e9 : jrcxz 0xffffff80007674a7 ; dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000392a49
0xffffff800076f499 : jrcxz 0xffffff800076f513 ; ret 0x41ff
0xffffff80007a4993 : jrcxz 0xffffff80007a4954 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007b3f04 : jrcxz 0xffffff80007b3f20 ; add byte ptr [rax + 1], cl ; ret
0xffffff80007b3f5e : jrcxz 0xffffff80007b3f7a ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80007b3f5d : jrcxz 0xffffff80007b3f7b ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80007badae : jrcxz 0xffffff80007badb6 ; add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0xffffff8000821d6c : jrcxz 0xffffff8000821dcd ; ret
0xffffff8000841a4a : jrcxz 0xffffff8000841ac5 ; ret
0xffffff800084fa52 : jrcxz 0xffffff800084fa55 ; ret 0xdb85
0xffffff8000870368 : jrcxz 0xffffff800087037c ; xchg eax, ebp ; ret 0x394c
0xffffff80008b0f5c : jrcxz 0xffffff80008b0ef1 ; or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008b0fac : jrcxz 0xffffff80008b0f41 ; or al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80008d2ec2 : jrcxz 0xffffff80008d2ebe ; dec dword ptr [rax - 0x77] ; ret
0xffffff80009094d4 : jrcxz 0xffffff80009094fc ; add bh, bh ; ret
0xffffff8000b3ce4e : jrcxz 0xffffff8000b3ce7a ; ret
0xffffff8000b456fc : jrcxz 0xffffff8000b45704 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b456fc : jrcxz 0xffffff8000b45706 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4576e : jrcxz 0xffffff8000b45776 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4576e : jrcxz 0xffffff8000b45778 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b45f16 : jrcxz 0xffffff8000b45f1e ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b45f16 : jrcxz 0xffffff8000b45f20 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b45f88 : jrcxz 0xffffff8000b45f90 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b45f88 : jrcxz 0xffffff8000b45f92 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b47da4 : jrcxz 0xffffff8000b47d28 ; ret
0xffffff8000b47e47 : jrcxz 0xffffff8000b47dcb ; ret
0xffffff8000b47eeb : jrcxz 0xffffff8000b47e6f ; ret
0xffffff8000b4802b : jrcxz 0xffffff8000b47faf ; ret
0xffffff8000b4990f : jrcxz 0xffffff8000b49917 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4990f : jrcxz 0xffffff8000b49919 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49990 : jrcxz 0xffffff8000b49998 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49990 : jrcxz 0xffffff8000b4999a ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49ac7 : jrcxz 0xffffff8000b49acf ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49ac7 : jrcxz 0xffffff8000b49ad1 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49d19 : jrcxz 0xffffff8000b49d21 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49d19 : jrcxz 0xffffff8000b49d23 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49dae : jrcxz 0xffffff8000b49db6 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49dae : jrcxz 0xffffff8000b49db8 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49eea : jrcxz 0xffffff8000b49ef2 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49eea : jrcxz 0xffffff8000b49ef4 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49f7d : jrcxz 0xffffff8000b49f85 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b49f7d : jrcxz 0xffffff8000b49f87 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a250 : jrcxz 0xffffff8000b4a258 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a250 : jrcxz 0xffffff8000b4a25a ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a59c : jrcxz 0xffffff8000b4a5a4 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a59c : jrcxz 0xffffff8000b4a5a6 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a640 : jrcxz 0xffffff8000b4a648 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a640 : jrcxz 0xffffff8000b4a64a ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a7dd : jrcxz 0xffffff8000b4a7e5 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4a7dd : jrcxz 0xffffff8000b4a7e7 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0xffffff8000b4ba57 : jrcxz 0xffffff8000b4b9e9 ; rol ecx, cl ; jmp 0xffffff8000b4ba69
0xffffff800084e73f : js 0xffffff7fc23af70d ; pop rbp ; ret
0xffffff8000252d18 : js 0xffffff8000252d2c ; add byte ptr [rsp + rax - 1], dh ; ret
0xffffff800025f3b5 : js 0xffffff800025f343 ; add bh, dh ; ret
0xffffff800025f3e3 : js 0xffffff800025f371 ; add dh, dh ; ret
0xffffff80002805f4 : js 0xffffff80002805fa ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028869e : js 0xffffff80002886fb ; pop rbp ; ret
0xffffff80002886c0 : js 0xffffff800028871d ; pop rbp ; ret
0xffffff800029d2fe : js 0xffffff800029d2f8 ; ret
0xffffff800029d386 : js 0xffffff800029d380 ; ret
0xffffff800029e907 : js 0xffffff800029e90e ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca08
0xffffff800029eade : js 0xffffff800029eae3 ; pop rbp ; ret
0xffffff80002d5ed3 : js 0xffffff80002d5ee4 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002dc1e1 : js 0xffffff80002dc16d ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000307217 : js 0xffffff80003071a3 ; sal byte ptr [rbx + rbp - 0x77], cl ; ret 0xe281
0xffffff800031ad68 : js 0xffffff800031ad76 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800033437b : js 0xffffff8000334392 ; mov bh, 0x51 ; je 0xffffff8000334390 ; ret 0x2475
0xffffff800033437a : js 0xffffff8000334393 ; mov bh, 0x51 ; je 0xffffff8000334391 ; ret 0x2475
0xffffff8000338df9 : js 0xffffff8000338e4c ; mov dword ptr [rax + 0x438], edi ; pop rbp ; ret
0xffffff8000345c07 : js 0xffffff8000345c48 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000345cb7 : js 0xffffff8000345cf8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000366dc8 : js 0xffffff8000366dcd ; pop rbp ; ret
0xffffff8000366dc7 : js 0xffffff8000366dce ; pop rbp ; ret
0xffffff800036d251 : js 0xffffff800036d256 ; pop rbp ; ret
0xffffff800036e04a : js 0xffffff800036e053 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800036e089 : js 0xffffff800036e092 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000375060 : js 0xffffff8000375092 ; jmp 0xffffff8000375382
0xffffff8000375c0c : js 0xffffff8000375c16 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000375cd9 : js 0xffffff8000375ce3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003767f4 : js 0xffffff80003767fa ; call 0xffffff8000392a44
0xffffff8000377003 : js 0xffffff800037700b ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff8000392527 : js 0xffffff800039252c ; leave ; ret
0xffffff80003925a3 : js 0xffffff80003925ad ; leave ; mov eax, 1 ; ret
0xffffff800039265b : js 0xffffff8000392660 ; leave ; ret
0xffffff800039265a : js 0xffffff8000392661 ; leave ; ret
0xffffff80003926d7 : js 0xffffff80003926e1 ; leave ; mov eax, 1 ; ret
0xffffff8000392756 : js 0xffffff8000392760 ; leave ; mov eax, 1 ; ret
0xffffff80003929a0 : js 0xffffff80003929a5 ; leave ; ret
0xffffff8000392b16 : js 0xffffff8000392b1b ; leave ; ret
0xffffff8000392b50 : js 0xffffff8000392b55 ; leave ; ret
0xffffff800039313b : js 0xffffff8000393140 ; leave ; ret
0xffffff8000393175 : js 0xffffff800039317a ; leave ; ret
0xffffff800039ccef : js 0xffffff800039ccfc ; pop rbp ; ret
0xffffff80003a2a13 : js 0xffffff80003a2a64 ; test eax, eax ; je 0xffffff80003a2a23 ; pop rbp ; jmp rax
0xffffff80003a2a12 : js 0xffffff80003a2a65 ; test eax, eax ; je 0xffffff80003a2a24 ; pop rbp ; jmp rax
0xffffff80003a2fe5 : js 0xffffff80003a2ff1 ; add byte ptr [rax], al ; inc qword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80003a30ec : js 0xffffff80003a30f4 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a3150 : js 0xffffff80003a3158 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a3db9 : js 0xffffff80003a3dc1 ; mov dword ptr [rax + 0x44], ecx ; pop rbp ; ret
0xffffff80003a3de0 : js 0xffffff80003a3e2d ; pop rbp ; ret
0xffffff80003a41c0 : js 0xffffff80003a41f1 ; pop rbp ; ret
0xffffff80003ad8c9 : js 0xffffff80003ad8d4 ; test rax, rax ; je 0xffffff80003ad90b ; xor edi, edi ; call rax
0xffffff80003b7fac : js 0xffffff80003b7f61 ; jno 0xffffff80003b7fb9 ; jne 0xffffff80003b7fa9 ; xor eax, eax ; pop rbp ; ret
0xffffff80003b9fd4 : js 0xffffff80003ba04f ; add byte ptr [rax - 0x7d], cl ; ret 0x8930
0xffffff80003f6bc4 : js 0xffffff80003f6b8d ; stc ; inc dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0xffffff80004225a7 : js 0xffffff80004225b7 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000422618 : js 0xffffff8000422628 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800043ca75 : js 0xffffff800043ca8c ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000445ef7 : js 0xffffff8000445f0e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000454445 : js 0xffffff800045447f ; ror byte ptr [rax - 0x73], 0x3d ; xchg eax, ebp ; ret 0x51
0xffffff800047357d : js 0xffffff800047350a ; ret 0x5deb
0xffffff800047357c : js 0xffffff800047350b ; ret 0x5deb
0xffffff80004b3c87 : js 0xffffff80004b3ce8 ; ret
0xffffff80004b3c86 : js 0xffffff80004b3ce9 ; ret
0xffffff80004b3c97 : js 0xffffff80004b3cf8 ; ret
0xffffff80004b650b : js 0xffffff80004b6505 ; ret 0x4808
0xffffff80004b650a : js 0xffffff80004b6506 ; ret 0x4808
0xffffff80004b66da : js 0xffffff80004b66d4 ; ret 0x4808
0xffffff80004b66d9 : js 0xffffff80004b66d5 ; ret 0x4808
0xffffff80004c38d7 : js 0xffffff80004c38f7 ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff80004c7d12 : js 0xffffff80004c7d0c ; ret 0x7401
0xffffff80004c8158 : js 0xffffff80004c80e2 ; loopne 0xffffff80004c8162 ; pop rbp ; ret
0xffffff80004c8157 : js 0xffffff80004c80e3 ; loopne 0xffffff80004c8163 ; pop rbp ; ret
0xffffff80004cb2a7 : js 0xffffff80004cb2b2 ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80004e5452 : js 0xffffff80004e5463 ; add byte ptr [rax], al ; call 0xffffff800010e147
0xffffff80004e8a22 : js 0xffffff80004e8a2b ; add byte ptr [rax], al ; call 0xffffff800010e147
0xffffff80004fa078 : js 0xffffff80004fa0b9 ; je 0xffffff80004fa085 ; xor eax, eax ; pop rbp ; ret
0xffffff80004fa8bd : js 0xffffff80004fa847 ; loopne 0xffffff80004fa8c7 ; pop rbp ; ret
0xffffff80004fa8bc : js 0xffffff80004fa848 ; loopne 0xffffff80004fa8c8 ; pop rbp ; ret
0xffffff800050a318 : js 0xffffff800050a343 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800050d5c4 : js 0xffffff800050d624 ; pop rbp ; ret
0xffffff800050d653 : js 0xffffff800050d6b3 ; pop rbp ; ret
0xffffff800052b703 : js 0xffffff800052b754 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800052b702 : js 0xffffff800052b755 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80005478e4 : js 0xffffff80005478bd ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff800054f9e1 : js 0xffffff800054fa33 ; test eax, eax ; je 0xffffff800054f9f8 ; xor esi, esi ; call rax
0xffffff800054f9e0 : js 0xffffff800054fa34 ; test eax, eax ; je 0xffffff800054f9f9 ; xor esi, esi ; call rax
0xffffff800056311d : js 0xffffff8000563125 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800057e15d : js 0xffffff800057e1ad ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800057e15c : js 0xffffff800057e1ae ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800057f206 : js 0xffffff800057f190 ; loopne 0xffffff800057f210 ; pop rbp ; ret
0xffffff800057f205 : js 0xffffff800057f191 ; loopne 0xffffff800057f211 ; pop rbp ; ret
0xffffff800057f22e : js 0xffffff800057f28f ; ret
0xffffff800057f22d : js 0xffffff800057f290 ; ret
0xffffff800057f2fc : js 0xffffff800057f2f6 ; ret 0xf01
0xffffff800057f6fa : js 0xffffff800057f75b ; ret
0xffffff800057f926 : js 0xffffff800057f920 ; ret 0xf01
0xffffff800057f9f8 : js 0xffffff800057f9f2 ; ret 0xf01
0xffffff800057fe1c : js 0xffffff800057fe7d ; ret
0xffffff800057fe1b : js 0xffffff800057fe7e ; ret
0xffffff8000584c2d : js 0xffffff8000584c7d ; cmovne eax, ecx ; pop rbp ; ret
0xffffff8000584c2c : js 0xffffff8000584c7e ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800058e5ff : js 0xffffff800058e60d ; jg 0xffffff800058e5ea ; jmp 0xffffff800058e616
0xffffff80005a97be : js 0xffffff80005a97fb ; ret
0xffffff80005a97bd : js 0xffffff80005a97fc ; ret
0xffffff80005b0017 : js 0xffffff80005b0011 ; ret
0xffffff80005bfaf5 : js 0xffffff80005bfb59 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005c1030 : js 0xffffff80005c1008 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c2036 : js 0xffffff80005c208d ; add al, ch ; ret 0xdd05
0xffffff80005df581 : js 0xffffff80005df50e ; ret 0x2144
0xffffff80005f7ccd : js 0xffffff80005f7cd6 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80005f7ccc : js 0xffffff80005f7cd7 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800061239b : js 0xffffff80006123bc ; push rcx ; add byte ptr [rcx], al ; sbb eax, eax ; pop rbp ; ret
0xffffff800062278f : js 0xffffff800062279a ; mov dword ptr [rdi + 0x64], eax ; pop rbp ; ret
0xffffff800064bfbe : js 0xffffff800064c02f ; mov dword ptr [rbx + 0xc], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000650324 : js 0xffffff8000650309 ; ret
0xffffff8000652b34 : js 0xffffff8000652aee ; ret
0xffffff800065a734 : js 0xffffff800065a772 ; ret
0xffffff800065d38d : js 0xffffff800065d399 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800067d1bc : js 0xffffff800067d1d6 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000683000 : js 0xffffff8000683001 ; jmp 0xffffff800068300c
0xffffff8000690984 : js 0xffffff8000690951 ; add byte ptr [r8 - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff8000694d1c : js 0xffffff8000694d98 ; add byte ptr [rax - 0x77], r9b ; ret 0xb8e8
0xffffff80006a6974 : js 0xffffff80006a695d ; ret 0x4dff
0xffffff80006aa06f : js 0xffffff80006aa0d3 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006ad6db : js 0xffffff80006ad73f ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800071205a : js 0xffffff8000712081 ; and byte ptr [rax - 0x77], cl ; ret 0x820f
0xffffff80007128ac : js 0xffffff80007128b9 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000712f32 : js 0xffffff8000712f59 ; and byte ptr [rax - 0x77], cl ; ret 0x894c
0xffffff800071dc72 : js 0xffffff800071dc68 ; add eax, esi ; add al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff800072d977 : js 0xffffff800072d983 ; add byte ptr [rax], al ; or byte ptr [rdi + 0x32], 1 ; pop rbp ; ret
0xffffff80007549c4 : js 0xffffff80007549a8 ; ret
0xffffff8000759ec4 : js 0xffffff8000759e59 ; ret
0xffffff800075bac4 : js 0xffffff800075bb3d ; ret
0xffffff8000760c6e : js 0xffffff8000760c77 ; xor eax, eax ; pop rbp ; ret
0xffffff800076a12f : js 0xffffff800076a146 ; call 0xffffff8000392a45
0xffffff800076a19a : js 0xffffff800076a1b1 ; call 0xffffff8000392a45
0xffffff800076a76a : js 0xffffff800076a781 ; call 0xffffff8000392a45
0xffffff800076a941 : js 0xffffff800076a9a5 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800076a9f4 : js 0xffffff800076aa0b ; call 0xffffff8000392a45
0xffffff800076aaee : js 0xffffff800076ab05 ; call 0xffffff8000392a45
0xffffff800076ac49 : js 0xffffff800076ac60 ; call 0xffffff8000392a45
0xffffff800076af11 : js 0xffffff800076af28 ; call 0xffffff8000392a45
0xffffff800076b2b6 : js 0xffffff800076b2cd ; call 0xffffff8000392a45
0xffffff800076b309 : js 0xffffff800076b320 ; call 0xffffff8000392a45
0xffffff800076b39b : js 0xffffff800076b3b2 ; call 0xffffff8000392a45
0xffffff800076d1b4 : js 0xffffff800076d20f ; ret 0x48ff
0xffffff800076d1c4 : js 0xffffff800076d226 ; ret 0x49ff
0xffffff80007a6ce7 : js 0xffffff80007a6ceb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a76d5 : js 0xffffff80007a76d8 ; push rsi ; ret
0xffffff80007a76d4 : js 0xffffff80007a7753 ; std ; push rsi ; ret
0xffffff80007afeb4 : js 0xffffff80007afe74 ; mov bh, 0xff ; pop rbp ; ret
0xffffff80007b5767 : js 0xffffff80007b57b7 ; mov dword ptr [rdi + 0x78], eax ; pop rbp ; ret
0xffffff80007b5766 : js 0xffffff80007b57b8 ; mov dword ptr [rdi + 0x78], eax ; pop rbp ; ret
0xffffff80007b576b : js 0xffffff80007b57cc ; ret
0xffffff80007b576a : js 0xffffff80007b57cd ; ret
0xffffff80007eaf6d : js 0xffffff80007eaf88 ; mov rdi, r15 ; mov rsi, r14 ; call rbx
0xffffff80007f022e : js 0xffffff80007f027d ; mov esi, edx ; pop rbp ; jmp rax
0xffffff80007f022d : js 0xffffff80007f027e ; mov esi, edx ; pop rbp ; jmp rax
0xffffff80007f6833 : js 0xffffff80007f6849 ; call 0xffffff8000392a44
0xffffff8000827345 : js 0xffffff8000827369 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0xffffff800082793e : js 0xffffff8000827941 ; ret
0xffffff8000858025 : js 0xffffff8000858089 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800085e7c4 : js 0xffffff800085e812 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000884cba : js 0xffffff8000884cd0 ; call 0xffffff80008c0f84
0xffffff80008904f8 : js 0xffffff8000890503 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000892f48 : js 0xffffff8000892f50 ; add byte ptr [rax], al ; call 0xffffff800080f1a6
0xffffff8000893044 : js 0xffffff80008930a6 ; pop r14 ; pop rbp ; ret
0xffffff8000894d2d : js 0xffffff8000894d43 ; call 0xffffff80008c0f84
0xffffff8000896714 : js 0xffffff8000896776 ; pop r14 ; pop rbp ; ret
0xffffff80008ada56 : js 0xffffff80008ada53 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008adaa0 : js 0xffffff80008ada9d ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008adad3 : js 0xffffff80008adad0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b4cfa : js 0xffffff80008b4d10 ; call 0xffffff80008c0f84
0xffffff80008c4cea : js 0xffffff80008c4d00 ; call 0xffffff80008c0f84
0xffffff80008cb31c : js 0xffffff80008cb37d ; ret
0xffffff80008ccc15 : js 0xffffff80008ccba5 ; shr r8b, 1 ; ret 0xac57
0xffffff80008ccc14 : js 0xffffff80008ccba6 ; shr r8b, 1 ; ret 0xac57
0xffffff80008d231f : js 0xffffff80008d239f ; adc cl, byte ptr [rdi] ; mov esi, 0x148010c ; ret
0xffffff80008d6454 : js 0xffffff80008d6413 ; ret 2
0xffffff80008f26f1 : js 0xffffff80008f2742 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008f26f0 : js 0xffffff80008f2743 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000900058 : js 0xffffff8000900082 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000b4b4b5 : js 0xffffff8000b4b4b8 ; jmp rax
0xffffff80007c5ca5 : lahf ; add al, byte ptr [rax] ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082748f : lahf ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000602135 : lahf ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff8000624113 : lahf ; add byte ptr [rbp + 0x39057ec0], r8b ; ret
0xffffff800069a6ca : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002d1dfe : lahf ; add eax, dword ptr [rax] ; add al, ch ; ret
0xffffff800053e20d : lahf ; call rsp
0xffffff80004090ae : lahf ; clc ; push rsi ; ret
0xffffff800071701e : lahf ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008d895c : lahf ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006e684d : lahf ; fdivp st(7) ; xor eax, eax ; pop rbp ; ret
0xffffff8000539043 : lahf ; in eax, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089e139 : lahf ; inc dword ptr [rcx - 0x41] ; ret 2
0xffffff800028712d : lahf ; int 0xfe
0xffffff80002ba97d : lahf ; int1 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000394fe7 : lahf ; jbe 0xffffff8000394fee ; pop rbp ; ret
0xffffff8000394fe6 : lahf ; jbe 0xffffff8000394fef ; pop rbp ; ret
0xffffff8000395024 : lahf ; jbe 0xffffff8000395030 ; mov eax, 1 ; pop rbp ; ret
0xffffff8000269115 : lahf ; jg 0xffffff80002690a0 ; add al, ch ; ret 0x1292
0xffffff800032fccd : lahf ; jmp qword ptr [rbx]
0xffffff800055300d : lahf ; jmp rbx
0xffffff8000443440 : lahf ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; ret 2
0xffffff80007b9f0d : lahf ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 1] ; ret
0xffffff8000743665 : lahf ; mov al, 0x39 ; add byte ptr [rax - 0x77], cl ; ret 0x6fe8
0xffffff800025958d : lahf ; mov al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005f031f : lahf ; nop ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80003ec84c : lahf ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800077d93d : lahf ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff800041a27d : lahf ; out 0xeb, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000658bfd : lahf ; pop rax ; ret
0xffffff800052b390 : lahf ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000610211 : lahf ; push -0x8ffffff ; ret
0xffffff800078d98d : lahf ; push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002b2521 : lahf ; ret
0xffffff800086439d : lahf ; ret 0
0xffffff80003c34b5 : lahf ; ret 0x394d
0xffffff800059d71d : lahf ; ret 0x4c
0xffffff80007bd047 : lahf ; ret 0x5589
0xffffff80005f49a9 : lahf ; ret 0x7eb
0xffffff80007c7434 : lahf ; ret 0x8548
0xffffff80003c3109 : lahf ; ret 0x8b48
0xffffff8000683c8b : lahf ; ret 0xca08
0xffffff80006357fb : lahf ; ret 0xca20
0xffffff80007ac32a : lahf ; ret 0xdb85
0xffffff800083d52c : lahf ; ret 0xf983
0xffffff80004a5f2f : lahf ; rol byte ptr [rax + 0x20], 0xf0 ; movzx eax, al ; pop rbp ; ret
0xffffff80006357f5 : lahf ; rol dword ptr [rcx + rdi - 0x10], 0xf ; lahf ; ret 0xca20
0xffffff80006359c8 : lahf ; rol dword ptr [rcx + rdi - 8], 0xf ; lahf ; ret 0xca20
0xffffff80002a9983 : lahf ; ror byte ptr [rdi], 0x9d ; ret 0xbb83
0xffffff80007adc6c : lahf ; sal dh, 0x83 ; ret 0
0xffffff800087735d : lahf ; sar ecx, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085a87a : lahf ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b46ad0 : lahf ; stosb byte ptr [rdi], al ; call rdi
0xffffff8000291ba2 : lahf ; test dword ptr [rax], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800075929d : lahf ; xchg eax, edi ; ret
0xffffff8000759d9d : lahf ; xchg eax, edx ; ret
0xffffff80007c4062 : lahf ; xchg eax, esp ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80006783e8 : lahf ; xor eax, dword ptr [rax] ; mov rsi, rax ; call 0xffffff800029ab99
0xffffff8000566230 : lar eax, word ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff80003924d9
0xffffff80005f4dbf : lcall [rbp - 0x3d] ; mov eax, 0x180010 ; pop rbp ; ret
0xffffff800071dcb8 : lcall [rbp - 0x3d] ; mov eax, 0xffffffce ; pop rbp ; ret
0xffffff80005f4d9c : lcall [rbp - 0x3d] ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff80005a8ed5 : lcall [rbp - 0x3d] ; mov rax, rcx ; pop rbp ; ret
0xffffff800049e71c : lcall [rbp - 0x3d] ; nop ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff80003881bd : lcall [rbp - 0x3d] ; pop rbp ; ret
0xffffff800083b8a7 : lcall [rbx + 0x41] ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80002754be : lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800026da77 : lcall [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800028c340 : lcall [rbx + 0x5d] ; ret
0xffffff80005fe29b : lcall [rbx - 0x4b00000a] ; idiv bh ; call rdx
0xffffff8000837efd : lcall [rbx - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e73fb : lcall [rcx] ; out 0xff, eax ; call rdi
0xffffff800035744b : lcall [rdi] ; add byte ptr [rax - 0x7b], cl ; ret
0xffffff8000746560 : lcall [rdi] ; add byte ptr [rbp - 0x77], al ; ret
0xffffff800056f4d7 : lcall [rdx - 0x700000a] ; idiv bh ; call qword ptr [rax]
0xffffff8000491b43 : lcall [rip + 0x2bffffc3] ; ret
0xffffff8000391318 : ldmxcsr dword ptr [rbp - 8] ; add rsp, 8 ; pop rbp ; ret
0xffffff80006f7725 : lea eax, [rax + 0xffffffb] ; xchg eax, esi ; ret 0x3b48
0xffffff80003965e5 : lea eax, [rax + 1] ; jne 0xffffff80003965e9 ; sub rax, rdi ; pop rbp ; ret
0xffffff80004296c2 : lea eax, [rax + 1] ; jne 0xffffff8000429696 ; pop rbp ; ret
0xffffff800077dc84 : lea eax, [rax + 1] ; jne 0xffffff800077dc86 ; pop rbp ; ret
0xffffff800077dd74 : lea eax, [rax + 1] ; jne 0xffffff800077dd79 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b04b9 : lea eax, [rax + rax*2] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003683b7 : lea eax, [rax + rax*2] ; mov dword ptr [rcx + rax*4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80008cb13a : lea eax, [rax + rax*2] ; pop rbp ; ret
0xffffff80007f3e82 : lea eax, [rax + rax*2] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035d6bb : lea eax, [rax + rax*4 + 2] ; pop rbp ; ret
0xffffff800073c40e : lea eax, [rax + rax*4] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003b8ea0 : lea eax, [rax + rax*4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800029d242 : lea eax, [rax + rax*4] ; jmp 0xffffff800029d25f
0xffffff80003c60b8 : lea eax, [rax + rax*4] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000338165 : lea eax, [rax + rax*4] ; pop rbp ; ret
0xffffff80002f6d8e : lea eax, [rax + rax*4] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a0c69 : lea eax, [rax + rcx + 8] ; pop rbp ; ret
0xffffff800071ea4a : lea eax, [rax + rcx - 0xe] ; movzx eax, ax ; pop rbp ; ret
0xffffff8000652354 : lea eax, [rax*4 + 0xc] ; pop rbp ; ret
0xffffff8000656a7c : lea eax, [rax*4 + 4] ; pop rbp ; ret
0xffffff800080807b : lea eax, [rax] ; add rdx, r13 ; lea rcx, [rbp - 0x3c] ; jmp rdx
0xffffff800076f2bf : lea eax, [rbp - 0x248] ; call 0xffffff8000396b89
0xffffff8000877799 : lea eax, [rbp - 0x2c] ; mov rsi, rbx ; call rax
0xffffff8000517de8 : lea eax, [rbp - 0x48] ; mov rdi, r14 ; mov rdx, r12 ; call rax
0xffffff800087e61e : lea eax, [rbp - 0x58] ; mov rsi, r15 ; mov rdx, r14 ; call rax
0xffffff80006825e3 : lea eax, [rbp - 0x70] ; call 0xffffff800029e855
0xffffff80008bc04b : lea eax, [rbp - 0x70] ; mov qword ptr [rsp], rax ; call r10
0xffffff8000268a69 : lea eax, [rbx + rdx*8 + 0xc] ; jmp 0xffffff8000268a7d
0xffffff80008cda83 : lea eax, [rcx + rax + 0x20] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c6171 : lea eax, [rcx + rax*4 + 4] ; pop rbp ; ret
0xffffff80002d5c3b : lea eax, [rcx + rax*4] ; pop rbp ; ret
0xffffff80008c4665 : lea eax, [rcx + rdx + 0xc] ; pop rbp ; ret
0xffffff800066b6d5 : lea eax, [rcx + rdx*8] ; pop rbp ; ret
0xffffff8000257e20 : lea eax, [rcx + rsi*8] ; pop rbp ; ret
0xffffff80007615fb : lea eax, [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000751de5 : lea eax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000749bb5 : lea eax, [rdi + 0x2d4] ; pop rbp ; ret
0xffffff80007f0705 : lea eax, [rdi + 0x3bc] ; pop rbp ; ret
0xffffff80007f06f5 : lea eax, [rdi + 0x3c0] ; pop rbp ; ret
0xffffff8000756b75 : lea eax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c5 : lea eax, [rdi + 0x68] ; pop rbp ; ret
0xffffff80004f9385 : lea eax, [rdi + 0x84] ; pop rbp ; ret
0xffffff80004b3aa5 : lea eax, [rdi + 0xe8] ; pop rbp ; ret
0xffffff800083c2d3 : lea eax, [rdi + rax + 0xb] ; pop rbp ; ret
0xffffff8000366a14 : lea eax, [rdi + rcx - 1] ; sub rax, rdi ; pop rbp ; ret
0xffffff80006c6795 : lea eax, [rdx + 8] ; test ch, 0x20 ; cmove eax, edx ; jmp 0xffffff80006c67a8
0xffffff800083df0e : lea eax, [rdx + rax + 0x1757] ; pop rbp ; ret
0xffffff8000422daf : lea eax, [rdx] ; idiv edi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002e8e4e : lea eax, [rip + 0x14c] ; pop rbp ; ret
0xffffff800090abd1 : lea eax, [rip + 0x193e21] ; ret
0xffffff800090abc1 : lea eax, [rip + 0x193e31] ; ret
0xffffff800090abb1 : lea eax, [rip + 0x193e41] ; ret
0xffffff800090aba1 : lea eax, [rip + 0x193e51] ; ret
0xffffff800090ab91 : lea eax, [rip + 0x193e61] ; ret
0xffffff800090ab81 : lea eax, [rip + 0x193e71] ; ret
0xffffff80008455e5 : lea eax, [rip + 0x1aab37] ; pop rbp ; ret
0xffffff80008e75b5 : lea eax, [rip + 0x2500ed] ; pop rbp ; ret
0xffffff80008e6d25 : lea eax, [rip + 0x250955] ; pop rbp ; ret
0xffffff80008e6a65 : lea eax, [rip + 0x250bed] ; pop rbp ; ret
0xffffff80008e5535 : lea eax, [rip + 0x2520f5] ; pop rbp ; ret
0xffffff80008e25c5 : lea eax, [rip + 0x25503d] ; pop rbp ; ret
0xffffff80008d7935 : lea eax, [rip + 0x25fca5] ; pop rbp ; ret
0xffffff80008d76c5 : lea eax, [rip + 0x25feed] ; pop rbp ; ret
0xffffff80008d7455 : lea eax, [rip + 0x260135] ; pop rbp ; ret
0xffffff80008d6ab5 : lea eax, [rip + 0x260a3d] ; pop rbp ; ret
0xffffff80008d6255 : lea eax, [rip + 0x261275] ; pop rbp ; ret
0xffffff80008d5ac5 : lea eax, [rip + 0x2619dd] ; pop rbp ; ret
0xffffff80008d4ac5 : lea eax, [rip + 0x2629b5] ; pop rbp ; ret
0xffffff80008d1825 : lea eax, [rip + 0x265c1d] ; pop rbp ; ret
0xffffff80008d0765 : lea eax, [rip + 0x266cb5] ; pop rbp ; ret
0xffffff80008ceb35 : lea eax, [rip + 0x2688bd] ; pop rbp ; ret
0xffffff80008ce195 : lea eax, [rip + 0x269235] ; pop rbp ; ret
0xffffff80008cc395 : lea eax, [rip + 0x26b00d] ; pop rbp ; ret
0xffffff80008c41b5 : lea eax, [rip + 0x27314d] ; pop rbp ; ret
0xffffff80008c36e5 : lea eax, [rip + 0x273bf5] ; pop rbp ; ret
0xffffff80008c2a55 : lea eax, [rip + 0x27485d] ; pop rbp ; ret
0xffffff80008c0b05 : lea eax, [rip + 0x27676d] ; pop rbp ; ret
0xffffff80008b6955 : lea eax, [rip + 0x2808cd] ; pop rbp ; ret
0xffffff80008b6335 : lea eax, [rip + 0x280ec5] ; pop rbp ; ret
0xffffff8000864205 : lea eax, [rip + 0x281295] ; pop rbp ; ret
0xffffff80008b5ce5 : lea eax, [rip + 0x2814ed] ; pop rbp ; ret
0xffffff80008b5a35 : lea eax, [rip + 0x281775] ; pop rbp ; ret
0xffffff80008b50f5 : lea eax, [rip + 0x28208d] ; pop rbp ; ret
0xffffff80008b3db5 : lea eax, [rip + 0x2833a5] ; pop rbp ; ret
0xffffff80008b32c5 : lea eax, [rip + 0x283e6d] ; pop rbp ; ret
0xffffff80008b29c5 : lea eax, [rip + 0x284745] ; pop rbp ; ret
0xffffff80008af365 : lea eax, [rip + 0x287d7d] ; pop rbp ; ret
0xffffff80008ae055 : lea eax, [rip + 0x289065] ; pop rbp ; ret
0xffffff80008ad365 : lea eax, [rip + 0x289d2d] ; pop rbp ; ret
0xffffff80008ab4b5 : lea eax, [rip + 0x28bb85] ; pop rbp ; ret
0xffffff80008ab155 : lea eax, [rip + 0x28bebd] ; pop rbp ; ret
0xffffff80008aab15 : lea eax, [rip + 0x28c4d5] ; pop rbp ; ret
0xffffff80008a9f45 : lea eax, [rip + 0x28d07d] ; pop rbp ; ret
0xffffff80008a7b85 : lea eax, [rip + 0x28f405] ; pop rbp ; ret
0xffffff80008a7175 : lea eax, [rip + 0x28fded] ; pop rbp ; ret
0xffffff80008a6275 : lea eax, [rip + 0x290cbd] ; pop rbp ; ret
0xffffff80008a52e5 : lea eax, [rip + 0x291c25] ; pop rbp ; ret
0xffffff80008a2a15 : lea eax, [rip + 0x2944cd] ; pop rbp ; ret
0xffffff800089d185 : lea eax, [rip + 0x299d2d] ; pop rbp ; ret
0xffffff800089cfe5 : lea eax, [rip + 0x299ea5] ; pop rbp ; ret
0xffffff800089bcd5 : lea eax, [rip + 0x29b185] ; pop rbp ; ret
0xffffff800089b9a5 : lea eax, [rip + 0x29b48d] ; pop rbp ; ret
0xffffff800089b675 : lea eax, [rip + 0x29b795] ; pop rbp ; ret
0xffffff800089b055 : lea eax, [rip + 0x29bd8d] ; pop rbp ; ret
0xffffff8000899c85 : lea eax, [rip + 0x29d135] ; pop rbp ; ret
0xffffff8000899015 : lea eax, [rip + 0x29dd7d] ; pop rbp ; ret
0xffffff8000896745 : lea eax, [rip + 0x2a0625] ; pop rbp ; ret
0xffffff8000895125 : lea eax, [rip + 0x2a1c1d] ; pop rbp ; ret
0xffffff8000893ea5 : lea eax, [rip + 0x2a2e75] ; pop rbp ; ret
0xffffff8000893075 : lea eax, [rip + 0x2a3c7d] ; pop rbp ; ret
0xffffff8000892485 : lea eax, [rip + 0x2a4845] ; pop rbp ; ret
0xffffff80008918e5 : lea eax, [rip + 0x2a53bd] ; pop rbp ; ret
0xffffff8000891225 : lea eax, [rip + 0x2a5a55] ; pop rbp ; ret
0xffffff80008900c5 : lea eax, [rip + 0x2a6b8d] ; pop rbp ; ret
0xffffff800088ee45 : lea eax, [rip + 0x2a7de5] ; pop rbp ; ret
0xffffff800088e325 : lea eax, [rip + 0x2a88dd] ; pop rbp ; ret
0xffffff800088cb75 : lea eax, [rip + 0x2aa065] ; pop rbp ; ret
0xffffff800088a8f5 : lea eax, [rip + 0x2ac2bd] ; pop rbp ; ret
0xffffff800088a455 : lea eax, [rip + 0x2ac735] ; pop rbp ; ret
0xffffff8000889cc5 : lea eax, [rip + 0x2ace9d] ; pop rbp ; ret
0xffffff8000887e65 : lea eax, [rip + 0x2aecd5] ; pop rbp ; ret
0xffffff8000885ff5 : lea eax, [rip + 0x2b0b1d] ; pop rbp ; ret
0xffffff8000885765 : lea eax, [rip + 0x2b135d] ; pop rbp ; ret
0xffffff8000884e35 : lea eax, [rip + 0x2b1c65] ; pop rbp ; ret
0xffffff80008846f5 : lea eax, [rip + 0x2b237d] ; pop rbp ; ret
0xffffff80008823f5 : lea eax, [rip + 0x2b4655] ; pop rbp ; ret
0xffffff8000882075 : lea eax, [rip + 0x2b49ad] ; pop rbp ; ret
0xffffff8000881a65 : lea eax, [rip + 0x2b4f95] ; pop rbp ; ret
0xffffff8000881655 : lea eax, [rip + 0x2b537d] ; pop rbp ; ret
0xffffff8000881335 : lea eax, [rip + 0x2b5675] ; pop rbp ; ret
0xffffff8000863835 : lea eax, [rip + 0x2d2ed5] ; pop rbp ; ret
0xffffff8000863625 : lea eax, [rip + 0x2d31ad] ; pop rbp ; ret
0xffffff80008633c5 : lea eax, [rip + 0x2d33e5] ; pop rbp ; ret
0xffffff8000863165 : lea eax, [rip + 0x2d361d] ; pop rbp ; ret
0xffffff8000862f05 : lea eax, [rip + 0x2d3855] ; pop rbp ; ret
0xffffff8000862ca5 : lea eax, [rip + 0x2d3a8d] ; pop rbp ; ret
0xffffff8000862a45 : lea eax, [rip + 0x2d3c9d] ; pop rbp ; ret
0xffffff80008627b5 : lea eax, [rip + 0x2d3f05] ; pop rbp ; ret
0xffffff800080f325 : lea eax, [rip + 0x2d4e75] ; pop rbp ; ret
0xffffff8000860f25 : lea eax, [rip + 0x2d576d] ; pop rbp ; ret
0xffffff800085d025 : lea eax, [rip + 0x2d961d] ; pop rbp ; ret
0xffffff800085cdc5 : lea eax, [rip + 0x2d983d] ; pop rbp ; ret
0xffffff8000858e95 : lea eax, [rip + 0x2dd69d] ; pop rbp ; ret
0xffffff8000832905 : lea eax, [rip + 0x302b65] ; pop rbp ; ret
0xffffff8000830a85 : lea eax, [rip + 0x3049bd] ; pop rbp ; ret
0xffffff800082f745 : lea eax, [rip + 0x305cd5] ; pop rbp ; ret
0xffffff800082ec35 : lea eax, [rip + 0x3067bd] ; pop rbp ; ret
0xffffff800082e0f5 : lea eax, [rip + 0x3072d5] ; pop rbp ; ret
0xffffff800082c215 : lea eax, [rip + 0x30918d] ; pop rbp ; ret
0xffffff800082b5f5 : lea eax, [rip + 0x309d85] ; pop rbp ; ret
0xffffff8000818e05 : lea eax, [rip + 0x31c54d] ; pop rbp ; ret
0xffffff8000818125 : lea eax, [rip + 0x31d195] ; pop rbp ; ret
0xffffff80008162d5 : lea eax, [rip + 0x31efbd] ; pop rbp ; ret
0xffffff8000814d75 : lea eax, [rip + 0x3204f5] ; pop rbp ; ret
0xffffff8000814375 : lea eax, [rip + 0x320ecd] ; pop rbp ; ret
0xffffff8000813bb5 : lea eax, [rip + 0x321665] ; pop rbp ; ret
0xffffff8000813115 : lea eax, [rip + 0x3220dd] ; pop rbp ; ret
0xffffff8000811b05 : lea eax, [rip + 0x3236c5] ; pop rbp ; ret
0xffffff8000810e25 : lea eax, [rip + 0x32437d] ; pop rbp ; ret
0xffffff80006564a9 : lea eax, [rip + 0x3b16a1] ; pop rbp ; ret
0xffffff800065648d : lea eax, [rip + 0x3b1735] ; pop rbp ; ret
0xffffff800065649b : lea eax, [rip + 0x3b179f] ; pop rbp ; ret
0xffffff800065647f : lea eax, [rip + 0x3b1833] ; pop rbp ; ret
0xffffff800065646c : lea eax, [rip + 0x3b18be] ; pop rbp ; ret
0xffffff80005cfa7c : lea eax, [rip + 0x3f641a] ; pop rbp ; ret
0xffffff80005562ec : lea eax, [rip + 0x436c77] ; pop rbp ; ret
0xffffff80005b24a7 : lea eax, [rip + 0x5701d3] ; pop rbp ; ret
0xffffff80004f9e81 : lea eax, [rip + 0x5dd2a1] ; pop rbp ; ret
0xffffff80003c6178 : lea eax, [rip + 0x5ffd1e] ; pop rbp ; ret
0xffffff8000391155 : lea eax, [rip + 0x6a6f65] ; pop rbp ; ret
0xffffff8000366e95 : lea eax, [rip + 0x6c5bd5] ; pop rbp ; ret
0xffffff8000267877 : lea eax, [rip + 0x839213] ; pop rbp ; ret
0xffffff80002a5b15 : lea eax, [rip + 0x846a11] ; mov eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80002a0415 : lea eax, [rip + 0x84c015] ; pop rbp ; ret
0xffffff8000290ee5 : lea eax, [rip + 0x85a425] ; pop rbp ; ret
0xffffff8000290ed5 : lea eax, [rip + 0x85a435] ; pop rbp ; ret
0xffffff8000290ec5 : lea eax, [rip + 0x85a445] ; pop rbp ; ret
0xffffff800083c2e5 : lea eax, [rip + 0xe7f75] ; pop rbp ; ret
0xffffff800038838f : lea eax, [rip - 0x76b7000b] ; ret
0xffffff80004d26a6 : lea eax, [rsi + rdi] ; or rax, rdx ; pop rbp ; ret
0xffffff80006a132c : lea ebp, [rax + 0xffffffe] ; mov dh, 0x91 ; ret
0xffffff800080caf9 : lea ebp, [rax] ; add byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff8000458357 : lea ebp, [rax] ; idiv bh ; jmp qword ptr [rax]
0xffffff80004af9de : lea ebp, [rbp + rdi*8 - 1] ; jmp qword ptr [rcx]
0xffffff80007d2ff8 : lea ebp, [rbx] ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff800076da08 : lea ebp, [rsi + 0x58] ; mov rdi, r13 ; call 0xffffff8000392a49
0xffffff80005f4188 : lea ebx, [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004af533 : lea ebx, [rbp + rdi*8 - 1] ; call qword ptr [rax]
0xffffff80004af5f8 : lea ebx, [rbp + rdi*8 - 1] ; jmp qword ptr [rax]
0xffffff800050b26b : lea ebx, [rbp - 0x30] ; jmp 0xffffff800050b2dd
0xffffff80003b6700 : lea ebx, [rbx + 4] ; jmp 0xffffff80003b6731
0xffffff800076d423 : lea ebx, [rdi + 0x58] ; mov rdi, rbx ; call 0xffffff8000392a49
0xffffff8000382e6c : lea ebx, [rdi + rdi*8 - 1] ; jmp qword ptr [rbx]
0xffffff800045435a : lea ebx, [rip + 0x606200] ; call qword ptr [rbx + rax*8]
0xffffff8000264da2 : lea ebx, [rip + 0x6d1663] ; je 0xffffff8000264df8 ; call rax
0xffffff800077573f : lea ebx, [rsi + 0x28] ; mov rdi, rbx ; call 0xffffff8000397209
0xffffff80004ecc34 : lea ecx, [rax - 0x17000003] ; ret 0x2748
0xffffff8000797461 : lea ecx, [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x689
0xffffff800060ca76 : lea ecx, [rbp - 0x180] ; call rax
0xffffff8000606a10 : lea ecx, [rbp - 0x200] ; call rax
0xffffff80007ec99e : lea ecx, [rbp - 0x34] ; mov rdx, r15 ; mov rcx, r10 ; call rbx
0xffffff8000808081 : lea ecx, [rbp - 0x3c] ; jmp rdx
0xffffff80005334e1 : lea ecx, [rbp - 0x40] ; call rbx
0xffffff8000829d2a : lea ecx, [rbp - 0x60] ; xor eax, eax ; mov rsi, rbx ; call r15
0xffffff8000679527 : lea ecx, [rbp - 0x68] ; xor esi, esi ; call rax
0xffffff8000533774 : lea ecx, [rbp - 0x94] ; call rax
0xffffff80005bca9a : lea ecx, [rbp - 0xd0] ; call rbx
0xffffff800065c194 : lea ecx, [rdi + 0x18] ; mov edx, dword ptr [rdi + 0x18] ; add edx, eax ; jmp 0xffffff800065c1d2
0xffffff800057e15b : lea ecx, [rdi + 0x78] ; cmovne rax, rcx ; pop rbp ; ret
0xffffff80003a8c24 : lea ecx, [rdi + 0x800] ; rdmsr ; pop rbp ; ret
0xffffff800070ccc6 : lea ecx, [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0xffffff800066e6af : lea ecx, [rsi - 0x12] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005a3a8f : lea ecx, [rsi - 0x2d] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000861d78 : lea edi, [rax + rcx*8] ; shl rdx, 3 ; call 0xffffff800010e089
0xffffff8000390b79 : lea edi, [rbp + 0x148] ; call rax
0xffffff8000754a8c : lea edi, [rbp - 0x108] ; call rcx
0xffffff80008ed860 : lea edi, [rbp - 0x10] ; call r8
0xffffff80008ed8f7 : lea edi, [rbp - 0x10] ; call rax
0xffffff8000607db3 : lea edi, [rbp - 0x128] ; call rcx
0xffffff800044ff0f : lea edi, [rbp - 0x148] ; mov rdx, r12 ; call rax
0xffffff800060c7f2 : lea edi, [rbp - 0x180] ; call rcx
0xffffff8000606969 : lea edi, [rbp - 0x200] ; call rcx
0xffffff800049f9a4 : lea edi, [rbp - 0x28] ; mov rdx, r14 ; mov rcx, r15 ; call rax
0xffffff8000389782 : lea edi, [rbp - 0x2c] ; call qword ptr [rax]
0xffffff80007d96a0 : lea edi, [rbp - 0x474] ; call 0xffffff80007b58b8
0xffffff80007100b7 : lea edi, [rbp - 0x60] ; mov r14, rdx ; call 0xffffff800078c388
0xffffff80004b1df4 : lea edi, [rbp - 0x610] ; call 0xffffff800010e088
0xffffff8000556b62 : lea edi, [rbp - 0x78] ; call 0xffffff8000752d75
0xffffff80006568b3 : lea edi, [rbp - 0x80] ; mov rdx, r15 ; call rax
0xffffff800042b7c9 : lea edi, [rbp - 0x828] ; call 0xffffff80004c79e8
0xffffff8000389cb7 : lea edi, [rbp - 0x88] ; call r12
0xffffff80004e0333 : lea edi, [rbp - 0x90] ; call 0xffffff800010e149
0xffffff80004eb439 : lea edi, [rbp - 0xd0] ; mov rdx, r15 ; call rax
0xffffff80005163aa : lea edi, [rbx + 0x28] ; test esi, esi ; je 0xffffff80005163de ; call 0xffffff8000392679
0xffffff80005c92b9 : lea edi, [rbx + 0x48] ; call 0xffffff80005c5505
0xffffff80002567ff : lea edi, [rbx + 0x58] ; mov qword ptr [rbp - 0x40], rdi ; call 0xffffff8000392a49
0xffffff800076b701 : lea edi, [rbx + 0x58] ; mov rdi, r15 ; call 0xffffff8000392a49
0xffffff80003983f3 : lea edi, [rbx + 4] ; xor esi, esi ; xor edx, edx ; call 0xffffff80002a46d9
0xffffff8000766278 : lea edi, [rbx + 8] ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff80007bd34b : lea edi, [rdi + rdi*8 - 1] ; jmp qword ptr [rax]
0xffffff8000834e8f : lea edi, [rdx] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000775893 : lea edi, [rip + 0x2b7757] ; call 0xffffff800039a709
0xffffff8000772ac1 : lea edi, [rip + 0x2ba529] ; call 0xffffff800039a709
0xffffff800068981a : lea edi, [rip + 0x327cba] ; jmp 0xffffff80006897eb
0xffffff800066072c : lea edi, [rip + 0x34c357] ; call 0xffffff800028e1b9
0xffffff800066039c : lea edi, [rip + 0x34c4f1] ; call 0xffffff800028e1b9
0xffffff8000767db8 : lea edi, [rip + 0x376a42] ; call 0xffffff8000392799
0xffffff8000767d86 : lea edi, [rip + 0x376a74] ; call 0xffffff8000392609
0xffffff8000767a5f : lea edi, [rip + 0x376d9b] ; call 0xffffff8000392799
0xffffff8000767a18 : lea edi, [rip + 0x376de2] ; call 0xffffff8000392609
0xffffff8000767658 : lea edi, [rip + 0x377192] ; call 0xffffff8000392a49
0xffffff800076730a : lea edi, [rip + 0x3774e0] ; call 0xffffff8000392a49
0xffffff80007672de : lea edi, [rip + 0x37750c] ; call 0xffffff8000393049
0xffffff8000767237 : lea edi, [rip + 0x3775b3] ; call 0xffffff8000393049
0xffffff800076721b : lea edi, [rip + 0x3775cf] ; call 0xffffff8000392a49
0xffffff800076506f : lea edi, [rip + 0x37978b] ; call 0xffffff8000392799
0xffffff800076503a : lea edi, [rip + 0x3797c0] ; call 0xffffff8000392799
0xffffff8000764f3a : lea edi, [rip + 0x3798c0] ; call 0xffffff80003924d9
0xffffff8000764a72 : lea edi, [rip + 0x379d88] ; call 0xffffff8000392799
0xffffff800076474c : lea edi, [rip + 0x37a0ae] ; call 0xffffff80003924d9
0xffffff80007646c9 : lea edi, [rip + 0x37a131] ; call 0xffffff8000392799
0xffffff800076467b : lea edi, [rip + 0x37a17f] ; call 0xffffff80003924d9
0xffffff800076794c : lea edi, [rip + 0x37c746] ; call 0xffffff8000393049
0xffffff800076791f : lea edi, [rip + 0x37c773] ; call 0xffffff8000392a49
0xffffff80005e530a : lea edi, [rip + 0x3b5641] ; jmp 0xffffff80005e52db
0xffffff800068c37f : lea edi, [rip + 0x44fcc3] ; call 0xffffff80003985e8
0xffffff80005d6552 : lea edi, [rip + 0x5034e4] ; call 0xffffff8000392798
0xffffff8000554270 : lea edi, [rip + 0x514a9e] ; xor esi, esi ; call rax
0xffffff800050e46d : lea edi, [rip + 0x51eb7d] ; call 0xffffff800039a708
0xffffff8000566e2a : lea edi, [rip + 0x5717d0] ; call 0xffffff8000393048
0xffffff8000566e09 : lea edi, [rip + 0x5717f1] ; call 0xffffff8000393048
0xffffff8000566d54 : lea edi, [rip + 0x5718a6] ; call 0xffffff8000393048
0xffffff800053648b : lea edi, [rip + 0x5a1b0f] ; call 0xffffff8000392798
0xffffff8000411ec1 : lea edi, [rip + 0x5c1c2f] ; call 0xffffff800028e1b8
0xffffff80003aafc8 : lea edi, [rip + 0x753b62] ; call 0xffffff8000397208
0xffffff80003a61a6 : lea edi, [rip + 0x75910c] ; call 0xffffff80003923e8
0xffffff80002ae402 : lea edi, [rip + 0x77ebe8] ; call 0xffffff800039a708
0xffffff80003767f0 : lea edi, [rip + 0x786252] ; call 0xffffff8000392a48
0xffffff8000346ddd : lea edi, [rip + 0x7b34ad] ; call 0xffffff8000393048
0xffffff80002ce373 : lea edi, [rip + 0x7f0b27] ; mov rsi, rbx ; call rax
0xffffff80005c6886 : lea edi, [rsi + 0x120] ; call 0xffffff80005c2b78
0xffffff800054fdbd : lea edi, [rsi + rcx*8] ; mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff80004d14f6 : lea edi, [rsi + rdi*8 - 1] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf44
0xffffff80004b5bf5 : lea edx, [rax + 0x10] ; mov qword ptr [rcx + 0x18], rdx ; jmp 0xffffff80004b5bc8
0xffffff800076efb1 : lea edx, [rax + 1] ; mov rdx, rax ; jmp 0xffffff800076efc4
0xffffff800061ae9a : lea edx, [rax - 1] ; cmp edx, ecx ; cmovae eax, ecx ; pop rbp ; ret
0xffffff8000744287 : lea edx, [rbp - 0x118] ; call rax
0xffffff8000765ce2 : lea edx, [rbp - 0x18] ; mov esi, 1 ; call rax
0xffffff80002938e6 : lea edx, [rbp - 0x20] ; mov rsi, r15 ; call qword ptr [rax]
0xffffff800076f3ce : lea edx, [rbp - 0x248] ; call 0xffffff8000396b89
0xffffff800076f3fe : lea edx, [rbp - 0x260] ; call 0xffffff8000396b89
0xffffff800076f613 : lea edx, [rbp - 0x268] ; call 0xffffff8000396b89
0xffffff8000489961 : lea edx, [rbp - 0x28] ; mov rsi, r14 ; call 0xffffff8000495bc8
0xffffff800064765e : lea edx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff800060e5ad : lea edx, [rbp - 0x78] ; call rcx
0xffffff8000419d7f : lea edx, [rbp - 0x78] ; mov rdi, r15 ; call 0xffffff8000445fb8
0xffffff800048948f : lea edx, [rbp - 0x98] ; call qword ptr [r15]
0xffffff80003a9426 : lea edx, [rbp - 0xd8] ; call r15
0xffffff80002796be : lea edx, [rcx] ; add byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff80003683f6 : lea edx, [rdi + rdi*2] ; mov ecx, dword ptr [rcx + rdx*4] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000254403 : lea edx, [rdx + rax*8] ; jmp 0xffffff800025441c
0xffffff8000258153 : lea edx, [rdx + rax*8] ; jmp 0xffffff800025816c
0xffffff80008c1ec7 : lea edx, [rip + 0x136570] ; call 0xffffff800028e158
0xffffff80007c1f0f : lea edx, [rip + 0x21c361] ; call 0xffffff800028e1b8
0xffffff80007c1ee4 : lea edx, [rip + 0x21c38c] ; call 0xffffff800028e1b8
0xffffff80007c1ebd : lea edx, [rip + 0x21c3b3] ; call 0xffffff800028e1b8
0xffffff8000662419 : lea edx, [rip + 0x2dae7b] ; call 0xffffff800028e159
0xffffff80006dba1d : lea edx, [rip + 0x3fb705] ; call rax
0xffffff80004eb91f : lea edx, [rip + 0x5eb803] ; mov rdi, r13 ; call rax
0xffffff80004e4df2 : lea edx, [rip + 0x5f2330] ; mov rdi, r14 ; call rax
0xffffff8000351e7a : lea edx, [rip + 0x6071ee] ; call 0xffffff800028e158
0xffffff80004cc1c1 : lea edx, [rip + 0x60af61] ; call rax
0xffffff80004cc09d : lea edx, [rip + 0x60b085] ; call rax
0xffffff80004cc04c : lea edx, [rip + 0x60b0d6] ; call rcx
0xffffff8000251eca : lea edx, [rip + 0x6f6835] ; call 0xffffff800028e158
0xffffff8000251ea9 : lea edx, [rip + 0x6f6841] ; call 0xffffff800028e158
0xffffff8000251f0c : lea edx, [rip + 0x6f6845] ; call 0xffffff800028e158
0xffffff8000251eeb : lea edx, [rip + 0x6f6856] ; call 0xffffff800028e158
0xffffff8000251f2d : lea edx, [rip + 0x6f6e0a] ; call 0xffffff800028e158
0xffffff80003a853b : lea edx, [rip + 0x72948f] ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff8000604c83 : lea edx, [rsi + rbp + 8] ; lea rsi, [rbp - 0x40] ; call rax
0xffffff8000477a95 : lea esi, [rax + 0x14] ; xor ecx, ecx ; pop rbp ; jmp r9
0xffffff80006f7759 : lea esi, [rax + 0xffffffb] ; xchg eax, esi ; ret 0x8d3b
0xffffff8000859f47 : lea esi, [rax - 1] ; mov rdi, r12 ; call r14
0xffffff80003a9aaf : lea esi, [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065b40f : lea esi, [rax] ; ret
0xffffff8000658cdd : lea esi, [rbp - 0x178] ; call rcx
0xffffff80006fdd70 : lea esi, [rbp - 0x1b0] ; mov rdi, rbx ; call rcx
0xffffff8000707160 : lea esi, [rbp - 0x30] ; call rax
0xffffff800064e518 : lea esi, [rbp - 0x38] ; call 0xffffff800010e059
0xffffff80007dab4c : lea esi, [rbp - 0x38] ; xor ecx, ecx ; mov rdx, r12 ; call rax
0xffffff8000604c88 : lea esi, [rbp - 0x40] ; call rax
0xffffff80005724e8 : lea esi, [rbp - 0x5c] ; call 0xffffff800010e059
0xffffff80008e0348 : lea esi, [rbp - 0x60] ; mov edi, 0x8008501a ; call rax
0xffffff80008e031b : lea esi, [rbp - 0x60] ; mov edi, 0x8008501b ; call rax
0xffffff80006788d3 : lea esi, [rbp - 0x68] ; call rbx
0xffffff80008bbee4 : lea esi, [rbp - 0x70] ; call r10
0xffffff800067898b : lea esi, [rbp - 0x74] ; mov edx, r15d ; call rbx
0xffffff800076b6cb : lea esi, [rbx + 0x58] ; mov rdi, r14 ; call 0xffffff8000392a49
0xffffff80006f778a : lea esi, [rbx + rdi*8 - 0x69f00001] ; ret 0x8d3b
0xffffff8000429655 : lea esi, [rcx + 0x28] ; mov qword ptr [rdx + 0x30], rsi ; jmp 0xffffff8000429628
0xffffff80008d64b2 : lea esi, [rip + 0x1250e8] ; mov rdi, r14 ; call rax
0xffffff8000859b9c : lea esi, [rip + 0x198af6] ; pop rbp ; jmp rax
0xffffff80008270a2 : lea esi, [rip + 0x1c4816] ; mov rdi, r13 ; call rbx
0xffffff8000827182 : lea esi, [rip + 0x1c51ec] ; mov rdi, r13 ; call rbx
0xffffff8000827342 : lea esi, [rip + 0x1c7834] ; mov rdi, r13 ; call rbx
0xffffff8000827262 : lea esi, [rip + 0x1c7902] ; mov rdi, r13 ; call rbx
0xffffff800055fc52 : lea esi, [rsi + 0x14] ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800055eeb5 : lea esi, [rsi + 0x14] ; mov rdx, qword ptr [rbp - 0x50] ; call rcx
0xffffff80002dc49b : lea esi, [rsi + 0x30] ; call rax
0xffffff800055ee70 : lea esi, [rsi + 0x88] ; call rcx
0xffffff80006024ee : lea esi, [rsi + rbp*4] ; jmp 0xffffff80006024b9
0xffffff800060311b : lea esi, [rsi + rbp*4] ; jmp 0xffffff80006030e6
0xffffff800042196e : lea esi, [rsi + rdi*8 - 0x76be0001] ; ret
0xffffff80004da03b : lea esp, [rax + 0x4dfffffd] ; mov eax, esp ; call rbx
0xffffff8000586334 : lea esp, [rax + 0xffffffe] ; xchg eax, ebp ; ret 0xb60f
0xffffff80006ff4af : lea esp, [rax - 3] ; inc dword ptr [rbp - 0x76f88b40] ; ret
0xffffff8000466a5e : lea esp, [rax - 4] ; ret
0xffffff80008b50f7 : lea esp, [rax] ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80007be530 : lea esp, [rbp - 0x18] ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003d55bd : lea esp, [rdi + rdi*8 - 1] ; push rsi ; ret 0x7502
0xffffff800059174b : lea esp, [rdx - 0x16000002] ; ret
0xffffff800076efb0 : lea r10, [rax + 1] ; mov rdx, rax ; jmp 0xffffff800076efc5
0xffffff80006024ed : lea r14, [r14 + r13*4] ; jmp 0xffffff80006024ba
0xffffff800060311a : lea r14, [r14 + r13*4] ; jmp 0xffffff80006030e7
0xffffff80004296c1 : lea r8, [r8 + 1] ; jne 0xffffff8000429697 ; pop rbp ; ret
0xffffff8000877798 : lea r8, [rbp - 0x2c] ; mov rsi, rbx ; call rax
0xffffff80006825e2 : lea r8, [rbp - 0x70] ; call 0xffffff800029e856
0xffffff80005334e0 : lea r9, [rbp - 0x40] ; call rbx
0xffffff8000533773 : lea r9, [rbp - 0x94] ; call rax
0xffffff800065c193 : lea r9, [rdi + 0x18] ; mov edx, dword ptr [rdi + 0x18] ; add edx, eax ; jmp 0xffffff800065c1d3
0xffffff80003c60b7 : lea rax, [r8 + r8*4] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800077dc83 : lea rax, [rax + 1] ; jne 0xffffff800077dc87 ; pop rbp ; ret
0xffffff80006a0c68 : lea rax, [rax + rcx + 8] ; pop rbp ; ret
0xffffff80008bc04a : lea rax, [rbp - 0x70] ; mov qword ptr [rsp], rax ; call r10
0xffffff80008cda82 : lea rax, [rcx + rax + 0x20] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c6170 : lea rax, [rcx + rax*4 + 4] ; pop rbp ; ret
0xffffff80002d5c3a : lea rax, [rcx + rax*4] ; pop rbp ; ret
0xffffff80008c4664 : lea rax, [rcx + rdx + 0xc] ; pop rbp ; ret
0xffffff8000257e1f : lea rax, [rcx + rsi*8] ; pop rbp ; ret
0xffffff8000751de4 : lea rax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000749bb4 : lea rax, [rdi + 0x2d4] ; pop rbp ; ret
0xffffff80007f0704 : lea rax, [rdi + 0x3bc] ; pop rbp ; ret
0xffffff80007f06f4 : lea rax, [rdi + 0x3c0] ; pop rbp ; ret
0xffffff8000756b74 : lea rax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c4 : lea rax, [rdi + 0x68] ; pop rbp ; ret
0xffffff80004f9384 : lea rax, [rdi + 0x84] ; pop rbp ; ret
0xffffff80004b3aa4 : lea rax, [rdi + 0xe8] ; pop rbp ; ret
0xffffff800083c2d2 : lea rax, [rdi + rax + 0xb] ; pop rbp ; ret
0xffffff8000366a13 : lea rax, [rdi + rcx - 1] ; sub rax, rdi ; pop rbp ; ret
0xffffff800083df0d : lea rax, [rdx + rax + 0x1757] ; pop rbp ; ret
0xffffff80002e8e4d : lea rax, [rip + 0x14c] ; pop rbp ; ret
0xffffff800090abd0 : lea rax, [rip + 0x193e21] ; ret
0xffffff800090abc0 : lea rax, [rip + 0x193e31] ; ret
0xffffff800090abb0 : lea rax, [rip + 0x193e41] ; ret
0xffffff800090aba0 : lea rax, [rip + 0x193e51] ; ret
0xffffff800090ab90 : lea rax, [rip + 0x193e61] ; ret
0xffffff800090ab80 : lea rax, [rip + 0x193e71] ; ret
0xffffff80008455e4 : lea rax, [rip + 0x1aab37] ; pop rbp ; ret
0xffffff80008e75b4 : lea rax, [rip + 0x2500ed] ; pop rbp ; ret
0xffffff80008e6d24 : lea rax, [rip + 0x250955] ; pop rbp ; ret
0xffffff80008e6a64 : lea rax, [rip + 0x250bed] ; pop rbp ; ret
0xffffff80008e5534 : lea rax, [rip + 0x2520f5] ; pop rbp ; ret
0xffffff80008e25c4 : lea rax, [rip + 0x25503d] ; pop rbp ; ret
0xffffff80008d7934 : lea rax, [rip + 0x25fca5] ; pop rbp ; ret
0xffffff80008d76c4 : lea rax, [rip + 0x25feed] ; pop rbp ; ret
0xffffff80008d7454 : lea rax, [rip + 0x260135] ; pop rbp ; ret
0xffffff80008d6ab4 : lea rax, [rip + 0x260a3d] ; pop rbp ; ret
0xffffff80008d6254 : lea rax, [rip + 0x261275] ; pop rbp ; ret
0xffffff80008d5ac4 : lea rax, [rip + 0x2619dd] ; pop rbp ; ret
0xffffff80008d4ac4 : lea rax, [rip + 0x2629b5] ; pop rbp ; ret
0xffffff80008d1824 : lea rax, [rip + 0x265c1d] ; pop rbp ; ret
0xffffff80008d0764 : lea rax, [rip + 0x266cb5] ; pop rbp ; ret
0xffffff80008ceb34 : lea rax, [rip + 0x2688bd] ; pop rbp ; ret
0xffffff80008ce194 : lea rax, [rip + 0x269235] ; pop rbp ; ret
0xffffff80008cc394 : lea rax, [rip + 0x26b00d] ; pop rbp ; ret
0xffffff80008c41b4 : lea rax, [rip + 0x27314d] ; pop rbp ; ret
0xffffff80008c36e4 : lea rax, [rip + 0x273bf5] ; pop rbp ; ret
0xffffff80008c2a54 : lea rax, [rip + 0x27485d] ; pop rbp ; ret
0xffffff80008c0b04 : lea rax, [rip + 0x27676d] ; pop rbp ; ret
0xffffff80008b6954 : lea rax, [rip + 0x2808cd] ; pop rbp ; ret
0xffffff80008b6334 : lea rax, [rip + 0x280ec5] ; pop rbp ; ret
0xffffff8000864204 : lea rax, [rip + 0x281295] ; pop rbp ; ret
0xffffff80008b5ce4 : lea rax, [rip + 0x2814ed] ; pop rbp ; ret
0xffffff80008b5a34 : lea rax, [rip + 0x281775] ; pop rbp ; ret
0xffffff80008b50f4 : lea rax, [rip + 0x28208d] ; pop rbp ; ret
0xffffff80008b3db4 : lea rax, [rip + 0x2833a5] ; pop rbp ; ret
0xffffff80008b32c4 : lea rax, [rip + 0x283e6d] ; pop rbp ; ret
0xffffff80008b29c4 : lea rax, [rip + 0x284745] ; pop rbp ; ret
0xffffff80008af364 : lea rax, [rip + 0x287d7d] ; pop rbp ; ret
0xffffff80008ae054 : lea rax, [rip + 0x289065] ; pop rbp ; ret
0xffffff80008ad364 : lea rax, [rip + 0x289d2d] ; pop rbp ; ret
0xffffff80008ab4b4 : lea rax, [rip + 0x28bb85] ; pop rbp ; ret
0xffffff80008ab154 : lea rax, [rip + 0x28bebd] ; pop rbp ; ret
0xffffff80008aab14 : lea rax, [rip + 0x28c4d5] ; pop rbp ; ret
0xffffff80008a9f44 : lea rax, [rip + 0x28d07d] ; pop rbp ; ret
0xffffff80008a7b84 : lea rax, [rip + 0x28f405] ; pop rbp ; ret
0xffffff80008a7174 : lea rax, [rip + 0x28fded] ; pop rbp ; ret
0xffffff80008a6274 : lea rax, [rip + 0x290cbd] ; pop rbp ; ret
0xffffff80008a52e4 : lea rax, [rip + 0x291c25] ; pop rbp ; ret
0xffffff80008a2a14 : lea rax, [rip + 0x2944cd] ; pop rbp ; ret
0xffffff800089d184 : lea rax, [rip + 0x299d2d] ; pop rbp ; ret
0xffffff800089cfe4 : lea rax, [rip + 0x299ea5] ; pop rbp ; ret
0xffffff800089bcd4 : lea rax, [rip + 0x29b185] ; pop rbp ; ret
0xffffff800089b9a4 : lea rax, [rip + 0x29b48d] ; pop rbp ; ret
0xffffff800089b674 : lea rax, [rip + 0x29b795] ; pop rbp ; ret
0xffffff800089b054 : lea rax, [rip + 0x29bd8d] ; pop rbp ; ret
0xffffff8000899c84 : lea rax, [rip + 0x29d135] ; pop rbp ; ret
0xffffff8000899014 : lea rax, [rip + 0x29dd7d] ; pop rbp ; ret
0xffffff8000896744 : lea rax, [rip + 0x2a0625] ; pop rbp ; ret
0xffffff8000895124 : lea rax, [rip + 0x2a1c1d] ; pop rbp ; ret
0xffffff8000893ea4 : lea rax, [rip + 0x2a2e75] ; pop rbp ; ret
0xffffff8000893074 : lea rax, [rip + 0x2a3c7d] ; pop rbp ; ret
0xffffff8000892484 : lea rax, [rip + 0x2a4845] ; pop rbp ; ret
0xffffff80008918e4 : lea rax, [rip + 0x2a53bd] ; pop rbp ; ret
0xffffff8000891224 : lea rax, [rip + 0x2a5a55] ; pop rbp ; ret
0xffffff80008900c4 : lea rax, [rip + 0x2a6b8d] ; pop rbp ; ret
0xffffff800088ee44 : lea rax, [rip + 0x2a7de5] ; pop rbp ; ret
0xffffff800088e324 : lea rax, [rip + 0x2a88dd] ; pop rbp ; ret
0xffffff800088cb74 : lea rax, [rip + 0x2aa065] ; pop rbp ; ret
0xffffff800088a8f4 : lea rax, [rip + 0x2ac2bd] ; pop rbp ; ret
0xffffff800088a454 : lea rax, [rip + 0x2ac735] ; pop rbp ; ret
0xffffff8000889cc4 : lea rax, [rip + 0x2ace9d] ; pop rbp ; ret
0xffffff8000887e64 : lea rax, [rip + 0x2aecd5] ; pop rbp ; ret
0xffffff8000885ff4 : lea rax, [rip + 0x2b0b1d] ; pop rbp ; ret
0xffffff8000885764 : lea rax, [rip + 0x2b135d] ; pop rbp ; ret
0xffffff8000884e34 : lea rax, [rip + 0x2b1c65] ; pop rbp ; ret
0xffffff80008846f4 : lea rax, [rip + 0x2b237d] ; pop rbp ; ret
0xffffff80008823f4 : lea rax, [rip + 0x2b4655] ; pop rbp ; ret
0xffffff8000882074 : lea rax, [rip + 0x2b49ad] ; pop rbp ; ret
0xffffff8000881a64 : lea rax, [rip + 0x2b4f95] ; pop rbp ; ret
0xffffff8000881654 : lea rax, [rip + 0x2b537d] ; pop rbp ; ret
0xffffff8000881334 : lea rax, [rip + 0x2b5675] ; pop rbp ; ret
0xffffff8000863834 : lea rax, [rip + 0x2d2ed5] ; pop rbp ; ret
0xffffff8000863624 : lea rax, [rip + 0x2d31ad] ; pop rbp ; ret
0xffffff80008633c4 : lea rax, [rip + 0x2d33e5] ; pop rbp ; ret
0xffffff8000863164 : lea rax, [rip + 0x2d361d] ; pop rbp ; ret
0xffffff8000862f04 : lea rax, [rip + 0x2d3855] ; pop rbp ; ret
0xffffff8000862ca4 : lea rax, [rip + 0x2d3a8d] ; pop rbp ; ret
0xffffff8000862a44 : lea rax, [rip + 0x2d3c9d] ; pop rbp ; ret
0xffffff80008627b4 : lea rax, [rip + 0x2d3f05] ; pop rbp ; ret
0xffffff800080f324 : lea rax, [rip + 0x2d4e75] ; pop rbp ; ret
0xffffff8000860f24 : lea rax, [rip + 0x2d576d] ; pop rbp ; ret
0xffffff800085d024 : lea rax, [rip + 0x2d961d] ; pop rbp ; ret
0xffffff800085cdc4 : lea rax, [rip + 0x2d983d] ; pop rbp ; ret
0xffffff8000858e94 : lea rax, [rip + 0x2dd69d] ; pop rbp ; ret
0xffffff8000832904 : lea rax, [rip + 0x302b65] ; pop rbp ; ret
0xffffff8000830a84 : lea rax, [rip + 0x3049bd] ; pop rbp ; ret
0xffffff800082f744 : lea rax, [rip + 0x305cd5] ; pop rbp ; ret
0xffffff800082ec34 : lea rax, [rip + 0x3067bd] ; pop rbp ; ret
0xffffff800082e0f4 : lea rax, [rip + 0x3072d5] ; pop rbp ; ret
0xffffff800082c214 : lea rax, [rip + 0x30918d] ; pop rbp ; ret
0xffffff800082b5f4 : lea rax, [rip + 0x309d85] ; pop rbp ; ret
0xffffff8000818e04 : lea rax, [rip + 0x31c54d] ; pop rbp ; ret
0xffffff8000818124 : lea rax, [rip + 0x31d195] ; pop rbp ; ret
0xffffff80008162d4 : lea rax, [rip + 0x31efbd] ; pop rbp ; ret
0xffffff8000814d74 : lea rax, [rip + 0x3204f5] ; pop rbp ; ret
0xffffff8000814374 : lea rax, [rip + 0x320ecd] ; pop rbp ; ret
0xffffff8000813bb4 : lea rax, [rip + 0x321665] ; pop rbp ; ret
0xffffff8000813114 : lea rax, [rip + 0x3220dd] ; pop rbp ; ret
0xffffff8000811b04 : lea rax, [rip + 0x3236c5] ; pop rbp ; ret
0xffffff8000810e24 : lea rax, [rip + 0x32437d] ; pop rbp ; ret
0xffffff80006564a8 : lea rax, [rip + 0x3b16a1] ; pop rbp ; ret
0xffffff800065648c : lea rax, [rip + 0x3b1735] ; pop rbp ; ret
0xffffff800065649a : lea rax, [rip + 0x3b179f] ; pop rbp ; ret
0xffffff800065647e : lea rax, [rip + 0x3b1833] ; pop rbp ; ret
0xffffff800065646b : lea rax, [rip + 0x3b18be] ; pop rbp ; ret
0xffffff80005cfa7b : lea rax, [rip + 0x3f641a] ; pop rbp ; ret
0xffffff80005562eb : lea rax, [rip + 0x436c77] ; pop rbp ; ret
0xffffff80005b24a6 : lea rax, [rip + 0x5701d3] ; pop rbp ; ret
0xffffff80004f9e80 : lea rax, [rip + 0x5dd2a1] ; pop rbp ; ret
0xffffff80003c6177 : lea rax, [rip + 0x5ffd1e] ; pop rbp ; ret
0xffffff8000391154 : lea rax, [rip + 0x6a6f65] ; pop rbp ; ret
0xffffff8000366e94 : lea rax, [rip + 0x6c5bd5] ; pop rbp ; ret
0xffffff8000267876 : lea rax, [rip + 0x839213] ; pop rbp ; ret
0xffffff80002a0414 : lea rax, [rip + 0x84c015] ; pop rbp ; ret
0xffffff8000290ee4 : lea rax, [rip + 0x85a425] ; pop rbp ; ret
0xffffff8000290ed4 : lea rax, [rip + 0x85a435] ; pop rbp ; ret
0xffffff8000290ec4 : lea rax, [rip + 0x85a445] ; pop rbp ; ret
0xffffff800083c2e4 : lea rax, [rip + 0xe7f75] ; pop rbp ; ret
0xffffff80004d26a5 : lea rax, [rsi + rdi] ; or rax, rdx ; pop rbp ; ret
0xffffff80003b66ff : lea rbx, [rbx + 4] ; jmp 0xffffff80003b6732
0xffffff8000454359 : lea rbx, [rip + 0x606200] ; call qword ptr [rbx + rax*8]
0xffffff8000264da1 : lea rbx, [rip + 0x6d1663] ; je 0xffffff8000264df9 ; call rax
0xffffff800060ca75 : lea rcx, [rbp - 0x180] ; call rax
0xffffff8000606a0f : lea rcx, [rbp - 0x200] ; call rax
0xffffff8000808080 : lea rcx, [rbp - 0x3c] ; jmp rdx
0xffffff8000679526 : lea rcx, [rbp - 0x68] ; xor esi, esi ; call rax
0xffffff80005bca99 : lea rcx, [rbp - 0xd0] ; call rbx
0xffffff800057e15a : lea rcx, [rdi + 0x78] ; cmovne rax, rcx ; pop rbp ; ret
0xffffff8000390b78 : lea rdi, [r13 + 0x148] ; call rax
0xffffff80005c6885 : lea rdi, [r14 + 0x120] ; call 0xffffff80005c2b79
0xffffff800054fdbc : lea rdi, [r14 + rcx*8] ; mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff8000754a8b : lea rdi, [rbp - 0x108] ; call rcx
0xffffff80008ed85f : lea rdi, [rbp - 0x10] ; call r8
0xffffff80008ed8f6 : lea rdi, [rbp - 0x10] ; call rax
0xffffff8000607db2 : lea rdi, [rbp - 0x128] ; call rcx
0xffffff800060c7f1 : lea rdi, [rbp - 0x180] ; call rcx
0xffffff8000606968 : lea rdi, [rbp - 0x200] ; call rcx
0xffffff8000389781 : lea rdi, [rbp - 0x2c] ; call qword ptr [rax]
0xffffff80007d969f : lea rdi, [rbp - 0x474] ; call 0xffffff80007b58b9
0xffffff80007100b6 : lea rdi, [rbp - 0x60] ; mov r14, rdx ; call 0xffffff800078c389
0xffffff80004b1df3 : lea rdi, [rbp - 0x610] ; call 0xffffff800010e089
0xffffff8000556b61 : lea rdi, [rbp - 0x78] ; call 0xffffff8000752d76
0xffffff80006568b2 : lea rdi, [rbp - 0x80] ; mov rdx, r15 ; call rax
0xffffff800042b7c8 : lea rdi, [rbp - 0x828] ; call 0xffffff80004c79e9
0xffffff8000389cb6 : lea rdi, [rbp - 0x88] ; call r12
0xffffff80005c92b8 : lea rdi, [rbx + 0x48] ; call 0xffffff80005c5506
0xffffff8000689819 : lea rdi, [rip + 0x327cba] ; jmp 0xffffff80006897ec
0xffffff80005e5309 : lea rdi, [rip + 0x3b5641] ; jmp 0xffffff80005e52dc
0xffffff800068c37e : lea rdi, [rip + 0x44fcc3] ; call 0xffffff80003985e9
0xffffff80005d6551 : lea rdi, [rip + 0x5034e4] ; call 0xffffff8000392799
0xffffff800055426f : lea rdi, [rip + 0x514a9e] ; xor esi, esi ; call rax
0xffffff800050e46c : lea rdi, [rip + 0x51eb7d] ; call 0xffffff800039a709
0xffffff8000566e29 : lea rdi, [rip + 0x5717d0] ; call 0xffffff8000393049
0xffffff8000566e08 : lea rdi, [rip + 0x5717f1] ; call 0xffffff8000393049
0xffffff8000566d53 : lea rdi, [rip + 0x5718a6] ; call 0xffffff8000393049
0xffffff800053648a : lea rdi, [rip + 0x5a1b0f] ; call 0xffffff8000392799
0xffffff8000411ec0 : lea rdi, [rip + 0x5c1c2f] ; call 0xffffff800028e1b9
0xffffff80003aafc7 : lea rdi, [rip + 0x753b62] ; call 0xffffff8000397209
0xffffff80003a61a5 : lea rdi, [rip + 0x75910c] ; call 0xffffff80003923e9
0xffffff80002ae401 : lea rdi, [rip + 0x77ebe8] ; call 0xffffff800039a709
0xffffff80003767ef : lea rdi, [rip + 0x786252] ; call 0xffffff8000392a49
0xffffff8000346ddc : lea rdi, [rip + 0x7b34ad] ; call 0xffffff8000393049
0xffffff80004b5bf4 : lea rdx, [rax + 0x10] ; mov qword ptr [rcx + 0x18], rdx ; jmp 0xffffff80004b5bc9
0xffffff8000744286 : lea rdx, [rbp - 0x118] ; call rax
0xffffff8000765ce1 : lea rdx, [rbp - 0x18] ; mov esi, 1 ; call rax
0xffffff80002938e5 : lea rdx, [rbp - 0x20] ; mov rsi, r15 ; call qword ptr [rax]
0xffffff8000489960 : lea rdx, [rbp - 0x28] ; mov rsi, r14 ; call 0xffffff8000495bc9
0xffffff800064765d : lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff800060e5ac : lea rdx, [rbp - 0x78] ; call rcx
0xffffff8000419d7e : lea rdx, [rbp - 0x78] ; mov rdi, r15 ; call 0xffffff8000445fb9
0xffffff800048948e : lea rdx, [rbp - 0x98] ; call qword ptr [r15]
0xffffff80003a9425 : lea rdx, [rbp - 0xd8] ; call r15
0xffffff8000254402 : lea rdx, [rdx + rax*8] ; jmp 0xffffff800025441d
0xffffff8000258152 : lea rdx, [rdx + rax*8] ; jmp 0xffffff800025816d
0xffffff80008c1ec6 : lea rdx, [rip + 0x136570] ; call 0xffffff800028e159
0xffffff80007c1f0e : lea rdx, [rip + 0x21c361] ; call 0xffffff800028e1b9
0xffffff80007c1ee3 : lea rdx, [rip + 0x21c38c] ; call 0xffffff800028e1b9
0xffffff80007c1ebc : lea rdx, [rip + 0x21c3b3] ; call 0xffffff800028e1b9
0xffffff80006dba1c : lea rdx, [rip + 0x3fb705] ; call rax
0xffffff8000351e79 : lea rdx, [rip + 0x6071ee] ; call 0xffffff800028e159
0xffffff80004cc1c0 : lea rdx, [rip + 0x60af61] ; call rax
0xffffff80004cc09c : lea rdx, [rip + 0x60b085] ; call rax
0xffffff80004cc04b : lea rdx, [rip + 0x60b0d6] ; call rcx
0xffffff8000251ec9 : lea rdx, [rip + 0x6f6835] ; call 0xffffff800028e159
0xffffff8000251ea8 : lea rdx, [rip + 0x6f6841] ; call 0xffffff800028e159
0xffffff8000251f0b : lea rdx, [rip + 0x6f6845] ; call 0xffffff800028e159
0xffffff8000251eea : lea rdx, [rip + 0x6f6856] ; call 0xffffff800028e159
0xffffff8000251f2c : lea rdx, [rip + 0x6f6e0a] ; call 0xffffff800028e159
0xffffff8000604c82 : lea rdx, [rsi + r13 + 8] ; lea rsi, [rbp - 0x40] ; call rax
0xffffff800055fc51 : lea rsi, [r14 + 0x14] ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800055eeb4 : lea rsi, [r14 + 0x14] ; mov rdx, qword ptr [rbp - 0x50] ; call rcx
0xffffff80002dc49a : lea rsi, [r14 + 0x30] ; call rax
0xffffff800055ee6f : lea rsi, [r14 + 0x88] ; call rcx
0xffffff8000477a94 : lea rsi, [rax + 0x14] ; xor ecx, ecx ; pop rbp ; jmp r9
0xffffff8000658cdc : lea rsi, [rbp - 0x178] ; call rcx
0xffffff800070715f : lea rsi, [rbp - 0x30] ; call rax
0xffffff80007dab4b : lea rsi, [rbp - 0x38] ; xor ecx, ecx ; mov rdx, r12 ; call rax
0xffffff8000604c87 : lea rsi, [rbp - 0x40] ; call rax
0xffffff80008e0347 : lea rsi, [rbp - 0x60] ; mov edi, 0x8008501a ; call rax
0xffffff80008e031a : lea rsi, [rbp - 0x60] ; mov edi, 0x8008501b ; call rax
0xffffff80006788d2 : lea rsi, [rbp - 0x68] ; call rbx
0xffffff80008bbee3 : lea rsi, [rbp - 0x70] ; call r10
0xffffff800067898a : lea rsi, [rbp - 0x74] ; mov edx, r15d ; call rbx
0xffffff8000429654 : lea rsi, [rcx + 0x28] ; mov qword ptr [rdx + 0x30], rsi ; jmp 0xffffff8000429629
0xffffff8000859b9b : lea rsi, [rip + 0x198af6] ; pop rbp ; jmp rax
0xffffff8000287389 : leave ; adc byte ptr [rcx - 0x7cb7abb5], cl ; ret
0xffffff8000421248 : leave ; add al, 0xf6 ; ret
0xffffff80007054f2 : leave ; add al, byte ptr [rax + rax*8 - 0x926baf1] ; ret
0xffffff80004c4b5b : leave ; add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0x4104
0xffffff80004d5c48 : leave ; add byte ptr [rax], 0 ; add byte ptr [rsi - 9], ah ; ret 0x564
0xffffff800040e709 : leave ; add byte ptr [rax], 0 ; add dh, dh ; ret 0xf82
0xffffff80007aa339 : leave ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff8000327e1a : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rax ; or cl, ch ; ret
0xffffff80007d85b6 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80008ca9c6 : leave ; add byte ptr es:[rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0xffffff80008a5c3e : leave ; add cl, byte ptr [rax - 1] ; ret
0xffffff8000617ed2 : leave ; add cl, byte ptr [rcx + 0x58b584b] ; ret
0xffffff80006d4b65 : leave ; add dword ptr [rax + 0x13b8b], ecx ; add dh, dh ; ret 0x7401
0xffffff800054882a : leave ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005aff53 : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800056383c : leave ; add eax, 0x16b800 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003937cb : leave ; add ecx, dword ptr [rax - 0x77] ; adc byte ptr [rax - 0x7f], cl ; ret 0x3000
0xffffff80008f53f7 : leave ; and al, 0x24 ; add byte ptr [rax - 1], cl ; ret
0xffffff80004a23fd : leave ; and word ptr [rdi + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff8000807d3d : leave ; and word ptr [rdx + rcx*8 + 0x18], 0xfffa ; pop rbp ; ret
0xffffff8000803570 : leave ; and word ptr [rdx + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff80002ae1fe : leave ; call 0xffffff80002ca338
0xffffff80008ba246 : leave ; call 0xffffff8000315288
0xffffff8000388891 : leave ; call 0xffffff8000384b43
0xffffff8000339680 : leave ; call 0xffffff80003858e3
0xffffff80005ba8b0 : leave ; call 0xffffff8000396b83
0xffffff800076b934 : leave ; call 0xffffff8000396b84
0xffffff80007e303b : leave ; call 0xffffff8000396b87
0xffffff80003adbef : leave ; call 0xffffff80003a9ed3
0xffffff80007f8576 : leave ; call 0xffffff80004cd168
0xffffff8000815073 : leave ; call 0xffffff80008c12a3
0xffffff8000757b39 : leave ; call r15
0xffffff80004a1d17 : leave ; call rax
0xffffff800026715d : leave ; call rbx
0xffffff80005650a3 : leave ; cld ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80005841ee : leave ; cmove dx, ax ; movzx eax, dx ; pop rbp ; ret
0xffffff800066a611 : leave ; cmove eax, edx ; jmp 0xffffff800066a620
0xffffff8000716663 : leave ; cmove edx, ecx ; add eax, edx ; pop rbp ; ret
0xffffff8000328488 : leave ; cmove rax, rcx ; pop rbp ; ret
0xffffff80003acde6 : leave ; cmove rdi, rcx ; call rax
0xffffff80003a27cc : leave ; cmove rdi, rcx ; pop rbp ; jmp rax
0xffffff80008b9624 : leave ; cmovne rax, rdx ; jmp 0xffffff80008b9691
0xffffff80008d8fb3 : leave ; cmp bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800087966a : leave ; cmp eax, edx ; cmovg ecx, edx ; sub eax, ecx ; pop rbp ; ret
0xffffff800079db4b : leave ; cmp ecx, -1 ; jne 0xffffff800079db37 ; pop rbp ; ret
0xffffff800075e448 : leave ; cmp ecx, 1 ; jg 0xffffff800075e429 ; xor eax, eax ; pop rbp ; ret
0xffffff800072c17b : leave ; cmp ecx, r10d ; jae 0xffffff800072c157 ; pop rbp ; ret
0xffffff80005fff08 : leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000875313 : leave ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000370614 : leave ; imul eax, dword ptr [rax], -0x77 ; ret 0xca31
0xffffff800028eb23 : leave ; inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003baab3 : leave ; insd dword ptr [rdi], dx ; je 0xffffff80003baabc ; pop rbp ; ret
0xffffff80004575a7 : leave ; int 0x6b
0xffffff8000b4582c : leave ; jae 0xffffff8000b458a7 ; ror byte ptr [rcx + 0x21], 1 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800028777f : leave ; je 0xffffff800028778c ; mov eax, dword ptr [rcx + 0x2c] ; pop rbp ; ret
0xffffff8000288fee : leave ; je 0xffffff8000288ffc ; call rcx
0xffffff800028a76e : leave ; je 0xffffff800028a77c ; call rcx
0xffffff80002b009e : leave ; je 0xffffff80002b00ac ; call rcx
0xffffff80002b034e : leave ; je 0xffffff80002b035c ; call rcx
0xffffff80002c0987 : leave ; je 0xffffff80002c0994 ; mov eax, dword ptr [rcx + 0x4c] ; pop rbp ; ret
0xffffff80002cd19c : leave ; je 0xffffff80002cd1ab ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80002edaf2 : leave ; je 0xffffff80002edaff ; mov dword ptr [rcx + 0x48], edi ; pop rbp ; ret
0xffffff800034fb36 : leave ; je 0xffffff800034fb49 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003907a8 : leave ; je 0xffffff80003907b5 ; mov eax, dword ptr [rcx + 0x1c] ; pop rbp ; ret
0xffffff80003907e8 : leave ; je 0xffffff80003907f7 ; movzx eax, byte ptr [rcx + 0x11] ; pop rbp ; ret
0xffffff80003a2971 : leave ; je 0xffffff80003a2979 ; call rcx
0xffffff80003a29a1 : leave ; je 0xffffff80003a29a9 ; call rcx
0xffffff80003a2ad7 : leave ; je 0xffffff80003a2afe ; mov esi, eax ; call rcx
0xffffff80003a41f6 : leave ; je 0xffffff80003a4203 ; mov dword ptr [rcx + 0x30], eax ; pop rbp ; ret
0xffffff80003ab86e : leave ; je 0xffffff80003ab87c ; call rcx
0xffffff80003ab908 : leave ; je 0xffffff80003aba95 ; call rcx
0xffffff80004f9d4f : leave ; je 0xffffff80004f9d5e ; mov rax, qword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff8000557958 : leave ; je 0xffffff800055796e ; mov rdi, r13 ; mov rsi, rax ; call rcx
0xffffff80005841ca : leave ; je 0xffffff80005841d7 ; xor eax, eax ; pop rbp ; ret
0xffffff80005c132d : leave ; je 0xffffff80005c133c ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80005c179e : leave ; je 0xffffff80005c17c1 ; xor esi, esi ; mov rdi, rbx ; call rcx
0xffffff800063fd5f : leave ; je 0xffffff800063fd70 ; mov rdi, rbx ; call rcx
0xffffff80006456ec : leave ; je 0xffffff80006456f9 ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff8000756bb4 : leave ; je 0xffffff8000756bc3 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff8000756be2 : leave ; je 0xffffff8000756bf1 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80007a73a0 : leave ; je 0xffffff80007a73c4 ; mov rdi, r12 ; mov rsi, r15 ; call rcx
0xffffff80007af84e : leave ; je 0xffffff80007af85d ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007af87e : leave ; je 0xffffff80007af88d ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80007af9fe : leave ; je 0xffffff80007afa0d ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80007b11de : leave ; je 0xffffff80007b11ed ; mov rax, qword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff80007b2797 : leave ; je 0xffffff80007b27ae ; mov rdi, rbx ; mov rsi, r14 ; call rcx
0xffffff80007f6fbe : leave ; je 0xffffff80007f6fcd ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007fcc97 : leave ; je 0xffffff80007fcca4 ; mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff8000840412 : leave ; je 0xffffff800084042c ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800086072c : leave ; je 0xffffff8000860739 ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff800086dfb1 : leave ; je 0xffffff800086dfb9 ; call rcx
0xffffff8000870592 : leave ; je 0xffffff800087059e ; mov rsi, qword ptr [rcx] ; call rax
0xffffff80008802b2 : leave ; je 0xffffff80008802bd ; inc dword ptr [rdx] ; pop rbp ; ret
0xffffff80008a004f : leave ; je 0xffffff80008a005e ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80008c45ac : leave ; je 0xffffff80008c45b7 ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff80008ee3f9 : leave ; je 0xffffff80008ee3d9 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008ee799 : leave ; je 0xffffff80008ee776 ; mov rdi, r14 ; call rcx
0xffffff80008ee979 : leave ; je 0xffffff80008ee959 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008eeb49 : leave ; je 0xffffff80008eeb26 ; mov rdi, r14 ; call rcx
0xffffff80008eed29 : leave ; je 0xffffff80008eed09 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f265d : leave ; je 0xffffff80008f2671 ; mov rdi, r14 ; call rcx
0xffffff80008f26b5 : leave ; je 0xffffff80008f2696 ; mov rdi, r14 ; call rcx
0xffffff80008f273a : leave ; je 0xffffff80008f274e ; mov rdi, r14 ; call rcx
0xffffff80008f2792 : leave ; je 0xffffff80008f2776 ; mov rdi, r14 ; call rcx
0xffffff80008f28fa : leave ; je 0xffffff80008f2914 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2952 : leave ; je 0xffffff80008f2939 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f29ba : leave ; je 0xffffff80008f29ce ; mov rdi, r14 ; call rcx
0xffffff80008f2a12 : leave ; je 0xffffff80008f29f6 ; mov rdi, r14 ; call rcx
0xffffff80008f2a6a : leave ; je 0xffffff80008f2a7e ; mov rdi, r14 ; call rcx
0xffffff80008f2ac2 : leave ; je 0xffffff80008f2aa6 ; mov rdi, r14 ; call rcx
0xffffff80008f2b1a : leave ; je 0xffffff80008f2b34 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2b72 : leave ; je 0xffffff80008f2b59 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2d6d : leave ; je 0xffffff80008f2d87 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2dc5 : leave ; je 0xffffff80008f2da9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f2f26 : leave ; je 0xffffff80008f2f09 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f30e6 : leave ; je 0xffffff80008f30c9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f32c9 : leave ; je 0xffffff80008f32a9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f34a9 : leave ; je 0xffffff80008f3489 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f3679 : leave ; je 0xffffff80008f3659 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f3839 : leave ; je 0xffffff80008f3819 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f39f9 : leave ; je 0xffffff80008f39d9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f41d9 : leave ; je 0xffffff80008f41b6 ; mov rdi, r14 ; call rcx
0xffffff80008f43b9 : leave ; je 0xffffff80008f4399 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f4779 : leave ; je 0xffffff80008f4759 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f4d09 : leave ; je 0xffffff80008f4ce6 ; mov rdi, r14 ; call rcx
0xffffff80008f501d : leave ; je 0xffffff80008f5031 ; mov rdi, r15 ; call rcx
0xffffff80008f5075 : leave ; je 0xffffff80008f5056 ; mov rdi, r15 ; call rcx
0xffffff80008f511d : leave ; je 0xffffff80008f5131 ; mov rdi, r15 ; call rcx
0xffffff80008f5175 : leave ; je 0xffffff80008f5156 ; mov rdi, r15 ; call rcx
0xffffff80008f520d : leave ; je 0xffffff80008f5221 ; mov rdi, r14 ; call rcx
0xffffff80008f5265 : leave ; je 0xffffff80008f5246 ; mov rdi, r14 ; call rcx
0xffffff80008f53ed : leave ; je 0xffffff80008f5401 ; mov rdi, r15 ; call rcx
0xffffff80008f5445 : leave ; je 0xffffff80008f5426 ; mov rdi, r15 ; call rcx
0xffffff80008f54cd : leave ; je 0xffffff80008f54e1 ; mov rdi, r15 ; call rcx
0xffffff80008f5525 : leave ; je 0xffffff80008f5506 ; mov rdi, r15 ; call rcx
0xffffff80008f559d : leave ; je 0xffffff80008f55b1 ; mov rdi, r14 ; call rcx
0xffffff80008f55f5 : leave ; je 0xffffff80008f55d6 ; mov rdi, r14 ; call rcx
0xffffff80008f566d : leave ; je 0xffffff80008f5687 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f56c9 : leave ; je 0xffffff80008f56a9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f570d : leave ; je 0xffffff80008f5721 ; mov rdi, r14 ; call rcx
0xffffff80008f5765 : leave ; je 0xffffff80008f5746 ; mov rdi, r14 ; call rcx
0xffffff80008f587d : leave ; je 0xffffff80008f5897 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008f58d5 : leave ; je 0xffffff80008f58b9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008feee9 : leave ; je 0xffffff80008feec6 ; mov rdi, r14 ; call rcx
0xffffff80008ff0a9 : leave ; je 0xffffff80008ff086 ; mov rdi, r14 ; call rcx
0xffffff80008ff279 : leave ; je 0xffffff80008ff259 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80008ff429 : leave ; je 0xffffff80008ff406 ; mov rdi, r14 ; call rcx
0xffffff80008ff5f9 : leave ; je 0xffffff80008ff5d9 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff80008ff7a9 : leave ; je 0xffffff80008ff786 ; mov rdi, r14 ; call rcx
0xffffff80008fff39 : leave ; je 0xffffff80008fff19 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff800090004d : leave ; je 0xffffff8000900061 ; mov rdi, r15 ; call rcx
0xffffff80009000a5 : leave ; je 0xffffff8000900086 ; mov rdi, r15 ; call rcx
0xffffff800090010d : leave ; je 0xffffff8000900121 ; mov rdi, r15 ; call rcx
0xffffff8000900165 : leave ; je 0xffffff8000900146 ; mov rdi, r15 ; call rcx
0xffffff80009002ad : leave ; je 0xffffff80009002c3 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff8000900305 : leave ; je 0xffffff80009002e7 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff800090097d : leave ; je 0xffffff8000900991 ; mov rdi, r15 ; call rcx
0xffffff80009009d5 : leave ; je 0xffffff80009009b6 ; mov rdi, r15 ; call rcx
0xffffff8000900a3d : leave ; je 0xffffff8000900a51 ; mov rdi, r15 ; call rcx
0xffffff8000900a95 : leave ; je 0xffffff8000900a76 ; mov rdi, r15 ; call rcx
0xffffff8000900bdd : leave ; je 0xffffff8000900bf3 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff8000900c35 : leave ; je 0xffffff8000900c17 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff80009014ad : leave ; je 0xffffff80009014c1 ; mov rdi, r15 ; call rcx
0xffffff8000901505 : leave ; je 0xffffff80009014e6 ; mov rdi, r15 ; call rcx
0xffffff80009015ad : leave ; je 0xffffff80009015c1 ; mov rdi, r15 ; call rcx
0xffffff8000901605 : leave ; je 0xffffff80009015e6 ; mov rdi, r15 ; call rcx
0xffffff800090182d : leave ; je 0xffffff8000901843 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff8000901885 : leave ; je 0xffffff8000901867 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff80009026fd : leave ; je 0xffffff8000902711 ; mov rdi, r15 ; call rcx
0xffffff8000902755 : leave ; je 0xffffff8000902736 ; mov rdi, r15 ; call rcx
0xffffff80009027bd : leave ; je 0xffffff80009027d1 ; mov rdi, r15 ; call rcx
0xffffff8000902815 : leave ; je 0xffffff80009027f6 ; mov rdi, r15 ; call rcx
0xffffff8000902b69 : leave ; je 0xffffff8000902b49 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009033ed : leave ; je 0xffffff8000903401 ; mov rdi, r15 ; call rcx
0xffffff8000903445 : leave ; je 0xffffff8000903426 ; mov rdi, r15 ; call rcx
0xffffff80009034ad : leave ; je 0xffffff80009034c1 ; mov rdi, r15 ; call rcx
0xffffff8000903505 : leave ; je 0xffffff80009034e6 ; mov rdi, r15 ; call rcx
0xffffff8000903859 : leave ; je 0xffffff8000903839 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009058ad : leave ; je 0xffffff80009058c1 ; mov rdi, r14 ; call rcx
0xffffff8000905905 : leave ; je 0xffffff80009058e6 ; mov rdi, r14 ; call rcx
0xffffff800090598d : leave ; je 0xffffff80009059a1 ; mov rdi, r14 ; call rcx
0xffffff80009059e5 : leave ; je 0xffffff80009059c6 ; mov rdi, r14 ; call rcx
0xffffff8000905a7d : leave ; je 0xffffff8000905a97 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000905ad5 : leave ; je 0xffffff8000905ab9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000906b79 : leave ; je 0xffffff8000906b59 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009070d9 : leave ; je 0xffffff80009070b9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000907459 : leave ; je 0xffffff8000907436 ; mov rdi, r14 ; call rcx
0xffffff8000907629 : leave ; je 0xffffff8000907609 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80009077e9 : leave ; je 0xffffff80009077c9 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000907acd : leave ; je 0xffffff8000907ae1 ; mov rdi, r15 ; call rcx
0xffffff8000907b25 : leave ; je 0xffffff8000907b06 ; mov rdi, r15 ; call rcx
0xffffff8000907c5d : leave ; je 0xffffff8000907c71 ; mov rdi, r15 ; call rcx
0xffffff8000907cb5 : leave ; je 0xffffff8000907c96 ; mov rdi, r15 ; call rcx
0xffffff8000907e09 : leave ; je 0xffffff8000907de6 ; mov rdi, r14 ; call rcx
0xffffff8000909629 : leave ; je 0xffffff8000909609 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff800090970d : leave ; je 0xffffff800090972d ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff8000909765 : leave ; je 0xffffff8000909749 ; mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff8000909a79 : leave ; je 0xffffff8000909a59 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000909c39 : leave ; je 0xffffff8000909c19 ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000909de9 : leave ; je 0xffffff8000909dc6 ; mov rdi, r14 ; call rcx
0xffffff8000909fc9 : leave ; je 0xffffff8000909fa9 ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800090a3c9 : leave ; je 0xffffff800090a3a9 ; mov rdi, r12 ; mov esi, r15d ; call rcx
0xffffff800090a531 : leave ; je 0xffffff800090a5b1 ; mov rdi, r12 ; mov esi, r13d ; call rcx
0xffffff800090a5fc : leave ; je 0xffffff800090a5d9 ; mov rdi, r12 ; mov esi, r13d ; call rcx
0xffffff800090a71d : leave ; je 0xffffff800090a731 ; mov rdi, r14 ; call rcx
0xffffff800090a775 : leave ; je 0xffffff800090a756 ; mov rdi, r14 ; call rcx
0xffffff80005bfad3 : leave ; jg 0xffffff80005bfaa7 ; jmp 0xffffff80005bfae8
0xffffff80005bfc7e : leave ; jg 0xffffff80005bfc44 ; jmp 0xffffff80005bfc90
0xffffff800049162e : leave ; jmp 0xffffff80004919c8
0xffffff800054748a : leave ; jmp 0xffffff80005474ab
0xffffff80005200d9 : leave ; jmp rcx
0xffffff80002e9bd6 : leave ; jne 0xffffff80002e9be1 ; xor eax, eax ; pop rbp ; ret
0xffffff8000328415 : leave ; jne 0xffffff8000328404 ; pop rbp ; ret
0xffffff80003284b2 : leave ; jne 0xffffff80003284a4 ; pop rbp ; ret
0xffffff800035d9af : leave ; jne 0xffffff800035d9a4 ; pop rbp ; ret
0xffffff8000366773 : leave ; jne 0xffffff8000366764 ; pop rbp ; ret
0xffffff80003667bb : leave ; jne 0xffffff80003667a4 ; pop rbp ; ret
0xffffff80003668aa : leave ; jne 0xffffff80003668a7 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000389862 : leave ; jne 0xffffff8000389875 ; call qword ptr [rax]
0xffffff800040c045 : leave ; jne 0xffffff800040c024 ; pop rbp ; ret
0xffffff8000419038 : leave ; jne 0xffffff8000419039 ; jmp 0xffffff80004191e3
0xffffff800041eced : leave ; jne 0xffffff800041ece4 ; pop rbp ; ret
0xffffff800041ee15 : leave ; jne 0xffffff800041eda4 ; pop rbp ; ret
0xffffff8000437775 : leave ; jne 0xffffff8000437782 ; xor eax, eax ; pop rbp ; ret
0xffffff8000448f7d : leave ; jne 0xffffff8000448f74 ; pop rbp ; ret
0xffffff8000530ed4 : leave ; jne 0xffffff8000530ec4 ; pop rbp ; ret
0xffffff8000530f72 : leave ; jne 0xffffff8000530f64 ; pop rbp ; ret
0xffffff800057f1d2 : leave ; jne 0xffffff800057f1c4 ; pop rbp ; ret
0xffffff80005801b6 : leave ; jne 0xffffff80005801a4 ; pop rbp ; ret
0xffffff8000581569 : leave ; jne 0xffffff8000581554 ; pop rbp ; ret
0xffffff8000582491 : leave ; jne 0xffffff8000582474 ; pop rbp ; ret
0xffffff8000582536 : leave ; jne 0xffffff8000582524 ; pop rbp ; ret
0xffffff80005825b1 : leave ; jne 0xffffff8000582594 ; pop rbp ; ret
0xffffff80005a8ecf : leave ; jne 0xffffff80005a8e18 ; pop rbp ; ret
0xffffff80005a8f82 : leave ; jne 0xffffff80005a8f74 ; pop rbp ; ret
0xffffff80005b1122 : leave ; jne 0xffffff80005b1114 ; pop rbp ; ret
0xffffff80005b2156 : leave ; jne 0xffffff80005b2144 ; pop rbp ; ret
0xffffff80005bf826 : leave ; jne 0xffffff80005bf814 ; pop rbp ; ret
0xffffff80005e47c0 : leave ; jne 0xffffff80005e47b4 ; pop rbp ; ret
0xffffff80005e4862 : leave ; jne 0xffffff80005e4854 ; pop rbp ; ret
0xffffff80005ebec6 : leave ; jne 0xffffff80005ebeb4 ; pop rbp ; ret
0xffffff8000626483 : leave ; jne 0xffffff8000626474 ; pop rbp ; ret
0xffffff80006264ca : leave ; jne 0xffffff80006264b4 ; pop rbp ; ret
0xffffff800062653f : leave ; jne 0xffffff8000626534 ; pop rbp ; ret
0xffffff8000637ad6 : leave ; jne 0xffffff8000637ac4 ; pop rbp ; ret
0xffffff8000687fa2 : leave ; jne 0xffffff8000687f94 ; pop rbp ; ret
0xffffff80006a4402 : leave ; jne 0xffffff80006a43f4 ; pop rbp ; ret
0xffffff80006c5a4d : leave ; jne 0xffffff80006c59f4 ; pop rbp ; ret
0xffffff80006c97ff : leave ; jne 0xffffff80006c97f6 ; xor eax, eax ; pop rbp ; ret
0xffffff800077d0ce : leave ; jne 0xffffff800077d0c4 ; pop rbp ; ret
0xffffff800077e29a : leave ; jne 0xffffff800077e294 ; pop rbp ; ret
0xffffff800077e3ae : leave ; jne 0xffffff800077e3a4 ; pop rbp ; ret
0xffffff80007f5a46 : leave ; jne 0xffffff80007f5a34 ; pop rbp ; ret
0xffffff8000800787 : leave ; jne 0xffffff8000800788 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff80008007ac
0xffffff8000800847 : leave ; jne 0xffffff8000800848 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff800080086d
0xffffff8000800bd7 : leave ; jne 0xffffff8000800bd8 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800bfc
0xffffff8000800c97 : leave ; jne 0xffffff8000800c98 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800cbc
0xffffff8000800d57 : leave ; jne 0xffffff8000800d58 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800d7c
0xffffff8000800e17 : leave ; jne 0xffffff8000800e18 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800e3c
0xffffff8000811b94 : leave ; jne 0xffffff8000811b84 ; pop rbp ; ret
0xffffff8000813324 : leave ; jne 0xffffff8000813314 ; pop rbp ; ret
0xffffff8000814404 : leave ; jne 0xffffff80008143f4 ; pop rbp ; ret
0xffffff8000814e04 : leave ; jne 0xffffff8000814df4 ; pop rbp ; ret
0xffffff8000816364 : leave ; jne 0xffffff8000816354 ; pop rbp ; ret
0xffffff8000818e94 : leave ; jne 0xffffff8000818e84 ; pop rbp ; ret
0xffffff800082b684 : leave ; jne 0xffffff800082b674 ; pop rbp ; ret
0xffffff800082c2a4 : leave ; jne 0xffffff800082c294 ; pop rbp ; ret
0xffffff800082e184 : leave ; jne 0xffffff800082e174 ; pop rbp ; ret
0xffffff800082ecc4 : leave ; jne 0xffffff800082ecb4 ; pop rbp ; ret
0xffffff800082f7d4 : leave ; jne 0xffffff800082f7c4 ; pop rbp ; ret
0xffffff8000830b14 : leave ; jne 0xffffff8000830b04 ; pop rbp ; ret
0xffffff8000832a94 : leave ; jne 0xffffff8000832a84 ; pop rbp ; ret
0xffffff800084b776 : leave ; jne 0xffffff800084b764 ; pop rbp ; ret
0xffffff800084cc1d : leave ; jne 0xffffff800084cc14 ; pop rbp ; ret
0xffffff800084fc4d : leave ; jne 0xffffff800084fc44 ; pop rbp ; ret
0xffffff8000858f24 : leave ; jne 0xffffff8000858f14 ; pop rbp ; ret
0xffffff800085ce54 : leave ; jne 0xffffff800085ce44 ; pop rbp ; ret
0xffffff800085d0b4 : leave ; jne 0xffffff800085d0a4 ; pop rbp ; ret
0xffffff8000860fb4 : leave ; jne 0xffffff8000860fa4 ; pop rbp ; ret
0xffffff8000862844 : leave ; jne 0xffffff8000862834 ; pop rbp ; ret
0xffffff8000862ad4 : leave ; jne 0xffffff8000862ac4 ; pop rbp ; ret
0xffffff8000862d34 : leave ; jne 0xffffff8000862d24 ; pop rbp ; ret
0xffffff8000862f94 : leave ; jne 0xffffff8000862f84 ; pop rbp ; ret
0xffffff80008631f4 : leave ; jne 0xffffff80008631e4 ; pop rbp ; ret
0xffffff8000863454 : leave ; jne 0xffffff8000863444 ; pop rbp ; ret
0xffffff80008636b4 : leave ; jne 0xffffff80008636a4 ; pop rbp ; ret
0xffffff80008813c4 : leave ; jne 0xffffff80008813b4 ; pop rbp ; ret
0xffffff80008816e4 : leave ; jne 0xffffff80008816d4 ; pop rbp ; ret
0xffffff8000881af4 : leave ; jne 0xffffff8000881ae4 ; pop rbp ; ret
0xffffff8000882104 : leave ; jne 0xffffff80008820f4 ; pop rbp ; ret
0xffffff8000882484 : leave ; jne 0xffffff8000882474 ; pop rbp ; ret
0xffffff8000884784 : leave ; jne 0xffffff8000884774 ; pop rbp ; ret
0xffffff8000884ec4 : leave ; jne 0xffffff8000884eb4 ; pop rbp ; ret
0xffffff80008851bc : leave ; jne 0xffffff80008851b4 ; pop rbp ; ret
0xffffff80008857f4 : leave ; jne 0xffffff80008857e4 ; pop rbp ; ret
0xffffff8000886084 : leave ; jne 0xffffff8000886074 ; pop rbp ; ret
0xffffff8000887ef4 : leave ; jne 0xffffff8000887ee4 ; pop rbp ; ret
0xffffff8000889d54 : leave ; jne 0xffffff8000889d44 ; pop rbp ; ret
0xffffff800088a984 : leave ; jne 0xffffff800088a974 ; pop rbp ; ret
0xffffff800088cc04 : leave ; jne 0xffffff800088cbf4 ; pop rbp ; ret
0xffffff800088eed4 : leave ; jne 0xffffff800088eec4 ; pop rbp ; ret
0xffffff8000890154 : leave ; jne 0xffffff8000890144 ; pop rbp ; ret
0xffffff80008912b4 : leave ; jne 0xffffff80008912a4 ; pop rbp ; ret
0xffffff8000891974 : leave ; jne 0xffffff8000891964 ; pop rbp ; ret
0xffffff8000892514 : leave ; jne 0xffffff8000892504 ; pop rbp ; ret
0xffffff8000893104 : leave ; jne 0xffffff80008930f4 ; pop rbp ; ret
0xffffff8000893f34 : leave ; jne 0xffffff8000893f24 ; pop rbp ; ret
0xffffff80008951b4 : leave ; jne 0xffffff80008951a4 ; pop rbp ; ret
0xffffff80008967d4 : leave ; jne 0xffffff80008967c4 ; pop rbp ; ret
0xffffff80008990a4 : leave ; jne 0xffffff8000899094 ; pop rbp ; ret
0xffffff800089b0e4 : leave ; jne 0xffffff800089b0d4 ; pop rbp ; ret
0xffffff800089b704 : leave ; jne 0xffffff800089b6f4 ; pop rbp ; ret
0xffffff800089ba34 : leave ; jne 0xffffff800089ba24 ; pop rbp ; ret
0xffffff800089bd64 : leave ; jne 0xffffff800089bd54 ; pop rbp ; ret
0xffffff800089d214 : leave ; jne 0xffffff800089d204 ; pop rbp ; ret
0xffffff80008a2aa4 : leave ; jne 0xffffff80008a2a94 ; pop rbp ; ret
0xffffff80008a5374 : leave ; jne 0xffffff80008a5364 ; pop rbp ; ret
0xffffff80008a6304 : leave ; jne 0xffffff80008a62f4 ; pop rbp ; ret
0xffffff80008a6c12 : leave ; jne 0xffffff80008a6c04 ; pop rbp ; ret
0xffffff80008a7204 : leave ; jne 0xffffff80008a71f4 ; pop rbp ; ret
0xffffff80008a7c14 : leave ; jne 0xffffff80008a7c04 ; pop rbp ; ret
0xffffff80008aaba4 : leave ; jne 0xffffff80008aab94 ; pop rbp ; ret
0xffffff80008ab1e4 : leave ; jne 0xffffff80008ab1d4 ; pop rbp ; ret
0xffffff80008ab544 : leave ; jne 0xffffff80008ab534 ; pop rbp ; ret
0xffffff80008ae0e4 : leave ; jne 0xffffff80008ae0d4 ; pop rbp ; ret
0xffffff80008af3f4 : leave ; jne 0xffffff80008af3e4 ; pop rbp ; ret
0xffffff80008b3e44 : leave ; jne 0xffffff80008b3e34 ; pop rbp ; ret
0xffffff80008b5184 : leave ; jne 0xffffff80008b5174 ; pop rbp ; ret
0xffffff80008b5d74 : leave ; jne 0xffffff80008b5d64 ; pop rbp ; ret
0xffffff80008b63c4 : leave ; jne 0xffffff80008b63b4 ; pop rbp ; ret
0xffffff80008c0b94 : leave ; jne 0xffffff80008c0b84 ; pop rbp ; ret
0xffffff80008c2ae4 : leave ; jne 0xffffff80008c2ad4 ; pop rbp ; ret
0xffffff80008c3774 : leave ; jne 0xffffff80008c3764 ; pop rbp ; ret
0xffffff80008c4244 : leave ; jne 0xffffff80008c4234 ; pop rbp ; ret
0xffffff80008c6811 : leave ; jne 0xffffff80008c6804 ; pop rbp ; ret
0xffffff80008c68b2 : leave ; jne 0xffffff80008c68a4 ; pop rbp ; ret
0xffffff80008c77fb : leave ; jne 0xffffff80008c77e4 ; pop rbp ; ret
0xffffff80008c78a6 : leave ; jne 0xffffff80008c7894 ; pop rbp ; ret
0xffffff80008c87b1 : leave ; jne 0xffffff80008c87a4 ; pop rbp ; ret
0xffffff80008c8852 : leave ; jne 0xffffff80008c8844 ; pop rbp ; ret
0xffffff80008c9760 : leave ; jne 0xffffff80008c9754 ; pop rbp ; ret
0xffffff80008c9802 : leave ; jne 0xffffff80008c97f4 ; pop rbp ; ret
0xffffff80008cc424 : leave ; jne 0xffffff80008cc414 ; pop rbp ; ret
0xffffff80008cd430 : leave ; jne 0xffffff80008cd429 ; jmp 0xffffff80008cd4f4
0xffffff80008ce224 : leave ; jne 0xffffff80008ce214 ; pop rbp ; ret
0xffffff80008cebc4 : leave ; jne 0xffffff80008cebb4 ; pop rbp ; ret
0xffffff80008d07f4 : leave ; jne 0xffffff80008d07e4 ; pop rbp ; ret
0xffffff80008d18b4 : leave ; jne 0xffffff80008d18a4 ; pop rbp ; ret
0xffffff80008d2a2b : leave ; jne 0xffffff80008d2a24 ; pop rbp ; ret
0xffffff80008d4b54 : leave ; jne 0xffffff80008d4b44 ; pop rbp ; ret
0xffffff80008d5b54 : leave ; jne 0xffffff80008d5b44 ; pop rbp ; ret
0xffffff80008d6b44 : leave ; jne 0xffffff80008d6b34 ; pop rbp ; ret
0xffffff80008d74e4 : leave ; jne 0xffffff80008d74d4 ; pop rbp ; ret
0xffffff80008d7754 : leave ; jne 0xffffff80008d7744 ; pop rbp ; ret
0xffffff80008d79c4 : leave ; jne 0xffffff80008d79b4 ; pop rbp ; ret
0xffffff80008e2654 : leave ; jne 0xffffff80008e2644 ; pop rbp ; ret
0xffffff80008e55c4 : leave ; jne 0xffffff80008e55b4 ; pop rbp ; ret
0xffffff80008e6af4 : leave ; jne 0xffffff80008e6ae4 ; pop rbp ; ret
0xffffff80008e6db4 : leave ; jne 0xffffff80008e6da4 ; pop rbp ; ret
0xffffff80008e7644 : leave ; jne 0xffffff80008e7634 ; pop rbp ; ret
0xffffff80002e7a97 : leave ; jno 0xffffff80002e7aa3 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000697683 : leave ; jno 0xffffff800069764c ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800036836f : leave ; jns 0xffffff800036837a ; xor eax, eax ; pop rbp ; ret
0xffffff80006bb6ab : leave ; mov dl, al ; jmp 0xffffff80006bb6be
0xffffff800027f66e : leave ; mov dword ptr [rax + rcx*4], 0 ; pop rbp ; ret
0xffffff800059b91b : leave ; mov dword ptr [rsi + 4], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80003925a5 : leave ; mov eax, 1 ; ret
0xffffff80004fa1e7 : leave ; mov eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002518e4 : leave ; mov eax, ecx ; pop rbp ; ret
0xffffff80003a0b03 : leave ; mov edi, ebx ; mov rsi, r12 ; call rax
0xffffff8000398da7 : leave ; mov edi, ebx ; mov rsi, r15 ; call r12
0xffffff80007a5745 : leave ; mov edi, r14d ; mov r8, rax ; call r15
0xffffff800084de82 : leave ; mov edx, r8d ; jmp 0xffffff800084de95
0xffffff80007a8df9 : leave ; mov esi, 0x23 ; jmp 0xffffff80007a8dca
0xffffff8000719344 : leave ; mov qword ptr [rdi + 0x18], rcx ; pop rbp ; ret
0xffffff80002f7c38 : leave ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800076f135 : leave ; mov r14, rsi ; call 0xffffff8000396b87
0xffffff80006f0374 : leave ; mov r8, r13 ; call 0xffffff80004fc586
0xffffff8000696505 : leave ; mov r8, rbx ; call 0xffffff80002c53a7
0xffffff8000392d6b : leave ; mov rax, 1 ; ret
0xffffff80002a6359 : leave ; mov rax, r13 ; je 0xffffff80002a638d ; mov rbx, r8 ; call rcx
0xffffff8000770ff5 : leave ; mov rcx, r14 ; call 0xffffff8000396b87
0xffffff8000487081 : leave ; mov rdi, r13 ; mov esi, r12d ; call 0xffffff80008032c9
0xffffff800050c8b1 : leave ; mov rdi, r13 ; mov esi, r15d ; call 0xffffff8000758b39
0xffffff8000546b59 : leave ; mov rdi, r14 ; call 0xffffff8000532e66
0xffffff80006f030d : leave ; mov rdi, r14 ; mov r8, rbx ; call 0xffffff80004fc589
0xffffff800074f386 : leave ; mov rdi, r15 ; mov edx, r14d ; call rax
0xffffff80003eee0a : leave ; mov rdi, rbx ; call 0xffffff800044b0a6
0xffffff80006e3bf8 : leave ; mov rdi, rcx ; jne 0xffffff80006e3be7 ; pop rbp ; ret
0xffffff80008e3271 : leave ; mov rdi, rsi ; mov rsi, rax ; call 0xffffff80008df539
0xffffff80007dab50 : leave ; mov rdx, r12 ; call rax
0xffffff800076bbbe : leave ; mov rdx, r14 ; call 0xffffff8000396b87
0xffffff8000772c85 : leave ; mov rdx, r15 ; call 0xffffff8000396b87
0xffffff80007a498c : leave ; mov rdx, rax ; pop rbp ; jmp r11
0xffffff800076ba84 : leave ; mov rdx, rbx ; call 0xffffff8000396b87
0xffffff80004a1eab : leave ; mov rsi, r10 ; mov rdx, r10 ; pop rbp ; jmp rax
0xffffff80007723d7 : leave ; mov rsi, r12 ; call 0xffffff8000396b87
0xffffff80007fa92b : leave ; mov rsi, r13 ; call 0xffffff8000396b86
0xffffff800076ebab : leave ; mov rsi, r13 ; call 0xffffff8000396b87
0xffffff8000766da3 : leave ; mov rsi, r15 ; call 0xffffff8000396b87
0xffffff800087e3f0 : leave ; mov rsi, rbx ; mov rdx, r14 ; call rax
0xffffff80002c2079 : leave ; mov word ptr [rax], cx ; je 0xffffff80002c2088 ; pop rbp ; ret
0xffffff8000268ecc : leave ; movzx eax, cl ; pop rbp ; ret
0xffffff80006d0561 : leave ; movzx edx, dx ; cmp edx, ecx ; jae 0xffffff80006d0549 ; pop rbp ; ret
0xffffff8000547853 : leave ; or byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004b4be5 : leave ; or dh, dh ; ret 0xf0c
0xffffff800068cc03 : leave ; or eax, 0x8948fffe ; ret 0x894c
0xffffff800035927a : leave ; pop rbp ; jmp 0xffffff8000315574
0xffffff80008744bc : leave ; pop rbp ; jmp r11
0xffffff8000477a99 : leave ; pop rbp ; jmp r9
0xffffff80003aefa4 : leave ; pop rbp ; jmp rax
0xffffff80004296c6 : leave ; pop rbp ; ret
0xffffff80007b595b : leave ; pop rcx ; sub eax, 0x440f4800 ; ret 0x8b48
0xffffff800070042f : leave ; push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0xffffff80002e38c2 : leave ; ret
0xffffff8000549ad3 : leave ; ret 0x26
0xffffff80006a72ae : leave ; ret 0x48ff
0xffffff8000b4056f : leave ; ret 0x4908
0xffffff80006b48f3 : leave ; ret 0xffcb
0xffffff8000889bcf : leave ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008176f3 : leave ; setne al ; pop rbp ; ret
0xffffff8000387d2e : leave ; shl ecx, 4 ; or eax, ecx ; pop rbp ; ret
0xffffff8000753073 : leave ; stc ; ret
0xffffff8000555773 : leave ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e046b : leave ; sub eax, dword ptr [rdi + 0x18] ; cmovs eax, ecx ; pop rbp ; ret
0xffffff800049eac8 : leave ; test dl, 1 ; cmove rax, rcx ; pop rbp ; ret
0xffffff8000366c96 : leave ; xor eax, eax ; cmp ecx, edx ; je 0xffffff8000366c88 ; pop rbp ; ret
0xffffff8000656875 : leave ; xor esi, dword ptr [rip + 0x7932e800] ; ret
0xffffff80002be9ac : leave ; xor r8d, r8d ; call 0xffffff800074ac46
0xffffff80005bc891 : leave ; xor r8d, r8d ; mov rdx, r15 ; call rbx
0xffffff800088d2b8 : leave ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80004a1d11 : leave ; xor r8d, r8d ; xor r9d, r9d ; call rax
0xffffff800049c8d0 : leave ; xor r8d, r8d ; xor r9d, r9d ; pop rbp ; jmp rax
0xffffff80004a0bb5 : lfence ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000802a84 : lfence ; pop rbp ; ret
0xffffff80004a0b67 : lfence ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000799a27 : ljmp [rax - 0x16a88afd] ; ret
0xffffff80006f3f1f : ljmp [rax - 0x37000012] ; out 0xff, eax ; call qword ptr [rdi]
0xffffff8000491b5f : ljmp [rax - 0x4200003d] ; ret
0xffffff80006dd662 : ljmp [rax] ; jmp qword ptr [rsi]
0xffffff80002c7f5b : ljmp [rbp + rdi*8 - 1] ; call rax
0xffffff80008ae4ad : ljmp [rbp - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000491b47 : ljmp [rbx] ; ret
0xffffff80003ae128 : ljmp [rcx + 0x10000] ; jne 0xffffff80003ae13b ; pop rbp ; ret
0xffffff800075da83 : ljmp [rcx + 0x71ffffcf] ; ret
0xffffff80004567d1 : ljmp [rcx] ; ret
0xffffff80005fe5de : ljmp [rcx] ; ret 0x1501
0xffffff80007bd89b : ljmp [rcx] ; ret 0x8941
0xffffff80004065e8 : ljmp [rcx] ; ret 0x8b48
0xffffff80008422c7 : ljmp [rdx - 0x39000019] ; out 0xff, eax ; call qword ptr [rax]
0xffffff80005caea3 : ljmp [rsp + rdi*8 - 1] ; call rcx
0xffffff8000b4277f : ljmp [rsp + rdx*8 - 1] ; jmp qword ptr [rsi]
0xffffff80003b7ccc : lock add byte ptr [rax - 0x1a76b7ab], dl ; pop rbp ; ret
0xffffff80005c937d : lock add byte ptr [rax], al ; add al, ch ; pop rdx ; ret
0xffffff800079b258 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ce8
0xffffff800066deb6 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0x394c
0xffffff800032aaa5 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80008a9f17 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000805440 : lock add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0bf06], al ; ret 0xff31
0xffffff800089579f : lock add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff80003b25b7 : lock add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc220
0xffffff8000558dd0 : lock add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800064e476 : lock add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0xffffff80008657c4 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800082c9fd : lock add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b7cf89], cl ; ret 0xff5d
0xffffff8000273d1d : lock add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000273cdb : lock add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000273c8f : lock add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbp ; ret
0xffffff800078c017 : lock add dword ptr [rbp - 0x3d], ebx ; xor eax, eax ; pop rbp ; ret
0xffffff80005a9030 : lock add dword ptr [rbx], edx ; push rax ; ret
0xffffff80007b8107 : lock add dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff80002af478 : lock add qword ptr [rcx + rax], rdx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000448fd3 : lock add qword ptr [rdi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800055fe0f : lock add qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff800055fe16 : lock add qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff800055fe1d : lock add qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff800055fe24 : lock add qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff800055fe08 : lock add qword ptr [rdi + 0x30], rsi ; pop rbp ; ret
0xffffff80002996ee : lock and dword ptr [rax], 0xffffffdf ; xor eax, eax ; pop rbp ; ret
0xffffff8000750394 : lock and dword ptr [rdi], 0xffffffdf ; pop rbp ; ret
0xffffff80003934d0 : lock and dword ptr [rdi], esi ; ret
0xffffff800038813f : lock bts dword ptr [rax], edi ; jb 0xffffff8000388141 ; pop rbp ; ret
0xffffff8000392353 : lock cmpxchg byte ptr [rdi], cl ; jne 0xffffff8000392360 ; ret
0xffffff800080dea7 : lock cmpxchg byte ptr [rdx], sil ; sete al ; pop rbp ; ret
0xffffff80003924ec : lock cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392531 ; ret
0xffffff8000392620 : lock cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392665 ; ret
0xffffff80003934a6 : lock cmpxchg dword ptr [rdi], edx ; jne 0xffffff80003934aa ; mov eax, edx ; ret
0xffffff80003934c6 : lock cmpxchg dword ptr [rdi], edx ; jne 0xffffff80003934ca ; mov eax, edx ; ret
0xffffff800080dec8 : lock cmpxchg dword ptr [rdx], esi ; sete al ; pop rbp ; ret
0xffffff800080dfb4 : lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfb7 ; pop rbp ; ret
0xffffff800080dfd4 : lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfd7 ; pop rbp ; ret
0xffffff800080dff4 : lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dff7 ; pop rbp ; ret
0xffffff8000327358 : lock cmpxchg qword ptr [r8], rcx ; xor eax, eax ; pop rbp ; ret
0xffffff80003a4241 : lock cmpxchg qword ptr [rcx], rdi ; pop rbp ; ret
0xffffff800049ce66 : lock cmpxchg qword ptr [rdi], rsi ; jne 0xffffff800049ce68 ; pop rbp ; ret
0xffffff800080def7 : lock cmpxchg qword ptr [rdx], rsi ; sete al ; pop rbp ; ret
0xffffff800080dec7 : lock cmpxchg word ptr [rdx], si ; sete al ; pop rbp ; ret
0xffffff800036de87 : lock dec dword ptr [rax - 0x77] ; ret
0xffffff800048c657 : lock dec dword ptr [rax - 0x7d] ; ret
0xffffff80005486d1 : lock dec dword ptr [rax - 1] ; ret
0xffffff800059f46f : lock dec dword ptr [rdi + 0x54] ; je 0xffffff800059f47e ; pop rbp ; ret
0xffffff8000568535 : lock dec dword ptr [rip + 0x570134] ; pop rbp ; ret
0xffffff800055b8a4 : lock dec dword ptr [rip + 0x57ccc1] ; pop rbp ; ret
0xffffff800055b154 : lock dec dword ptr [rip + 0x57d40d] ; pop rbp ; ret
0xffffff800055ac24 : lock dec dword ptr [rip + 0x57d92d] ; pop rbp ; ret
0xffffff80002bb886 : lock inc dword ptr [rax] ; add cl, al ; call 0xffffff7fc1ee419c
0xffffff8000273d99 : lock inc dword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a2fcc : lock inc dword ptr [rcx] ; pop rbp ; ret
0xffffff8000298c4e : lock inc dword ptr [rdi + 0x10] ; xor eax, eax ; pop rbp ; ret
0xffffff80004cb1a4 : lock inc dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff80003a48a1 : lock inc dword ptr [rdx - 0xffd8] ; leave ; ret
0xffffff80007ce566 : lock inc dword ptr [rip + 0x366107] ; pop rbp ; ret
0xffffff80006306df : lock inc dword ptr [rip + 0x43fbda] ; pop rbp ; ret
0xffffff800062ee49 : lock inc dword ptr [rip + 0x441260] ; pop rbp ; ret
0xffffff800062e58a : lock inc dword ptr [rip + 0x441aaf] ; pop rbp ; ret
0xffffff8000550664 : lock inc dword ptr [rip + 0x5d11fd] ; pop rbp ; ret
0xffffff8000550654 : lock inc dword ptr [rip + 0x5d1209] ; pop rbp ; ret
0xffffff800055063b : lock inc dword ptr [rip + 0x5d1226] ; pop rbp ; ret
0xffffff800073d5bc : lock inc qword ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800073d623 : lock inc qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff800073d595 : lock inc qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff8000764cdb : lock inc qword ptr [rip + 0x3cb14d] ; pop rbp ; ret
0xffffff800028f9b1 : lock inc qword ptr [rip + 0x85bba7] ; pop rbp ; ret
0xffffff800028f965 : lock inc qword ptr [rip + 0x85bbd3] ; pop rbp ; ret
0xffffff80004ba35c : lock or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x637e
0xffffff80004ba45e : lock or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x9f0f
0xffffff8000298930 : lock or dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff800029995e : lock or dword ptr [rcx], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000750374 : lock or dword ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80003934b0 : lock or dword ptr [rdi], esi ; ret
0xffffff800080e0d6 : lock xadd byte ptr [rdi], al ; movsx eax, al ; pop rbp ; ret
0xffffff8000393482 : lock xadd dword ptr [rdi], eax ; add eax, esi ; ret
0xffffff800080e159 : lock xadd dword ptr [rdi], eax ; cwde ; pop rbp ; ret
0xffffff800080df89 : lock xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000275529 : lock xadd dword ptr [rip + 0x872b3f], eax ; pop rbp ; ret
0xffffff800080df54 : lock xadd dword ptr [rsi], edi ; mov eax, edi ; pop rbp ; ret
0xffffff800080df45 : lock xadd dword ptr [rsi], edi ; movsx eax, di ; pop rbp ; ret
0xffffff800080df64 : lock xadd qword ptr [rsi], rdi ; mov rax, rdi ; pop rbp ; ret
0xffffff800080e158 : lock xadd word ptr [rdi], ax ; cwde ; pop rbp ; ret
0xffffff800080df44 : lock xadd word ptr [rsi], di ; movsx eax, di ; pop rbp ; ret
0xffffff80006210cd : lodsb al, byte ptr [esi] ; add byte ptr [rcx], r15b ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff80008cbf96 : lodsb al, byte ptr [esi] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800083e7e3 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8341
0xffffff800083e193 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0xffffff800083ee10 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc931
0xffffff800083ef19 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff8000443441 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; ret 2
0xffffff800074e0f3 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff800058a8c3 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0xffffff80004dd6c7 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80006210ce : lodsb al, byte ptr [rsi] ; add byte ptr [rcx], r15b ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff8000265dcc : lodsb al, byte ptr [rsi] ; add dword ptr [rax], 0 ; pop rbp ; ret
0xffffff80008df339 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800089ab23 : lodsb al, byte ptr [rsi] ; and al, 0 ; pop rbp ; ret
0xffffff80006a1b9f : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800054f66c : lodsb al, byte ptr [rsi] ; and dword ptr [rbp], ebx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800050dd0d : lodsb al, byte ptr [rsi] ; call rax
0xffffff800038e190 : lodsb al, byte ptr [rsi] ; call rdi
0xffffff8000570edd : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [r13 + rcx*4 + 0x2d], cl ; ret
0xffffff80003741d9 : lodsb al, byte ptr [rsi] ; cmp ah, bl ; mov esp, 0xc1418f1b ; ret 0x891e
0xffffff8000654870 : lodsb al, byte ptr [rsi] ; cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000759790 : lodsb al, byte ptr [rsi] ; cwde ; ret
0xffffff80008d01bf : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cfd29 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret 0x8041
0xffffff80007d7615 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008ccd61 : lodsb al, byte ptr [rsi] ; dec dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e71b0 : lodsb al, byte ptr [rsi] ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000351034 : lodsb al, byte ptr [rsi] ; hlt ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002f9d34 : lodsb al, byte ptr [rsi] ; idiv bh ; jmp rsp
0xffffff80007e9044 : lodsb al, byte ptr [rsi] ; inc dword ptr [rbx + 0x440f30f8] ; ret
0xffffff8000451733 : lodsb al, byte ptr [rsi] ; jmp 0xffffff800045173f
0xffffff8000b48064 : lodsb al, byte ptr [rsi] ; jmp qword ptr [rsi]
0xffffff80008cbf97 : lodsb al, byte ptr [rsi] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80006c0440 : lodsb al, byte ptr [rsi] ; mov dl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006357da : lodsb al, byte ptr [rsi] ; mov edx, r15d ; call rax
0xffffff8000371c88 : lodsb al, byte ptr [rsi] ; or byte ptr [rcx - 0x3ea57d87], bl ; ret
0xffffff8000859ed3 : lodsb al, byte ptr [rsi] ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800066d589 : lodsb al, byte ptr [rsi] ; or dword ptr [rax + rax], esi ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff80004cba47 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000761628 : lodsb al, byte ptr [rsi] ; out 0x3c, eax ; add al, ch ; scasd eax, dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; ret
0xffffff80007a2d10 : lodsb al, byte ptr [rsi] ; out dx, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ade82 : lodsb al, byte ptr [rsi] ; pop rbp ; ret
0xffffff800088d443 : lodsb al, byte ptr [rsi] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000693e50 : lodsb al, byte ptr [rsi] ; push 0x148ffd0 ; ret
0xffffff80006593f0 : lodsb al, byte ptr [rsi] ; push rax ; ret
0xffffff800043c360 : lodsb al, byte ptr [rsi] ; ret
0xffffff80005a0f20 : lodsb al, byte ptr [rsi] ; ret 0x39
0xffffff80004e3447 : lodsb al, byte ptr [rsi] ; ret 0x41ff
0xffffff800066382b : lodsb al, byte ptr [rsi] ; ret 0x49ff
0xffffff800076bf5c : lodsb al, byte ptr [rsi] ; ret 0x89ff
0xffffff80003c1ea0 : lodsb al, byte ptr [rsi] ; ret 0xffec
0xffffff800082fb40 : lodsb al, byte ptr [rsi] ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039a6ce : lodsb al, byte ptr [rsi] ; shl byte ptr [rax], 1 ; ret
0xffffff80005ac2a0 : lodsb al, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000692d1b : lodsb al, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff8000371f88 : lodsb al, byte ptr [rsi] ; sub byte ptr [rcx - 0x3e912615], ah ; ret 0x441e
0xffffff80008ab600 : lodsb al, byte ptr [rsi] ; sub ebx, dword ptr [rsi + 0x5dc031ff] ; ret
0xffffff80007c347f : lodsb al, byte ptr [rsi] ; xchg eax, esp ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80004e3506 : lodsb al, byte ptr ss:[rsi] ; ret 0x41ff
0xffffff80004be726 : lodsd eax, dword ptr [rsi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000827adf : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80007aecbf : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800052a87b : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; ret 5
0xffffff80003a341f : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c312f : lodsd eax, dword ptr [rsi] ; and eax, 0x81480000 ; ret
0xffffff80006418ff : lodsd eax, dword ptr [rsi] ; and ecx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027724f : lodsd eax, dword ptr [rsi] ; call qword ptr [rcx]
0xffffff80007bed65 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b4408 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007b51ca : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80007b9f0f : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 1] ; ret
0xffffff80003db09f : lodsd eax, dword ptr [rsi] ; fild dword ptr [rsi] ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80007c0bb8 : lodsd eax, dword ptr [rsi] ; fimul word ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800058ae8c : lodsd eax, dword ptr [rsi] ; idiv bh ; call rdi
0xffffff8000352235 : lodsd eax, dword ptr [rsi] ; insd dword ptr [rdi], dx ; add al, ch ; ret
0xffffff8000273275 : lodsd eax, dword ptr [rsi] ; jmp 0xffffff7fc3aa7b7f
0xffffff800059df1d : lodsd eax, dword ptr [rsi] ; jmp 0xffffff800059df2e
0xffffff800061136f : lodsd eax, dword ptr [rsi] ; jne 0xffffff8000611344 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b9a24 : lodsd eax, dword ptr [rsi] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000300f2f : lodsd eax, dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006c25af : lodsd eax, dword ptr [rsi] ; mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763bd0 : lodsd eax, dword ptr [rsi] ; mov dh, 0xff ; mov rdi, r14 ; call 0xffffff80003923e9
0xffffff8000326d4e : lodsd eax, dword ptr [rsi] ; mov edx, 0x83483374 ; ret
0xffffff8000326a4a : lodsd eax, dword ptr [rsi] ; mov edx, 0xfc0950f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80003c5da3 : lodsd eax, dword ptr [rsi] ; mov esp, 0xc0850073 ; jne 0xffffff80003c5de3 ; pop rbp ; ret
0xffffff800075d78f : lodsd eax, dword ptr [rsi] ; pop rax ; ret
0xffffff800083b998 : lodsd eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff80002bb6bd : lodsd eax, dword ptr [rsi] ; pop rsi ; push 0x158d4800 ; ret
0xffffff800075d77f : lodsd eax, dword ptr [rsi] ; push rcx ; ret
0xffffff800075dd8f : lodsd eax, dword ptr [rsi] ; push rdx ; ret
0xffffff80007d778f : lodsd eax, dword ptr [rsi] ; push rdx ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800026b32b : lodsd eax, dword ptr [rsi] ; ret
0xffffff8000767a67 : lodsd eax, dword ptr [rsi] ; ret 0x31ff
0xffffff80004e3387 : lodsd eax, dword ptr [rsi] ; ret 0x41ff
0xffffff8000663437 : lodsd eax, dword ptr [rsi] ; ret 0x49ff
0xffffff80002b4f9d : lodsd eax, dword ptr [rsi] ; ret 0x68
0xffffff8000300f30 : lodsd eax, dword ptr [rsi] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000692cc4 : lodsd eax, dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff800088a41e : lodsd eax, dword ptr [rsi] ; sub al, byte ptr [rax] ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000882077 : lodsd eax, dword ptr [rsi] ; sub rax, qword ptr [r8] ; pop rbp ; ret
0xffffff800066253a : lodsd eax, dword ptr [rsi] ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000662539 : lodsd eax, dword ptr [rsi] ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000346ddf : lodsd eax, dword ptr [rsi] ; xor al, 0x7b ; add al, ch ; pop rax ; ret 4
0xffffff8000767a66 : lodsd eax, dword ptr es:[rsi] ; ret 0x31ff
0xffffff80008066b9 : lodsq rax, qword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000293c2b : loop 0xffffff8000293c70 ; call rdi
0xffffff80002b516d : loop 0xffffff80002b51d3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002c9b9f : loop 0xffffff80002c9bf2 ; mov eax, edx ; shr rax, 0x12 ; pop rbp ; ret
0xffffff80002cb8e7 : loop 0xffffff80002cb8d3 ; ret
0xffffff80002d26f9 : loop 0xffffff80002d26ff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d26f8 : loop 0xffffff80002d2700 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ed2d8 : loop 0xffffff80002ed2ca ; add dh, byte ptr [rbx - 0x7cb7fff6] ; ret
0xffffff80003006e6 : loop 0xffffff80003006ed ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000300e2b : loop 0xffffff8000300e32 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000300fa6 : loop 0xffffff8000300fad ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800030149b : loop 0xffffff80003014a2 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff80003016dc : loop 0xffffff80003016e3 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000301a13 : loop 0xffffff8000301a1a ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000301f41 : loop 0xffffff8000301f48 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000303ac1 : loop 0xffffff8000303ac8 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000303bba : loop 0xffffff8000303bc1 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000303e41 : loop 0xffffff8000303e48 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000304175 : loop 0xffffff800030417c ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000304326 : loop 0xffffff800030432d ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800030460e : loop 0xffffff8000304615 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000304a21 : loop 0xffffff8000304a28 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000304fc6 : loop 0xffffff8000304fcd ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff80003051d7 : loop 0xffffff80003051de ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000305af7 : loop 0xffffff8000305afe ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000306630 : loop 0xffffff8000306637 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff80003067c0 : loop 0xffffff80003067c7 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000308337 : loop 0xffffff800030833e ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000308771 : loop 0xffffff8000308778 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000308bbb : loop 0xffffff8000308bc2 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000309780 : loop 0xffffff8000309787 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000309b25 : loop 0xffffff8000309b2c ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000309c41 : loop 0xffffff8000309c48 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800030d0e5 : loop 0xffffff800030d0ec ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800031aaa2 : loop 0xffffff800031aaa9 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800031be44 : loop 0xffffff800031be4b ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800031ce23 : loop 0xffffff800031ce2a ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800031e6b7 : loop 0xffffff800031e6be ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800031e830 : loop 0xffffff800031e838 ; add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0xc889
0xffffff80003271cd : loop 0xffffff8000327233 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003287ed : loop 0xffffff8000328853 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800032c380 : loop 0xffffff800032c387 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800032d262 : loop 0xffffff800032d269 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800032eecd : loop 0xffffff800032eed4 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800032f24d : loop 0xffffff800032f254 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800032fb8a : loop 0xffffff800032fb91 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000333b3e : loop 0xffffff8000333b45 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff80003345be : loop 0xffffff80003345c5 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800033bcfa : loop 0xffffff800033bd01 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800033be7f : loop 0xffffff800033be86 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800033bf3c : loop 0xffffff800033bf43 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800033c58f : loop 0xffffff800033c596 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000341d96 : loop 0xffffff8000341d9d ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000343c4e : loop 0xffffff8000343c55 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff80003441f9 : loop 0xffffff8000344200 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800035ed6d : loop 0xffffff800035ed73 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003667bd : loop 0xffffff800036681e ; ret
0xffffff800036a74d : loop 0xffffff800036a7b3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800037198a : loop 0xffffff80003719af ; ret 0xf231
0xffffff80003737d8 : loop 0xffffff800037379d ; ret 0x105
0xffffff8000373ec3 : loop 0xffffff8000373e98 ; ret 0x1589
0xffffff80003743c8 : loop 0xffffff800037439d ; ret 0x1589
0xffffff80003746eb : loop 0xffffff80003746b0 ; ret 0x4405
0xffffff8000375750 : loop 0xffffff8000375757 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff8000375866 : loop 0xffffff800037586d ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0xe181
0xffffff800038b985 : loop 0xffffff800038b98d ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], cl ; ret 0x8966
0xffffff800039a6ba : loop 0xffffff800039a6e1 ; or rax, rdx ; ret
0xffffff800039a74e : loop 0xffffff800039a79e ; shrd eax, edx, 0x20 ; ret
0xffffff800039f1cf : loop 0xffffff800039f221 ; shr edx, 4 ; mov dword ptr [rcx], edx ; pop rbp ; ret
0xffffff80003a833d : loop 0xffffff80003a8367 ; mov eax, eax ; or rax, rdx ; pop rbp ; ret
0xffffff80003a8c5d : loop 0xffffff80003a8c87 ; mov eax, eax ; or rax, rdx ; pop rbp ; ret
0xffffff80003bafcd : loop 0xffffff80003bb009 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80003c3277 : loop 0xffffff80003c3263 ; ret
0xffffff80003df485 : loop 0xffffff80003df412 ; ret
0xffffff80003ea95a : loop 0xffffff80003ea8e7 ; cli ; push rsi ; ret
0xffffff80003efd5a : loop 0xffffff80003efd93 ; cli ; push rsi ; ret
0xffffff80003fbc28 : loop 0xffffff80003fbc3a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003fbc27 : loop 0xffffff80003fbc3b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000410a0d : loop 0xffffff8000410a1a ; ret 0x8d41
0xffffff8000410a27 : loop 0xffffff8000410a34 ; ret 0x8d41
0xffffff8000410a41 : loop 0xffffff8000410a4e ; ret 0x8d41
0xffffff8000410a5b : loop 0xffffff8000410a68 ; ret 0x8d41
0xffffff8000411760 : loop 0xffffff800041175d ; shl byte ptr [rcx], cl ; ret 0xfe83
0xffffff8000458916 : loop 0xffffff800045891e ; add al, byte ptr [rax] ; add byte ptr [rcx], cl ; ret 0xc889
0xffffff80004590d7 : loop 0xffffff80004590c3 ; ret
0xffffff8000463317 : loop 0xffffff800046331a ; ret
0xffffff800046aac3 : loop 0xffffff800046aab4 ; xlatb ; jmp 0xffffff7fc3d0aacf
0xffffff800046ab74 : loop 0xffffff800046ab65 ; jmp 0xffffff7fc3d0ab80
0xffffff800046be9e : loop 0xffffff800046be8b ; in al, dx ; ret
0xffffff800046bf43 : loop 0xffffff800046bf30 ; ret
0xffffff80004854da : loop 0xffffff800048546c ; or ecx, dword ptr [rax - 0x77] ; ret 0xc148
0xffffff800048bc29 : loop 0xffffff800048bc2c ; jmp rax
0xffffff8000491c31 : loop 0xffffff8000491c34 ; call rdx
0xffffff8000491c55 : loop 0xffffff8000491c58 ; jmp qword ptr [rsi]
0xffffff800049ce80 : loop 0xffffff800049ce6a ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004a16b7 : loop 0xffffff80004a16a3 ; ret
0xffffff80004a2c66 : loop 0xffffff80004a2bea ; ret 0xfbf
0xffffff80004bc0ad : loop 0xffffff80004bc0df ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005129d0 : loop 0xffffff80005129fd ; ret 0x448d
0xffffff8000516af1 : loop 0xffffff8000516af7 ; ror byte ptr [rax - 0x77], 1 ; ret
0xffffff800053cb3a : loop 0xffffff800053cb3f ; ret 0xead3
0xffffff800053fd77 : loop 0xffffff800053fd3a ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800054072d : loop 0xffffff800054071f ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800056374b : loop 0xffffff8000563755 ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000565101 : loop 0xffffff800056510b ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005666b4 : loop 0xffffff80005666bc ; jmp 0xffffff8000566720
0xffffff8000566f69 : loop 0xffffff8000566f72 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000566ff0 : loop 0xffffff8000566ff9 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005697ff : loop 0xffffff8000569803 ; pop rbp ; ret
0xffffff800059a05a : loop 0xffffff800059a089 ; rol dword ptr [rcx], cl ; ret
0xffffff80005d14f3 : loop 0xffffff80005d1518 ; ret 0x5574
0xffffff80005f57c2 : loop 0xffffff80005f581d ; add byte ptr [rax], al ; je 0xffffff80005f57d1 ; pop rbp ; ret
0xffffff80005f9039 : loop 0xffffff80005f903c ; jmp rdx
0xffffff80006037e7 : loop 0xffffff80006037f4 ; ret 0x8941
0xffffff800060380d : loop 0xffffff800060381a ; ret 0x8941
0xffffff8000603fae : loop 0xffffff8000603fbb ; ret 0x8941
0xffffff8000603fd4 : loop 0xffffff8000603fe1 ; ret 0x8941
0xffffff8000605340 : loop 0xffffff8000605345 ; shr cl, 1 ; ret
0xffffff80006228ca : loop 0xffffff80006228f7 ; ret 0xd285
0xffffff8000626206 : loop 0xffffff8000626243 ; ret 0x1073
0xffffff80006307ec : loop 0xffffff80006307f1 ; ret 0xd639
0xffffff8000642e71 : loop 0xffffff8000642e62 ; stc ; idiv edi ; push rsi ; ret
0xffffff8000651079 : loop 0xffffff8000651067 ; xor ecx, edx ; ret
0xffffff800065ed00 : loop 0xffffff800065ecee ; stosb byte ptr [rdi], al ; hlt ; ret 0x41ff
0xffffff800065f1fc : loop 0xffffff800065f1ea ; scasb al, byte ptr [rdi] ; out dx, eax ; ret 0xebff
0xffffff8000666b3d : loop 0xffffff8000666b2f ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800066a016 : loop 0xffffff800066a06b ; mov ecx, esi ; call 0xffffff800028e4a7
0xffffff800066a36c : loop 0xffffff800066a35a ; ret 0x48ff
0xffffff800066b09f : loop 0xffffff800066b08d ; or esi, dword ptr [rcx] ; ret 0x48ff
0xffffff80006e3bfd : loop 0xffffff80006e3c5e ; ret
0xffffff8000718968 : loop 0xffffff8000718954 ; ret 0xff7f
0xffffff800071c6e6 : loop 0xffffff800071c6e4 ; shl byte ptr [rsi - 0x3f], cl ; ret 0x6608
0xffffff8000721f71 : loop 0xffffff8000721ef8 ; add dword ptr [rax], ecx ; ret 0x9588
0xffffff800073e7c5 : loop 0xffffff800073e7cc ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000746908 : loop 0xffffff80007468f4 ; ret 0xc78
0xffffff800076045a : loop 0xffffff8000760489 ; ret
0xffffff800077155a : loop 0xffffff8000771578 ; ret 0x48ff
0xffffff800078a20b : loop 0xffffff800078a20e ; jmp rdi
0xffffff800078c487 : loop 0xffffff800078c414 ; ret 0xf883
0xffffff800078c486 : loop 0xffffff800078c415 ; ret 0xf883
0xffffff80007bd8b1 : loop 0xffffff80007bd8a4 ; stc ; or byte ptr [rbp - 0x40f0b701], ch ; ret
0xffffff80007c40b0 : loop 0xffffff80007c40b4 ; pop rbp ; ret
0xffffff80007cc68b : loop 0xffffff80007cc694 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800080c729 : loop 0xffffff800080c72c ; call qword ptr [rsi]
0xffffff800080c86f : loop 0xffffff800080c87e ; cmp edx, 5 ; je 0xffffff800080c83e ; jmp 0xffffff800080c858
0xffffff8000819c7e : loop 0xffffff8000819cc3 ; call rdi
0xffffff8000829e5b : loop 0xffffff8000829eae ; mov ecx, ebp ; call r15
0xffffff8000837195 : loop 0xffffff80008371eb ; mov ecx, ebp ; mov r8, r14 ; call r9
0xffffff800084d9a5 : loop 0xffffff800084d9ad ; add al, 0 ; add bh, dh ; ret 0xffff
0xffffff8000858839 : loop 0xffffff8000858843 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008588ad : loop 0xffffff80008588b7 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000859a25 : loop 0xffffff8000859a2e ; add al, 8 ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff8000861d7d : loop 0xffffff8000861d86 ; call 0xffffff800010e084
0xffffff8000871d9d : loop 0xffffff8000871da6 ; call 0xffffff800010e084
0xffffff8000882203 : loop 0xffffff8000882252 ; mov eax, dword ptr [rbp - 0x30] ; call rax
0xffffff80008ae7da : loop 0xffffff80008ae769 ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b6a95 : loop 0xffffff80008b6a9e ; add al, ah ; pop rbp ; ret
0xffffff80008c77fd : loop 0xffffff80008c785e ; ret
0xffffff80008ca188 : loop 0xffffff80008ca174 ; ret 0x9c3f
0xffffff80008cd6d0 : loop 0xffffff80008cd6cc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008da38d : loop 0xffffff80008da3a0 ; or edx, esi ; mov esi, dword ptr [r12 + 0x3c] ; call rax
0xffffff80008deb95 : loop 0xffffff80008debaf ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call r15
0xffffff8000902998 : loop 0xffffff80009029eb ; mov ecx, dword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000902a03 : loop 0xffffff8000902a56 ; mov ecx, dword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000903598 : loop 0xffffff80009035eb ; mov ecx, dword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000903603 : loop 0xffffff8000903656 ; mov ecx, dword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000905d7c : loop 0xffffff8000905dc1 ; call rax
0xffffff8000b3c350 : loop 0xffffff8000b3c3a3 ; and al, byte ptr [r9 - 0x7f] ; ret 0x8894
0xffffff8000b41276 : loop 0xffffff8000b4127e ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0xc283
0xffffff8000b488fd : loop 0xffffff8000b48889 ; ret 0x8841
0xffffff8000b4a019 : loop 0xffffff8000b4a06b ; and al, 0x89 ; ret 0xe281
0xffffff8000b4a4fe : loop 0xffffff8000b4a48a ; ret 0x8840
0xffffff8000b4a51d : loop 0xffffff8000b4a4d5 ; loopne 0xffffff8000b4a54d ; ret 0x8840
0xffffff80002ba33b : loope 0xffffff80002ba33a ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002bacbb : loope 0xffffff80002bacc8 ; cmovne eax, edx ; pop rbp ; ret
0xffffff80002bacbb : loope 0xffffff80002bacca ; cmovne eax, edx ; pop rbp ; ret
0xffffff80002bb961 : loope 0xffffff80002bb962 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d2beb : loope 0xffffff80002d2bf1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d37b7 : loope 0xffffff80002d37bf ; mov eax, ecx ; pop rbp ; ret
0xffffff8000321de8 : loope 0xffffff8000321dd4 ; ret 0xf6c3
0xffffff8000327521 : loope 0xffffff8000327527 ; mov rax, rcx ; pop rbp ; ret
0xffffff800032cb2f : loope 0xffffff800032cb21 ; or eax, dword ptr [rax - 0x7eb7fffb] ; ret
0xffffff800033e68c : loope 0xffffff800033e694 ; inc dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc109
0xffffff800034da0a : loope 0xffffff800034da10 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800034da09 : loope 0xffffff800034da11 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035242e : loope 0xffffff800035241d ; ret
0xffffff800036fa5c : loope 0xffffff800036f9e9 ; ret
0xffffff800036fa5c : loope 0xffffff800036f9eb ; ret
0xffffff80003711b5 : loope 0xffffff800037118b ; ret
0xffffff8000371635 : loope 0xffffff800037160b ; ret
0xffffff8000372a68 : loope 0xffffff8000372a3e ; ret
0xffffff8000372a9b : loope 0xffffff8000372a71 ; ret
0xffffff8000372b28 : loope 0xffffff8000372afe ; ret
0xffffff8000372cad : loope 0xffffff8000372c83 ; ret
0xffffff8000372d22 : loope 0xffffff8000372cf8 ; ret
0xffffff8000372d96 : loope 0xffffff8000372d6c ; ret
0xffffff8000372fc3 : loope 0xffffff8000372f99 ; ret
0xffffff800037300a : loope 0xffffff8000372fe0 ; ret
0xffffff80003731a5 : loope 0xffffff800037317b ; ret
0xffffff80003732ca : loope 0xffffff80003732a0 ; ret
0xffffff8000387d30 : loope 0xffffff8000387d3b ; or eax, ecx ; pop rbp ; ret
0xffffff8000387f56 : loope 0xffffff8000387f5e ; mov eax, ecx ; pop rbp ; ret
0xffffff80003896f9 : loope 0xffffff8000389741 ; mov edi, dword ptr [rsp] ; call qword ptr [rax]
0xffffff8000399261 : loope 0xffffff8000399270 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0xffffff800039d5d6 : loope 0xffffff800039d5de ; mov eax, ecx ; pop rbp ; ret
0xffffff80003ab98e : loope 0xffffff80003aba0b ; sbb eax, 0xae3d8d48 ; ret
0xffffff80003ae43f : loope 0xffffff80003ae4a1 ; pop r14 ; pop rbp ; ret
0xffffff8000428187 : loope 0xffffff8000428173 ; ret
0xffffff8000444ecc : loope 0xffffff8000444ec6 ; push rdi ; ret
0xffffff800045247f : loope 0xffffff80004524d9 ; add byte ptr [rcx], dh ; shr al, 0xc7 ; ret
0xffffff800045377b : loope 0xffffff8000453795 ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff80004580b4 : loope 0xffffff8000458041 ; ret
0xffffff8000482993 : loope 0xffffff80004829c1 ; add byte ptr gs:[rcx], dh ; imul al ; ret 0xf15b
0xffffff800048bc35 : loope 0xffffff800048bc38 ; jmp rax
0xffffff800048bc41 : loope 0xffffff800048bc44 ; jmp qword ptr [rdx]
0xffffff8000491cc5 : loope 0xffffff8000491cc8 ; jmp rbx
0xffffff8000491cd9 : loope 0xffffff8000491ce0 ; dec dword ptr [rdi] ; loope 0xffffff8000491ce4 ; jmp qword ptr [rsi]
0xffffff8000491cdd : loope 0xffffff8000491ce0 ; jmp qword ptr [rsi]
0xffffff8000491ce1 : loope 0xffffff8000491ce4 ; jmp qword ptr [rsi]
0xffffff8000491ce0 : loope 0xffffff8000491ce5 ; jmp qword ptr [rsi]
0xffffff800049c372 : loope 0xffffff800049c378 ; dec dword ptr [rax - 1] ; ret
0xffffff800049ed8e : loope 0xffffff800049edcb ; ret
0xffffff800049ed8d : loope 0xffffff800049edcc ; ret
0xffffff80004bce32 : loope 0xffffff80004bce3a ; add byte ptr [rcx], al ; add byte ptr [rcx], cl ; ret 0xca09
0xffffff80004f3cee : loope 0xffffff80004f3d4f ; ret
0xffffff80004f88a0 : loope 0xffffff80004f8906 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff80004fd4b8 : loope 0xffffff80004fd4a4 ; ret 9
0xffffff80004fd4b8 : loope 0xffffff80004fd4a9 ; ret 9
0xffffff8000501ffb : loope 0xffffff800050204b ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800050a8be : loope 0xffffff800050a8ab ; ret 0
0xffffff8000530011 : loope 0xffffff8000530017 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005343c3 : loope 0xffffff8000534408 ; call rax
0xffffff8000540d98 : loope 0xffffff8000540d84 ; ret 0xff92
0xffffff800057bcc9 : loope 0xffffff800057bcd2 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800057e181 : loope 0xffffff800057e187 ; mov rax, rcx ; pop rbp ; ret
0xffffff800057f1f1 : loope 0xffffff800057f1f7 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005801d4 : loope 0xffffff80005801da ; mov rax, rcx ; pop rbp ; ret
0xffffff8000581581 : loope 0xffffff8000581587 ; mov rax, rcx ; pop rbp ; ret
0xffffff8000582b80 : loope 0xffffff8000582bd3 ; shr edx, 0xb ; mov rax, rdx ; pop rbp ; ret
0xffffff8000584780 : loope 0xffffff8000584789 ; movzx eax, cl ; pop rbp ; ret
0xffffff8000584860 : loope 0xffffff8000584869 ; movzx eax, cl ; pop rbp ; ret
0xffffff8000584a9c : loope 0xffffff8000584aa5 ; movzx eax, cl ; pop rbp ; ret
0xffffff8000584b5c : loope 0xffffff8000584b65 ; movzx eax, cl ; pop rbp ; ret
0xffffff80005a7e71 : loope 0xffffff80005a7e77 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005b0151 : loope 0xffffff80005b0157 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005b1141 : loope 0xffffff80005b1147 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005be851 : loope 0xffffff80005be857 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005e38f1 : loope 0xffffff80005e38f7 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005eaef1 : loope 0xffffff80005eaef7 ; mov rax, rcx ; pop rbp ; ret
0xffffff80005fa2dd : loope 0xffffff80005fa26a ; ret
0xffffff800061e347 : loope 0xffffff800061e34d ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0xffffff8000636b01 : loope 0xffffff8000636b07 ; mov rax, rcx ; pop rbp ; ret
0xffffff8000656c26 : loope 0xffffff8000656c14 ; je 0xffffff8000656ca6 ; ret
0xffffff800065c398 : loope 0xffffff800065c38f ; add eax, ecx ; pop rbp ; ret
0xffffff800066cecb : loope 0xffffff800066cee1 ; ret 0x4cff
0xffffff800066d9f8 : loope 0xffffff800066da45 ; add byte ptr [rax + 1], cl ; ret 0xf631
0xffffff800066db36 : loope 0xffffff800066db45 ; add rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800067c2bf : loope 0xffffff800067c2d7 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800067fdb3 : loope 0xffffff800067fdb6 ; call rdi
0xffffff8000685362 : loope 0xffffff8000685355 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000686875 : loope 0xffffff800068688e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000686925 : loope 0xffffff800068693e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000687011 : loope 0xffffff8000687017 ; mov rax, rcx ; pop rbp ; ret
0xffffff800068ee6e : loope 0xffffff800068ee60 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800068eeae : loope 0xffffff800068eea0 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800068efbe : loope 0xffffff800068efb0 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800069a49e : loope 0xffffff800069a490 ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff80006a3471 : loope 0xffffff80006a3477 ; mov rax, rcx ; pop rbp ; ret
0xffffff80006ba06e : loope 0xffffff80006ba071 ; ret
0xffffff80006bfa9f : loope 0xffffff80006bfaa5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006e1e6b : loope 0xffffff80006e1e2c ; add byte ptr [rax], al ; add cl, ch ; ret 0
0xffffff8000700d6c : loope 0xffffff8000700d72 ; xor eax, eax ; pop rbp ; ret
0xffffff8000729c08 : loope 0xffffff8000729bf4 ; ret 0xddd1
0xffffff800074ef9a : loope 0xffffff800074eff1 ; mov eax, ebp ; mov r15, r9 ; call r10
0xffffff800075495b : loope 0xffffff800075493f ; ret
0xffffff8000757ad1 : loope 0xffffff8000757b16 ; call rdi
0xffffff800075c705 : loope 0xffffff800075c6f3 ; jne 0xffffff800075c6b1 ; ret
0xffffff80007643fb : loope 0xffffff80007643de ; ret 0x45ff
0xffffff800076cf5b : loope 0xffffff800076cfb9 ; ret 0x48ff
0xffffff800079110e : loope 0xffffff80007910ff ; insb byte ptr [rdi], dx ; pop rdx ; sar bh, 0x89 ; ret
0xffffff800079ed1b : loope 0xffffff800079ed0c ; mov edi, 0x89000000 ; ret
0xffffff80007aa959 : loope 0xffffff80007aa992 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0xffffff80007bca11 : loope 0xffffff80007bca18 ; jg 0xffffff80007bca1c ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80007c1288 : loope 0xffffff80007c1274 ; ret 0xfcbf
0xffffff800082d8b3 : loope 0xffffff800082d8ba ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800083b69e : loope 0xffffff800083b6ff ; ret
0xffffff80008587f8 : loope 0xffffff80008587fe ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085886c : loope 0xffffff8000858872 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000859b8e : loope 0xffffff8000859bef ; ret
0xffffff800085a399 : loope 0xffffff800085a3ea ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800086d99e : loope 0xffffff800086d9da ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800086dc6e : loope 0xffffff800086dc2f ; add eax, 0x5d000000 ; ret
0xffffff800086defc : loope 0xffffff800086df38 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800086df7d : loope 0xffffff800086dfed ; nop ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff8000870abb : loope 0xffffff8000870b1c ; ret
0xffffff8000881c3e : loope 0xffffff8000881c9f ; ret
0xffffff80008928ca : loope 0xffffff800089288b ; mov esp, 0x5de00002 ; ret
0xffffff800089294a : loope 0xffffff800089290b ; mov esp, 0x5de00002 ; ret
0xffffff800089a430 : loope 0xffffff800089a491 ; ret
0xffffff80008a83a0 : loope 0xffffff80008a8401 ; ret
0xffffff80008a9a24 : loope 0xffffff80008a9a85 ; ret
0xffffff80008aa745 : loope 0xffffff80008aa796 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008abd31 : loope 0xffffff80008abd92 ; ret
0xffffff80008b8205 : loope 0xffffff80008b8203 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b8205 : loope 0xffffff80008b8206 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008c5941 : loope 0xffffff80008c5947 ; mov rax, rcx ; pop rbp ; ret
0xffffff80008c68f1 : loope 0xffffff80008c68f7 ; mov rax, rcx ; pop rbp ; ret
0xffffff80008c78e1 : loope 0xffffff80008c78e7 ; mov rax, rcx ; pop rbp ; ret
0xffffff80008c8891 : loope 0xffffff80008c8897 ; mov rax, rcx ; pop rbp ; ret
0xffffff80008cd7df : loope 0xffffff80008cd7db ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d30d2 : loope 0xffffff80008d30ce ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008e5687 : loope 0xffffff80008e56e8 ; ret
0xffffff80008f1965 : loope 0xffffff80008f1956 ; adc eax, 0x89ffaa52 ; ret
0xffffff80008f1db8 : loope 0xffffff80008f1da4 ; ret 0xaa4d
0xffffff80008f2491 : loope 0xffffff80008f249c ; add byte ptr [rax], al ; std ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000909721 : loope 0xffffff800090974a ; add byte ptr [rax - 1], cl ; ret
0xffffff8000909779 : loope 0xffffff80009097a1 ; add bl, ch ; ret 0xade8
0xffffff8000909778 : loope 0xffffff80009097a2 ; add bl, ch ; ret 0xade8
0xffffff800090a929 : loope 0xffffff800090a937 ; sub rax, r9 ; ret
0xffffff8000b3c0e3 : loope 0xffffff8000b3c10f ; xchg eax, ebp ; sub byte ptr [rcx + rcx*4], dl ; ret 0xca21
0xffffff8000b3c89f : loope 0xffffff8000b3c849 ; and qword ptr [rcx - 0x77], rax ; ret 0x8141
0xffffff8000b42779 : loope 0xffffff8000b4277c ; call rsi
0xffffff8000b4a07b : loope 0xffffff8000b4a026 ; adc al, 0 ; add byte ptr [rcx - 0x77], al ; ret 0x8141
0xffffff800025182c : loopne 0xffffff8000251843 ; pop rbp ; ret
0xffffff800025183c : loopne 0xffffff8000251853 ; pop rbp ; ret
0xffffff8000251855 : loopne 0xffffff800025186c ; pop rbp ; ret
0xffffff8000252d16 : loopne 0xffffff8000252ca3 ; js 0xffffff8000252d2e ; add byte ptr [rsp + rax - 1], dh ; ret
0xffffff8000252d3e : loopne 0xffffff8000252da4 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000262b13 : loopne 0xffffff8000262b3b ; or rax, rcx ; pop rbp ; ret
0xffffff8000269672 : loopne 0xffffff8000269678 ; pop rbp ; ret
0xffffff8000269692 : loopne 0xffffff8000269698 ; pop rbp ; ret
0xffffff800027171f : loopne 0xffffff8000271780 ; ret
0xffffff8000271d01 : loopne 0xffffff8000271ce5 ; jmp qword ptr [rbx]
0xffffff8000288f41 : loopne 0xffffff8000288fa3 ; pop r14 ; pop rbp ; ret
0xffffff800028a90a : loopne 0xffffff800028a96b ; ret
0xffffff800028bbb3 : loopne 0xffffff800028bbb9 ; pop rbp ; ret
0xffffff80002909ac : loopne 0xffffff80002909b6 ; mov qword ptr [rdx], rdi ; pop rbp ; ret
0xffffff80002938e8 : loopne 0xffffff800029393a ; mov esi, edi ; call qword ptr [rax]
0xffffff8000295361 : loopne 0xffffff80002953c7 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800029548d : loopne 0xffffff80002954f3 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800029564b : loopne 0xffffff80002956b1 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800029aa8d : loopne 0xffffff800029aa95 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800029aaab : loopne 0xffffff800029aab3 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800029bcb6 : loopne 0xffffff800029bd07 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002a62be : loopne 0xffffff80002a62c4 ; pop rbp ; ret
0xffffff80002a6b1e : loopne 0xffffff80002a6b24 ; pop rbp ; ret
0xffffff80002b0fff : loopne 0xffffff80002b0ff0 ; mov ebx, 0x89fffe2d ; ret
0xffffff80002b1c87 : loopne 0xffffff80002b1ced ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002b760e : loopne 0xffffff80002b7617 ; pop rbp ; ret
0xffffff80002b768e : loopne 0xffffff80002b7694 ; pop rbp ; ret
0xffffff80002b7ad4 : loopne 0xffffff80002b7ae0 ; test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff80002b7af4 : loopne 0xffffff80002b7b00 ; test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff80002b93a6 : loopne 0xffffff80002b93ac ; pop rbp ; ret
0xffffff80002b93c8 : loopne 0xffffff80002b93ce ; pop rbp ; ret
0xffffff80002b93e9 : loopne 0xffffff80002b93ef ; pop rbp ; ret
0xffffff80002b9409 : loopne 0xffffff80002b940f ; pop rbp ; ret
0xffffff80002baa76 : loopne 0xffffff80002baa7c ; pop rbp ; ret
0xffffff80002bac8e : loopne 0xffffff80002bac9a ; pop rbp ; ret
0xffffff80002bbb98 : loopne 0xffffff80002bbb9e ; pop rbp ; ret
0xffffff80002bbdab : loopne 0xffffff80002bbdb1 ; pop rbp ; ret
0xffffff80002bbddf : loopne 0xffffff80002bbde5 ; pop rbp ; ret
0xffffff80002bbecb : loopne 0xffffff80002bbed6 ; or eax, ecx ; xor eax, 1 ; pop rbp ; ret
0xffffff80002bdce8 : loopne 0xffffff80002bdcef ; pop rbp ; ret
0xffffff80002c09c2 : loopne 0xffffff80002c09c8 ; pop rbp ; ret
0xffffff80002c0ab6 : loopne 0xffffff80002c0ab5 ; mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff80002cb14a : loopne 0xffffff80002cb150 ; pop rbp ; ret
0xffffff80002db24d : loopne 0xffffff80002db253 ; pop rbp ; ret
0xffffff80002db38a : loopne 0xffffff80002db39b ; pop rbp ; ret
0xffffff80002db3ba : loopne 0xffffff80002db3cb ; pop rbp ; ret
0xffffff80002db3ea : loopne 0xffffff80002db3fb ; pop rbp ; ret
0xffffff80002dbdaf : loopne 0xffffff80002dbdb9 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f7be8 : loopne 0xffffff80002f7bf2 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f859e : loopne 0xffffff80002f85af ; pop rbp ; ret
0xffffff80002f85bc : loopne 0xffffff80002f85cd ; pop rbp ; ret
0xffffff80002f85ea : loopne 0xffffff80002f85f0 ; pop rbp ; ret
0xffffff80002f8628 : loopne 0xffffff80002f862e ; pop rbp ; ret
0xffffff80002fa8b6 : loopne 0xffffff80002fa8bc ; pop rbp ; ret
0xffffff8000303673 : loopne 0xffffff8000303679 ; pop rbp ; ret
0xffffff800030f5d1 : loopne 0xffffff800030f5d9 ; enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff800030f5ee
0xffffff8000315b9e : loopne 0xffffff8000315ba6 ; enter -0x67b8, 0x48 ; add edx, eax ; jmp 0xffffff8000315bbb
0xffffff800031eb87 : loopne 0xffffff800031eb8f ; mov qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff800031f277 : loopne 0xffffff800031f27e ; enter -0x67b8, 0x5d ; ret
0xffffff800031f257 : loopne 0xffffff800031f2b8 ; ret
0xffffff80003274de : loopne 0xffffff80003274e5 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000327538 : loopne 0xffffff800032753e ; pop rbp ; ret
0xffffff80003426c3 : loopne 0xffffff80003426c9 ; pop rbp ; ret
0xffffff8000342708 : loopne 0xffffff800034270e ; pop rbp ; ret
0xffffff8000342728 : loopne 0xffffff800034272e ; pop rbp ; ret
0xffffff8000342749 : loopne 0xffffff800034274f ; pop rbp ; ret
0xffffff80003427a0 : loopne 0xffffff80003427a6 ; pop rbp ; ret
0xffffff8000350a34 : loopne 0xffffff8000350a9a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000354125 : loopne 0xffffff800035418b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800035dd3f : loopne 0xffffff800035dcfb ; ret 2
0xffffff800035eeed : loopne 0xffffff800035eef3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035efdb : loopne 0xffffff800035efe1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035efda : loopne 0xffffff800035efe2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003602d1 : loopne 0xffffff800036028d ; ret 2
0xffffff8000360541 : loopne 0xffffff8000360532 ; xor al, 0xb9 ; ret 2
0xffffff80003670fb : loopne 0xffffff8000367101 ; pop rbp ; ret
0xffffff800036716b : loopne 0xffffff8000367171 ; pop rbp ; ret
0xffffff80003675b2 : loopne 0xffffff80003675b8 ; pop rbp ; ret
0xffffff80003675fc : loopne 0xffffff8000367602 ; pop rbp ; ret
0xffffff80003678ca : loopne 0xffffff8000367930 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800036c9d3 : loopne 0xffffff800036c9cd ; ret
0xffffff800036c9d2 : loopne 0xffffff800036c9ce ; ret
0xffffff800037c5ff : loopne 0xffffff800037c60a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000382d28 : loopne 0xffffff8000382d22 ; ret 0x4402
0xffffff8000382d27 : loopne 0xffffff8000382d23 ; ret 0x4402
0xffffff8000387d01 : loopne 0xffffff8000387d0a ; pop rbp ; ret
0xffffff800038883a : loopne 0xffffff8000388843 ; or eax, ecx ; pop rbp ; ret
0xffffff8000389048 : loopne 0xffffff8000389097 ; mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff800038c080 : loopne 0xffffff800038c088 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800038c0a5 : loopne 0xffffff800038c0ad ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800039522d : loopne 0xffffff8000395280 ; shr ecx, 5 ; or dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff8000395274 : loopne 0xffffff800039529e ; add al, 0x96 ; pop rbp ; ret
0xffffff8000398424 : loopne 0xffffff8000398475 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800039994a : loopne 0xffffff8000399950 ; pop rbp ; ret
0xffffff800039a23e : loopne 0xffffff800039a244 ; pop rbp ; ret
0xffffff800039a2b2 : loopne 0xffffff800039a2b8 ; pop rbp ; ret
0xffffff800039a74b : loopne 0xffffff800039a79e ; mul edx ; shrd rax, rdx, 0x20 ; ret
0xffffff800039a9f5 : loopne 0xffffff800039aa57 ; pop r14 ; pop rbp ; ret
0xffffff800039f53e : loopne 0xffffff800039f5a4 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003a21ac : loopne 0xffffff80003a213c ; ja 0xffffff80003a2215 ; pop rbp ; ret
0xffffff80003a21db : loopne 0xffffff80003a223c ; ret
0xffffff80003a2548 : loopne 0xffffff80003a259b ; mov dword ptr [rip + 0x6aec60], edi ; pop rbp ; ret
0xffffff80003a2586 : loopne 0xffffff80003a25d9 ; mov dword ptr [rip + 0x6aec2a], edi ; pop rbp ; ret
0xffffff80003a2657 : loopne 0xffffff80003a26b8 ; ret
0xffffff80003a277b : loopne 0xffffff80003a273c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a270b : loopne 0xffffff80003a275a ; mov eax, esi ; pop rbp ; ret
0xffffff80003a27d3 : loopne 0xffffff80003a2794 ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a274b : loopne 0xffffff80003a27ac ; ret
0xffffff80003a28fe : loopne 0xffffff80003a295f ; ret
0xffffff80003a292e : loopne 0xffffff80003a298f ; ret
0xffffff80003a2a7e : loopne 0xffffff80003a2a11 ; cmp eax, 0x72eed7 ; pop rbp ; ret
0xffffff80003a2af5 : loopne 0xffffff80003a2b00 ; add byte ptr [rax], al ; mov rax, rsi ; pop rbp ; ret
0xffffff80003a2d85 : loopne 0xffffff80003a2d8d ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a2d57 : loopne 0xffffff80003a2db8 ; ret
0xffffff80003aa16f : loopne 0xffffff80003aa1d5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003ad762 : loopne 0xffffff80003ad76d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003b1cd4 : loopne 0xffffff80003b1ce2 ; jb 0xffffff80003b1cdd ; pop rbp ; ret
0xffffff80003b472e : loopne 0xffffff80003b47a5 ; add bh, bh ; ret 0x1589
0xffffff80003ba72a : loopne 0xffffff80003ba73b ; pop rbp ; ret
0xffffff80003ba8e7 : loopne 0xffffff80003ba94d ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003baaf3 : loopne 0xffffff80003baab4 ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003bab2c : loopne 0xffffff80003baaed ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003bac0b : loopne 0xffffff80003bac11 ; pop rbp ; ret
0xffffff80003baee8 : loopne 0xffffff80003baf37 ; dec eax ; pop rbp ; ret
0xffffff80003baf38 : loopne 0xffffff80003baf87 ; dec eax ; pop rbp ; ret
0xffffff80003c795c : loopne 0xffffff80003c7970 ; pop rbp ; ret
0xffffff80003d321d : loopne 0xffffff80003d31a9 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff80003d321c : loopne 0xffffff80003d31aa ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff80003d6601 : loopne 0xffffff80003d6609 ; add byte ptr [rax], dl ; add bh, dh ; ret 0
0xffffff80003fbe58 : loopne 0xffffff80003fbe6a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004141fe : loopne 0xffffff8000414264 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004235ec : loopne 0xffffff80004235ef ; ret
0xffffff800043da11 : loopne 0xffffff800043da17 ; pop rbp ; ret
0xffffff8000459842 : loopne 0xffffff80004597ce ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff8000459841 : loopne 0xffffff80004597cf ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff8000475d2d : loopne 0xffffff8000475d41 ; ret
0xffffff800047eab0 : loopne 0xffffff800047ea3c ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047eaaf : loopne 0xffffff800047ea3d ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047eb6c : loopne 0xffffff800047eaf8 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047eb6b : loopne 0xffffff800047eaf9 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047ebcd : loopne 0xffffff800047eb59 ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800047ebcc : loopne 0xffffff800047eb5a ; ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff8000491113 : loopne 0xffffff8000491196 ; fimul dword ptr [rax + 0x63] ; ret
0xffffff8000491cc1 : loopne 0xffffff8000491cc8 ; inc dword ptr [rax] ; loope 0xffffff8000491ccc ; jmp rbx
0xffffff8000491cc0 : loopne 0xffffff8000491cc9 ; inc dword ptr [rax] ; loope 0xffffff8000491ccd ; jmp rbx
0xffffff800049c8d9 : loopne 0xffffff800049c93a ; ret
0xffffff800049d0a2 : loopne 0xffffff800049d103 ; ret
0xffffff800049d3d0 : loopne 0xffffff800049d3d6 ; pop rbp ; ret
0xffffff800049e357 : loopne 0xffffff800049e3bd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800049e8e9 : loopne 0xffffff800049e94f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800049eaf3 : loopne 0xffffff800049eb1c ; sar eax, 0x1f ; xor eax, esi ; pop rbp ; ret
0xffffff800049f4a1 : loopne 0xffffff800049f4a7 ; pop rbp ; ret
0xffffff800049fa4e : loopne 0xffffff800049fab0 ; pop r14 ; pop rbp ; ret
0xffffff800049fd73 : loopne 0xffffff800049fdd9 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004a1d9f : loopne 0xffffff80004a1def ; mov esi, dword ptr [rsi] ; jmp 0xffffff80004a1d6d
0xffffff80004aa57b : loopne 0xffffff80004aa5fe ; rol byte ptr [rcx - 1], cl ; ret
0xffffff80004b36cb : loopne 0xffffff80004b36d1 ; pop rbp ; ret
0xffffff80004b388b : loopne 0xffffff80004b3891 ; pop rbp ; ret
0xffffff80004b3a37 : loopne 0xffffff80004b3a3d ; pop rbp ; ret
0xffffff80004b3a4a : loopne 0xffffff80004b3a5e ; pop rbp ; ret
0xffffff80004b3a5a : loopne 0xffffff80004b3a60 ; pop rbp ; ret
0xffffff80004b3a6a : loopne 0xffffff80004b3a70 ; pop rbp ; ret
0xffffff80004b3a7a : loopne 0xffffff80004b3a80 ; pop rbp ; ret
0xffffff80004b3a9a : loopne 0xffffff80004b3aa0 ; pop rbp ; ret
0xffffff80004b3acb : loopne 0xffffff80004b3ad1 ; pop rbp ; ret
0xffffff80004b3aea : loopne 0xffffff80004b3af0 ; pop rbp ; ret
0xffffff80004b3b0a : loopne 0xffffff80004b3b10 ; pop rbp ; ret
0xffffff80004b3b2a : loopne 0xffffff80004b3b30 ; pop rbp ; ret
0xffffff80004b3feb : loopne 0xffffff80004b3ff1 ; pop rbp ; ret
0xffffff80004b41a7 : loopne 0xffffff80004b41ae ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004c5104 : loopne 0xffffff80004c5101 ; idiv edi ; ret
0xffffff80004c815a : loopne 0xffffff80004c8160 ; pop rbp ; ret
0xffffff80004cb869 : loopne 0xffffff80004cb8cf ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004ccc22 : loopne 0xffffff80004ccc88 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004d2e50 : loopne 0xffffff80004d2eb6 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004d7693 : loopne 0xffffff80004d76f9 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004ed6a8 : loopne 0xffffff80004ed6ae ; pop rbp ; ret
0xffffff80004ed708 : loopne 0xffffff80004ed70e ; pop rbp ; ret
0xffffff80004f894c : loopne 0xffffff80004f890d ; sub eax, 0x5d000000 ; ret
0xffffff80004f891f : loopne 0xffffff80004f8925 ; pop rbp ; ret
0xffffff80004f897c : loopne 0xffffff80004f893d ; sub eax, 0x5d000000 ; ret
0xffffff80004f8b0c : loopne 0xffffff80004f8acd ; sub eax, 0x5d000000 ; ret
0xffffff80004f9108 : loopne 0xffffff80004f910e ; pop rbp ; ret
0xffffff80004f9118 : loopne 0xffffff80004f911f ; pop rbp ; ret
0xffffff80004f912a : loopne 0xffffff80004f9130 ; pop rbp ; ret
0xffffff80004f916b : loopne 0xffffff80004f9171 ; pop rbp ; ret
0xffffff80004f917a : loopne 0xffffff80004f9180 ; pop rbp ; ret
0xffffff80004f921b : loopne 0xffffff80004f9221 ; pop rbp ; ret
0xffffff80004f922b : loopne 0xffffff80004f9231 ; pop rbp ; ret
0xffffff80004fa0d8 : loopne 0xffffff80004fa0de ; pop rbp ; ret
0xffffff80004fa0eb : loopne 0xffffff80004fa0f1 ; pop rbp ; ret
0xffffff80004fa0f9 : loopne 0xffffff80004fa0ff ; pop rbp ; ret
0xffffff80004fa10b : loopne 0xffffff80004fa111 ; pop rbp ; ret
0xffffff80004fa11b : loopne 0xffffff80004fa121 ; pop rbp ; ret
0xffffff80004fa15b : loopne 0xffffff80004fa161 ; pop rbp ; ret
0xffffff80004fa169 : loopne 0xffffff80004fa16f ; pop rbp ; ret
0xffffff80004fa20b : loopne 0xffffff80004fa211 ; pop rbp ; ret
0xffffff80004fa21b : loopne 0xffffff80004fa221 ; pop rbp ; ret
0xffffff80004fa22b : loopne 0xffffff80004fa231 ; pop rbp ; ret
0xffffff80004fa23b : loopne 0xffffff80004fa241 ; pop rbp ; ret
0xffffff80004fa24b : loopne 0xffffff80004fa251 ; pop rbp ; ret
0xffffff80004fa384 : loopne 0xffffff80004fa38a ; pop rbp ; ret
0xffffff80004fa3ed : loopne 0xffffff80004fa3f4 ; pop rbp ; ret
0xffffff80004fa40b : loopne 0xffffff80004fa411 ; pop rbp ; ret
0xffffff80004fa41b : loopne 0xffffff80004fa421 ; pop rbp ; ret
0xffffff80004fa42c : loopne 0xffffff80004fa432 ; pop rbp ; ret
0xffffff80004fa4fb : loopne 0xffffff80004fa501 ; pop rbp ; ret
0xffffff80004fa54b : loopne 0xffffff80004fa551 ; pop rbp ; ret
0xffffff80004fa5dc : loopne 0xffffff80004fa5e2 ; pop rbp ; ret
0xffffff80004fa7ff : loopne 0xffffff80004fa805 ; pop rbp ; ret
0xffffff80004fa822 : loopne 0xffffff80004fa828 ; pop rbp ; ret
0xffffff80004fa862 : loopne 0xffffff80004fa868 ; pop rbp ; ret
0xffffff80004fa881 : loopne 0xffffff80004fa887 ; pop rbp ; ret
0xffffff80004fa8a2 : loopne 0xffffff80004fa8a8 ; pop rbp ; ret
0xffffff80004fa8bf : loopne 0xffffff80004fa8c5 ; pop rbp ; ret
0xffffff80004fbb0b : loopne 0xffffff80004fbb11 ; pop rbp ; ret
0xffffff8000504aeb : loopne 0xffffff8000504af1 ; pop rbp ; ret
0xffffff800051e8b7 : loopne 0xffffff800051e932 ; add byte ptr [rcx], r14b ; shr al, 0x8e ; call rdi
0xffffff8000528ea5 : loopne 0xffffff8000528eae ; add eax, 3 ; pop rbp ; ret
0xffffff8000528ff4 : loopne 0xffffff800052905a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800052918a : loopne 0xffffff80005291f0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000530028 : loopne 0xffffff800053002e ; pop rbp ; ret
0xffffff8000532de2 : loopne 0xffffff8000532dea ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000541996 : loopne 0xffffff80005419fc ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800054ef03 : loopne 0xffffff800054ef69 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800055aada : loopne 0xffffff800055aae0 ; pop rbp ; ret
0xffffff800055fdcf : loopne 0xffffff800055fe31 ; pop r14 ; pop rbp ; ret
0xffffff800057e198 : loopne 0xffffff800057e19e ; pop rbp ; ret
0xffffff800057f208 : loopne 0xffffff800057f20e ; pop rbp ; ret
0xffffff80005801eb : loopne 0xffffff80005801f1 ; pop rbp ; ret
0xffffff8000581598 : loopne 0xffffff800058159e ; pop rbp ; ret
0xffffff8000582733 : loopne 0xffffff8000582799 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000584767 : loopne 0xffffff800058476d ; pop rbp ; ret
0xffffff8000584838 : loopne 0xffffff800058483e ; pop rbp ; ret
0xffffff80005849ab : loopne 0xffffff80005849b1 ; pop rbp ; ret
0xffffff8000584a83 : loopne 0xffffff8000584a89 ; pop rbp ; ret
0xffffff8000584b43 : loopne 0xffffff8000584b49 ; pop rbp ; ret
0xffffff8000599ac6 : loopne 0xffffff8000599b2c ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005a7e88 : loopne 0xffffff80005a7e8e ; pop rbp ; ret
0xffffff80005af0bf : loopne 0xffffff80005af110 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005b0168 : loopne 0xffffff80005b016e ; pop rbp ; ret
0xffffff80005b1158 : loopne 0xffffff80005b115e ; pop rbp ; ret
0xffffff80005be868 : loopne 0xffffff80005be86e ; pop rbp ; ret
0xffffff80005d2c37 : loopne 0xffffff80005d2c3c ; ret 0x8b41
0xffffff80005d7496 : loopne 0xffffff80005d74a0 ; add byte ptr [rbp + 0x10b78c0], al ; ret
0xffffff80005e3908 : loopne 0xffffff80005e390e ; pop rbp ; ret
0xffffff80005e8c7d : loopne 0xffffff80005e8c85 ; add byte ptr [rax], al ; add al, 0x5d ; ret
0xffffff80005eaf08 : loopne 0xffffff80005eaf0e ; pop rbp ; ret
0xffffff80005eff7e : loopne 0xffffff80005eff84 ; pop rbp ; ret
0xffffff80005fead9 : loopne 0xffffff80005feaed ; ret 0x4389
0xffffff80005feb51 : loopne 0xffffff80005feb65 ; ret 0x4389
0xffffff800061110e : loopne 0xffffff8000611116 ; add byte ptr [rax], al ; add al, 0x5d ; ret
0xffffff800061b60b : loopne 0xffffff800061b671 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800062282c : loopne 0xffffff8000622835 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000626511 : loopne 0xffffff8000626517 ; pop rbp ; ret
0xffffff80006265de : loopne 0xffffff80006265e4 ; pop rbp ; ret
0xffffff800062eb58 : loopne 0xffffff800062eb95 ; ret 0x420f
0xffffff800062fc22 : loopne 0xffffff800062fbee ; call 0xffffff7fe8944042
0xffffff8000636b18 : loopne 0xffffff8000636b1e ; pop rbp ; ret
0xffffff800064660c : loopne 0xffffff8000646612 ; pop rbp ; ret
0xffffff800064661c : loopne 0xffffff8000646622 ; pop rbp ; ret
0xffffff8000656c66 : loopne 0xffffff8000656c54 ; xor al, 0x78 ; ret
0xffffff8000657296 : loopne 0xffffff8000657284 ; add al, 0x72 ; ret
0xffffff800065d994 : loopne 0xffffff800065d9fa ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800065fe1a : loopne 0xffffff800065fe80 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006614dd : loopne 0xffffff8000661543 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000669b29 : loopne 0xffffff8000669b2c ; call rax
0xffffff8000669b25 : loopne 0xffffff8000669b2c ; jmp qword ptr [rsi - 0x20]
0xffffff8000669b28 : loopne 0xffffff8000669b2d ; call rax
0xffffff8000669b24 : loopne 0xffffff8000669b2d ; jmp qword ptr [rsi - 0x20]
0xffffff800066c63c : loopne 0xffffff800066c6a2 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800066e405 : loopne 0xffffff800066e46b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000670dee : loopne 0xffffff8000670df8 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000677fa5 : loopne 0xffffff8000677fdc ; imul al ; ret
0xffffff800068076e : loopne 0xffffff8000680776 ; add byte ptr [rax], al ; add al, 0x5d ; ret
0xffffff80006869a5 : loopne 0xffffff80006869be ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000687028 : loopne 0xffffff800068702e ; pop rbp ; ret
0xffffff800068c51b : loopne 0xffffff800068c523 ; add byte ptr [rax], al ; add al, 0x5d ; ret
0xffffff800069f990 : loopne 0xffffff800069f993 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a3096 : loopne 0xffffff80006a30e7 ; mov edx, ebx ; call 0xffffff80002c53a7
0xffffff80006a3488 : loopne 0xffffff80006a348e ; pop rbp ; ret
0xffffff80006a9cf3 : loopne 0xffffff80006a9d59 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006b50b2 : loopne 0xffffff80006b5118 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80006bdd8c : loopne 0xffffff80006bdd29 ; str word ptr [rax - 0x77] ; ret
0xffffff80006ca8e6 : loopne 0xffffff80006ca8ad ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d6a40 : loopne 0xffffff80006d6a48 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007086a5 : loopne 0xffffff80007086ae ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072d428 : loopne 0xffffff800072d414 ; ret 0xe9
0xffffff800073abef : loopne 0xffffff800073abe1 ; sbb dword ptr [rax - 1], ecx ; ret 0x4eb
0xffffff800073d568 : loopne 0xffffff800073d5ce ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800074acb9 : loopne 0xffffff800074ad0c ; mov ecx, edi ; call rax
0xffffff800074c32f : loopne 0xffffff800074c346 ; add eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff800074db31 : loopne 0xffffff800074dab8 ; ret
0xffffff800074f1a2 : loopne 0xffffff800074f1a8 ; pop rbp ; ret
0xffffff8000755fc9 : loopne 0xffffff8000755fcf ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000756dbb : loopne 0xffffff8000756dcc ; pop rbp ; ret
0xffffff8000756dce : loopne 0xffffff8000756dd4 ; pop rbp ; ret
0xffffff800075db65 : loopne 0xffffff800075db68 ; call qword ptr [rdx]
0xffffff800076013e : loopne 0xffffff8000760149 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000760754 : loopne 0xffffff80007607ba ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000767801 : loopne 0xffffff800076780c ; mov dword ptr [rdi + 4], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800077daaa : loopne 0xffffff800077db10 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800077f5fc : loopne 0xffffff800077f602 ; pop rbp ; ret
0xffffff8000780831 : loopne 0xffffff8000780897 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000781d4e : loopne 0xffffff8000781d58 ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800078b377 : loopne 0xffffff800078b3dd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800078c082 : loopne 0xffffff800078c088 ; pop rbp ; ret
0xffffff8000793793 : loopne 0xffffff8000793799 ; pop rbp ; ret
0xffffff8000796039 : loopne 0xffffff800079603f ; pop rbp ; ret
0xffffff80007960c5 : loopne 0xffffff80007960cc ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000797247 : loopne 0xffffff800079724d ; pop rbp ; ret
0xffffff80007a37d4 : loopne 0xffffff80007a37e8 ; ret
0xffffff80007a65ec : loopne 0xffffff80007a663d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007ad3fa : loopne 0xffffff80007ad460 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007afa4e : loopne 0xffffff80007afa54 ; pop rbp ; ret
0xffffff80007b0ff1 : loopne 0xffffff80007b1057 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007b4094 : loopne 0xffffff80007b40f4 ; pop rbp ; ret
0xffffff80007b4394 : loopne 0xffffff80007b43f4 ; pop rbp ; ret
0xffffff80007b5349 : loopne 0xffffff80007b534f ; pop rbp ; ret
0xffffff80007cd79c : loopne 0xffffff80007cd7b0 ; pop rbp ; ret
0xffffff80007cda15 : loopne 0xffffff80007cda7b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007ce196 : loopne 0xffffff80007ce19c ; xor eax, eax ; pop rbp ; ret
0xffffff80007cfd16 : loopne 0xffffff80007cfd7c ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007d4726 : loopne 0xffffff80007d472d ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007d47fc : loopne 0xffffff80007d4802 ; pop rbp ; ret
0xffffff80007d4efc : loopne 0xffffff80007d4f02 ; pop rbp ; ret
0xffffff80007d4f0c : loopne 0xffffff80007d4f12 ; pop rbp ; ret
0xffffff80007d4f5b : loopne 0xffffff80007d4f61 ; pop rbp ; ret
0xffffff80007e1ef5 : loopne 0xffffff80007e1f0d ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007e2b24 : loopne 0xffffff80007e2aab ; ret
0xffffff80007e4ab4 : loopne 0xffffff80007e4abd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ecfad : loopne 0xffffff80007ecfb1 ; pop rbp ; ret
0xffffff80007ed050 : loopne 0xffffff80007ed054 ; pop rbp ; ret
0xffffff80007f6de2 : loopne 0xffffff80007f6de8 ; pop rbp ; ret
0xffffff80007fe2aa : loopne 0xffffff80007fe2b2 ; pop rbp ; ret
0xffffff80007fe2ea : loopne 0xffffff80007fe2f2 ; pop rbp ; ret
0xffffff80007fe32a : loopne 0xffffff80007fe331 ; pop rbp ; ret
0xffffff80008024b1 : loopne 0xffffff8000802517 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800080f0af : loopne 0xffffff800080f115 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800080f15f : loopne 0xffffff800080f1c5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800081067f : loopne 0xffffff80008106e5 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800081072f : loopne 0xffffff8000810795 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008127d1 : loopne 0xffffff80008127dc ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008172e4 : loopne 0xffffff80008172f2 ; mov rax, qword ptr [r8 + rax + 8] ; pop rbp ; ret
0xffffff800081fd65 : loopne 0xffffff800081fd68 ; ret
0xffffff8000824b38 : loopne 0xffffff8000824b9e ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000830093 : loopne 0xffffff80008300f9 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000831cbd : loopne 0xffffff8000831cc4 ; enter -0x67b8, 0x5d ; ret
0xffffff800083c1d0 : loopne 0xffffff800083c1e8 ; or rax, rdx ; pop rbp ; ret
0xffffff80008458eb : loopne 0xffffff8000845951 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000845c16 : loopne 0xffffff8000845c7c ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000846aaf : loopne 0xffffff8000846aa4 ; pop rbp ; ret
0xffffff8000846adf : loopne 0xffffff8000846ad4 ; pop rbp ; ret
0xffffff800084d08d : loopne 0xffffff800084d093 ; pop rbp ; ret
0xffffff800084e66c : loopne 0xffffff800084e672 ; pop rbp ; ret
0xffffff800084e6bc : loopne 0xffffff800084e6c2 ; pop rbp ; ret
0xffffff800084e70c : loopne 0xffffff800084e712 ; pop rbp ; ret
0xffffff800084e71c : loopne 0xffffff800084e722 ; pop rbp ; ret
0xffffff800084e75c : loopne 0xffffff800084e762 ; pop rbp ; ret
0xffffff8000855edf : loopne 0xffffff8000855f41 ; pop r14 ; pop rbp ; ret
0xffffff8000858451 : loopne 0xffffff8000858463 ; add edi, -8 ; jne 0xffffff8000858458 ; pop rbp ; ret
0xffffff8000859035 : loopne 0xffffff800085909b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800085a457 : loopne 0xffffff800085a4bd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800085b7b8 : loopne 0xffffff800085b819 ; ret
0xffffff800085df38 : loopne 0xffffff800085df99 ; ret
0xffffff800085eda4 : loopne 0xffffff800085ee0a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008608c2 : loopne 0xffffff800086093c ; sbb bh, bh ; ret
0xffffff8000860a22 : loopne 0xffffff8000860a9c ; sbb bh, bh ; ret
0xffffff800086389e : loopne 0xffffff80008638a4 ; pop rbp ; ret
0xffffff8000866c18 : loopne 0xffffff8000866c79 ; ret
0xffffff800086af1c : loopne 0xffffff800086af7d ; ret
0xffffff800086b2c3 : loopne 0xffffff800086b329 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800086b6bc : loopne 0xffffff800086b722 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800086b6f6 : loopne 0xffffff800086b757 ; ret
0xffffff800086cfb8 : loopne 0xffffff800086d019 ; ret
0xffffff800086dba8 : loopne 0xffffff800086dc09 ; ret
0xffffff800086dbb8 : loopne 0xffffff800086dc19 ; ret
0xffffff800086ddf8 : loopne 0xffffff800086de59 ; ret
0xffffff800086e372 : loopne 0xffffff800086e3d4 ; pop r14 ; pop rbp ; ret
0xffffff800086e9d2 : loopne 0xffffff800086ea34 ; pop r14 ; pop rbp ; ret
0xffffff800086ea42 : loopne 0xffffff800086eaa4 ; pop r14 ; pop rbp ; ret
0xffffff800086eab2 : loopne 0xffffff800086eb14 ; pop r14 ; pop rbp ; ret
0xffffff8000878e65 : loopne 0xffffff8000878ec6 ; ret
0xffffff800087996c : loopne 0xffffff800087992d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff8000879971 : loopne 0xffffff80008799d2 ; ret
0xffffff80008800f4 : loopne 0xffffff800088015a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000881be4 : loopne 0xffffff8000881c4a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800088257c : loopne 0xffffff8000882517 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000888424 : loopne 0xffffff800088848a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800088c516 : loopne 0xffffff800088c57c ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800088d34f : loopne 0xffffff800088d3b1 ; pop r14 ; pop rbp ; ret
0xffffff800088db92 : loopne 0xffffff800088dbac ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff800088fb50 : loopne 0xffffff800088fb58 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800088fb4c : loopne 0xffffff800088fba0 ; mov eax, dword ptr [rax + 0x1e0] ; pop rbp ; jmp rax
0xffffff8000890ca5 : loopne 0xffffff8000890d0b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000892821 : loopne 0xffffff80008927e2 ; mov esp, 0x5de00002 ; ret
0xffffff8000892861 : loopne 0xffffff8000892822 ; mov esp, 0x5de00002 ; ret
0xffffff8000892826 : loopne 0xffffff8000892887 ; ret
0xffffff8000892866 : loopne 0xffffff80008928c7 ; ret
0xffffff80008928cf : loopne 0xffffff8000892930 ; ret
0xffffff800089290f : loopne 0xffffff8000892962 ; mov eax, 0xe00002bc ; pop rbp ; ret
0xffffff8000892916 : loopne 0xffffff8000892977 ; ret
0xffffff800089294f : loopne 0xffffff80008929b0 ; ret
0xffffff8000892abc : loopne 0xffffff8000892b1d ; ret
0xffffff80008933a5 : loopne 0xffffff80008933a3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008933a4 : loopne 0xffffff80008933a4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000894a98 : loopne 0xffffff8000894afa ; pop r14 ; pop rbp ; ret
0xffffff8000895d68 : loopne 0xffffff8000895d6a ; or eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff80008972b3 : loopne 0xffffff8000897319 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000897f54 : loopne 0xffffff8000897f68 ; xchg eax, ebp ; ret
0xffffff8000898928 : loopne 0xffffff800089893c ; ret
0xffffff800089a427 : loopne 0xffffff800089a43d ; xor esi, esi ; xor edx, edx ; pop rbp ; jmp r9
0xffffff800089faf8 : loopne 0xffffff800089fb04 ; pop rbp ; ret
0xffffff80008a129c : loopne 0xffffff80008a12b5 ; xchg byte ptr [rcx - 0x45000000], bl ; ret 2
0xffffff80008a207a : loopne 0xffffff80008a202a ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008a2e18 : loopne 0xffffff80008a2e79 ; ret
0xffffff80008a3ec3 : loopne 0xffffff80008a3f25 ; pop r14 ; pop rbp ; ret
0xffffff80008a3ee9 : loopne 0xffffff80008a3f4a ; ret
0xffffff80008a7141 : loopne 0xffffff80008a7173 ; add byte ptr [rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff80008a7b57 : loopne 0xffffff80008a7b61 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008a825a : loopne 0xffffff80008a82c0 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008a867a : loopne 0xffffff80008a8689 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008a9a68 : loopne 0xffffff80008a9aca ; pop r14 ; pop rbp ; ret
0xffffff80008aa76c : loopne 0xffffff80008aa72d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa79c : loopne 0xffffff80008aa75d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa7cc : loopne 0xffffff80008aa78d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa7fc : loopne 0xffffff80008aa7bd ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa771 : loopne 0xffffff80008aa7d2 ; ret
0xffffff80008aa7a1 : loopne 0xffffff80008aa802 ; ret
0xffffff80008aa84c : loopne 0xffffff80008aa80d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa7d1 : loopne 0xffffff80008aa832 ; ret
0xffffff80008aa87c : loopne 0xffffff80008aa83d ; fadd dword ptr [rdx] ; add al, ah ; pop rbp ; ret
0xffffff80008aa801 : loopne 0xffffff80008aa862 ; ret
0xffffff80008aa851 : loopne 0xffffff80008aa8b2 ; ret
0xffffff80008aa881 : loopne 0xffffff80008aa8e2 ; ret
0xffffff80008aae02 : loopne 0xffffff80008aadf3 ; jne 0xffffff80008aadc5 ; ret 2
0xffffff80008ab487 : loopne 0xffffff80008ab491 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ad1e0 : loopne 0xffffff80008ad242 ; pop r14 ; pop rbp ; ret
0xffffff80008ade0f : loopne 0xffffff80008ade75 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008b0778 : loopne 0xffffff80008b07d9 ; ret
0xffffff80008b0788 : loopne 0xffffff80008b07e9 ; ret
0xffffff80008b1ad8 : loopne 0xffffff80008b1b39 ; ret
0xffffff80008b1ae8 : loopne 0xffffff80008b1b49 ; ret
0xffffff80008b3c08 : loopne 0xffffff80008b3c69 ; ret
0xffffff80008b6a98 : loopne 0xffffff80008b6af9 ; ret
0xffffff80008b7498 : loopne 0xffffff80008b74f9 ; ret
0xffffff80008b74b8 : loopne 0xffffff80008b7519 ; ret
0xffffff80008b74e8 : loopne 0xffffff80008b7549 ; ret
0xffffff80008b74f8 : loopne 0xffffff80008b7559 ; ret
0xffffff80008b7508 : loopne 0xffffff80008b7569 ; ret
0xffffff80008b7f8d : loopne 0xffffff80008b7fe0 ; test eax, eax ; jne 0xffffff80008b7f89 ; jmp 0xffffff80008b7fbd
0xffffff80008b810d : loopne 0xffffff80008b8160 ; test eax, eax ; jne 0xffffff80008b8109 ; jmp 0xffffff80008b8157
0xffffff80008b835d : loopne 0xffffff80008b83b0 ; test eax, eax ; jne 0xffffff80008b8359 ; jmp 0xffffff80008b83a7
0xffffff80008b841d : loopne 0xffffff80008b8470 ; test eax, eax ; jne 0xffffff80008b8419 ; jmp 0xffffff80008b8475
0xffffff80008b8923 : loopne 0xffffff80008b88df ; ret 2
0xffffff80008b89c6 : loopne 0xffffff80008b8982 ; ret 2
0xffffff80008b89cb : loopne 0xffffff80008b8a31 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ba62a : loopne 0xffffff80008ba5e6 ; ret 2
0xffffff80008ba5c9 : loopne 0xffffff80008ba62b ; pop r14 ; pop rbp ; ret
0xffffff80008ba62f : loopne 0xffffff80008ba691 ; pop r14 ; pop rbp ; ret
0xffffff80008bad2e : loopne 0xffffff80008bacea ; ret 2
0xffffff80008badde : loopne 0xffffff80008bad9a ; ret 2
0xffffff80008bb3a4 : loopne 0xffffff80008bb360 ; ret 2
0xffffff80008bb3a9 : loopne 0xffffff80008bb40f ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008be035 : loopne 0xffffff80008be028 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff80008be792 : loopne 0xffffff80008be78c ; ret 0xf10
0xffffff80008bf54d : loopne 0xffffff80008bf5a0 ; test eax, eax ; jne 0xffffff80008bf549 ; jmp 0xffffff80008bf57d
0xffffff80008bf5fd : loopne 0xffffff80008bf650 ; test eax, eax ; jne 0xffffff80008bf5f9 ; jmp 0xffffff80008bf655
0xffffff80008bf8be : loopne 0xffffff80008bf8ad ; ret
0xffffff80008c2c18 : loopne 0xffffff80008c2c79 ; ret
0xffffff80008c592c : loopne 0xffffff80008c5932 ; pop rbp ; ret
0xffffff80008c5958 : loopne 0xffffff80008c595e ; pop rbp ; ret
0xffffff80008c68dc : loopne 0xffffff80008c68e2 ; pop rbp ; ret
0xffffff80008c6908 : loopne 0xffffff80008c690e ; pop rbp ; ret
0xffffff80008c78cc : loopne 0xffffff80008c78d2 ; pop rbp ; ret
0xffffff80008c78f8 : loopne 0xffffff80008c78fe ; pop rbp ; ret
0xffffff80008c8878 : loopne 0xffffff80008c887e ; pop rbp ; ret
0xffffff80008c88a8 : loopne 0xffffff80008c88ae ; pop rbp ; ret
0xffffff80008cb03d : loopne 0xffffff80008cb047 ; pop rbp ; ret
0xffffff80008cb138 : loopne 0xffffff80008cb142 ; lea eax, [rax + rax*2] ; pop rbp ; ret
0xffffff80008cd168 : loopne 0xffffff80008cd1ce ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008cd8ed : loopne 0xffffff80008cd8e9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cdc16 : loopne 0xffffff80008cdc7a ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008cf6a4 : loopne 0xffffff80008cf6b8 ; ret 0x567e
0xffffff80008cf874 : loopne 0xffffff80008cf888 ; ret 0x567e
0xffffff80008cf987 : loopne 0xffffff80008cf9ed ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008cfa57 : loopne 0xffffff80008cfabd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008d50f1 : loopne 0xffffff80008d50b0 ; ret 2
0xffffff80008d5060 : loopne 0xffffff80008d50c2 ; pop r14 ; pop rbp ; ret
0xffffff80008d6450 : loopne 0xffffff80008d63dd ; sal byte ptr [rbp + 0x78], 0xbb ; ret 2
0xffffff80008d7b08 : loopne 0xffffff80008d7b69 ; ret
0xffffff80008d7b18 : loopne 0xffffff80008d7b79 ; ret
0xffffff80008d7b28 : loopne 0xffffff80008d7b89 ; ret
0xffffff80008d7b38 : loopne 0xffffff80008d7b99 ; ret
0xffffff80008da81d : loopne 0xffffff80008da86e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008dba4e : loopne 0xffffff80008dbab0 ; pop r14 ; pop rbp ; ret
0xffffff80008de777 : loopne 0xffffff80008de7d9 ; pop r14 ; pop rbp ; ret
0xffffff80008de7c7 : loopne 0xffffff80008de829 ; pop r14 ; pop rbp ; ret
0xffffff80008e2475 : loopne 0xffffff80008e24c6 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e2c77 : loopne 0xffffff80008e2cdd ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008e2de4 : loopne 0xffffff80008e2e4a ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008e3a73 : loopne 0xffffff80008e3a60 ; ret 0xffc0
0xffffff80008e4c08 : loopne 0xffffff80008e4c59 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e4c82 : loopne 0xffffff80008e4cd3 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e4d07 : loopne 0xffffff80008e4d58 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e4d7a : loopne 0xffffff80008e4dcb ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e5707 : loopne 0xffffff80008e5717 ; or rax, rdx ; pop rbp ; ret
0xffffff80008ed920 : loopne 0xffffff80008ed926 ; pop rbp ; ret
0xffffff80008ee485 : loopne 0xffffff80008ee4eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f2fb5 : loopne 0xffffff80008f301b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f3175 : loopne 0xffffff80008f31db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f3705 : loopne 0xffffff80008f376b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f38c5 : loopne 0xffffff80008f392b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f3a85 : loopne 0xffffff80008f3aeb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f5323 : loopne 0xffffff80008f5329 ; add byte ptr [rax], al ; call rcx
0xffffff80008f537b : loopne 0xffffff80008f5381 ; add byte ptr [rax], al ; call rcx
0xffffff80008f5ca0 : loopne 0xffffff80008f5ca6 ; add byte ptr [rax], al ; call rcx
0xffffff80008f5eee : loopne 0xffffff80008f5ef4 ; add byte ptr [rax], al ; call rcx
0xffffff80008f6325 : loopne 0xffffff80008f638b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f7535 : loopne 0xffffff80008f759b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f8815 : loopne 0xffffff80008f887b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f95c5 : loopne 0xffffff80008f962b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008f9ed5 : loopne 0xffffff80008f9f3b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fa0f5 : loopne 0xffffff80008fa15b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fac65 : loopne 0xffffff80008faccb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fca85 : loopne 0xffffff80008fcaeb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fd485 : loopne 0xffffff80008fd4eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fd6a5 : loopne 0xffffff80008fd70b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fdd65 : loopne 0xffffff80008fddcb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fdf85 : loopne 0xffffff80008fdfeb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fedc5 : loopne 0xffffff80008fee2b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ff305 : loopne 0xffffff80008ff36b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ff685 : loopne 0xffffff80008ff6eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ffa15 : loopne 0xffffff80008ffa7b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008ffbe5 : loopne 0xffffff80008ffc4b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008fffc5 : loopne 0xffffff800090002b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009006f5 : loopne 0xffffff800090075b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000901225 : loopne 0xffffff800090128b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000901d35 : loopne 0xffffff8000901d9b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000901f05 : loopne 0xffffff8000901f6b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009020d5 : loopne 0xffffff800090213b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009022a5 : loopne 0xffffff800090230b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000902475 : loopne 0xffffff80009024db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000902bf5 : loopne 0xffffff8000902c5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000902dc5 : loopne 0xffffff8000902e2b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000902f95 : loopne 0xffffff8000902ffb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000903365 : loopne 0xffffff80009033cb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009038e5 : loopne 0xffffff800090394b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000903eb5 : loopne 0xffffff8000903f1b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000904485 : loopne 0xffffff80009044eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000904e65 : loopne 0xffffff8000904ecb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000905035 : loopne 0xffffff800090509b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009061e5 : loopne 0xffffff800090624b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009065b5 : loopne 0xffffff800090661b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000906785 : loopne 0xffffff80009067eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000906c05 : loopne 0xffffff8000906c6b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000907165 : loopne 0xffffff80009071cb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009076b5 : loopne 0xffffff800090771b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000907875 : loopne 0xffffff80009078db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000908675 : loopne 0xffffff80009086db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000908845 : loopne 0xffffff80009088ab ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000908a15 : loopne 0xffffff8000908a7b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000908be5 : loopne 0xffffff8000908c4b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000909775 : loopne 0xffffff800090970a ; add eax, 0x22e144 ; jmp 0xffffff8000909748
0xffffff8000909774 : loopne 0xffffff800090970b ; add eax, 0x22e144 ; jmp 0xffffff8000909749
0xffffff80009096b5 : loopne 0xffffff800090971b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000909785 : loopne 0xffffff80009097eb ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80009097f1 : loopne 0xffffff800090981a ; add byte ptr [rax - 1], cl ; ret
0xffffff8000909849 : loopne 0xffffff8000909871 ; add bl, ch ; ret 0x8348
0xffffff8000909b05 : loopne 0xffffff8000909b6b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000909cc5 : loopne 0xffffff8000909d2b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a075 : loopne 0xffffff800090a0db ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000b412a0 : loopne 0xffffff8000b4122b ; rol dh, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x958b
0xffffff8000b4890d : loopne 0xffffff8000b48939 ; ret 0x8844
0xffffff8000b4a50e : loopne 0xffffff8000b4a53a ; ret 0x8840
0xffffff8000b4a51f : loopne 0xffffff8000b4a54b ; ret 0x8840
0xffffff8000294dbb : ltr word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800038aba6 : ltr word ptr [rip + 0x5a75b5] ; pop rbp ; ret
0xffffff800039a7f0 : mfence ; ret
0xffffff8000513fec : mov ah, 0 ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000441878 : mov ah, 0x10 ; cmc ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; pop rsp ; ret
0xffffff8000457668 : mov ah, 0x12 ; call 0xffffff7fc3cebf74
0xffffff800059bdff : mov ah, 0x21 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff800079b256 : mov ah, 0x24 ; lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ce8
0xffffff8000281b62 : mov ah, 0x48 ; mov edx, ebx ; mov ecx, r15d ; call qword ptr [rdi]
0xffffff800076cf88 : mov ah, 0x5a ; ret 0x49ff
0xffffff8000652b68 : mov ah, 0x5d ; enter 0x48ff, -0x77 ; ret
0xffffff800074b396 : mov ah, 0x6f ; xor eax, dword ptr [rax] ; jg 0xffffff800074b400 ; pop r14 ; pop rbp ; ret
0xffffff80006572e8 : mov ah, 0x71 ; ret
0xffffff80002be33a : mov ah, 0x7e ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002f85b7 : mov ah, 0x7f ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff80002f85d2 ; pop rbp ; ret
0xffffff800026a78c : mov ah, 0x83 ; ret 0x481c
0xffffff80007bada5 : mov ah, 0x89 ; ret
0xffffff8000841101 : mov ah, 0x89 ; ret 0x2944
0xffffff8000292d68 : mov ah, 0xa0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800057d4e1 : mov ah, 0xd5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006508e8 : mov ah, 0xdb ; ret
0xffffff80006505e8 : mov ah, 0xde ; ret
0xffffff8000865f27 : mov ah, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000762e88 : mov ah, 0xfb ; ret 0x48ff
0xffffff800076346b : mov ah, 0xff ; mov rdi, qword ptr [rbp - 0x30] ; call 0xffffff8000392a49
0xffffff800077269a : mov ah, 0xff ; mov rdi, r15 ; call 0xffffff8000392a48
0xffffff800074fa55 : mov ah, 0xff ; pop rbp ; ret
0xffffff80005be736 : mov ah, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b1be4 : mov ah, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800030d37f : mov ah, 8 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004edec7 : mov ah, ah ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0xffffff8000345206 : mov ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff800087aa9a : mov ah, bh ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80007ce194 : mov ah, bl ; loopne 0xffffff80007ce19e ; xor eax, eax ; pop rbp ; ret
0xffffff800055bfc2 : mov ah, byte ptr [rcx] ; sar edi, cl ; jmp 0xffffff800055bf8f
0xffffff8000b3ea2a : mov ah, byte ptr [rdi + 0x3b] ; ret 0x149
0xffffff800049b722 : mov ah, byte ptr [rdx - 0x76b7ff9d] ; ret
0xffffff80005516d3 : mov ah, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003e26c2 : mov ah, byte ptr [rsi + 6] ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80007f044e : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000584c17 : mov al, 0 ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x3e], cl ; pop rbp ; ret
0xffffff80004b4127 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006d82f3 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800063f0f5 : mov al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000669a4a : mov al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000716fdd : mov al, 0x25 ; jl 0xffffff8000716f70 ; clc ; pop rbp ; ret
0xffffff8000716fbb : mov al, 0x25 ; jl 0xffffff800071700e ; and eax, ecx ; pop rbp ; ret
0xffffff80002579f2 : mov al, 0x29 ; ret
0xffffff8000391ab9 : mov al, 0x30 ; add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff800080deaa : mov al, 0x32 ; sete al ; pop rbp ; ret
0xffffff8000743666 : mov al, 0x39 ; add byte ptr [rax - 0x77], cl ; ret 0x6fe8
0xffffff80007087c4 : mov al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff800036b68b : mov al, 0x40 ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800075e87c : mov al, 0x40 ; ret
0xffffff80008f6e67 : mov al, 0x41 ; call rsp
0xffffff8000605a44 : mov al, 0x45 ; add byte ptr [r8 - 0x77], r9b ; ret 0x90e8
0xffffff800028fc43 : mov al, 0x48 ; add ecx, eax ; jmp rcx
0xffffff80002bf0fe : mov al, 0x48 ; add ecx, eax ; mov ebx, 4 ; jmp rcx
0xffffff800039b8ba : mov al, 0x48 ; add edx, eax ; jmp rdx
0xffffff80002d6d44 : mov al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call 0xffffff8000393047
0xffffff8000763f42 : mov al, 0x48 ; mov edi, ebx ; call 0xffffff80003923e7
0xffffff800081cdb1 : mov al, 0x48 ; mov esi, eax ; call rcx
0xffffff800027fc0a : mov al, 0x4c ; add cl, ch ; ret
0xffffff80005ff106 : mov al, 0x4c ; add eax, eax ; jmp rax
0xffffff80008f6fcf : mov al, 0x4c ; mov ecx, dword ptr [rbp - 0x48] ; call r14
0xffffff80008f7092 : mov al, 0x4c ; mov ecx, dword ptr [rbp - 0x48] ; call rbx
0xffffff80008bd37b : mov al, 0x4c ; mov edi, ebp ; mov r9, r11 ; call r15
0xffffff80008bd3c7 : mov al, 0x4c ; mov edi, ebp ; mov r9, r14 ; call r15
0xffffff8000763edd : mov al, 0x4c ; mov edi, esi ; call 0xffffff80003923e7
0xffffff80008f04c4 : mov al, 0x4c ; mov edx, esi ; call rbx
0xffffff80007eb017 : mov al, 0x4c ; mov esi, ebp ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80006df9e5 : mov al, 0x54 ; add eax, 0xc0310000 ; pop rbp ; ret
0xffffff8000653219 : mov al, 0x58 ; xor eax, 0xe8c03100 ; jl 0xffffff80006531dd ; ret
0xffffff80005103bb : mov al, 0x60 ; add byte ptr [rax + 1], cl ; ret
0xffffff800086b33c : mov al, 0x60 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002c8117 : mov al, 0x60 ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; pop rbp ; ret
0xffffff80007f643c : mov al, 0x6c ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004439b6 : mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800034f2a2 : mov al, 0x7a ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800060bcf4 : mov al, 0x7c ; push rcx ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff80006666ec : mov al, 0x7d ; ret 0xe9ff
0xffffff80003eb08c : mov al, 0x7f ; cli ; push rsi ; ret
0xffffff800044d0f9 : mov al, 0x83 ; ret 0x41fe
0xffffff8000602d8c : mov al, 0x85 ; div byte ptr [rcx + rdx - 9] ; ret
0xffffff8000671ef0 : mov al, 0x88 ; ret
0xffffff80004915b9 : mov al, 0x88 ; ret 0xe280
0xffffff80006c9d3a : mov al, 0x89 ; ret
0xffffff80007c13ea : mov al, 0x89 ; ret 0x2944
0xffffff800036f787 : mov al, 0x89 ; ret 0xc2c1
0xffffff80008ba249 : mov al, 0xa5 ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff80008f5a15 : mov al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2ee8
0xffffff80008f5a2d : mov al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe95d
0xffffff8000528bc5 : mov al, 0xda ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000754e8c : mov al, 0xdb ; ret
0xffffff80004f9eda : mov al, 0xdd ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800080e107 : mov al, 0xe ; jne 0xffffff800080e108 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e127 : mov al, 0xe ; jne 0xffffff800080e128 ; movzx eax, al ; pop rbp ; ret
0xffffff800080e147 : mov al, 0xe ; jne 0xffffff800080e148 ; movzx eax, al ; pop rbp ; ret
0xffffff80008deb94 : mov al, 0xe2 ; adc dword ptr [rax], eax ; mov rdi, r13 ; call r15
0xffffff800041c880 : mov al, 0xe5 ; dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret
0xffffff80003efd58 : mov al, 0xe8 ; loop 0xffffff80003efd95 ; cli ; push rsi ; ret
0xffffff80007e7ea6 : mov al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; or edx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000778057 : mov al, 0xe8 ; movsxd rbx, dword ptr [rbx - 0x76b70003] ; ret
0xffffff80007597e5 : mov al, 0xe8 ; push rbp ; cwde ; ret
0xffffff80003efb77 : mov al, 0xe8 ; ret
0xffffff8000762320 : mov al, 0xe8 ; sbb al, byte ptr [rdi] ; ret
0xffffff80003efba5 : mov al, 0xe8 ; xchg eax, ebp ; xor al, 0xfa ; push rsi ; ret
0xffffff80003efdf8 : mov al, 0xe8 ; xor dil, dl ; push rsi ; ret
0xffffff80007f53bc : mov al, 0xec ; add byte ptr cs:[rax - 0x77], cl ; ret 0x18e8
0xffffff8000392355 : mov al, 0xf ; jne 0xffffff800039235e ; ret
0xffffff8000720c83 : mov al, 0xf ; mov dh, 0x17 ; inc rdx ; jmp 0xffffff8000720c9d
0xffffff80003ea192 : mov al, 0xf ; ret
0xffffff8000317157 : mov al, 0xf ; xchg eax, esp ; ret
0xffffff800039d835 : mov al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000350c74 : mov al, 0xf4 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006eca87 : mov al, 0xf6 ; ret
0xffffff8000693314 : mov al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065e2fc : mov al, 0xfe ; ret 0x49ff
0xffffff8000797c98 : mov al, 0xff ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800025958e : mov al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006024eb : mov al, 0xff ; lea r14, [r14 + r13*4] ; jmp 0xffffff80006024bc
0xffffff8000603118 : mov al, 0xff ; lea r14, [r14 + r13*4] ; jmp 0xffffff80006030e9
0xffffff80008df8b9 : mov al, 0xff ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800088d8b0 : mov al, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b5f43 : mov al, 0xff ; ret 0x8348
0xffffff800079cc79 : mov al, 0xff ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800079ce6b : mov al, 0xff ; xor eax, eax ; pop rbp ; ret
0xffffff8000628ca3 : mov al, 1 ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800082fb1a : mov al, 1 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff8000811494 : mov al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800081289f : mov al, 1 ; mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff8000725499 : mov al, 1 ; pop rbp ; ret
0xffffff8000896d5e : mov al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000729f27 : mov al, 1 ; ret
0xffffff8000650c95 : mov al, 2 ; add byte ptr [rax], al ; mov byte ptr [rsi + 3], al ; pop rbp ; ret
0xffffff80002db137 : mov al, 2 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007ef89b : mov al, 2 ; movzx eax, al ; pop rbp ; ret
0xffffff80002bed0e : mov al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800086af14 : mov al, 5 ; add byte ptr [rax], al ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80003ce3e5 : mov al, 7 ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80003656d1 : mov al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xc8
0xffffff80008790b3 : mov al, al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x17], bl ; ret 5
0xffffff800088112c : mov al, al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008edf34 : mov al, bh ; out dx, al ; add rsp, 4 ; pop rbp ; ret
0xffffff800081a354 : mov al, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800081a1b6 : mov al, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000541ed1 : mov al, byte ptr [rax + rax + 0x31] ; shr al, 0xd5 ; ret 0xffd4
0xffffff8000480ed5 : mov al, byte ptr [rax + rcx] ; movsx eax, al ; pop rbp ; ret
0xffffff800073819d : mov al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000720d73 : mov al, byte ptr [rbx + 6] ; add byte ptr [rbx], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800036e8b8 : mov al, byte ptr [rbx + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000393032 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; popfq ; leave ; ret
0xffffff800071bf46 : mov al, byte ptr [rcx] ; mov byte ptr [rdx + 0x18], al ; xor eax, eax ; pop rbp ; ret
0xffffff800088e884 : mov al, byte ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800088f594 : mov al, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff800081eb94 : mov al, byte ptr [rdi + 0x70] ; and al, 0x10 ; shr al, 4 ; pop rbp ; ret
0xffffff800081ece4 : mov al, byte ptr [rdi + 0x70] ; and al, 0x20 ; shr al, 5 ; pop rbp ; ret
0xffffff800081ecf4 : mov al, byte ptr [rdi + 0x70] ; and al, 0x40 ; shr al, 6 ; pop rbp ; ret
0xffffff800081eb74 : mov al, byte ptr [rdi + 0x70] ; and al, 8 ; shr al, 3 ; pop rbp ; ret
0xffffff800081ed14 : mov al, byte ptr [rdi + 0x71] ; and al, 0x40 ; shr al, 6 ; pop rbp ; ret
0xffffff800081ed04 : mov al, byte ptr [rdi + 0x71] ; and al, 2 ; shr al, 1 ; pop rbp ; ret
0xffffff80008d5cc4 : mov al, byte ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff80008d5c14 : mov al, byte ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff80008d5cf4 : mov al, byte ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff80008d5d14 : mov al, byte ptr [rdi + 0xb9] ; pop rbp ; ret
0xffffff8000813594 : mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80007b9a22 : mov al, byte ptr [rdi - 0x53] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80005fb8f4 : mov al, byte ptr [rsi + 0xd] ; mov byte ptr [rdi + 0xd], al ; pop rbp ; ret
0xffffff8000660922 : mov al, byte ptr [rsi + 5] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800032abb2 : mov al, byte ptr [rsi + rax + 0x5e415b00] ; pop rbp ; ret
0xffffff80003b7448 : mov al, byte ptr [rsi] ; out dx, al ; xor eax, eax ; pop rbp ; ret
0xffffff80006a1151 : mov al, ch ; jns 0xffffff80006a1125 ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0xffffff80003e26c0 : mov al, ch ; mov ah, byte ptr [rsi + 6] ; add byte ptr [rcx - 0x77], al ; ret
0xffffff8000693815 : mov al, ch ; mov ch, 0xa1 ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80006a1663 : mov al, ch ; ret
0xffffff800056c1d8 : mov al, ch ; ret 0xfe69
0xffffff80008b7070 : mov al, ch ; stc ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a16ff : mov al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff8000869be3 : mov al, cl ; pop rbp ; ret
0xffffff800032aaa4 : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800080ff32 : mov al, dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008edf33 : mov al, dil ; out dx, al ; add rsp, 4 ; pop rbp ; ret
0xffffff800080ff31 : mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000701fe2 : mov ax, 0x16 ; cwde ; pop rbp ; ret
0xffffff8000738108 : mov ax, 0xa8c9 ; jmp 0xffffff800073811a
0xffffff8000725ed0 : mov ax, 5 ; cwde ; pop rbp ; ret
0xffffff800066609e : mov bh, 0 ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000737869 : mov bh, 0x10 ; movzx eax, dx ; pop rbp ; ret
0xffffff80006792a5 : mov bh, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000845422 : mov bh, 0x1c ; mov cs, word ptr [rcx + 0x63] ; ret
0xffffff80004b3b7c : mov bh, 0x1e ; add byte ptr [rax], al ; and dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff80004b3b66 : mov bh, 0x1e ; add byte ptr [rax], al ; or dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff8000760585 : mov bh, 0x2a ; ret
0xffffff8000737775 : mov bh, 0x30 ; movzx eax, si ; pop rbp ; ret
0xffffff8000674685 : mov bh, 0x34 ; ret 0x49ff
0xffffff800075306f : mov bh, 0x38 ; add al, ch ; leave ; stc ; ret
0xffffff8000709cde : mov bh, 0x42 ; add byte ptr [rax - 0x75], cl ; or ecx, ebp ; ret
0xffffff8000388da8 : mov bh, 0x44 ; pop r8 ; pop rbp ; ret
0xffffff800071f593 : mov bh, 0x44 ; ret
0xffffff800049f49c : mov bh, 0x44 ; ret 0x8318
0xffffff800049efaf : mov bh, 0x45 ; test byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80008cf1fa : mov bh, 0x45 ; xor byte ptr [rax + 0x39], cl ; ret
0xffffff80005e4c5d : mov bh, 0x46 ; and cl, byte ptr [rax + 0x39] ; ret
0xffffff80008cf407 : mov bh, 0x46 ; xor byte ptr [rcx], bh ; ret
0xffffff80004fa0f5 : mov bh, 0x47 ; and rax, 1 ; pop rbp ; ret
0xffffff80004fa655 : mov bh, 0x47 ; push 0x5d ; ret
0xffffff80007960d5 : mov bh, 0x47 ; sbb al, 0x5d ; ret
0xffffff80008cf4cf : mov bh, 0x47 ; xor byte ptr [rcx], bh ; ret
0xffffff8000776b2d : mov bh, 0x48 ; add al, byte ptr [rbx - 0x3d8afc07] ; jmp 0xffffff8000776b5a
0xffffff80002a0a09 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0xffffff80004c4b51 : mov bh, 0x4c ; ret 0xf604
0xffffff8000745d85 : mov bh, 0x4e ; add byte ptr [rax], al ; jmp 0xffffff8000745d53
0xffffff800071ac4e : mov bh, 0x4e ; or bh, byte ptr [rcx] ; enter 0x773, -1 ; ret
0xffffff80003f1167 : mov bh, 0x51 ; cmp al, 0xf6 ; ret 0x7530
0xffffff800033437d : mov bh, 0x51 ; je 0xffffff800033438e ; ret 0x2475
0xffffff8000600327 : mov bh, 0x52 ; or bh, byte ptr [rcx] ; ret 0x2275
0xffffff800058bbe8 : mov bh, 0x53 ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff80007c32e8 : mov bh, 0x53 ; adc cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000802f9d : mov bh, 0x54 ; ret 0xb818
0xffffff8000625703 : mov bh, 0x55 ; ret 0x8b49
0xffffff800058be46 : mov bh, 0x56 ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff80004caa9b : mov bh, 0x56 ; and byte ptr [rcx - 0x73], cl ; adc sil, r14b ; ret 0x4901
0xffffff80005aaae0 : mov bh, 0x56 ; or al, byte ptr [rcx] ; ret 0xca29
0xffffff800076d385 : mov bh, 0x56 ; ret 0x41ff
0xffffff80005b009f : mov bh, 0x57 ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800060b1bd : mov bh, 0x57 ; add al, byte ptr [rcx + 0x29] ; ret 0x4566
0xffffff80006051b5 : mov bh, 0x57 ; add bh, byte ptr [rcx] ; ret 0x850f
0xffffff80004b8ba4 : mov bh, 0x5a ; add byte ptr [rcx], bh ; ret 0x8d0f
0xffffff800071e8d8 : mov bh, 0x5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80007ae218 : mov bh, 0x5b ; pop rbp ; ret
0xffffff80004486a8 : mov bh, 0x5d ; ret
0xffffff800075c785 : mov bh, 0x68 ; ret
0xffffff800027dec1 : mov bh, 0x6b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005aff5d : mov bh, 0x71 ; adc dh, dh ; ret
0xffffff8000655a08 : mov bh, 0x73 ; sbb al, 0x85 ; test byte ptr [rdi], 0x84 ; ret
0xffffff8000373d59 : mov bh, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff8000666ee5 : mov bh, 0x75 ; ret 0xe9ff
0xffffff800034fd1b : mov bh, 0x7a ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000b45f40 : mov bh, 0x7f ; out dx, al ; ret
0xffffff800066be71 : mov bh, 0x80 ; cwde ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff800029d0e5 : mov bh, 0x82 ; add al, byte ptr [rax] ; jmp 0xffffff800029d10d
0xffffff8000696985 : mov bh, 0x84 ; and al, 0xbc ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff8000524593 : mov bh, 0x85 ; ret 0xfffe
0xffffff80005e5a20 : mov bh, 0x8b ; ret 0
0xffffff8000844d6e : mov bh, 0x90 ; add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff800058a8c1 : mov bh, 0x95 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0xffffff8000877f61 : mov bh, 0x99 ; rol byte ptr [rax], 0 ; add dh, dh ; ret
0xffffff800073845c : mov bh, 0xa ; movzx eax, cx ; pop rbp ; ret
0xffffff800051d1b5 : mov bh, 0xa1 ; push rsp ; add byte ptr [rcx], bh ; ret
0xffffff80007fc0e9 : mov bh, 0xa9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000742535 : mov bh, 0xaa ; add al, ch ; ret 0xc581
0xffffff80006c2435 : mov bh, 0xab ; add al, ch ; ret 0xcd82
0xffffff80002fe918 : mov bh, 0xb1 ; add byte ptr fs:[rax - 0x77], cl ; fsubp st(0) ; in al, dx ; ret 0xfff9
0xffffff8000762f46 : mov bh, 0xb6 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e9
0xffffff8000652ae5 : mov bh, 0xb9 ; ret
0xffffff8000677a85 : mov bh, 0xba ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002c02bc : mov bh, 0xc0 ; pop rbp ; ret
0xffffff800080dbdf : mov bh, 0xc0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000672035 : mov bh, 0xc0 ; shr ecx, 0x10 ; jne 0xffffff8000672038 ; pop rbp ; ret
0xffffff800071ea79 : mov bh, 0xc1 ; pop rbp ; ret
0xffffff80005841f4 : mov bh, 0xc2 ; pop rbp ; ret
0xffffff8000388ca4 : mov bh, 0xc2 ; pop rbx ; pop rbp ; ret
0xffffff8000451ed2 : mov bh, 0xc6 ; pop rbp ; ret
0xffffff800073814d : mov bh, 0xc7 ; pop rbp ; ret
0xffffff800072c17a : mov bh, 0xc9 ; cmp ecx, r10d ; jae 0xffffff800072c158 ; pop rbp ; ret
0xffffff80003c1ae1 : mov bh, 0xca ; mov dword ptr [rdi], ecx ; movzx eax, ah ; pop rbp ; ret
0xffffff80008fb8c1 : mov bh, 0xcc ; mov rdi, qword ptr [rbp - 0x30] ; mov rsi, r15 ; call rbx
0xffffff80006d0563 : mov bh, 0xd2 ; cmp edx, ecx ; jae 0xffffff80006d0547 ; pop rbp ; ret
0xffffff800058fea3 : mov bh, 0xd2 ; cmp edx, esi ; setae dl ; jmp 0xffffff800058fee1
0xffffff800058fe87 : mov bh, 0xd2 ; cmp edx, esi ; setbe dl ; jmp 0xffffff800058fee1
0xffffff800058fe63 : mov bh, 0xd2 ; cmp edx, esi ; sete dl ; jmp 0xffffff800058fee1
0xffffff800058fe70 : mov bh, 0xd2 ; cmp edx, esi ; setne dl ; jmp 0xffffff800058fee1
0xffffff800057d1d7 : mov bh, 0xd5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ae0f4 : mov bh, 0xe ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800030ae25 : mov bh, 0xe ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007fe335 : mov bh, 0xe3 ; mov dh, 0xff ; xor eax, eax ; pop rbp ; ret
0xffffff80005721a0 : mov bh, 0xe9 ; ret 1
0xffffff800064f8e5 : mov bh, 0xeb ; ret
0xffffff80008eefdf : mov bh, 0xf4 ; mov rdi, r15 ; mov rdx, r14 ; call rcx
0xffffff800058fea0 : mov bh, 0xf6 ; movzx edx, dx ; cmp edx, esi ; setae dl ; jmp 0xffffff800058fee4
0xffffff800058fe84 : mov bh, 0xf6 ; movzx edx, dx ; cmp edx, esi ; setbe dl ; jmp 0xffffff800058fee4
0xffffff800058fe60 : mov bh, 0xf6 ; movzx edx, dx ; cmp edx, esi ; sete dl ; jmp 0xffffff800058fee4
0xffffff800058fe6d : mov bh, 0xf6 ; movzx edx, dx ; cmp edx, esi ; setne dl ; jmp 0xffffff800058fee4
0xffffff80008db2a0 : mov bh, 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b4794b : mov bh, 0xfa ; jmp rdi
0xffffff80003e78e2 : mov bh, 0xfa ; push rsi ; ret
0xffffff800032e93f : mov bh, 0xfe ; jmp qword ptr [rbx]
0xffffff80007f1c05 : mov bh, 0xff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007817d5 : mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002cfe55 : mov bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007afeb6 : mov bh, 0xff ; pop rbp ; ret
0xffffff80004616e6 : mov bh, 0xff ; ret
0xffffff8000738197 : mov bh, 4 ; pop r13 ; ret
0xffffff800025d144 : mov bh, 7 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000738192 : mov bh, al ; sbb eax, 0x4b70f00 ; pop r13 ; ret
0xffffff80007375a1 : mov bh, bh ; call qword ptr [rbx]
0xffffff8000737179 : mov bh, bh ; call qword ptr [rsi - 0x2d000036]
0xffffff8000737335 : mov bh, bh ; call rcx
0xffffff80007844e7 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800026ee68 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x894c
0xffffff8000737331 : mov bh, bh ; jmp qword ptr [rbp - 0x2e000078]
0xffffff800073735d : mov bh, bh ; jmp rcx
0xffffff8000748146 : mov bh, bh ; ret
0xffffff80006730d9 : mov bh, byte ptr [rbp - 0xb8] ; jmp rdi
0xffffff800056ce32 : mov bh, byte ptr [rdx - 4] ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff80007730f2 : mov bh, byte ptr [rdx] ; ret 0x4cff
0xffffff8000b3cc9a : mov bh, byte ptr [rsp - 0x76beb111] ; ret
0xffffff80006796f5 : mov bl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000771589 : mov bl, 0x1a ; ret 0x48ff
0xffffff8000760d79 : mov bl, 0x1b ; ret
0xffffff800066bce9 : mov bl, 0x27 ; ret 0xe9ff
0xffffff800065aff9 : mov bl, 0x31 ; ret
0xffffff80004bca39 : mov bl, 0x3c ; add byte ptr [rax], al ; jmp 0xffffff80004bca7c
0xffffff80002ef856 : mov bl, 0x45 ; add cl, ch ; ret
0xffffff80006598e9 : mov bl, 0x4b ; ret
0xffffff80002a82b5 : mov bl, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000341e69 : mov bl, 0x6a ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000394379 : mov bl, 0x75 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b3edcf : mov bl, 0x89 ; ret
0xffffff800076a689 : mov bl, 0x89 ; ret 0x44ff
0xffffff8000285fa2 : mov bl, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000769c89 : mov bl, 0x93 ; ret 0xbeff
0xffffff80002ed2db : mov bl, 0xa ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002a011c : mov bl, 0xa0 ; or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002a82f5 : mov bl, 0xb0 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80003431fd : mov bl, 0xb0 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80007c1ebf : mov bl, 0xc3 ; and dword ptr [rax], eax ; call 0xffffff800028e1b6
0xffffff8000661bf9 : mov bl, 0xc5 ; ret 0x41ff
0xffffff80002ae489 : mov bl, 0xc7 ; add r9b, bpl ; ret 0xfffe
0xffffff80008b8449 : mov bl, 0xd3 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800057d607 : mov bl, 0xd5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ae551 : mov bl, 0xe ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007f6241 : mov bl, 0xe5 ; xor eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80006bcd93 : mov bl, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000391aeb : mov bl, 0xf4 ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002ba669 : mov bl, 0xf4 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d34b9 : mov bl, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028c53f : mov bl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076ead5 : mov bl, 0xff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003506a2 : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a582a : mov bl, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800078bf14 : mov bl, 0xff ; jmp 0xffffff800078be7b
0xffffff800078bf13 : mov bl, 0xff ; jmp 0xffffff800078be7c
0xffffff800085923b : mov bl, 0xff ; mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008592ab : mov bl, 0xff ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085eb7c : mov bl, 0xff ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085d6a5 : mov bl, 0xff ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076da41 : mov bl, 0xff ; mov rdi, r13 ; call 0xffffff8000393048
0xffffff80007674ea : mov bl, 0xff ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000766554 : mov bl, 0xff ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff8000766553 : mov bl, 0xff ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff800076b738 : mov bl, 0xff ; mov rdi, r15 ; call 0xffffff8000393048
0xffffff800076d45c : mov bl, 0xff ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff8000788d27 : mov bl, 0xff ; pop rbp ; ret
0xffffff8000856b99 : mov bl, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ea3b9 : mov bl, 6 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800049bdeb : mov bl, 8 ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000587a74 : mov bl, ah ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff800039f792 : mov bl, al ; push 0x48b4800 ; ret 0x8b44
0xffffff8000b455e6 : mov bl, al ; ret
0xffffff800036a3ae : mov bl, byte ptr [rsi] ; jns 0xffffff800036a3b7 ; pop rbp ; ret
0xffffff800045ff53 : mov bl, dh ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80002b0d04 : mov bl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000635c43 : mov bl, dl ; mov rdx, r8 ; jmp 0xffffff8000635c5f
0xffffff8000b4a895 : mov bl, dl ; ret 0xfdac
0xffffff8000635c42 : mov bl, r10b ; mov rdx, r8 ; jmp 0xffffff8000635c60
0xffffff8000747b29 : mov byte ptr [r11 - 0x7cb77bab], r9b ; ret 0x45f8
0xffffff80006db0a3 : mov byte ptr [r13 + rcx*4 + 0x45], r9b ; xchg al, ch ; ret 0x3ea
0xffffff800088be2d : mov byte ptr [r13 - 0x77], r9b ; clc ; call r9
0xffffff80008ccccb : mov byte ptr [r14 + 0x48], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000666d3c : mov byte ptr [r14 + 7], al ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff8000352f59 : mov byte ptr [r15], 0xff ; jmp 0xffffff8000352f27
0xffffff8000323d60 : mov byte ptr [r8 + 0x39], r9b ; ret 0xf48
0xffffff8000269f38 : mov byte ptr [r8 + 0x90], 0 ; pop rbp ; ret
0xffffff8000785113 : mov byte ptr [r8 - 0x75], r9b ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0xffffff80003513a0 : mov byte ptr [r8 - 0x75], r9b ; test al, 0x89 ; ret
0xffffff80006d6d99 : mov byte ptr [r8 - 0x77], r9b ; ret
0xffffff800029e296 : mov byte ptr [r9 + 1], r8b ; ret 0x8a41
0xffffff800064dadc : mov byte ptr [r9], r13b ; enter -0x2c77, 1 ; ret
0xffffff8000546baf : mov byte ptr [r9], r14b ; test byte ptr [rcx + rcx*4 - 9], 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0xffffff800051f05e : mov byte ptr [r9], r15b ; fmul dword ptr [rdi] ; ret
0xffffff80005b4e22 : mov byte ptr [r9], r15b ; ret
0xffffff8000901838 : mov byte ptr [rax + 0x23], ah ; add byte ptr [rax - 1], cl ; ret
0xffffff80006c8b9f : mov byte ptr [rax + 0x29], cl ; ret
0xffffff8000323d61 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0xffffff80002bf56b : mov byte ptr [rax + 0x48000004], cl ; mov eax, ecx ; pop rbp ; ret
0xffffff800088007e : mov byte ptr [rax + 0x48], 0x83 ; ret 0x4938
0xffffff80003b5e9b : mov byte ptr [rax + 0x5d000000], al ; ret
0xffffff8000269f39 : mov byte ptr [rax + 0x90], 0 ; pop rbp ; ret
0xffffff8000572a19 : mov byte ptr [rax + 1], cl ; ret 0xe2ff
0xffffff8000749d80 : mov byte ptr [rax + 1], cl ; sal dword ptr [rcx], 0xc0 ; jmp rcx
0xffffff80003fce39 : mov byte ptr [rax + rax], 0x89 ; ret
0xffffff800086df75 : mov byte ptr [rax + rax], ch ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008d2a77 : mov byte ptr [rax + rcx - 2], 0 ; mov rax, rdi ; pop rbp ; ret
0xffffff80004437fd : mov byte ptr [rax + rcx*2], 0x83 ; ret
0xffffff800089da7a : mov byte ptr [rax + rcx*2], 0x89 ; ret 0xdce8
0xffffff8000886e26 : mov byte ptr [rax + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff8000389a37 : mov byte ptr [rax - 0x17fffffd], dh ; call qword ptr [rcx]
0xffffff80002dc822 : mov byte ptr [rax - 0x40fffffd], dh ; ret 0x12
0xffffff800035dbe1 : mov byte ptr [rax - 0x40fffffd], dh ; ret 0x2b
0xffffff80003635a7 : mov byte ptr [rax - 0x40fffffd], dh ; ret 0x2c
0xffffff80002f26b9 : mov byte ptr [rax - 0x40fffffd], dh ; ret 0x35
0xffffff80002f64d4 : mov byte ptr [rax - 0x40fffffd], dh ; ret 0x3b
0xffffff8000785114 : mov byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0xffffff80003513a1 : mov byte ptr [rax - 0x75], cl ; test al, 0x89 ; ret
0xffffff800065a9d4 : mov byte ptr [rax - 0x76b7ffeb], ah ; ret
0xffffff80006d6d9a : mov byte ptr [rax - 0x77], cl ; ret
0xffffff8000584c16 : mov byte ptr [rax - 0x78000000], dh ; pop rbp ; ret
0xffffff8000726ca1 : mov byte ptr [rax - 0x78], 0x34 ; cmp edi, edi ; ret 0xc239
0xffffff80004a1609 : mov byte ptr [rax - 0x7c], 0xf6 ; je 0xffffff80004a1627 ; inc edx ; jmp 0xffffff80004a160c
0xffffff80005cdef6 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000661d55 : mov byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800025dbdf : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800044b0eb : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff8000785f1d : mov byte ptr [rax], al ; add byte ptr [rax], al ; add qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff80007f02ae : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800055ee72 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0xffffff80008b2c37 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 1 ; pop rbp ; ret
0xffffff80007d2103 : mov byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rdi], 0x85 ; ret 0
0xffffff8000278a4c : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004e35c2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d3aeb : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80003ad1b7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xffffff80003ad1cb ; call rax
0xffffff80005708b5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800025ebcb : mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800025db19 : mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff8000414255 : mov byte ptr [rax], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0xffffff800025ed61 : mov byte ptr [rax], al ; call 0xffffff8000392a48
0xffffff800025ebe8 : mov byte ptr [rax], al ; pop rbp ; ret
0xffffff80002b05b3 : mov byte ptr [rax], al ; test rax, rax ; je 0xffffff80002b05c3 ; call rax
0xffffff800079d096 : mov byte ptr [rax], bh ; dec qword ptr [rsi + 8] ; pop rbp ; ret
0xffffff800029ed28 : mov byte ptr [rax], bh ; inc qword ptr [rsi] ; pop rbp ; ret
0xffffff8000892890 : mov byte ptr [rax], cl ; add byte ptr [rax], al ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80008b463a : mov byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003684c9 : mov byte ptr [rax], cl ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800079d095 : mov byte ptr [rax], dil ; dec qword ptr [rsi + 8] ; pop rbp ; ret
0xffffff800029ed27 : mov byte ptr [rax], dil ; inc qword ptr [rsi] ; pop rbp ; ret
0xffffff8000788db5 : mov byte ptr [rax], dl ; add dword ptr [rax], eax ; add byte ptr [rdx], ah ; xor eax, eax ; pop rbp ; ret
0xffffff8000263870 : mov byte ptr [rax], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff80003684c8 : mov byte ptr [rax], r9b ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800062ccd4 : mov byte ptr [rbp + 0x18], bh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055ecd4 : mov byte ptr [rbp + 0x25], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006db0a4 : mov byte ptr [rbp + rcx*4 + 0x45], cl ; xchg al, ch ; ret 0x3ea
0xffffff800041ee17 : mov byte ptr [rbp - 0x3d], bl ; mov rax, r9 ; pop rbp ; ret
0xffffff800088be2e : mov byte ptr [rbp - 0x77], cl ; clc ; call r9
0xffffff80008a0f79 : mov byte ptr [rbx + 0x1c], 1 ; xor eax, eax ; jmp 0xffffff80008a0fad
0xffffff80008146d9 : mov byte ptr [rbx + 0x24], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000664354 : mov byte ptr [rbx + 0x47], dh ; add al, ch ; insb byte ptr [rdi], dx ; ret
0xffffff800083b1b4 : mov byte ptr [rbx + 8], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800066ea90 : mov byte ptr [rbx + rax], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800066b757 : mov byte ptr [rbx + rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003ea168 : mov byte ptr [rbx - 0x367af31a], 0xf ; xchg eax, esp ; ret 0xce09
0xffffff8000747b2a : mov byte ptr [rbx - 0x7cb77bab], cl ; ret 0x45f8
0xffffff800049f268 : mov byte ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007f0657 : mov byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000396155 : mov byte ptr [rbx], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396154 : mov byte ptr [rbx], r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072777e : mov byte ptr [rcx + 0xf], 0x43 ; sal dh, 1 ; ret 0x7504
0xffffff800059c22b : mov byte ptr [rcx + 0xf], 0xb7 ; ret 0xc629
0xffffff800029e297 : mov byte ptr [rcx + 1], al ; ret 0x8a41
0xffffff80003b2bd4 : mov byte ptr [rcx + rax - 0x18], 0xeb ; sub al, 0x89 ; ret
0xffffff80008407cc : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0xffffff80006d7bb1 : mov byte ptr [rcx + rax*2], 0xff ; ret 0x8944
0xffffff80005ce19b : mov byte ptr [rcx + rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800075884c : mov byte ptr [rcx + rax], 0 ; jne 0xffffff800075885b ; pop rbp ; ret
0xffffff8000773a6a : mov byte ptr [rcx + rax], dh ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800074a3e1 : mov byte ptr [rcx + rbx], dl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003888ca : mov byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800052668e : mov byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80003928a6
0xffffff80007eaed0 : mov byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, r14 ; call rbx
0xffffff800072bfd9 : mov byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0xffffff8000527a25 : mov byte ptr [rcx + rcx*4 - 0x44], cl ; ret
0xffffff80007eaea5 : mov byte ptr [rcx + rcx*4 - 0xa], cl ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000419d81 : mov byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000445fb6
0xffffff80004d94aa : mov byte ptr [rcx + rcx*4 - 6], cl ; call rcx
0xffffff80008399be : mov byte ptr [rcx + rdi - 0x16], 0xf ; lahf ; ret
0xffffff80007d7a29 : mov byte ptr [rcx - 0x75], 0x47 ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80006def94 : mov byte ptr [rcx - 0x76b70041], bl ; ret
0xffffff80003c56c0 : mov byte ptr [rcx - 0x77], al ; ret 0xb60f
0xffffff8000728441 : mov byte ptr [rcx - 0x78], 0x34 ; adc dword ptr [rcx - 1], eax ; ret
0xffffff800027d34f : mov byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800079ce38 : mov byte ptr [rcx], 0 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000725496 : mov byte ptr [rcx], 1 ; mov al, 1 ; pop rbp ; ret
0xffffff8000878986 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003c574c : mov byte ptr [rcx], bh ; fmul dword ptr [rdi] ; ret
0xffffff80005b4e23 : mov byte ptr [rcx], bh ; ret
0xffffff800064dadd : mov byte ptr [rcx], ch ; enter -0x2c77, 1 ; ret
0xffffff80004fa055 : mov byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000546bb0 : mov byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0xffffff80005e4d66 : mov byte ptr [rdi + 0x11], 1 ; pop rbp ; ret
0xffffff80006140c7 : mov byte ptr [rdi + 0x123], 0 ; pop rbp ; ret
0xffffff800046a741 : mov byte ptr [rdi + 0x147], cl ; pop rbp ; ret
0xffffff800088e874 : mov byte ptr [rdi + 0x28], 0 ; pop rbp ; ret
0xffffff8000262550 : mov byte ptr [rdi + 0x3c], 1 ; pop rbp ; ret
0xffffff8000584c1b : mov byte ptr [rdi + 0x3e], cl ; pop rbp ; ret
0xffffff80005b6acb : mov byte ptr [rdi + 0x41f], 0 ; pop rbp ; ret
0xffffff80008a3274 : mov byte ptr [rdi + 0x68], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff80008d5ca5 : mov byte ptr [rdi + 0x88], dh ; pop rbp ; ret
0xffffff80008d5ca4 : mov byte ptr [rdi + 0x88], sil ; pop rbp ; ret
0xffffff80008d5c04 : mov byte ptr [rdi + 0xa0], 1 ; pop rbp ; ret
0xffffff80008d5ce5 : mov byte ptr [rdi + 0xb8], dh ; pop rbp ; ret
0xffffff80008d5ce4 : mov byte ptr [rdi + 0xb8], sil ; pop rbp ; ret
0xffffff80008d5d05 : mov byte ptr [rdi + 0xb9], dh ; pop rbp ; ret
0xffffff80008d5d04 : mov byte ptr [rdi + 0xb9], sil ; pop rbp ; ret
0xffffff800056402f : mov byte ptr [rdi + 0xc3], dh ; xor eax, eax ; pop rbp ; ret
0xffffff800056406f : mov byte ptr [rdi + 0xc4], dh ; xor eax, eax ; pop rbp ; ret
0xffffff80005fb8f7 : mov byte ptr [rdi + 0xd], al ; pop rbp ; ret
0xffffff800062622d : mov byte ptr [rdi + 0xf8], 0 ; pop rbp ; ret
0xffffff8000626225 : mov byte ptr [rdi + 0xf8], cl ; pop rbp ; ret
0xffffff8000579f23 : mov byte ptr [rdi + rcx], 0xb6 ; ret 0xf883
0xffffff80007ae3f8 : mov byte ptr [rdi + rcx], dl ; pop rbp ; ret
0xffffff80003a6234 : mov byte ptr [rdi], 0 ; mov rax, rdi ; pop rbp ; ret
0xffffff800029360a : mov byte ptr [rdi], 0 ; pop rbp ; ret
0xffffff8000392300 : mov byte ptr [rdi], 0 ; ret
0xffffff8000607408 : mov byte ptr [rdi], 0x29 ; ret 0xc148
0xffffff8000352f5a : mov byte ptr [rdi], 0xff ; jmp 0xffffff8000352f26
0xffffff800065efd4 : mov byte ptr [rdx + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800071bf48 : mov byte ptr [rdx + 0x18], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000647916 : mov byte ptr [rdx + rax - 0x4460000], cl ; push rsi ; jmp qword ptr [rcx]
0xffffff8000843543 : mov byte ptr [rdx + rcx], bl ; jne 0xffffff8000843527 ; pop rbx ; pop rbp ; ret
0xffffff8000421be4 : mov byte ptr [rdx - 0x76b7fff7], al ; ret
0xffffff800084c761 : mov byte ptr [rdx - 0x9000000], cl ; ret
0xffffff8000796868 : mov byte ptr [rdx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800071dc75 : mov byte ptr [rdx], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff800066daee : mov byte ptr [rdx], 0x3a ; inc rdx ; jmp 0xffffff800066db15
0xffffff80004b7b32 : mov byte ptr [rdx], 0x75 ; add eax, 0x5d5e415b ; ret
0xffffff800080d79d : mov byte ptr [rdx], 0x83 ; ret
0xffffff800037498b : mov byte ptr [rdx], 0x83 ; ret 0x4810
0xffffff800029d707 : mov byte ptr [rdx], 0x88 ; ret 0xc280
0xffffff800080d8ff : mov byte ptr [rdx], 0xf6 ; ret
0xffffff8000283768 : mov byte ptr [rdx], bh ; cmp rdi, rax ; je 0xffffff800028377b ; pop rbp ; ret
0xffffff80008790d5 : mov byte ptr [rip + 0x21dd75], bh ; pop rbp ; ret
0xffffff80008790d4 : mov byte ptr [rip + 0x21dd75], dil ; pop rbp ; ret
0xffffff800086bbf4 : mov byte ptr [rip + 0x2799d1], 1 ; pop rbp ; ret
0xffffff8000856922 : mov byte ptr [rip + 0x28e8f7], 1 ; pop rbp ; ret
0xffffff800082de5f : mov byte ptr [rip + 0x2b65ae], 1 ; pop rbp ; ret
0xffffff80007fcfc7 : mov byte ptr [rip + 0x2e712a], 1 ; pop rbp ; ret
0xffffff800063571e : mov byte ptr [rip + 0x4a5184], 1 ; pop rbp ; ret
0xffffff80006356ce : mov byte ptr [rip + 0x4a51d4], 1 ; pop rbp ; ret
0xffffff80005fb8c4 : mov byte ptr [rip + 0x4de635], 1 ; pop rbp ; ret
0xffffff80005fb8a4 : mov byte ptr [rip + 0x4de655], 1 ; pop rbp ; ret
0xffffff80005fb884 : mov byte ptr [rip + 0x4de675], 1 ; pop rbp ; ret
0xffffff80005fb864 : mov byte ptr [rip + 0x4de695], 1 ; pop rbp ; ret
0xffffff80005f67f8 : mov byte ptr [rip + 0x4e3665], 0x2c ; pop rbp ; ret
0xffffff80003c6199 : mov byte ptr [rip + 0x693b4c], al ; pop rbp ; ret
0xffffff80003adb9d : mov byte ptr [rip + 0x72480c], 1 ; pop rbp ; ret
0xffffff80003a284b : mov byte ptr [rip + 0x72f107], 1 ; pop rbp ; ret
0xffffff80003b5cf7 : mov byte ptr [rip + 0x731ffb], cl ; pop rbp ; ret
0xffffff80002a9529 : mov byte ptr [rip + 0x7ff6a0], 1 ; pop rbp ; ret
0xffffff80002a6dd6 : mov byte ptr [rip + 0x8019ab], 0 ; pop rbp ; ret
0xffffff8000265dc9 : mov byte ptr [rip + 0x83ac16], 0 ; pop rbp ; ret
0xffffff8000262234 : mov byte ptr [rip + 0x884a9d], 0 ; pop rbp ; ret
0xffffff80007c24d4 : mov byte ptr [rip - 0x76b70001], ah ; ret
0xffffff8000623cd4 : mov byte ptr [rip - 0x76b7ffe7], cl ; ret
0xffffff800027daa2 : mov byte ptr [rip - 0x7cbf0000], al ; call qword ptr [rdx]
0xffffff800065ebd4 : mov byte ptr [rsi + 0x15], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004ebd34 : mov byte ptr [rsi + 0x26], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ccccc : mov byte ptr [rsi + 0x48], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f3013 : mov byte ptr [rsi + 0x5bc031ff], ch ; pop r14 ; pop rbp ; ret
0xffffff8000650c99 : mov byte ptr [rsi + 3], al ; pop rbp ; ret
0xffffff8000666d3d : mov byte ptr [rsi + 7], al ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff800084e815 : mov byte ptr [rsi + r9], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff800084e816 : mov byte ptr [rsi + rcx], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff8000294424 : mov byte ptr [rsi + rdi*8], dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065abd4 : mov byte ptr [rsi - 0x76b7ffeb], bl ; ret
0xffffff8000373e40 : mov byte ptr [rsi - 0x76bbff8b], dh ; rol cl, cl ; ret 0x105
0xffffff800066f678 : mov byte ptr [rsi], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008ed984 : mov byte ptr [rsi], 0xff ; mov eax, 1 ; pop rbp ; ret
0xffffff80007e22bb : mov byte ptr [rsi], 0xff ; ret 0xe675
0xffffff800026b3c9 : mov byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000865c8b : mov byte ptr [rsi], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7399 : mov byte ptr [rsi], al ; xor eax, eax ; pop rbp ; ret
0xffffff80004533d4 : mov byte ptr [rsi], dl ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff80003fce38 : mov byte ptr fs:[rax + rax], 0x89 ; ret
0xffffff800052668d : mov byte ptr gs:[rcx + rcx*4 - 0x19], cl ; call 0xffffff80003928a7
0xffffff80007eaecf : mov byte ptr gs:[rcx + rcx*4 - 0x19], cl ; mov rsi, r14 ; call rbx
0xffffff800049a31d : mov ch, 0 ; add rsi, r13 ; jmp rsi
0xffffff800066c77f : mov ch, 0x16 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000b3e98e : mov ch, 0x1f ; ret 0x4daf
0xffffff8000760227 : mov ch, 0x21 ; ret
0xffffff8000889c8e : mov ch, 0x2a ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065b2e7 : mov ch, 0x31 ; ret
0xffffff800065fcfe : mov ch, 0x39 ; add al, ch ; jmp 0xffffff800065fcce
0xffffff800065fd2c : mov ch, 0x39 ; add byte ptr [rcx], dh ; shr al, 0x1a ; jmp 0xffffff800065fd00
0xffffff8000414867 : mov ch, 0x40 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000761fc7 : mov ch, 0x4b ; ret
0xffffff8000b49173 : mov ch, 0x5b ; ret
0xffffff80003a6e8a : mov ch, 0x5d ; ret
0xffffff8000373f84 : mov ch, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff8000264e18 : mov ch, 0x83 ; add byte ptr [rbp - 0xf98b25], al ; ret
0xffffff8000769b87 : mov ch, 0x8e ; ret 0x45ff
0xffffff8000674797 : mov ch, 0xa0 ; ret 0x48ff
0xffffff8000693817 : mov ch, 0xa1 ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80006535f7 : mov ch, 0xab ; ret
0xffffff80003a37bf : mov ch, 0xba ; jne 0xffffff80003a37cb ; mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff80006cd39c : mov ch, 0xc0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004575c3 : mov ch, 0xcd ; imul eax, dword ptr [rax], 0x21 ; ret 0x1589
0xffffff80006609f7 : mov ch, 0xd7 ; ret 0x8bff
0xffffff80006fceef : mov ch, 0xdb ; dec dword ptr [rax - 0x77] ; ret
0xffffff800064f7f7 : mov ch, 0xe9 ; ret
0xffffff800030c627 : mov ch, 0xf6 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800063acf7 : mov ch, 0xfc ; add byte ptr [r11 - 0x7df0fc08], al ; ret 0
0xffffff80002e99c9 : mov ch, 0xfe ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800049a17d : mov ch, 0xff ; dec dword ptr [rax - 1] ; ret
0xffffff8000737987 : mov ch, 0xff ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083491c : mov ch, 0xff ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007796d8 : mov ch, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000879592 : mov ch, 0xff ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000291572 : mov ch, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004fa904 : mov ch, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x128
0xffffff8000537422 : mov ch, byte ptr [rbp - 0x2b] ; dec dword ptr [rax - 0x39] ; ret 0xfff8
0xffffff80004a5b92 : mov ch, byte ptr [rip - 0x76b7001d] ; ret
0xffffff8000845b5e : mov ch, cl ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000753ab4 : mov ch, dh ; ret
0xffffff800063f054 : mov cl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000291003 : mov cl, 0x14 ; add dword ptr [rax], 0x5d5e415b ; ret
0xffffff80003934a8 : mov cl, 0x17 ; jne 0xffffff80003934a8 ; mov eax, edx ; ret
0xffffff80003934c8 : mov cl, 0x17 ; jne 0xffffff80003934c8 ; mov eax, edx ; ret
0xffffff80008d72ff : mov cl, 0x17 ; sete dl ; movzx eax, dl ; ret
0xffffff8000439a9b : mov cl, 0x32 ; add byte ptr ss:[rcx], ch ; ret
0xffffff80003965f8 : mov cl, 0x32 ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800080deca : mov cl, 0x32 ; sete al ; pop rbp ; ret
0xffffff80003c7fc7 : mov cl, 0x35 ; xor ebp, dword ptr [rbp - 0x76b7ff90] ; ret
0xffffff800049ce69 : mov cl, 0x37 ; jne 0xffffff800049ce65 ; pop rbp ; ret
0xffffff80003a4244 : mov cl, 0x39 ; pop rbp ; ret
0xffffff80002991a3 : mov cl, 0x3a ; jne 0xffffff8000299177 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000772ecb : mov cl, 0x3c ; ret 0x4cff
0xffffff8000711ba3 : mov cl, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80007ea66a : mov cl, 0x48 ; add eax, ecx ; jmp rax
0xffffff800028fe6f : mov cl, 0x48 ; add edx, ecx ; jmp rdx
0xffffff800057a03d : mov cl, 0x48 ; add esi, ecx ; jmp rsi
0xffffff80005fe98d : mov cl, 0x58 ; mov dword ptr [rcx + rsi*4 + 0x5c], edi ; jmp 0xffffff80005fe95f
0xffffff8000506a3e : mov cl, 0x5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005fe991 : mov cl, 0x5c ; jmp 0xffffff80005fe95b
0xffffff800075cb7b : mov cl, 0x5d ; ret
0xffffff80002fe919 : mov cl, 0x64 ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; in al, dx ; ret 0xfff9
0xffffff80003742d4 : mov cl, 0x75 ; add byte ptr [rbp - 0x77], al ; rol dword ptr [rcx - 0x3f], cl ; ret
0xffffff80003743b7 : mov cl, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff80008a9c8b : mov cl, 0x75 ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006632a8 : mov cl, 0x9d ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff800031f173 : mov cl, 0xa6 ; jge 0xffffff800031f17c ; pop rbp ; ret
0xffffff800076c817 : mov cl, 0xb0 ; dec dword ptr [rax - 1] ; ret
0xffffff80002f89fb : mov cl, 0xb2 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000652cfb : mov cl, 0xb4 ; ret
0xffffff800076d79b : mov cl, 0xb6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039be02 : mov cl, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8dff
0xffffff800072d7cd : mov cl, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b46706 : mov cl, 0xc2 ; ret
0xffffff80005b86ff : mov cl, 0xc8 ; add al, 0 ; add bh, bh ; ret
0xffffff8000382e10 : mov cl, 0xd ; ret 0x77ae
0xffffff8000647e55 : mov cl, 0xd4 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800076452b : mov cl, 0xde ; ret 0x31ff
0xffffff800080dfb6 : mov cl, 0xe ; jne 0xffffff800080dfb5 ; pop rbp ; ret
0xffffff800080dfd6 : mov cl, 0xe ; jne 0xffffff800080dfd5 ; pop rbp ; ret
0xffffff800080dff6 : mov cl, 0xe ; jne 0xffffff800080dff5 ; pop rbp ; ret
0xffffff800080e187 : mov cl, 0xe ; jne 0xffffff800080e188 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1a7 : mov cl, 0xe ; jne 0xffffff800080e1a8 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080e1c7 : mov cl, 0xe ; jne 0xffffff800080e1c8 ; movzx eax, ax ; pop rbp ; ret
0xffffff8000626223 : mov cl, 0xe ; mov byte ptr [rdi + 0xf8], cl ; pop rbp ; ret
0xffffff80003b2e1b : mov cl, 0xe0 ; add cl, byte ptr [rax + 1] ; ret 0x8d4c
0xffffff80002c02b7 : mov cl, 0xf ; jne 0xffffff80002c02b8 ; movzx eax, ax ; pop rbp ; ret
0xffffff80003675f7 : mov cl, 0xf ; jne 0xffffff80003675f8 ; and eax, 1 ; pop rbp ; ret
0xffffff800039232c : mov cl, 0xf ; jne 0xffffff800039233f ; mov eax, 1 ; ret
0xffffff800039237c : mov cl, 0xf ; jne 0xffffff800039238f ; mov eax, 1 ; ret
0xffffff800039247c : mov cl, 0xf ; jne 0xffffff800039248f ; mov eax, 1 ; ret
0xffffff80003924ee : mov cl, 0xf ; jne 0xffffff800039252f ; ret
0xffffff80003925d6 : mov cl, 0xf ; jne 0xffffff80003925f7 ; mov eax, 1 ; ret
0xffffff8000392622 : mov cl, 0xf ; jne 0xffffff8000392663 ; ret
0xffffff800039287a : mov cl, 0xf ; jne 0xffffff800039288d ; mov eax, 1 ; ret
0xffffff80003e78b6 : mov cl, 0xfa ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80006b40b8 : mov cl, 0xfd ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800077a2b5 : mov cl, 0xff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007b98e9 : mov cl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039f51a : mov cl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x148
0xffffff80003b1866 : mov cl, 0xff ; je 0xffffff80003b1872 ; add esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff8000773dbd : mov cl, 0xff ; mov rdi, r15 ; call 0xffffff8000397208
0xffffff80003dc3ea : mov cl, 1 ; mov r10d, eax ; jmp 0xffffff80003dc419
0xffffff800030f12a : mov cl, 3 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003476e7 : mov cl, 4 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000463310 : mov cl, 4 ; add byte ptr [rax], al ; jmp 0xffffff800046332f
0xffffff80006c8bc7 : mov cl, 5 ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff800026d7e7 : mov cl, 6 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003ce323 : mov cl, 7 ; add byte ptr [rcx - 0x77], al ; ret
0xffffff800032736a : mov cl, 8 ; mov eax, 1 ; pop rbp ; ret
0xffffff800032735b : mov cl, 8 ; xor eax, eax ; pop rbp ; ret
0xffffff800060bbd6 : mov cl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0xffffff80002bbbc0 : mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff8000831cba : mov cl, bh ; shl eax, cl ; dec eax ; cdqe ; pop rbp ; ret
0xffffff80004e1542 : mov cl, bl ; ret 0x66ff
0xffffff800058fabe : mov cl, byte ptr [rax + 1] ; xlatb ; jmp rdi
0xffffff8000594765 : mov cl, byte ptr [rax + 1] ; xlatb ; mov r9, r11 ; jmp rdi
0xffffff800065d912 : mov cl, byte ptr [rbx] ; ret
0xffffff800051f893 : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0xffffff80006bbfa5 : mov cl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065d222 : mov cl, byte ptr [rdi] ; ret
0xffffff80006116b2 : mov cl, byte ptr [rsi - 0x76b7ffb4] ; iretd ; pop rbp ; jmp r8
0xffffff80006a7322 : mov cl, cl ; ret 0x48ff
0xffffff80003912a6 : mov cr0, rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800039133b : mov cr0, rax ; pop rbp ; ret
0xffffff8000391596 : mov cr0, rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000393524 : mov cr3, rax ; pop rbp ; ret
0xffffff80003934fe : mov cr3, rcx ; pop rbp ; ret
0xffffff80003ae43c : mov cr4, r9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a21aa : mov cr4, rax ; mov dword ptr [rdi + 0x60], esi ; pop rbp ; ret
0xffffff800039a9f3 : mov cr4, rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003ae43d : mov cr4, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005d5a01 : mov cs, esp ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000440222 : mov cs, word ptr [rax + 1] ; int1 ; jmp rcx
0xffffff80006116b3 : mov cs, word ptr [rax + rax + 0x48] ; mov edi, ecx ; pop rbp ; jmp r8
0xffffff80008d59ce : mov cs, word ptr [rbx] ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff80003f24ae : mov cs, word ptr [rbx] ; cli ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000b46553 : mov cs, word ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000845424 : mov cs, word ptr [rcx + 0x63] ; ret
0xffffff800051f8f4 : mov cs, word ptr [rcx + rax - 0xf] ; jmp rcx
0xffffff80008d3f8e : mov cs, word ptr [rcx - 0x76b70007] ; ret
0xffffff8000288a4d : mov cs, word ptr [rcx] ; xchg dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf685
0xffffff80005e1005 : mov cs, word ptr [rdi + 0x3948003b] ; ret 0x820f
0xffffff80006c364e : mov cs, word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003c5066 : mov cs, word ptr [rsp + rsi*2] ; add cl, ch ; ret 0xffef
0xffffff8000b46552 : mov cs, word ptr ss:[rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000737c9b : mov cx, 0xa80d ; movzx eax, cx ; pop rbp ; ret
0xffffff8000399280 : mov cx, word ptr [rdi] ; mov word ptr [rsi], cx ; xor eax, eax ; ret
0xffffff80008276d1 : mov dh, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005efa98 : mov dh, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000719a6c : mov dh, 0x13 ; inc rdx ; jmp 0xffffff8000719a87
0xffffff8000528e0c : mov dh, 0x14 ; and dword ptr [rcx], ecx ; ret 0x8842
0xffffff80007ae3f3 : mov dh, 0x14 ; mov rdx, dr0 ; mov byte ptr [rdi + rcx], dl ; pop rbp ; ret
0xffffff800080cd72 : mov dh, 0x14 ; or al, byte ptr [rdx + 0xf] ; mov dh, 4 ; or dword ptr [rcx], edi ; ret 0xb75
0xffffff800074a3dc : mov dh, 0x14 ; sbb dword ptr [rcx], ecx ; ret 0x1488
0xffffff800076259a : mov dh, 0x14 ; sub dword ptr [rcx], ecx ; ret 0x8842
0xffffff80003851eb : mov dh, 0x14 ; xor dword ptr [rcx], ecx ; ret 0x1488
0xffffff8000719a54 : mov dh, 0x17 ; inc rdx ; jmp 0xffffff8000719a8a
0xffffff8000719a54 : mov dh, 0x17 ; inc rdx ; jmp 0xffffff8000719a8f
0xffffff800071a3ac : mov dh, 0x17 ; inc rdx ; jmp 0xffffff800071a3c4
0xffffff800071adb7 : mov dh, 0x17 ; inc rdx ; jmp 0xffffff800071ade5
0xffffff8000720c85 : mov dh, 0x17 ; inc rdx ; jmp 0xffffff8000720c9b
0xffffff8000775746 : mov dh, 0x1a ; ret 0xbeff
0xffffff80006d56ca : mov dh, 0x1c ; xor byte ptr [rdi], cl ; mov dh, 4 ; xor bh, byte ptr [rcx] ; ret
0xffffff8000875936 : mov dh, 0x1d ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000605ab6 : mov dh, 0x1d ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b320d : mov dh, 0x2d ; add byte ptr [rbx + 0x58904c8], al ; ret
0xffffff8000881f7e : mov dh, 0x2d ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008889a6 : mov dh, 0x2f ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006253ff : mov dh, 0x34 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call r14
0xffffff8000648ca8 : mov dh, 0x35 ; add byte ptr [rbp + rcx*4 + 5], cl ; ret
0xffffff8000753154 : mov dh, 0x38 ; add al, ch ; in al, 0xf8 ; ret
0xffffff8000783c75 : mov dh, 0x3a ; add al, ch ; ret
0xffffff80008eccb9 : mov dh, 0x3c ; and al, 0x83 ; jmp qword ptr [rax]
0xffffff8000764626 : mov dh, 0x3f ; ret
0xffffff800038e03c : mov dh, 0x40 ; pop rbp ; ret
0xffffff8000804c12 : mov dh, 0x41 ; adc dword ptr [rdi], ecx ; mov dh, 0x51 ; adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff80008507df : mov dh, 0x41 ; add al, byte ptr [rcx - 0x78] ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4803
0xffffff80008507bd : mov dh, 0x41 ; add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0x94e9
0xffffff80005a97bc : mov dh, 0x41 ; js 0xffffff80005a97fd ; ret
0xffffff80003b4741 : mov dh, 0x41 ; or al, 0x39 ; ret 0x1272
0xffffff800028bbaf : mov dh, 0x41 ; sbb al, 0x83 ; loopne 0xffffff800028bbbd ; pop rbp ; ret
0xffffff800085090f : mov dh, 0x42 ; add al, byte ptr [rcx - 0x78] ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4803
0xffffff800085093f : mov dh, 0x42 ; add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0x12e9
0xffffff8000456699 : mov dh, 0x43 ; add dword ptr [rax - 1], ecx ; ret
0xffffff8000559261 : mov dh, 0x43 ; or dword ptr [rbx - 0x7af0e108], eax ; ret 1
0xffffff8000451ec2 : mov dh, 0x44 ; or bh, bh ; pop rbp ; ret
0xffffff80003d4424 : mov dh, 0x45 ; ret
0xffffff80003d441a : mov dh, 0x45 ; ret 0x8589
0xffffff800049eecd : mov dh, 0x45 ; test dword ptr [rax - 0x7d], 0x5d5b08c4 ; ret
0xffffff8000579d29 : mov dh, 0x46 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80005292db : mov dh, 0x46 ; add dword ptr [rdi], ecx ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0xca75
0xffffff800054c393 : mov dh, 0x47 ; adc byte ptr [rcx + 0x39], al ; ret 0x4a75
0xffffff800052966e : mov dh, 0x47 ; add dword ptr [rdi], ecx ; mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80004fa165 : mov dh, 0x47 ; and r8, 1 ; pop rbp ; ret
0xffffff800086b6d5 : mov dh, 0x47 ; pop rbp ; ret
0xffffff8000898095 : mov dh, 0x47 ; pop rsp ; pop rbp ; ret
0xffffff80005aff1b : mov dh, 0x47 ; sbb byte ptr [rdi], cl ; mov dh, 0x51 ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff80006a4a9a : mov dh, 0x4b ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800048da6a : mov dh, 0x4c ; add esi, esi ; jmp rsi
0xffffff80005fe874 : mov dh, 0x4d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800085cf2e : mov dh, 0x4d ; sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80005d13ef : mov dh, 0x4f ; adc byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80008d066e : mov dh, 0x4f ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff8000804c16 : mov dh, 0x51 ; adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff8000529672 : mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80005292df : mov dh, 0x51 ; add dword ptr [rcx], edi ; ret 0xca75
0xffffff80006cc48e : mov dh, 0x51 ; and cl, byte ptr [rax - 1] ; ret 0xe7e8
0xffffff80005aff1f : mov dh, 0x51 ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff80006caa02 : mov dh, 0x53 ; and cl, byte ptr [rax - 1] ; ret 0x73e8
0xffffff80006bedcf : mov dh, 0x53 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff8000609601 : mov dh, 0x55 ; add esi, esi ; ret 0xf0f
0xffffff8000673672 : mov dh, 0x55 ; jbe 0xffffff80006736b3 ; ret 0x840f
0xffffff80005e9b36 : mov dh, 0x56 ; sbb eax, 0x940ffa39 ; ret
0xffffff8000579d25 : mov dh, 0x57 ; add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff8000635b79 : mov dh, 0x57 ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff800083d070 : mov dh, 0x58 ; add dword ptr [rcx], esi ; ret
0xffffff800039aa89 : mov dh, 0x5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004869dd : mov dh, 0x5b ; xor byte ptr [rbx - 0x6bf0fe05], al ; ret
0xffffff80002fd085 : mov dh, 0x64 ; add al, ch ; ret
0xffffff80005ccb01 : mov dh, 0x64 ; imul edx, dword ptr [rsi + 0x48], -1 ; ret 0xfa83
0xffffff8000797c96 : mov dh, 0x6b ; mov al, 0xff ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002e90b7 : mov dh, 0x71 ; add byte ptr [rax - 0x75], cl ; shr dword ptr [rax], 0x5d ; ret
0xffffff8000838838 : mov dh, 0x72 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0xffffff80008cbcb3 : mov dh, 0x73 ; add cl, byte ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0x8302
0xffffff800038de55 : mov dh, 0x74 ; add eax, 0x75f239d0 ; ret 0xd284
0xffffff80005d1b19 : mov dh, 0x76 ; adc byte ptr [rax - 0x39], cl ; ret
0xffffff800076f2c6 : mov dh, 0x78 ; ret 0x41ff
0xffffff80003bad3c : mov dh, 0x80 ; cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005e1e00 : mov dh, 0x80 ; ret
0xffffff800069d2eb : mov dh, 0x81 ; ret
0xffffff8000535513 : mov dh, 0x82 ; ret
0xffffff8000566647 : mov dh, 0x83 ; ret
0xffffff800052d3fd : mov dh, 0x83 ; ret 0
0xffffff80006ab88b : mov dh, 0x83 ; rol byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x1b75
0xffffff800069baa4 : mov dh, 0x85 ; ret
0xffffff80005e0d42 : mov dh, 0x86 ; ret
0xffffff80006af15f : mov dh, 0x87 ; rol byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x2775
0xffffff800069f99e : mov dh, 0x88 ; ret
0xffffff80006a115b : mov dh, 0x8b ; ret
0xffffff8000593119 : mov dh, 0x8b ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005e10e3 : mov dh, 0x8d ; ret
0xffffff800066a1aa : mov dh, 0x8e ; ret
0xffffff800069ce19 : mov dh, 0x8f ; ret
0xffffff80006a1a3a : mov dh, 0x90 ; ret
0xffffff80006a1332 : mov dh, 0x91 ; ret
0xffffff80005932e6 : mov dh, 0x93 ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007a6531 : mov dh, 0x94 ; and al, 0x8c ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x3175
0xffffff80005e1148 : mov dh, 0x95 ; ret
0xffffff800066aa2f : mov dh, 0x96 ; ret
0xffffff80005e32dd : mov dh, 0x97 ; ret
0xffffff800069fd6c : mov dh, 0x9f ; ret
0xffffff80005445da : mov dh, 0xab ; ret
0xffffff80004e3386 : mov dh, 0xad ; ret 0x41ff
0xffffff80006a0442 : mov dh, 0xaf ; ret
0xffffff800036b68a : mov dh, 0xb0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800069f6e7 : mov dh, 0xb1 ; ret
0xffffff800083530d : mov dh, 0xc ; adc byte ptr [rax - 1], cl ; ret 0xf983
0xffffff80006d499c : mov dh, 0xc0 ; add eax, eax ; pop rbp ; ret
0xffffff80007570e8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800036b189 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007e4ab1 : mov dh, 0xc0 ; and eax, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f3e80 : mov dh, 0xc0 ; lea eax, [rax + rax*2] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029d240 : mov dh, 0xc0 ; lea eax, [rax + rax*4] ; jmp 0xffffff800029d261
0xffffff8000338163 : mov dh, 0xc0 ; lea eax, [rax + rax*4] ; pop rbp ; ret
0xffffff80002f6d8c : mov dh, 0xc0 ; lea eax, [rax + rax*4] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008eb5f2 : mov dh, 0xc0 ; mov dword ptr [rip + 0x1fa466], eax ; pop rbp ; ret
0xffffff800075704a : mov dh, 0xc0 ; mov dword ptr [rip + 0x38778e], eax ; pop rbp ; ret
0xffffff800036d24b : mov dh, 0xc0 ; mov dword ptr [rip + 0x78f095], eax ; pop rbp ; ret
0xffffff800036a3aa : mov dh, 0xc0 ; mov dword ptr [rip + 0x791e8a], eax ; pop rbp ; ret
0xffffff80003999a2 : mov dh, 0xc0 ; mov dword ptr [rsi], eax ; pop rbp ; ret
0xffffff80006b1ec8 : mov dh, 0xc0 ; mov word ptr [rdi + 2], 0 ; pop rbp ; ret
0xffffff800028a91b : mov dh, 0xc0 ; or eax, 4 ; pop rbp ; ret
0xffffff8000266270 : mov dh, 0xc0 ; pop rbp ; ret
0xffffff800034b928 : mov dh, 0xc0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bdce5 : mov dh, 0xc0 ; shl eax, 2 ; pop rbp ; ret
0xffffff80002b760b : mov dh, 0xc0 ; shl eax, 4 ; pop rbp ; ret
0xffffff8000505032 : mov dh, 0xc0 ; xor eax, 1 ; add eax, ecx ; pop rbp ; ret
0xffffff8000584690 : mov dh, 0xc0 ; xor eax, 1 ; pop rbp ; ret
0xffffff80007835c7 : mov dh, 0xc1 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800035d6b9 : mov dh, 0xc1 ; lea eax, [rax + rax*4 + 2] ; pop rbp ; ret
0xffffff800089285a : mov dh, 0xc1 ; mov rcx, r9 ; pop rbp ; jmp rax
0xffffff8000268ece : mov dh, 0xc1 ; pop rbp ; ret
0xffffff80002909a9 : mov dh, 0xc1 ; shl eax, 2 ; mov qword ptr [rdx], rdi ; pop rbp ; ret
0xffffff800080e0c1 : mov dh, 0xc1 ; test r8d, eax ; sete al ; pop rbp ; ret
0xffffff800043778f : mov dh, 0xc1 ; xor eax, 1 ; pop rbp ; ret
0xffffff80003ab799 : mov dh, 0xc2 ; pop rbp ; ret
0xffffff8000387ee8 : mov dh, 0xc2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d7305 : mov dh, 0xc2 ; ret
0xffffff800039a46e : mov dh, 0xc3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800069862d : mov dh, 0xc3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c1ae6 : mov dh, 0xc4 ; pop rbp ; ret
0xffffff80005656b8 : mov dh, 0xc6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b7b06 : mov dh, 0xc7 ; pop rbp ; ret
0xffffff8000389004 : mov dh, 0xc8 ; mov eax, ecx ; pop rbp ; ret
0xffffff80002fd346 : mov dh, 0xc8 ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800048da65 : mov dh, 0xc8 ; movsxd rsi, dword ptr [r14 + rsi*4] ; add rsi, r14 ; jmp rsi
0xffffff80002f7b5b : mov dh, 0xc8 ; xor eax, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000b4056d : mov dh, 0xc9 ; ret 0x4908
0xffffff8000387d2d : mov dh, 0xc9 ; shl ecx, 4 ; or eax, ecx ; pop rbp ; ret
0xffffff8000366c95 : mov dh, 0xc9 ; xor eax, eax ; cmp ecx, edx ; je 0xffffff8000366c89 ; pop rbp ; ret
0xffffff80006788d0 : mov dh, 0xcf ; lea rsi, [rbp - 0x68] ; call rbx
0xffffff800058ae47 : mov dh, 0xd0 ; inc edx ; jmp 0xffffff800058ae5d
0xffffff8000799f37 : mov dh, 0xd1 ; mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff800056cc6b : mov dh, 0xd2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072289a : mov dh, 0xd2 ; inc rdx ; jmp 0xffffff80007228ae
0xffffff800079b8a4 : mov dh, 0xd2 ; mov rsi, r15 ; call rcx
0xffffff800088e723 : mov dh, 0xd2 ; pop rbp ; jmp rax
0xffffff8000892944 : mov dh, 0xd6 ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff8000892817 : mov dh, 0xd6 ; mov esi, ecx ; mov rcx, rax ; pop rbp ; jmp r8
0xffffff80003ae4bc : mov dh, 0xf0 ; mov eax, esi ; pop rbp ; ret
0xffffff800043cb4b : mov dh, 0xf0 ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007675f7 : mov dh, 0xf0 ; mov rdi, r15 ; call 0xffffff8000393048
0xffffff800065f0f6 : mov dh, 0xf0 ; ret 0x48ff
0xffffff80004650df : mov dh, 0xf1 ; cmp esi, 0x2f ; je 0xffffff80004650d8 ; jmp 0xffffff80004650b3
0xffffff80008ad1d6 : mov dh, 0xf1 ; mov rdi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800056b0bb : mov dh, 0xf3 ; mov rdi, r13 ; call 0xffffff80006b73b7
0xffffff800064eae6 : mov dh, 0xf9 ; ret
0xffffff8000865d22 : mov dh, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d2a68 : mov dh, 0xfb ; jmp qword ptr [rbx]
0xffffff80006a2315 : mov dh, 0xfc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff800027a677 : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fe2ce : mov dh, 0xff ; mov eax, 1 ; pop rbp ; ret
0xffffff800082a45d : mov dh, 0xff ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000763457 : mov dh, 0xff ; mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e9
0xffffff8000763bd1 : mov dh, 0xff ; mov rdi, r14 ; call 0xffffff80003923e8
0xffffff8000762e27 : mov dh, 0xff ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff800072ee45 : mov dh, 0xff ; pop rbp ; ret
0xffffff8000831dec : mov dh, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fe327 : mov dh, 0xff ; shl eax, 2 ; pop rbp ; ret
0xffffff80007fe2a7 : mov dh, 0xff ; shl eax, 3 ; pop rbp ; ret
0xffffff80007fe2f7 : mov dh, 0xff ; xor eax, eax ; pop rbp ; ret
0xffffff8000807ed8 : mov dh, 1 ; inc rcx ; mov qword ptr [rdi], rcx ; pop rbp ; ret
0xffffff800088cf7e : mov dh, 1 ; mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000520329 : mov dh, 2 ; or eax, esi ; pop rbp ; ret
0xffffff8000521d04 : mov dh, 4 ; and al, 0xbb ; mov ecx, 0x299e3779 ; ret
0xffffff800052ded8 : mov dh, 4 ; or dword ptr [rcx], ebp ; ret 0xb75
0xffffff800080cd77 : mov dh, 4 ; or dword ptr [rcx], edi ; ret 0xb75
0xffffff80006d56ce : mov dh, 4 ; xor bh, byte ptr [rcx] ; ret
0xffffff800048fed8 : mov dh, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80004847a5 : mov dh, 5 ; add eax, 0x5d006508 ; ret
0xffffff80003918f5 : mov dh, 5 ; jne 0xffffff80003918f9 ; jae 0xffffff8000391902 ; pop rbp ; ret
0xffffff800039a605 : mov dh, 5 ; or eax, 0x5d007373 ; ret
0xffffff800063e650 : mov dh, 5 ; pop rdx ; ret
0xffffff80008de54c : mov dh, 5 ; ret 0x2074
0xffffff8000805842 : mov dh, 7 ; jmp 0xffffff8000805762
0xffffff8000516485 : mov dh, 7 ; pop rbp ; ret
0xffffff8000793735 : mov dh, al ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80008358ef : mov dh, al ; mov dl, al ; jmp rdi
0xffffff80006730d6 : mov dh, bh ; mov r15b, byte ptr [rbp - 0xb8] ; jmp rdi
0xffffff80006bcd92 : mov dh, byte ptr [rbx - 0x76b7fff1] ; ret
0xffffff8000630e92 : mov dh, byte ptr [rdx + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003a919b : mov dh, byte ptr [rdx] ; call rax
0xffffff80004c0865 : mov dh, dh ; ret 0x8910
0xffffff800034ce97 : mov dh, dh ; ret 0x8940
0xffffff800079bdbc : mov di, 0x31ff ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000701e31 : mov di, 5 ; movsx eax, di ; pop rbp ; ret
0xffffff8000373d58 : mov dil, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff800057d1d6 : mov dil, 0xd5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000287d46 : mov dl, 0x10 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000679785 : mov dl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005db602 : mov dl, 0x1e ; push rcx ; add byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff80008cc0f3 : mov dl, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003084aa : mov dl, 0x26 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80007fbf11 : mov dl, 0x2d ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0xffffff8000b40a09 : mov dl, 0x3e ; ret
0xffffff8000772bca : mov dl, 0x3f ; ret 0x4cff
0xffffff80003c1c51 : mov dl, 0x48 ; add eax, edx ; jmp rax
0xffffff800060106c : mov dl, 0x48 ; add esi, edx ; jmp rsi
0xffffff800063a81a : mov dl, 0x49 ; add eax, 0x5e415b00 ; pop rbp ; ret
0xffffff80005f4076 : mov dl, 0x53 ; add al, ch ; ret 0xd9e9
0xffffff800075d48a : mov dl, 0x5b ; ret
0xffffff800036682d : mov dl, 0x5d ; ret
0xffffff80003741b0 : mov dl, 0x75 ; add byte ptr [rcx], dh ; ret 0x8b4c
0xffffff80008ea262 : mov dl, 0x75 ; and dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80006fe772 : mov dl, 0x89 ; cmp eax, 0xd8d4800 ; ret
0xffffff8000700cda : mov dl, 0x9e ; mov ecx, 0x58948ff ; ret
0xffffff8000b46acf : mov dl, 0x9f ; stosb byte ptr [rdi], al ; call rdi
0xffffff8000692d1a : mov dl, 0xac ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80006cd634 : mov dl, 0xc0 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800053550d : mov dl, 0xc3 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0xffffff800075698a : mov dl, 0xc6 ; ret
0xffffff800065f0ef : mov dl, 0xce ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000755c8a : mov dl, 0xd3 ; ret
0xffffff8000647df5 : mov dl, 0xd4 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800065e319 : mov dl, 0xd4 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800046a130 : mov dl, 0xe4 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x4e3
0xffffff800076458a : mov dl, 0xe4 ; ret 0x48ff
0xffffff8000486fc2 : mov dl, 0xea ; add byte ptr fs:[rax - 0x77], cl ; ret 0x32e8
0xffffff8000737651 : mov dl, 0xfa ; je 0xffffff800073765f ; mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff80003e7dad : mov dl, 0xfa ; push rsi ; ret
0xffffff80002f89fc : mov dl, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000772667 : mov dl, 0xff ; call 0xffffff800039923f
0xffffff8000736e69 : mov dl, 0xff ; call qword ptr [rbx]
0xffffff80006c0441 : mov dl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000776fea : mov dl, 0xff ; mov r12, r15 ; jmp 0xffffff8000777001
0xffffff800077d886 : mov dl, 0xff ; pop rbp ; ret
0xffffff80007978b3 : mov dl, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800030f02a : mov dl, 3 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800030b92a : mov dl, 3 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800034f436 : mov dl, 4 ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0xffffff80003ce1ab : mov dl, 7 ; add byte ptr [rcx - 0x77], al ; ret
0xffffff80005512dc : mov dl, al ; jmp 0xffffff80005512ec
0xffffff800058fbd4 : mov dl, al ; jmp 0xffffff800058fc08
0xffffff800058fbd9 : mov dl, al ; jmp 0xffffff800058fc5c
0xffffff80006bb6ac : mov dl, al ; jmp 0xffffff80006bb6bd
0xffffff80008358f1 : mov dl, al ; jmp rdi
0xffffff8000737655 : mov dl, byte ptr [rax] ; movzx eax, dl ; pop rbp ; ret
0xffffff80006cf592 : mov dl, byte ptr [rbx - 0x76b70040] ; ret
0xffffff80007587bf : mov dl, byte ptr [rcx + rax] ; test dl, 0x10 ; jne 0xffffff80007587d2 ; pop rbp ; ret
0xffffff80007a56db : mov dl, byte ptr [rsi + 0x5bc031ff] ; pop r14 ; pop rbp ; ret
0xffffff800050fcf9 : mov dl, dh ; movzx eax, dl ; pop rbp ; ret
0xffffff800058fbd3 : mov dl, r8b ; jmp 0xffffff800058fc09
0xffffff800058fbd8 : mov dl, r8b ; jmp 0xffffff800058fc5d
0xffffff800050fcf8 : mov dl, sil ; movzx eax, dl ; pop rbp ; ret
0xffffff800062f23e : mov ds, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006f83cf : mov ds, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004a2490 : mov ds, word ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff800082f70d : mov ds, word ptr [rdx + 0x30] ; add byte ptr [rax], ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000488a6e : mov ds, word ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800069dec9 : mov ds, word ptr [rdx] ; add ch, cl ; idiv bh ; jmp rsp
0xffffff80004f0f88 : mov ds, word ptr [rsi - 0x76b2ffb8] ; jmp 0xffffff802a11cc84
0xffffff8000297e38 : mov dword ptr [r10], 0 ; pop rbx ; pop rbp ; ret
0xffffff800038b868 : mov dword ptr [r10], 0x83490000 ; ret 0xa902
0xffffff800037c768 : mov dword ptr [r10], 1 ; pop rbx ; pop rbp ; ret
0xffffff80005e904b : mov dword ptr [r13 + rbx + 0x10], 0x83480200 ; ret
0xffffff8000525e5f : mov dword ptr [r14 + 0x10], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000583823 : mov dword ptr [r14 + 0x20], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c0526 : mov dword ptr [r14 + 0x6c], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005f0837 : mov dword ptr [r14 + 4], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000286a06 : mov dword ptr [r14], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039ef4c : mov dword ptr [r14], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039ef06 : mov dword ptr [r14], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003894c1 : mov dword ptr [r8 + 0x18], eax ; ret
0xffffff80002bf62d : mov dword ptr [r8 + 4], ecx ; pop rbp ; ret
0xffffff80008e1a26 : mov dword ptr [r8], eax ; pop rbp ; ret
0xffffff8000538cf6 : mov dword ptr [r8], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006307f4 : mov dword ptr [r8], edx ; pop rbp ; ret
0xffffff80002bf62a : mov dword ptr [r8], r9d ; mov dword ptr [r8 + 4], ecx ; pop rbp ; ret
0xffffff8000505704 : mov dword ptr [r9 + 0x20], r8d ; pop rbp ; ret
0xffffff8000389541 : mov dword ptr [r9], 0 ; pop rbp ; ret
0xffffff80003894f8 : mov dword ptr [r9], 1 ; pop rbp ; ret
0xffffff800071ea27 : mov dword ptr [r9], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000568bd4 : mov dword ptr [r9], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800062ed94 : mov dword ptr [rax + 0x10], 0 ; pop rbp ; ret
0xffffff800066de39 : mov dword ptr [rax + 0x10], ecx ; jmp 0xffffff800066de04
0xffffff8000327a28 : mov dword ptr [rax + 0x10], edx ; pop rbp ; ret
0xffffff800033d57c : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff800026daf9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rcx + 8], rsi ; pop rbp ; ret
0xffffff8000388d0c : mov dword ptr [rax + 0x1680], edx ; pop rbp ; ret
0xffffff800059bb3c : mov dword ptr [rax + 0x18], 0 ; pop rbp ; ret
0xffffff80003894c2 : mov dword ptr [rax + 0x18], eax ; ret
0xffffff800033d580 : mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0xffffff800062ddff : mov dword ptr [rax + 0x1a8], edx ; pop rbp ; ret
0xffffff80003a4129 : mov dword ptr [rax + 0x1c], 0 ; pop rbp ; ret
0xffffff800039eff6 : mov dword ptr [rax + 0x1c], edx ; mov dword ptr [rcx + 0x1c], edx ; pop rbp ; ret
0xffffff80005bed58 : mov dword ptr [rax + 0x20], edx ; pop rbp ; ret
0xffffff800074fced : mov dword ptr [rax + 0x24], ecx ; pop rbp ; ret
0xffffff80005b1648 : mov dword ptr [rax + 0x28], edx ; pop rbp ; ret
0xffffff80006c83a4 : mov dword ptr [rax + 0x28], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000644127 : mov dword ptr [rax + 0x28c], ecx ; pop rbp ; ret
0xffffff80003a41bf : mov dword ptr [rax + 0x2c], edi ; pop rbp ; ret
0xffffff80003a8dfb : mov dword ptr [rax + 0x300], esi ; pop rbp ; ret
0xffffff80003576ba : mov dword ptr [rax + 0x30], 0x3e8 ; pop rbp ; ret
0xffffff8000357699 : mov dword ptr [rax + 0x30], 1 ; pop rbp ; ret
0xffffff8000770306 : mov dword ptr [rax + 0x38], esp ; mov rdi, r12 ; call 0xffffff8000392939
0xffffff80003ba80e : mov dword ptr [rax + 0x3a8], edi ; pop rbp ; ret
0xffffff8000581a88 : mov dword ptr [rax + 0x40], edx ; pop rbp ; ret
0xffffff8000338dfb : mov dword ptr [rax + 0x438], edi ; pop rbp ; ret
0xffffff800087d728 : mov dword ptr [rax + 0x44], 0xe ; pop rbp ; ret
0xffffff800087d438 : mov dword ptr [rax + 0x44], 7 ; pop rbp ; ret
0xffffff80003a3dbb : mov dword ptr [rax + 0x44], ecx ; pop rbp ; ret
0xffffff800089860b : mov dword ptr [rax + 0x48000000], ebp ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff80008d2ad7 : mov dword ptr [rax + 0x48000002], esp ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff80008928c0 : mov dword ptr [rax + 0x48000008], edx ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80003a3ddf : mov dword ptr [rax + 0x48], edi ; pop rbp ; ret
0xffffff8000321e97 : mov dword ptr [rax + 0x48], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000389ddc : mov dword ptr [rax + 0x48], esi ; pop rbp ; ret
0xffffff80003ba7f5 : mov dword ptr [rax + 0x490], edi ; pop rbp ; ret
0xffffff8000389d6c : mov dword ptr [rax + 0x54], esi ; pop rbp ; ret
0xffffff80002886eb : mov dword ptr [rax + 0x58], ecx ; pop rbp ; ret
0xffffff8000561f73 : mov dword ptr [rax + 0x60], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800050ced9 : mov dword ptr [rax + 0x68], 0xc0310000 ; pop rbp ; ret
0xffffff80005eb3f8 : mov dword ptr [rax + 0x68], edx ; pop rbp ; ret
0xffffff800057f6f8 : mov dword ptr [rax + 0x78], edx ; pop rbp ; ret
0xffffff80003b5e9a : mov dword ptr [rax + 0x80], ecx ; pop rbp ; ret
0xffffff80005807e7 : mov dword ptr [rax + 0x90], edx ; pop rbp ; ret
0xffffff8000389de2 : mov dword ptr [rax + 0xb8], esi ; pop rbp ; ret
0xffffff80008790a3 : mov dword ptr [rax + 0xc0], ecx ; pop rbp ; ret
0xffffff8000389e59 : mov dword ptr [rax + 0xc8], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80005420e0 : mov dword ptr [rax + 0xc], 0x8b660081 ; ret 0xc166
0xffffff8000389d72 : mov dword ptr [rax + 0xd0], esi ; pop rbp ; ret
0xffffff80002bf62e : mov dword ptr [rax + 4], ecx ; pop rbp ; ret
0xffffff8000648f71 : mov dword ptr [rax + 6], 0x894c0041 ; out 0xe8, eax ; ret 0xd4a0
0xffffff800079c19c : mov dword ptr [rax + 8], 0 ; pop rbp ; ret
0xffffff80008d7af3 : mov dword ptr [rax + 8], eax ; add byte ptr [rax], al ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff80002be086 : mov dword ptr [rax + 8], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000327435 : mov dword ptr [rax + 8], ecx ; pop rbp ; ret
0xffffff800039ccee : mov dword ptr [rax + 8], edi ; pop rbp ; ret
0xffffff8000895d2f : mov dword ptr [rax + 8], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000561e2a : mov dword ptr [rax + 8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80004c4695 : mov dword ptr [rax + rax + 0x518b0000], ecx ; cmp bh, dh ; ret 0
0xffffff800039cdfb : mov dword ptr [rax + rbx - 0x38], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059ec68 : mov dword ptr [rax + rcx*2], 0x8304c083 ; call qword ptr [rax]
0xffffff800027f66f : mov dword ptr [rax + rcx*4], 0 ; pop rbp ; ret
0xffffff80008989a7 : mov dword ptr [rax + rcx], edx ; mov al, 1 ; pop rbp ; ret
0xffffff80007aaba8 : mov dword ptr [rax + rcx], edx ; pop rbp ; ret
0xffffff80008970d4 : mov dword ptr [rax + rcx], esi ; mov dword ptr [rdi + rcx], edx ; mov al, 1 ; pop rbp ; ret
0xffffff80003a8dae : mov dword ptr [rax + rdi], esi ; pop rbp ; ret
0xffffff800089288f : mov dword ptr [rax - 0x76fffff8], ecx ; ret 0xff5d
0xffffff800050c704 : mov dword ptr [rax - 1], ecx ; ret
0xffffff8000b4b150 : mov dword ptr [rax - 1], ecx ; ret 0x848d
0xffffff800053e6a1 : mov dword ptr [rax], 0 ; pop rbp ; ret
0xffffff80004ed2c2 : mov dword ptr [rax], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80007108be : mov dword ptr [rax], 0x20 ; xor eax, eax ; pop rbp ; ret
0xffffff80007bc835 : mov dword ptr [rax], 0x63480000 ; ret
0xffffff800050d6a7 : mov dword ptr [rax], 0x7fff ; xor eax, eax ; pop rbp ; ret
0xffffff80003426d9 : mov dword ptr [rax], 0xfc0950f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff800050cfb7 : mov dword ptr [rax], 0xff ; xor eax, eax ; pop rbp ; ret
0xffffff80004c4326 : mov dword ptr [rax], 0xff001000 ; ret
0xffffff80008323dc : mov dword ptr [rax], 0xff410000 ; ret
0xffffff80002d464e : mov dword ptr [rax], 0xff660000 ; add bh, bh ; ret
0xffffff80004ed5b9 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; pop rbp ; ret
0xffffff80003a1e86 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff80007a8011 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0xffffff8000390eef : mov dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002518df : mov dword ptr [rax], eax ; jae 0xffffff80002518ee ; xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff8000256b0b : mov dword ptr [rax], eax ; pop rbp ; ret
0xffffff8000251828 : mov dword ptr [rax], eax ; shl rax, 0x12 ; pop rbp ; ret
0xffffff800029e976 : mov dword ptr [rax], eax ; test eax, eax ; je 0xffffff800029e985 ; pop rbp ; ret
0xffffff80003895a8 : mov dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000763a3e : mov dword ptr [rax], ebx ; call 0xffffff8000393045
0xffffff800029ab02 : mov dword ptr [rax], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002c207b : mov dword ptr [rax], ecx ; je 0xffffff80002c2086 ; pop rbp ; ret
0xffffff80002bf62b : mov dword ptr [rax], ecx ; mov dword ptr [r8 + 4], ecx ; pop rbp ; ret
0xffffff800041ec81 : mov dword ptr [rax], edi ; mov qword ptr [rdi + 8], rax ; pop rbp ; ret
0xffffff800034925f : mov dword ptr [rax], edi ; pop rbp ; ret
0xffffff8000884fc3 : mov dword ptr [rax], edi ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006307f5 : mov dword ptr [rax], edx ; pop rbp ; ret
0xffffff80006c9848 : mov dword ptr [rax], esi ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f9deb : mov dword ptr [rax], esi ; pop rbp ; ret
0xffffff800054fb89 : mov dword ptr [rbp + 0x18], eax ; mov rdi, rbx ; mov rsi, r14 ; call rcx
0xffffff80005e904c : mov dword ptr [rbp + rbx + 0x10], 0x83480200 ; ret
0xffffff8000b3f2de : mov dword ptr [rbp + rcx*4 + 4], 0xe081413f ; ret 0xad88
0xffffff800046f057 : mov dword ptr [rbp - 0x10], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000336eb9 : mov dword ptr [rbp - 0x120], esi ; inc edx ; jmp 0xffffff8000336ed1
0xffffff80005fbe47 : mov dword ptr [rbp - 0x130], ecx ; call 0xffffff80007b8128
0xffffff80004ec839 : mov dword ptr [rbp - 0x280], eax ; call 0xffffff80004f8a58
0xffffff80006cc783 : mov dword ptr [rbp - 0x2c], eax ; jmp 0xffffff80006cc793
0xffffff8000770a6a : mov dword ptr [rbp - 0x2e8], ecx ; call 0xffffff8000392a49
0xffffff80008b22d7 : mov dword ptr [rbp - 0x30], ebx ; mov rsi, r12 ; call rax
0xffffff800074f0c3 : mov dword ptr [rbp - 0x30], ecx ; mov r9, rbx ; call rax
0xffffff800077096b : mov dword ptr [rbp - 0x310], ebx ; call 0xffffff8000392a49
0xffffff80005c7431 : mov dword ptr [rbp - 0x34], ebx ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80002ede60 : mov dword ptr [rbp - 0x38], edi ; jmp 0xffffff80002edd19
0xffffff80005fba10 : mov dword ptr [rbp - 0x3c], 0xc766ffff ; ret 1
0xffffff80007cd654 : mov dword ptr [rbp - 0x3c], eax ; jmp 0xffffff80007cd0a0
0xffffff800056b075 : mov dword ptr [rbp - 0x40], 0x45c60032 ; ret 0x4402
0xffffff80003150bf : mov dword ptr [rbp - 0x40], ebx ; add rdx, r13 ; sub rdx, rax ; jmp 0xffffff80003150f6
0xffffff80006558a1 : mov dword ptr [rbp - 0x40], ecx ; mov rdi, r14 ; call qword ptr [rax]
0xffffff8000256803 : mov dword ptr [rbp - 0x40], edi ; call 0xffffff8000392a45
0xffffff80005ee51c : mov dword ptr [rbp - 0x40], edx ; call rax
0xffffff80006a6e20 : mov dword ptr [rbp - 0x44], ecx ; mov rdi, r12 ; call 0xffffff8000393048
0xffffff80007cf5a7 : mov dword ptr [rbp - 0x48], ebp ; call rcx
0xffffff80007b872c : mov dword ptr [rbp - 0x48], ecx ; call rcx
0xffffff80003e27aa : mov dword ptr [rbp - 0x4c], esi ; jmp 0xffffff80003e27be
0xffffff80002d6d42 : mov dword ptr [rbp - 0x50], edi ; mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000393049
0xffffff800076a5fa : mov dword ptr [rbp - 0x50], edx ; call rax
0xffffff80007eb89f : mov dword ptr [rbp - 0x50], esi ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff800076a6ab : mov dword ptr [rbp - 0x50], esp ; call 0xffffff8000392a46
0xffffff800076515d : mov dword ptr [rbp - 0x58], esi ; mov rdi, r14 ; call 0xffffff8000392a49
0xffffff8000757b5b : mov dword ptr [rbp - 0x5b8], ebx ; call r15
0xffffff80002a63e2 : mov dword ptr [rbp - 0x68], eax ; mov r10, rax ; jmp 0xffffff80002a6411
0xffffff80005c81d4 : mov dword ptr [rbp - 0x68], esp ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80006a67b7 : mov dword ptr [rbp - 0x80], eax ; mov rdi, r14 ; call 0xffffff8000392a48
0xffffff8000765fb9 : mov dword ptr [rbp - 0x80], ecx ; call 0xffffff80003923e6
0xffffff800068e616 : mov dword ptr [rbp - 0x80], edi ; call rax
0xffffff80007c86ab : mov dword ptr [rbp - 0xa0], edx ; call rax
0xffffff80006a7b9f : mov dword ptr [rbp - 0xa6], esi ; call 0xffffff80007b3e48
0xffffff80006a7b9e : mov dword ptr [rbp - 0xa6], r14d ; call 0xffffff80007b3e49
0xffffff80008fe337 : mov dword ptr [rbp - 0xb7ffdd], edx ; ret
0xffffff80007c6ec7 : mov dword ptr [rbp - 0xd8], ebx ; call rax
0xffffff8000654d6f : mov dword ptr [rbp - 0xe0], eax ; mov rdi, r12 ; call qword ptr [rax]
0xffffff80006541f3 : mov dword ptr [rbp - 0xe8], eax ; call qword ptr [rax]
0xffffff80005e91e7 : mov dword ptr [rbx + 0x10], 0x83480200 ; ret
0xffffff800085695d : mov dword ptr [rbx + 0x10], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800026dbcd : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ae377 : mov dword ptr [rbx + 0x10], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000623710 : mov dword ptr [rbx + 0x12], 0x415b0000 ; pop rsi ; pop rbp ; ret
0xffffff800066f43d : mov dword ptr [rbx + 0x14], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000399f40 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a699a : mov dword ptr [rbx + 0x18], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a6999 : mov dword ptr [rbx + 0x18], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800042319c : mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800025a4b0 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000896d5b : mov dword ptr [rbx + 0x20], esi ; mov al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000561b6d : mov dword ptr [rbx + 0x24], 0x83480210 ; ret
0xffffff80007b27aa : mov dword ptr [rbx + 0x24], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005ea9ce : mov dword ptr [rbx + 0x28], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000763a3a : mov dword ptr [rbx + 0x28], ecx ; mov qword ptr [rax], rbx ; call 0xffffff8000393049
0xffffff8000448601 : mov dword ptr [rbx + 0x2c], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002bf828 : mov dword ptr [rbx + 0x38], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000865c59 : mov dword ptr [rbx + 0x38], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000865c58 : mov dword ptr [rbx + 0x38], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800069ef86 : mov dword ptr [rbx + 0x40], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004d6703 : mov dword ptr [rbx + 0x40], ecx ; mov rdi, r12 ; call 0xffffff8000392938
0xffffff80002a5857 : mov dword ptr [rbx + 0x48], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000763a69 : mov dword ptr [rbx + 0x48], eax ; mov rdi, r12 ; call 0xffffff80003923e9
0xffffff80003266a2 : mov dword ptr [rbx + 0x4c], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002768a8 : mov dword ptr [rbx + 0x54], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004e34e0 : mov dword ptr [rbx + 0x58], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800041e993 : mov dword ptr [rbx + 0x58], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000413c0c : mov dword ptr [rbx + 0x60], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007d4cc6 : mov dword ptr [rbx + 0x60], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c2e01 : mov dword ptr [rbx + 0x60], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e3695 : mov dword ptr [rbx + 0x64], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d4edc : mov dword ptr [rbx + 0x68], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e3426 : mov dword ptr [rbx + 0x70], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800066b807 : mov dword ptr [rbx + 0x74], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008f26ef : mov dword ptr [rbx + 0x78], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800066b8b9 : mov dword ptr [rbx + 0x7c], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800064bfc0 : mov dword ptr [rbx + 0xc], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d802c : mov dword ptr [rbx + 2], eax ; add r11, 4 ; inc r10d ; jmp 0xffffff80006d804d
0xffffff800075046b : mov dword ptr [rbx + 4], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800066f3d9 : mov dword ptr [rbx + 4], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005ef0da : mov dword ptr [rbx + 4], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800035d9f7 : mov dword ptr [rbx + 4], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000802633 : mov dword ptr [rbx + 5], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055fd15 : mov dword ptr [rbx + 8], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80003b6148 : mov dword ptr [rbx + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002a5e1b : mov dword ptr [rbx + 8], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800079897b : mov dword ptr [rbx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000797f95 : mov dword ptr [rbx + 8], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800054ffb7 : mov dword ptr [rbx + 8], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054ffb6 : mov dword ptr [rbx + 8], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000711f66 : mov dword ptr [rbx + rax - 0x48f10000], eax ; ret
0xffffff800042070d : mov dword ptr [rbx + rax*4], 0xdc75fcc6 ; pop rbp ; ret
0xffffff80002b1373 : mov dword ptr [rbx - 0x76b7fff2], edx ; ret 0x148
0xffffff800062609c : mov dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000271efc : mov dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800076b7c3 : mov dword ptr [rbx], eax ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff80007614b3 : mov dword ptr [rbx], ebx ; ret
0xffffff8000283ecd : mov dword ptr [rbx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000710dbd : mov dword ptr [rbx], edi ; xor esi, esi ; xor edx, edx ; call 0xffffff80004ccfd8
0xffffff8000396216 : mov dword ptr [rbx], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800050f9a2 : mov dword ptr [rbx], esi ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396215 : mov dword ptr [rbx], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007970d1 : mov dword ptr [rbx], r14d ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000328125 : mov dword ptr [rcx + 0x10], eax ; pop rbp ; ret
0xffffff800026dd3c : mov dword ptr [rcx + 0x10], edi ; mov qword ptr [rdx + 8], rdi ; pop rbp ; ret
0xffffff8000788e6d : mov dword ptr [rcx + 0x110], edx ; xor eax, eax ; pop rbp ; ret
0xffffff80005283e2 : mov dword ptr [rcx + 0x160], edx ; pop rbp ; ret
0xffffff80005283d2 : mov dword ptr [rcx + 0x168], edx ; pop rbp ; ret
0xffffff80008a0035 : mov dword ptr [rcx + 0x18], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004b5bf9 : mov dword ptr [rcx + 0x18], edx ; jmp 0xffffff80004b5bc4
0xffffff800062deb5 : mov dword ptr [rcx + 0x1a8], esi ; pop rbp ; ret
0xffffff800039eff9 : mov dword ptr [rcx + 0x1c], edx ; pop rbp ; ret
0xffffff800048bc23 : mov dword ptr [rcx + 0x1d90003b], esi ; loop 0xffffff800048bc32 ; jmp rax
0xffffff8000505705 : mov dword ptr [rcx + 0x20], eax ; pop rbp ; ret
0xffffff80005b1d6a : mov dword ptr [rcx + 0x28], eax ; pop rbp ; ret
0xffffff8000468c35 : mov dword ptr [rcx + 0x2c0], edx ; jmp 0xffffff8000468c07
0xffffff8000468755 : mov dword ptr [rcx + 0x2d0], edx ; jmp 0xffffff8000468727
0xffffff80003a41f9 : mov dword ptr [rcx + 0x30], eax ; pop rbp ; ret
0xffffff80007722cc : mov dword ptr [rcx + 0x38], eax ; mov rdi, r12 ; call 0xffffff8000392a49
0xffffff8000763100 : mov dword ptr [rcx + 0x38], eax ; mov rdi, r15 ; call 0xffffff8000392a49
0xffffff80002bf87f : mov dword ptr [rcx + 0x38], edx ; pop rbp ; ret
0xffffff80005821aa : mov dword ptr [rcx + 0x40], eax ; pop rbp ; ret
0xffffff800083d14e : mov dword ptr [rcx + 0x40], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800071c0e5 : mov dword ptr [rcx + 0x44], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000290f3f : mov dword ptr [rcx + 0x48], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002edaf5 : mov dword ptr [rcx + 0x48], edi ; pop rbp ; ret
0xffffff8000b3c396 : mov dword ptr [rcx + 0x495222c2], eax ; adc ch, byte ptr [rcx] ; ret 0xe281
0xffffff80002898d3 : mov dword ptr [rcx + 0x5894800], eax ; ret
0xffffff80008404d1 : mov dword ptr [rcx + 0x60], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005ebb1a : mov dword ptr [rcx + 0x68], eax ; pop rbp ; ret
0xffffff800057fe1a : mov dword ptr [rcx + 0x78], eax ; pop rbp ; ret
0xffffff80003b609e : mov dword ptr [rcx + 0x80], edx ; pop rbp ; ret
0xffffff80005810f4 : mov dword ptr [rcx + 0x90], eax ; pop rbp ; ret
0xffffff80003ac6ae : mov dword ptr [rcx + 0xa844], eax ; pop rbp ; ret
0xffffff800064636b : mov dword ptr [rcx + 0xc0], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80005109bf : mov dword ptr [rcx + 0xc], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000267802 : mov dword ptr [rcx + 0xf], 0x8948fcbe ; ret
0xffffff8000371f14 : mov dword ptr [rcx + 1], 0xc1ca89d1 ; ret 0x4205
0xffffff80004a53d4 : mov dword ptr [rcx + 4], 0xffffffff ; pop rbp ; ret
0xffffff80004a1c07 : mov dword ptr [rcx + 8], eax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800080ce22 : mov dword ptr [rcx + 8], ecx ; mov qword ptr [r9], rax ; mov eax, edi ; pop rbp ; ret
0xffffff800026dafd : mov dword ptr [rcx + 8], esi ; pop rbp ; ret
0xffffff8000369e1e : mov dword ptr [rcx + rax + 0x68], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000898980 : mov dword ptr [rcx + rax + 8], edx ; mov al, 1 ; pop rbp ; ret
0xffffff800051f8c4 : mov dword ptr [rcx + rax - 0x36], ecx ; mov ecx, eax ; jmp rdx
0xffffff80005200d6 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0xffffff8000368420 : mov dword ptr [rcx + rax*4 + 4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000368490 : mov dword ptr [rcx + rax*4 + 8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003527b4 : mov dword ptr [rcx + rax*4], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a6ec2 : mov dword ptr [rcx + rax*4], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003683ba : mov dword ptr [rcx + rax*4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003a6ec1 : mov dword ptr [rcx + rax*4], r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089707a : mov dword ptr [rcx + rax*8 + 4], edx ; mov al, 1 ; pop rbp ; ret
0xffffff800080d2bd : mov dword ptr [rcx + rax*8], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000728ac2 : mov dword ptr [rcx + rcx*4 - 0x30], 0x3948097d ; ret
0xffffff80003ad4b6 : mov dword ptr [rcx + rcx*4 - 9], ecx ; call r15
0xffffff80007bd87a : mov dword ptr [rcx + rdi - 0xd], 0xff08944 ; ret
0xffffff8000377083 : mov dword ptr [rcx + rdx + 8], eax ; pop rbp ; ret
0xffffff80007aab21 : mov dword ptr [rcx + rdx + 8], esi ; mov qword ptr [rcx + rdx], rdi ; pop rbp ; ret
0xffffff80007e492b : mov dword ptr [rcx + rdx*2], 0xff48ffff ; ret 0x3948
0xffffff80007aab26 : mov dword ptr [rcx + rdx], edi ; pop rbp ; ret
0xffffff8000271e08 : mov dword ptr [rcx + rsi + 0x40], 0 ; pop rbp ; ret
0xffffff80005fe98f : mov dword ptr [rcx + rsi*4 + 0x5c], edi ; jmp 0xffffff80005fe95d
0xffffff8000b3d4b0 : mov dword ptr [rcx - 0x77], 0xf08141f8 ; jmp rdi
0xffffff8000b3eace : mov dword ptr [rcx - 0x77], 0xf08141f8 ; pop rdi ; call rdi
0xffffff800055f313 : mov dword ptr [rcx - 1], ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000389542 : mov dword ptr [rcx], 0 ; pop rbp ; ret
0xffffff80002db451 : mov dword ptr [rcx], 0x294c1074 ; ret 0x348
0xffffff80005affcf : mov dword ptr [rcx], 0x518a3275 ; sbb esi, esi ; ret
0xffffff80008dea9f : mov dword ptr [rcx], 0x5bc0940f ; pop r14 ; pop rbp ; ret
0xffffff8000423115 : mov dword ptr [rcx], 0x83480000 ; ret
0xffffff800066af48 : mov dword ptr [rcx], 0xffffffff ; xor eax, eax ; pop rbp ; ret
0xffffff80003894f9 : mov dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff80008ae6ee : mov dword ptr [rcx], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff800056d4fe : mov dword ptr [rcx], 2 ; pop rbp ; ret
0xffffff80002a0b31 : mov dword ptr [rcx], 4 ; xor eax, eax ; pop rbp ; ret
0xffffff800049f928 : mov dword ptr [rcx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800080ce26 : mov dword ptr [rcx], eax ; mov eax, edi ; pop rbp ; ret
0xffffff8000770a88 : mov dword ptr [rcx], eax ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff800034215c : mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff800064201a : mov dword ptr [rcx], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000299c0a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006eba2c : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002534d2 : mov dword ptr [rcx], ebx ; jmp 0xffffff8000253535
0xffffff8000797915 : mov dword ptr [rcx], edi ; add al, ch ; ret
0xffffff800039f1d4 : mov dword ptr [rcx], edx ; pop rbp ; ret
0xffffff80003992e2 : mov dword ptr [rcx], esi ; pop rdi ; ret
0xffffff8000568bd5 : mov dword ptr [rcx], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000884f5d : mov dword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0xffffff80003a4a07 : mov dword ptr [rdi + 0x10], 0 ; ret
0xffffff8000371631 : mov dword ptr [rdi + 0x10], 0xc3d2e1f0 ; pop rbp ; ret
0xffffff80003a3210 : mov dword ptr [rdi + 0x10], eax ; mov dword ptr [rdi + 0x14], ecx ; pop rbp ; ret
0xffffff8000719368 : mov dword ptr [rdi + 0x10], eax ; pop rbp ; ret
0xffffff800044909a : mov dword ptr [rdi + 0x10], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000495738 : mov dword ptr [rdi + 0x10], ebx ; mov qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff800032755c : mov dword ptr [rdi + 0x10], ecx ; pop rbp ; ret
0xffffff800026dd51 : mov dword ptr [rdi + 0x10], edi ; pop rbp ; ret
0xffffff8000795278 : mov dword ptr [rdi + 0x10], esi ; mov dword ptr [rdi + 0x18], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800078c9ca : mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff80003a320f : mov dword ptr [rdi + 0x10], r8d ; mov dword ptr [rdi + 0x14], ecx ; pop rbp ; ret
0xffffff80007d03ea : mov dword ptr [rdi + 0x11c], esi ; pop rbp ; ret
0xffffff8000526bf3 : mov dword ptr [rdi + 0x13c], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800079d518 : mov dword ptr [rdi + 0x14], 0 ; pop rbp ; ret
0xffffff80003a3213 : mov dword ptr [rdi + 0x14], ecx ; pop rbp ; ret
0xffffff8000588ea4 : mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff800079d542 : mov dword ptr [rdi + 0x14], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000563c08 : mov dword ptr [rdi + 0x16c], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800083d18f : mov dword ptr [rdi + 0x1730], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005cbbea : mov dword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0xffffff8000327500 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 0x20], rax ; pop rbp ; ret
0xffffff80003421a4 : mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff80004486e9 : mov dword ptr [rdi + 0x18], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000719346 : mov dword ptr [rdi + 0x18], ecx ; pop rbp ; ret
0xffffff800068456c : mov dword ptr [rdi + 0x18], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800041b0e4 : mov dword ptr [rdi + 0x18], edx ; pop rbp ; ret
0xffffff800079527b : mov dword ptr [rdi + 0x18], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000588eb4 : mov dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff80002be703 : mov dword ptr [rdi + 0x190], eax ; pop rbp ; ret
0xffffff800078c9fe : mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff8000625fa6 : mov dword ptr [rdi + 0x1dc], eax ; pop rbp ; ret
0xffffff800078174e : mov dword ptr [rdi + 0x208], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800035df80 : mov dword ptr [rdi + 0x20], eax ; jmp 0xffffff800035dfd8
0xffffff800035e520 : mov dword ptr [rdi + 0x20], eax ; jmp 0xffffff800035e578
0xffffff800035e650 : mov dword ptr [rdi + 0x20], eax ; jmp 0xffffff800035e6b0
0xffffff8000360535 : mov dword ptr [rdi + 0x20], eax ; jmp 0xffffff8000360595
0xffffff800036e904 : mov dword ptr [rdi + 0x20], eax ; mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000327504 : mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff800059de03 : mov dword ptr [rdi + 0x20], ecx ; pop rbp ; ret
0xffffff8000815604 : mov dword ptr [rdi + 0x20], esi ; mov eax, esi ; pop rbp ; ret
0xffffff8000350705 : mov dword ptr [rdi + 0x20], esi ; pop rbp ; ret
0xffffff8000796225 : mov dword ptr [rdi + 0x20], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80006302ad : mov dword ptr [rdi + 0x210], eax ; pop rbp ; ret
0xffffff80007ce12c : mov dword ptr [rdi + 0x248], eax ; pop rbp ; ret
0xffffff80005cb8b4 : mov dword ptr [rdi + 0x24], 0 ; pop rbp ; ret
0xffffff800035e67d : mov dword ptr [rdi + 0x28], eax ; jmp 0xffffff800035e693
0xffffff800031eb8a : mov dword ptr [rdi + 0x28], eax ; pop rbp ; ret
0xffffff80005b117c : mov dword ptr [rdi + 0x28], ecx ; pop rbp ; ret
0xffffff8000875510 : mov dword ptr [rdi + 0x28], esi ; inc dword ptr [rsi + 0x38] ; mov al, 1 ; pop rbp ; ret
0xffffff800036e908 : mov dword ptr [rdi + 0x28], esi ; pop rbp ; ret
0xffffff80002c0ad3 : mov dword ptr [rdi + 0x2e8], esi ; pop rbp ; ret
0xffffff8000326a6f : mov dword ptr [rdi + 0x30], 0 ; pop rbp ; ret
0xffffff80006e186c : mov dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff800088b854 : mov dword ptr [rdi + 0x30], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000880830 : mov dword ptr [rdi + 0x30], esi ; inc dword ptr [rsi + 0x3c] ; mov al, 1 ; pop rbp ; ret
0xffffff80007961f4 : mov dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80002daf15 : mov dword ptr [rdi + 0x318], esi ; pop rbp ; ret
0xffffff8000796254 : mov dword ptr [rdi + 0x34], 0 ; pop rbp ; ret
0xffffff80007962fb : mov dword ptr [rdi + 0x34], esi ; mov dword ptr [rdi + 0x38], edx ; xor eax, eax ; pop rbp ; ret
0xffffff80002c0a49 : mov dword ptr [rdi + 0x35c], esi ; pop rbp ; ret
0xffffff80002c0a8a : mov dword ptr [rdi + 0x360], esi ; pop rbp ; ret
0xffffff80002c0a6a : mov dword ptr [rdi + 0x368], esi ; pop rbp ; ret
0xffffff80007f0665 : mov dword ptr [rdi + 0x388], esi ; pop rbp ; ret
0xffffff80002c0ab8 : mov dword ptr [rdi + 0x38], eax ; pop rbp ; ret
0xffffff8000526846 : mov dword ptr [rdi + 0x38], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800026254d : mov dword ptr [rdi + 0x38], ecx ; mov byte ptr [rdi + 0x3c], 1 ; pop rbp ; ret
0xffffff80007962fe : mov dword ptr [rdi + 0x38], edx ; xor eax, eax ; pop rbp ; ret
0xffffff8000698735 : mov dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff80003676c4 : mov dword ptr [rdi + 0x390], esi ; pop rbp ; ret
0xffffff80003676fe : mov dword ptr [rdi + 0x394], eax ; pop rbp ; ret
0xffffff80007f06a4 : mov dword ptr [rdi + 0x398], esi ; pop rbp ; ret
0xffffff80007f0894 : mov dword ptr [rdi + 0x39c], esi ; pop rbp ; ret
0xffffff80007f06c5 : mov dword ptr [rdi + 0x3a0], esi ; pop rbp ; ret
0xffffff80007f0875 : mov dword ptr [rdi + 0x3a8], esi ; pop rbp ; ret
0xffffff80007ce157 : mov dword ptr [rdi + 0x3ac], eax ; pop rbp ; ret
0xffffff80007f0725 : mov dword ptr [rdi + 0x3b0], esi ; pop rbp ; ret
0xffffff80007f0744 : mov dword ptr [rdi + 0x3b8], esi ; pop rbp ; ret
0xffffff80007962d9 : mov dword ptr [rdi + 0x3c], 0xc0310000 ; pop rbp ; ret
0xffffff80007962a9 : mov dword ptr [rdi + 0x3c], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80004b3bb1 : mov dword ptr [rdi + 0x40], 0 ; pop rbp ; ret
0xffffff80005815bc : mov dword ptr [rdi + 0x40], ecx ; pop rbp ; ret
0xffffff80007f07e4 : mov dword ptr [rdi + 0x40], esi ; pop rbp ; ret
0xffffff80007f0775 : mov dword ptr [rdi + 0x438], esi ; pop rbp ; ret
0xffffff8000570944 : mov dword ptr [rdi + 0x44], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80004b3d5b : mov dword ptr [rdi + 0x44], edx ; xor eax, eax ; pop rbp ; ret
0xffffff80004b3bf4 : mov dword ptr [rdi + 0x44], esi ; pop rbp ; ret
0xffffff80007f06e5 : mov dword ptr [rdi + 0x450], esi ; pop rbp ; ret
0xffffff80007f0855 : mov dword ptr [rdi + 0x458], esi ; pop rbp ; ret
0xffffff80003a37c3 : mov dword ptr [rdi + 0x48], eax ; pop rbp ; ret
0xffffff800043795d : mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff8000313b5f : mov dword ptr [rdi + 0x48], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000780919 : mov dword ptr [rdi + 0x4a0], esi ; pop rbp ; ret
0xffffff80006d86ba : mov dword ptr [rdi + 0x4c], eax ; pop rbp ; ret
0xffffff80004b3c14 : mov dword ptr [rdi + 0x4c], esi ; pop rbp ; ret
0xffffff80004b410f : mov dword ptr [rdi + 0x50], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000840525 : mov dword ptr [rdi + 0x50], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff8000840524 : mov dword ptr [rdi + 0x50], r9d ; xor eax, eax ; pop rbp ; ret
0xffffff80003a2a50 : mov dword ptr [rdi + 0x58], 5 ; pop rbp ; ret
0xffffff8000767904 : mov dword ptr [rdi + 0x58], eax ; pop rbp ; ret
0xffffff8000342b05 : mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff80003ea41b : mov dword ptr [rdi + 0x5c], eax ; call 0xffffff8000393049
0xffffff80004cf138 : mov dword ptr [rdi + 0x5c], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800039cda9 : mov dword ptr [rdi + 0x60], 0 ; pop rbp ; ret
0xffffff800031ed75 : mov dword ptr [rdi + 0x60], esi ; pop rbp ; ret
0xffffff8000622791 : mov dword ptr [rdi + 0x64], eax ; pop rbp ; ret
0xffffff8000622788 : mov dword ptr [rdi + 0x64], esi ; pop rbp ; ret
0xffffff80006f64ee : mov dword ptr [rdi + 0x68], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005eaf2c : mov dword ptr [rdi + 0x68], ecx ; pop rbp ; ret
0xffffff80006d636d : mov dword ptr [rdi + 0x68], esi ; or byte ptr [rdi + 6], 0x80 ; pop rbp ; ret
0xffffff80004b40c5 : mov dword ptr [rdi + 0x68], esi ; pop rbp ; ret
0xffffff80004fa645 : mov dword ptr [rdi + 0x6a], esi ; pop rbp ; ret
0xffffff8000278a1d : mov dword ptr [rdi + 0x6c], 0 ; pop rbp ; ret
0xffffff8000766b7b : mov dword ptr [rdi + 0x70], eax ; movzx eax, cl ; pop rbp ; ret
0xffffff800040c49e : mov dword ptr [rdi + 0x70], eax ; pop rbp ; ret
0xffffff800081ed38 : mov dword ptr [rdi + 0x70], ecx ; pop rbp ; ret
0xffffff80006d6406 : mov dword ptr [rdi + 0x70], esi ; pop rbp ; ret
0xffffff800040c49d : mov dword ptr [rdi + 0x70], r8d ; pop rbp ; ret
0xffffff80003b7dbf : mov dword ptr [rdi + 0x74], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800047357b : mov dword ptr [rdi + 0x78], eax ; mov edx, eax ; jmp 0xffffff80004735e3
0xffffff80007b5769 : mov dword ptr [rdi + 0x78], eax ; pop rbp ; ret
0xffffff800057f22c : mov dword ptr [rdi + 0x78], ecx ; pop rbp ; ret
0xffffff80004b3c95 : mov dword ptr [rdi + 0x78], esi ; pop rbp ; ret
0xffffff80004f9374 : mov dword ptr [rdi + 0x80], esi ; pop rbp ; ret
0xffffff800057090c : mov dword ptr [rdi + 0x84], ecx ; pop rbp ; ret
0xffffff8000278a4a : mov dword ptr [rdi + 0x88], eax ; pop rbp ; ret
0xffffff80005708b3 : mov dword ptr [rdi + 0x88], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008b2c35 : mov dword ptr [rdi + 0x88], esi ; mov al, 1 ; pop rbp ; ret
0xffffff80008a82b5 : mov dword ptr [rdi + 0x88], esi ; pop rbp ; ret
0xffffff800062df09 : mov dword ptr [rdi + 0x90], eax ; pop rbp ; ret
0xffffff8000630587 : mov dword ptr [rdi + 0x90], eax ; pop rbx ; pop rbp ; ret
0xffffff800039d7d7 : mov dword ptr [rdi + 0x90], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800058020f : mov dword ptr [rdi + 0x90], ecx ; pop rbp ; ret
0xffffff800062def4 : mov dword ptr [rdi + 0x90], edx ; pop rbp ; ret
0xffffff80008a82c5 : mov dword ptr [rdi + 0x90], esi ; pop rbp ; ret
0xffffff80004f960a : mov dword ptr [rdi + 0x928], eax ; pop rbp ; ret
0xffffff80008adeb9 : mov dword ptr [rdi + 0x94], esi ; pop rbp ; ret
0xffffff80008a82d5 : mov dword ptr [rdi + 0x98], esi ; pop rbp ; ret
0xffffff80003b5dca : mov dword ptr [rdi + 0xa0], eax ; pop rbp ; ret
0xffffff800030a912 : mov dword ptr [rdi + 0xa0], esi ; pop rbp ; ret
0xffffff80008d5c2e : mov dword ptr [rdi + 0xa8], eax ; pop rbp ; ret
0xffffff80008d5c6e : mov dword ptr [rdi + 0xb0], eax ; pop rbp ; ret
0xffffff80004b4135 : mov dword ptr [rdi + 0xb0], esi ; pop rbp ; ret
0xffffff8000624c27 : mov dword ptr [rdi + 0xb8], eax ; pop rbp ; ret
0xffffff80004b4155 : mov dword ptr [rdi + 0xb8], esi ; pop rbp ; ret
0xffffff8000624c26 : mov dword ptr [rdi + 0xb8], r8d ; pop rbp ; ret
0xffffff800083dcba : mov dword ptr [rdi + 0xbc], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005684f2 : mov dword ptr [rdi + 0xc8], ecx ; pop rbp ; ret
0xffffff80004b3c44 : mov dword ptr [rdi + 0xc8], esi ; pop rbp ; ret
0xffffff8000563fce : mov dword ptr [rdi + 0xc8], esi ; xor eax, eax ; pop rbp ; ret
0xffffff800044863f : mov dword ptr [rdi + 0xc], eax ; pop rbp ; ret
0xffffff80004b3c54 : mov dword ptr [rdi + 0xcc], esi ; pop rbp ; ret
0xffffff80005640ae : mov dword ptr [rdi + 0xcc], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000326ae4 : mov dword ptr [rdi + 0xd0], eax ; pop rbp ; ret
0xffffff800056411b : mov dword ptr [rdi + 0xd0], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800062172f : mov dword ptr [rdi + 0xd2], eax ; pop rbp ; ret
0xffffff8000566493 : mov dword ptr [rdi + 0xd4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80007f0795 : mov dword ptr [rdi + 0xd80], esi ; pop rbp ; ret
0xffffff8000555dc0 : mov dword ptr [rdi + 0xdc], eax ; pop rbp ; ret
0xffffff80003274dc : mov dword ptr [rdi + 0xe0], eax ; pop rbp ; ret
0xffffff800035bcc1 : mov dword ptr [rdi + 0xe8], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000584f82 : mov dword ptr [rdi + 4], eax ; pop rbp ; ret
0xffffff8000767803 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007d0121 : mov dword ptr [rdi + 4], ecx ; pop rbp ; ret
0xffffff80008b69fd : mov dword ptr [rdi + 4], edx ; mov dword ptr [rdi + 8], ecx ; pop rbp ; ret
0xffffff80004a01bc : mov dword ptr [rdi + 4], edx ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff800072ee65 : mov dword ptr [rdi + 8], 0 ; pop rbp ; ret
0xffffff80003a4921 : mov dword ptr [rdi + 8], 0 ; ret
0xffffff800081154e : mov dword ptr [rdi + 8], 1 ; pop rbp ; ret
0xffffff80008cae1b : mov dword ptr [rdi + 8], eax ; mov eax, 0xc ; pop rbp ; ret
0xffffff80004a6df8 : mov dword ptr [rdi + 8], eax ; mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800034925b : mov dword ptr [rdi + 8], eax ; mov qword ptr [rax], rdi ; pop rbp ; ret
0xffffff800041ec84 : mov dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff80008b6a00 : mov dword ptr [rdi + 8], ecx ; pop rbp ; ret
0xffffff800026dd4d : mov dword ptr [rdi + 8], edi ; mov qword ptr [rdi + 0x10], rdi ; pop rbp ; ret
0xffffff800034fae5 : mov dword ptr [rdi + 8], edi ; pop rbp ; ret
0xffffff800078c6f3 : mov dword ptr [rdi + 8], edx ; cmp eax, 2 ; jge 0xffffff800078c6e9 ; pop rbp ; ret
0xffffff80008b6a22 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff8000377045 : mov dword ptr [rdi + 8], edx ; pop rbp ; ret
0xffffff80002f9db4 : mov dword ptr [rdi + 8], esi ; pop rbp ; ret
0xffffff80006e13d3 : mov dword ptr [rdi + rax*2], 0xb8487800 ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff800034277b : mov dword ptr [rdi + rax*8 + 4], ecx ; pop rbp ; ret
0xffffff80008f25e8 : mov dword ptr [rdi + rax*8 + 8], edx ; pop rbp ; ret
0xffffff8000423a93 : mov dword ptr [rdi + rbp*2], eax ; add byte ptr [rdx - 0x75], cl ; adc al, 0xc2 ; jmp 0xffffff8000423ab1
0xffffff80008970ab : mov dword ptr [rdi + rcx], edx ; mov al, 1 ; pop rbp ; ret
0xffffff80002c806d : mov dword ptr [rdi], 0 ; pop rbp ; ret
0xffffff80003922f1 : mov dword ptr [rdi], 0 ; ret
0xffffff80006c989e : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80003cc59f : mov dword ptr [rdi], 0x89c08500 ; ret
0xffffff800066d9a3 : mov dword ptr [rdi], 0xc0310000 ; call 0xffffff800028e1b9
0xffffff800080ee55 : mov dword ptr [rdi], 0xffffffff ; pop rbp ; ret
0xffffff80004a0173 : mov dword ptr [rdi], eax ; add eax, esi ; pop rbp ; ret
0xffffff80004a01cd : mov dword ptr [rdi], eax ; add esi, r9d ; mov eax, esi ; pop rbp ; ret
0xffffff80004831b4 : mov dword ptr [rdi], eax ; mov eax, 1 ; pop rbp ; ret
0xffffff80004ab113 : mov dword ptr [rdi], eax ; mov rax, r9 ; pop rbp ; ret
0xffffff8000263a11 : mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000762cf3 : mov dword ptr [rdi], eax ; ret
0xffffff80003baf55 : mov dword ptr [rdi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006bc065 : mov dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003c1ae3 : mov dword ptr [rdi], ecx ; movzx eax, ah ; pop rbp ; ret
0xffffff8000807ede : mov dword ptr [rdi], ecx ; pop rbp ; ret
0xffffff8000795f3b : mov dword ptr [rdi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800034fae2 : mov dword ptr [rdi], edi ; mov qword ptr [rdi + 8], rdi ; pop rbp ; ret
0xffffff80003991e9 : mov dword ptr [rdi], edx ; xor eax, eax ; ret
0xffffff80003a4a4f : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 0x10], 0 ; ret
0xffffff80008b69fb : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], edx ; mov dword ptr [rdi + 8], ecx ; pop rbp ; ret
0xffffff80003a4969 : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 8], 0 ; ret
0xffffff8000273b8b : mov dword ptr [rdi], esi ; pop rbp ; ret
0xffffff800079606d : mov dword ptr [rdi], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80004a0172 : mov dword ptr [rdi], r8d ; add eax, esi ; pop rbp ; ret
0xffffff80004a01cc : mov dword ptr [rdi], r8d ; add esi, r9d ; mov eax, esi ; pop rbp ; ret
0xffffff800049cb64 : mov dword ptr [rdx + 0x14], 0 ; pop rbp ; ret
0xffffff8000429659 : mov dword ptr [rdx + 0x30], esi ; jmp 0xffffff8000429624
0xffffff800026dd40 : mov dword ptr [rdx + 8], edi ; pop rbp ; ret
0xffffff800056451e : mov dword ptr [rdx + 8], esi ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800089b79f : mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff80003a8542 : mov dword ptr [rdx + rax*8], ecx ; pop rbp ; ret
0xffffff800049fc1c : mov dword ptr [rdx + rax*8], edi ; xor eax, eax ; pop rbp ; ret
0xffffff800089bdfa : mov dword ptr [rdx + rax], edi ; mov dword ptr [rdx + rax + 8], esi ; pop rbp ; ret
0xffffff800089b79b : mov dword ptr [rdx + rax], edi ; mov qword ptr [rdx + rax + 8], rsi ; pop rbp ; ret
0xffffff80003a0f18 : mov dword ptr [rdx + rcx - 8], eax ; pop rbp ; ret
0xffffff80002ffcdb : mov dword ptr [rdx + rcx*8 + 0x14], eax ; pop rbp ; ret
0xffffff8000b40b43 : mov dword ptr [rdx - 0x73], 0x81217084 ; ret 0xf883
0xffffff80004918aa : mov dword ptr [rdx - 1], 0x83483a3a ; ret 0x44fe
0xffffff80002a0a7e : mov dword ptr [rdx], 0 ; pop rbp ; ret
0xffffff8000297e39 : mov dword ptr [rdx], 0 ; pop rbx ; pop rbp ; ret
0xffffff80002a57b7 : mov dword ptr [rdx], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80008de774 : mov dword ptr [rdx], 0x415be000 ; pop rsi ; pop rbp ; ret
0xffffff80005f524c : mov dword ptr [rdx], 0x480190b8 ; add byte ptr [rdi], cl ; ret
0xffffff800066db08 : mov dword ptr [rdx], 0x83483a30 ; ret 0x4902
0xffffff800038b869 : mov dword ptr [rdx], 0x83490000 ; ret 0xa902
0xffffff80008be346 : mov dword ptr [rdx], 0xc084e000 ; jne 0xffffff80008be317 ; jmp 0xffffff80008be369
0xffffff80008ec5a5 : mov dword ptr [rdx], 0xff481a88 ; ret 0x894c
0xffffff80003eae23 : mov dword ptr [rdx], 1 ; pop rbp ; ret
0xffffff800037c769 : mov dword ptr [rdx], 1 ; pop rbx ; pop rbp ; ret
0xffffff80005202aa : mov dword ptr [rdx], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff800039bba0 : mov dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0xffffff8000392968 : mov dword ptr [rdx], eax ; leave ; ret
0xffffff80002a581d : mov dword ptr [rdx], eax ; mov eax, 2 ; pop rbp ; ret
0xffffff80002a57a6 : mov dword ptr [rdx], eax ; mov eax, 3 ; pop rbp ; ret
0xffffff80003932d0 : mov dword ptr [rdx], eax ; mov rax, 1 ; ret
0xffffff8000389044 : mov dword ptr [rdx], eax ; mov rax, cr4 ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff800083b913 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800033d99e : mov dword ptr [rdx], eax ; pop rbp ; ret
0xffffff800072548d : mov dword ptr [rdx], eax ; test esi, edi ; sete al ; pop rbp ; ret
0xffffff80002991e1 : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000401685 : mov dword ptr [rdx], ecx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80002a57eb : mov dword ptr [rdx], ecx ; mov eax, 1 ; pop rbp ; ret
0xffffff800039f17d : mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff80002994ad : mov dword ptr [rdx], ecx ; pop rbx ; pop rbp ; ret
0xffffff80008176ef : mov dword ptr [rdx], ecx ; test rcx, rcx ; setne al ; pop rbp ; ret
0xffffff8000342156 : mov dword ptr [rdx], edi ; mov eax, dword ptr [rax + rsi*8 + 0x74] ; mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80002909af : mov dword ptr [rdx], edi ; pop rbp ; ret
0xffffff80005455e6 : mov dword ptr [rdx], edi ; xor eax, eax ; pop rbp ; ret
0xffffff80003a92af : mov dword ptr [rdx], esi ; call rax
0xffffff80007b9a72 : mov dword ptr [rdx], esi ; mov rax, rdi ; pop rbp ; ret
0xffffff80002c80df : mov dword ptr [rdx], esi ; pop rbp ; ret
0xffffff80002b762f : mov dword ptr [rdx], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80007ae654 : mov dword ptr [rdx], r8d ; pop rbp ; ret
0xffffff80008eb5f4 : mov dword ptr [rip + 0x1fa466], eax ; pop rbp ; ret
0xffffff80008cdc6e : mov dword ptr [rip + 0x217bdc], eax ; pop rbp ; ret
0xffffff80008ad9e8 : mov dword ptr [rip + 0x237e3a], eax ; pop rbp ; ret
0xffffff80008eddca : mov dword ptr [rip + 0x249ab8], eax ; pop rbp ; ret
0xffffff80008ed0d6 : mov dword ptr [rip + 0x24a5fc], eax ; pop rbp ; ret
0xffffff800089ab20 : mov dword ptr [rip + 0x24ac02], eax ; pop rbp ; ret
0xffffff80008e76bb : mov dword ptr [rip + 0x25000f], eax ; pop rbp ; ret
0xffffff80008d6f0b : mov dword ptr [rip + 0x2605e7], eax ; pop rbp ; ret
0xffffff8000884f86 : mov dword ptr [rip + 0x26078c], eax ; pop rbp ; ret
0xffffff80008d650b : mov dword ptr [rip + 0x260fbf], eax ; pop rbp ; ret
0xffffff80008d5d4b : mov dword ptr [rip + 0x261757], eax ; pop rbp ; ret
0xffffff80008d559b : mov dword ptr [rip + 0x261edf], eax ; pop rbp ; ret
0xffffff80008d1e7b : mov dword ptr [rip + 0x2655c7], eax ; pop rbp ; ret
0xffffff80008d12fb : mov dword ptr [rip + 0x26611f], eax ; pop rbp ; ret
0xffffff80008d023b : mov dword ptr [rip + 0x2671b7], eax ; pop rbp ; ret
0xffffff80008ce60b : mov dword ptr [rip + 0x268dbf], eax ; pop rbp ; ret
0xffffff80008c4a7b : mov dword ptr [rip + 0x272887], eax ; pop rbp ; ret
0xffffff80008c3c8b : mov dword ptr [rip + 0x27364f], eax ; pop rbp ; ret
0xffffff80008c2cf8 : mov dword ptr [rip + 0x2745ba], eax ; pop rbp ; ret
0xffffff80008c0e68 : mov dword ptr [rip + 0x276432], eax ; pop rbp ; ret
0xffffff80008b2d9b : mov dword ptr [rip + 0x28436f], eax ; pop rbp ; ret
0xffffff80008b24bb : mov dword ptr [rip + 0x284c27], eax ; pop rbp ; ret
0xffffff80008ae7d8 : mov dword ptr [rip + 0x2888e2], eax ; pop rbp ; ret
0xffffff80008accb8 : mov dword ptr [rip + 0x28a3d2], eax ; pop rbp ; ret
0xffffff80008a765b : mov dword ptr [rip + 0x28f907], eax ; pop rbp ; ret
0xffffff80008a6c4b : mov dword ptr [rip + 0x2902e7], eax ; pop rbp ; ret
0xffffff80008a5d4b : mov dword ptr [rip + 0x2911bf], eax ; pop rbp ; ret
0xffffff80008a3652 : mov dword ptr [rip + 0x293830], ecx ; pop rbp ; ret
0xffffff800089977b : mov dword ptr [rip + 0x29d617], eax ; pop rbp ; ret
0xffffff80008989fb : mov dword ptr [rip + 0x29e36f], eax ; pop rbp ; ret
0xffffff80008961bb : mov dword ptr [rip + 0x2a0b87], eax ; pop rbp ; ret
0xffffff8000894bfb : mov dword ptr [rip + 0x2a211f], eax ; pop rbp ; ret
0xffffff800089397b : mov dword ptr [rip + 0x2a3377], eax ; pop rbp ; ret
0xffffff8000892b4b : mov dword ptr [rip + 0x2a417f], eax ; pop rbp ; ret
0xffffff8000891f5b : mov dword ptr [rip + 0x2a4d47], eax ; pop rbp ; ret
0xffffff80008913bb : mov dword ptr [rip + 0x2a58bf], eax ; pop rbp ; ret
0xffffff8000890cfb : mov dword ptr [rip + 0x2a5f57], eax ; pop rbp ; ret
0xffffff800088fb9b : mov dword ptr [rip + 0x2a708f], eax ; pop rbp ; ret
0xffffff800088e91b : mov dword ptr [rip + 0x2a82e7], eax ; pop rbp ; ret
0xffffff800088ddfb : mov dword ptr [rip + 0x2a8ddf], eax ; pop rbp ; ret
0xffffff8000889f4b : mov dword ptr [rip + 0x2acc17], eax ; pop rbp ; ret
0xffffff800088979b : mov dword ptr [rip + 0x2ad39f], eax ; pop rbp ; ret
0xffffff800088793b : mov dword ptr [rip + 0x2af1d7], eax ; pop rbp ; ret
0xffffff8000885acb : mov dword ptr [rip + 0x2b0ff7], eax ; pop rbp ; ret
0xffffff800088523b : mov dword ptr [rip + 0x2b185f], eax ; pop rbp ; ret
0xffffff800088490b : mov dword ptr [rip + 0x2b2167], eax ; pop rbp ; ret
0xffffff8000810b76 : mov dword ptr [rip + 0x2d3624], eax ; pop rbp ; ret
0xffffff800080ec43 : mov dword ptr [rip + 0x2d553f], eax ; pop rbp ; ret
0xffffff800085936b : mov dword ptr [rip + 0x2dd1c7], eax ; pop rbp ; ret
0xffffff80007faf64 : mov dword ptr [rip + 0x2e915e], eax ; pop rbp ; ret
0xffffff8000845634 : mov dword ptr [rip + 0x2efe76], edi ; xor eax, eax ; pop rbp ; ret
0xffffff800078d244 : mov dword ptr [rip + 0x2f747e], eax ; pop rbp ; ret
0xffffff800083179b : mov dword ptr [rip + 0x303ca7], eax ; pop rbp ; ret
0xffffff800083055b : mov dword ptr [rip + 0x304ebf], eax ; pop rbp ; ret
0xffffff800082d06b : mov dword ptr [rip + 0x308337], eax ; pop rbp ; ret
0xffffff80007db5e3 : mov dword ptr [rip + 0x3088ff], eax ; pop rbp ; ret
0xffffff800082bceb : mov dword ptr [rip + 0x30968f], eax ; pop rbp ; ret
0xffffff800082a54e : mov dword ptr [rip + 0x30ae04], eax ; pop rbp ; ret
0xffffff800081826b : mov dword ptr [rip + 0x31d04f], eax ; pop rbp ; ret
0xffffff8000817c1b : mov dword ptr [rip + 0x31d677], eax ; pop rbp ; ret
0xffffff8000815dab : mov dword ptr [rip + 0x31f4bf], eax ; pop rbp ; ret
0xffffff800081484b : mov dword ptr [rip + 0x3209f7], eax ; pop rbp ; ret
0xffffff8000813e4b : mov dword ptr [rip + 0x3213cf], eax ; pop rbp ; ret
0xffffff8000812beb : mov dword ptr [rip + 0x3225df], eax ; pop rbp ; ret
0xffffff80008115e6 : mov dword ptr [rip + 0x323bbc], eax ; pop rbp ; ret
0xffffff800080ee0d : mov dword ptr [rip + 0x32637d], eax ; pop rbp ; ret
0xffffff800080d662 : mov dword ptr [rip + 0x327b00], eax ; pop rbp ; ret
0xffffff80007b3ea8 : mov dword ptr [rip + 0x32fd12], eax ; pop rbp ; ret
0xffffff80007b3da5 : mov dword ptr [rip + 0x32fe15], edi ; pop rbp ; ret
0xffffff80007b3d8c : mov dword ptr [rip + 0x32fe2e], eax ; pop rbp ; ret
0xffffff80007a560c : mov dword ptr [rip + 0x339486], eax ; pop rbp ; ret
0xffffff80007a251a : mov dword ptr [rip + 0x33c540], eax ; pop rbp ; ret
0xffffff80007f623f : mov dword ptr [rip + 0x33e5b3], ecx ; pop rbp ; ret
0xffffff80007e9339 : mov dword ptr [rip + 0x34b469], eax ; pop rbp ; ret
0xffffff80007e7cda : mov dword ptr [rip + 0x34ca80], eax ; pop rbp ; ret
0xffffff800075704c : mov dword ptr [rip + 0x38778e], eax ; pop rbp ; ret
0xffffff800075225c : mov dword ptr [rip + 0x38c53e], eax ; pop rbp ; ret
0xffffff8000751cac : mov dword ptr [rip + 0x38cae6], eax ; pop rbp ; ret
0xffffff8000751328 : mov dword ptr [rip + 0x38d45a], eax ; pop rbp ; ret
0xffffff800074b7f4 : mov dword ptr [rip + 0x392e9e], eax ; pop rbp ; ret
0xffffff800079ddaf : mov dword ptr [rip + 0x39656b], eax ; pop rbp ; ret
0xffffff8000798ae2 : mov dword ptr [rip + 0x397788], eax ; pop rbp ; ret
0xffffff800074500e : mov dword ptr [rip + 0x398424], eax ; pop rbp ; ret
0xffffff800072f3c3 : mov dword ptr [rip + 0x3ad53f], eax ; pop rbp ; ret
0xffffff800077cab0 : mov dword ptr [rip + 0x3b347a], eax ; pop rbp ; ret
0xffffff8000758662 : mov dword ptr [rip + 0x3d7778], eax ; pop rbp ; ret
0xffffff800073bb80 : mov dword ptr [rip + 0x3f3202], eax ; pop rbp ; ret
0xffffff80006784b7 : mov dword ptr [rip + 0x463943], eax ; call 0xffffff800029afa9
0xffffff80006783f4 : mov dword ptr [rip + 0x4639ee], eax ; call 0xffffff800029afa9
0xffffff800059ecf9 : mov dword ptr [rip + 0x53a4c1], eax ; call 0xffffff800029afa8
0xffffff800059ecb5 : mov dword ptr [rip + 0x53a4ed], eax ; call 0xffffff800029afa8
0xffffff8000569854 : mov dword ptr [rip + 0x56ee56], eax ; mov eax, ecx ; pop rbp ; ret
0xffffff800054ff51 : mov dword ptr [rip + 0x588455], esi ; pop rbp ; ret
0xffffff800054ff49 : mov dword ptr [rip + 0x588459], esi ; pop rbp ; ret
0xffffff80004d021a : mov dword ptr [rip + 0x606ef8], eax ; pop rbp ; ret
0xffffff80005000ac : mov dword ptr [rip + 0x61b2a6], eax ; pop rbp ; ret
0xffffff80004a804a : mov dword ptr [rip + 0x6353e8], eax ; pop rbp ; ret
0xffffff80004ced6f : mov dword ptr [rip + 0x64b0db], eax ; pop rbp ; ret
0xffffff80004c9490 : mov dword ptr [rip + 0x6508d2], eax ; pop rbp ; ret
0xffffff80004829c9 : mov dword ptr [rip + 0x6525b1], eax ; pop rbp ; ret
0xffffff800049d98c : mov dword ptr [rip + 0x677bbe], eax ; pop rbp ; ret
0xffffff80003b0fa4 : mov dword ptr [rip + 0x6a1332], edi ; pop rbp ; ret
0xffffff80003ae6c3 : mov dword ptr [rip + 0x6a2bd7], eax ; pop rbp ; ret
0xffffff80003a2588 : mov dword ptr [rip + 0x6aec2a], edi ; pop rbp ; ret
0xffffff80003a254a : mov dword ptr [rip + 0x6aec60], edi ; pop rbp ; ret
0xffffff800037c6f4 : mov dword ptr [rip + 0x6b08ce], edi ; pop rbp ; ret
0xffffff800042062e : mov dword ptr [rip + 0x6b475c], eax ; pop rbp ; ret
0xffffff800041ec60 : mov dword ptr [rip + 0x6b60fa], edi ; pop rbp ; ret
0xffffff800041ea66 : mov dword ptr [rip + 0x6b6304], eax ; pop rbp ; ret
0xffffff8000369044 : mov dword ptr [rip + 0x6c3e82], edi ; pop rbp ; ret
0xffffff8000448ab8 : mov dword ptr [rip + 0x6cb582], ecx ; pop rbp ; ret
0xffffff800036d03f : mov dword ptr [rip + 0x6e427f], ecx ; pop rbp ; ret
0xffffff800040badb : mov dword ptr [rip + 0x70835f], eax ; pop rbp ; ret
0xffffff80003ca8df : mov dword ptr [rip + 0x708453], eax ; pop rbp ; ret
0xffffff80003b8523 : mov dword ptr [rip + 0x71951f], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80003b1cda : mov dword ptr [rip + 0x7207dc], eax ; pop rbp ; ret
0xffffff80003b1cd2 : mov dword ptr [rip + 0x7207e0], eax ; pop rbp ; ret
0xffffff80003a9d85 : mov dword ptr [rip + 0x727e3d], edi ; pop rbp ; ret
0xffffff80003a8565 : mov dword ptr [rip + 0x7294dd], edi ; pop rbp ; ret
0xffffff80003a2a7f : mov dword ptr [rip + 0x72eed7], edi ; pop rbp ; ret
0xffffff80002ea433 : mov dword ptr [rip + 0x7423ab], eax ; pop rbp ; ret
0xffffff800038db35 : mov dword ptr [rip + 0x7436c5], eax ; pop rbp ; ret
0xffffff80003b1bf4 : mov dword ptr [rip + 0x74fc1e], edi ; pop rbp ; ret
0xffffff80003a7040 : mov dword ptr [rip + 0x75878a], eax ; call qword ptr [rax]
0xffffff800039a21f : mov dword ptr [rip + 0x764f53], eax ; pop rbp ; ret
0xffffff80003950bd : mov dword ptr [rip + 0x769e69], edx ; pop rbp ; ret
0xffffff8000394fe4 : mov dword ptr [rip + 0x769f4a], ecx ; pop rbp ; ret
0xffffff80002af994 : mov dword ptr [rip + 0x77c8ca], edi ; pop rbp ; ret
0xffffff800036d24d : mov dword ptr [rip + 0x78f095], eax ; pop rbp ; ret
0xffffff80003a6a63 : mov dword ptr [rip + 0x790d1f], ecx ; pop rbp ; ret
0xffffff80003a6923 : mov dword ptr [rip + 0x790e5f], ecx ; pop rbp ; ret
0xffffff800036a3ac : mov dword ptr [rip + 0x791e8a], eax ; pop rbp ; ret
0xffffff800036836d : mov dword ptr [rip + 0x793ec9], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80003682ee : mov dword ptr [rip + 0x793f48], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000297db4 : mov dword ptr [rip + 0x79432a], edi ; pop rbp ; ret
0xffffff800028f033 : mov dword ptr [rip + 0x79d007], eax ; pop rbp ; ret
0xffffff800028f003 : mov dword ptr [rip + 0x79d02f], eax ; pop rbp ; ret
0xffffff8000310ba6 : mov dword ptr [rip + 0x7ae704], eax ; pop rbp ; ret
0xffffff8000337b26 : mov dword ptr [rip + 0x7c2824], esi ; pop rbp ; ret
0xffffff8000334a09 : mov dword ptr [rip + 0x7c5129], esi ; pop rbp ; ret
0xffffff800025325e : mov dword ptr [rip + 0x7d8c08], ecx ; pop rbp ; ret
0xffffff80002fb5ba : mov dword ptr [rip + 0x7f8480], edx ; pop rbp ; ret
0xffffff80002eabce : mov dword ptr [rip + 0x80645c], eax ; pop rbp ; ret
0xffffff80002d468f : mov dword ptr [rip + 0x81988b], eax ; pop rbp ; ret
0xffffff80002b02a1 : mov dword ptr [rip + 0x83d229], ecx ; pop rbp ; ret
0xffffff8000262af1 : mov dword ptr [rip + 0x83d2a8], eax ; pop rbp ; ret
0xffffff800026269c : mov dword ptr [rip + 0x83d656], esi ; pop rbp ; ret
0xffffff80002af1e3 : mov dword ptr [rip + 0x83e28f], eax ; pop rbp ; ret
0xffffff800029d485 : mov dword ptr [rip + 0x84e6d5], edi ; pop rbp ; ret
0xffffff8000290704 : mov dword ptr [rip + 0x85b47a], edi ; xor eax, eax ; pop rbp ; ret
0xffffff800025f37f : mov dword ptr [rip + 0x888ed7], eax ; pop rbp ; ret
0xffffff80006fe773 : mov dword ptr [rip + 0xd8d4800], edi ; ret
0xffffff80002cee6d : mov dword ptr [rsi + 0x10], eax ; mov qword ptr [rsi + 0x18], rax ; pop rbp ; ret
0xffffff80002ceb40 : mov dword ptr [rsi + 0x10], eax ; pop rbp ; ret
0xffffff80006c984b : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002915b3 : mov dword ptr [rsi + 0x10], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000525e60 : mov dword ptr [rsi + 0x10], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f9db0 : mov dword ptr [rsi + 0x10], edi ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff800026db0a : mov dword ptr [rsi + 0x10], esi ; pop rbp ; ret
0xffffff800061a8f3 : mov dword ptr [rsi + 0x14], eax ; pop rbp ; ret
0xffffff800061a8f2 : mov dword ptr [rsi + 0x14], r8d ; pop rbp ; ret
0xffffff80007d4d28 : mov dword ptr [rsi + 0x16], ecx ; pop rbp ; ret
0xffffff80002cee71 : mov dword ptr [rsi + 0x18], eax ; pop rbp ; ret
0xffffff800039a6f3 : mov dword ptr [rsi + 0x18], eax ; ret
0xffffff8000509d70 : mov dword ptr [rsi + 0x18], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000641fa6 : mov dword ptr [rsi + 0x18], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f9de7 : mov dword ptr [rsi + 0x18], edi ; mov qword ptr [rax], rsi ; pop rbp ; ret
0xffffff800039d4c3 : mov dword ptr [rsi + 0x1c], eax ; pop rbp ; ret
0xffffff80005f14f2 : mov dword ptr [rsi + 0x1e], ecx ; pop rbp ; ret
0xffffff80004f95ac : mov dword ptr [rsi + 0x20], 0 ; pop rbp ; ret
0xffffff8000360fa0 : mov dword ptr [rsi + 0x20], eax ; jmp 0xffffff8000360ff6
0xffffff8000362170 : mov dword ptr [rsi + 0x20], eax ; jmp 0xffffff80003621c9
0xffffff80007724b5 : mov dword ptr [rsi + 0x20], eax ; pop rbp ; ret
0xffffff800025a5d0 : mov dword ptr [rsi + 0x20], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085de6b : mov dword ptr [rsi + 0x20], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000583824 : mov dword ptr [rsi + 0x20], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000360fc3 : mov dword ptr [rsi + 0x28], eax ; jmp 0xffffff8000360fd9
0xffffff8000362196 : mov dword ptr [rsi + 0x28], eax ; jmp 0xffffff80003621ac
0xffffff80007724fb : mov dword ptr [rsi + 0x28], eax ; pop rbp ; ret
0xffffff80004950d9 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; pop rbp ; ret
0xffffff80002cb5a8 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d4f62 : mov dword ptr [rsi + 0x28], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800069e3ee : mov dword ptr [rsi + 0x2c], 0x415b0004 ; pop rsi ; pop rbp ; ret
0xffffff800088c524 : mov dword ptr [rsi + 0x2c], edx ; pop rbp ; ret
0xffffff8000526e79 : mov dword ptr [rsi + 0x30], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007b9581 : mov dword ptr [rsi + 0x30], ebx ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088e8af : mov dword ptr [rsi + 0x30], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000764221 : mov dword ptr [rsi + 0x30], ecx ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039d513 : mov dword ptr [rsi + 0x38], eax ; pop rbp ; ret
0xffffff80008946e7 : mov dword ptr [rsi + 0x48], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c3601 : mov dword ptr [rsi + 0x48], ebx ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000564c13 : mov dword ptr [rsi + 0x50], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000880db4 : mov dword ptr [rsi + 0x50], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d4453 : mov dword ptr [rsi + 0x58], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007c2eab : mov dword ptr [rsi + 0x60], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800055b77c : mov dword ptr [rsi + 0x68], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005c0527 : mov dword ptr [rsi + 0x6c], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800040c5ed : mov dword ptr [rsi + 0x70], edx ; pop rbp ; ret
0xffffff80007650c9 : mov dword ptr [rsi + 0x88], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80005efb5b : mov dword ptr [rsi + 0x8e], eax ; pop rbp ; ret
0xffffff800052b831 : mov dword ptr [rsi + 0xd8], eax ; pop rbp ; ret
0xffffff80003d3cf3 : mov dword ptr [rsi + 4], eax ; pop rbp ; ret
0xffffff80005f0838 : mov dword ptr [rsi + 4], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059b91c : mov dword ptr [rsi + 4], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80007de37c : mov dword ptr [rsi + 4], edi ; xor eax, eax ; pop rbp ; ret
0xffffff8000399206 : mov dword ptr [rsi + 4], edx ; xor eax, eax ; ret
0xffffff800050faef : mov dword ptr [rsi + 8], eax ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800028ba8a : mov dword ptr [rsi + 8], eax ; pop rbp ; ret
0xffffff800026db06 : mov dword ptr [rsi + 8], esi ; mov qword ptr [rsi + 0x10], rsi ; pop rbp ; ret
0xffffff8000719305 : mov dword ptr [rsi + 8], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006de780 : mov dword ptr [rsi + rax - 0x48f10000], ecx ; ret
0xffffff8000369dbc : mov dword ptr [rsi + rdx + 0x60], ecx ; pop rbp ; ret
0xffffff8000812874 : mov dword ptr [rsi], 0 ; mov al, 1 ; pop rbp ; ret
0xffffff800039942c : mov dword ptr [rsi], 0 ; pop rbp ; ret
0xffffff8000267938 : mov dword ptr [rsi], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff800029086f : mov dword ptr [rsi], 0x1000 ; xor eax, eax ; pop rbp ; ret
0xffffff80008b7aa5 : mov dword ptr [rsi], 0x13379bb ; xor eax, eax ; pop rbp ; ret
0xffffff80003d3d2f : mov dword ptr [rsi], 0x16 ; xor eax, eax ; pop rbp ; ret
0xffffff8000372984 : mov dword ptr [rsi], 0x3f800000 ; xor eax, eax ; pop rbp ; ret
0xffffff80003d3d0f : mov dword ptr [rsi], 0x48 ; xor eax, eax ; pop rbp ; ret
0xffffff800028a592 : mov dword ptr [rsi], 0x989680 ; xor eax, eax ; pop rbp ; ret
0xffffff80003b6aab : mov dword ptr [rsi], 0xb8 ; pop rbp ; ret
0xffffff800030354a : mov dword ptr [rsi], 1 ; pop rbp ; ret
0xffffff8000700c24 : mov dword ptr [rsi], 8 ; xor eax, eax ; pop rbp ; ret
0xffffff80003c872b : mov dword ptr [rsi], eax ; jmp 0xffffff80003c9d64
0xffffff80003991e7 : mov dword ptr [rsi], eax ; mov dword ptr [rdi], edx ; xor eax, eax ; ret
0xffffff8000399204 : mov dword ptr [rsi], eax ; mov dword ptr [rsi + 4], edx ; xor eax, eax ; ret
0xffffff800025dc8f : mov dword ptr [rsi], eax ; mov eax, 1 ; pop rbp ; ret
0xffffff80008b8c5f : mov dword ptr [rsi], eax ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000763971 : mov dword ptr [rsi], eax ; mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e9
0xffffff800030fc96 : mov dword ptr [rsi], eax ; pop rbp ; ret
0xffffff800058461c : mov dword ptr [rsi], eax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800028a002 : mov dword ptr [rsi], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028a601 : mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000286a07 : mov dword ptr [rsi], eax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000259630 : mov dword ptr [rsi], ebx ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000399274 : mov dword ptr [rsi], ecx ; mov eax, 1 ; ret
0xffffff8000528d38 : mov dword ptr [rsi], ecx ; mov rax, r8 ; pop rbp ; ret
0xffffff80002a055e : mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80002662d1 : mov dword ptr [rsi], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000389577 : mov dword ptr [rsi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff80007965e6 : mov dword ptr [rsi], ecx ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005161d5 : mov dword ptr [rsi], ecx ; xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff8000399284 : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0xffffff80002c811d : mov dword ptr [rsi], edi ; pop rbp ; ret
0xffffff80007972e8 : mov dword ptr [rsi], edi ; xor eax, eax ; pop rbp ; ret
0xffffff800039a65c : mov dword ptr [rsi], edx ; pop rbp ; ret
0xffffff800039ef07 : mov dword ptr [rsi], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ae6b9 : mov dword ptr [rsi], r8d ; pop rbp ; ret
0xffffff800071c0b8 : mov dword ptr [rsi], r8d ; xor eax, eax ; pop rbp ; ret
0xffffff8000528d37 : mov dword ptr [rsi], r9d ; mov rax, r8 ; pop rbp ; ret
0xffffff8000389465 : mov dword ptr [rsp + 4], 0x50 ; retf ; call rdi
0xffffff80008bc04f : mov dword ptr [rsp], eax ; call r10
0xffffff80008bbee0 : mov dword ptr [rsp], eax ; lea rsi, [rbp - 0x70] ; call r10
0xffffff80008f5e20 : mov dword ptr [rsp], eax ; mov rsi, r15 ; mov r9, r13 ; call rbx
0xffffff80008bc0a0 : mov dword ptr [rsp], ecx ; mov r9, r11 ; call r10
0xffffff80008a99cf : mov dword ptr es:[rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800081301e : mov dx, 0x1f ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008435bf : mov dx, r8w ; jmp 0xffffff80008435cb
0xffffff80008435be : mov dx, r8w ; jmp 0xffffff80008435cc
0xffffff8000624c39 : mov eax, 0 ; cli ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800083b992 : mov eax, 0 ; jb 0xffffff800083b94e ; pop rbp ; ret
0xffffff800083b9d2 : mov eax, 0 ; jb 0xffffff800083b9c8 ; pop rbp ; ret
0xffffff800083ba12 : mov eax, 0 ; jb 0xffffff800083ba08 ; pop rbp ; ret
0xffffff800083ba82 : mov eax, 0 ; jb 0xffffff800083ba78 ; pop rbp ; ret
0xffffff800083baf2 : mov eax, 0 ; jb 0xffffff800083bab8 ; pop rbp ; ret
0xffffff8000880531 : mov eax, 0 ; jg 0xffffff8000880518 ; pop rbp ; ret
0xffffff80008805a1 : mov eax, 0 ; jg 0xffffff8000880588 ; pop rbp ; ret
0xffffff8000880631 : mov eax, 0 ; jg 0xffffff8000880619 ; pop rbx ; pop rbp ; ret
0xffffff80008806a1 : mov eax, 0 ; jg 0xffffff8000880688 ; pop rbp ; ret
0xffffff800032847d : mov eax, 0 ; jne 0xffffff8000328468 ; pop rbp ; ret
0xffffff8000530f3d : mov eax, 0 ; jne 0xffffff8000530f28 ; pop rbp ; ret
0xffffff800057f19d : mov eax, 0 ; jne 0xffffff800057f188 ; pop rbp ; ret
0xffffff800058017d : mov eax, 0 ; jne 0xffffff8000580168 ; pop rbp ; ret
0xffffff8000581523 : mov eax, 0 ; jne 0xffffff8000581508 ; pop rbp ; ret
0xffffff80005824fd : mov eax, 0 ; jne 0xffffff80005824e8 ; pop rbp ; ret
0xffffff80005a8f4d : mov eax, 0 ; jne 0xffffff80005a8f38 ; pop rbp ; ret
0xffffff80005b10ed : mov eax, 0 ; jne 0xffffff80005b10d8 ; pop rbp ; ret
0xffffff80005b211d : mov eax, 0 ; jne 0xffffff80005b2108 ; pop rbp ; ret
0xffffff80005bf7ed : mov eax, 0 ; jne 0xffffff80005bf7d8 ; pop rbp ; ret
0xffffff80005bf88d : mov eax, 0 ; jne 0xffffff80005bf878 ; pop rbp ; ret
0xffffff80005e482d : mov eax, 0 ; jne 0xffffff80005e4818 ; pop rbp ; ret
0xffffff80005e48cc : mov eax, 0 ; jne 0xffffff80005e48b8 ; pop rbp ; ret
0xffffff80005ebe8d : mov eax, 0 ; jne 0xffffff80005ebe78 ; pop rbp ; ret
0xffffff8000637a9d : mov eax, 0 ; jne 0xffffff8000637a88 ; pop rbp ; ret
0xffffff8000687f6d : mov eax, 0 ; jne 0xffffff8000687f58 ; pop rbp ; ret
0xffffff800068800c : mov eax, 0 ; jne 0xffffff8000687ff8 ; pop rbp ; ret
0xffffff80006a43cd : mov eax, 0 ; jne 0xffffff80006a43b8 ; pop rbp ; ret
0xffffff80006a446c : mov eax, 0 ; jne 0xffffff80006a4458 ; pop rbp ; ret
0xffffff80008c687d : mov eax, 0 ; jne 0xffffff80008c6868 ; pop rbp ; ret
0xffffff80008c786d : mov eax, 0 ; jne 0xffffff80008c7858 ; pop rbp ; ret
0xffffff80008c881d : mov eax, 0 ; jne 0xffffff80008c8808 ; pop rbp ; ret
0xffffff80008c97cd : mov eax, 0 ; jne 0xffffff80008c97b8 ; pop rbp ; ret
0xffffff8000b3e989 : mov eax, 0 ; mov ch, 0x1f ; ret 0x4daf
0xffffff8000b4530d : mov eax, 0 ; sbb al, 0xab ; int 0xc2
0xffffff800035980f : mov eax, 0x10 ; pop rbp ; ret
0xffffff800028721b : mov eax, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800031ebe4 : mov eax, 0x100 ; pop rbp ; ret
0xffffff800084f544 : mov eax, 0x1000 ; pop rbp ; ret
0xffffff80004f9134 : mov eax, 0x10000 ; and eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80004bc532 : mov eax, 0x100000 ; cmovae eax, edx ; pop rbp ; ret
0xffffff80005f4df9 : mov eax, 0x100080 ; pop rbp ; ret
0xffffff80006cef1f : mov eax, 0x11 ; jmp 0xffffff80006ceed6
0xffffff80004a5f07 : mov eax, 0x13 ; cmovb eax, ecx ; pop rbp ; ret
0xffffff800079dcb4 : mov eax, 0x13 ; pop rbp ; ret
0xffffff8000797024 : mov eax, 0x138 ; pop rbp ; ret
0xffffff800050bf8f : mov eax, 0x14 ; pop rbp ; ret
0xffffff800050fb32 : mov eax, 0x1480060 ; ret
0xffffff80008f01c2 : mov eax, 0x16 ; cmovbe eax, ecx ; pop rbp ; ret
0xffffff80004b4292 : mov eax, 0x16 ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000680323 : mov eax, 0x16 ; cmove eax, edx ; jmp 0xffffff80006802d7
0xffffff800051bd83 : mov eax, 0x16 ; cmove eax, edx ; pop rbp ; ret
0xffffff80005b76e1 : mov eax, 0x16 ; jmp 0xffffff80005b76c0
0xffffff8000359d33 : mov eax, 0x16 ; pop rbp ; ret
0xffffff80004dce07 : mov eax, 0x16 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004fa75b : mov eax, 0x17f0f5ff ; and eax, dword ptr [rcx + 0x70] ; pop rbp ; ret
0xffffff80005f4dc2 : mov eax, 0x180010 ; pop rbp ; ret
0xffffff8000766734 : mov eax, 0x19 ; pop rbp ; ret
0xffffff8000401e51 : mov eax, 0x1a0 ; call 0xffffff800010e087
0xffffff80004f9400 : mov eax, 0x1e ; pop rbp ; ret
0xffffff80004e9ce9 : mov eax, 0x1fffffe ; ret
0xffffff80005664c4 : mov eax, 0x20 ; pop rbp ; ret
0xffffff80008583f2 : mov eax, 0x20 ; sub eax, edx ; pop rbp ; ret
0xffffff800039b884 : mov eax, 0x200 ; pop rbp ; ret
0xffffff80003acc81 : mov eax, 0x2000 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800079dbd4 : mov eax, 0x20000 ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80005f4e07 : mov eax, 0x200020 ; pop rbp ; ret
0xffffff800087689b : mov eax, 0x220 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800040edf1 : mov eax, 0x23 ; jmp 0xffffff800040ee70
0xffffff800065b804 : mov eax, 0x240 ; pop rbp ; ret
0xffffff80006482b5 : mov eax, 0x25 ; cmove eax, ecx ; pop rbp ; ret
0xffffff800062e206 : mov eax, 0x25 ; cmove eax, edx ; pop rbp ; ret
0xffffff8000622df4 : mov eax, 0x268 ; pop rbp ; ret
0xffffff80006129be : mov eax, 0x29 ; cmove eax, ecx ; pop rbp ; ret
0xffffff800056cfe7 : mov eax, 0x2a ; jmp rsi
0xffffff80005684b0 : mov eax, 0x2a ; pop rbp ; ret
0xffffff8000622e04 : mov eax, 0x2b8 ; pop rbp ; ret
0xffffff80007470b3 : mov eax, 0x2d ; cmovb eax, ecx ; pop rbp ; ret
0xffffff80002bbc8e : mov eax, 0x2d ; cmove eax, ecx ; pop rbp ; ret
0xffffff80006e9c9e : mov eax, 0x2d ; jmp rcx
0xffffff80003bba04 : mov eax, 0x2d ; pop rbp ; ret
0xffffff800028197c : mov eax, 0x2e ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000285974 : mov eax, 0x2e ; pop rbp ; ret
0xffffff80005f5d4e : mov eax, 0x2f ; pop rbp ; ret
0xffffff8000448d26 : mov eax, 0x3000000 ; sbb byte ptr [r9], bpl ; ret 0x5389
0xffffff80005f4df2 : mov eax, 0x300110 ; pop rbp ; ret
0xffffff800053f859 : mov eax, 0x31 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80003a172f : mov eax, 0x310 ; je 0xffffff80003a1740 ; pop rbp ; ret
0xffffff8000709179 : mov eax, 0x324 ; add byte ptr [rsp + rax - 1], dh ; ret 0xd689
0xffffff80005f4e00 : mov eax, 0x380100 ; pop rbp ; ret
0xffffff800034c816 : mov eax, 0x3941c0ff ; ret
0xffffff800053c813 : mov eax, 0x39480059 ; ret
0xffffff800034fbed : mov eax, 0x3948007a ; ret
0xffffff8000561d98 : mov eax, 0x39cc4523 ; ror dword ptr [rdi], 0x94 ; ret
0xffffff8000848e8b : mov eax, 0x39fffffa ; ret
0xffffff80003ba80f : mov eax, 0x3a8 ; pop rbp ; ret
0xffffff80003e71ed : mov eax, 0x3c ; cmova eax, ecx ; pop rbp ; ret
0xffffff800066f39c : mov eax, 0x40 ; pop rbp ; ret
0xffffff800079db64 : mov eax, 0x40000 ; and eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007b01e4 : mov eax, 0x4000000 ; pop rbp ; ret
0xffffff80005f4deb : mov eax, 0x400180 ; pop rbp ; ret
0xffffff80007796d7 : mov eax, 0x415bffb5 ; pop rsi ; pop rbp ; ret
0xffffff800054544f : mov eax, 0x41e6894c ; call rsi
0xffffff800053520f : mov eax, 0x424 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000338dfc : mov eax, 0x438 ; pop rbp ; ret
0xffffff8000585179 : mov eax, 0x45c766ff ; ret 0xffff
0xffffff80006e622a : mov eax, 0x460 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f048e : mov eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80005526d4 : mov eax, 0x48000000 ; test eax, eax ; je 0xffffff80005526ef ; call rax
0xffffff80005e3650 : mov eax, 0x48000000 ; test eax, eax ; je 0xffffff80005e3664 ; call rax
0xffffff800069e379 : mov eax, 0x48000000 ; test eax, eax ; je 0xffffff800069e38d ; call rax
0xffffff80005f4e0e : mov eax, 0x480190 ; pop rbp ; ret
0xffffff80003896f0 : mov eax, 0x48c10148 ; mov eax, dword ptr [rbp - 0x38] ; jmp rcx
0xffffff80003ba7f6 : mov eax, 0x490 ; pop rbp ; ret
0xffffff800039a68f : mov eax, 0x4a0 ; pop rbp ; ret
0xffffff80007b0196 : mov eax, 0x4b8ff ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005e2254 : mov eax, 0x4c000000 ; mov edi, esi ; call rax
0xffffff8000807fda : mov eax, 0x4c000005 ; mov ebx, eax ; call rax
0xffffff8000517dea : mov eax, 0x4cf7894c ; mov edx, esp ; call rax
0xffffff80007d9fa6 : mov eax, 0x4cfffffa ; mov edx, edi ; call rax
0xffffff800044ff11 : mov eax, 0x4cfffffe ; mov edx, esp ; call rax
0xffffff800077c2a4 : mov eax, 0x4e ; pop rbp ; ret
0xffffff80002bbcde : mov eax, 0x54 ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000760c28 : mov eax, 0x54 ; cmovs eax, ecx ; pop rbp ; ret
0xffffff8000738151 : mov eax, 0x54 ; pop rbp ; ret
0xffffff80003381a7 : mov eax, 0x576007b ; movzx eax, al ; pop rbp ; ret
0xffffff8000797034 : mov eax, 0x58 ; pop rbp ; ret
0xffffff80008ad337 : mov eax, 0x5b000000 ; pop r14 ; pop rbp ; ret
0xffffff80006465e5 : mov eax, 0x5b000000 ; pop rbp ; ret
0xffffff800082feaa : mov eax, 0x5b000001 ; pop r14 ; pop rbp ; ret
0xffffff8000807fd9 : mov eax, 0x5b8 ; mov rbx, r8 ; call rax
0xffffff800040a496 : mov eax, 0x5d ; cmovne eax, ecx ; pop rbp ; ret
0xffffff8000389de4 : mov eax, 0x5d000000 ; ret
0xffffff80002daf36 : mov eax, 0x5d000001 ; ret
0xffffff8000622e05 : mov eax, 0x5d000002 ; ret
0xffffff80007f0736 : mov eax, 0x5d000003 ; ret
0xffffff8000563e3d : mov eax, 0x5d000004 ; ret
0xffffff80008eddcc : mov eax, 0x5d00249a ; ret
0xffffff8000746ad1 : mov eax, 0x5d200033 ; ret
0xffffff8000803477 : mov eax, 0x5d5e415b ; ret
0xffffff8000725ed1 : mov eax, 0x5d980005 ; ret
0xffffff8000701fe3 : mov eax, 0x5d980016 ; ret
0xffffff80007faab4 : mov eax, 0x5dffd152 ; ret
0xffffff800029f440 : mov eax, 0x5f ; cmovle eax, edx ; pop rbp ; ret
0xffffff8000657a74 : mov eax, 0x600 ; pop rbp ; ret
0xffffff8000738171 : mov eax, 0x62 ; pop rbp ; ret
0xffffff8000526b44 : mov eax, 0x66 ; pop rbp ; ret
0xffffff800065a4a4 : mov eax, 0x71 ; pop rbp ; ret
0xffffff80003503e7 : mov eax, 0x7ef68545 ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff8000750347 : mov eax, 0x7fffffff ; cmovbe eax, edi ; pop rbp ; ret
0xffffff80004f9464 : mov eax, 0x80000 ; and eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff80004f9354 : mov eax, 0x80000000 ; and eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff800072e5d3 : mov eax, 0x80000004 ; xor qword ptr [r8], r9 ; pop rbp ; ret
0xffffff8000b47da1 : mov eax, 0x80e30044 ; ret
0xffffff800054903d : mov eax, 0x81000000 ; ret 0xbdc0
0xffffff800066ec6c : mov eax, 0x83484575 ; ret
0xffffff80003e62fa : mov eax, 0x83fffffe ; cli ; add al, 0x89 ; ret
0xffffff80003fcb17 : mov eax, 0x83fffffe ; ret 0x89fc
0xffffff80008680a1 : mov eax, 0x87358d4c ; or eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff8000886a32 : mov eax, 0x88000001 ; ret
0xffffff80002b5644 : mov eax, 0x89000021 ; ret
0xffffff80003d6c94 : mov eax, 0x8900071f ; ret 0xd285
0xffffff800081741f : mov eax, 0x89480001 ; ret
0xffffff800066ffca : mov eax, 0x89480003 ; ret
0xffffff8000679172 : mov eax, 0x89480013 ; ret
0xffffff80002c5757 : mov eax, 0x8948589c ; ret
0xffffff80005d83c8 : mov eax, 0x8948ffcf ; ret
0xffffff80005f3053 : mov eax, 0x8948fff5 ; ret
0xffffff800078360d : mov eax, 0x8948ffff ; ret
0xffffff80004eb922 : mov eax, 0x894c005e ; out dx, eax ; call rax
0xffffff800074e35a : mov eax, 0x89c114ff ; ret
0xffffff800036f9c4 : mov eax, 0x89d70144 ; rol ecx, cl ; ret
0xffffff800072f1e4 : mov eax, 0x89ffb6bf ; ret
0xffffff80007f3c14 : mov eax, 0x89ffcd91 ; ret
0xffffff8000337e04 : mov eax, 0x89fffc6b ; ret
0xffffff800056d484 : mov eax, 0x89fffc74 ; ret
0xffffff8000b3cec6 : mov eax, 0x89fffdee ; ret 0xca21
0xffffff800073819c : mov eax, 0x8a ; pop rbp ; ret
0xffffff80006c11b6 : mov eax, 0x8b000000 ; push rbx ; adc byte ptr [rcx], al ; ret 0xd129
0xffffff8000709bdf : mov eax, 0x8b480042 ; or ecx, ebp ; ret 1
0xffffff8000b3b4d3 : mov eax, 0x8b48c3ff ; test al, 0x39 ; ret
0xffffff800071c474 : mov eax, 0x8bf0100 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0xffffff800033f404 : mov eax, 0x90 ; pop rbp ; ret
0xffffff800071c461 : mov eax, 0x9bf0200 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0xffffff8000393304 : mov eax, 0x9d000000 ; xor rax, rax ; ret
0xffffff8000797254 : mov eax, 0xa ; pop rbp ; ret
0xffffff80008455f4 : mov eax, 0xa9 ; pop rbp ; ret
0xffffff800071c44e : mov eax, 0xabf0400 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0xffffff8000b45f3c : mov eax, 0xb73b9b60 ; jg 0xffffff8000b45f38 ; ret
0xffffff800071c43b : mov eax, 0xbbf0800 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0xffffff80007a0a1a : mov eax, 0xbe660041 ; ret
0xffffff800051219d : mov eax, 0xc ; jmp 0xffffff800051216c
0xffffff8000716b06 : mov eax, 0xc ; jmp 0xffffff8000716b72
0xffffff8000749dca : mov eax, 0xc ; jmp 0xffffff8000749d9a
0xffffff8000366e84 : mov eax, 0xc ; pop rbp ; ret
0xffffff8000278300 : mov eax, 0xc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000766bbd : mov eax, 0xc031ffc2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008f3d1d : mov eax, 0xc0458b44 ; mov r9d, dword ptr [rbp - 0x3c] ; call rbx
0xffffff80008fbd99 : mov eax, 0xc0458b4c ; call rbx
0xffffff80008f88b7 : mov eax, 0xc0458b4c ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff800089082d : mov eax, 0xc04d8b48 ; mov r8, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3f31 : mov eax, 0xc04d8b48 ; mov r8d, dword ptr [rbp - 0x34] ; call rbx
0xffffff8000370513 : mov eax, 0xc1ff3141 ; ret
0xffffff800071154d : mov eax, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80008a8b43 : mov eax, 0xc8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000890af4 : mov eax, 0xc84d8b48 ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000845564 : mov eax, 0xc84d8b48 ; mov rdi, qword ptr [rbp - 0x30] ; call rcx
0xffffff800074f12f : mov eax, 0xc84d8b4c ; call rax
0xffffff800071c428 : mov eax, 0xcbf1000 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0xffffff8000766f78 : mov eax, 0xd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c40c6 : mov eax, 0xd0 ; call 0xffffff8000510377
0xffffff800036fb44 : mov eax, 0xd1f33144 ; ret
0xffffff80007d6a63 : mov eax, 0xd21fe7e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000810444 : mov eax, 0xd88948ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800071c415 : mov eax, 0xdbf2000 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0xffffff8000828b0a : mov eax, 0xdc000001 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000837e6f : mov eax, 0xdc008002 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3b94 : mov eax, 0xdffb ; and eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800029d472 : mov eax, 0xe ; pop rbp ; ret
0xffffff8000399268 : mov eax, 0xe ; ret
0xffffff80007960c4 : mov eax, 0xe0 ; pop rbp ; ret
0xffffff80008b3c04 : mov eax, 0xe0000001 ; pop rbp ; ret
0xffffff8000892822 : mov eax, 0xe00002bc ; pop rbp ; ret
0xffffff80008d505c : mov eax, 0xe00002c1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ba5c5 : mov eax, 0xe00002c2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085b7b4 : mov eax, 0xe00002c7 ; pop rbp ; ret
0xffffff80008de773 : mov eax, 0xe00002c7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800087996d : mov eax, 0xe00002d8 ; pop rbp ; ret
0xffffff80008b6a94 : mov eax, 0xe00002e2 ; pop rbp ; ret
0xffffff8000491c08 : mov eax, 0xe5ffffd0 ; sar bh, 1 ; call qword ptr [rcx]
0xffffff80005e6845 : mov eax, 0xe63d83fe ; ret
0xffffff8000863a85 : mov eax, 0xe80018f5 ; ret 0xfcf2
0xffffff8000823a34 : mov eax, 0xe8002095 ; ret
0xffffff800076a684 : mov eax, 0xe8003741 ; mov bl, 0x89 ; ret 0x44ff
0xffffff8000769c84 : mov eax, 0xe800374b ; mov bl, 0x93 ; ret 0xbeff
0xffffff80004b6df4 : mov eax, 0xe80061fb ; ret 0xffed
0xffffff8000352234 : mov eax, 0xe8006dad ; ret
0xffffff8000336234 : mov eax, 0xe8006f6d ; ret
0xffffff8000260634 : mov eax, 0xe8007cc9 ; ret
0xffffff800076f494 : mov eax, 0xe8fffffd ; jrcxz 0xffffff800076f518 ; ret 0x41ff
0xffffff800076f2c1 : mov eax, 0xe8fffffd ; mov dh, 0x78 ; ret 0x41ff
0xffffff800065fff4 : mov eax, 0xe8fffffe ; ret
0xffffff800071c402 : mov eax, 0xebf4000 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0xffffff800038a027 : mov eax, 0xf ; pop rbp ; ret
0xffffff80004fa77b : mov eax, 0xf0000 ; and eax, dword ptr [rcx + 0x70] ; pop rbp ; ret
0xffffff80008a91cf : mov eax, 0xf000008 ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000622b7e : mov eax, 0xf66000a ; ret 0x4166
0xffffff80004ad903 : mov eax, 0xf7000000 ; ret 0
0xffffff800071c3ef : mov eax, 0xfbf8000 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf80
0xffffff800031713b : mov eax, 0xfc53949 ; xchg eax, edx ; ror dword ptr [rdi], 0x93 ; ret
0xffffff80003c3104 : mov eax, 0xfcf394d ; lahf ; ret 0x8b48
0xffffff80008e0c43 : mov eax, 0xff ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80008ae4ff : mov eax, 0xff000001 ; ret
0xffffff8000259135 : mov eax, 0xff2c43ff ; ret 0x5389
0xffffff8000423477 : mov eax, 0xff4803eb ; ret
0xffffff800084f934 : mov eax, 0xffd266e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027163a : mov eax, 0xfffcb0e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800071dce4 : mov eax, 0xffff8024 ; cmovbe eax, edx ; pop rbp ; ret
0xffffff8000577f93 : mov eax, 0xfffffe ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800030f61b : mov eax, 0xffffffba ; call rbx
0xffffff80003a48b3 : mov eax, 0xffffffc6 ; xor ebx, ebx ; sysenter
0xffffff800071dcb4 : mov eax, 0xffffffce ; pop rbp ; ret
0xffffff800053e6ed : mov eax, 0xfffffffe ; pop rbp ; ret
0xffffff800053e78f : mov eax, 0xfffffffe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000722d53 : mov eax, 0xffffffff ; cmova eax, ecx ; pop rbp ; ret
0xffffff800081284f : mov eax, 0xffffffff ; cmovb eax, edx ; pop rbp ; ret
0xffffff80008c3059 : mov eax, 0xffffffff ; cmove eax, esi ; pop rbp ; ret
0xffffff800049e159 : mov eax, 0xffffffff ; cmovle eax, ecx ; pop rbp ; ret
0xffffff80003a28cc : mov eax, 0xffffffff ; pop rbp ; ret
0xffffff800028d758 : mov eax, 0xffffffff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000436120 : mov eax, 1 ; cmovb eax, ecx ; pop rbp ; ret
0xffffff8000579e73 : mov eax, 1 ; cmovl eax, ecx ; pop rbp ; ret
0xffffff80003bba61 : mov eax, 1 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800051b374 : mov eax, 1 ; mov eax, r8d ; pop rbp ; ret
0xffffff80008ebfa5 : mov eax, 1 ; mov qword ptr [rsi], rdx ; pop rbp ; ret
0xffffff8000607e1f : mov eax, 1 ; mov rdi, rax ; call rbx
0xffffff80003923d4 : mov eax, 1 ; pop r9 ; ret
0xffffff800025a1f4 : mov eax, 1 ; pop rbp ; ret
0xffffff80002529cc : mov eax, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000392330 : mov eax, 1 ; ret
0xffffff800031f251 : mov eax, 1 ; shl eax, cl ; pop rbp ; ret
0xffffff80006b169c : mov eax, 2 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff8000273ba0 : mov eax, 2 ; pop rbp ; ret
0xffffff80002d2f99 : mov eax, 2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ff909 : mov eax, 3 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80002a1512 : mov eax, 3 ; pop rbp ; ret
0xffffff80007803e9 : mov eax, 3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000286d7a : mov eax, 4 ; jmp rcx
0xffffff800030216d : mov eax, 4 ; jmp rdx
0xffffff8000285baa : mov eax, 4 ; pop rbp ; ret
0xffffff80002b58ba : mov eax, 4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b3656 : mov eax, 5 ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000256ad2 : mov eax, 5 ; pop rbp ; ret
0xffffff80002cee84 : mov eax, 6 ; pop rbp ; ret
0xffffff800051e201 : mov eax, 6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800050bfd4 : mov eax, 9 ; pop rbp ; ret
0xffffff8000366e75 : mov eax, dword ptr [0x18] ; pop rbp ; ret
0xffffff8000366e15 : mov eax, dword ptr [0x1c] ; pop rbp ; ret
0xffffff8000367576 : mov eax, dword ptr [8] ; pop rbp ; ret
0xffffff80003b2695 : mov eax, dword ptr [r15 + rsi + 0xc] ; jne 0xffffff80003b26a8 ; mov edx, eax ; jmp 0xffffff80003b26d1
0xffffff80004fa5d8 : mov eax, dword ptr [rax + 0x10] ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa3e9 : mov eax, dword ptr [rax + 0x10] ; and eax, 2 ; pop rbp ; ret
0xffffff8000303769 : mov eax, dword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff80002f6989 : mov eax, dword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff80004f8972 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0xffffff80004f8986 ; pop rbp ; jmp rax
0xffffff8000811bcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000811bc9 ; pop rbp ; ret
0xffffff8000811c0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000811c09 ; pop rbp ; ret
0xffffff800081335f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000813359 ; pop rbp ; ret
0xffffff800081339f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000813399 ; pop rbp ; ret
0xffffff800081443f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000814439 ; pop rbp ; ret
0xffffff800081447f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000814479 ; pop rbp ; ret
0xffffff8000814e3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000814e39 ; pop rbp ; ret
0xffffff8000814e7f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000814e79 ; pop rbp ; ret
0xffffff800081639f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000816399 ; pop rbp ; ret
0xffffff80008163df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008163d9 ; pop rbp ; ret
0xffffff8000818ecf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000818ec9 ; pop rbp ; ret
0xffffff8000818f0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000818f09 ; pop rbp ; ret
0xffffff800082b6bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082b6b9 ; pop rbp ; ret
0xffffff800082b6ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082b6f9 ; pop rbp ; ret
0xffffff800082c2df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082c2d9 ; pop rbp ; ret
0xffffff800082c31f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082c319 ; pop rbp ; ret
0xffffff800082e1bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082e1b9 ; pop rbp ; ret
0xffffff800082e1ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082e1f9 ; pop rbp ; ret
0xffffff800082ecff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082ecf9 ; pop rbp ; ret
0xffffff800082ed3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082ed39 ; pop rbp ; ret
0xffffff800082f80f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082f809 ; pop rbp ; ret
0xffffff800082f84f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800082f849 ; pop rbp ; ret
0xffffff8000830b4f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000830b49 ; pop rbp ; ret
0xffffff8000830b8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000830b89 ; pop rbp ; ret
0xffffff8000832acf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000832ac9 ; pop rbp ; ret
0xffffff8000832b0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000832b09 ; pop rbp ; ret
0xffffff8000858f5f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000858f59 ; pop rbp ; ret
0xffffff8000858f9f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000858f99 ; pop rbp ; ret
0xffffff800085ce8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800085ce89 ; pop rbp ; ret
0xffffff800085cecf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800085cec9 ; pop rbp ; ret
0xffffff800085d0ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800085d0e9 ; pop rbp ; ret
0xffffff800085d12f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800085d129 ; pop rbp ; ret
0xffffff8000860fef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000860fe9 ; pop rbp ; ret
0xffffff800086102f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000861029 ; pop rbp ; ret
0xffffff800086287f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862879 ; pop rbp ; ret
0xffffff80008628bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008628b9 ; pop rbp ; ret
0xffffff8000862b0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862b09 ; pop rbp ; ret
0xffffff8000862b4f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862b49 ; pop rbp ; ret
0xffffff8000862d6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862d69 ; pop rbp ; ret
0xffffff8000862daf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862da9 ; pop rbp ; ret
0xffffff8000862fcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000862fc9 ; pop rbp ; ret
0xffffff800086300f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000863009 ; pop rbp ; ret
0xffffff800086322f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000863229 ; pop rbp ; ret
0xffffff800086326f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000863269 ; pop rbp ; ret
0xffffff800086348f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000863489 ; pop rbp ; ret
0xffffff80008634cf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008634c9 ; pop rbp ; ret
0xffffff80008636ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008636e9 ; pop rbp ; ret
0xffffff800086372f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000863729 ; pop rbp ; ret
0xffffff8000873eaf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000873ea9 ; pop rbp ; ret
0xffffff80008813ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008813f9 ; pop rbp ; ret
0xffffff800088143f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000881439 ; pop rbp ; ret
0xffffff800088171f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000881719 ; pop rbp ; ret
0xffffff800088175f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000881759 ; pop rbp ; ret
0xffffff8000881b2f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000881b29 ; pop rbp ; ret
0xffffff8000881b6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000881b69 ; pop rbp ; ret
0xffffff800088213f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000882139 ; pop rbp ; ret
0xffffff800088217f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000882179 ; pop rbp ; ret
0xffffff80008824bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008824b9 ; pop rbp ; ret
0xffffff80008847bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008847b9 ; pop rbp ; ret
0xffffff80008847ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008847f9 ; pop rbp ; ret
0xffffff8000884eff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000884ef9 ; pop rbp ; ret
0xffffff8000884f3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000884f39 ; pop rbp ; ret
0xffffff800088582f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000885829 ; pop rbp ; ret
0xffffff800088586f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000885869 ; pop rbp ; ret
0xffffff80008860bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008860b9 ; pop rbp ; ret
0xffffff80008860ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008860f9 ; pop rbp ; ret
0xffffff8000887f2f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000887f29 ; pop rbp ; ret
0xffffff8000887f6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000887f69 ; pop rbp ; ret
0xffffff8000889d8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000889d89 ; pop rbp ; ret
0xffffff8000889dcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000889dc9 ; pop rbp ; ret
0xffffff800088a9bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088a9b9 ; pop rbp ; ret
0xffffff800088a9ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088a9f9 ; pop rbp ; ret
0xffffff800088cc3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088cc39 ; pop rbp ; ret
0xffffff800088cc7f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088cc79 ; pop rbp ; ret
0xffffff800088ef0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088ef09 ; pop rbp ; ret
0xffffff800088ef4f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800088ef49 ; pop rbp ; ret
0xffffff800089018f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000890189 ; pop rbp ; ret
0xffffff80008901cf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008901c9 ; pop rbp ; ret
0xffffff80008912ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008912e9 ; pop rbp ; ret
0xffffff800089132f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000891329 ; pop rbp ; ret
0xffffff80008919af : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008919a9 ; pop rbp ; ret
0xffffff80008919ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008919e9 ; pop rbp ; ret
0xffffff800089254f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000892549 ; pop rbp ; ret
0xffffff800089258f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000892589 ; pop rbp ; ret
0xffffff800089313f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000893139 ; pop rbp ; ret
0xffffff800089317f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000893179 ; pop rbp ; ret
0xffffff8000893f6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000893f69 ; pop rbp ; ret
0xffffff8000893faf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000893fa9 ; pop rbp ; ret
0xffffff80008951ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008951e9 ; pop rbp ; ret
0xffffff800089522f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000895229 ; pop rbp ; ret
0xffffff800089680f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000896809 ; pop rbp ; ret
0xffffff800089684f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000896849 ; pop rbp ; ret
0xffffff80008990df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008990d9 ; pop rbp ; ret
0xffffff800089911f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff8000899119 ; pop rbp ; ret
0xffffff800089b11f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089b119 ; pop rbp ; ret
0xffffff800089b15f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089b159 ; pop rbp ; ret
0xffffff800089b73f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089b739 ; pop rbp ; ret
0xffffff800089b77f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089b779 ; pop rbp ; ret
0xffffff800089ba6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089ba69 ; pop rbp ; ret
0xffffff800089baaf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089baa9 ; pop rbp ; ret
0xffffff800089bd9f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089bd99 ; pop rbp ; ret
0xffffff800089bddf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089bdd9 ; pop rbp ; ret
0xffffff800089d24f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089d249 ; pop rbp ; ret
0xffffff800089d28f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff800089d289 ; pop rbp ; ret
0xffffff80008a2adf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a2ad9 ; pop rbp ; ret
0xffffff80008a2b1f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a2b19 ; pop rbp ; ret
0xffffff80008a53af : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a53a9 ; pop rbp ; ret
0xffffff80008a53ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a53e9 ; pop rbp ; ret
0xffffff80008a633f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a6339 ; pop rbp ; ret
0xffffff80008a637f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a6379 ; pop rbp ; ret
0xffffff80008a723f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a7239 ; pop rbp ; ret
0xffffff80008a727f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a7279 ; pop rbp ; ret
0xffffff80008a7c4f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a7c49 ; pop rbp ; ret
0xffffff80008a7c8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a7c89 ; pop rbp ; ret
0xffffff80008a81ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008a81e9 ; pop rbp ; ret
0xffffff80008aabdf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008aabd9 ; pop rbp ; ret
0xffffff80008aac1f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008aac19 ; pop rbp ; ret
0xffffff80008ab21f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ab219 ; pop rbp ; ret
0xffffff80008ab57f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ab579 ; pop rbp ; ret
0xffffff80008ab5bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ab5b9 ; pop rbp ; ret
0xffffff80008ae11f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ae119 ; pop rbp ; ret
0xffffff80008ae15f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ae159 ; pop rbp ; ret
0xffffff80008af42f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008af429 ; pop rbp ; ret
0xffffff80008af46f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008af469 ; pop rbp ; ret
0xffffff80008b390f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b3909 ; pop rbp ; ret
0xffffff80008b3e7f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b3e79 ; pop rbp ; ret
0xffffff80008b51bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b51b9 ; pop rbp ; ret
0xffffff80008b51ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b51f9 ; pop rbp ; ret
0xffffff80008b5daf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b5da9 ; pop rbp ; ret
0xffffff80008b5def : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b5de9 ; pop rbp ; ret
0xffffff80008b63ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b63f9 ; pop rbp ; ret
0xffffff80008b643f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b6439 ; pop rbp ; ret
0xffffff80008b7117 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008b711a ; jmp 0xffffff80008b70ed
0xffffff80008c0bcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c0bc9 ; pop rbp ; ret
0xffffff80008c0c0f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c0c09 ; pop rbp ; ret
0xffffff80008c2b1f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c2b19 ; pop rbp ; ret
0xffffff80008c2b5f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c2b59 ; pop rbp ; ret
0xffffff80008c37af : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c37a9 ; pop rbp ; ret
0xffffff80008c37ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c37e9 ; pop rbp ; ret
0xffffff80008c427f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c4279 ; pop rbp ; ret
0xffffff80008c42bf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008c42b9 ; pop rbp ; ret
0xffffff80008cc45f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008cc459 ; pop rbp ; ret
0xffffff80008cc49f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008cc499 ; pop rbp ; ret
0xffffff80008ce25f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ce259 ; pop rbp ; ret
0xffffff80008ce29f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008ce299 ; pop rbp ; ret
0xffffff80008cebff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008cebf9 ; pop rbp ; ret
0xffffff80008cec3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008cec39 ; pop rbp ; ret
0xffffff80008d082f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d0829 ; pop rbp ; ret
0xffffff80008d086f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d0869 ; pop rbp ; ret
0xffffff80008d18ef : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d18e9 ; pop rbp ; ret
0xffffff80008d192f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d1929 ; pop rbp ; ret
0xffffff80008d4b8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d4b89 ; pop rbp ; ret
0xffffff80008d4bcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d4bc9 ; pop rbp ; ret
0xffffff80008d5b8f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d5b89 ; pop rbp ; ret
0xffffff80008d5bcf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d5bc9 ; pop rbp ; ret
0xffffff80008d6b7f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d6b79 ; pop rbp ; ret
0xffffff80008d6bbf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d6bb9 ; pop rbp ; ret
0xffffff80008d751f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d7519 ; pop rbp ; ret
0xffffff80008d755f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d7559 ; pop rbp ; ret
0xffffff80008d778f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d7789 ; pop rbp ; ret
0xffffff80008d77cf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d77c9 ; pop rbp ; ret
0xffffff80008d79ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d79f9 ; pop rbp ; ret
0xffffff80008d7a3f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d7a39 ; pop rbp ; ret
0xffffff80008d986f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008d9869 ; pop rbp ; ret
0xffffff80008e268f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e2689 ; pop rbp ; ret
0xffffff80008e26cf : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e26c9 ; pop rbp ; ret
0xffffff80008e55ff : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e55f9 ; pop rbp ; ret
0xffffff80008e563f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e5639 ; pop rbp ; ret
0xffffff80008e6b2f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e6b29 ; pop rbp ; ret
0xffffff80008e6b6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e6b69 ; pop rbp ; ret
0xffffff80008e6def : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e6de9 ; pop rbp ; ret
0xffffff80008e6e2f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e6e29 ; pop rbp ; ret
0xffffff80008e767f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0xffffff80008e7679 ; pop rbp ; ret
0xffffff800089cbe8 : mov eax, dword ptr [rax + 0x120] ; pop rbp ; jmp rax
0xffffff800082fdcc : mov eax, dword ptr [rax + 0x148] ; pop rbp ; jmp rax
0xffffff800072c655 : mov eax, dword ptr [rax + 0x148] ; pop rbp ; ret
0xffffff800082fdec : mov eax, dword ptr [rax + 0x150] ; pop rbp ; jmp rax
0xffffff800074d445 : mov eax, dword ptr [rax + 0x150] ; pop rbp ; ret
0xffffff80008b5fa8 : mov eax, dword ptr [rax + 0x160] ; pop rbp ; jmp rax
0xffffff800039a32e : mov eax, dword ptr [rax + 0x1638] ; pop rbp ; ret
0xffffff80003a310e : mov eax, dword ptr [rax + 0x168] ; pop rbp ; ret
0xffffff800086116c : mov eax, dword ptr [rax + 0x170] ; pop rbp ; jmp rax
0xffffff80003a312e : mov eax, dword ptr [rax + 0x170] ; pop rbp ; ret
0xffffff80003a314e : mov eax, dword ptr [rax + 0x178] ; pop rbp ; ret
0xffffff8000878984 : mov eax, dword ptr [rax + 0x188] ; pop rbp ; ret
0xffffff80005e4e85 : mov eax, dword ptr [rax + 0x18] ; jmp 0xffffff80005e4e9a
0xffffff80004b410c : mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rdi + 0x50], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008be3e3 : mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800033d99a : mov eax, dword ptr [rax + 0x18] ; mov qword ptr [rdx], rax ; pop rbp ; ret
0xffffff80002f6999 : mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff8000877144 : mov eax, dword ptr [rax + 0x190] ; pop rbp ; ret
0xffffff800038e08b : mov eax, dword ptr [rax + 0x1a0] ; pop rbp ; ret
0xffffff8000890648 : mov eax, dword ptr [rax + 0x1c8] ; pop rbp ; jmp rax
0xffffff800038decc : mov eax, dword ptr [rax + 0x1c8] ; pop rbp ; ret
0xffffff8000878e5d : mov eax, dword ptr [rax + 0x1d8] ; pop rbp ; jmp rax
0xffffff800088fb4e : mov eax, dword ptr [rax + 0x1e0] ; pop rbp ; jmp rax
0xffffff800038c07e : mov eax, dword ptr [rax + 0x1e0] ; pop rbp ; ret
0xffffff800088fb44 : mov eax, dword ptr [rax + 0x1e8] ; pop rbp ; jmp rax
0xffffff80008300ac : mov eax, dword ptr [rax + 0x1e8] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80008a753c : mov eax, dword ptr [rax + 0x1f0] ; pop rbp ; jmp rax
0xffffff8000888f84 : mov eax, dword ptr [rax + 0x1f8] ; pop rbp ; jmp rax
0xffffff8000303789 : mov eax, dword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff80002afd0c : mov eax, dword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff80004f8b02 : mov eax, dword ptr [rax + 0x20] ; test rax, rax ; je 0xffffff80004f8b16 ; pop rbp ; jmp rax
0xffffff80007d47f8 : mov eax, dword ptr [rax + 0x24] ; and eax, 1 ; pop rbp ; ret
0xffffff80004148db : mov eax, dword ptr [rax + 0x24] ; pop rbp ; ret
0xffffff8000758bd9 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff80007607f9 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000760819 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff8000758bf9 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 8] ; pop rbp ; jmp rax
0xffffff8000303799 : mov eax, dword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff80002afd2c : mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff8000780159 : mov eax, dword ptr [rax + 0x2c] ; pop rbp ; ret
0xffffff80004fa70c : mov eax, dword ptr [rax + 0x30] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80003037a9 : mov eax, dword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff8000511b89 : mov eax, dword ptr [rax + 0x30] ; test r8, r8 ; jne 0xffffff8000511b5a ; pop rbp ; ret
0xffffff8000511b89 : mov eax, dword ptr [rax + 0x30] ; test r8, r8 ; jne 0xffffff8000511b5c ; pop rbp ; ret
0xffffff80002b730e : mov eax, dword ptr [rax + 0x310] ; pop rbp ; ret
0xffffff800031eafe : mov eax, dword ptr [rax + 0x318] ; pop rbp ; ret
0xffffff800077e02e : mov eax, dword ptr [rax + 0x350] ; pop rbp ; ret
0xffffff80003037b9 : mov eax, dword ptr [rax + 0x38] ; pop rbp ; jmp rax
0xffffff8000389efe : mov eax, dword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff80003ba84e : mov eax, dword ptr [rax + 0x3a8] ; pop rbp ; ret
0xffffff80003037c9 : mov eax, dword ptr [rax + 0x40] ; pop rbp ; jmp rax
0xffffff80003a28c1 : mov eax, dword ptr [rax + 0x40] ; test rax, rax ; je 0xffffff80003a28d5 ; pop rbp ; jmp rax
0xffffff80007b1213 : mov eax, dword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rax ; pop rbp ; ret
0xffffff80007c6a59 : mov eax, dword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; jmp rax
0xffffff80003037d9 : mov eax, dword ptr [rax + 0x48] ; pop rbp ; jmp rax
0xffffff800039cd86 : mov eax, dword ptr [rax + 0x48] ; pop rbp ; ret
0xffffff80003a25e4 : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0xffffff80003a260f ; call rax
0xffffff8000811308 : mov eax, dword ptr [rax + 0x48] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80003ba835 : mov eax, dword ptr [rax + 0x490] ; pop rbp ; ret
0xffffff80002db359 : mov eax, dword ptr [rax + 0x50] ; pop rbp ; ret
0xffffff80008112f8 : mov eax, dword ptr [rax + 0x50] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff8000811218 : mov eax, dword ptr [rax + 0x58] ; mov edx, 1 ; pop rbp ; jmp rax
0xffffff80003037f9 : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0xffffff800030380d ; pop rbp ; jmp rax
0xffffff800086af12 : mov eax, dword ptr [rax + 0x5b0] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff800038dfbc : mov eax, dword ptr [rax + 0x60] ; pop rbp ; ret
0xffffff8000865bd8 : mov eax, dword ptr [rax + 0x640] ; pop rbp ; jmp rax
0xffffff80007f01dc : mov eax, dword ptr [rax + 0x68] ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80007c6a5d : mov eax, dword ptr [rax + 0x68] ; pop rbp ; jmp rax
0xffffff8000342179 : mov eax, dword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007f30bd : mov eax, dword ptr [rax + 0x6c] ; mov dword ptr [rdx], eax ; pop rbp ; ret
0xffffff80004fa7fb : mov eax, dword ptr [rax + 0x70] ; and eax, 1 ; pop rbp ; ret
0xffffff80003a29c1 : mov eax, dword ptr [rax + 0x70] ; test rax, rax ; je 0xffffff80003a29d5 ; pop rbp ; jmp rax
0xffffff80004c8156 : mov eax, dword ptr [rax + 0x78] ; and eax, 1 ; pop rbp ; ret
0xffffff80007f022c : mov eax, dword ptr [rax + 0x78] ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80004fa87b : mov eax, dword ptr [rax + 0x78] ; shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff80003a2a11 : mov eax, dword ptr [rax + 0x78] ; test rax, rax ; je 0xffffff80003a2a25 ; pop rbp ; jmp rax
0xffffff8000879964 : mov eax, dword ptr [rax + 0x7c8] ; pop rbp ; jmp rax
0xffffff80004fa79b : mov eax, dword ptr [rax + 0x80] ; pop rbp ; ret
0xffffff800087cd60 : mov eax, dword ptr [rax + 0x820] ; pop rbp ; jmp rax
0xffffff80008ade38 : mov eax, dword ptr [rax + 0x880] ; pop rbp ; jmp rax
0xffffff80008b4638 : mov eax, dword ptr [rax + 0x888] ; pop rbp ; ret
0xffffff80007fbc1c : mov eax, dword ptr [rax + 0x88] ; pop rbp ; ret
0xffffff80008b0798 : mov eax, dword ptr [rax + 0x8d0] ; pop rbp ; jmp rax
0xffffff80008b07b8 : mov eax, dword ptr [rax + 0x8d8] ; pop rbp ; jmp rax
0xffffff80008a8678 : mov eax, dword ptr [rax + 0x8e0] ; pop rbp ; jmp rax
0xffffff80008aa764 : mov eax, dword ptr [rax + 0x8f0] ; pop rbp ; jmp rax
0xffffff80008aa794 : mov eax, dword ptr [rax + 0x8f8] ; pop rbp ; jmp rax
0xffffff80004fa7dc : mov eax, dword ptr [rax + 0x8f8] ; pop rbp ; ret
0xffffff80008aa7c4 : mov eax, dword ptr [rax + 0x900] ; pop rbp ; jmp rax
0xffffff80008aa7f4 : mov eax, dword ptr [rax + 0x908] ; pop rbp ; jmp rax
0xffffff80008aa844 : mov eax, dword ptr [rax + 0x918] ; pop rbp ; jmp rax
0xffffff80008aa874 : mov eax, dword ptr [rax + 0x920] ; pop rbp ; jmp rax
0xffffff8000511b2e : mov eax, dword ptr [rax + 0xa0] ; pop rbp ; ret
0xffffff800038c0e2 : mov eax, dword ptr [rax + 0xa838] ; pop rbp ; ret
0xffffff800038c102 : mov eax, dword ptr [rax + 0xa83c] ; pop rbp ; ret
0xffffff800038c122 : mov eax, dword ptr [rax + 0xa840] ; pop rbp ; ret
0xffffff80003a31a2 : mov eax, dword ptr [rax + 0xa84c] ; pop rbp ; ret
0xffffff800039cd8c : mov eax, dword ptr [rax + 0xb8] ; pop rbp ; ret
0xffffff8000758019 : mov eax, dword ptr [rax + 0xd0] ; pop rbp ; ret
0xffffff800038e0db : mov eax, dword ptr [rax + 0xf8] ; pop rbp ; ret
0xffffff800038e12b : mov eax, dword ptr [rax + 0xfc] ; pop rbp ; ret
0xffffff8000796033 : mov eax, dword ptr [rax + 4] ; shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff800086143f : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000561de8 : mov eax, dword ptr [rax + 8] ; mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000758bfd : mov eax, dword ptr [rax + 8] ; pop rbp ; jmp rax
0xffffff800078c727 : mov eax, dword ptr [rax + 8] ; pop rbp ; ret
0xffffff8000393eb7 : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0xffffff8000393ec9 ; call rax
0xffffff80003a21d1 : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0xffffff80003a21e5 ; pop rbp ; jmp rax
0xffffff80004f8942 : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0xffffff80004f8956 ; pop rbp ; jmp rax
0xffffff8000541f47 : mov eax, dword ptr [rax + rax + 0x31] ; shr al, 0x5f ; ret 0xffd4
0xffffff8000541f2e : mov eax, dword ptr [rax + rax + 0x31] ; shr al, 0x78 ; ret 0xffd4
0xffffff8000541eec : mov eax, dword ptr [rax + rax + 0x31] ; shr al, 0xba ; ret 0xffd4
0xffffff80007ff10d : mov eax, dword ptr [rax + rax + 0x40] ; pop rbp ; jmp rax
0xffffff80007ff00d : mov eax, dword ptr [rax + rax + 8] ; pop rbp ; jmp rax
0xffffff80008172e7 : mov eax, dword ptr [rax + rax + 8] ; pop rbp ; ret
0xffffff80003ba51d : mov eax, dword ptr [rax + rax] ; add byte ptr [rdi], cl ; xor dh, dh ; ret 0x7402
0xffffff80007fefcd : mov eax, dword ptr [rax + rax] ; pop rbp ; jmp rax
0xffffff80007ff04d : mov eax, dword ptr [rax + rcx + 0x10] ; pop rbp ; jmp rax
0xffffff80007ff08d : mov eax, dword ptr [rax + rcx + 0x18] ; pop rbp ; jmp rax
0xffffff80003684c7 : mov eax, dword ptr [rax + rcx*4 + 8] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000812814 : mov eax, dword ptr [rax + rcx*8] ; pop rbp ; ret
0xffffff80004f9f81 : mov eax, dword ptr [rax + rdi*4] ; pop rbp ; ret
0xffffff80003a8d8e : mov eax, dword ptr [rax + rdi] ; pop rbp ; ret
0xffffff8000342158 : mov eax, dword ptr [rax + rsi*8 + 0x74] ; mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80004c09f8 : mov eax, dword ptr [rax - 0xa000000] ; ret 0xf90
0xffffff80006b6eed : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x40] ; call rax
0xffffff80005683f2 : mov eax, dword ptr [rax] ; mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000584d2a : mov eax, dword ptr [rax] ; mov qword ptr [r14], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a5b1b : mov eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80005b1075 : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80005b1028 ; pop rbp ; ret
0xffffff80005b209b : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80005b2048 ; pop rbp ; ret
0xffffff80005bf771 : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80005bf738 ; pop rbp ; ret
0xffffff80005ebe11 : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80005ebdd8 ; pop rbp ; ret
0xffffff8000637a21 : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80006379e8 ; pop rbp ; ret
0xffffff8000687efb : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff8000687ec8 ; pop rbp ; ret
0xffffff80006a435b : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0xffffff80006a4328 ; pop rbp ; ret
0xffffff800028a6f9 : mov eax, dword ptr [rax] ; test rax, rax ; je 0xffffff800028a717 ; call rax
0xffffff80003903bb : mov eax, dword ptr [rax] ; test rax, rax ; je 0xffffff80003903cd ; call rax
0xffffff80003a2841 : mov eax, dword ptr [rax] ; test rax, rax ; je 0xffffff80003a2853 ; pop rbp ; jmp rax
0xffffff80003a304d : mov eax, dword ptr [rax] ; test rax, rax ; je 0xffffff80003a3064 ; call rax
0xffffff800044ebd8 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0xffffff800044ebd8 ; pop rbp ; ret
0xffffff80004cfe02 : mov eax, dword ptr [rbp + 0x18] ; call 0xffffff80004fc025
0xffffff80008a994e : mov eax, dword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049f171 : mov eax, dword ptr [rbp - 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005da48e : mov eax, dword ptr [rbp - 0x118] ; mov edx, eax ; jmp 0xffffff80005da4bf
0xffffff80008584c3 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80006582d9 : mov eax, dword ptr [rbp - 0x1b0] ; call r9
0xffffff8000659740 : mov eax, dword ptr [rbp - 0x1b0] ; call rbx
0xffffff8000659a7c : mov eax, dword ptr [rbp - 0x1e8] ; call rax
0xffffff80008fbb29 : mov eax, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80003f18e2 : mov eax, dword ptr [rbp - 0x30] ; call rax
0xffffff8000890afa : mov eax, dword ptr [rbp - 0x30] ; call rbx
0xffffff80008f3f37 : mov eax, dword ptr [rbp - 0x34] ; call rbx
0xffffff80008000ea : mov eax, dword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff8000890833 : mov eax, dword ptr [rbp - 0x38] ; call rbx
0xffffff80003896f5 : mov eax, dword ptr [rbp - 0x38] ; jmp rcx
0xffffff80008f3b07 : mov eax, dword ptr [rbp - 0x38] ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff800074effa : mov eax, dword ptr [rbp - 0x38] ; mov r9, qword ptr [rbp - 0x48] ; call rax
0xffffff800074f2a7 : mov eax, dword ptr [rbp - 0x38] ; mov r9, r14 ; call rax
0xffffff800090925e : mov eax, dword ptr [rbp - 0x3c] ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008fbd9b : mov eax, dword ptr [rbp - 0x40] ; call rbx
0xffffff80008f88b9 : mov eax, dword ptr [rbp - 0x40] ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3d1f : mov eax, dword ptr [rbp - 0x40] ; mov r9d, dword ptr [rbp - 0x3c] ; call rbx
0xffffff8000375080 : mov eax, dword ptr [rbp - 0x48] ; jmp 0xffffff800037553e
0xffffff800074f12d : mov eax, dword ptr [rbp - 0x48] ; mov r9, qword ptr [rbp - 0x38] ; call rax
0xffffff8000686ba7 : mov eax, dword ptr [rbp - 0x58] ; call qword ptr [rax]
0xffffff80008f6e61 : mov eax, dword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; call r12
0xffffff80008f6cd1 : mov eax, dword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; call rbx
0xffffff80004d8ba2 : mov eax, dword ptr [rbp - 0x5d8] ; call rax
0xffffff80008403b7 : mov eax, dword ptr [rbp - 0x7c] ; jmp 0xffffff8000840397
0xffffff80002955d8 : mov eax, dword ptr [rbp - 0xc] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049f08f : mov eax, dword ptr [rbp - 0xc] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000593ad0 : mov eax, dword ptr [rbp - 0xe0] ; call rax
0xffffff8000457348 : mov eax, dword ptr [rbp - 4] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000588ed8 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800080cbb9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000866bf9 : mov eax, dword ptr [rbp - 8] ; add rsp, 0x30 ; pop rbp ; ret
0xffffff800089de03 : mov eax, dword ptr [rbx + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028bcd2 : mov eax, dword ptr [rbx + 0x14] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028bd82 : mov eax, dword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000751e1b : mov eax, dword ptr [rbx + 0x1c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000751e5b : mov eax, dword ptr [rbx + 0x20] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007fcaff : mov eax, dword ptr [rbx + 0x20] ; mov r9, qword ptr [rbx + 0x28] ; call r10
0xffffff80005115a8 : mov eax, dword ptr [rbx + 0x20] ; mov rsi, qword ptr [rax] ; call 0xffffff80002cd858
0xffffff8000751e9b : mov eax, dword ptr [rbx + 0x28] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800035893d : mov eax, dword ptr [rbx + 0x30] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800053c681 : mov eax, dword ptr [rbx + 0x30] ; test rax, rax ; je 0xffffff800053c693 ; call rax
0xffffff8000861493 : mov eax, dword ptr [rbx + 0x38] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000388269 : mov eax, dword ptr [rbx + 0x40] ; xor eax, eax ; mov rdi, r14 ; call r15
0xffffff80007b4479 : mov eax, dword ptr [rbx + 0x58] ; test rax, rax ; je 0xffffff80007b4478 ; call rax
0xffffff80007c34c1 : mov eax, dword ptr [rbx + 0x60] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000751edb : mov eax, dword ptr [rbx + 0x68] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000751f1b : mov eax, dword ptr [rbx + 0x6c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800055096e : mov eax, dword ptr [rbx + 0x70] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b0fad : mov eax, dword ptr [rbx + 0xc] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054fff2 : mov eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000884cb5 : mov eax, dword ptr [rbx + 8] ; mov rdi, qword ptr [rax + 0x10] ; call 0xffffff80008c0f89
0xffffff80008b0f5d : mov eax, dword ptr [rbx + 8] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000354546 : mov eax, dword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800035471f : mov eax, dword ptr [rbx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a2f5a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0xffffff80003a2f78 ; call rax
0xffffff80004fa9b8 : mov eax, dword ptr [rcx + 0x10] ; add rsp, 8 ; pop rbp ; ret
0xffffff80007fcd5f : mov eax, dword ptr [rcx + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007f682e : mov eax, dword ptr [rcx + 0x10] ; mov rdi, qword ptr [rax + 0x10] ; call 0xffffff8000392a49
0xffffff8000390770 : mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff800077e003 : mov eax, dword ptr [rcx + 0x128] ; pop rbp ; ret
0xffffff800049d82c : mov eax, dword ptr [rcx + 0x130] ; pop rbp ; ret
0xffffff80003a308a : mov eax, dword ptr [rcx + 0x168] ; pop rbp ; ret
0xffffff80003a30ba : mov eax, dword ptr [rcx + 0x170] ; pop rbp ; ret
0xffffff80003a30ea : mov eax, dword ptr [rcx + 0x178] ; pop rbp ; ret
0xffffff80007af882 : mov eax, dword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff800057095f : mov eax, dword ptr [rcx + 0x18c] ; pop rbp ; ret
0xffffff80003907ab : mov eax, dword ptr [rcx + 0x1c] ; pop rbp ; ret
0xffffff80005c1331 : mov eax, dword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff8000705ded : mov eax, dword ptr [rcx + 0x24c] ; pop rbp ; ret
0xffffff8000870c35 : mov eax, dword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff8000287782 : mov eax, dword ptr [rcx + 0x2c] ; pop rbp ; ret
0xffffff80002daf03 : mov eax, dword ptr [rcx + 0x318] ; pop rbp ; ret
0xffffff800071c0b6 : mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002c098a : mov eax, dword ptr [rcx + 0x4c] ; pop rbp ; ret
0xffffff80007f71a2 : mov eax, dword ptr [rcx + 0x50] ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80007b11e2 : mov eax, dword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff8000756bb8 : mov eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80002b93a2 : mov eax, dword ptr [rcx + 0x7c] ; and eax, 1 ; pop rbp ; ret
0xffffff80002b93c2 : mov eax, dword ptr [rcx + 0x7c] ; shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa053 : mov eax, dword ptr [rcx + 0x988] ; pop rbp ; ret
0xffffff8000646398 : mov eax, dword ptr [rcx + 0xc0] ; pop rbp ; ret
0xffffff80002cd1a0 : mov eax, dword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80007ff0cd : mov eax, dword ptr [rcx + rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000369dee : mov eax, dword ptr [rcx + rax + 0x68] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800028a5fe : mov eax, dword ptr [rcx + rax*4] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000274596 : mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800025a18b : mov eax, dword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800025a1e9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff800025a204 ; call rax
0xffffff80002dc279 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002dc294 ; call rax
0xffffff80002dcf76 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002dcf91 ; call rax
0xffffff80002dd3f9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002dd414 ; call rax
0xffffff80002dfea9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002dfec4 ; call rax
0xffffff80002e08b6 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e08d1 ; call rax
0xffffff80002e0cf9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e0d14 ; call rax
0xffffff80002e3039 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e3054 ; call rax
0xffffff80002e5729 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e5744 ; call rax
0xffffff80002e70b9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e70d4 ; call rax
0xffffff80002e7af9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e7b14 ; call rax
0xffffff80002e8419 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e8434 ; call rax
0xffffff80002e9119 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002e9134 ; call rax
0xffffff80002ee4a9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002ee4c4 ; call rax
0xffffff80002eeca9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002eecc4 ; call rax
0xffffff80002ef8e9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002ef904 ; call rax
0xffffff80002f28f9 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002f2914 ; call rax
0xffffff80002f4a89 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff80002f4aa4 ; call rax
0xffffff800035da99 : mov eax, dword ptr [rcx + rax*8 + 0x28] ; test rax, rax ; je 0xffffff800035dab4 ; call rax
0xffffff8000658136 : mov eax, dword ptr [rcx + rax*8 - 8] ; call qword ptr [rax]
0xffffff8000655f1d : mov eax, dword ptr [rcx + rax*8 - 8] ; mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [rax]
0xffffff800039109f : mov eax, dword ptr [rcx + rax*8] ; add rax, 0x68 ; pop rbp ; ret
0xffffff800049e17f : mov eax, dword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008adba5 : mov eax, dword ptr [rcx + rax*8] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a6911 : mov eax, dword ptr [rcx + rdx + 0x10] ; pop rbp ; ret
0xffffff80004a6397 : mov eax, dword ptr [rcx + rdx + 0x14] ; pop rbp ; ret
0xffffff8000271e12 : mov eax, dword ptr [rcx + rsi + 4] ; pop rbp ; ret
0xffffff8000846aa9 : mov eax, dword ptr [rcx] ; add eax, 0xf ; and eax, 0xfffffff0 ; pop rbp ; ret
0xffffff800028ba87 : mov eax, dword ptr [rcx] ; mov qword ptr [rsi + 8], rax ; pop rbp ; ret
0xffffff800054ff79 : mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff8000327534 : mov eax, dword ptr [rdi + 0x10] ; and eax, 1 ; pop rbp ; ret
0xffffff8000831444 : mov eax, dword ptr [rdi + 0x10] ; dec eax ; pop rbp ; ret
0xffffff8000781794 : mov eax, dword ptr [rdi + 0x10] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f6995 : mov eax, dword ptr [rdi + 0x10] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff8000298c6e : mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800044863a : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rdi] ; mov dword ptr [rdi + 0xc], eax ; pop rbp ; ret
0xffffff80004486bc : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff80007f07a4 : mov eax, dword ptr [rdi + 0x11c] ; pop rbp ; ret
0xffffff80006d63da : mov eax, dword ptr [rdi + 0x14] ; bswap eax ; pop rbp ; ret
0xffffff80002a9a31 : mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff800056311b : mov eax, dword ptr [rdi + 0x178] ; pop rbp ; ret
0xffffff800056313b : mov eax, dword ptr [rdi + 0x17c] ; pop rbp ; ret
0xffffff80005709a4 : mov eax, dword ptr [rdi + 0x184] ; pop rbp ; ret
0xffffff800082fd95 : mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800082fda5 : mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x24] ; pop rbp ; ret
0xffffff800082fdb5 : mov eax, dword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff80002f6985 : mov eax, dword ptr [rdi + 0x18] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff8000812810 : mov eax, dword ptr [rdi + 0x18] ; mov rax, qword ptr [rax + rcx*8] ; pop rbp ; ret
0xffffff800082cbed : mov eax, dword ptr [rdi + 0x18] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff8000516525 : mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002daf34 : mov eax, dword ptr [rdi + 0x1b8] ; pop rbp ; ret
0xffffff800039d4c0 : mov eax, dword ptr [rdi + 0x1c] ; mov dword ptr [rsi + 0x1c], eax ; pop rbp ; ret
0xffffff80005cf384 : mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff8000532de0 : mov eax, dword ptr [rdi + 0x1e0] ; pop rbp ; jmp rax
0xffffff80005be864 : mov eax, dword ptr [rdi + 0x20] ; and eax, 1 ; pop rbp ; ret
0xffffff800089faf4 : mov eax, dword ptr [rdi + 0x20] ; and eax, 7 ; pop rbp ; ret
0xffffff80002db355 : mov eax, dword ptr [rdi + 0x20] ; mov rax, qword ptr [rax + 0x50] ; pop rbp ; ret
0xffffff80002db145 : mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80008dec64 : mov eax, dword ptr [rdi + 0x240] ; pop rbp ; ret
0xffffff80008107c4 : mov eax, dword ptr [rdi + 0x24] ; pop rbp ; ret
0xffffff80005b1154 : mov eax, dword ptr [rdi + 0x28] ; and eax, 1 ; pop rbp ; ret
0xffffff80007817a4 : mov eax, dword ptr [rdi + 0x28] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007724b2 : mov eax, dword ptr [rdi + 0x28] ; mov dword ptr [rsi + 0x20], eax ; pop rbp ; ret
0xffffff80007724f7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x28], rax ; pop rbp ; ret
0xffffff800075fb15 : mov eax, dword ptr [rdi + 0x28] ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff800086ee95 : mov eax, dword ptr [rdi + 0x28] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff80002db565 : mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff80002db1c5 : mov eax, dword ptr [rdi + 0x290] ; pop rbp ; ret
0xffffff80002db135 : mov eax, dword ptr [rdi + 0x2b0] ; pop rbp ; ret
0xffffff80007817b4 : mov eax, dword ptr [rdi + 0x2c] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000780144 : mov eax, dword ptr [rdi + 0x2c] ; pop rbp ; ret
0xffffff80005260c4 : mov eax, dword ptr [rdi + 0x30] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80004f9035 : mov eax, dword ptr [rdi + 0x30] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80002f6974 : mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002db545 : mov eax, dword ptr [rdi + 0x310] ; pop rbp ; ret
0xffffff80002daeb5 : mov eax, dword ptr [rdi + 0x318] ; pop rbp ; ret
0xffffff80002e984c : mov eax, dword ptr [rdi + 0x320] ; pop rbp ; ret
0xffffff800082c6d4 : mov eax, dword ptr [rdi + 0x34] ; pop rbp ; ret
0xffffff80002db724 : mov eax, dword ptr [rdi + 0x34c] ; pop rbp ; ret
0xffffff80002daf25 : mov eax, dword ptr [rdi + 0x350] ; pop rbp ; ret
0xffffff80002c093b : mov eax, dword ptr [rdi + 0x35c] ; pop rbp ; ret
0xffffff80002c099c : mov eax, dword ptr [rdi + 0x360] ; pop rbp ; ret
0xffffff80002c095c : mov eax, dword ptr [rdi + 0x368] ; pop rbp ; ret
0xffffff80007f0655 : mov eax, dword ptr [rdi + 0x388] ; pop rbp ; ret
0xffffff80008980b4 : mov eax, dword ptr [rdi + 0x38] ; inc eax ; pop rbp ; ret
0xffffff8000796363 : mov eax, dword ptr [rdi + 0x38] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000526854 : mov eax, dword ptr [rdi + 0x38] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800039d50f : mov eax, dword ptr [rdi + 0x38] ; mov qword ptr [rsi + 0x38], rax ; pop rbp ; ret
0xffffff80002a0405 : mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80003676b4 : mov eax, dword ptr [rdi + 0x390] ; pop rbp ; ret
0xffffff80007f0694 : mov eax, dword ptr [rdi + 0x398] ; pop rbp ; ret
0xffffff80007f0884 : mov eax, dword ptr [rdi + 0x39c] ; pop rbp ; ret
0xffffff80007f06b5 : mov eax, dword ptr [rdi + 0x3a0] ; pop rbp ; ret
0xffffff80007f0865 : mov eax, dword ptr [rdi + 0x3a8] ; pop rbp ; ret
0xffffff80002bed0c : mov eax, dword ptr [rdi + 0x3b0] ; pop rbp ; ret
0xffffff80007f0734 : mov eax, dword ptr [rdi + 0x3b8] ; pop rbp ; ret
0xffffff80008980c4 : mov eax, dword ptr [rdi + 0x3c] ; inc eax ; pop rbp ; ret
0xffffff80007962c0 : mov eax, dword ptr [rdi + 0x3c] ; mov word ptr [rsi], ax ; xor eax, eax ; pop rbp ; ret
0xffffff80005644d5 : mov eax, dword ptr [rdi + 0x3dc] ; pop rbp ; ret
0xffffff8000581594 : mov eax, dword ptr [rdi + 0x40] ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3b34 : mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff800077e084 : mov eax, dword ptr [rdi + 0x434] ; pop rbp ; ret
0xffffff80007f0765 : mov eax, dword ptr [rdi + 0x438] ; pop rbp ; ret
0xffffff800077e0f5 : mov eax, dword ptr [rdi + 0x440] ; pop rbp ; ret
0xffffff8000389e75 : mov eax, dword ptr [rdi + 0x448] ; pop rbp ; ret
0xffffff80004b3be4 : mov eax, dword ptr [rdi + 0x44] ; pop rbp ; ret
0xffffff80007f06d5 : mov eax, dword ptr [rdi + 0x450] ; pop rbp ; ret
0xffffff80007f0845 : mov eax, dword ptr [rdi + 0x458] ; pop rbp ; ret
0xffffff80002b7185 : mov eax, dword ptr [rdi + 0x488] ; pop rbp ; ret
0xffffff80002ae7f4 : mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff800039a6a5 : mov eax, dword ptr [rdi + 0x4a0] ; pop rbp ; ret
0xffffff8000563e3b : mov eax, dword ptr [rdi + 0x4b8] ; pop rbp ; ret
0xffffff80004fa0d4 : mov eax, dword ptr [rdi + 0x4c] ; and eax, 1 ; pop rbp ; ret
0xffffff80006d86b5 : mov eax, dword ptr [rdi + 0x4c] ; bswap eax ; mov dword ptr [rdi + 0x4c], eax ; pop rbp ; ret
0xffffff80004b3c04 : mov eax, dword ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80007974ff : mov eax, dword ptr [rdi + 0x50] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000342175 : mov eax, dword ptr [rdi + 0x50] ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff8000342185 : mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff800056369b : mov eax, dword ptr [rdi + 0x584] ; pop rbp ; ret
0xffffff80008980a4 : mov eax, dword ptr [rdi + 0x58] ; inc eax ; pop rbp ; ret
0xffffff80002db575 : mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80005c0144 : mov eax, dword ptr [rdi + 0x5c] ; add rax, rsi ; pop rbp ; ret
0xffffff8000895e3b : mov eax, dword ptr [rdi + 0x60] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800027fc6f : mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80005eaf04 : mov eax, dword ptr [rdi + 0x68] ; and eax, 1 ; pop rbp ; ret
0xffffff80002db224 : mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa024 : mov eax, dword ptr [rdi + 0x6c] ; pop rbp ; ret
0xffffff80004f9104 : mov eax, dword ptr [rdi + 0x70] ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9114 : mov eax, dword ptr [rdi + 0x70] ; and eax, 2 ; pop rbp ; ret
0xffffff80004fa0c5 : mov eax, dword ptr [rdi + 0x70] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80004f9124 : mov eax, dword ptr [rdi + 0x70] ; not eax ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3cb0 : mov eax, dword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff800055aad4 : mov eax, dword ptr [rdi + 0x74] ; not eax ; and eax, 1 ; pop rbp ; ret
0xffffff80002db704 : mov eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff800057f204 : mov eax, dword ptr [rdi + 0x78] ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3c85 : mov eax, dword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff80004f9174 : mov eax, dword ptr [rdi + 0x7c] ; shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b4165 : mov eax, dword ptr [rdi + 0x80] ; pop rbp ; ret
0xffffff80002a9a62 : mov eax, dword ptr [rdi + 0x820] ; pop rbp ; ret
0xffffff800057004b : mov eax, dword ptr [rdi + 0x84] ; pop rbp ; ret
0xffffff80004b4175 : mov eax, dword ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff80004f9415 : mov eax, dword ptr [rdi + 0x8f8] ; pop rbp ; ret
0xffffff80002a9ab4 : mov eax, dword ptr [rdi + 0x900] ; pop rbp ; ret
0xffffff80004b4185 : mov eax, dword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff80004f9474 : mov eax, dword ptr [rdi + 0x91c] ; pop rbp ; ret
0xffffff80008adea4 : mov eax, dword ptr [rdi + 0x94] ; pop rbp ; ret
0xffffff8000356d65 : mov eax, dword ptr [rdi + 0x98] ; pop rbp ; ret
0xffffff80004f8fb5 : mov eax, dword ptr [rdi + 0x998] ; pop rbp ; ret
0xffffff80004f9045 : mov eax, dword ptr [rdi + 0x9d0] ; pop rbp ; ret
0xffffff80004f9192 : mov eax, dword ptr [rdi + 0x9f0] ; pop rbp ; ret
0xffffff8000511b3b : mov eax, dword ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff80002b466e : mov eax, dword ptr [rdi + 0xa4] ; pop rbp ; ret
0xffffff8000563a9b : mov eax, dword ptr [rdi + 0xa8] ; pop rbp ; ret
0xffffff80004b4125 : mov eax, dword ptr [rdi + 0xb0] ; pop rbp ; ret
0xffffff80004b4145 : mov eax, dword ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff8000895d05 : mov eax, dword ptr [rdi + 0xc0] ; pop rbp ; ret
0xffffff80004b3c24 : mov eax, dword ptr [rdi + 0xc8] ; pop rbp ; ret
0xffffff80005dfdd1 : mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80004b3c34 : mov eax, dword ptr [rdi + 0xcc] ; pop rbp ; ret
0xffffff80004fa035 : mov eax, dword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff80005664ab : mov eax, dword ptr [rdi + 0xd4] ; pop rbp ; ret
0xffffff80007f0785 : mov eax, dword ptr [rdi + 0xd80] ; pop rbp ; ret
0xffffff80004b75d4 : mov eax, dword ptr [rdi + 0xd8] ; pop rbp ; ret
0xffffff80004b41a5 : mov eax, dword ptr [rdi + 0xe0] ; pop rbp ; ret
0xffffff80002a1754 : mov eax, dword ptr [rdi + 0xe4] ; pop rbp ; ret
0xffffff80007098a3 : mov eax, dword ptr [rdi + 0xec] ; pop rbp ; ret
0xffffff80006d63a7 : mov eax, dword ptr [rdi + 0xf0] ; bswap eax ; pop rbp ; ret
0xffffff8000504ad5 : mov eax, dword ptr [rdi + 0xf0] ; pop rbp ; ret
0xffffff8000767824 : mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028e134 : mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; pop rbp ; ret
0xffffff8000303765 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff8000810b45 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff8000303785 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000303795 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff80003037a5 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff80003037b5 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x38] ; pop rbp ; jmp rax
0xffffff80003037c5 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; pop rbp ; jmp rax
0xffffff80003037d5 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; pop rbp ; jmp rax
0xffffff8000303745 : mov eax, dword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff800028bb54 : mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028e114 : mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; pop rbp ; ret
0xffffff8000807cda : mov eax, dword ptr [rdi + rax*8 + 0x10] ; pop rbp ; ret
0xffffff80008f25d8 : mov eax, dword ptr [rdi + rax*8 + 8] ; pop rbp ; ret
0xffffff8000342757 : mov eax, dword ptr [rdi + rax*8] ; pop rbp ; ret
0xffffff800076b6b5 : mov eax, dword ptr [rdi + rdx + 0x80] ; pop rbx ; pop rbp ; ret
0xffffff80003b2696 : mov eax, dword ptr [rdi + rsi + 0xc] ; jne 0xffffff80003b26a7 ; mov edx, eax ; jmp 0xffffff80003b26d0
0xffffff800082d61c : mov eax, dword ptr [rdi - 8] ; add rax, -8 ; pop rbp ; ret
0xffffff8000392890 : mov eax, dword ptr [rdi] ; and eax, 0x201ffff ; ret
0xffffff80004b3a34 : mov eax, dword ptr [rdi] ; and eax, 1 ; pop rbp ; ret
0xffffff80008d8389 : mov eax, dword ptr [rdi] ; call qword ptr [rax + 0x28]
0xffffff80004aabc4 : mov eax, dword ptr [rdi] ; imul eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80002938e3 : mov eax, dword ptr [rdi] ; lea rdx, [rbp - 0x20] ; mov rsi, r15 ; call qword ptr [rax]
0xffffff8000262aef : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x83d2a8], eax ; pop rbp ; ret
0xffffff80004a6de4 : mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088af05 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800085d6b9 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff8000811305 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x48] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80008112f5 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x50] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff800078c724 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; pop rbp ; ret
0xffffff800078c984 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800028ba55 : mov eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff80004b3b04 : mov eax, dword ptr [rdi] ; shr eax, 0xc ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3a94 : mov eax, dword ptr [rdi] ; shr eax, 2 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3a64 : mov eax, dword ptr [rdi] ; shr eax, 3 ; and eax, 1 ; pop rbp ; ret
0xffffff80002cb144 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3ae4 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3b24 : mov eax, dword ptr [rdi] ; shr eax, 6 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3a54 : mov eax, dword ptr [rdi] ; shr eax, 7 ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3a44 : mov eax, dword ptr [rdi] ; shr eax, 8 ; and eax, 0xf ; pop rbp ; ret
0xffffff80004a54f4 : mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff80003895a4 : mov eax, dword ptr [rdx + 0x28] ; mov qword ptr [r8], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000541064 : mov eax, dword ptr [rdx] ; mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80006e176a : mov eax, dword ptr [rdx] ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008ed0b4 : mov eax, dword ptr [rip + 0x1f89ba] ; pop rbp ; ret
0xffffff8000909776 : mov eax, dword ptr [rip + 0x22e144] ; jmp 0xffffff8000909747
0xffffff80007f05f4 : mov eax, dword ptr [rip + 0x23c12e] ; pop rbp ; ret
0xffffff80008790c5 : mov eax, dword ptr [rip + 0x26c565] ; pop rbp ; ret
0xffffff80008661c5 : mov eax, dword ptr [rip + 0x27f265] ; pop rbp ; ret
0xffffff80008661a5 : mov eax, dword ptr [rip + 0x27f40d] ; pop rbp ; ret
0xffffff80008661b5 : mov eax, dword ptr [rip + 0x27f415] ; pop rbp ; ret
0xffffff8000864665 : mov eax, dword ptr [rip + 0x280f35] ; pop rbp ; ret
0xffffff800085d345 : mov eax, dword ptr [rip + 0x28805d] ; pop rbp ; ret
0xffffff800085d354 : mov eax, dword ptr [rip + 0x288066] ; pop rbp ; ret
0xffffff80006c5495 : mov eax, dword ptr [rip + 0x3a3795] ; pop rbp ; jmp rax
0xffffff80006c54a5 : mov eax, dword ptr [rip + 0x3a379d] ; pop rbp ; jmp rax
0xffffff80006c53e5 : mov eax, dword ptr [rip + 0x3a37fd] ; pop rbp ; jmp rax
0xffffff80006c53d5 : mov eax, dword ptr [rip + 0x3a3805] ; pop rbp ; jmp rax
0xffffff800077d0d4 : mov eax, dword ptr [rip + 0x3b217e] ; pop rbp ; ret
0xffffff8000683d3c : mov eax, dword ptr [rip + 0x3ef37a] ; pop rbp ; ret
0xffffff8000559165 : mov eax, dword ptr [rip + 0x50fac5] ; pop rbp ; jmp rax
0xffffff8000559175 : mov eax, dword ptr [rip + 0x50facd] ; pop rbp ; jmp rax
0xffffff80005590d5 : mov eax, dword ptr [rip + 0x50fb0d] ; pop rbp ; jmp rax
0xffffff80005590c5 : mov eax, dword ptr [rip + 0x50fb15] ; pop rbp ; jmp rax
0xffffff80003c71e5 : mov eax, dword ptr [rip + 0x692c65] ; pop rbp ; ret
0xffffff80003c7175 : mov eax, dword ptr [rip + 0x692cdd] ; pop rbp ; ret
0xffffff80003ad52d : mov eax, dword ptr [rip + 0x6a3b4d] ; call qword ptr [rax]
0xffffff80003acfcf : mov eax, dword ptr [rip + 0x6a40ab] ; call qword ptr [rax]
0xffffff80003ab661 : mov eax, dword ptr [rip + 0x6a5c21] ; pop rbp ; ret
0xffffff800039ee3c : mov eax, dword ptr [rip + 0x6b223e] ; call qword ptr [rax]
0xffffff800039ebfa : mov eax, dword ptr [rip + 0x6b2480] ; call qword ptr [rax]
0xffffff8000369cf4 : mov eax, dword ptr [rip + 0x6c31d6] ; pop rbp ; ret
0xffffff8000369034 : mov eax, dword ptr [rip + 0x6c3e92] ; pop rbp ; ret
0xffffff80003a9198 : mov eax, dword ptr [rip + 0x728a2a] ; call rax
0xffffff80003a31b4 : mov eax, dword ptr [rip + 0x72e7a2] ; pop rbp ; ret
0xffffff800039aa13 : mov eax, dword ptr [rip + 0x736f1f] ; pop rbp ; ret
0xffffff8000394e44 : mov eax, dword ptr [rip + 0x73c466] ; pop rbp ; ret
0xffffff80003c7f84 : mov eax, dword ptr [rip + 0x73dd92] ; pop rbp ; ret
0xffffff8000390734 : mov eax, dword ptr [rip + 0x740b2e] ; pop rbp ; ret
0xffffff80003c21d4 : mov eax, dword ptr [rip + 0x742e66] ; pop rbp ; ret
0xffffff80002e9794 : mov eax, dword ptr [rip + 0x742ffe] ; pop rbp ; ret
0xffffff80003ba7d4 : mov eax, dword ptr [rip + 0x74708e] ; pop rbp ; ret
0xffffff80003907b1 : mov eax, dword ptr [rip + 0x75b391] ; pop rbp ; ret
0xffffff80003a38b5 : mov eax, dword ptr [rip + 0x75b9ed] ; pop rbp ; ret
0xffffff80003a2d65 : mov eax, dword ptr [rip + 0x75bd65] ; pop rbp ; ret
0xffffff800036b084 : mov eax, dword ptr [rip + 0x76433e] ; pop rbp ; ret
0xffffff8000369e34 : mov eax, dword ptr [rip + 0x765532] ; pop rbp ; ret
0xffffff8000368384 : mov eax, dword ptr [rip + 0x766526] ; pop rbp ; ret
0xffffff8000368304 : mov eax, dword ptr [rip + 0x7665c2] ; pop rbp ; ret
0xffffff8000368284 : mov eax, dword ptr [rip + 0x766646] ; pop rbp ; ret
0xffffff8000367fe4 : mov eax, dword ptr [rip + 0x7668da] ; pop rbp ; ret
0xffffff8000367f24 : mov eax, dword ptr [rip + 0x766996] ; pop rbp ; ret
0xffffff8000367964 : mov eax, dword ptr [rip + 0x766f42] ; pop rbp ; ret
0xffffff8000393f94 : mov eax, dword ptr [rip + 0x76b836] ; call qword ptr [rax]
0xffffff8000366dc4 : mov eax, dword ptr [rip + 0x784d92] ; pop rbp ; ret
0xffffff8000366eb5 : mov eax, dword ptr [rip + 0x79824d] ; pop rbp ; ret
0xffffff8000366ea5 : mov eax, dword ptr [rip + 0x798265] ; pop rbp ; ret
0xffffff800028f015 : mov eax, dword ptr [rip + 0x79d01d] ; pop rbp ; jmp rax
0xffffff800034305b : mov eax, dword ptr [rip + 0x7b6967] ; xor edi, edi ; call rax
0xffffff80002ed3e4 : mov eax, dword ptr [rip + 0x7d1e4e] ; pop rbp ; ret
0xffffff80002da694 : mov eax, dword ptr [rip + 0x813ca6] ; pop rbp ; ret
0xffffff80002c9ed4 : mov eax, dword ptr [rip + 0x823dae] ; pop rbp ; ret
0xffffff80002c9baa : mov eax, dword ptr [rip + 0x823fa0] ; pop rbp ; ret
0xffffff80002c9bc5 : mov eax, dword ptr [rip + 0x823ff5] ; pop rbp ; ret
0xffffff80002c9bbc : mov eax, dword ptr [rip + 0x823ff6] ; pop rbp ; ret
0xffffff80002c9bb3 : mov eax, dword ptr [rip + 0x823ff7] ; pop rbp ; ret
0xffffff80002c9bf2 : mov eax, dword ptr [rip + 0x824088] ; pop rbp ; ret
0xffffff80002c9be9 : mov eax, dword ptr [rip + 0x824089] ; pop rbp ; ret
0xffffff80002c9be0 : mov eax, dword ptr [rip + 0x82408a] ; pop rbp ; ret
0xffffff80002c9bd7 : mov eax, dword ptr [rip + 0x82408b] ; pop rbp ; ret
0xffffff80002c9bce : mov eax, dword ptr [rip + 0x82408c] ; pop rbp ; ret
0xffffff8000262b24 : mov eax, dword ptr [rip + 0x83d25a] ; pop rbp ; ret
0xffffff8000262985 : mov eax, dword ptr [rip + 0x83d3fd] ; pop rbp ; ret
0xffffff800025ebf4 : mov eax, dword ptr [rip + 0x8880ca] ; pop rbp ; ret
0xffffff800025ebe4 : mov eax, dword ptr [rip + 0x8880d6] ; pop rbp ; ret
0xffffff8000767900 : mov eax, dword ptr [rsi + 0x10] ; mov qword ptr [rdi + 0x58], rax ; pop rbp ; ret
0xffffff8000889e4c : mov eax, dword ptr [rsi + 0x130] ; pop rbp ; ret
0xffffff80007f020c : mov eax, dword ptr [rsi + 0x18] ; mov esi, eax ; pop rbp ; jmp r11
0xffffff80007f018d : mov eax, dword ptr [rsi + 0x18] ; mov rsi, rax ; pop rbp ; jmp r11
0xffffff80003893fe : mov eax, dword ptr [rsi + 0x20] ; call rdi
0xffffff80008850bc : mov eax, dword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff80008be535 : mov eax, dword ptr [rsi + 0x38] ; mov qword ptr [rsp], rax ; call r10
0xffffff80007b5765 : mov eax, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x78], rax ; pop rbp ; ret
0xffffff80005e2252 : mov eax, dword ptr [rsi + 0xb8] ; mov rdi, r14 ; call rax
0xffffff800028e144 : mov eax, dword ptr [rsi + 4] ; sub eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028e0fc : mov eax, dword ptr [rsi + 8] ; sub eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800052028d : mov eax, dword ptr [rsi + r8] ; bswap eax ; pop rbp ; ret
0xffffff800052028e : mov eax, dword ptr [rsi + rax] ; bswap eax ; pop rbp ; ret
0xffffff800071ead7 : mov eax, dword ptr [rsi + rcx] ; pop rbp ; ret
0xffffff800085cc76 : mov eax, dword ptr [rsi + rdi*4] ; sub eax, dword ptr [rdx + rdi*4] ; pop rbp ; ret
0xffffff80007a9661 : mov eax, dword ptr [rsi - 4] ; pop rbp ; ret
0xffffff800029ed25 : mov eax, dword ptr [rsi] ; mov byte ptr [rax], dil ; inc qword ptr [rsi] ; pop rbp ; ret
0xffffff8000526844 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x38], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000582566 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800085818d : mov eax, dword ptr [rsi] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000327432 : mov eax, dword ptr [rsi] ; mov qword ptr [rax + 8], rcx ; pop rbp ; ret
0xffffff800066f51c : mov eax, dword ptr [rsp + 4] ; jmp 0xffffff800066f54e
0xffffff800032e934 : mov eax, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0xffffff80002cf320 : mov eax, dword ptr [rsp] ; jmp 0xffffff80002cef23
0xffffff800082d741 : mov eax, dword ptr [rsp] ; test rax, rax ; je 0xffffff800082d758 ; call rax
0xffffff8000366e74 : mov eax, dword ptr gs:[0x18] ; pop rbp ; ret
0xffffff8000366e14 : mov eax, dword ptr gs:[0x1c] ; pop rbp ; ret
0xffffff80005cb95f : mov eax, eax ; add qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff80007b03ef : mov eax, eax ; add rax, rdi ; pop rbp ; ret
0xffffff80007a574a : mov eax, eax ; call r15
0xffffff800087c2c9 : mov eax, eax ; call rbx
0xffffff80008331c3 : mov eax, eax ; jne 0xffffff80008331a5 ; pop rbp ; ret
0xffffff80002a63df : mov eax, eax ; mov qword ptr [rbp - 0x68], rax ; mov r10, rax ; jmp 0xffffff80002a6414
0xffffff80004ab110 : mov eax, eax ; mov qword ptr [rdi], rax ; mov rax, r9 ; pop rbp ; ret
0xffffff80003a833f : mov eax, eax ; or rax, rdx ; pop rbp ; ret
0xffffff800049e4b5 : mov eax, eax ; pop rbp ; ret
0xffffff8000492238 : mov eax, eax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800054f1ba : mov eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b0133 : mov eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80003ba726 : mov eax, eax ; shl rax, 0xc ; pop rbp ; ret
0xffffff80006f0376 : mov eax, ebp ; call 0xffffff80004fc584
0xffffff80008ef0fb : mov eax, ebp ; call rbx
0xffffff80002a635b : mov eax, ebp ; je 0xffffff80002a638b ; mov rbx, r8 ; call rcx
0xffffff800074ef9c : mov eax, ebp ; mov r15, r9 ; call r10
0xffffff80007541b3 : mov eax, ebp ; ret
0xffffff800065fe92 : mov eax, ebp ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80002c9c8a : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000366e04 : mov eax, ebx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0xffffff8000684301 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff8000793674 : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0xffffff8000272ba6 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff800025315a : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800066dc8c : mov eax, ebx ; call 0xffffff800028e4a5
0xffffff8000696507 : mov eax, ebx ; call 0xffffff80002c53a5
0xffffff80006f02d7 : mov eax, ebx ; call 0xffffff80004fc584
0xffffff8000848ca1 : mov eax, ebx ; call 0xffffff800084f348
0xffffff80008bcff8 : mov eax, ebx ; call r14
0xffffff800051bc90 : mov eax, ebx ; call rax
0xffffff800027fd02 : mov eax, ebx ; jmp 0xffffff800027fccb
0xffffff80008bd713 : mov eax, ebx ; mov r9, r10 ; call r14
0xffffff80008bd338 : mov eax, ebx ; mov r9, r10 ; call r15
0xffffff800039ff33 : mov eax, ebx ; mov rbx, qword ptr [rbp - 0x30] ; mov edx, dword ptr [rbp - 0x38] ; jmp rax
0xffffff8000698d8f : mov eax, ebx ; mov rdx, r15 ; call 0xffffff80002c53a8
0xffffff80002ade86 : mov eax, ebx ; pop rbp ; ret
0xffffff80006901c0 : mov eax, ebx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800025d1ba : mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003bc0a4 : mov eax, ecx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xor bh, bh ; ret
0xffffff80002db4e8 : mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800025b93d : mov eax, ecx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff80002b5b50 : mov eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800089891d : mov eax, ecx ; call r10
0xffffff8000637cae : mov eax, ecx ; je 0xffffff8000637cbb ; xor eax, eax ; pop rbp ; ret
0xffffff80006a886c : mov eax, ecx ; jmp 0xffffff80006a8888
0xffffff80008323bc : mov eax, ecx ; jmp 0xffffff80008323ca
0xffffff80004fa6ee : mov eax, ecx ; jne 0xffffff80004fa6e5 ; pop rbp ; ret
0xffffff800059f71e : mov eax, ecx ; jne 0xffffff800059f715 ; pop rbp ; ret
0xffffff8000769b4e : mov eax, ecx ; jne 0xffffff8000769b45 ; pop rbp ; ret
0xffffff80008cb8ae : mov eax, ecx ; jne 0xffffff80008cb739 ; pop rbp ; ret
0xffffff8000328122 : mov eax, ecx ; mov qword ptr [r9 + 0x10], rax ; pop rbp ; ret
0xffffff80005bf477 : mov eax, ecx ; mov qword ptr [r9 + 0x20], rax ; pop rbp ; ret
0xffffff80005b1d67 : mov eax, ecx ; mov qword ptr [r9 + 0x28], rax ; pop rbp ; ret
0xffffff80005821a7 : mov eax, ecx ; mov qword ptr [r9 + 0x40], rax ; pop rbp ; ret
0xffffff80005ebb17 : mov eax, ecx ; mov qword ptr [r9 + 0x68], rax ; pop rbp ; ret
0xffffff800057fe17 : mov eax, ecx ; mov qword ptr [r9 + 0x78], rax ; pop rbp ; ret
0xffffff80008bbfff : mov eax, ecx ; mov r9, rax ; call r10
0xffffff80005b0130 : mov eax, ecx ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0xffffff800028e84b : mov eax, ecx ; mov rcx, rdx ; jne 0xffffff800028e848 ; pop rbp ; ret
0xffffff80004a53cb : mov eax, ecx ; mov rcx, rdx ; jne 0xffffff80004a53c8 ; pop rbp ; ret
0xffffff80007582bd : mov eax, ecx ; pop rbp ; jmp rax
0xffffff8000250030 : mov eax, ecx ; pop rbp ; ret
0xffffff8000836a0f : mov eax, ecx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002fd348 : mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083ebdb : mov eax, ecx ; pop rbx ; pop rbp ; ret
0xffffff80005c0b12 : mov eax, ecx ; shr eax, 0x10 ; xor eax, ecx ; pop rbp ; ret
0xffffff80002c8089 : mov eax, ecx ; sub rax, qword ptr [rsi] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff80008158b8 : mov eax, ecx ; test r8d, r8d ; sete al ; pop rbp ; ret
0xffffff800027c7d3 : mov eax, edi ; call 0xffffff80002689e4
0xffffff8000272d78 : mov eax, edi ; call 0xffffff8000272f49
0xffffff80006674cc : mov eax, edi ; call 0xffffff800028e4a5
0xffffff800042c0a6 : mov eax, edi ; call 0xffffff8000508344
0xffffff80005d363f : mov eax, edi ; call 0xffffff80005d2698
0xffffff80005d53ff : mov eax, edi ; call 0xffffff80005d49e8
0xffffff80008bd697 : mov eax, edi ; call r14
0xffffff80006586f7 : mov eax, edi ; call r9
0xffffff800060631a : mov eax, edi ; div ecx ; mov eax, edx ; pop rbp ; ret
0xffffff80006c942a : mov eax, edi ; inc dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret
0xffffff80007aef42 : mov eax, edi ; je 0xffffff80007aef4f ; xor eax, eax ; pop rbp ; ret
0xffffff8000393522 : mov eax, edi ; mov cr3, rax ; pop rbp ; ret
0xffffff8000719055 : mov eax, edi ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff800030fc93 : mov eax, edi ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff80008bd074 : mov eax, edi ; mov r9, r10 ; call r14
0xffffff800066a47d : mov eax, edi ; mov r9, r13 ; call 0xffffff800028e4a8
0xffffff800049fb25 : mov eax, edi ; mov rdi, rsi ; pop rbp ; jmp rax
0xffffff80006a2432 : mov eax, edi ; mov rdx, rbx ; call 0xffffff80002c53a8
0xffffff800025eeb4 : mov eax, edi ; pop rbp ; ret
0xffffff80007b735d : mov eax, edi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a6d3 : mov eax, edi ; ret
0xffffff800066a60b : mov eax, edx ; cmovb eax, ecx ; test ecx, ecx ; cmove eax, edx ; jmp 0xffffff800066a626
0xffffff80007aefde : mov eax, edx ; je 0xffffff80007aefeb ; xor eax, eax ; pop rbp ; ret
0xffffff8000269f94 : mov eax, edx ; jne 0xffffff8000269f85 ; pop rbp ; ret
0xffffff80008bd033 : mov eax, edx ; mov r9, r11 ; call r14
0xffffff80008bd6d5 : mov eax, edx ; mov r9, r15 ; call r14
0xffffff8000572a14 : mov eax, edx ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0xffffff80003669d5 : mov eax, edx ; neg eax ; test r8d, r8d ; cmove eax, edx ; pop rbp ; ret
0xffffff80002db463 : mov eax, edx ; pop rbp ; ret
0xffffff800054d8ba : mov eax, edx ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800049cbf7 : mov eax, edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003934ac : mov eax, edx ; ret
0xffffff80002c9ba1 : mov eax, edx ; shr rax, 0x12 ; pop rbp ; ret
0xffffff8000448fd2 : mov eax, esi ; add qword ptr [rdi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000815857 : mov eax, esi ; add rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800075027a : mov eax, esi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000366ab1 : mov eax, esi ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80008bd2ba : mov eax, esi ; call r15
0xffffff800083719a : mov eax, esi ; call r9
0xffffff80008f5ac7 : mov eax, esi ; call rax
0xffffff80008ef16e : mov eax, esi ; call rbx
0xffffff800072bf3d : mov eax, esi ; jb 0xffffff800072bf06 ; pop rbx ; pop rbp ; ret
0xffffff8000393480 : mov eax, esi ; lock xadd dword ptr [rdi], eax ; add eax, esi ; ret
0xffffff8000555dbe : mov eax, esi ; mov dword ptr [rdi + 0xdc], eax ; pop rbp ; ret
0xffffff80003a8c79 : mov eax, esi ; mov edx, edi ; wrmsr ; pop rbp ; ret
0xffffff800074f0c0 : mov eax, esi ; mov qword ptr [rbp - 0x30], r9 ; mov r9, rbx ; call rax
0xffffff800033d529 : mov eax, esi ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800031f1e6 : mov eax, esi ; pop rbp ; ret
0xffffff80002842a0 : mov eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a8c3c : mov eax, esi ; wrmsr ; pop rbp ; ret
0xffffff80008e3a72 : mov eax, esp ; call 0xffffff80004efce4
0xffffff8000636621 : mov eax, esp ; call 0xffffff80007c28a4
0xffffff80004da041 : mov eax, esp ; call rbx
0xffffff800074acb8 : mov eax, esp ; mov r9, r15 ; call rax
0xffffff80006a3095 : mov eax, esp ; mov rdx, rbx ; call 0xffffff80002c53a8
0xffffff800054d8b9 : mov eax, r10d ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002ade85 : mov eax, r11d ; pop rbp ; ret
0xffffff800028429f : mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005cb95e : mov eax, r8d ; add qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff80008331c2 : mov eax, r8d ; jne 0xffffff80008331a6 ; pop rbp ; ret
0xffffff800049e4b4 : mov eax, r8d ; pop rbp ; ret
0xffffff8000492237 : mov eax, r8d ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800080d10b : mov eax, r9d ; pop rbp ; ret
0xffffff8000836a0e : mov eax, r9d ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000691a89 : mov eax, ss ; dec dword ptr [rax + 1] ; ret
0xffffff8000390b7a : mov ebp, 0x148 ; call rax
0xffffff8000748875 : mov ebp, 0x16 ; mov r15d, ebx ; jmp rax
0xffffff800038149a : mov ebp, 0x164 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff80006b9a2a : mov ebp, 0x1b8ff ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b4579a : mov ebp, 0x21490ff9 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800061f0d7 : mov ebp, 0x264 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000567b6f : mov ebp, 0x2a ; jmp rcx
0xffffff80006bc554 : mov ebp, 0x3111ebff ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x322a
0xffffff800080d9ef : mov ebp, 0x31ffa807 ; div dh ; ret
0xffffff800053c3a8 : mov ebp, 0x39480059 ; ret
0xffffff80008f6932 : mov ebp, 0x415c415b ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff800039113f : mov ebp, 0x48000191 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80007f0027 : mov ebp, 0x48003447 ; mov eax, dword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff800070c168 : mov ebp, 0x4d0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff80008ceb37 : mov ebp, 0x5d002688 ; ret
0xffffff80008ab157 : mov ebp, 0x5d0028be ; ret
0xffffff80008a6277 : mov ebp, 0x5d00290c ; ret
0xffffff80008918e7 : mov ebp, 0x5d002a53 ; ret
0xffffff800088a8f7 : mov ebp, 0x5d002ac2 ; ret
0xffffff8000830a87 : mov ebp, 0x5d003049 ; ret
0xffffff800082ec37 : mov ebp, 0x5d003067 ; ret
0xffffff80008162d7 : mov ebp, 0x5d0031ef ; ret
0xffffff8000668ea7 : mov ebp, 0x72004b88 ; or esp, dword ptr [rsi - 0x77] ; ret 0xc166
0xffffff80005480cf : mov ebp, 0x8348fff0 ; ret
0xffffff80004ac6bf : mov ebp, 0x89000060 ; ret
0xffffff800029f76f : mov ebp, 0x89000073 ; ret
0xffffff80003ded8f : mov ebp, 0x8900069e ; ret
0xffffff8000771979 : mov ebp, 0x890fe183 ; ret 0xeac1
0xffffff80006bbb4a : mov ebp, 0x8948ffbd ; ret
0xffffff800050f22e : mov ebp, 0x8948ffd8 ; ret 0x8948
0xffffff800046cb83 : mov ebp, 0x8948ffe6 ; ret
0xffffff800045cb44 : mov ebp, 0x8948ffe7 ; ret
0xffffff80007de477 : mov ebp, 0x8948fff9 ; ret
0xffffff8000866236 : mov ebp, 0x8948fffa ; ret
0xffffff80007c8901 : mov ebp, 0x8948fffe ; ret
0xffffff8000258858 : mov ebp, 0x8948ffff ; ret
0xffffff8000285ccf : mov ebp, 0x89ffff2d ; ret
0xffffff8000b47947 : mov ebp, 0xb7360bda ; cli ; jmp rdi
0xffffff800086d5a3 : mov ebp, 0xbb000001 ; ret 2
0xffffff80008b9638 : mov ebp, 0xbd410027 ; ret 2
0xffffff80003a925f : mov ebp, 0xbe000002 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0xffffff80002fdb44 : mov ebp, 0xbe0064ab ; ret 0xc
0xffffff8000626dad : mov ebp, 0xc ; jmp 0xffffff8000626d8e
0xffffff800067298b : mov ebp, 0xc0310033 ; call 0xffffff800029e858
0xffffff80007b3f3c : mov ebp, 0xd88948ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000491b64 : mov ebp, 0xdbffffc3 ; ret
0xffffff80008a12ba : mov ebp, 0xe8014c00 ; jmp rax
0xffffff8000586b20 : mov ebp, 0xf6000000 ; ret 0x7510
0xffffff80005f883e : mov ebp, 0xff480beb ; ret 0x6348
0xffffff80005486d0 : mov ebp, 0xff48fff0 ; ret
0xffffff800042b7ca : mov ebp, 0xfffff7d8 ; call 0xffffff80004c79e7
0xffffff80006e9bbf : mov ebp, 0xfffff964 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b41
0xffffff80004b0aa4 : mov ebp, 0xfffff97c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff80006e7eaa : mov ebp, 0xfffff9b0 ; call 0xffffff80006e40c7
0xffffff80004b1df5 : mov ebp, 0xfffff9f0 ; call 0xffffff800010e087
0xffffff8000757658 : mov ebp, 0xfffffa50 ; mov rsi, r15 ; call r12
0xffffff80007d9fa5 : mov ebp, 0xfffffab8 ; mov rdx, r15 ; call rax
0xffffff80004090de : mov ebp, 0xfffffb48 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3145
0xffffff80007d96a1 : mov ebp, 0xfffffb8c ; call 0xffffff80007b58b7
0xffffff8000426b5a : mov ebp, 0xfffffb98 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff80004345f6 : mov ebp, 0xfffffc68 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff8000b403dc : mov ebp, 0xfffffcc0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0xffffff80004261ff : mov ebp, 0xfffffcd8 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff8000432200 : mov ebp, 0xfffffcf0 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff8000771401 : mov ebp, 0xfffffd20 ; call 0xffffff8000392a48
0xffffff8000771427 : mov ebp, 0xfffffd20 ; call 0xffffff8000393048
0xffffff800033e55a : mov ebp, 0xfffffd2c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0xffffff80006148a5 : mov ebp, 0xfffffd38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000770323 : mov ebp, 0xfffffd38 ; call 0xffffff8000392a48
0xffffff800077038b : mov ebp, 0xfffffd38 ; call 0xffffff8000393048
0xffffff80005e7ba1 : mov ebp, 0xfffffd58 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x58b
0xffffff8000595adc : mov ebp, 0xfffffd7c ; add dword ptr [rbp - 0x77], ecx ; ret
0xffffff800045c39a : mov ebp, 0xfffffdc8 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff800060696a : mov ebp, 0xfffffe00 ; call rcx
0xffffff8000516aea : mov ebp, 0xfffffe20 ; mov rdx, r12 ; call rax
0xffffff80003d33e1 : mov ebp, 0xfffffe38 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff8000403aee : mov ebp, 0xfffffe58 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff80006594e7 : mov ebp, 0xfffffe58 ; call qword ptr [rax]
0xffffff800060c7f3 : mov ebp, 0xfffffe80 ; call rcx
0xffffff8000b40139 : mov ebp, 0xfffffe88 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0xffffff8000b403f6 : mov ebp, 0xfffffe88 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x844
0xffffff80005e2117 : mov ebp, 0xfffffe88 ; call rax
0xffffff8000555242 : mov ebp, 0xfffffe94 ; mov rsi, r14 ; call r15
0xffffff80006a1259 : mov ebp, 0xfffffea8 ; call rax
0xffffff800044ff10 : mov ebp, 0xfffffeb8 ; mov rdx, r12 ; call rax
0xffffff80007c7b49 : mov ebp, 0xfffffec8 ; call 0xffffff80007d3e27
0xffffff8000439697 : mov ebp, 0xfffffed4 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4566
0xffffff8000683223 : mov ebp, 0xfffffed8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d83
0xffffff8000607db4 : mov ebp, 0xfffffed8 ; call rcx
0xffffff800046f67a : mov ebp, 0xfffffee8 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff800055db54 : mov ebp, 0xfffffee8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc220
0xffffff80005fc266 : mov ebp, 0xfffffee8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb70f
0xffffff80003ee7ac : mov ebp, 0xfffffee8 ; or byte ptr [rdi], cl ; xchg eax, edx ; ret 0xc085
0xffffff8000754a8d : mov ebp, 0xfffffef8 ; call rcx
0xffffff800035aa3f : mov ebp, 0xffffff0c ; add dword ptr [rcx], ebx ; fisttp dword ptr [rcx] ; ret
0xffffff800044108b : mov ebp, 0xffffff18 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff800070f622 : mov ebp, 0xffffff18 ; call 0xffffff80004bb927
0xffffff8000676176 : mov ebp, 0xffffff1c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b4c
0xffffff8000668212 : mov ebp, 0xffffff20 ; call rax
0xffffff80003d99de : mov ebp, 0xffffff28 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff8000634160 : mov ebp, 0xffffff30 ; call 0xffffff80007d0467
0xffffff800065b332 : mov ebp, 0xffffff30 ; mov edx, r12d ; call rax
0xffffff80004eb43a : mov ebp, 0xffffff30 ; mov rdx, r15 ; call rax
0xffffff80004c1ca4 : mov ebp, 0xffffff38 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xd789
0xffffff80006521ac : mov ebp, 0xffffff38 ; call qword ptr [r15]
0xffffff80006521e3 : mov ebp, 0xffffff38 ; call qword ptr [rbx]
0xffffff80004731c6 : mov ebp, 0xffffff48 ; call 0xffffff80007af417
0xffffff8000651a87 : mov ebp, 0xffffff48 ; call qword ptr [r15]
0xffffff80006730da : mov ebp, 0xffffff48 ; jmp rdi
0xffffff800065154e : mov ebp, 0xffffff48 ; mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [r15]
0xffffff80008010b9 : mov ebp, 0xffffff4c ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff80006dd65d : mov ebp, 0xffffff58 ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff800041929a : mov ebp, 0xffffff68 ; add al, 0xf ; xchg eax, edx ; ret 0xc085
0xffffff80004e0334 : mov ebp, 0xffffff70 ; call 0xffffff800010e148
0xffffff8000389cb8 : mov ebp, 0xffffff78 ; call r12
0xffffff8000594808 : mov ebp, 1 ; jmp rdx
0xffffff8000594833 : mov ebp, 1 ; jmp rsi
0xffffff80002c6bb6 : mov ebp, 4 ; jmp rax
0xffffff800083ef18 : mov ebp, dword ptr [rax + rax - 0x7cbf0000] ; ret
0xffffff80003164b4 : mov ebp, dword ptr [rbp - 0x58] ; mov rdi, r13 ; call 0xffffff8000392798
0xffffff80004294e0 : mov ebp, dword ptr [rbp] ; jmp 0xffffff80004289aa
0xffffff80004cba46 : mov ebp, dword ptr [rcx + rcx - 0x7eb80000] ; ret
0xffffff800075ff11 : mov ebp, dword ptr [rcx] ; ret
0xffffff800076e3f5 : mov ebp, dword ptr [rdi + 0x20] ; mov rdi, r13 ; call 0xffffff8000392939
0xffffff80005e76b1 : mov ebp, dword ptr [rip - 0x76b80000] ; fucomip st(0) ; ret
0xffffff8000772292 : mov ebp, eax ; mov rdi, r12 ; call 0xffffff8000393048
0xffffff800076e00f : mov ebp, eax ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff8000605999 : mov ebp, eax ; test r13, r13 ; jne 0xffffff8000605998 ; jmp 0xffffff800060596c
0xffffff80004b9e59 : mov ebp, ebp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80005fff8e : mov ebp, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076dfe7 : mov ebp, ecx ; mov rdi, rbx ; call 0xffffff8000392a48
0xffffff8000896710 : mov ebp, edx ; sub dword ptr [rax], eax ; js 0xffffff800089677a ; pop r14 ; pop rbp ; ret
0xffffff800067fcb2 : mov ebp, es ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000796202 : mov ebp, esp ; add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80002c80a2 : mov ebp, esp ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff8000495752 : mov ebp, esp ; add qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80006d64d2 : mov ebp, esp ; and byte ptr [rdi + 0x42], 0xf7 ; pop rbp ; ret
0xffffff80004d26b2 : mov ebp, esp ; and edi, 0xf ; mov eax, edi ; pop rbp ; ret
0xffffff8000652362 : mov ebp, esp ; cmp rdi, 1 ; sbb eax, eax ; pop rbp ; ret
0xffffff800080eea2 : mov ebp, esp ; cmp rdi, rsi ; sete al ; pop rbp ; ret
0xffffff80008135c2 : mov ebp, esp ; cmp rsi, rdi ; sete al ; pop rbp ; ret
0xffffff800040c872 : mov ebp, esp ; dec dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800040c7c2 : mov ebp, esp ; inc dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff8000875f82 : mov ebp, esp ; inc dword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff8000512e52 : mov ebp, esp ; inc dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff80007f4b82 : mov ebp, esp ; inc dword ptr [rdx] ; xor eax, eax ; pop rbp ; ret
0xffffff80004953c2 : mov ebp, esp ; inc qword ptr [rdi] ; pop rbp ; ret
0xffffff8000418584 : mov ebp, esp ; jmp 0xffffff800041886e
0xffffff8000751de2 : mov ebp, esp ; lea rax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000756b72 : mov ebp, esp ; lea rax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c2 : mov ebp, esp ; lea rax, [rdi + 0x68] ; pop rbp ; ret
0xffffff8000802a82 : mov ebp, esp ; lfence ; pop rbp ; ret
0xffffff800080df52 : mov ebp, esp ; lock xadd dword ptr [rsi], edi ; mov eax, edi ; pop rbp ; ret
0xffffff8000864222 : mov ebp, esp ; mov al, 1 ; pop rbp ; ret
0xffffff800088e882 : mov ebp, esp ; mov al, byte ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800088f592 : mov ebp, esp ; mov al, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff80008d5cc2 : mov ebp, esp ; mov al, byte ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff80008d5c12 : mov ebp, esp ; mov al, byte ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff80008d5cf2 : mov ebp, esp ; mov al, byte ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff80008d5d12 : mov ebp, esp ; mov al, byte ptr [rdi + 0xb9] ; pop rbp ; ret
0xffffff8000813592 : mov ebp, esp ; mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff800088e872 : mov ebp, esp ; mov byte ptr [rdi + 0x28], 0 ; pop rbp ; ret
0xffffff80008a3272 : mov ebp, esp ; mov byte ptr [rdi + 0x68], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff80003a6232 : mov ebp, esp ; mov byte ptr [rdi], 0 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000568bd2 : mov ebp, esp ; mov dword ptr [r9], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80007f07b2 : mov ebp, esp ; mov dword ptr [rdi + 0x11c], esi ; pop rbp ; ret
0xffffff8000588ea2 : mov ebp, esp ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff8000588eb2 : mov ebp, esp ; mov dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff8000815602 : mov ebp, esp ; mov dword ptr [rdi + 0x20], esi ; mov eax, esi ; pop rbp ; ret
0xffffff80007961f2 : mov ebp, esp ; mov dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80003676c2 : mov ebp, esp ; mov dword ptr [rdi + 0x390], esi ; pop rbp ; ret
0xffffff80007f06a2 : mov ebp, esp ; mov dword ptr [rdi + 0x398], esi ; pop rbp ; ret
0xffffff80007f0892 : mov ebp, esp ; mov dword ptr [rdi + 0x39c], esi ; pop rbp ; ret
0xffffff80007f0742 : mov ebp, esp ; mov dword ptr [rdi + 0x3b8], esi ; pop rbp ; ret
0xffffff80007f07e2 : mov ebp, esp ; mov dword ptr [rdi + 0x40], esi ; pop rbp ; ret
0xffffff80004b3bf2 : mov ebp, esp ; mov dword ptr [rdi + 0x44], esi ; pop rbp ; ret
0xffffff80004b3bd2 : mov ebp, esp ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80004b3c12 : mov ebp, esp ; mov dword ptr [rdi + 0x4c], esi ; pop rbp ; ret
0xffffff800089fb12 : mov ebp, esp ; mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff80004f9372 : mov ebp, esp ; mov dword ptr [rdi + 0x80], esi ; pop rbp ; ret
0xffffff80004b3c42 : mov ebp, esp ; mov dword ptr [rdi + 0xc8], esi ; pop rbp ; ret
0xffffff80004b3c52 : mov ebp, esp ; mov dword ptr [rdi + 0xcc], esi ; pop rbp ; ret
0xffffff80002f7e62 : mov ebp, esp ; mov dword ptr [rdi], 0 ; pop rbp ; ret
0xffffff80003b0fa2 : mov ebp, esp ; mov dword ptr [rip + 0x6a1332], edi ; pop rbp ; ret
0xffffff800037c6f2 : mov ebp, esp ; mov dword ptr [rip + 0x6b08ce], edi ; pop rbp ; ret
0xffffff8000369042 : mov ebp, esp ; mov dword ptr [rip + 0x6c3e82], edi ; pop rbp ; ret
0xffffff80003b1bf2 : mov ebp, esp ; mov dword ptr [rip + 0x74fc1e], edi ; pop rbp ; ret
0xffffff80002af992 : mov ebp, esp ; mov dword ptr [rip + 0x77c8ca], edi ; pop rbp ; ret
0xffffff8000297db2 : mov ebp, esp ; mov dword ptr [rip + 0x79432a], edi ; pop rbp ; ret
0xffffff800088c522 : mov ebp, esp ; mov dword ptr [rsi + 0x2c], edx ; pop rbp ; ret
0xffffff800079a812 : mov ebp, esp ; mov dword ptr [rsi], 0 ; pop rbp ; ret
0xffffff80006564c2 : mov ebp, esp ; mov eax, 0x10 ; pop rbp ; ret
0xffffff800084f542 : mov ebp, esp ; mov eax, 0x1000 ; pop rbp ; ret
0xffffff800079dcb2 : mov ebp, esp ; mov eax, 0x13 ; pop rbp ; ret
0xffffff8000797022 : mov ebp, esp ; mov eax, 0x138 ; pop rbp ; ret
0xffffff80004ce962 : mov ebp, esp ; mov eax, 0x16 ; pop rbp ; ret
0xffffff8000766732 : mov ebp, esp ; mov eax, 0x19 ; pop rbp ; ret
0xffffff80007117a2 : mov ebp, esp ; mov eax, 0x1e ; pop rbp ; ret
0xffffff80005664c2 : mov ebp, esp ; mov eax, 0x20 ; pop rbp ; ret
0xffffff800039b882 : mov ebp, esp ; mov eax, 0x200 ; pop rbp ; ret
0xffffff800065b802 : mov ebp, esp ; mov eax, 0x240 ; pop rbp ; ret
0xffffff8000622df2 : mov ebp, esp ; mov eax, 0x268 ; pop rbp ; ret
0xffffff8000622e02 : mov ebp, esp ; mov eax, 0x2b8 ; pop rbp ; ret
0xffffff80003bba02 : mov ebp, esp ; mov eax, 0x2d ; pop rbp ; ret
0xffffff8000285972 : mov ebp, esp ; mov eax, 0x2e ; pop rbp ; ret
0xffffff80007b01e2 : mov ebp, esp ; mov eax, 0x4000000 ; pop rbp ; ret
0xffffff800077c2a2 : mov ebp, esp ; mov eax, 0x4e ; pop rbp ; ret
0xffffff8000797032 : mov ebp, esp ; mov eax, 0x58 ; pop rbp ; ret
0xffffff8000657a72 : mov ebp, esp ; mov eax, 0x600 ; pop rbp ; ret
0xffffff8000526b42 : mov ebp, esp ; mov eax, 0x66 ; pop rbp ; ret
0xffffff800065a4a2 : mov ebp, esp ; mov eax, 0x71 ; pop rbp ; ret
0xffffff800033f402 : mov ebp, esp ; mov eax, 0x90 ; pop rbp ; ret
0xffffff8000797252 : mov ebp, esp ; mov eax, 0xa ; pop rbp ; ret
0xffffff80008455f2 : mov ebp, esp ; mov eax, 0xa9 ; pop rbp ; ret
0xffffff8000366e82 : mov ebp, esp ; mov eax, 0xc ; pop rbp ; ret
0xffffff80007960c2 : mov ebp, esp ; mov eax, 0xe0 ; pop rbp ; ret
0xffffff80008b3c02 : mov ebp, esp ; mov eax, 0xe0000001 ; pop rbp ; ret
0xffffff800085b7b2 : mov ebp, esp ; mov eax, 0xe00002c7 ; pop rbp ; ret
0xffffff8000310e42 : mov ebp, esp ; mov eax, 1 ; pop rbp ; ret
0xffffff80003bb4c2 : mov ebp, esp ; mov eax, 3 ; pop rbp ; ret
0xffffff80002a0b42 : mov ebp, esp ; mov eax, 4 ; pop rbp ; ret
0xffffff800029c5d2 : mov ebp, esp ; mov eax, 5 ; pop rbp ; ret
0xffffff80002cee82 : mov ebp, esp ; mov eax, 6 ; pop rbp ; ret
0xffffff800050bfd2 : mov ebp, esp ; mov eax, 9 ; pop rbp ; ret
0xffffff8000327532 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x10] ; and eax, 1 ; pop rbp ; ret
0xffffff8000831442 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x10] ; dec eax ; pop rbp ; ret
0xffffff800082bac2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80007f07a2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x11c] ; pop rbp ; ret
0xffffff80005e0482 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff80008155d2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002daf32 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x1b8] ; pop rbp ; ret
0xffffff80005cf382 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80005be862 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x20] ; and eax, 1 ; pop rbp ; ret
0xffffff800089faf2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x20] ; and eax, 7 ; pop rbp ; ret
0xffffff800080f812 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80008dec62 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x240] ; pop rbp ; ret
0xffffff80008107c2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x24] ; pop rbp ; ret
0xffffff80005b1152 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x28] ; and eax, 1 ; pop rbp ; ret
0xffffff80008121a2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff8000780142 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x2c] ; pop rbp ; ret
0xffffff80002f6972 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082c6d2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x34] ; pop rbp ; ret
0xffffff80002db722 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x34c] ; pop rbp ; ret
0xffffff80002db732 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x350] ; pop rbp ; ret
0xffffff80008980b2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x38] ; inc eax ; pop rbp ; ret
0xffffff8000350732 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80003676b2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x390] ; pop rbp ; ret
0xffffff80007f0692 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x398] ; pop rbp ; ret
0xffffff80007f0882 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x39c] ; pop rbp ; ret
0xffffff80007f0732 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x3b8] ; pop rbp ; ret
0xffffff80008980c2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x3c] ; inc eax ; pop rbp ; ret
0xffffff8000581592 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x40] ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3b32 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff800077e082 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x434] ; pop rbp ; ret
0xffffff80004b3be2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x44] ; pop rbp ; ret
0xffffff80002ae7f2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80004fa0d2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x4c] ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3c02 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80004b40e2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80008980a2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x58] ; inc eax ; pop rbp ; ret
0xffffff800089fb22 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80005c0142 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x5c] ; add rax, rsi ; pop rbp ; ret
0xffffff80005eaf02 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x68] ; and eax, 1 ; pop rbp ; ret
0xffffff80002db222 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa022 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x6c] ; pop rbp ; ret
0xffffff80004f9102 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x70] ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9112 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x70] ; and eax, 2 ; pop rbp ; ret
0xffffff80002db702 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff800057f202 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x78] ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9362 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x80] ; pop rbp ; ret
0xffffff80002a9ab2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x900] ; pop rbp ; ret
0xffffff80008ade72 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff80004f9472 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x91c] ; pop rbp ; ret
0xffffff80008adea2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0x94] ; pop rbp ; ret
0xffffff80008a88c2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xb0] ; pop rbp ; ret
0xffffff80004b3c22 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xc8] ; pop rbp ; ret
0xffffff80005e0452 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80004b3c32 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xcc] ; pop rbp ; ret
0xffffff80004b75d2 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xd8] ; pop rbp ; ret
0xffffff80002a1752 : mov ebp, esp ; mov eax, dword ptr [rdi + 0xe4] ; pop rbp ; ret
0xffffff8000767822 : mov ebp, esp ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028e132 : mov ebp, esp ; mov eax, dword ptr [rdi + 4] ; sub eax, dword ptr [rsi + 4] ; pop rbp ; ret
0xffffff800028bb52 : mov ebp, esp ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028e112 : mov ebp, esp ; mov eax, dword ptr [rdi + 8] ; sub eax, dword ptr [rsi + 8] ; pop rbp ; ret
0xffffff80004b3a32 : mov ebp, esp ; mov eax, dword ptr [rdi] ; and eax, 1 ; pop rbp ; ret
0xffffff80004aabc2 : mov ebp, esp ; mov eax, dword ptr [rdi] ; imul eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80004a6de2 : mov ebp, esp ; mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80004a54f2 : mov ebp, esp ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff8000541062 : mov ebp, esp ; mov eax, dword ptr [rdx] ; mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008ed0b2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x1f89ba] ; pop rbp ; ret
0xffffff80007f05f2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x23c12e] ; pop rbp ; ret
0xffffff800085d352 : mov ebp, esp ; mov eax, dword ptr [rip + 0x288066] ; pop rbp ; ret
0xffffff8000369cf2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x6c31d6] ; pop rbp ; ret
0xffffff8000369032 : mov ebp, esp ; mov eax, dword ptr [rip + 0x6c3e92] ; pop rbp ; ret
0xffffff80003a31b2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x72e7a2] ; pop rbp ; ret
0xffffff8000394e42 : mov ebp, esp ; mov eax, dword ptr [rip + 0x73c466] ; pop rbp ; ret
0xffffff80003c7f82 : mov ebp, esp ; mov eax, dword ptr [rip + 0x73dd92] ; pop rbp ; ret
0xffffff8000390732 : mov ebp, esp ; mov eax, dword ptr [rip + 0x740b2e] ; pop rbp ; ret
0xffffff80003c21d2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x742e66] ; pop rbp ; ret
0xffffff80002e9792 : mov ebp, esp ; mov eax, dword ptr [rip + 0x742ffe] ; pop rbp ; ret
0xffffff80003ba7d2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x74708e] ; pop rbp ; ret
0xffffff800036b082 : mov ebp, esp ; mov eax, dword ptr [rip + 0x76433e] ; pop rbp ; ret
0xffffff8000369e32 : mov ebp, esp ; mov eax, dword ptr [rip + 0x765532] ; pop rbp ; ret
0xffffff8000368382 : mov ebp, esp ; mov eax, dword ptr [rip + 0x766526] ; pop rbp ; ret
0xffffff8000368302 : mov ebp, esp ; mov eax, dword ptr [rip + 0x7665c2] ; pop rbp ; ret
0xffffff8000368282 : mov ebp, esp ; mov eax, dword ptr [rip + 0x766646] ; pop rbp ; ret
0xffffff8000367fe2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x7668da] ; pop rbp ; ret
0xffffff8000367f22 : mov ebp, esp ; mov eax, dword ptr [rip + 0x766996] ; pop rbp ; ret
0xffffff8000367962 : mov ebp, esp ; mov eax, dword ptr [rip + 0x766f42] ; pop rbp ; ret
0xffffff8000366dc2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x784d92] ; pop rbp ; ret
0xffffff80002ed3e2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x7d1e4e] ; pop rbp ; ret
0xffffff80002da692 : mov ebp, esp ; mov eax, dword ptr [rip + 0x813ca6] ; pop rbp ; ret
0xffffff80002c9ed2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x823dae] ; pop rbp ; ret
0xffffff8000262b22 : mov ebp, esp ; mov eax, dword ptr [rip + 0x83d25a] ; pop rbp ; ret
0xffffff800025ebf2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x8880ca] ; pop rbp ; ret
0xffffff800025ebe2 : mov ebp, esp ; mov eax, dword ptr [rip + 0x8880d6] ; pop rbp ; ret
0xffffff800028e142 : mov ebp, esp ; mov eax, dword ptr [rsi + 4] ; sub eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028e122 : mov ebp, esp ; mov eax, dword ptr [rsi + 8] ; sub eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800049e4b2 : mov ebp, esp ; mov eax, r8d ; pop rbp ; ret
0xffffff80008b5142 : mov ebp, esp ; mov edi, 0x28 ; call 0xffffff80008113f9
0xffffff8000895172 : mov ebp, esp ; mov edi, 0xe8 ; call 0xffffff80008113f9
0xffffff800088e842 : mov ebp, esp ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff8000350702 : mov ebp, esp ; mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff8000796222 : mov ebp, esp ; mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff8000796242 : mov ebp, esp ; mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000698732 : mov ebp, esp ; mov qword ptr [rdi + 0x38], rsi ; pop rbp ; ret
0xffffff8000342b02 : mov ebp, esp ; mov qword ptr [rdi + 0x58], rsi ; pop rbp ; ret
0xffffff800031ed72 : mov ebp, esp ; mov qword ptr [rdi + 0x60], rsi ; pop rbp ; ret
0xffffff80004b40c2 : mov ebp, esp ; mov qword ptr [rdi + 0x68], rsi ; pop rbp ; ret
0xffffff80004b3c92 : mov ebp, esp ; mov qword ptr [rdi + 0x78], rsi ; pop rbp ; ret
0xffffff8000796092 : mov ebp, esp ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80002c80b2 : mov ebp, esp ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039f202 : mov ebp, esp ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff8000870c32 : mov ebp, esp ; mov rax, qword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff80007951c2 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000516522 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002db142 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80002db562 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800081e942 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002a0402 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800077e092 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000342182 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80002db572 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80004b40b2 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b40a2 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004b3c82 : mov ebp, esp ; mov rax, qword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff8000303742 : mov ebp, esp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff80004f9f02 : mov ebp, esp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028ba52 : mov ebp, esp ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0xffffff800049fb22 : mov ebp, esp ; mov rax, rdi ; mov rdi, rsi ; pop rbp ; jmp rax
0xffffff8000372942 : mov ebp, esp ; mov rax, rdi ; pop rbp ; ret
0xffffff800049e6d2 : mov ebp, esp ; mov rax, rsi ; pop rbp ; ret
0xffffff80004fa642 : mov ebp, esp ; mov word ptr [rdi + 0x6a], si ; pop rbp ; ret
0xffffff800029ed12 : mov ebp, esp ; movsx edi, dil ; pop rbp ; jmp rsi
0xffffff80007960a2 : mov ebp, esp ; movsxd rax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007961e2 : mov ebp, esp ; movsxd rax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff8000342752 : mov ebp, esp ; movsxd rax, esi ; mov eax, dword ptr [rdi + rax*8] ; pop rbp ; ret
0xffffff800082baa2 : mov ebp, esp ; movzx eax, byte ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800086b6d2 : mov ebp, esp ; movzx eax, byte ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff8000898092 : mov ebp, esp ; movzx eax, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000516482 : mov ebp, esp ; movzx eax, byte ptr [rdi] ; pop rbp ; ret
0xffffff80002b7b02 : mov ebp, esp ; movzx eax, dil ; pop rbp ; ret
0xffffff800082bab2 : mov ebp, esp ; movzx eax, word ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80007960d2 : mov ebp, esp ; movzx eax, word ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80004fa082 : mov ebp, esp ; movzx eax, word ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa652 : mov ebp, esp ; movzx eax, word ptr [rdi + 0x6a] ; pop rbp ; ret
0xffffff8000811172 : mov ebp, esp ; movzx eax, word ptr [rdi + 8] ; pop rbp ; ret
0xffffff80004b3af2 : mov ebp, esp ; or byte ptr [rdi + 1], 0x10 ; pop rbp ; ret
0xffffff80004b3a82 : mov ebp, esp ; or byte ptr [rdi], 0x10 ; pop rbp ; ret
0xffffff80004b3ad2 : mov ebp, esp ; or byte ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80004b3b12 : mov ebp, esp ; or byte ptr [rdi], 0x40 ; pop rbp ; ret
0xffffff80008f3182 : mov ebp, esp ; or dword ptr [rdi + 0x2d0], esi ; pop rbp ; ret
0xffffff80004b75e2 : mov ebp, esp ; or dword ptr [rdi + 0xd8], esi ; pop rbp ; ret
0xffffff80002510e2 : mov ebp, esp ; pop rbp ; ret
0xffffff8000802a72 : mov ebp, esp ; sfence ; pop rbp ; ret
0xffffff800049e422 : mov ebp, esp ; shr edi, 0x18 ; mov eax, edi ; pop rbp ; ret
0xffffff80004d26d2 : mov ebp, esp ; shr edi, 4 ; mov eax, edi ; pop rbp ; ret
0xffffff80004d26c2 : mov ebp, esp ; shr rdi, 0x20 ; mov eax, edi ; pop rbp ; ret
0xffffff80007742f2 : mov ebp, esp ; test edi, edi ; je 0xffffff8000774305 ; mov eax, edi ; pop rbp ; ret
0xffffff80007749b2 : mov ebp, esp ; test edi, edi ; je 0xffffff80007749c5 ; mov eax, edi ; pop rbp ; ret
0xffffff80003403c2 : mov ebp, esp ; test rsi, rsi ; je 0xffffff80003403d3 ; pop rbp ; ret
0xffffff800028d6f2 : mov ebp, esp ; xor eax, eax ; pop rbp ; ret
0xffffff8000b47dc7 : mov ebx, 0 ; ret
0xffffff80006de491 : mov ebx, 0x11 ; jmp 0xffffff80006de461
0xffffff800081263d : mov ebx, 0x13ebffa7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006da9b9 : mov ebx, 0x15 ; jmp 0xffffff80006da9a0
0xffffff8000568cb2 : mov ebx, 0x16 ; jmp 0xffffff8000568c81
0xffffff80007c375e : mov ebx, 0x200020 ; jmp 0xffffff80007c37bd
0xffffff8000541de5 : mov ebx, 0x31004490 ; shr al, 0xc0 ; ret
0xffffff8000b3e3c7 : mov ebx, 0x3be579ee ; int1 ; push rcx ; jmp qword ptr [rdx]
0xffffff8000764662 : mov ebx, 0x3c ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000856b98 : mov ebx, 0x415bffb3 ; pop rsi ; pop rbp ; ret
0xffffff8000266131 : mov ebx, 0x4800839b ; test eax, eax ; je 0xffffff800026618c ; call rax
0xffffff800073f83d : mov ebx, 0x4e ; jmp rax
0xffffff800055ab73 : mov ebx, 0x5dc031ff ; ret
0xffffff8000737911 : mov ebx, 0x69ffc5ab ; ret
0xffffff800030dcb7 : mov ebx, 0x81480003 ; ret
0xffffff8000288e70 : mov ebx, 0x89000000 ; ret 0xe281
0xffffff80003eba91 : mov ebx, 0x890005d1 ; ret
0xffffff8000771949 : mov ebx, 0x890fe183 ; ret 0xeac1
0xffffff800037391a : mov ebx, 0x89450075 ; ret
0xffffff800046e2ca : mov ebx, 0x89480004 ; ret
0xffffff800042e7af : mov ebx, 0x89480034 ; ret
0xffffff8000895811 : mov ebx, 0x8948fff7 ; ret
0xffffff8000885897 : mov ebx, 0x8948fff8 ; ret
0xffffff80008ea211 : mov ebx, 0x89ffea65 ; ret
0xffffff80002b1001 : mov ebx, 0x89fffe2d ; ret
0xffffff80006024ea : mov ebx, 0x8d4fffb0 ; xor al, 0xae ; jmp 0xffffff80006024bd
0xffffff80002d75b5 : mov ebx, 0x9007551 ; ret
0xffffff80008b0f11 : mov ebx, 0xbbfffa5b ; ret 2
0xffffff80003ad843 : mov ebx, 0xbf000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0xffffff80007425f1 : mov ebx, 0xc0 ; ret
0xffffff80007fca79 : mov ebx, 0xc031fff4 ; pop rbp ; ret
0xffffff800034c380 : mov ebx, 0xc7be0060 ; or byte ptr [rax], al ; add al, ch ; ret
0xffffff80002a9989 : mov ebx, 0xc8 ; add byte ptr [rdx + rax - 0x78], dh ; ret 0xc031
0xffffff800045e0b2 : mov ebx, 0xcba ; add al, ch ; ret
0xffffff80003d92b3 : mov ebx, 0xcba ; add al, ch ; ret 0xd34d
0xffffff800086cec2 : mov ebx, 0xd888fffe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008230f9 : mov ebx, 0xdc008001 ; jmp 0xffffff80008230c9
0xffffff80008aadfe : mov ebx, 0xe00002c2 ; jmp 0xffffff80008aae82
0xffffff80008aadfd : mov ebx, 0xe00002c2 ; jmp 0xffffff80008aae83
0xffffff80008be345 : mov ebx, 0xe00002c7 ; test al, al ; jne 0xffffff80008be318 ; jmp 0xffffff80008be36a
0xffffff800066da23 : mov ebx, 0xe9000000 ; ret 0
0xffffff8000778f72 : mov ebx, 0xf8 ; call 0xffffff800039d368
0xffffff80008478f5 : mov ebx, 0xff000027 ; ret
0xffffff8000390051 : mov ebx, 0xff0055da ; ret
0xffffff80005e6bb9 : mov ebx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e6bd9
0xffffff80008c99c9 : mov ebx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80008c99f6
0xffffff80002b5de2 : mov ebx, 4 ; jmp rax
0xffffff80002bf102 : mov ebx, 4 ; jmp rcx
0xffffff80006d6e21 : mov ebx, dword ptr [r14 + 0x54] ; mov rdi, r14 ; call 0xffffff8000393049
0xffffff800076e75a : mov ebx, dword ptr [rax + 0x20] ; mov rdi, rbx ; call 0xffffff8000392609
0xffffff8000756d98 : mov ebx, dword ptr [rax + 0x68] ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff800083e118 : mov ebx, dword ptr [rax - 0x77000000] ; ret 0xca29
0xffffff80002da78c : mov ebx, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800058dbdf : mov ebx, dword ptr [rbp - 0x1d0] ; jmp rcx
0xffffff800077070a : mov ebx, dword ptr [rbp - 0x290] ; call 0xffffff8000393049
0xffffff80007eaeaa : mov ebx, dword ptr [rbp - 0x30] ; call rbx
0xffffff800039ff36 : mov ebx, dword ptr [rbp - 0x30] ; mov edx, dword ptr [rbp - 0x38] ; jmp rax
0xffffff8000763f40 : mov ebx, dword ptr [rbp - 0x50] ; mov rdi, rbx ; call 0xffffff80003923e9
0xffffff800029daff : mov ebx, dword ptr [rbp - 0x78] ; mov rsi, rbx ; call r15
0xffffff800064bc2d : mov ebx, dword ptr [rbp - 0x80] ; jmp rcx
0xffffff80005fcd40 : mov ebx, dword ptr [rbp - 0xe8] ; jmp rax
0xffffff8000859b86 : mov ebx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff800076e385 : mov ebx, dword ptr [rdi + 0x20] ; mov rdi, rbx ; call 0xffffff8000392939
0xffffff8000651553 : mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [r15]
0xffffff8000655f21 : mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [rax]
0xffffff8000644752 : mov ebx, dword ptr [rdx] ; add byte ptr [rcx - 0x77], al ; ret 0x894c
0xffffff800076eab7 : mov ebx, dword ptr [rip + 0x36fdd7] ; call 0xffffff8000393049
0xffffff80006d6e22 : mov ebx, dword ptr [rsi + 0x54] ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff800055e5b8 : mov ebx, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c1f27 : mov ebx, dword ptr [rsp] ; mov rdi, r12 ; call 0xffffff800010e148
0xffffff80005365b3 : mov ebx, eax ; call 0xffffff80003928a4
0xffffff800076520e : mov ebx, eax ; call 0xffffff8000393045
0xffffff80004cff28 : mov ebx, eax ; call 0xffffff80004fc1e4
0xffffff800084c956 : mov ebx, eax ; call qword ptr [rbx]
0xffffff80003a03e8 : mov ebx, eax ; call rax
0xffffff8000267808 : mov ebx, eax ; call rbx
0xffffff80002a6360 : mov ebx, eax ; call rcx
0xffffff80008d51af : mov ebx, eax ; jmp 0xffffff80008d54d8
0xffffff80002f78e9 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d6dae : mov ebx, eax ; mov rdi, r14 ; call 0xffffff8000393047
0xffffff80007630b6 : mov ebx, eax ; mov rdi, r15 ; call 0xffffff8000393048
0xffffff800063500b : mov ebx, eax ; test rbx, rbx ; jne 0xffffff800063500a ; jmp 0xffffff8000634fde
0xffffff80008d2330 : mov ebx, ebx ; jmp 0xffffff80008d2387
0xffffff8000311eac : mov ebx, ecx ; call 0xffffff800028e154
0xffffff800070257b : mov ebx, ecx ; call 0xffffff800029e854
0xffffff8000766357 : mov ebx, ecx ; call 0xffffff80003923e5
0xffffff800087730a : mov ebx, ecx ; call qword ptr [rax + 0x28]
0xffffff800054ddb9 : mov ebx, ecx ; call r15
0xffffff800052bcfa : mov ebx, ecx ; call rax
0xffffff80006b828d : mov ebx, ecx ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0xffffff80004cfdff : mov ebx, ecx ; mov r8, qword ptr [rbp + 0x18] ; call 0xffffff80004fc028
0xffffff80005931b7 : mov ebx, ecx ; mov rcx, rbx ; call rax
0xffffff80007662d0 : mov ebx, ecx ; mov rdi, r15 ; call 0xffffff80003923e8
0xffffff80004e2f52 : mov ebx, edi ; call 0xffffff800010e145
0xffffff80007d6122 : mov ebx, edi ; call rax
0xffffff8000451730 : mov ebx, edi ; je 0xffffff80004516e8 ; jmp 0xffffff8000451742
0xffffff80005ca478 : mov ebx, edi ; jmp rcx
0xffffff800039ebf7 : mov ebx, edi ; mov rax, qword ptr [rip + 0x6b2480] ; call qword ptr [rax]
0xffffff80006a6e05 : mov ebx, edi ; mov rdi, r12 ; call 0xffffff8000393047
0xffffff800057e01e : mov ebx, edi ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800067e411 : mov ebx, edx ; add byte ptr [r8 - 0x77], r9b ; fsubp st(0) ; ret
0xffffff800054dfab : mov ebx, edx ; call rbx
0xffffff800071a3a9 : mov ebx, edx ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff800071a3c7
0xffffff80007c1ee6 : mov ebx, es ; and dword ptr [rax], eax ; call 0xffffff800028e1b6
0xffffff8000550946 : mov ebx, es ; push rax ; add al, 0 ; add byte ptr [rbp + rcx*4 - 0x4c], cl ; ret
0xffffff80008dc93f : mov ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000281eb3 : mov ebx, esi ; mov esi, 0x8c ; call 0xffffff800028e159
0xffffff800049fc38 : mov ebx, esi ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff800055d47f : mov ebx, esi ; mov rsi, qword ptr [rdx + rcx*8 + 0x48] ; call rax
0xffffff80005197c0 : mov ebx, esi ; xor r14d, r14d ; jmp rcx
0xffffff80006b26ca : mov ebx, esp ; mov rdx, r15 ; call rax
0xffffff80003ad4b4 : mov ebx, gs ; mov dword ptr [rcx + rcx*4 - 9], ecx ; call r15
0xffffff8000311eab : mov ebx, r9d ; call 0xffffff800028e155
0xffffff8000862f27 : mov ecx, 0x10 ; call 0xffffff800080f1a7
0xffffff80008d2535 : mov ecx, 0x10 ; mov r10, rax ; jmp 0xffffff80008d2591
0xffffff8000591f3b : mov ecx, 0x1576 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80007543e8 : mov ecx, 0x18 ; rep movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff8000621f76 : mov ecx, 0x1c3 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000701d3a : mov ecx, 0x200 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000b44368 : mov ecx, 0x20002d01 ; add dword ptr [rax + rdx], esi ; ret 0x48a
0xffffff8000641f14 : mov ecx, 0x239 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000641f7a : mov ecx, 0x245 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80007f4559 : mov ecx, 0x258d4cff ; push rsi ; sysenter
0xffffff8000521d08 : mov ecx, 0x299e3779 ; ret
0xffffff80005c1ee0 : mov ecx, 0x358 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80005c1f07 : mov ecx, 0x359 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000260a98 : mov ecx, 0x39480088 ; ret
0xffffff80003bab25 : mov ecx, 0x3a8 ; pop rbp ; jmp rax
0xffffff800073bdc8 : mov ecx, 0x3d8d48ff ; call qword ptr [rbx]
0xffffff80008ab6eb : mov ecx, 0x415b0028 ; pop rsi ; pop rbp ; ret
0xffffff80003baaec : mov ecx, 0x490 ; pop rbp ; jmp rax
0xffffff8000700cdc : mov ecx, 0x58948ff ; ret
0xffffff80007f51d3 : mov ecx, 0x5bc031ff ; pop r14 ; pop rbp ; ret
0xffffff80007fb1d0 : mov ecx, 0x5bd889ff ; pop r14 ; pop rbp ; ret
0xffffff80004a0b66 : mov ecx, 0x5be8ae0f ; pop r14 ; pop rbp ; ret
0xffffff80008d5d07 : mov ecx, 0x5d000000 ; ret
0xffffff8000510483 : mov ecx, 0x5d000001 ; ret
0xffffff80004b3983 : mov ecx, 0x5dffde41 ; ret
0xffffff8000b45c23 : mov ecx, 0x624800c ; ret 0x4010
0xffffff80007fb73c : mov ecx, 0x647de8ff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fb184 : mov ecx, 0x6a35e8ff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fb0d2 : mov ecx, 0x6ae7e8ff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f8acb : mov ecx, 0x6b007faf ; ret 0x4862
0xffffff80007fb017 : mov ecx, 0x6ba2e8ff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d1ef1 : mov ecx, 0x710 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80005d1f19 : mov ecx, 0x711 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000892f47 : mov ecx, 0x78 ; call 0xffffff800080f1a7
0xffffff80003b9cf5 : mov ecx, 0x79 ; wrmsr ; pop rbp ; ret
0xffffff80008a0f8c : mov ecx, 0x800 ; mov rdi, r14 ; call rax
0xffffff8000b49e7e : mov ecx, 0x8841c228 ; rol byte ptr [rcx + 0x30], cl ; ret 0xc220
0xffffff800066faf3 : mov ecx, 0x89000018 ; ret
0xffffff80004eca23 : mov ecx, 0x890000f6 ; ret 0xd285
0xffffff800040abc3 : mov ecx, 0x89000629 ; ret
0xffffff80003cdb4f : mov ecx, 0x89410007 ; ret
0xffffff8000817305 : mov ecx, 0x89480001 ; ret
0xffffff8000678558 : mov ecx, 0x89480013 ; ret
0xffffff800063f661 : mov ecx, 0x89480049 ; ret 0x74e8
0xffffff80006bcf29 : mov ecx, 0x8948ffc1 ; ret
0xffffff800036be7f : mov ecx, 0x8948fff2 ; ret
0xffffff8000895aa1 : mov ecx, 0x8948fff7 ; ret
0xffffff800078624b : mov ecx, 0x8948fffc ; ret
0xffffff80006a20c8 : mov ecx, 0x8948fffc ; ret 0x8b48
0xffffff800028beba : mov ecx, 0x8948fffe ; ret
0xffffff80007545c3 : mov ecx, 0x89ffc425 ; ret
0xffffff80006ff183 : mov ecx, 0x89fffd63 ; ret
0xffffff80003a6f13 : mov ecx, 0x8b007583 ; add al, 0x81 ; pop rbp ; ret
0xffffff8000531f50 : mov ecx, 0x8cd ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000531f7f : mov ecx, 0x8ce ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800072ce8a : mov ecx, 0xa8c9 ; jmp 0xffffff800072ce9e
0xffffff80004dc673 : mov ecx, 0xb8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf44
0xffffff800029414f : mov ecx, 0xbe006a8b ; ret 0
0xffffff80007e0cb8 : mov ecx, 0xc148002a ; jmp qword ptr [rax]
0xffffff8000b44a11 : mov ecx, 0xcd4efaaf ; ja 0xffffff8000b44a1a ; call qword ptr [rdx]
0xffffff80006d066b : mov ecx, 0xce890005 ; sub eax, esi ; pop rbp ; ret
0xffffff800070a9a1 : mov ecx, 0xd0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000707f35 : mov ecx, 0xd0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff8000792425 : mov ecx, 0xe ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80004294e4 : mov ecx, 0xe8fffff4 ; ret
0xffffff80005490f3 : mov ecx, 0xebfffffa ; or cl, byte ptr [rax - 1] ; ret
0xffffff80007f5851 : mov ecx, 0xf08944ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fccd9 : mov ecx, 0xf0894cff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b1ebe : mov ecx, 0xfa ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80007f9878 : mov ecx, 0xff894cff ; call 0xffffff80002b5b67
0xffffff8000749fec : mov ecx, 0xffffffff ; cmove eax, ecx ; pop rbp ; ret
0xffffff800080d106 : mov ecx, 0xffffffff ; mov eax, r9d ; pop rbp ; ret
0xffffff80005e87b9 : mov ecx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e87d9
0xffffff80008c9f79 : mov ecx, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80008c9fa6
0xffffff800050a2ff : mov ecx, 1 ; cmovne eax, ecx ; pop rbp ; ret
0xffffff80003924c6 : mov ecx, 1 ; cmovne eax, ecx ; ret
0xffffff80008d2567 : mov ecx, 2 ; mov r10, rax ; jmp 0xffffff80008d2591
0xffffff80007f08df : mov ecx, 6 ; cmove eax, ecx ; pop rbp ; ret
0xffffff800038977c : mov ecx, dword ptr [r12 + 8] ; lea rdi, [rbp - 0x2c] ; call qword ptr [rax]
0xffffff80004f9b7b : mov ecx, dword ptr [rax + 0x10] ; mov eax, ecx ; pop rbp ; ret
0xffffff80003753aa : mov ecx, dword ptr [rax + 0x10] ; mov rdi, r15 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800087c4d6 : mov ecx, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff8000491919 : mov ecx, dword ptr [rax - 1] ; ret 0x894a
0xffffff800079194f : mov ecx, dword ptr [rbp + 0x10] ; call rax
0xffffff800088b039 : mov ecx, dword ptr [rbp - 0x118] ; call 0xffffff8000757278
0xffffff80004da03a : mov ecx, dword ptr [rbp - 0x260] ; mov r8, r12 ; call rbx
0xffffff80007709ac : mov ecx, dword ptr [rbp - 0x2b8] ; call 0xffffff8000396b89
0xffffff80008f8d76 : mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80005330e4 : mov ecx, dword ptr [rbp - 0x30] ; call rax
0xffffff80008f3b0b : mov ecx, dword ptr [rbp - 0x30] ; call rbx
0xffffff80008fbb25 : mov ecx, dword ptr [rbp - 0x30] ; mov r8d, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000904510 : mov ecx, dword ptr [rbp - 0x30] ; mov rdi, r14 ; mov rsi, r15 ; call rbx
0xffffff8000770b57 : mov ecx, dword ptr [rbp - 0x310] ; call 0xffffff8000396b89
0xffffff80008f4e21 : mov ecx, dword ptr [rbp - 0x34] ; call rbx
0xffffff8000908122 : mov ecx, dword ptr [rbp - 0x34] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fa87e : mov ecx, dword ptr [rbp - 0x38] ; call r10
0xffffff800074f131 : mov ecx, dword ptr [rbp - 0x38] ; call rax
0xffffff80008f88bd : mov ecx, dword ptr [rbp - 0x38] ; call rbx
0xffffff80005d19aa : mov ecx, dword ptr [rbp - 0x38] ; jmp rax
0xffffff8000890af6 : mov ecx, dword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000845566 : mov ecx, dword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x30] ; call rcx
0xffffff80008f3d23 : mov ecx, dword ptr [rbp - 0x3c] ; call rbx
0xffffff80008ef0f7 : mov ecx, dword ptr [rbp - 0x3c] ; mov r8d, r13d ; call rbx
0xffffff800089082f : mov ecx, dword ptr [rbp - 0x40] ; mov r8, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3f33 : mov ecx, dword ptr [rbp - 0x40] ; mov r8d, dword ptr [rbp - 0x34] ; call rbx
0xffffff80008fa639 : mov ecx, dword ptr [rbp - 0x44] ; call r10
0xffffff80008f6fd1 : mov ecx, dword ptr [rbp - 0x48] ; call r14
0xffffff800074effe : mov ecx, dword ptr [rbp - 0x48] ; call rax
0xffffff80008f7094 : mov ecx, dword ptr [rbp - 0x48] ; call rbx
0xffffff8000800549 : mov ecx, dword ptr [rbp - 0x48] ; jmp rax
0xffffff80008fbd97 : mov ecx, dword ptr [rbp - 0x48] ; mov r8, qword ptr [rbp - 0x40] ; call rbx
0xffffff80008f6e65 : mov ecx, dword ptr [rbp - 0x50] ; call r12
0xffffff80008f6cd5 : mov ecx, dword ptr [rbp - 0x50] ; call rbx
0xffffff80008f6fcd : mov ecx, dword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; call r14
0xffffff80008f7090 : mov ecx, dword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; call rbx
0xffffff800081cdbc : mov ecx, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x50] ; call rcx
0xffffff80007d8661 : mov ecx, dword ptr [rbp - 0x60] ; call rax
0xffffff8000326be9 : mov ecx, dword ptr [rbp - 0x60] ; jmp 0xffffff8000326c01
0xffffff800088bb33 : mov ecx, dword ptr [rbp - 0x60] ; mov r8, r15 ; call r9
0xffffff800088be2c : mov ecx, dword ptr [rbp - 0x78] ; mov r8, r15 ; call r9
0xffffff800051fb87 : mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff800066de35 : mov ecx, dword ptr [rbx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; jmp 0xffffff800066de08
0xffffff8000885a48 : mov ecx, dword ptr [rbx + 0x20] ; call r15
0xffffff80007fcb03 : mov ecx, dword ptr [rbx + 0x28] ; call r10
0xffffff800084234c : mov ecx, dword ptr [rbx + 0x48] ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800062647e : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000626479 ; pop rbp ; ret
0xffffff800062653a : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000626539 ; pop rbp ; ret
0xffffff8000811b8f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000811b89 ; pop rbp ; ret
0xffffff800081331f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000813319 ; pop rbp ; ret
0xffffff80008143ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008143f9 ; pop rbp ; ret
0xffffff8000814dff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000814df9 ; pop rbp ; ret
0xffffff800081635f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000816359 ; pop rbp ; ret
0xffffff8000818e8f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000818e89 ; pop rbp ; ret
0xffffff800082b67f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800082b679 ; pop rbp ; ret
0xffffff800082c29f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800082c299 ; pop rbp ; ret
0xffffff800082e17f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800082e179 ; pop rbp ; ret
0xffffff800082ecbf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800082ecb9 ; pop rbp ; ret
0xffffff800082f7cf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800082f7c9 ; pop rbp ; ret
0xffffff8000830b0f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000830b09 ; pop rbp ; ret
0xffffff8000832a8f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000832a89 ; pop rbp ; ret
0xffffff8000858f1f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000858f19 ; pop rbp ; ret
0xffffff800085ce4f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800085ce49 ; pop rbp ; ret
0xffffff800085d0af : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800085d0a9 ; pop rbp ; ret
0xffffff8000860faf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000860fa9 ; pop rbp ; ret
0xffffff800086283f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000862839 ; pop rbp ; ret
0xffffff8000862acf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000862ac9 ; pop rbp ; ret
0xffffff8000862d2f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000862d29 ; pop rbp ; ret
0xffffff8000862f8f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000862f89 ; pop rbp ; ret
0xffffff80008631ef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008631e9 ; pop rbp ; ret
0xffffff800086344f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000863449 ; pop rbp ; ret
0xffffff80008636af : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008636a9 ; pop rbp ; ret
0xffffff80008813bf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008813b9 ; pop rbp ; ret
0xffffff80008816df : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008816d9 ; pop rbp ; ret
0xffffff8000881aef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000881ae9 ; pop rbp ; ret
0xffffff80008820ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008820f9 ; pop rbp ; ret
0xffffff800088247f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000882479 ; pop rbp ; ret
0xffffff800088477f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000884779 ; pop rbp ; ret
0xffffff8000884ebf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000884eb9 ; pop rbp ; ret
0xffffff80008857ef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008857e9 ; pop rbp ; ret
0xffffff800088607f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000886079 ; pop rbp ; ret
0xffffff8000887eef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000887ee9 ; pop rbp ; ret
0xffffff8000889d4f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000889d49 ; pop rbp ; ret
0xffffff800088a97f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800088a979 ; pop rbp ; ret
0xffffff800088cbff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800088cbf9 ; pop rbp ; ret
0xffffff800088eecf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800088eec9 ; pop rbp ; ret
0xffffff800089014f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000890149 ; pop rbp ; ret
0xffffff80008912af : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008912a9 ; pop rbp ; ret
0xffffff800089196f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000891969 ; pop rbp ; ret
0xffffff800089250f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000892509 ; pop rbp ; ret
0xffffff80008930ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008930f9 ; pop rbp ; ret
0xffffff8000893f2f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000893f29 ; pop rbp ; ret
0xffffff80008951af : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008951a9 ; pop rbp ; ret
0xffffff80008967cf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008967c9 ; pop rbp ; ret
0xffffff800089909f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff8000899099 ; pop rbp ; ret
0xffffff800089b0df : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800089b0d9 ; pop rbp ; ret
0xffffff800089b6ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800089b6f9 ; pop rbp ; ret
0xffffff800089ba2f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800089ba29 ; pop rbp ; ret
0xffffff800089bd5f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800089bd59 ; pop rbp ; ret
0xffffff800089d20f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff800089d209 ; pop rbp ; ret
0xffffff80008a2a9f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008a2a99 ; pop rbp ; ret
0xffffff80008a536f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008a5369 ; pop rbp ; ret
0xffffff80008a62ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008a62f9 ; pop rbp ; ret
0xffffff80008a71ff : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008a71f9 ; pop rbp ; ret
0xffffff80008a7c0f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008a7c09 ; pop rbp ; ret
0xffffff80008aab9f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008aab99 ; pop rbp ; ret
0xffffff80008ab1df : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008ab1d9 ; pop rbp ; ret
0xffffff80008ab53f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008ab539 ; pop rbp ; ret
0xffffff80008ae0df : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008ae0d9 ; pop rbp ; ret
0xffffff80008af3ef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008af3e9 ; pop rbp ; ret
0xffffff80008b3e3f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008b3e39 ; pop rbp ; ret
0xffffff80008b517f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008b5179 ; pop rbp ; ret
0xffffff80008b5d6f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008b5d69 ; pop rbp ; ret
0xffffff80008b63bf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008b63b9 ; pop rbp ; ret
0xffffff80008c0b8f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008c0b89 ; pop rbp ; ret
0xffffff80008c2adf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008c2ad9 ; pop rbp ; ret
0xffffff80008c376f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008c3769 ; pop rbp ; ret
0xffffff80008c423f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008c4239 ; pop rbp ; ret
0xffffff80008cc41f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008cc419 ; pop rbp ; ret
0xffffff80008ce21f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008ce219 ; pop rbp ; ret
0xffffff80008cebbf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008cebb9 ; pop rbp ; ret
0xffffff80008d07ef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d07e9 ; pop rbp ; ret
0xffffff80008d18af : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d18a9 ; pop rbp ; ret
0xffffff80008d4b4f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d4b49 ; pop rbp ; ret
0xffffff80008d5b4f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d5b49 ; pop rbp ; ret
0xffffff80008d6b3f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d6b39 ; pop rbp ; ret
0xffffff80008d74df : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d74d9 ; pop rbp ; ret
0xffffff80008d774f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d7749 ; pop rbp ; ret
0xffffff80008d79bf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008d79b9 ; pop rbp ; ret
0xffffff80008e264f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008e2649 ; pop rbp ; ret
0xffffff80008e55bf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008e55b9 ; pop rbp ; ret
0xffffff80008e6aef : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008e6ae9 ; pop rbp ; ret
0xffffff80008e6daf : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008e6da9 ; pop rbp ; ret
0xffffff80008e763f : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0xffffff80008e7639 ; pop rbp ; ret
0xffffff80008851b7 : mov ecx, dword ptr [rcx + 0x20] ; test rcx, rcx ; jne 0xffffff80008851b9 ; pop rbp ; ret
0xffffff800084de7d : mov ecx, dword ptr [rcx + 0x28] ; test rcx, rcx ; mov edx, r8d ; jmp 0xffffff800084de9a
0xffffff80007f5a41 : mov ecx, dword ptr [rcx + 0x30] ; test rcx, rcx ; jne 0xffffff80007f5a39 ; pop rbp ; ret
0xffffff8000450e2b : mov ecx, dword ptr [rcx + 0x38] ; jmp 0xffffff8000450e60
0xffffff80003a296c : mov ecx, dword ptr [rcx + 0x50] ; test rcx, rcx ; je 0xffffff80003a297e ; call rcx
0xffffff800086dfac : mov ecx, dword ptr [rcx + 0x50] ; test rcx, rcx ; je 0xffffff800086dfbe ; call rcx
0xffffff800081131a : mov ecx, dword ptr [rcx + 0x58] ; xor esi, esi ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80003a299c : mov ecx, dword ptr [rcx + 0x60] ; test rcx, rcx ; je 0xffffff80003a29ae ; call rcx
0xffffff800089288e : mov ecx, dword ptr [rcx + 0x888] ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80008abd27 : mov ecx, dword ptr [rcx + 0x8c8] ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff8000831f80 : mov ecx, dword ptr [rcx + 8] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff800055dbcb : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [r12 + rcx*8 + 0x48] ; call rax
0xffffff800055e716 : mov ecx, dword ptr [rcx + 8] ; mov rsi, qword ptr [r15 + rcx*8 + 0x48] ; call rax
0xffffff800075877f : mov ecx, dword ptr [rcx + 8] ; or byte ptr [rcx + rax], 0xc ; pop rbp ; ret
0xffffff8000758761 : mov ecx, dword ptr [rcx + 8] ; or byte ptr [rcx + rax], 4 ; pop rbp ; ret
0xffffff8000288fe9 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff8000289001 ; call rcx
0xffffff800028a769 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff800028a781 ; call rcx
0xffffff80002b0099 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80002b00b1 ; call rcx
0xffffff80002b0349 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80002b0361 ; call rcx
0xffffff80003ab869 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80003ab881 ; call rcx
0xffffff8000368459 : mov ecx, dword ptr [rcx + rdx*4 + 4] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80003683f9 : mov ecx, dword ptr [rcx + rdx*4] ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000250026 : mov ecx, dword ptr [rcx] ; cmp rcx, rdx ; jne 0xffffff8000250028 ; pop rbp ; ret
0xffffff800041ee11 : mov ecx, dword ptr [rcx] ; test r9, r9 ; jne 0xffffff800041eda8 ; pop rbp ; ret
0xffffff8000328411 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000328408 ; pop rbp ; ret
0xffffff80003284ae : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80003284a8 ; pop rbp ; ret
0xffffff800040c041 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800040c028 ; pop rbp ; ret
0xffffff800041ece9 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800041ece8 ; pop rbp ; ret
0xffffff8000448f79 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000448f78 ; pop rbp ; ret
0xffffff8000530ed0 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000530ec8 ; pop rbp ; ret
0xffffff8000530f6e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000530f68 ; pop rbp ; ret
0xffffff800057f1ce : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800057f1c8 ; pop rbp ; ret
0xffffff800058248d : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000582478 ; pop rbp ; ret
0xffffff80005825ad : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000582598 ; pop rbp ; ret
0xffffff80005a8f7e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005a8f78 ; pop rbp ; ret
0xffffff80005b111e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005b1118 ; pop rbp ; ret
0xffffff80005e47bc : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005e47b8 ; pop rbp ; ret
0xffffff80005e485e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005e4858 ; pop rbp ; ret
0xffffff8000687f9e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000687f98 ; pop rbp ; ret
0xffffff80006a43fe : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80006a43f8 ; pop rbp ; ret
0xffffff800077e296 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800077e298 ; pop rbp ; ret
0xffffff800084cc19 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800084cc18 ; pop rbp ; ret
0xffffff800084fc49 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800084fc48 ; pop rbp ; ret
0xffffff80008c680d : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c6808 ; pop rbp ; ret
0xffffff80008c68ae : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c68a8 ; pop rbp ; ret
0xffffff80008c77f7 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c77e8 ; pop rbp ; ret
0xffffff80008c87ad : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c87a8 ; pop rbp ; ret
0xffffff80008c884e : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c8848 ; pop rbp ; ret
0xffffff80008c975c : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c9758 ; pop rbp ; ret
0xffffff80008c97fe : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c97f8 ; pop rbp ; ret
0xffffff80004823a7 : mov ecx, dword ptr [rdi + 0x18] ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80008127ee : mov ecx, dword ptr [rdi + 0x18] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008456e3 : mov ecx, dword ptr [rdi + 0x38] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008dfc1d : mov ecx, dword ptr [rdi + 0x48] ; mov rdi, rax ; pop rbp ; jmp r8
0xffffff8000796342 : mov ecx, dword ptr [rdi + 0x68] ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff80008cbba4 : mov ecx, dword ptr [rdi + 0xc] ; imul eax, ecx, 0x1c ; pop rbp ; ret
0xffffff8000754682 : mov ecx, dword ptr [rdi + 8] ; jmp 0xffffff8000754696
0xffffff8000399290 : mov ecx, dword ptr [rdi] ; mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0xffffff80003992a1 : mov ecx, dword ptr [rdi] ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0xffffff8000399281 : mov ecx, dword ptr [rdi] ; mov word ptr [rsi], cx ; xor eax, eax ; ret
0xffffff80002f7ce2 : mov ecx, dword ptr [rdx + 0x50] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800072ede1 : mov ecx, dword ptr [rdx - 0x76b7004a] ; ret
0xffffff80005801b2 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005801a8 ; pop rbp ; ret
0xffffff8000581565 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000581558 ; pop rbp ; ret
0xffffff8000582532 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000582528 ; pop rbp ; ret
0xffffff80005b2152 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005b2148 ; pop rbp ; ret
0xffffff80005bf822 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005bf818 ; pop rbp ; ret
0xffffff80005ebec2 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005ebeb8 ; pop rbp ; ret
0xffffff8000637ad2 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000637ac8 ; pop rbp ; ret
0xffffff80008c78a2 : mov ecx, dword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80008c7898 ; pop rbp ; ret
0xffffff80008ed975 : mov ecx, dword ptr [rip + 0x211939] ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0xffffff8000909926 : mov ecx, dword ptr [rip + 0x22df94] ; jmp 0xffffff80009098f7
0xffffff8000909846 : mov ecx, dword ptr [rip + 0x22e074] ; jmp 0xffffff8000909817
0xffffff800086699f : mov ecx, dword ptr [rip + 0x2cfe5b] ; pop rbp ; jmp rax
0xffffff800086697f : mov ecx, dword ptr [rip + 0x2cfe7b] ; pop rbp ; jmp rax
0xffffff80003893fa : mov ecx, dword ptr [rsi + 0x18] ; mov rax, qword ptr [rsi + 0x20] ; call rdi
0xffffff800065589e : mov ecx, dword ptr [rsi + 0x28] ; mov dword ptr [rbp - 0x40], ecx ; mov rdi, r14 ; call qword ptr [rax]
0xffffff80007b2503 : mov ecx, dword ptr [rsi + 0x30] ; jmp 0xffffff80007b2518
0xffffff8000847eb1 : mov ecx, dword ptr [rsi + 0x30] ; mov edx, eax ; jmp 0xffffff8000847eca
0xffffff8000870c58 : mov ecx, dword ptr [rsi + 0x40] ; sub eax, ecx ; pop rbp ; ret
0xffffff800087c2c2 : mov ecx, dword ptr [rsi + 0x60] ; mov rsi, r13 ; mov r8d, eax ; call rbx
0xffffff8000879ed8 : mov ecx, dword ptr [rsi + 0x60] ; mov rsi, r14 ; call rax
0xffffff8000879a0e : mov ecx, dword ptr [rsi + 0x60] ; mov rsi, rbx ; call rax
0xffffff8000508292 : mov ecx, dword ptr [rsi + 8] ; sub eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff800038977d : mov ecx, dword ptr [rsp + 8] ; lea rdi, [rbp - 0x2c] ; call qword ptr [rax]
0xffffff800050e96b : mov ecx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp r8
0xffffff80003888fb : mov ecx, eax ; call 0xffffff8000384b44
0xffffff80008bc002 : mov ecx, eax ; call r10
0xffffff80008bde1c : mov ecx, eax ; call r12
0xffffff8000397cb8 : mov ecx, eax ; cmp ecx, 1 ; jne 0xffffff8000397cd8 ; pop rbp ; ret
0xffffff8000397cf9 : mov ecx, eax ; cmp ecx, 1 ; jne 0xffffff8000397d0a ; pop rbp ; ret
0xffffff8000397d29 : mov ecx, eax ; cmp ecx, 2 ; jne 0xffffff8000397d3a ; pop rbp ; ret
0xffffff8000705459 : mov ecx, eax ; cmp ecx, 2 ; jne 0xffffff800070546a ; pop rbp ; ret
0xffffff800051f8c8 : mov ecx, eax ; jmp rdx
0xffffff800078efb0 : mov ecx, eax ; mov eax, ecx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80008b2d67 : mov ecx, eax ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff800089891a : mov ecx, eax ; mov r8d, r9d ; call r10
0xffffff80004b4441 : mov ecx, eax ; mov r9d, ebx ; call 0xffffff80004c06f7
0xffffff800067a807 : mov ecx, eax ; mov rax, rcx ; pop rbp ; ret
0xffffff800072bafe : mov ecx, eax ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0xffffff80006ecd90 : mov ecx, eax ; movsxd rax, dword ptr [rcx + r13*4] ; add rax, rcx ; jmp rax
0xffffff8000486577 : mov ecx, eax ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0xffffff800089281c : mov ecx, eax ; pop rbp ; jmp r8
0xffffff80008456bd : mov ecx, eax ; pop rbp ; jmp rax
0xffffff80002a055a : mov ecx, eax ; xor eax, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80002d9f6b : mov ecx, ebp ; call 0xffffff800028e1b8
0xffffff800066a480 : mov ecx, ebp ; call 0xffffff800028e4a5
0xffffff8000703e93 : mov ecx, ebp ; call 0xffffff8000500124
0xffffff80004f0f8d : mov ecx, ebp ; call 0xffffff800078d254
0xffffff8000829e5d : mov ecx, ebp ; call r15
0xffffff8000534560 : mov ecx, ebp ; call rax
0xffffff80008f5e27 : mov ecx, ebp ; call rbx
0xffffff800074f2a4 : mov ecx, ebp ; mov r8, qword ptr [rbp - 0x38] ; mov r9, r14 ; call rax
0xffffff800074acb5 : mov ecx, ebp ; mov r8, r12 ; mov r9, r15 ; call rax
0xffffff8000837197 : mov ecx, ebp ; mov r8, r14 ; call r9
0xffffff80006676b1 : mov ecx, ebp ; mov r8, rdi ; call 0xffffff800028e4a8
0xffffff80008ef16b : mov ecx, ebp ; mov r8d, r14d ; call rbx
0xffffff80008f7aae : mov ecx, ebp ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fa87b : mov ecx, ebp ; mov r9, qword ptr [rbp - 0x38] ; call r10
0xffffff80008fa42f : mov ecx, ebp ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f6524 : mov ecx, ebp ; mov r9, r12 ; call rbx
0xffffff80008f6a05 : mov ecx, ebp ; mov r9, r14 ; call rax
0xffffff800066c745 : mov ecx, ebp ; xor r13d, r13d ; call 0xffffff800028e4a8
0xffffff800082a29c : mov ecx, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80004b4444 : mov ecx, ebx ; call 0xffffff80004c06f4
0xffffff800067a050 : mov ecx, ebx ; call 0xffffff8000666264
0xffffff80008bc0a4 : mov ecx, ebx ; call r10
0xffffff80008bcfc1 : mov ecx, ebx ; call r14
0xffffff80008bd380 : mov ecx, ebx ; call r15
0xffffff80004923c8 : mov ecx, ebx ; call r9
0xffffff80002cf629 : mov ecx, ebx ; call rax
0xffffff800059476a : mov ecx, ebx ; jmp rdi
0xffffff80008bd6d2 : mov ecx, ebx ; mov r8, r10 ; mov r9, r15 ; call r14
0xffffff800049e5af : mov ecx, ebx ; mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008744bb : mov ecx, ecx ; pop rbp ; jmp r11
0xffffff800089285d : mov ecx, ecx ; pop rbp ; jmp rax
0xffffff8000651b11 : mov ecx, ecx ; ret
0xffffff80006450c7 : mov ecx, edi ; call 0xffffff800028e1b9
0xffffff8000281b67 : mov ecx, edi ; call qword ptr [rdi]
0xffffff8000757624 : mov ecx, edi ; call r12
0xffffff80008bd0bc : mov ecx, edi ; call r14
0xffffff8000606427 : mov ecx, edi ; call r8
0xffffff800049f9ab : mov ecx, edi ; call rax
0xffffff80008d3f8f : mov ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800067e6a6 : mov ecx, edi ; mov r12, r10 ; call 0xffffff800029e858
0xffffff80008bd030 : mov ecx, edi ; mov r8, r10 ; mov r9, r11 ; call r14
0xffffff80008f6785 : mov ecx, edi ; mov r9, r14 ; call rax
0xffffff800039925e : mov ecx, edx ; and ecx, 7 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0xffffff80008bd077 : mov ecx, edx ; call r14
0xffffff80008bd33b : mov ecx, edx ; call r15
0xffffff80007ec9a5 : mov ecx, edx ; call rbx
0xffffff800028e84e : mov ecx, edx ; jne 0xffffff800028e845 ; pop rbp ; ret
0xffffff80004a53ce : mov ecx, edx ; jne 0xffffff80004a53c5 ; pop rbp ; ret
0xffffff800072db1e : mov ecx, edx ; jne 0xffffff800072db19 ; or byte ptr [rdi + 0x32], 8 ; pop rbp ; ret
0xffffff80008bcff5 : mov ecx, edx ; mov r8, r11 ; call r14
0xffffff80008bd2b7 : mov ecx, edx ; mov r8, r14 ; call r15
0xffffff80008bd694 : mov ecx, edx ; mov r8, r15 ; call r14
0xffffff8000389760 : mov ecx, edx ; shr rcx, 0x20 ; call qword ptr [rax]
0xffffff800039f1eb : mov ecx, esi ; add rcx, rax ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800066a018 : mov ecx, esi ; call 0xffffff800028e4a5
0xffffff80003951a2 : mov ecx, esi ; call 0xffffff8000381404
0xffffff8000770ff7 : mov ecx, esi ; call 0xffffff8000396b85
0xffffff800030d37b : mov ecx, esi ; call 0xffffff8000398879
0xffffff8000845e8a : mov ecx, esi ; call qword ptr [r12 + 0x10]
0xffffff80002672ba : mov ecx, esi ; call qword ptr [rbx]
0xffffff80008bd23b : mov ecx, esi ; call r15
0xffffff80008fe582 : mov ecx, esi ; call r8
0xffffff8000901acf : mov ecx, esi ; call r9
0xffffff800074f2ab : mov ecx, esi ; call rax
0xffffff80008f7198 : mov ecx, esi ; call rbx
0xffffff80004578ea : mov ecx, esi ; jmp rax
0xffffff8000366911 : mov ecx, esi ; jne 0xffffff8000366908 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000593acd : mov ecx, esi ; mov r8, qword ptr [rbp - 0xe0] ; call rax
0xffffff800051bc8d : mov ecx, esi ; mov r8, rbx ; call rax
0xffffff80006674c9 : mov ecx, esi ; mov r8, rdi ; call 0xffffff800028e4a8
0xffffff80008fa636 : mov ecx, esi ; mov r9d, dword ptr [rbp - 0x44] ; call r10
0xffffff80002908e3 : mov ecx, esi ; mov rsi, rdi ; jne 0xffffff80002908d8 ; pop rbp ; ret
0xffffff80007f9e1e : mov ecx, esp ; call 0xffffff800029e858
0xffffff800032cb2e : mov ecx, esp ; call 0xffffff8000384b49
0xffffff8000757ad0 : mov ecx, esp ; call r15
0xffffff80005343c2 : mov ecx, esp ; call r8
0xffffff800090946b : mov ecx, esp ; call rax
0xffffff80008f6527 : mov ecx, esp ; call rbx
0xffffff80003a48b1 : mov ecx, esp ; mov eax, 0xffffffc6 ; xor ebx, ebx ; sysenter
0xffffff800074ef99 : mov ecx, esp ; mov r8, r13 ; mov r15, r9 ; call r10
0xffffff80008fb9b9 : mov ecx, r12d ; call rbx
0xffffff80008ef16a : mov ecx, r13d ; mov r8d, r14d ; call rbx
0xffffff800066c744 : mov ecx, r13d ; xor r13d, r13d ; call 0xffffff800028e4a9
0xffffff800066c3a0 : mov ecx, r14d ; call 0xffffff800028e4a6
0xffffff8000900487 : mov ecx, r14d ; call r8
0xffffff80008f68be : mov ecx, r14d ; call rax
0xffffff80008f7197 : mov ecx, r14d ; call rbx
0xffffff80006674c8 : mov ecx, r14d ; mov r8, rdi ; call 0xffffff800028e4a9
0xffffff8000281b66 : mov ecx, r15d ; call qword ptr [rdi]
0xffffff8000606426 : mov ecx, r15d ; call r8
0xffffff800067e6a5 : mov ecx, r15d ; mov r12, r10 ; call 0xffffff800029e859
0xffffff8000892adf : mov ecx, r8d ; pop rbp ; jmp rax
0xffffff8000b449ec : mov edi, 0 ; ret
0xffffff8000b3d75c : mov edi, 0x1417bdf ; ret 0xe781
0xffffff800029ddf0 : mov edi, 0x20 ; mov rsi, r13 ; call r12
0xffffff800029e590 : mov edi, 0x20 ; mov rsi, rbx ; call r15
0xffffff8000b45728 : mov edi, 0x2149bffd ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000b44942 : mov edi, 0x214d37ff ; retf 0xc148 ; jmp qword ptr [rax]
0xffffff80008b5144 : mov edi, 0x28 ; call 0xffffff80008113f7
0xffffff80008e826d : mov edi, 0x2d0 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800064e912 : mov edi, 0x31003592 ; shr al, 0x83 ; sti ; ret
0xffffff800065a011 : mov edi, 0x31004815 ; shr al, 0x84 ; ret
0xffffff80002b4c25 : mov edi, 0x318 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff800039f401 : mov edi, 0x32 ; mov esi, eax ; call rbx
0xffffff80003a7dcd : mov edi, 0x34 ; mov esi, eax ; call rbx
0xffffff80003a84d8 : mov edi, 0x34 ; pop rbp ; jmp rax
0xffffff80003a8505 : mov edi, 0x34 ; pop rbp ; jmp rcx
0xffffff80003a7d8b : mov edi, 0x37 ; mov esi, eax ; call rbx
0xffffff80003a801a : mov edi, 0x37 ; pop rbp ; jmp rax
0xffffff800029db29 : mov edi, 0x3e ; mov rsi, rbx ; call r15
0xffffff800080103d : mov edi, 0x48002501 ; add esp, 0x10 ; pop rbp ; ret
0xffffff800079332c : mov edi, 0x559066ff ; mov rbp, rsp ; pop rbp ; ret
0xffffff80007935ff : mov edi, 0x5bc031ff ; pop r14 ; pop rbp ; ret
0xffffff800079359d : mov edi, 0x5bd889ff ; pop r14 ; pop rbp ; ret
0xffffff800028c33d : mov edi, 0x5bfffff3 ; pop rbp ; ret
0xffffff80008d650d : mov edi, 0x5d00260f ; ret
0xffffff80008ce60d : mov edi, 0x5d00268d ; ret
0xffffff80008a5d4d : mov edi, 0x5d002911 ; ret
0xffffff80008913bd : mov edi, 0x5d002a58 ; ret
0xffffff800083055d : mov edi, 0x5d00304e ; ret
0xffffff8000815dad : mov edi, 0x5d0031f4 ; ret
0xffffff8000690947 : mov edi, 0x5dc031ff ; ret
0xffffff800036e66d : mov edi, 0x5dfff5bc ; ret
0xffffff800029db08 : mov edi, 0x70 ; mov rsi, rbx ; call r15
0xffffff800029db1e : mov edi, 0x72 ; mov rsi, rbx ; call r15
0xffffff800029db13 : mov edi, 0x74 ; mov rsi, rbx ; call r15
0xffffff80008e034b : mov edi, 0x8008501a ; call rax
0xffffff80008e031e : mov edi, 0x8008501b ; call rax
0xffffff8000b3c96c : mov edi, 0x817db9af ; ret 0xf7c8
0xffffff80002643f8 : mov edi, 0x83 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800027478d : mov edi, 0x83000199 ; ret
0xffffff800048c656 : mov edi, 0x8348fff0 ; ret
0xffffff8000577fd0 : mov edi, 0x83fa8944 ; ret 0xffe
0xffffff800044b0ea : mov edi, 0x88 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff800079ed1d : mov edi, 0x89000000 ; ret
0xffffff800084c4ad : mov edi, 0x89000030 ; ret
0xffffff800025c0ad : mov edi, 0x8900036c ; ret
0xffffff80003fd1dd : mov edi, 0x890004c2 ; ret
0xffffff80003e31dd : mov edi, 0x89000662 ; ret
0xffffff800064b28d : mov edi, 0x890017f9 ; ret
0xffffff800045329d : mov edi, 0x890030bb ; ret
0xffffff80007b0bed : mov edi, 0x89480005 ; ret 0x728b
0xffffff80008a5421 : mov edi, 0x8948fff6 ; ret
0xffffff80007c8a7d : mov edi, 0x8948fffe ; ret
0xffffff800081546b : mov edi, 0x8948ffff ; ret
0xffffff800059714c : mov edi, 0x894cfffe ; out dx, eax ; call 0xffffff80005833e8
0xffffff80007fbd6d : mov edi, 0x89ffcfec ; ret
0xffffff80007d1cdd : mov edi, 0x89ffdf0a ; ret
0xffffff800046d6dd : mov edi, 0x89fffdf1 ; ret
0xffffff8000676f6d : mov edi, 0x89fffffb ; ret
0xffffff800029b701 : mov edi, 0x9c8948c0 ; ret 0x98
0xffffff80005df5d8 : mov edi, 0x9e96 ; add dh, dh ; ret 0x7502
0xffffff80008e674e : mov edi, 0xa0 ; call 0xffffff8000392a47
0xffffff80003a84af : mov edi, 0xb ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80004c9379 : mov edi, 0xb8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda08
0xffffff800081c140 : mov edi, 0xc0 ; ret
0xffffff80003a0af4 : mov edi, 0xc00 ; call rax
0xffffff80003a03e2 : mov edi, 0xc00 ; mov rbx, r8 ; call rax
0xffffff8000b4a49b : mov edi, 0xc402c101 ; xchg eax, edx ; push rax ; push rcx ; ret 0x8a41
0xffffff80007a55ca : mov edi, 0xc48348ff ; cmp byte ptr [rbx + 0x5d], bl ; ret
0xffffff800083d525 : mov edi, 0xc8 ; add dword ptr [rdi], ecx ; lahf ; ret 0xf983
0xffffff80003a8d6d : mov edi, 0xd ; call rax
0xffffff8000895174 : mov edi, 0xe8 ; call 0xffffff80008113f7
0xffffff8000423d85 : mov edi, 0xe8006f01 ; ret 0x297
0xffffff8000258475 : mov edi, 0xe80088f3 ; ret 0x13ab
0xffffff80003a7dee : mov edi, 0xf ; mov esi, eax ; call rbx
0xffffff8000794031 : mov edi, 0xf08944ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800064a008 : mov edi, 0xf640c883 ; rol dword ptr [rdi + rcx], 0x44 ; ret 0x8941
0xffffff80007aa2df : mov edi, 0xf75f3fff ; ret 0
0xffffff800079c205 : mov edi, 0xf7d889ff ; fmul dword ptr [rdi] ; ret
0xffffff80007e06f3 : mov edi, 0xff48002a ; ret
0xffffff8000b46d63 : mov edi, 0xffeff9db ; call qword ptr [rbx]
0xffffff80004a0d5e : mov edi, 0xffffffe8 ; call 0xffffff800080cfb7
0xffffff8000267797 : mov edi, 0xfffffffa ; call rbx
0xffffff800080ced2 : mov edi, 0xffffffff ; mov eax, edi ; pop rbp ; ret
0xffffff800034d931 : mov edi, 1 ; call rax
0xffffff80008a8396 : mov edi, 1 ; cmovne edi, esi ; pop rbp ; jmp rcx
0xffffff8000552754 : mov edi, 1 ; xor edx, edx ; call rax
0xffffff800032fa90 : mov edi, 2 ; call 0xffffff800029bce7
0xffffff80002d2e87 : mov edi, 6 ; jmp 0xffffff80002d2ec7
0xffffff80003b88a6 : mov edi, 7 ; call r15
0xffffff80003b8a57 : mov edi, 7 ; call rax
0xffffff800029c7f2 : mov edi, dword ptr [r12 + 0x4c] ; xor esi, esi ; call rax
0xffffff80004e2d70 : mov edi, dword ptr [r12] ; call 0xffffff800075f016
0xffffff80003896fa : mov edi, dword ptr [r12] ; call qword ptr [rax]
0xffffff8000569965 : mov edi, dword ptr [r14 + 0x7e] ; xor esi, esi ; call rax
0xffffff800033a637 : mov edi, dword ptr [r15 + 0x38] ; call 0xffffff8000396866
0xffffff80007f6832 : mov edi, dword ptr [rax + 0x10] ; call 0xffffff8000392a45
0xffffff800076a12e : mov edi, dword ptr [rax + 0x10] ; call 0xffffff8000392a46
0xffffff8000884cb9 : mov edi, dword ptr [rax + 0x10] ; call 0xffffff80008c0f85
0xffffff80004c38d6 : mov edi, dword ptr [rax + 0x18] ; mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000401e50 : mov edi, dword ptr [rax + 0x1a0] ; call 0xffffff800010e088
0xffffff800037505f : mov edi, dword ptr [rax + 0x28] ; jmp 0xffffff8000375383
0xffffff8000807fd8 : mov edi, dword ptr [rax + 0x5b8] ; mov rbx, r8 ; call rax
0xffffff80004c40c5 : mov edi, dword ptr [rax + 0xd0] ; call 0xffffff8000510378
0xffffff800082ca42 : mov edi, dword ptr [rax + rbx*8] ; mov rsi, r14 ; call rcx
0xffffff80006c11b5 : mov edi, dword ptr [rax - 0x75000000] ; push rbx ; adc byte ptr [rcx], al ; ret 0xd129
0xffffff8000755c86 : mov edi, dword ptr [rax] ; add al, ch ; mov dl, 0xd3 ; ret
0xffffff80007b9524 : mov edi, dword ptr [rax] ; test rdi, rdi ; jne 0xffffff80007b9528 ; pop rbp ; ret
0xffffff80003768b9 : mov edi, dword ptr [rbp + 0x10] ; call rax
0xffffff800089426c : mov edi, dword ptr [rbp + 0x18] ; mov rsi, r13 ; call r15
0xffffff800084d204 : mov edi, dword ptr [rbp + 0x20] ; jmp rdx
0xffffff80007c7b48 : mov edi, dword ptr [rbp - 0x138] ; call 0xffffff80007d3e28
0xffffff80006a1258 : mov edi, dword ptr [rbp - 0x158] ; call rax
0xffffff80005e2116 : mov edi, dword ptr [rbp - 0x178] ; call rax
0xffffff80006594e6 : mov edi, dword ptr [rbp - 0x1a8] ; call qword ptr [rax]
0xffffff8000516ae9 : mov edi, dword ptr [rbp - 0x1e0] ; mov rdx, r12 ; call rax
0xffffff8000770322 : mov edi, dword ptr [rbp - 0x2c8] ; call 0xffffff8000392a49
0xffffff800077038a : mov edi, dword ptr [rbp - 0x2c8] ; call 0xffffff8000393049
0xffffff8000771400 : mov edi, dword ptr [rbp - 0x2e0] ; call 0xffffff8000392a49
0xffffff8000771426 : mov edi, dword ptr [rbp - 0x2e0] ; call 0xffffff8000393049
0xffffff800076346e : mov edi, dword ptr [rbp - 0x30] ; call 0xffffff8000392a46
0xffffff8000763593 : mov edi, dword ptr [rbp - 0x30] ; call 0xffffff8000393046
0xffffff80007fe180 : mov edi, dword ptr [rbp - 0x30] ; call r15
0xffffff800084556a : mov edi, dword ptr [rbp - 0x30] ; call rcx
0xffffff80006064ae : mov edi, dword ptr [rbp - 0x30] ; mov esi, r13d ; call rbx
0xffffff80008f7191 : mov edi, dword ptr [rbp - 0x30] ; mov rsi, r12 ; mov ecx, r14d ; call rbx
0xffffff80008f7f58 : mov edi, dword ptr [rbp - 0x30] ; mov rsi, r12 ; mov rcx, r14 ; call rbx
0xffffff80008fb8c4 : mov edi, dword ptr [rbp - 0x30] ; mov rsi, r15 ; call rbx
0xffffff80008fb9b3 : mov edi, dword ptr [rbp - 0x30] ; mov rsi, r15 ; mov ecx, r12d ; call rbx
0xffffff8000845559 : mov edi, dword ptr [rbp - 0x30] ; mov rsi, rax ; call rcx
0xffffff800076345a : mov edi, dword ptr [rbp - 0x38] ; call 0xffffff80003923e6
0xffffff80006f13bb : mov edi, dword ptr [rbp - 0x38] ; call 0xffffff8000393049
0xffffff80008f084e : mov edi, dword ptr [rbp - 0x38] ; mov rsi, rbx ; mov rdx, r15 ; call rax
0xffffff80008f6520 : mov edi, dword ptr [rbp - 0x40] ; mov rcx, r13 ; mov r9, r12 ; call rbx
0xffffff80008f841a : mov edi, dword ptr [rbp - 0x40] ; mov rsi, r14 ; call r15
0xffffff800054544d : mov edi, dword ptr [rbp - 0x48] ; mov rsi, r12 ; call r14
0xffffff80003efba3 : mov edi, dword ptr [rbp - 0x50] ; call 0xffffff8000393049
0xffffff800081cdc0 : mov edi, dword ptr [rbp - 0x50] ; call rcx
0xffffff800081cdaf : mov edi, dword ptr [rbp - 0x50] ; mov rsi, rax ; call rcx
0xffffff8000720c81 : mov edi, dword ptr [rbp - 0x50] ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000720c9f
0xffffff80007d9fa4 : mov edi, dword ptr [rbp - 0x548] ; mov rdx, r15 ; call rax
0xffffff800050dd0b : mov edi, dword ptr [rbp - 0x54] ; call rax
0xffffff80003f0a40 : mov edi, dword ptr [rbp - 0x58] ; call 0xffffff8000393049
0xffffff800076520a : mov edi, dword ptr [rbp - 0x58] ; mov rbx, rax ; call 0xffffff8000393049
0xffffff80008f1793 : mov edi, dword ptr [rbp - 0x60] ; call rbx
0xffffff80008f181c : mov edi, dword ptr [rbp - 0x60] ; call rcx
0xffffff80006e7ea9 : mov edi, dword ptr [rbp - 0x650] ; call 0xffffff80006e40c8
0xffffff80002d6679 : mov edi, dword ptr [rbp - 0x68] ; call 0xffffff8000392935
0xffffff80002d6d46 : mov edi, dword ptr [rbp - 0x68] ; call 0xffffff8000393045
0xffffff800051cf5b : mov edi, dword ptr [rbp - 0x68] ; mov rdx, r15 ; call rax
0xffffff80003aa486 : mov edi, dword ptr [rbp - 0x70] ; mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003aa605 : mov edi, dword ptr [rbp - 0x70] ; mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff800068e28e : mov edi, dword ptr [rbp - 0x80] ; mov rdx, rbx ; call rax
0xffffff80004731c5 : mov edi, dword ptr [rbp - 0xb8] ; call 0xffffff80007af418
0xffffff8000651a86 : mov edi, dword ptr [rbp - 0xb8] ; call qword ptr [r15]
0xffffff80006521ab : mov edi, dword ptr [rbp - 0xc8] ; call qword ptr [r15]
0xffffff80006521e2 : mov edi, dword ptr [rbp - 0xc8] ; call qword ptr [rbx]
0xffffff800063415f : mov edi, dword ptr [rbp - 0xd0] ; call 0xffffff80007d0468
0xffffff800065b331 : mov edi, dword ptr [rbp - 0xd0] ; mov edx, r12d ; call rax
0xffffff8000668211 : mov edi, dword ptr [rbp - 0xe0] ; call rax
0xffffff800070f621 : mov edi, dword ptr [rbp - 0xe8] ; call 0xffffff80004bb928
0xffffff8000389829 : mov edi, dword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff8000375e43 : mov edi, dword ptr [rbx + 0x10] ; call rax
0xffffff8000389856 : mov edi, dword ptr [rbx + 0x10] ; mov rsi, qword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff800060fc8e : mov edi, dword ptr [rbx + 0x10] ; mov rsi, r15 ; mov rdx, r14 ; call rax
0xffffff800060ec1f : mov edi, dword ptr [rbx + 0x10] ; mov rsi, r15 ; mov rdx, r14 ; call rcx
0xffffff80008944fa : mov edi, dword ptr [rbx + 0x18] ; mov rsi, rbx ; call r15
0xffffff8000288df7 : mov edi, dword ptr [rbx + 0x20] ; call rax
0xffffff8000288f39 : mov edi, dword ptr [rbx + 0x20] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800053a013 : mov edi, dword ptr [rbx + 0x28] ; call rax
0xffffff80002dc497 : mov edi, dword ptr [rbx + 0x28] ; lea rsi, [r14 + 0x30] ; call rax
0xffffff80005526f3 : mov edi, dword ptr [rbx + 0x30] ; mov esi, 1 ; call rax
0xffffff8000821a8e : mov edi, dword ptr [rbx + 0x48] ; call rax
0xffffff8000840416 : mov edi, dword ptr [rbx + 0x50] ; call rcx
0xffffff80008808af : mov edi, dword ptr [rbx + 0x50] ; mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff800084233f : mov edi, dword ptr [rbx + 0x50] ; mov rsi, rax ; call rcx
0xffffff8000799f15 : mov edi, dword ptr [rbx + 0x60] ; mov esi, 1 ; call rax
0xffffff8000799c64 : mov edi, dword ptr [rbx + 0x60] ; xor edx, edx ; mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff800056a4ab : mov edi, dword ptr [rbx + 0x7e] ; xor esi, esi ; call rax
0xffffff8000778f71 : mov edi, dword ptr [rbx + 0xf8] ; call 0xffffff800039d369
0xffffff80002a14c1 : mov edi, dword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80002a14ae : mov edi, dword ptr [rbx + 8] ; call rcx
0xffffff800074b481 : mov edi, dword ptr [rbx + 8] ; xor esi, esi ; xor edx, edx ; call qword ptr [rbx]
0xffffff80006d4b68 : mov edi, dword ptr [rbx] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0xffffff80006d4b53 : mov edi, dword ptr [rbx] ; add dword ptr [rax], eax ; add dh, dh ; rol dword ptr [rcx], 0x89 ; ret 0xe75
0xffffff80002a0ef1 : mov edi, dword ptr [rbx] ; call 0xffffff80002b3f29
0xffffff80008a1df8 : mov edi, dword ptr [rbx] ; call 0xffffff8000338c69
0xffffff80002f7521 : mov edi, dword ptr [rbx] ; call 0xffffff800034faf9
0xffffff800049a841 : mov edi, dword ptr [rbx] ; call 0xffffff800049ae69
0xffffff8000743e10 : mov edi, dword ptr [rbx] ; call rcx
0xffffff800084c67d : mov edi, dword ptr [rbx] ; shr edi, 0x1c ; call rax
0xffffff80003bab24 : mov edi, dword ptr [rcx + 0x3a8] ; pop rbp ; jmp rax
0xffffff80003baaeb : mov edi, dword ptr [rcx + 0x490] ; pop rbp ; jmp rax
0xffffff80005fe98b : mov edi, dword ptr [rcx + rsi*4 + 0x58] ; mov dword ptr [rcx + rsi*4 + 0x5c], edi ; jmp 0xffffff80005fe961
0xffffff8000376489 : mov edi, dword ptr [rdi + 0x10] ; call rax
0xffffff800080fe5f : mov edi, dword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0xffffff800080fe59 ; pop rbp ; ret
0xffffff8000288c27 : mov edi, dword ptr [rdi + 0x20] ; call rax
0xffffff800033a638 : mov edi, dword ptr [rdi + 0x38] ; call 0xffffff8000396865
0xffffff80008e674d : mov edi, dword ptr [rdi + 0xa0] ; call 0xffffff8000392a48
0xffffff80007b8804 : mov edi, dword ptr [rdi] ; test rdi, rdi ; jne 0xffffff80007b8808 ; pop rbp ; ret
0xffffff80008791fa : mov edi, dword ptr [rdx] ; mov rsi, rbx ; call rax
0xffffff80008dc641 : mov edi, dword ptr [rip + 0x208e49] ; call 0xffffff8000858908
0xffffff800086c7aa : mov edi, dword ptr [rip + 0x278ce0] ; call 0xffffff8000858a28
0xffffff80008667fe : mov edi, dword ptr [rip + 0x27ec34] ; call 0xffffff8000392a48
0xffffff800086677f : mov edi, dword ptr [rip + 0x27ecb3] ; call 0xffffff8000392a48
0xffffff80008a6e14 : mov edi, dword ptr [rip + 0x28e36e] ; call 0xffffff8000393048
0xffffff80008a6e06 : mov edi, dword ptr [rip + 0x28e37c] ; call 0xffffff8000393048
0xffffff800076b567 : mov edi, dword ptr [rip + 0x3732d3] ; call 0xffffff8000393049
0xffffff800076b52d : mov edi, dword ptr [rip + 0x37330d] ; call 0xffffff8000392a49
0xffffff800076aac0 : mov edi, dword ptr [rip + 0x373d7a] ; call 0xffffff8000393049
0xffffff800076aa30 : mov edi, dword ptr [rip + 0x373e0a] ; call 0xffffff8000392a49
0xffffff800076a928 : mov edi, dword ptr [rip + 0x373f12] ; call 0xffffff8000393049
0xffffff800076a8fb : mov edi, dword ptr [rip + 0x373f3f] ; call 0xffffff8000393049
0xffffff800076a8a1 : mov edi, dword ptr [rip + 0x373f99] ; call 0xffffff8000393049
0xffffff800076a871 : mov edi, dword ptr [rip + 0x373fc9] ; call 0xffffff8000392a49
0xffffff800076a82f : mov edi, dword ptr [rip + 0x37400b] ; call 0xffffff8000392a49
0xffffff800076a682 : mov edi, dword ptr [rip + 0x3741b8] ; call 0xffffff8000393049
0xffffff800076a631 : mov edi, dword ptr [rip + 0x374209] ; call 0xffffff8000392a49
0xffffff800076a51f : mov edi, dword ptr [rip + 0x37431b] ; call 0xffffff8000393049
0xffffff800076a4b8 : mov edi, dword ptr [rip + 0x374382] ; call 0xffffff8000393049
0xffffff800076a405 : mov edi, dword ptr [rip + 0x374435] ; call 0xffffff8000393049
0xffffff800076a3ee : mov edi, dword ptr [rip + 0x37444c] ; call 0xffffff8000393049
0xffffff800076a395 : mov edi, dword ptr [rip + 0x3744a5] ; call 0xffffff8000393049
0xffffff800076a32e : mov edi, dword ptr [rip + 0x37450c] ; call 0xffffff8000392a49
0xffffff8000769d5b : mov edi, dword ptr [rip + 0x374adf] ; call 0xffffff8000393049
0xffffff8000769d3b : mov edi, dword ptr [rip + 0x374aff] ; call 0xffffff8000392a49
0xffffff8000769d22 : mov edi, dword ptr [rip + 0x374b18] ; call 0xffffff8000393049
0xffffff8000769cfb : mov edi, dword ptr [rip + 0x374b3f] ; call 0xffffff8000393049
0xffffff8000769cb6 : mov edi, dword ptr [rip + 0x374b84] ; call 0xffffff8000392a49
0xffffff8000769c82 : mov edi, dword ptr [rip + 0x374bb8] ; call 0xffffff8000393049
0xffffff8000769be4 : mov edi, dword ptr [rip + 0x374c56] ; call 0xffffff8000393049
0xffffff8000769b80 : mov edi, dword ptr [rip + 0x374cba] ; call 0xffffff8000392a49
0xffffff8000769a8c : mov edi, dword ptr [rip + 0x374dae] ; call 0xffffff8000393049
0xffffff8000769a05 : mov edi, dword ptr [rip + 0x374e35] ; call 0xffffff8000392a49
0xffffff80007699da : mov edi, dword ptr [rip + 0x374e60] ; call 0xffffff8000393049
0xffffff800076996b : mov edi, dword ptr [rip + 0x374ecf] ; call 0xffffff8000392a49
0xffffff80007698ba : mov edi, dword ptr [rip + 0x374f80] ; call 0xffffff8000393049
0xffffff800076981e : mov edi, dword ptr [rip + 0x37501c] ; call 0xffffff8000393049
0xffffff80007697ce : mov edi, dword ptr [rip + 0x37506c] ; call 0xffffff8000393049
0xffffff80007696b8 : mov edi, dword ptr [rip + 0x375182] ; call 0xffffff8000393049
0xffffff8000769511 : mov edi, dword ptr [rip + 0x375329] ; call 0xffffff8000393049
0xffffff80007693d9 : mov edi, dword ptr [rip + 0x375461] ; call 0xffffff8000393049
0xffffff80007691e3 : mov edi, dword ptr [rip + 0x375657] ; call 0xffffff8000392a49
0xffffff80007691b6 : mov edi, dword ptr [rip + 0x375684] ; call 0xffffff8000393049
0xffffff8000769091 : mov edi, dword ptr [rip + 0x3757a9] ; call 0xffffff8000392a49
0xffffff800076835d : mov edi, dword ptr [rip + 0x3764dd] ; call 0xffffff8000392a49
0xffffff80007682a3 : mov edi, dword ptr [rip + 0x376597] ; call 0xffffff8000393049
0xffffff8000767f90 : mov edi, dword ptr [rip + 0x3768aa] ; call 0xffffff8000392a49
0xffffff8000767f09 : mov edi, dword ptr [rip + 0x376931] ; call 0xffffff8000393049
0xffffff8000767ebb : mov edi, dword ptr [rip + 0x37697f] ; call 0xffffff8000392a49
0xffffff8000786d6e : mov edi, dword ptr [rip + 0x3a851c] ; call 0xffffff8000393048
0xffffff80006b67d7 : mov edi, dword ptr [rip + 0x3be433] ; call 0xffffff8000392a48
0xffffff8000770d9a : mov edi, dword ptr [rip + 0x3be4f8] ; call 0xffffff8000393049
0xffffff8000770d7a : mov edi, dword ptr [rip + 0x3be518] ; call 0xffffff8000392a49
0xffffff800076ea3f : mov edi, dword ptr [rip + 0x3c148b] ; call 0xffffff8000392939
0xffffff800076d392 : mov edi, dword ptr [rip + 0x3c1ef8] ; call 0xffffff8000393049
0xffffff800076d37e : mov edi, dword ptr [rip + 0x3c1f0c] ; call 0xffffff8000392a49
0xffffff800076de0a : mov edi, dword ptr [rip + 0x3c20c0] ; call 0xffffff8000393049
0xffffff800076dd91 : mov edi, dword ptr [rip + 0x3c2139] ; call 0xffffff8000393049
0xffffff800076dd4d : mov edi, dword ptr [rip + 0x3c217d] ; call 0xffffff8000392939
0xffffff800076cf9e : mov edi, dword ptr [rip + 0x3c22f4] ; call 0xffffff8000393049
0xffffff800076cf81 : mov edi, dword ptr [rip + 0x3c2311] ; call 0xffffff8000392a49
0xffffff800076cf6b : mov edi, dword ptr [rip + 0x3c2327] ; call 0xffffff8000393049
0xffffff8000766f9a : mov edi, dword ptr [rip + 0x3c82f8] ; call 0xffffff8000392a49
0xffffff8000766f6d : mov edi, dword ptr [rip + 0x3c831d] ; call 0xffffff8000393049
0xffffff8000766f59 : mov edi, dword ptr [rip + 0x3c8331] ; call 0xffffff8000392a49
0xffffff8000766f49 : mov edi, dword ptr [rip + 0x3c8341] ; call 0xffffff8000393049
0xffffff8000766f35 : mov edi, dword ptr [rip + 0x3c8355] ; call 0xffffff8000392a49
0xffffff8000766f29 : mov edi, dword ptr [rip + 0x3c8369] ; call 0xffffff8000393049
0xffffff8000766f03 : mov edi, dword ptr [rip + 0x3c838f] ; call 0xffffff8000392a49
0xffffff8000746d72 : mov edi, dword ptr [rip + 0x3e8518] ; call 0xffffff8000393048
0xffffff80005e673d : mov edi, dword ptr [rip + 0x482565] ; call 0xffffff8000392a48
0xffffff8000586812 : mov edi, dword ptr [rip + 0x4e2490] ; call 0xffffff8000392a48
0xffffff8000618c5e : mov edi, dword ptr [rip + 0x50b2cc] ; call 0xffffff80002d4ef8
0xffffff800053677e : mov edi, dword ptr [rip + 0x532524] ; call 0xffffff8000392a48
0xffffff80005367fe : mov edi, dword ptr [rip + 0x53314c] ; call 0xffffff8000392a48
0xffffff8000546d9f : mov edi, dword ptr [rip + 0x59155b] ; call 0xffffff8000393048
0xffffff80004b6df2 : mov edi, dword ptr [rip + 0x61fbb8] ; call 0xffffff8000393048
0xffffff80004b6691 : mov edi, dword ptr [rip + 0x620319] ; call 0xffffff8000392938
0xffffff80004d6dd5 : mov edi, dword ptr [rip + 0x642f15] ; call 0xffffff8000393048
0xffffff80004d6d42 : mov edi, dword ptr [rip + 0x642fa8] ; call 0xffffff8000393048
0xffffff80004c67e5 : mov edi, dword ptr [rip + 0x653505] ; pop rbp ; jmp 0xffffff8000392a49
0xffffff80003ac1f4 : mov edi, dword ptr [rip + 0x7260a6] ; call rax
0xffffff80003ac104 : mov edi, dword ptr [rip + 0x726196] ; call rax
0xffffff80003ac008 : mov edi, dword ptr [rip + 0x726292] ; call rax
0xffffff80003aade3 : mov edi, dword ptr [rip + 0x726dcf] ; call rax
0xffffff80003a92ac : mov edi, dword ptr [rip + 0x728906] ; call rax
0xffffff8000375d51 : mov edi, dword ptr [rsi + 0x10] ; call rax
0xffffff8000901831 : mov edi, dword ptr [rsi + 0x18] ; call rcx
0xffffff8000892ab7 : mov edi, dword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff8000655fbf : mov edi, dword ptr [rsi + 0x2c] ; mov rdi, r14 ; call qword ptr [rax]
0xffffff8000822912 : mov edi, dword ptr [rsi + 0x48] ; xor esi, esi ; call r15
0xffffff8000900be1 : mov edi, dword ptr [rsi + 0x50] ; call rcx
0xffffff80009002b1 : mov edi, dword ptr [rsi + 0x58] ; call rcx
0xffffff80005028f6 : mov edi, dword ptr [rsi + 0x60] ; call rax
0xffffff8000569966 : mov edi, dword ptr [rsi + 0x7e] ; xor esi, esi ; call rax
0xffffff80009018f1 : mov edi, dword ptr [rsi + 0x88] ; call rcx
0xffffff80008f5321 : mov edi, dword ptr [rsi + 0xe0] ; call rcx
0xffffff8000376869 : mov edi, dword ptr [rsp + 0x10] ; call rax
0xffffff8000421140 : mov edi, dword ptr [rsp + 0x28] ; mov rsi, r9 ; call rcx
0xffffff800029c7f3 : mov edi, dword ptr [rsp + 0x4c] ; xor esi, esi ; call rax
0xffffff80004e2d71 : mov edi, dword ptr [rsp] ; call 0xffffff800075f015
0xffffff80003896fb : mov edi, dword ptr [rsp] ; call qword ptr [rax]
0xffffff800057cb9c : mov edi, eax ; call 0xffffff800010e0d9
0xffffff800030f026 : mov edi, eax ; call 0xffffff800034a299
0xffffff80005a4cbe : mov edi, eax ; call 0xffffff800057f148
0xffffff80007a76d1 : mov edi, eax ; call 0xffffff800077ef58
0xffffff80007ad051 : mov edi, eax ; call 0xffffff80007a0b39
0xffffff80003f8831 : mov edi, eax ; call 0xffffff80007b4a64
0xffffff8000864364 : mov edi, eax ; call 0xffffff8000870644
0xffffff8000878467 : mov edi, eax ; call 0xffffff8000874b98
0xffffff80008bab26 : mov edi, eax ; call qword ptr [rax + 0x28]
0xffffff80008a15ee : mov edi, eax ; call r12
0xffffff800054dee1 : mov edi, eax ; call r15
0xffffff8000607e25 : mov edi, eax ; call rbx
0xffffff800052c744 : mov edi, eax ; call rcx
0xffffff80006064e0 : mov edi, eax ; mov esi, r13d ; call rbx
0xffffff80006541f0 : mov edi, eax ; mov qword ptr [rbp - 0xe8], r8 ; call qword ptr [rax]
0xffffff8000269f91 : mov edi, eax ; mov rax, rdx ; jne 0xffffff8000269f88 ; pop rbp ; ret
0xffffff80007eb022 : mov edi, eax ; mov rdi, r13 ; mov rsi, r14 ; call rbx
0xffffff8000554e34 : mov edi, eax ; mov rdi, r14 ; call 0xffffff80005510f7
0xffffff80008bd0b6 : mov edi, eax ; mov rdx, r9 ; mov r9, r15 ; call r14
0xffffff80008bd755 : mov edi, eax ; mov rdx, rbx ; mov r9, r11 ; call r14
0xffffff80008bcf56 : mov edi, eax ; mov rsi, r10 ; mov rdx, r11 ; call r14
0xffffff80008bd624 : mov edi, eax ; mov rsi, r10 ; mov rdx, r15 ; call r14
0xffffff80008708c1 : mov edi, eax ; mov rsi, r12 ; call r15
0xffffff8000860081 : mov edi, eax ; mov rsi, r14 ; call r15
0xffffff80008bdc27 : mov edi, eax ; mov rsi, rdx ; mov rdx, r15 ; call r14
0xffffff800075e140 : mov edi, eax ; pop rbp ; jmp 0xffffff800077a425
0xffffff80008dfc21 : mov edi, eax ; pop rbp ; jmp r8
0xffffff800082cc37 : mov edi, eax ; pop rbp ; jmp rcx
0xffffff80003993a1 : mov edi, eax ; xor rbp, rbp ; call rbx
0xffffff8000421e94 : mov edi, ebp ; call 0xffffff800010e144
0xffffff8000765d9f : mov edi, ebp ; call 0xffffff80003923e5
0xffffff80002ce87c : mov edi, ebp ; call 0xffffff80003923e9
0xffffff8000566235 : mov edi, ebp ; call 0xffffff80003924d4
0xffffff800031633a : mov edi, ebp ; call 0xffffff8000392604
0xffffff80003164b8 : mov edi, ebp ; call 0xffffff8000392794
0xffffff800076e3f9 : mov edi, ebp ; call 0xffffff8000392935
0xffffff8000696773 : mov edi, ebp ; call 0xffffff8000392a44
0xffffff8000764587 : mov edi, ebp ; call 0xffffff8000392a45
0xffffff80007644f7 : mov edi, ebp ; call 0xffffff8000393045
0xffffff8000299afe : mov edi, ebp ; call 0xffffff8000393048
0xffffff80006e0ebb : mov edi, ebp ; call 0xffffff8000393049
0xffffff8000597150 : mov edi, ebp ; call 0xffffff80005833e4
0xffffff80005d418a : mov edi, ebp ; call 0xffffff80005d4c78
0xffffff80006ad898 : mov edi, ebp ; call 0xffffff80006a9b84
0xffffff800056b0be : mov edi, ebp ; call 0xffffff80006b73b4
0xffffff80006187ce : mov edi, ebp ; call 0xffffff80007b4a64
0xffffff80007c897d : mov edi, ebp ; call 0xffffff80007c4bb4
0xffffff8000878774 : mov edi, ebp ; call 0xffffff80008749e4
0xffffff800087a4cb : mov edi, ebp ; call qword ptr [rax + 0x28]
0xffffff80008aeab1 : mov edi, ebp ; call qword ptr [rax + 0x38]
0xffffff800053e584 : mov edi, ebp ; call r12
0xffffff80008deb99 : mov edi, ebp ; call r15
0xffffff80004eb926 : mov edi, ebp ; call rax
0xffffff80008214d9 : mov edi, ebp ; call rbx
0xffffff80007c7dc4 : mov edi, ebp ; call rcx
0xffffff80004cc049 : mov edi, ebp ; lea rdx, [rip + 0x60b0d6] ; call rcx
0xffffff8000877308 : mov edi, ebp ; mov ebx, ecx ; call qword ptr [rax + 0x28]
0xffffff80006359ac : mov edi, ebp ; mov edx, r14d ; call rax
0xffffff80007487a1 : mov edi, ebp ; mov esi, ebx ; call 0xffffff8000370e87
0xffffff8000487083 : mov edi, ebp ; mov esi, r12d ; call 0xffffff80008032c7
0xffffff800090a0f5 : mov edi, ebp ; mov esi, r12d ; mov rdx, r15 ; call rcx
0xffffff800050c8b3 : mov edi, ebp ; mov esi, r15d ; call 0xffffff8000758b37
0xffffff800076a5f7 : mov edi, ebp ; mov qword ptr [rbp - 0x50], rdx ; call rax
0xffffff80008bf8b7 : mov edi, ebp ; mov r14d, 0xe00002c7 ; jmp 0xffffff80008bf88d
0xffffff80008bd335 : mov edi, ebp ; mov r8, r11 ; mov r9, r10 ; call r15
0xffffff80008bd37d : mov edi, ebp ; mov r9, r11 ; call r15
0xffffff80008bd3c9 : mov edi, ebp ; mov r9, r14 ; call r15
0xffffff800076b298 : mov edi, ebp ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800076a719 : mov edi, ebp ; mov rdx, qword ptr [rbp - 0x50] ; call rax
0xffffff80007c82d7 : mov edi, ebp ; mov rdx, qword ptr [rbp - 0x90] ; call rax
0xffffff80007c7f97 : mov edi, ebp ; mov rdx, qword ptr [rbp - 0x90] ; call rcx
0xffffff80007c8a33 : mov edi, ebp ; mov rdx, qword ptr [rbp - 0xa0] ; call rax
0xffffff80008bd235 : mov edi, ebp ; mov rdx, r10 ; mov rcx, r14 ; call r15
0xffffff80006423a8 : mov edi, ebp ; mov rdx, r12 ; call rax
0xffffff8000646447 : mov edi, ebp ; mov rdx, r15 ; call rax
0xffffff80007c92bf : mov edi, ebp ; mov rdx, r8 ; call rcx
0xffffff80008cd7ba : mov edi, ebp ; mov rdx, rax ; call r15
0xffffff800062bb6b : mov edi, ebp ; mov rdx, rbx ; call rax
0xffffff80007d0fe2 : mov edi, ebp ; mov rdx, rbx ; call rcx
0xffffff80007ac7b0 : mov edi, ebp ; mov rsi, qword ptr [rbp - 0x3e8] ; call rcx
0xffffff80002cf3ac : mov edi, ebp ; mov rsi, qword ptr [rbp - 0x60] ; mov rdx, r12 ; call rbx
0xffffff80007d796e : mov edi, ebp ; mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff80007d865b : mov edi, ebp ; mov rsi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rax
0xffffff80007b3cc2 : mov edi, ebp ; mov rsi, r12 ; mov rdx, r15 ; call rax
0xffffff80008b235b : mov edi, ebp ; mov rsi, r14 ; call r12
0xffffff80007eaf44 : mov edi, ebp ; mov rsi, r14 ; call rbx
0xffffff8000534416 : mov edi, ebp ; mov rsi, r14 ; call rcx
0xffffff800028e045 : mov edi, ebp ; mov rsi, r15 ; call r14
0xffffff8000812750 : mov edi, ebp ; mov rsi, rax ; call r14
0xffffff80008ddb85 : mov edi, ebp ; mov rsi, rax ; call rbx
0xffffff800055795c : mov edi, ebp ; mov rsi, rax ; call rcx
0xffffff80005453c3 : mov edi, ebp ; mov rsi, rbx ; call r14
0xffffff80003acb36 : mov edi, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff8000879ac4 : mov edi, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80008e3703 : mov edi, ebx ; call 0xffffff800010e0d9
0xffffff8000641ed7 : mov edi, ebx ; call 0xffffff800010e144
0xffffff80004df7ca : mov edi, ebx ; call 0xffffff800010e145
0xffffff800026b2ca : mov edi, ebx ; call 0xffffff80002775b4
0xffffff8000673fed : mov edi, ebx ; call 0xffffff8000297b45
0xffffff800044844d : mov edi, ebx ; call 0xffffff80002a46d4
0xffffff80006cc67d : mov edi, ebx ; call 0xffffff80002d8924
0xffffff80006b61e3 : mov edi, ebx ; call 0xffffff80002d8925
0xffffff800036a367 : mov edi, ebx ; call 0xffffff800036aa49
0xffffff8000763f44 : mov edi, ebx ; call 0xffffff80003923e5
0xffffff800076e75e : mov edi, ebx ; call 0xffffff8000392605
0xffffff800076e784 : mov edi, ebx ; call 0xffffff8000392795
0xffffff80007a65cf : mov edi, ebx ; call 0xffffff80003928a4
0xffffff8000767cce : mov edi, ebx ; call 0xffffff80003928a5
0xffffff80004e6650 : mov edi, ebx ; call 0xffffff8000392934
0xffffff800076d18d : mov edi, ebx ; call 0xffffff8000392935
0xffffff8000764f66 : mov edi, ebx ; call 0xffffff8000392a45
0xffffff80007a69ee : mov edi, ebx ; call 0xffffff8000392a49
0xffffff8000476dbc : mov edi, ebx ; call 0xffffff8000393044
0xffffff8000764f51 : mov edi, ebx ; call 0xffffff8000393045
0xffffff800040ed34 : mov edi, ebx ; call 0xffffff8000393049
0xffffff8000775743 : mov edi, ebx ; call 0xffffff8000397205
0xffffff80002ad5c2 : mov edi, ebx ; call 0xffffff80003998c4
0xffffff8000775b77 : mov edi, ebx ; call 0xffffff800039a705
0xffffff8000423112 : mov edi, ebx ; call 0xffffff80004232e9
0xffffff80003eee0c : mov edi, ebx ; call 0xffffff800044b0a4
0xffffff80006dc947 : mov edi, ebx ; call 0xffffff80004cb3b9
0xffffff8000441920 : mov edi, ebx ; call 0xffffff80004cdbe4
0xffffff80005359eb : mov edi, ebx ; call 0xffffff8000534859
0xffffff800056f873 : mov edi, ebx ; call 0xffffff800057bae4
0xffffff80006a9778 : mov edi, ebx ; call 0xffffff80006ac8a9
0xffffff80006e882f : mov edi, ebx ; call 0xffffff8000704459
0xffffff80007660d2 : mov edi, ebx ; call 0xffffff8000765c79
0xffffff80007b4592 : mov edi, ebx ; call 0xffffff80007907d4
0xffffff800065faf8 : mov edi, ebx ; call 0xffffff800079cd59
0xffffff8000668825 : mov edi, ebx ; call 0xffffff80007b4a64
0xffffff80003518bb : mov edi, ebx ; call 0xffffff80008edb14
0xffffff80007e1ef1 : mov edi, ebx ; call 0xffffff80008fffd9
0xffffff8000855db8 : mov edi, ebx ; call qword ptr [rax + 0x28]
0xffffff8000811476 : mov edi, ebx ; call qword ptr [rax + 0x38]
0xffffff80008a8c0e : mov edi, ebx ; call r14
0xffffff80002670d7 : mov edi, ebx ; call r15
0xffffff800025d072 : mov edi, ebx ; call rax
0xffffff8000390938 : mov edi, ebx ; call rcx
0xffffff80007a8016 : mov edi, ebx ; call rdx
0xffffff800085df0c : mov edi, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800074887b : mov edi, ebx ; jmp rax
0xffffff80004d94a6 : mov edi, ebx ; mov esi, dword ptr [rbp - 0x78] ; mov rdx, r15 ; call rcx
0xffffff8000609091 : mov edi, ebx ; mov esi, r14d ; call r15
0xffffff8000566fce : mov edi, ebx ; mov esi, r14d ; call rax
0xffffff80008ba620 : mov edi, ebx ; mov esi, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80003518e6 : mov edi, ebx ; mov esi, r15d ; call 0xffffff80008edb17
0xffffff80005ef2e5 : mov edi, ebx ; mov esi, r15d ; call r14
0xffffff80008b22d4 : mov edi, ebx ; mov qword ptr [rbp - 0x30], rbx ; mov rsi, r12 ; call rax
0xffffff80007c86a8 : mov edi, ebx ; mov qword ptr [rbp - 0xa0], rdx ; call rax
0xffffff80004d8b9f : mov edi, ebx ; mov r8, qword ptr [rbp - 0x5d8] ; call rax
0xffffff800079194c : mov edi, ebx ; mov rcx, qword ptr [rbp + 0x10] ; call rax
0xffffff80007cf5ff : mov edi, ebx ; mov rdx, qword ptr [rbp - 0x48] ; call rax
0xffffff8000647241 : mov edi, ebx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0xffffff800064b60d : mov edi, ebx ; mov rdx, qword ptr [rbp - 0xc0] ; call rax
0xffffff80005ed3d3 : mov edi, ebx ; mov rdx, r12 ; call rax
0xffffff800062c226 : mov edi, ebx ; mov rdx, r13 ; call rax
0xffffff80007ceff0 : mov edi, ebx ; mov rdx, r13 ; call rcx
0xffffff80007cf5a1 : mov edi, ebx ; mov rdx, r13 ; mov qword ptr [rbp - 0x48], r13 ; call rcx
0xffffff800081f94b : mov edi, ebx ; mov rdx, r14 ; call r12
0xffffff800054c7a5 : mov edi, ebx ; mov rdx, r14 ; call rax
0xffffff8000855ed5 : mov edi, ebx ; mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007ce05d : mov edi, ebx ; mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff800052b076 : mov edi, ebx ; mov rdx, r15 ; call rax
0xffffff80008299bd : mov edi, ebx ; mov rdx, rax ; call r15
0xffffff8000617eab : mov edi, ebx ; mov rsi, qword ptr [rbp - 0x300] ; call rax
0xffffff800077faa1 : mov edi, ebx ; mov rsi, qword ptr [rbp - 0x30] ; call r12
0xffffff800077f6ff : mov edi, ebx ; mov rsi, qword ptr [rbp - 0x38] ; call r15
0xffffff80004c484f : mov edi, ebx ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0xffffff80003a0b04 : mov edi, ebx ; mov rsi, r12 ; call rax
0xffffff80008fe57c : mov edi, ebx ; mov rsi, r12 ; mov rcx, r14 ; call r8
0xffffff8000398026 : mov edi, ebx ; mov rsi, r12 ; mov rdx, rax ; call r14
0xffffff800075deba : mov edi, ebx ; mov rsi, r13 ; call rax
0xffffff80004b49a9 : mov edi, ebx ; mov rsi, r14 ; call r12
0xffffff80005225cf : mov edi, ebx ; mov rsi, r14 ; call rax
0xffffff800054fb8d : mov edi, ebx ; mov rsi, r14 ; call rcx
0xffffff80007908d3 : mov edi, ebx ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff8000845688 : mov edi, ebx ; mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80006534a6 : mov edi, ebx ; mov rsi, r15 ; call qword ptr [rax]
0xffffff80002db831 : mov edi, ebx ; mov rsi, r15 ; call r12
0xffffff80007909a1 : mov edi, ebx ; mov rsi, r15 ; call rax
0xffffff8000397b71 : mov edi, ebx ; mov rsi, r15 ; mov rdx, rax ; call r14
0xffffff800081df7d : mov edi, ebx ; mov rsi, rax ; call r12
0xffffff800082e481 : mov edi, ebx ; mov rsi, rax ; call r14
0xffffff800082e5c8 : mov edi, ebx ; mov rsi, rax ; call r15
0xffffff8000686ba1 : mov edi, ebx ; mov rsi, rax ; mov rax, qword ptr [rbp - 0x58] ; call qword ptr [rax]
0xffffff8000819bb5 : mov edi, ebx ; mov rsi, rax ; mov rdx, r14 ; call r12
0xffffff8000590a24 : mov edi, ebx ; movsxd rbx, dword ptr [rdi + rcx*4] ; add rbx, rdi ; jmp rbx
0xffffff80005cf71e : mov edi, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80003eb0e3 : mov edi, ecx ; call 0xffffff8000393048
0xffffff800074ef9f : mov edi, ecx ; call r10
0xffffff800082dc2e : mov edi, ecx ; call rax
0xffffff8000831cea : mov edi, ecx ; ja 0xffffff8000831ce5 ; pop rbp ; ret
0xffffff800025281a : mov edi, ecx ; jae 0xffffff8000252815 ; pop rbp ; ret
0xffffff800050f08e : mov edi, ecx ; jae 0xffffff800050f085 ; pop rbp ; ret
0xffffff80006e3bfa : mov edi, ecx ; jne 0xffffff80006e3be5 ; pop rbp ; ret
0xffffff800060ca73 : mov edi, ecx ; lea rcx, [rbp - 0x180] ; call rax
0xffffff8000892add : mov edi, ecx ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff800083c0ea : mov edi, ecx ; mov rax, rdi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800052bcf7 : mov edi, ecx ; mov rbx, rcx ; call rax
0xffffff8000658393 : mov edi, ecx ; mov rsi, r15 ; mov edx, r14d ; call r8
0xffffff80005e38d7 : mov edi, ecx ; pop rbp ; jmp r8
0xffffff800053ec23 : mov edi, ecx ; pop rbp ; jmp rax
0xffffff800053fd73 : mov edi, edi ; call 0xffffff800010e059
0xffffff8000591ecd : mov edi, edi ; call 0xffffff800010e144
0xffffff80004e3123 : mov edi, edi ; call 0xffffff800010e145
0xffffff800053575e : mov edi, edi ; call 0xffffff800010e149
0xffffff800065e912 : mov edi, edi ; call 0xffffff800028e1b5
0xffffff80002fe463 : mov edi, edi ; call 0xffffff800028e1b9
0xffffff800051b8ac : mov edi, edi ; call 0xffffff8000297b44
0xffffff8000674c0a : mov edi, edi ; call 0xffffff8000297b45
0xffffff80007f987b : mov edi, edi ; call 0xffffff80002b5b64
0xffffff80002b94bf : mov edi, edi ; call 0xffffff80002bcde9
0xffffff800025c6c3 : mov edi, edi ; call 0xffffff80002d8924
0xffffff80004be0a7 : mov edi, edi ; call 0xffffff8000338c69
0xffffff80002961b7 : mov edi, edi ; call 0xffffff80003923e4
0xffffff8000762e2a : mov edi, edi ; call 0xffffff80003923e5
0xffffff80002ce753 : mov edi, edi ; call 0xffffff80003923e9
0xffffff8000563b13 : mov edi, edi ; call 0xffffff8000392799
0xffffff80007a6629 : mov edi, edi ; call 0xffffff80003928a4
0xffffff80004e6668 : mov edi, edi ; call 0xffffff8000392934
0xffffff800076d8d4 : mov edi, edi ; call 0xffffff8000392935
0xffffff80007a67f7 : mov edi, edi ; call 0xffffff8000392a44
0xffffff800076308f : mov edi, edi ; call 0xffffff8000392a45
0xffffff80004125d1 : mov edi, edi ; call 0xffffff8000392a49
0xffffff80007630b9 : mov edi, edi ; call 0xffffff8000393045
0xffffff80003eb089 : mov edi, edi ; call 0xffffff8000393048
0xffffff800028af82 : mov edi, edi ; call 0xffffff8000397204
0xffffff8000773d75 : mov edi, edi ; call 0xffffff8000397205
0xffffff8000419d83 : mov edi, edi ; call 0xffffff8000445fb4
0xffffff80004602ca : mov edi, edi ; call 0xffffff80004cc564
0xffffff800060cde1 : mov edi, edi ; call 0xffffff8000529004
0xffffff8000604d69 : mov edi, edi ; call 0xffffff8000529b78
0xffffff8000553dc9 : mov edi, edi ; call 0xffffff8000550044
0xffffff80006b8ccd : mov edi, edi ; call 0xffffff80006b5b39
0xffffff80006e3404 : mov edi, edi ; call 0xffffff80006d4ad9
0xffffff80002883f4 : mov edi, edi ; call 0xffffff8000761978
0xffffff800056895f : mov edi, edi ; call 0xffffff80007c4bb4
0xffffff8000769daf : mov edi, edi ; call 0xffffff80007d23b8
0xffffff80003b6337 : mov edi, edi ; call 0xffffff80008edb18
0xffffff80002883a4 : mov edi, edi ; call 0xffffff800090a6e8
0xffffff80008a9155 : mov edi, edi ; call qword ptr [rax + 0x28]
0xffffff8000827def : mov edi, edi ; call qword ptr [rax + 0x38]
0xffffff80008680c4 : mov edi, edi ; call qword ptr [rax + 0x618]
0xffffff8000b4b4a9 : mov edi, edi ; call qword ptr [rdi]
0xffffff800028845a : mov edi, edi ; call rax
0xffffff80006362ce : mov edi, edi ; call rbx
0xffffff80008f5021 : mov edi, edi ; call rcx
0xffffff800081c90f : mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b4b4b1 : mov edi, edi ; inc dword ptr [rsi] ; js 0xffffff8000b4b4bc ; jmp rax
0xffffff8000b4b4b0 : mov edi, edi ; inc dword ptr [rsi] ; js 0xffffff8000b4b4bd ; jmp rax
0xffffff8000267795 : mov edi, edi ; mov edi, 0xfffffffa ; call rbx
0xffffff800074f388 : mov edi, edi ; mov edx, r14d ; call rax
0xffffff80008ef040 : mov edi, edi ; mov esi, r12d ; mov rdx, r14 ; call rcx
0xffffff80008ee329 : mov edi, edi ; mov esi, r14d ; call rcx
0xffffff800053455d : mov edi, edi ; mov r9, r13 ; call rax
0xffffff8000766354 : mov edi, edi ; mov rbx, r9 ; call 0xffffff80003923e8
0xffffff8000302376 : mov edi, edi ; mov rdx, qword ptr [rbp - 0x30] ; jmp rcx
0xffffff800064b537 : mov edi, edi ; mov rdx, qword ptr [rbp - 0xc0] ; call rax
0xffffff80008bde16 : mov edi, edi ; mov rdx, r11 ; mov rcx, rax ; call r12
0xffffff800060533c : mov edi, edi ; mov rdx, r12 ; call rax
0xffffff80006052ad : mov edi, edi ; mov rdx, r13 ; call rax
0xffffff80008f629b : mov edi, edi ; mov rdx, r14 ; call r8
0xffffff800064cfcb : mov edi, edi ; mov rdx, r14 ; call rax
0xffffff80008eefe2 : mov edi, edi ; mov rdx, r14 ; call rcx
0xffffff8000516684 : mov edi, edi ; mov rdx, rbx ; call rax
0xffffff80005c0301 : mov edi, edi ; mov rsi, qword ptr [rbp - 0x138] ; call rax
0xffffff80008f9b31 : mov edi, edi ; mov rsi, qword ptr [rbp - 0x30] ; mov rdx, r12 ; call rbx
0xffffff80002c8fa6 : mov edi, edi ; mov rsi, r12 ; call r14
0xffffff80007ccfa8 : mov edi, edi ; mov rsi, r12 ; call rax
0xffffff80007cd26e : mov edi, edi ; mov rsi, r12 ; call rcx
0xffffff80008f8d71 : mov edi, edi ; mov rsi, r12 ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000900482 : mov edi, edi ; mov rsi, r12 ; mov ecx, r14d ; call r8
0xffffff80008f68b9 : mov edi, edi ; mov rsi, r12 ; mov ecx, r14d ; call rax
0xffffff80007d04cc : mov edi, edi ; mov rsi, r12 ; mov edx, ebx ; call rax
0xffffff80008f7601 : mov edi, edi ; mov rsi, r12 ; mov rcx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000900852 : mov edi, edi ; mov rsi, r12 ; mov rcx, r14 ; call r8
0xffffff8000901ac9 : mov edi, edi ; mov rsi, r12 ; mov rcx, r14 ; call r9
0xffffff80008f5970 : mov edi, edi ; mov rsi, r12 ; mov rcx, r14 ; call rax
0xffffff80008fcd25 : mov edi, edi ; mov rsi, r12 ; mov rdx, r14 ; call r8
0xffffff80008fcc41 : mov edi, edi ; mov rsi, r12 ; mov rdx, r14 ; call rax
0xffffff80007eaf36 : mov edi, edi ; mov rsi, r13 ; call rbx
0xffffff8000909465 : mov edi, edi ; mov rsi, r13 ; mov rcx, r12 ; call rax
0xffffff80004b4f50 : mov edi, edi ; mov rsi, r14 ; call rbx
0xffffff80008eec59 : mov edi, edi ; mov rsi, r14 ; call rcx
0xffffff8000905d75 : mov edi, edi ; mov rsi, r14 ; mov rdx, r12 ; call r8
0xffffff8000905c91 : mov edi, edi ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff800085a70a : mov edi, edi ; mov rsi, rax ; call r12
0xffffff80008ddc74 : mov edi, edi ; mov rsi, rax ; call rbx
0xffffff80004df969 : mov edi, edi ; mov rsi, rbx ; call 0xffffff800010e148
0xffffff8000298cdd : mov edi, edi ; mov rsi, rbx ; call 0xffffff80002d4ef7
0xffffff80003753ae : mov edi, edi ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800077835c : mov edi, edi ; mov rsi, rbx ; call rax
0xffffff80006e12b9 : mov edi, edx ; call 0xffffff800030de45
0xffffff800066d8d0 : mov edi, edx ; call 0xffffff8000529b74
0xffffff80007a5baf : mov edi, edx ; call rax
0xffffff80003993f1 : mov edi, edx ; call rsi
0xffffff800054ddb6 : mov edi, edx ; mov rbx, rcx ; call r15
0xffffff80007cf060 : mov edi, edx ; mov rdx, r13 ; call rax
0xffffff80007dd23c : mov edi, edx ; mov rdx, r14 ; call rax
0xffffff80008a7587 : mov edi, edx ; pop rbp ; jmp rax
0xffffff80003d3bf0 : mov edi, esi ; call 0xffffff800010e088
0xffffff80007c1e7c : mov edi, esi ; call 0xffffff800010e144
0xffffff80005372ff : mov edi, esi ; call 0xffffff800010e149
0xffffff80003523d4 : mov edi, esi ; call 0xffffff800010e694
0xffffff8000276942 : mov edi, esi ; call 0xffffff8000292d79
0xffffff80008cb627 : mov edi, esi ; call 0xffffff8000297874
0xffffff800054b8f5 : mov edi, esi ; call 0xffffff8000297b44
0xffffff8000674692 : mov edi, esi ; call 0xffffff8000297b45
0xffffff80007ad5c9 : mov edi, esi ; call 0xffffff8000297b49
0xffffff800028eb20 : mov edi, esi ; call 0xffffff800029eaf9
0xffffff800042038c : mov edi, esi ; call 0xffffff80002a46d8
0xffffff800050a1f7 : mov edi, esi ; call 0xffffff80002a46d9
0xffffff80006b0ee8 : mov edi, esi ; call 0xffffff80002d8925
0xffffff80004bc9f4 : mov edi, esi ; call 0xffffff8000338c64
0xffffff80002960e5 : mov edi, esi ; call 0xffffff80003923e4
0xffffff8000763bd4 : mov edi, esi ; call 0xffffff80003923e5
0xffffff8000277849 : mov edi, esi ; call 0xffffff80003923e9
0xffffff800055620c : mov edi, esi ; call 0xffffff80003924d4
0xffffff8000341cf9 : mov edi, esi ; call 0xffffff8000392608
0xffffff800030212f : mov edi, esi ; call 0xffffff8000392798
0xffffff8000767d43 : mov edi, esi ; call 0xffffff80003928a5
0xffffff80006a67bb : mov edi, esi ; call 0xffffff8000392a44
0xffffff8000762d34 : mov edi, esi ; call 0xffffff8000392a45
0xffffff800040fb72 : mov edi, esi ; call 0xffffff8000392a49
0xffffff80006a6d59 : mov edi, esi ; call 0xffffff8000393044
0xffffff8000767469 : mov edi, esi ; call 0xffffff8000393045
0xffffff800028be96 : mov edi, esi ; call 0xffffff8000393048
0xffffff8000277218 : mov edi, esi ; call 0xffffff8000393484
0xffffff8000288368 : mov edi, esi ; call 0xffffff80003998c8
0xffffff8000476c78 : mov edi, esi ; call 0xffffff8000422eb4
0xffffff800050e02f : mov edi, esi ; call 0xffffff80004cdfa8
0xffffff8000546b5b : mov edi, esi ; call 0xffffff8000532e64
0xffffff8000554dd2 : mov edi, esi ; call 0xffffff8000551034
0xffffff8000554e37 : mov edi, esi ; call 0xffffff80005510f4
0xffffff80006aec28 : mov edi, esi ; call 0xffffff80005510f8
0xffffff80005c9215 : mov edi, esi ; call 0xffffff80005c5504
0xffffff80005cc6e3 : mov edi, esi ; call 0xffffff80005cdfc9
0xffffff80005d926d : mov edi, esi ; call 0xffffff80005e5494
0xffffff8000708749 : mov edi, esi ; call 0xffffff80007084c8
0xffffff80007b87c6 : mov edi, esi ; call 0xffffff80007b4a64
0xffffff8000549ad0 : mov edi, esi ; call 0xffffff80007b5da4
0xffffff800059bdea : mov edi, esi ; call 0xffffff80007b8024
0xffffff80006bbec3 : mov edi, esi ; call 0xffffff80007b8124
0xffffff80005f038b : mov edi, esi ; call 0xffffff80007d0468
0xffffff80007c5251 : mov edi, esi ; call 0xffffff80007d3e29
0xffffff80005a7901 : mov edi, esi ; call 0xffffff8000845c39
0xffffff80008b0f0e : mov edi, esi ; call 0xffffff8000856ad8
0xffffff80008788e5 : mov edi, esi ; call 0xffffff8000874b94
0xffffff8000651c77 : mov edi, esi ; call qword ptr [r15]
0xffffff800086c562 : mov edi, esi ; call qword ptr [rax + 0x20]
0xffffff80008bae38 : mov edi, esi ; call qword ptr [rax + 0x38]
0xffffff80006558a5 : mov edi, esi ; call qword ptr [rax]
0xffffff80008bcc6a : mov edi, esi ; call r10
0xffffff8000636454 : mov edi, esi ; call r12
0xffffff800038826f : mov edi, esi ; call r15
0xffffff80003a85b7 : mov edi, esi ; call rax
0xffffff80003aa14c : mov edi, esi ; call rbx
0xffffff800038fa75 : mov edi, esi ; call rcx
0xffffff800044fb3c : mov edi, esi ; call rdx
0xffffff80004f858f : mov edi, esi ; jl 0xffffff80004f8565 ; pop rbp ; ret
0xffffff8000437f7d : mov edi, esi ; jmp 0xffffff8000437fae
0xffffff80008be2bd : mov edi, esi ; jmp 0xffffff80008be370
0xffffff800067a04e : mov edi, esi ; mov ecx, ebx ; call 0xffffff8000666266
0xffffff800083dfc2 : mov edi, esi ; mov edx, ebx ; call rcx
0xffffff8000281ede : mov edi, esi ; mov esi, 0x44d ; call 0xffffff800028e159
0xffffff8000851885 : mov edi, esi ; mov esi, ebx ; call 0xffffff80008edb16
0xffffff80005cf6a9 : mov edi, esi ; mov esi, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80005abcb4 : mov edi, esi ; mov esi, r12d ; call 0xffffff80007b7ec7
0xffffff8000534def : mov edi, esi ; mov esi, r15d ; call rax
0xffffff80005ee519 : mov edi, esi ; mov qword ptr [rbp - 0x40], rdx ; call rax
0xffffff80007eaeb6 : mov edi, esi ; mov r14, r12 ; mov rsi, r14 ; call rbx
0xffffff80007a5747 : mov edi, esi ; mov r8, rax ; call r15
0xffffff80006f02d4 : mov edi, esi ; mov r8, rbx ; call 0xffffff80004fc587
0xffffff80008bcd30 : mov edi, esi ; mov r9, r11 ; call r10
0xffffff80008bccca : mov edi, esi ; mov r9, rax ; call r10
0xffffff8000639495 : mov edi, esi ; mov rdx, qword ptr [rbp - 0x110] ; call rax
0xffffff80005ee5f5 : mov edi, esi ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80007c896a : mov edi, esi ; mov rdx, qword ptr [rbp - 0xa0] ; call rcx
0xffffff80007ca484 : mov edi, esi ; mov rdx, qword ptr [rbp - 0xb8] ; call rax
0xffffff80007ca40f : mov edi, esi ; mov rdx, qword ptr [rbp - 0xb8] ; call rcx
0xffffff80007c780b : mov edi, esi ; mov rdx, qword ptr [rbp - 0xd8] ; call rax
0xffffff8000293c27 : mov edi, esi ; mov rdx, r12 ; call r15
0xffffff8000517dec : mov edi, esi ; mov rdx, r12 ; call rax
0xffffff80005193b1 : mov edi, esi ; mov rdx, r13 ; call rax
0xffffff800054d705 : mov edi, esi ; mov rdx, r15 ; call rax
0xffffff800054cdd3 : mov edi, esi ; mov rdx, rbx ; call rax
0xffffff80007c9dfc : mov edi, esi ; mov rdx, rbx ; call rcx
0xffffff8000619b89 : mov edi, esi ; mov rsi, qword ptr [rbp - 0x300] ; call rax
0xffffff80007fc9f2 : mov edi, esi ; mov rsi, r12 ; call rax
0xffffff80008ee4f9 : mov edi, esi ; mov rsi, r12 ; mov rdx, r15 ; call rcx
0xffffff80002d0894 : mov edi, esi ; mov rsi, r13 ; call rax
0xffffff80003ac3ef : mov edi, esi ; mov rsi, r13 ; call rbx
0xffffff8000881c8e : mov edi, esi ; mov rsi, r13 ; mov rdx, r15 ; call rax
0xffffff8000653381 : mov edi, esi ; mov rsi, r15 ; call qword ptr [rax]
0xffffff8000904514 : mov edi, esi ; mov rsi, r15 ; call rbx
0xffffff80008fcff0 : mov edi, esi ; mov rsi, r15 ; call rcx
0xffffff80008e3273 : mov edi, esi ; mov rsi, rax ; call 0xffffff80008df537
0xffffff800081e14a : mov edi, esi ; mov rsi, rax ; call r12
0xffffff800081366b : mov edi, esi ; mov rsi, rax ; call rcx
0xffffff8000819c77 : mov edi, esi ; mov rsi, rax ; mov rdx, r12 ; call r15
0xffffff8000653603 : mov edi, esi ; mov rsi, rbx ; call qword ptr [rax]
0xffffff80007d16c2 : mov edi, esi ; mov rsi, rbx ; call r12
0xffffff8000541fdd : mov edi, esi ; mov rsi, rbx ; call r15
0xffffff8000790ba1 : mov edi, esi ; mov rsi, rbx ; call rax
0xffffff8000800b38 : mov edi, esi ; mov rsi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80004f9021 : mov edi, esi ; mov rsi, rcx ; jne 0xffffff80004f9018 ; pop rbp ; ret
0xffffff80008b2d3f : mov edi, esi ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff800049fb28 : mov edi, esi ; pop rbp ; jmp rax
0xffffff800076b6de : mov edi, esi ; pop rbx ; pop r14 ; pop rbp ; jmp 0xffffff8000393049
0xffffff80003a85e2 : mov edi, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80005645a4 : mov edi, esp ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007c1f2b : mov edi, esp ; call 0xffffff800010e144
0xffffff80004e3a67 : mov edi, esp ; call 0xffffff800010e145
0xffffff8000601bd8 : mov edi, esp ; call 0xffffff800010e148
0xffffff8000276c12 : mov edi, esp ; call 0xffffff8000292d79
0xffffff8000674bdf : mov edi, esp ; call 0xffffff8000297b45
0xffffff80006eec02 : mov edi, esp ; call 0xffffff8000297b49
0xffffff800042262f : mov edi, esp ; call 0xffffff800029e854
0xffffff800079943c : mov edi, esp ; call 0xffffff80002b5744
0xffffff800032f521 : mov edi, esp ; call 0xffffff800034a299
0xffffff80003504c2 : mov edi, esp ; call 0xffffff800034ab68
0xffffff8000763a6d : mov edi, esp ; call 0xffffff80003923e5
0xffffff80002dd898 : mov edi, esp ; call 0xffffff80003923e9
0xffffff80003063a2 : mov edi, esp ; call 0xffffff8000392604
0xffffff8000526690 : mov edi, esp ; call 0xffffff80003928a4
0xffffff80004d6707 : mov edi, esp ; call 0xffffff8000392934
0xffffff800077030a : mov edi, esp ; call 0xffffff8000392935
0xffffff800076482e : mov edi, esp ; call 0xffffff8000392a45
0xffffff80003e6dc1 : mov edi, esp ; call 0xffffff8000393044
0xffffff80007649b0 : mov edi, esp ; call 0xffffff8000393045
0xffffff80003ea957 : mov edi, esp ; call 0xffffff8000393048
0xffffff80004cec6c : mov edi, esp ; call 0xffffff8000393049
0xffffff8000348c21 : mov edi, esp ; call 0xffffff8000394ef4
0xffffff800078af9c : mov edi, esp ; call 0xffffff8000397204
0xffffff800028849f : mov edi, esp ; call 0xffffff8000397208
0xffffff8000775760 : mov edi, esp ; call 0xffffff80003998c5
0xffffff800047c06a : mov edi, esp ; call 0xffffff80004118a9
0xffffff8000708cd8 : mov edi, esp ; call 0xffffff80006d4f74
0xffffff8000668781 : mov edi, esp ; call 0xffffff80007b4a64
0xffffff80007d8f88 : mov edi, esp ; call 0xffffff80007b51f4
0xffffff80007689a9 : mov edi, esp ; call 0xffffff80007c4bb4
0xffffff800044682a : mov edi, esp ; call 0xffffff80007c4bb8
0xffffff80008df27a : mov edi, esp ; call 0xffffff80008deab8
0xffffff80004e1cc1 : mov edi, esp ; call 0xffffff80008fdf94
0xffffff800086db55 : mov edi, esp ; call qword ptr [rax + 0x28]
0xffffff800081c77a : mov edi, esp ; call qword ptr [rax + 0x38]
0xffffff80008dee70 : mov edi, esp ; call qword ptr [rax + 0x740]
0xffffff800032e939 : mov edi, esp ; call qword ptr [rax]
0xffffff8000625403 : mov edi, esp ; call r14
0xffffff80005293c4 : mov edi, esp ; call rax
0xffffff80007aaff1 : mov edi, esp ; call rcx
0xffffff80005dfd89 : mov edi, esp ; jmp 0xffffff80005dfd97
0xffffff80006d4420 : mov edi, esp ; jmp 0xffffff80006d43e9
0xffffff8000606a0d : mov edi, esp ; lea rcx, [rbp - 0x200] ; call rax
0xffffff80006357d6 : mov edi, esp ; mov esi, dword ptr [rbp - 0x54] ; mov edx, r15d ; call rax
0xffffff800090a535 : mov edi, esp ; mov esi, r13d ; call rcx
0xffffff8000420b59 : mov edi, esp ; mov esi, r14d ; call 0xffffff80004ccdd7
0xffffff800090a2f9 : mov edi, esp ; mov esi, r15d ; call rcx
0xffffff80007a5bac : mov edi, esp ; mov r15, rdx ; call rax
0xffffff80006b26c7 : mov edi, esp ; mov rbx, r12 ; mov rdx, r15 ; call rax
0xffffff80008f7aab : mov edi, esp ; mov rcx, r13 ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff80004e4604 : mov edi, esp ; mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff80006395dd : mov edi, esp ; mov rdx, qword ptr [rbp - 0x110] ; call rax
0xffffff800064ab69 : mov edi, esp ; mov rdx, r13 ; call rax
0xffffff80007c569c : mov edi, esp ; mov rdx, r13 ; call rcx
0xffffff80005398b6 : mov edi, esp ; mov rdx, r14 ; call rax
0xffffff8000621aac : mov edi, esp ; mov rdx, r15 ; call rax
0xffffff80008f5ac1 : mov edi, esp ; mov rdx, r15 ; mov r8, r14 ; call rax
0xffffff80005dca13 : mov edi, esp ; mov rdx, rbx ; call rax
0xffffff80007b8726 : mov edi, esp ; mov rdx, rbx ; mov qword ptr [rbp - 0x48], rcx ; call rcx
0xffffff8000618647 : mov edi, esp ; mov rsi, qword ptr [rbp - 0x300] ; call rax
0xffffff80008aa434 : mov edi, esp ; mov rsi, r12 ; mov rdx, rax ; call r15
0xffffff80007aafb1 : mov edi, esp ; mov rsi, r13 ; call rax
0xffffff80008fcb18 : mov edi, esp ; mov rsi, r13 ; mov rcx, r15 ; call rax
0xffffff8000539914 : mov edi, esp ; mov rsi, r14 ; call rax
0xffffff80007eaed2 : mov edi, esp ; mov rsi, r14 ; call rbx
0xffffff800028d7c8 : mov edi, esp ; mov rsi, r15 ; call r14
0xffffff80007cadfb : mov edi, esp ; mov rsi, r15 ; call rax
0xffffff80007a73a4 : mov edi, esp ; mov rsi, r15 ; call rcx
0xffffff80008ee159 : mov edi, esp ; mov rsi, r15 ; mov edx, r14d ; call rcx
0xffffff800049d1d1 : mov edi, esp ; mov rsi, r15 ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff8000906e39 : mov edi, esp ; mov rsi, r15 ; mov rdx, r14 ; call rcx
0xffffff80008876db : mov edi, esp ; mov rsi, rax ; call rbx
0xffffff8000543b6a : mov edi, esp ; mov rsi, rbx ; call r14
0xffffff8000288302 : mov edi, esp ; mov rsi, rbx ; call rcx
0xffffff800077575f : mov edi, r12d ; call 0xffffff80003998c6
0xffffff80007aaf12 : mov edi, r12d ; call rax
0xffffff80007aaff0 : mov edi, r12d ; call rcx
0xffffff80007aafb0 : mov edi, r12d ; mov rsi, r13 ; call rax
0xffffff8000288301 : mov edi, r12d ; mov rsi, rbx ; call rcx
0xffffff80007ac523 : mov edi, r13d ; call rax
0xffffff80007b3cc1 : mov edi, r13d ; mov rsi, r12 ; mov rdx, r15 ; call rax
0xffffff8000288367 : mov edi, r14d ; call 0xffffff80003998c9
0xffffff800050f012 : mov edi, r14d ; call rax
0xffffff8000799a16 : mov edi, r14d ; call rcx
0xffffff80007a5746 : mov edi, r14d ; mov r8, rax ; call r15
0xffffff8000293c26 : mov edi, r14d ; mov rdx, r12 ; call r15
0xffffff80008fe238 : mov edi, r15d ; mov rsi, r12 ; mov rcx, r14 ; call rax
0xffffff8000571e50 : mov edx, 0x10 ; call 0xffffff800010e0d7
0xffffff80004e153b : mov edx, 0x1400 ; pop rbp ; jmp 0xffffff800010e0d9
0xffffff800065a2c7 : mov edx, 0x1e ; call rax
0xffffff800065a25c : mov edx, 0x1e ; call rcx
0xffffff8000711e52 : mov edx, 0x20 ; call 0xffffff800010e087
0xffffff8000757b33 : mov edx, 0x20006453 ; xor ecx, ecx ; call r15
0xffffff80007580bf : mov edx, 0x20006453 ; xor ecx, ecx ; call rbx
0xffffff8000664daf : mov edx, 0x2166f8ff ; ret 0xc166
0xffffff80008427fa : mov edx, 0x2550 ; call rax
0xffffff80002671d3 : mov edx, 0x28 ; call r15
0xffffff800053ec1d : mov edx, 0x28 ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff80002a00a1 : mov edx, 0x39480084 ; ret
0xffffff800089494e : mov edx, 0x3e8 ; pop rbp ; jmp rax
0xffffff80006dfeb3 : mov edx, 0x40 ; call 0xffffff800071c0f7
0xffffff8000757af7 : mov edx, 0x40046418 ; mov rsi, rbx ; call r15
0xffffff80003a37c0 : mov edx, 0x47890075 ; pop rbp ; ret
0xffffff800067a805 : mov edx, 0x48c18948 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000556207 : mov edx, 0x4c000000 ; mov edi, esi ; call 0xffffff80003924d9
0xffffff8000561550 : mov edx, 0x58d48ff ; ret 0x42
0xffffff80008ed0b6 : mov edx, 0x5d001f89 ; ret
0xffffff80008c2cfa : mov edx, 0x5d002745 ; ret
0xffffff800049ca55 : mov edx, 0x5d5e415b ; ret
0xffffff8000565159 : mov edx, 0x5dc031ff ; ret
0xffffff800073da9a : mov edx, 0x6b0033a7 ; ret
0xffffff80003c839e : mov edx, 0x81000019 ; ret
0xffffff8000326d4f : mov edx, 0x83483374 ; ret
0xffffff80004367e2 : mov edx, 0x8900012c ; ret
0xffffff80004164e2 : mov edx, 0x8900032f ; ret
0xffffff800040a772 : mov edx, 0x89000622 ; ret
0xffffff8000373a4b : mov edx, 0x89440075 ; ret 0xc2c1
0xffffff8000817355 : mov edx, 0x89480001 ; ret
0xffffff80002dbf4e : mov edx, 0x8948000d ; ret
0xffffff80006668e3 : mov edx, 0x89480015 ; ret
0xffffff80006bced5 : mov edx, 0x8948ffc1 ; ret
0xffffff800056c842 : mov edx, 0x8948ffd2 ; ret
0xffffff800055c8e5 : mov edx, 0x8948ffd3 ; ret
0xffffff8000677a86 : mov edx, 0x8948ffed ; ret
0xffffff800089594b : mov edx, 0x8948fff7 ; ret
0xffffff8000886576 : mov edx, 0x8948fff8 ; ret
0xffffff80007f19e2 : mov edx, 0x89fff6cd ; ret
0xffffff80007f1992 : mov edx, 0x89fff6ce ; ret
0xffffff8000476942 : mov edx, 0x89fffcda ; ret
0xffffff80004769e2 : mov edx, 0x89fffd38 ; ret
0xffffff80004da6c2 : mov edx, 0x89fffec5 ; ret
0xffffff8000347a62 : mov edx, 0x89fffffa ; ret
0xffffff800089490e : mov edx, 0x989680 ; pop rbp ; jmp rax
0xffffff80005bfbd5 : mov edx, 0xaee9 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004e645b : mov edx, 0xb8 ; call 0xffffff800010e058
0xffffff8000752d7e : mov edx, 0xbae80038 ; cld ; ret
0xffffff800080f45e : mov edx, 0xbeb001d ; jne 0xffffff800080f46f ; pop rbp ; ret
0xffffff80003cca80 : mov edx, 0xc ; call 0xffffff8000448d57
0xffffff8000258bee : mov edx, 0xc0310004 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000252817 : mov edx, 0xcf8901e7 ; jae 0xffffff8000252818 ; pop rbp ; ret
0xffffff8000331ea3 : mov edx, 0xe800001f ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff5
0xffffff8000769b82 : mov edx, 0xe800374c ; mov ch, 0x8e ; ret 0x45ff
0xffffff800073d392 : mov edx, 0xe9ffb50d ; ret 0xfffc
0xffffff800068981c : mov edx, 0xeb00327c ; ret 0x6666
0xffffff800077869a : mov edx, 0xeb003b6b ; or bh, bh ; ret 0x1589
0xffffff8000768bc5 : mov edx, 0xf00003c ; xchg eax, ebp ; ret 0xca20
0xffffff80007ead78 : mov edx, 0xf08944ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089492e : mov edx, 0xf4240 ; pop rbp ; jmp rax
0xffffff80005ccd46 : mov edx, 0xf664000 ; ret 0x8966
0xffffff8000326a4b : mov edx, 0xfc0950f ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80007f1de1 : mov edx, 0xfdd8e8ff ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800052b491 : mov edx, 0xff480003 ; ret
0xffffff8000799aea : mov edx, 1 ; call rax
0xffffff8000799a6b : mov edx, 1 ; call rcx
0xffffff8000799a11 : mov edx, 1 ; mov edi, r14d ; call rcx
0xffffff80008214d3 : mov edx, 1 ; mov rdi, r13 ; call rbx
0xffffff800081121b : mov edx, 1 ; pop rbp ; jmp rax
0xffffff8000892a4c : mov edx, 1 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80003aef9e : mov edx, 1 ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff8000658e72 : mov edx, 2 ; call rax
0xffffff800051eea4 : mov edx, 3 ; call rax
0xffffff80002afe22 : mov edx, 4 ; call 0xffffff80008ec097
0xffffff8000622d9d : mov edx, 4 ; jmp 0xffffff8000622dbd
0xffffff800078f4b8 : mov edx, 4 ; mov rdi, r15 ; call rax
0xffffff800078f39f : mov edx, 4 ; mov rdi, rbx ; call rax
0xffffff8000266c1c : mov edx, 8 ; call r14
0xffffff8000267132 : mov edx, 8 ; call r15
0xffffff80002670d1 : mov edx, 8 ; mov r15, rbx ; call r15
0xffffff8000794fd4 : mov edx, 8 ; mov rdi, r14 ; call rax
0xffffff80007908a9 : mov edx, 8 ; mov rdi, rbx ; call rax
0xffffff80003abdc3 : mov edx, dword ptr [0x1c] ; and edx, ebx ; call rax
0xffffff800038973f : mov edx, dword ptr [r12 + 8] ; call qword ptr [rax]
0xffffff80004e1cbc : mov edx, dword ptr [r15 + 8] ; mov rdi, r12 ; call 0xffffff80008fdf99
0xffffff800029a622 : mov edx, dword ptr [rax + 0x10] ; xor edi, edi ; call qword ptr [rax]
0xffffff80004923c5 : mov edx, dword ptr [rax + 0x18] ; mov ecx, ebx ; call r9
0xffffff800081506f : mov edx, dword ptr [rax + 0x20] ; xor ecx, ecx ; call 0xffffff80008c12a7
0xffffff80004cff24 : mov edx, dword ptr [rbp + 0x18] ; mov rbx, r8 ; call 0xffffff80004fc1e8
0xffffff80004e4607 : mov edx, dword ptr [rbp + 0x28] ; call rax
0xffffff8000639498 : mov edx, dword ptr [rbp - 0x110] ; call rax
0xffffff8000590b97 : mov edx, dword ptr [rbp - 0x200] ; call 0xffffff80007bce68
0xffffff80006e1668 : mov edx, dword ptr [rbp - 0x268] ; call 0xffffff800030f499
0xffffff8000558b57 : mov edx, dword ptr [rbp - 0x30] ; call r14
0xffffff8000529d1c : mov edx, dword ptr [rbp - 0x30] ; call rbx
0xffffff800053313f : mov edx, dword ptr [rbp - 0x30] ; call rcx
0xffffff8000302379 : mov edx, dword ptr [rbp - 0x30] ; jmp rcx
0xffffff8000904b0e : mov edx, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80008ef0f4 : mov edx, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x3c] ; mov r8d, r13d ; call rbx
0xffffff80008ef167 : mov edx, dword ptr [rbp - 0x30] ; mov ecx, r13d ; mov r8d, r14d ; call rbx
0xffffff80005343be : mov edx, dword ptr [rbp - 0x30] ; mov rcx, r12 ; call r8
0xffffff80008f8fc7 : mov edx, dword ptr [rbp - 0x30] ; mov rcx, r13 ; call rbx
0xffffff800039ff39 : mov edx, dword ptr [rbp - 0x38] ; jmp rax
0xffffff8000908c5f : mov edx, dword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80008f4e1e : mov edx, dword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x34] ; call rbx
0xffffff80002cf12e : mov edx, dword ptr [rbp - 0x40] ; call rax
0xffffff80005330e0 : mov edx, dword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x30] ; call rax
0xffffff800067c6d6 : mov edx, dword ptr [rbp - 0x430] ; call rcx
0xffffff80007cf602 : mov edx, dword ptr [rbp - 0x48] ; call rax
0xffffff800076a71c : mov edx, dword ptr [rbp - 0x50] ; call rax
0xffffff800055eeb9 : mov edx, dword ptr [rbp - 0x50] ; call rcx
0xffffff80007d9a15 : mov edx, dword ptr [rbp - 0x550] ; call rax
0xffffff80002cf625 : mov edx, dword ptr [rbp - 0x5c] ; mov rcx, rbx ; call rax
0xffffff8000662b01 : mov edx, dword ptr [rbp - 0x78] ; call 0xffffff800028e1b6
0xffffff8000647244 : mov edx, dword ptr [rbp - 0x80] ; call rax
0xffffff80007c82da : mov edx, dword ptr [rbp - 0x90] ; call rax
0xffffff80007c7f9a : mov edx, dword ptr [rbp - 0x90] ; call rcx
0xffffff80007c8a36 : mov edx, dword ptr [rbp - 0xa0] ; call rax
0xffffff80007c896d : mov edx, dword ptr [rbp - 0xa0] ; call rcx
0xffffff80007ca487 : mov edx, dword ptr [rbp - 0xb8] ; call rax
0xffffff80007ca412 : mov edx, dword ptr [rbp - 0xb8] ; call rcx
0xffffff80006eec8b : mov edx, dword ptr [rbp - 0xc0] ; call 0xffffff800030f499
0xffffff800064b53a : mov edx, dword ptr [rbp - 0xc0] ; call rax
0xffffff80007c780e : mov edx, dword ptr [rbp - 0xd8] ; call rax
0xffffff80007c72c1 : mov edx, dword ptr [rbp - 0xd8] ; call rcx
0xffffff8000501ef3 : mov edx, dword ptr [rbp - 0xe0] ; call 0xffffff800080e1d8
0xffffff8000885a44 : mov edx, dword ptr [rbx + 0x18] ; mov rcx, qword ptr [rbx + 0x20] ; call r15
0xffffff800054bfc1 : mov edx, dword ptr [rbx + 0x28] ; call rax
0xffffff80007b4b8c : mov edx, dword ptr [rbx + 0xc0] ; mov rdi, rax ; call rcx
0xffffff80005562e1 : mov edx, dword ptr [rbx + rcx*2] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80008f178f : mov edx, dword ptr [rdi + 0x10] ; mov rdi, qword ptr [rbp - 0x60] ; call rbx
0xffffff80008f1818 : mov edx, dword ptr [rdi + 0x10] ; mov rdi, qword ptr [rbp - 0x60] ; call rcx
0xffffff8000765071 : mov edx, dword ptr [rdi + 0x16e80037] ; xlatb ; ret 0xb8ff
0xffffff800065c197 : mov edx, dword ptr [rdi + 0x18] ; add edx, eax ; jmp 0xffffff800065c1cf
0xffffff8000901bc9 : mov edx, dword ptr [rdi + 0x18] ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800082cc31 : mov edx, dword ptr [rdi + 0x28] ; xor esi, esi ; mov rdi, rax ; pop rbp ; jmp rcx
0xffffff8000902c59 : mov edx, dword ptr [rdi + 0x40] ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff8000903d49 : mov edx, dword ptr [rdi + 0x48] ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff8000900b11 : mov edx, dword ptr [rdi + 0x50] ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff80009001e1 : mov edx, dword ptr [rdi + 0x58] ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff80007b60fc : mov edx, dword ptr [rdi + 0xc0] ; call rcx
0xffffff80007955d5 : mov edx, dword ptr [rdi + 0xc0] ; mov rdi, rax ; call rcx
0xffffff80004e1cbd : mov edx, dword ptr [rdi + 8] ; mov rdi, r12 ; call 0xffffff80008fdf98
0xffffff8000423a98 : mov edx, dword ptr [rdx + rax*8] ; jmp 0xffffff8000423aac
0xffffff8000843541 : mov edx, dword ptr [rdx] ; mov byte ptr [rdx + rcx], bl ; jne 0xffffff8000843529 ; pop rbx ; pop rbp ; ret
0xffffff80008e21d1 : mov edx, dword ptr [rip + 0x202001] ; mov rdi, rbx ; call rax
0xffffff800087e85d : mov edx, dword ptr [rip + 0x265975] ; mov esi, r13d ; call rax
0xffffff800087e540 : mov edx, dword ptr [rip + 0x265c92] ; mov esi, r13d ; call rax
0xffffff8000423a91 : mov edx, dword ptr [rip + 0x6f0489] ; mov rdx, qword ptr [rdx + r8*8] ; jmp 0xffffff8000423ab3
0xffffff80004196f7 : mov edx, dword ptr [rip + 0x6fa76b] ; mov rsi, qword ptr [rdx + rax*8] ; jmp 0xffffff800041971d
0xffffff80008cc29f : mov edx, dword ptr [rip + 0x7894800] ; pop rbp ; ret
0xffffff800025ebc9 : mov edx, dword ptr [rsi + 0x10088] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008151e2 : mov edx, dword ptr [rsi + 0x18] ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff800078ccd2 : mov edx, dword ptr [rsi + rdx + 8] ; mov qword ptr [rcx], rdx ; pop rbp ; ret
0xffffff80005076d5 : mov edx, dword ptr [rsp + 0x58] ; call rax
0xffffff8000389740 : mov edx, dword ptr [rsp + 8] ; call qword ptr [rax]
0xffffff800076ea41 : mov edx, dword ptr [rsp + rdi] ; add al, ch ; out 0x3e, al ; ret 0xffff
0xffffff80007437f2 : mov edx, eax ; call 0xffffff80003985e8
0xffffff800072550b : mov edx, eax ; call 0xffffff8000726cf9
0xffffff8000397b77 : mov edx, eax ; call r14
0xffffff80008299c0 : mov edx, eax ; call r15
0xffffff80007c92c2 : mov edx, eax ; call rcx
0xffffff80002a69c1 : mov edx, eax ; jle 0xffffff80002a69a5 ; pop rbp ; ret
0xffffff80002a1230 : mov edx, eax ; jmp 0xffffff80002a123c
0xffffff80002a63e6 : mov edx, eax ; jmp 0xffffff80002a640d
0xffffff80003b269c : mov edx, eax ; jmp 0xffffff80003b26ca
0xffffff80003d685e : mov edx, eax ; jmp 0xffffff80003d68b1
0xffffff80003d6aa5 : mov edx, eax ; jmp 0xffffff80003d6b0d
0xffffff80003d6d05 : mov edx, eax ; jmp 0xffffff80003d6d5a
0xffffff80003dc3ed : mov edx, eax ; jmp 0xffffff80003dc416
0xffffff80004191fd : mov edx, eax ; jmp 0xffffff800041921f
0xffffff800041b0c3 : mov edx, eax ; jmp 0xffffff800041b0e5
0xffffff800042cc9a : mov edx, eax ; jmp 0xffffff800042cceb
0xffffff800047357e : mov edx, eax ; jmp 0xffffff80004735e0
0xffffff800055d9de : mov edx, eax ; jmp 0xffffff800055da40
0xffffff80005932a8 : mov edx, eax ; jmp 0xffffff80005932af
0xffffff80005da494 : mov edx, eax ; jmp 0xffffff80005da4b9
0xffffff80005e6bbf : mov edx, eax ; jmp 0xffffff80005e6bd3
0xffffff80005e7c66 : mov edx, eax ; jmp 0xffffff80005e7c7b
0xffffff80005e87bf : mov edx, eax ; jmp 0xffffff80005e87d3
0xffffff80005fa3d3 : mov edx, eax ; jmp 0xffffff80005fa3db
0xffffff8000635c46 : mov edx, eax ; jmp 0xffffff8000635c5c
0xffffff800076efb5 : mov edx, eax ; jmp 0xffffff800076efc0
0xffffff8000793ba1 : mov edx, eax ; jmp 0xffffff8000793bbe
0xffffff800083d75f : mov edx, eax ; jmp 0xffffff800083d768
0xffffff80008435c1 : mov edx, eax ; jmp 0xffffff80008435c9
0xffffff8000847eb4 : mov edx, eax ; jmp 0xffffff8000847ec7
0xffffff800084de84 : mov edx, eax ; jmp 0xffffff800084de93
0xffffff8000858439 : mov edx, eax ; jmp 0xffffff8000858445
0xffffff80008c99cf : mov edx, eax ; jmp 0xffffff80008c99f0
0xffffff80008c9f7f : mov edx, eax ; jmp 0xffffff80008c9fa0
0xffffff80008d253b : mov edx, eax ; jmp 0xffffff80008d258b
0xffffff80008e9a57 : mov edx, eax ; jmp 0xffffff80008e9a63
0xffffff80008ec361 : mov edx, eax ; jmp 0xffffff80008ec393
0xffffff80008bd710 : mov edx, eax ; mov r8, r11 ; mov r9, r10 ; call r14
0xffffff80008bd071 : mov edx, eax ; mov r8, r15 ; mov r9, r10 ; call r14
0xffffff80007582ba : mov edx, eax ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff80004fa6eb : mov edx, eax ; mov rax, rcx ; jne 0xffffff80004fa6e8 ; pop rbp ; ret
0xffffff800059f71b : mov edx, eax ; mov rax, rcx ; jne 0xffffff800059f718 ; pop rbp ; ret
0xffffff8000769b4b : mov edx, eax ; mov rax, rcx ; jne 0xffffff8000769b48 ; pop rbp ; ret
0xffffff8000898917 : mov edx, eax ; mov rcx, r8 ; mov r8d, r9d ; call r10
0xffffff80003820d6 : mov edx, eax ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0xffffff80003c1c4c : mov edx, eax ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0xffffff80007a498e : mov edx, eax ; pop rbp ; jmp r11
0xffffff8000870ab6 : mov edx, eax ; pop rbp ; jmp r9
0xffffff800081131f : mov edx, eax ; pop rbp ; jmp rcx
0xffffff8000766e86 : mov edx, eax ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff8000352730 : mov edx, ebp ; call 0xffffff800010e629
0xffffff80002fe070 : mov edx, ebp ; call 0xffffff800028e159
0xffffff8000651eb4 : mov edx, ebp ; call 0xffffff800028e1b4
0xffffff800065ecb0 : mov edx, ebp ; call 0xffffff800028e1b5
0xffffff8000669f12 : mov edx, ebp ; call 0xffffff800028e4a5
0xffffff800076eb70 : mov edx, ebp ; call 0xffffff8000396b85
0xffffff80003ad356 : mov edx, ebp ; call 0xffffff800074ac48
0xffffff800044099a : mov edx, ebp ; call 0xffffff80007ecbf4
0xffffff80004d6d92 : mov edx, ebp ; call rax
0xffffff80007c569f : mov edx, ebp ; call rcx
0xffffff8000606424 : mov edx, ebp ; mov ecx, r15d ; call r8
0xffffff80007cf5a4 : mov edx, ebp ; mov qword ptr [rbp - 0x48], r13 ; call rcx
0xffffff80008fe32e : mov edx, ebp ; mov r8, r14 ; call rax
0xffffff8000764f41 : mov edx, ebp ; ret 0x48ff
0xffffff80008ae41d : mov edx, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80004e6414 : mov edx, ebx ; call 0xffffff800010e055
0xffffff8000691f5f : mov edx, ebx ; call 0xffffff800028e1b4
0xffffff8000661257 : mov edx, ebx ; call 0xffffff800028e1b5
0xffffff800065f8a9 : mov edx, ebx ; call 0xffffff800028e4a5
0xffffff8000502618 : mov edx, ebx ; call 0xffffff800029e854
0xffffff80006a2435 : mov edx, ebx ; call 0xffffff80002c53a5
0xffffff80006eec41 : mov edx, ebx ; call 0xffffff800030f495
0xffffff800076ba86 : mov edx, ebx ; call 0xffffff8000396b85
0xffffff80008dbae2 : mov edx, ebx ; call 0xffffff80008edb18
0xffffff80008bcf5c : mov edx, ebx ; call r14
0xffffff8000267102 : mov edx, ebx ; call r15
0xffffff8000516687 : mov edx, ebx ; call rax
0xffffff80007c9dff : mov edx, ebx ; call rcx
0xffffff800052ff41 : mov edx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000281b64 : mov edx, ebx ; mov ecx, r15d ; call qword ptr [rdi]
0xffffff80007b8729 : mov edx, ebx ; mov qword ptr [rbp - 0x48], rcx ; call rcx
0xffffff80007c6ec4 : mov edx, ebx ; mov qword ptr [rbp - 0xd8], rbx ; call rax
0xffffff800027c7d0 : mov edx, ebx ; mov r8, r15 ; call 0xffffff80002689e7
0xffffff80003f18df : mov edx, ebx ; mov r8d, dword ptr [rbp - 0x30] ; call rax
0xffffff80008bd758 : mov edx, ebx ; mov r9, r11 ; call r14
0xffffff80008000e7 : mov edx, ebx ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff80008bd2b4 : mov edx, ebx ; mov rcx, r10 ; mov r8, r14 ; call r15
0xffffff80008bd691 : mov edx, ebx ; mov rcx, r10 ; mov r8, r15 ; call r14
0xffffff80008bde19 : mov edx, ebx ; mov rcx, rax ; call r12
0xffffff8000669dab : mov edx, ecx ; call 0xffffff800028e4a5
0xffffff800067480f : mov edx, ecx ; call 0xffffff800029e855
0xffffff8000413bf3 : mov edx, ecx ; call 0xffffff80003dfee4
0xffffff80005bfd4c : mov edx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000892908 : mov edx, ecx ; mov ecx, eax ; pop rbp ; jmp r8
0xffffff8000327a25 : mov edx, ecx ; mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0xffffff80005bed55 : mov edx, ecx ; mov qword ptr [rax + 0x20], rdx ; pop rbp ; ret
0xffffff80005b1645 : mov edx, ecx ; mov qword ptr [rax + 0x28], rdx ; pop rbp ; ret
0xffffff8000581a85 : mov edx, ecx ; mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0xffffff80005eb3f5 : mov edx, ecx ; mov qword ptr [rax + 0x68], rdx ; pop rbp ; ret
0xffffff800057f6f5 : mov edx, ecx ; mov qword ptr [rax + 0x78], rdx ; pop rbp ; ret
0xffffff80008bd0b9 : mov edx, ecx ; mov r9, r15 ; call r14
0xffffff80008b2d64 : mov edx, ecx ; mov rcx, r8 ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff8000845efd : mov edx, ecx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff800083f2b0 : mov edx, ecx ; movsxd rcx, dword ptr [rdx + r13*4] ; add rcx, rdx ; jmp rcx
0xffffff800028a905 : mov edx, ecx ; pop rbp ; jmp r8
0xffffff80008b4478 : mov edx, ecx ; pop rbp ; jmp rax
0xffffff8000810a73 : mov edx, edi ; call 0xffffff800010e0d9
0xffffff8000781f2c : mov edx, edi ; call 0xffffff800028e1b4
0xffffff800065f23f : mov edx, edi ; call 0xffffff800028e1b5
0xffffff800065e4aa : mov edx, edi ; call 0xffffff800028e4a5
0xffffff8000698d92 : mov edx, edi ; call 0xffffff80002c53a5
0xffffff80003592f3 : mov edx, edi ; call 0xffffff8000315574
0xffffff8000772c87 : mov edx, edi ; call 0xffffff8000396b85
0xffffff800047d22e : mov edx, edi ; call 0xffffff80004494a4
0xffffff8000667969 : mov edx, edi ; call 0xffffff80006a74c8
0xffffff80006ea41f : mov edx, edi ; call 0xffffff8000726714
0xffffff80008bd62a : mov edx, edi ; call r14
0xffffff80004eb440 : mov edx, edi ; call rax
0xffffff80005bc896 : mov edx, edi ; call rbx
0xffffff80004d94ac : mov edx, edi ; call rcx
0xffffff80005bca97 : mov edx, edi ; lea rcx, [rbp - 0xd0] ; call rbx
0xffffff80008e3a6f : mov edx, edi ; mov r8, r12 ; call 0xffffff80004efce7
0xffffff80008f5ac4 : mov edx, edi ; mov r8, r14 ; call rax
0xffffff80007ec9a2 : mov edx, edi ; mov rcx, r10 ; call rbx
0xffffff80008bcff2 : mov edx, edi ; mov rcx, r10 ; mov r8, r11 ; call r14
0xffffff80009097e7 : mov edx, edi ; mov rcx, r14 ; call rax
0xffffff800051bc8a : mov edx, edi ; mov rcx, r14 ; mov r8, rbx ; call rax
0xffffff80003888f8 : mov edx, edi ; mov rcx, rax ; call 0xffffff8000384b47
0xffffff8000388ca1 : mov edx, edi ; movzx eax, dx ; pop rbx ; pop rbp ; ret
0xffffff80003a8320 : mov edx, edi ; wrmsr ; pop rbp ; ret
0xffffff80008bcfbe : mov edx, edx ; mov rcx, r11 ; call r14
0xffffff80008bd238 : mov edx, edx ; mov rcx, r14 ; call r15
0xffffff80008bd65a : mov edx, edx ; mov rcx, r15 ; call r14
0xffffff80004a1eb0 : mov edx, edx ; pop rbp ; jmp rax
0xffffff8000451f95 : mov edx, esi ; call 0xffffff800028e1b4
0xffffff8000666894 : mov edx, esi ; call 0xffffff800028e4a5
0xffffff80002ace06 : mov edx, esi ; call 0xffffff8000299024
0xffffff80002acf06 : mov edx, esi ; call 0xffffff8000299029
0xffffff8000299f97 : mov edx, esi ; call 0xffffff800029a829
0xffffff800076bbc0 : mov edx, esi ; call 0xffffff8000396b85
0xffffff80003cd23d : mov edx, esi ; call 0xffffff80004494a4
0xffffff800026ac08 : mov edx, esi ; call 0xffffff800074ac48
0xffffff800049d1d7 : mov edx, esi ; call qword ptr [rbx]
0xffffff8000819bbb : mov edx, esi ; call r12
0xffffff8000658399 : mov edx, esi ; call r8
0xffffff80005398b9 : mov edx, esi ; call rax
0xffffff8000558c36 : mov edx, esi ; call rbx
0xffffff800060ec26 : mov edx, esi ; call rcx
0xffffff80003a040d : mov edx, esi ; mov rbx, r8 ; call rax
0xffffff800049f9a8 : mov edx, esi ; mov rcx, r15 ; call rax
0xffffff800049fa47 : mov edx, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007ce060 : mov edx, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff8000399228 : mov edx, esi ; wrmsr ; xor eax, eax ; ret
0xffffff80002fe1ad : mov edx, esp ; call 0xffffff800028e159
0xffffff800065ecff : mov edx, esp ; call 0xffffff800028e1b5
0xffffff800065e4ea : mov edx, esp ; call 0xffffff800028e4a5
0xffffff80002ed2d7 : mov edx, esp ; call 0xffffff80003985e9
0xffffff8000642e70 : mov edx, esp ; call 0xffffff8000642678
0xffffff8000293c2a : mov edx, esp ; call r15
0xffffff8000905d7b : mov edx, esp ; call r8
0xffffff800060533f : mov edx, esp ; call rax
0xffffff80002cf3b3 : mov edx, esp ; call rbx
0xffffff8000882202 : mov edx, esp ; mov rax, qword ptr [rbp - 0x30] ; call rax
0xffffff8000829e5a : mov edx, esp ; mov rcx, r13 ; call r15
0xffffff8000837194 : mov edx, esp ; mov rcx, r13 ; mov r8, r14 ; call r9
0xffffff800066a015 : mov edx, esp ; mov rcx, r14 ; call 0xffffff800028e4a8
0xffffff800065f1fa : mov edx, r12d ; call 0xffffff800028e1b6
0xffffff800065e4e9 : mov edx, r12d ; call 0xffffff800028e4a6
0xffffff800065b337 : mov edx, r12d ; call rax
0xffffff800065ecaf : mov edx, r13d ; call 0xffffff800028e1b6
0xffffff8000606423 : mov edx, r13d ; mov ecx, r15d ; call r8
0xffffff8000666893 : mov edx, r14d ; call 0xffffff800028e4a6
0xffffff8000658398 : mov edx, r14d ; call r8
0xffffff80006359ae : mov edx, r14d ; call rax
0xffffff80008ee15e : mov edx, r14d ; call rcx
0xffffff800086e36a : mov edx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007b1f89 : mov edx, r15d ; call 0xffffff800028e1b5
0xffffff800066120b : mov edx, r15d ; call 0xffffff800028e1b6
0xffffff800065e4a9 : mov edx, r15d ; call 0xffffff800028e4a6
0xffffff8000667968 : mov edx, r15d ; call 0xffffff80006a74c9
0xffffff80006357db : mov edx, r15d ; call rax
0xffffff800067898e : mov edx, r15d ; call rbx
0xffffff80009097e6 : mov edx, r15d ; mov rcx, r14 ; call rax
0xffffff80003888f7 : mov edx, r15d ; mov rcx, rax ; call 0xffffff8000384b48
0xffffff80008435c0 : mov edx, r8d ; jmp 0xffffff80008435ca
0xffffff800084de83 : mov edx, r8d ; jmp 0xffffff800084de94
0xffffff800058e50d : mov es, ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005efb5d : mov es, word ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800025dc1e : mov es, word ptr [rbp + rdx + 0x58b6600] ; ret
0xffffff800085e6ae : mov es, word ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b4c3d : mov es, word ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065e20e : mov es, word ptr [rdx] ; ret
0xffffff80003c206e : mov es, word ptr [rsi - 0x76b70003] ; ret
0xffffff8000b3ea25 : mov esi, 0 ; mov ah, byte ptr [rdi + 0x3b] ; ret 0x149
0xffffff80008130dd : mov esi, 0x10003220 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800041eedc : mov esi, 0x10c48348 ; pop rbp ; ret
0xffffff80004e4fae : mov esi, 0x110 ; call 0xffffff800010e148
0xffffff80002cd24f : mov esi, 0x112 ; call 0xffffff800028e159
0xffffff80005c6887 : mov esi, 0x120 ; call 0xffffff80005c2b77
0xffffff80008d2323 : mov esi, 0x148010c ; ret
0xffffff80008e1f3b : mov esi, 0x148d ; call 0xffffff800028e157
0xffffff80004e4ea5 : mov esi, 0x150 ; call 0xffffff800010e148
0xffffff80008497f9 : mov esi, 0x15c ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0xffffff80007f4e58 : mov esi, 0x16 ; jmp rcx
0xffffff8000420667 : mov esi, 0x18 ; call 0xffffff800078c8c7
0xffffff80008ea845 : mov esi, 0x18 ; call 0xffffff8000856ad7
0xffffff80008ef662 : mov esi, 0x1b8faa05 ; add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0xffffff8000661e76 : mov esi, 0x1c ; call 0xffffff800010e147
0xffffff80003c1e51 : mov esi, 0x1fa ; call 0xffffff800028e157
0xffffff80003c1e7a : mov esi, 0x1fb ; call 0xffffff800028e157
0xffffff8000331ea2 : mov esi, 0x1fba ; call 0xffffff800028e157
0xffffff80003c1e9a : mov esi, 0x1ff ; call 0xffffff800028e157
0xffffff8000276b57 : mov esi, 0x20 ; call 0xffffff8000292d77
0xffffff80007ab731 : mov esi, 0x200 ; call rax
0xffffff80007ab875 : mov esi, 0x200 ; call rcx
0xffffff80007ab9ad : mov esi, 0x200 ; mov edi, ebx ; call rax
0xffffff8000341f05 : mov esi, 0x210 ; call 0xffffff800028e157
0xffffff800066b35d : mov esi, 0x210 ; call 0xffffff800028e158
0xffffff80007a8dfa : mov esi, 0x23 ; jmp 0xffffff80007a8dc9
0xffffff80004c96b2 : mov esi, 0x258d4cc8 ; ret 0x4ae3
0xffffff8000831f02 : mov esi, 0x25d ; call 0xffffff800028e157
0xffffff8000571f3d : mov esi, 0x28 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80005ca929 : mov esi, 0x2a ; jmp rcx
0xffffff80005ca472 : mov esi, 0x2a ; mov rbx, r15 ; jmp rcx
0xffffff8000784df0 : mov esi, 0x2ce86 ; add byte ptr [rcx], bh ; ret
0xffffff800069cfb1 : mov esi, 0x31 ; jmp 0xffffff800069cfff
0xffffff8000276a7f : mov esi, 0x34 ; call 0xffffff8000292d77
0xffffff800033ccf4 : mov esi, 0x3948feed ; ret
0xffffff8000391f3f : mov esi, 0x39b ; call 0xffffff800028e157
0xffffff80004ec4dc : mov esi, 0x40 ; call 0xffffff800010e148
0xffffff80007aac3d : mov esi, 0x400 ; call rax
0xffffff80007aafeb : mov esi, 0x400 ; mov edi, r12d ; call rcx
0xffffff8000321ead : mov esi, 0x40a ; call 0xffffff800028e157
0xffffff8000484a65 : mov esi, 0x415b3304 ; pop rsi ; pop rbp ; ret
0xffffff8000281e8b : mov esi, 0x440 ; call 0xffffff800028e157
0xffffff8000281ee0 : mov esi, 0x44d ; call 0xffffff800028e157
0xffffff80004d1e46 : mov esi, 0x48 ; call 0xffffff800010e147
0xffffff80004e1059 : mov esi, 0x48 ; call 0xffffff800010e148
0xffffff80008e6c4e : mov esi, 0x48001422 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80008b3cbe : mov esi, 0x480016e1 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80008adf5e : mov esi, 0x48001716 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800088e22e : mov esi, 0x4800188d ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800088a7fe : mov esi, 0x480018c2 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000860e4e : mov esi, 0x48001b10 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800083282e : mov esi, 0x48001de8 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800082c1dd : mov esi, 0x4800308f ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f85b6 : mov esi, 0x48007fb4 ; shl eax, 0xc ; pop rbp ; ret
0xffffff80003a3db8 : mov esi, 0x48890078 ; pop rbp ; ret
0xffffff800029dd92 : mov esi, 0x48d0257c ; mov esi, ebx ; call r15
0xffffff800084d1ff : mov esi, 0x48f20148 ; mov edi, dword ptr [rbp + 0x20] ; jmp rdx
0xffffff80008ec2d0 : mov esi, 0x48f70148 ; mov esi, eax ; jmp rdi
0xffffff80007d40ee : mov esi, 0x5b003605 ; pop r14 ; pop rbp ; ret
0xffffff80007c347e : mov esi, 0x5bff94ac ; pop r14 ; pop rbp ; ret
0xffffff80003b1deb : mov esi, 0x5c8942db ; adc al, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e0b : mov esi, 0x5c8942db ; adc cl, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e2b : mov esi, 0x5c8942db ; adc dl, byte ptr [rax + rcx*4] ; ret
0xffffff800065646e : mov esi, 0x5d003b18 ; ret
0xffffff800049d98e : mov esi, 0x5d00677b ; ret
0xffffff800085cc78 : mov esi, 0x5dba042b ; ret
0xffffff80003667c5 : mov esi, 0x5dc829c8 ; ret
0xffffff800036677c : mov esi, 0x5dc829ca ; ret
0xffffff800079628e : mov esi, 0x5dffe79a ; ret
0xffffff80004e8794 : mov esi, 0x60 ; call 0xffffff800010e148
0xffffff8000574b8d : mov esi, 0x68 ; mov rdi, r13 ; call rax
0xffffff800056f6c3 : mov esi, 0x68 ; mov rdi, rbx ; call rax
0xffffff80003b52e7 : mov esi, 0x69cfeb05 ; add dh, dh ; ret 0x7502
0xffffff80003b475b : mov esi, 0x69db771d ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80004e85ec : mov esi, 0x6c ; call 0xffffff800010e148
0xffffff80002d1e66 : mov esi, 0x721 ; call 0xffffff800028e157
0xffffff80004e8a21 : mov esi, 0x78 ; call 0xffffff800010e148
0xffffff80003a0780 : mov esi, 0x7ffffff7 ; idiv edi ; jmp rax
0xffffff80008d9202 : mov esi, 0x8000 ; pop rbp ; jmp rax
0xffffff80008d31ee : mov esi, 0x80ca88c8 ; ret 0xfd0
0xffffff8000298ae9 : mov esi, 0x80fb2305 ; add byte ptr [rbx + rcx*4 + 0x34], cl ; ret
0xffffff8000298ac3 : mov esi, 0x80fb4a05 ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret
0xffffff800081c602 : mov esi, 0x81 ; xor eax, eax ; call 0xffffff8000818829
0xffffff8000352734 : mov esi, 0x8148ffdb ; ret
0xffffff80005a1cfe : mov esi, 0x85ce29cb ; test byte ptr [rdi], 0x94 ; ret
0xffffff80004e5451 : mov esi, 0x878 ; call 0xffffff800010e148
0xffffff80009018f2 : mov esi, 0x88 ; call rcx
0xffffff80003a1e85 : mov esi, 0x89 ; call 0xffffff800028e157
0xffffff8000843e4a : mov esi, 0x8900000a ; ret
0xffffff80004322be : mov esi, 0x890001b5 ; ret
0xffffff80004e58ae : mov esi, 0x89002793 ; ret
0xffffff800050d08e : mov esi, 0x89002801 ; ret
0xffffff80003cd699 : mov esi, 0x89410007 ; ret
0xffffff8000311ea8 : mov esi, 0x89440063 ; retf ; call 0xffffff800028e158
0xffffff80006b93ce : mov esi, 0x8948000f ; ret
0xffffff80007c0bb7 : mov esi, 0x8948dead ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80006dca33 : mov esi, 0x8948ffbf ; ret
0xffffff80008031a0 : mov esi, 0x8948ffc9 ; ret
0xffffff80004a7e5b : mov esi, 0x8948ffe2 ; ret
0xffffff80006b1b60 : mov esi, 0x8948fffb ; ret 0x4b8b
0xffffff8000786e12 : mov esi, 0x8948fffc ; ret
0xffffff80005a32f5 : mov esi, 0x8948fffd ; ret
0xffffff800036111c : mov esi, 0x8948ffff ; ret
0xffffff800029e41f : mov esi, 0x894c083c ; out 0x41, al ; call rdi
0xffffff800079485e : mov esi, 0x89ffbb0c ; ret
0xffffff800071657e : mov esi, 0x89fffbef ; ret
0xffffff8000471ede : mov esi, 0x89fffd75 ; ret
0xffffff80006e267e : mov esi, 0x89fffeb8 ; ret
0xffffff80007d8bce : mov esi, 0x89ffff42 ; ret
0xffffff80003f6bc5 : mov esi, 0x8b41fff9 ; pop rbp ; add dh, dh ; ret
0xffffff8000845611 : mov esi, 0x8b48001c ; add al, 0xc1 ; pop rbp ; ret
0xffffff80007a6a50 : mov esi, 0x8b80ffbe ; ret
0xffffff8000281eb5 : mov esi, 0x8c ; call 0xffffff800028e157
0xffffff8000281eb4 : mov esi, 0x8c ; call 0xffffff800028e158
0xffffff8000292bb2 : mov esi, 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff80004e88ab : mov esi, 0x90 ; call 0xffffff800010e148
0xffffff80007a6a80 : mov esi, 0xa380ffbe ; ret
0xffffff8000720a00 : mov esi, 0xb70f8031 ; ret
0xffffff80003667c1 : mov esi, 0xbe0f41c1 ; enter -0x37d7, 0x5d ; ret
0xffffff80004c6c2f : mov esi, 0xc031ffec ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000267805 : mov esi, 0xc38948fc ; call rbx
0xffffff800050c6ff : mov esi, 0xc8d43c1 ; mov dword ptr [rax - 1], ecx ; ret
0xffffff8000366779 : mov esi, 0xcabe0fc1 ; sub eax, ecx ; pop rbp ; ret
0xffffff80007b226e : mov esi, 0xd88948ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008f5322 : mov esi, 0xe0 ; call rcx
0xffffff80008bf8ba : mov esi, 0xe00002c7 ; jmp 0xffffff80008bf88a
0xffffff800029e3f1 : mov esi, 0xe6894cf8 ; call r15
0xffffff8000271ea3 : mov esi, 0xe6e ; call 0xffffff800028e157
0xffffff80007558c6 : mov esi, 0xe800388e ; jno 0xffffff80007558a5 ; ret
0xffffff80007546c6 : mov esi, 0xe80038a0 ; jno 0xffffff80007546bd ; ret
0xffffff80006256fe : mov esi, 0xf001927 ; mov bh, 0x55 ; ret 0x8b49
0xffffff80007b1046 : mov esi, 0xf08944ff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800057aa4c : mov esi, 0xf6000002 ; ret
0xffffff80006a6d56 : mov esi, 0xf7894cff ; call 0xffffff8000393047
0xffffff80008d25b2 : mov esi, 0xff49014a ; ret 0x8949
0xffffff80008d23b2 : mov esi, 0xff49014b ; ret
0xffffff80007a67f4 : mov esi, 0xff894cff ; call 0xffffff8000392a47
0xffffff8000b48ef0 : mov esi, 0xffffff0a ; dec dword ptr [rbp + 1] ; ret
0xffffff80003b542e : mov esi, 0xffffffc8 ; ret
0xffffff80005e7c60 : mov esi, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e7c81
0xffffff80005a65e8 : mov esi, 1 ; call 0xffffff80003928a7
0xffffff80007690a3 : mov esi, 1 ; call 0xffffff80003928a8
0xffffff80005d837a : mov esi, 1 ; call 0xffffff80007b4657
0xffffff800028ef06 : mov esi, 1 ; call rax
0xffffff8000512cd7 : mov esi, 1 ; mov edi, ebx ; call rax
0xffffff80005293be : mov esi, 1 ; mov rdi, r12 ; call rax
0xffffff8000529763 : mov esi, 1 ; mov rdi, r13 ; call rax
0xffffff80007c7dbe : mov esi, 1 ; mov rdi, r13 ; call rcx
0xffffff80006a85c4 : mov esi, 1 ; mov rdi, r14 ; call rax
0xffffff80005e94ef : mov esi, 1 ; mov rdi, r15 ; call rax
0xffffff8000528fb7 : mov esi, 1 ; mov rdi, rbx ; call rax
0xffffff8000898877 : mov esi, 1 ; pop rbp ; jmp rax
0xffffff800061c636 : mov esi, 1 ; xor edx, edx ; call 0xffffff80002d8929
0xffffff800074b464 : mov esi, 1 ; xor edx, edx ; call qword ptr [rbx]
0xffffff80005d659e : mov esi, 2 ; call 0xffffff80003928a7
0xffffff80007696d8 : mov esi, 2 ; call 0xffffff80003928a8
0xffffff800028ed69 : mov esi, 2 ; call rax
0xffffff80005cf5d1 : mov esi, 2 ; pop rbp ; jmp rax
0xffffff8000749534 : mov esi, 2 ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000748c37 : mov esi, 3 ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff80008e1a61 : mov esi, 3 ; pop rbp ; jmp rax
0xffffff80006b48ed : mov esi, 4 ; call 0xffffff8000370bc7
0xffffff800074258f : mov esi, 4 ; call 0xffffff8000370bc8
0xffffff80003cca15 : mov esi, 4 ; call 0xffffff8000448c57
0xffffff80003cd1e5 : mov esi, 4 ; call 0xffffff80004494a7
0xffffff8000482d84 : mov esi, 6 ; call 0xffffff80002bf067
0xffffff80003b879f : mov esi, 7 ; call r14
0xffffff8000846482 : mov esi, 8 ; pop rbp ; jmp rax
0xffffff80008da391 : mov esi, dword ptr [r12 + 0x3c] ; call rax
0xffffff800051eea0 : mov esi, dword ptr [r14 + 0x10] ; mov edx, 3 ; call rax
0xffffff800053b5ea : mov esi, dword ptr [r14 + 0x18] ; mov rdi, rbx ; call rax
0xffffff8000815561 : mov esi, dword ptr [r14 + 0x18] ; test esi, esi ; je 0xffffff8000815573 ; call rax
0xffffff800051eaf5 : mov esi, dword ptr [r15 + 0x10] ; xor edx, edx ; mov rdi, r14 ; call rax
0xffffff800083dfbe : mov esi, dword ptr [rax + 0x30] ; mov rdi, r14 ; mov edx, ebx ; call rcx
0xffffff800029a61e : mov esi, dword ptr [rax + 8] ; mov rdx, qword ptr [rax + 0x10] ; xor edi, edi ; call qword ptr [rax]
0xffffff80002ace01 : mov esi, dword ptr [rax + rbp*4 + 0x44] ; mov rdx, r14 ; call 0xffffff8000299029
0xffffff800081289c : mov esi, dword ptr [rax + rcx*8] ; mov al, 1 ; mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff8000555821 : mov esi, dword ptr [rax - 0x76b30001] ; imul eax ; ret
0xffffff80008e48d1 : mov esi, dword ptr [rax - 0xc] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005115ac : mov esi, dword ptr [rax] ; call 0xffffff80002cd854
0xffffff80007580bd : mov esi, dword ptr [rax] ; mov edx, 0x20006453 ; xor ecx, ecx ; call rbx
0xffffff8000799a69 : mov esi, dword ptr [rax] ; mov edx, 1 ; call rcx
0xffffff80004923c2 : mov esi, dword ptr [rax] ; mov rdx, qword ptr [rax + 0x18] ; mov ecx, ebx ; call r9
0xffffff80008f5c9e : mov esi, dword ptr [rbp + 0xe0] ; call rcx
0xffffff80005c0304 : mov esi, dword ptr [rbp - 0x138] ; call rax
0xffffff8000463453 : mov esi, dword ptr [rbp - 0x148] ; call qword ptr [rcx]
0xffffff800058d0f2 : mov esi, dword ptr [rbp - 0x15c] ; mov rcx, r15 ; call rax
0xffffff80004d6d8b : mov esi, dword ptr [rbp - 0x1ec] ; mov rdx, r13 ; call rax
0xffffff800048e4f4 : mov esi, dword ptr [rbp - 0x220] ; jmp rdx
0xffffff8000486120 : mov esi, dword ptr [rbp - 0x288] ; jmp rax
0xffffff8000617eae : mov esi, dword ptr [rbp - 0x300] ; call rax
0xffffff800077faa4 : mov esi, dword ptr [rbp - 0x30] ; call r12
0xffffff80004c38da : mov esi, dword ptr [rbp - 0x30] ; call rbx
0xffffff80008f9b34 : mov esi, dword ptr [rbp - 0x30] ; mov rdx, r12 ; call rbx
0xffffff80006eec3d : mov esi, dword ptr [rbp - 0x30] ; mov rdx, rbx ; call 0xffffff800030f499
0xffffff8000770c04 : mov esi, dword ptr [rbp - 0x330] ; call 0xffffff8000396b89
0xffffff800077f702 : mov esi, dword ptr [rbp - 0x38] ; call r15
0xffffff8000272673 : mov esi, dword ptr [rbp - 0x38] ; jmp rax
0xffffff800054dedd : mov esi, dword ptr [rbp - 0x38] ; mov r15, r8 ; call r15
0xffffff800054dfa7 : mov esi, dword ptr [rbp - 0x38] ; mov rbx, rdx ; call rbx
0xffffff80007ac7b3 : mov esi, dword ptr [rbp - 0x3e8] ; call rcx
0xffffff80006b6ef2 : mov esi, dword ptr [rbp - 0x40] ; call rax
0xffffff800027c4e3 : mov esi, dword ptr [rbp - 0x40] ; jmp 0xffffff800027c55d
0xffffff800053313b : mov esi, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rcx
0xffffff8000281b60 : mov esi, dword ptr [rbp - 0x4c] ; mov rdx, rbx ; mov ecx, r15d ; call qword ptr [rdi]
0xffffff8000717645 : mov esi, dword ptr [rbp - 0x50] ; call 0xffffff800010e059
0xffffff8000763edb : mov esi, dword ptr [rbp - 0x50] ; mov rdi, r14 ; call 0xffffff80003923e9
0xffffff80008f04c2 : mov esi, dword ptr [rbp - 0x50] ; mov rdx, r14 ; call rbx
0xffffff80006357d8 : mov esi, dword ptr [rbp - 0x54] ; mov edx, r15d ; call rax
0xffffff8000757bc0 : mov esi, dword ptr [rbp - 0x5b8] ; call r15
0xffffff80004c4852 : mov esi, dword ptr [rbp - 0x60] ; call rax
0xffffff80002cf12a : mov esi, dword ptr [rbp - 0x60] ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80002cf3af : mov esi, dword ptr [rbp - 0x60] ; mov rdx, r12 ; call rbx
0xffffff80006e93e3 : mov esi, dword ptr [rbp - 0x664] ; call 0xffffff8000705658
0xffffff8000799c6a : mov esi, dword ptr [rbp - 0x68] ; call rax
0xffffff8000799c3b : mov esi, dword ptr [rbp - 0x68] ; call rcx
0xffffff800064765a : mov esi, dword ptr [rbp - 0x68] ; lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff80007d7971 : mov esi, dword ptr [rbp - 0x70] ; call rbx
0xffffff800029dcc4 : mov esi, dword ptr [rbp - 0x78] ; call r14
0xffffff800029dd26 : mov esi, dword ptr [rbp - 0x78] ; call r15
0xffffff80003aa48a : mov esi, dword ptr [rbp - 0x78] ; call r8
0xffffff80003aa609 : mov esi, dword ptr [rbp - 0x78] ; call rax
0xffffff800029df3f : mov esi, dword ptr [rbp - 0x78] ; call rcx
0xffffff80004d94a8 : mov esi, dword ptr [rbp - 0x78] ; mov rdx, r15 ; call rcx
0xffffff80004df9a1 : mov esi, dword ptr [rbp - 0x88] ; call 0xffffff800010e089
0xffffff80007eafb4 : mov esi, dword ptr [rbp - 0x88] ; mov rsi, r14 ; call rbx
0xffffff80006a61d9 : mov esi, dword ptr [rbp - 0xb0] ; call 0xffffff80002d4ef9
0xffffff800066757a : mov esi, dword ptr [rbp - 0xc0] ; jmp rcx
0xffffff80004bef8c : mov esi, dword ptr [rbp - 0xd8] ; call r12
0xffffff800038985a : mov esi, dword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff800053a00f : mov esi, dword ptr [rbx + 0x18] ; mov rdi, qword ptr [rbx + 0x28] ; call rax
0xffffff80005398b2 : mov esi, dword ptr [rbx + 0x18] ; mov rdi, r12 ; mov rdx, r14 ; call rax
0xffffff800054bfbd : mov esi, dword ptr [rbx + 0x20] ; mov rdx, qword ptr [rbx + 0x28] ; call rax
0xffffff80003523d0 : mov esi, dword ptr [rbx + 0x38] ; mov rdi, r14 ; call 0xffffff800010e698
0xffffff80008da813 : mov esi, dword ptr [rbx + 0x3c] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80008808b3 : mov esi, dword ptr [rbx + 0x58] ; call rax
0xffffff800054fdc0 : mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff8000671b75 : mov esi, dword ptr [rbx - 8] ; call 0xffffff8000297b46
0xffffff8000674c53 : mov esi, dword ptr [rbx] ; mov rdi, rbx ; call 0xffffff8000297b48
0xffffff80007dae21 : mov esi, dword ptr [rbx] ; stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x63] ; ret
0xffffff800044fb38 : mov esi, dword ptr [rcx + 0x68] ; mov rdi, r14 ; call rdx
0xffffff8000870596 : mov esi, dword ptr [rcx] ; call rax
0xffffff8000799ae8 : mov esi, dword ptr [rcx] ; mov edx, 1 ; call rax
0xffffff800051eaf6 : mov esi, dword ptr [rdi + 0x10] ; xor edx, edx ; mov rdi, r14 ; call rax
0xffffff800082ee00 : mov esi, dword ptr [rdi + 0x18] ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff8000812361 : mov esi, dword ptr [rdi + 0x20] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff800082ca01 : mov esi, dword ptr [rdi + 0x30] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008e567f : mov esi, dword ptr [rdi + 0x3c] ; mov rdi, rax ; pop rbp ; jmp rcx
0xffffff80008985b1 : mov esi, dword ptr [rdi + 0x48] ; mov rdx, r15 ; call rax
0xffffff800055e71a : mov esi, dword ptr [rdi + rcx*8 + 0x48] ; call rax
0xffffff80006000e1 : mov esi, dword ptr [rdi - 0x37] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800054b8e0 : mov esi, dword ptr [rdi - 8] ; add rdi, -8 ; call 0xffffff8000297b49
0xffffff800067beaa : mov esi, dword ptr [rdi] ; xor eax, dword ptr [rax] ; xor eax, eax ; call 0xffffff800029e859
0xffffff8000271bc6 : mov esi, dword ptr [rdx + 0x20] ; add rdx, 0x24 ; call 0xffffff800026de99
0xffffff80004196fe : mov esi, dword ptr [rdx + rax*8] ; jmp 0xffffff8000419716
0xffffff800055d482 : mov esi, dword ptr [rdx + rcx*8 + 0x48] ; call rax
0xffffff80008d7aaf : mov esi, dword ptr [rip + 0x25ee8b] ; pop rbp ; jmp rax
0xffffff80008d7a7f : mov esi, dword ptr [rip + 0x25eea3] ; pop rbp ; jmp rax
0xffffff8000865cef : mov esi, dword ptr [rip + 0x2d0b0b] ; pop rbp ; jmp rax
0xffffff8000865ccf : mov esi, dword ptr [rip + 0x2d0b2b] ; pop rbp ; jmp rax
0xffffff8000865caf : mov esi, dword ptr [rip + 0x2d0b4b] ; pop rbp ; jmp rax
0xffffff80007fe242 : mov esi, dword ptr [rip + 0x2e5ee0] ; call r14
0xffffff80007fe221 : mov esi, dword ptr [rip + 0x2e5f01] ; call r12
0xffffff800076b57c : mov esi, dword ptr [rip + 0x3732ce] ; call 0xffffff80003986f9
0xffffff800076a258 : mov esi, dword ptr [rip + 0x3745fa] ; call 0xffffff8000398569
0xffffff80007760e6 : mov esi, dword ptr [rip + 0x3b917c] ; call 0xffffff80003987d9
0xffffff80007760d2 : mov esi, dword ptr [rip + 0x3b91a0] ; call 0xffffff80003987d9
0xffffff80007760be : mov esi, dword ptr [rip + 0x3b91bc] ; call 0xffffff80003987d9
0xffffff800051eea1 : mov esi, dword ptr [rsi + 0x10] ; mov edx, 3 ; call rax
0xffffff800045181f : mov esi, dword ptr [rsi + 0x10] ; test rsi, rsi ; jne 0xffffff8000451819 ; pop rbp ; ret
0xffffff800053b5eb : mov esi, dword ptr [rsi + 0x18] ; mov rdi, rbx ; call rax
0xffffff800082fb1f : mov esi, dword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff8000815562 : mov esi, dword ptr [rsi + 0x18] ; test esi, esi ; je 0xffffff8000815572 ; call rax
0xffffff8000674652 : mov esi, dword ptr [rsi - 8] ; call 0xffffff8000297b46
0xffffff80008f0c9b : mov esi, dword ptr [rsi - 8] ; call 0xffffff8000297b49
0xffffff80004a1da1 : mov esi, dword ptr [rsi] ; jmp 0xffffff80004a1d6b
0xffffff80007132b8 : mov esi, dword ptr [rsi] ; jmp 0xffffff800071357b
0xffffff80005dcf97 : mov esi, dword ptr [rsi] ; test r14, r14 ; jne 0xffffff80005dcf66 ; jmp 0xffffff80005dcfb9
0xffffff80008da392 : mov esi, dword ptr [rsp + 0x3c] ; call rax
0xffffff80005076d0 : mov esi, dword ptr [rsp + 0x54] ; mov rdx, qword ptr [r12 + 0x58] ; call rax
0xffffff800055dbcf : mov esi, dword ptr [rsp + rcx*8 + 0x48] ; call rax
0xffffff80007d42ed : mov esi, eax ; call 0xffffff800010e058
0xffffff80006783ec : mov esi, eax ; call 0xffffff800029ab95
0xffffff800074b2d5 : mov esi, eax ; call 0xffffff800030f499
0xffffff800076882c : mov esi, eax ; call 0xffffff8000398565
0xffffff80006c3242 : mov esi, eax ; call 0xffffff80006c4cc9
0xffffff80008e3276 : mov esi, eax ; call 0xffffff80008df534
0xffffff800081df80 : mov esi, eax ; call r12
0xffffff8000812753 : mov esi, eax ; call r14
0xffffff800082e5cb : mov esi, eax ; call r15
0xffffff800039f406 : mov esi, eax ; call rbx
0xffffff80003a2ada : mov esi, eax ; call rcx
0xffffff8000755f11 : mov esi, eax ; jg 0xffffff8000755ee5 ; pop rbp ; ret
0xffffff8000533d11 : mov esi, eax ; jmp rcx
0xffffff80008ec2d5 : mov esi, eax ; jmp rdi
0xffffff80003888c9 : mov esi, eax ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000686ba4 : mov esi, eax ; mov rax, qword ptr [rbp - 0x58] ; call qword ptr [rax]
0xffffff80008744b8 : mov esi, eax ; mov rcx, r9 ; pop rbp ; jmp r11
0xffffff800076e69b : mov esi, eax ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff8000819c7a : mov esi, eax ; mov rdx, r12 ; call r15
0xffffff8000819bb8 : mov esi, eax ; mov rdx, r14 ; call r12
0xffffff80004be378 : mov esi, eax ; movsxd rax, dword ptr [rsi + rcx*4] ; add rax, rsi ; jmp rax
0xffffff800078c49b : mov esi, eax ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0xffffff80006a1ff1 : mov esi, eax ; pop rbp ; jmp 0xffffff80002c36c6
0xffffff80007f0191 : mov esi, eax ; pop rbp ; jmp r11
0xffffff80008151e6 : mov esi, eax ; pop rbp ; jmp rcx
0xffffff80004ab074 : mov esi, eax ; sub eax, esi ; pop rbp ; ret
0xffffff80004e9ed0 : mov esi, ebp ; call 0xffffff800010e145
0xffffff800066366e : mov esi, ebp ; call 0xffffff800028e1b5
0xffffff80005025a7 : mov esi, ebp ; call 0xffffff800029e854
0xffffff80006a588e : mov esi, ebp ; call 0xffffff80002d4ef5
0xffffff800030dcb3 : mov esi, ebp ; call 0xffffff80003498b9
0xffffff80007fa92d : mov esi, ebp ; call 0xffffff8000396b84
0xffffff800076ebad : mov esi, ebp ; call 0xffffff8000396b85
0xffffff80002ae486 : mov esi, ebp ; call 0xffffff800074ac48
0xffffff800029ddf6 : mov esi, ebp ; call r12
0xffffff8000894270 : mov esi, ebp ; call r15
0xffffff80002d0897 : mov esi, ebp ; call rax
0xffffff80003ac3f2 : mov esi, ebp ; call rbx
0xffffff800090a538 : mov esi, ebp ; call rcx
0xffffff80007f8fce : mov esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800041d229 : mov esi, ebp ; jmp 0xffffff800041c836
0xffffff80008fbb23 : mov esi, ebp ; mov ecx, dword ptr [rbp - 0x30] ; mov r8d, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000908120 : mov esi, ebp ; mov ecx, dword ptr [rbp - 0x34] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff800066369b : mov esi, ebp ; mov edx, ebx ; call 0xffffff800028e1b7
0xffffff8000502616 : mov esi, ebp ; mov edx, ebx ; call 0xffffff800029e856
0xffffff800087c2c6 : mov esi, ebp ; mov r8d, eax ; call rbx
0xffffff80007eb019 : mov esi, ebp ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000909468 : mov esi, ebp ; mov rcx, r12 ; call rax
0xffffff80008fcb1b : mov esi, ebp ; mov rcx, r15 ; call rax
0xffffff80008f6782 : mov esi, ebp ; mov rcx, r15 ; mov r9, r14 ; call rax
0xffffff800087e813 : mov esi, ebp ; mov rdx, r12 ; call rax
0xffffff800087e52d : mov esi, ebp ; mov rdx, r15 ; call rax
0xffffff800029bcad : mov esi, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff800085a390 : mov esi, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff800038a4a0 : mov esi, ebx ; call 0xffffff800010e089
0xffffff80004d1ef7 : mov esi, ebx ; call 0xffffff800010e144
0xffffff80004df96c : mov esi, ebx ; call 0xffffff800010e145
0xffffff8000301f29 : mov esi, ebx ; call 0xffffff800028e1b4
0xffffff80006611dc : mov esi, ebx ; call 0xffffff800028e1b5
0xffffff80007b51c5 : mov esi, ebx ; call 0xffffff800028e1b9
0xffffff80002fe91d : mov esi, ebx ; call 0xffffff800029ac14
0xffffff80006a2570 : mov esi, ebx ; call 0xffffff80002c36c5
0xffffff8000298ce0 : mov esi, ebx ; call 0xffffff80002d4ef4
0xffffff80006a5d54 : mov esi, ebx ; call 0xffffff80002d4ef5
0xffffff80007487a3 : mov esi, ebx ; call 0xffffff8000370e85
0xffffff8000851887 : mov esi, ebx ; call 0xffffff80008edb14
0xffffff80003753b1 : mov esi, ebx ; call qword ptr [rax]
0xffffff80007d16c5 : mov esi, ebx ; call r12
0xffffff8000543b6d : mov esi, ebx ; call r14
0xffffff800029db03 : mov esi, ebx ; call r15
0xffffff80002ce37a : mov esi, ebx ; call rax
0xffffff8000288305 : mov esi, ebx ; call rcx
0xffffff800036bc7f : mov esi, ebx ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000662aff : mov esi, ebx ; mov edx, dword ptr [rbp - 0x78] ; call 0xffffff800028e1b8
0xffffff800086e368 : mov esi, ebx ; mov edx, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000661209 : mov esi, ebx ; mov edx, r15d ; call 0xffffff800028e1b8
0xffffff80003b823e : mov esi, ebx ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000757acd : mov esi, ebx ; mov rcx, r12 ; call r15
0xffffff80008a15eb : mov esi, ebx ; mov rdi, rax ; call r12
0xffffff80008bd657 : mov esi, ebx ; mov rdx, r10 ; mov rcx, r15 ; call r14
0xffffff80008821ff : mov esi, ebx ; mov rdx, r12 ; mov rax, qword ptr [rbp - 0x30] ; call rax
0xffffff800087e8e1 : mov esi, ebx ; mov rdx, r13 ; call rax
0xffffff800087e3f2 : mov esi, ebx ; mov rdx, r14 ; call rax
0xffffff80008f0852 : mov esi, ebx ; mov rdx, r15 ; call rax
0xffffff8000413bf0 : mov esi, ebx ; mov rdx, rcx ; call 0xffffff80003dfee7
0xffffff80005cf6ab : mov esi, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800067d40c : mov esi, ecx ; call 0xffffff800029e855
0xffffff80003feb1d : mov esi, ecx ; call 0xffffff8000393048
0xffffff80008bbe45 : mov esi, ecx ; call 0xffffff8000857f58
0xffffff8000421145 : mov esi, ecx ; call rcx
0xffffff80004f9024 : mov esi, ecx ; jne 0xffffff80004f9015 ; pop rbp ; ret
0xffffff800036b6f9 : mov esi, ecx ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054ddb3 : mov esi, ecx ; mov r15, rdx ; mov rbx, rcx ; call r15
0xffffff80008456ba : mov esi, ecx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff8000892819 : mov esi, ecx ; mov rcx, rax ; pop rbp ; jmp r8
0xffffff80006d066e : mov esi, ecx ; sub eax, esi ; pop rbp ; ret
0xffffff800065f1cb : mov esi, edi ; call 0xffffff800028e1b5
0xffffff8000766da5 : mov esi, edi ; call 0xffffff8000396b85
0xffffff80007054b2 : mov esi, edi ; call 0xffffff80006d4a18
0xffffff800050c8b6 : mov esi, edi ; call 0xffffff8000758b34
0xffffff8000652889 : mov esi, edi ; call 0xffffff8000845909
0xffffff80003518e9 : mov esi, edi ; call 0xffffff80008edb14
0xffffff80002938ea : mov esi, edi ; call qword ptr [rax]
0xffffff80002db834 : mov esi, edi ; call r12
0xffffff800028d7cb : mov esi, edi ; call r14
0xffffff8000534df2 : mov esi, edi ; call rax
0xffffff80008fb8c8 : mov esi, edi ; call rbx
0xffffff80008fcff3 : mov esi, edi ; call rcx
0xffffff80002908e6 : mov esi, edi ; jne 0xffffff80002908d5 ; pop rbp ; ret
0xffffff80008fb9b7 : mov esi, edi ; mov ecx, r12d ; call rbx
0xffffff800065f1f8 : mov esi, edi ; mov edx, r12d ; call 0xffffff800028e1b8
0xffffff8000658396 : mov esi, edi ; mov edx, r14d ; call r8
0xffffff80008ee15c : mov esi, edi ; mov edx, r14d ; call rcx
0xffffff80006965c5 : mov esi, edi ; mov esi, 1 ; call 0xffffff80003928a9
0xffffff80008f5d1d : mov esi, edi ; mov r9, r13 ; call rax
0xffffff80008f5e24 : mov esi, edi ; mov r9, r13 ; call rbx
0xffffff80008f6a02 : mov esi, edi ; mov rcx, r13 ; mov r9, r14 ; call rax
0xffffff80008bcfbb : mov esi, edi ; mov rdx, r10 ; mov rcx, r11 ; call r14
0xffffff800076eb6d : mov esi, edi ; mov rdx, r13 ; call 0xffffff8000396b88
0xffffff8000440997 : mov esi, edi ; mov rdx, r13 ; call 0xffffff80007ecbf7
0xffffff800087f093 : mov esi, edi ; mov rdx, r13 ; call rax
0xffffff80008fe32b : mov esi, edi ; mov rdx, r13 ; mov r8, r14 ; call rax
0xffffff800049d1d4 : mov esi, edi ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff800060fc92 : mov esi, edi ; mov rdx, r14 ; call rax
0xffffff800060ec23 : mov esi, edi ; mov rdx, r14 ; call rcx
0xffffff8000397b74 : mov esi, edi ; mov rdx, rax ; call r14
0xffffff800038971b : mov esi, edi ; shr rsi, 0x20 ; call qword ptr [rax]
0xffffff8000887ff8 : mov esi, edi ; xor ebx, ebx ; xor esi, esi ; call 0xffffff8000864248
0xffffff80007100bb : mov esi, edx ; call 0xffffff800078c384
0xffffff80007f186c : mov esi, edx ; jmp rcx
0xffffff80008b7b3e : mov esi, edx ; jne 0xffffff80008b7b38 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a1ead : mov esi, edx ; mov rdx, r10 ; pop rbp ; jmp rax
0xffffff80008bcf59 : mov esi, edx ; mov rdx, r11 ; call r14
0xffffff80008bd627 : mov esi, edx ; mov rdx, r15 ; call r14
0xffffff80007582b7 : mov esi, edx ; mov rdx, r8 ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff8000870ab3 : mov esi, edx ; mov rdx, rax ; pop rbp ; jmp r9
0xffffff800028a902 : mov esi, edx ; mov rdx, rcx ; pop rbp ; jmp r8
0xffffff80003947c8 : mov esi, edx ; movsxd rdx, dword ptr [rsi + rax*4] ; add rdx, rsi ; jmp rdx
0xffffff80007f01e0 : mov esi, edx ; pop rbp ; jmp rax
0xffffff800064e838 : mov esi, esi ; call 0xffffff800010e058
0xffffff800051e834 : mov esi, esi ; call 0xffffff800010e089
0xffffff80004eb761 : mov esi, esi ; call 0xffffff800010e145
0xffffff8000301f10 : mov esi, esi ; call 0xffffff800028e1b4
0xffffff80007dbd28 : mov esi, esi ; call 0xffffff800028e1b9
0xffffff800065e997 : mov esi, esi ; call 0xffffff800028e4a5
0xffffff80005022a2 : mov esi, esi ; call 0xffffff800029e858
0xffffff80006a24a1 : mov esi, esi ; call 0xffffff80002c36c5
0xffffff80006a65c8 : mov esi, esi ; call 0xffffff80002d4ef5
0xffffff80008a681f : mov esi, esi ; call 0xffffff8000392a44
0xffffff800076f137 : mov esi, esi ; call 0xffffff8000396b85
0xffffff8000489965 : mov esi, esi ; call 0xffffff8000495bc4
0xffffff8000420b5c : mov esi, esi ; call 0xffffff80004ccdd4
0xffffff80004b49ac : mov esi, esi ; call r12
0xffffff800038822a : mov esi, esi ; call r15
0xffffff80005225d2 : mov esi, esi ; call rax
0xffffff80004b4f53 : mov esi, esi ; call rbx
0xffffff8000534419 : mov esi, esi ; call rcx
0xffffff8000713248 : mov esi, esi ; jmp 0xffffff800071357b
0xffffff800060e5aa : mov esi, esi ; lea rdx, [rbp - 0x78] ; call rcx
0xffffff8000281e89 : mov esi, esi ; mov esi, 0x440 ; call 0xffffff800028e159
0xffffff800042c0a3 : mov esi, esi ; mov r8, r15 ; call 0xffffff8000508347
0xffffff80007eaea7 : mov esi, esi ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008f5f54 : mov esi, esi ; mov rcx, r13 ; call rax
0xffffff8000905d78 : mov esi, esi ; mov rdx, r12 ; call r8
0xffffff80007908d6 : mov esi, esi ; mov rdx, r12 ; call rax
0xffffff80003592f0 : mov esi, esi ; mov rdx, r15 ; call 0xffffff8000315577
0xffffff8000776372 : mov esi, esi ; mov rdx, r15 ; call 0xffffff8000396b88
0xffffff8000766e83 : mov esi, esi ; mov rdx, rax ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff80008835a2 : mov esi, esi ; mov rdx, rbx ; call rax
0xffffff80008ba623 : mov esi, esi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800052db5e : mov esi, esp ; call 0xffffff800010e089
0xffffff800065ec7f : mov esi, esp ; call 0xffffff800028e1b5
0xffffff8000508c44 : mov esi, esp ; call 0xffffff80002d4ef4
0xffffff80006a6971 : mov esi, esp ; call 0xffffff80002d4ef5
0xffffff80003686e3 : mov esi, esp ; call 0xffffff8000369548
0xffffff80007723d9 : mov esi, esp ; call 0xffffff8000396b85
0xffffff80005ac989 : mov esi, esp ; call 0xffffff8000582b09
0xffffff800065fc00 : mov esi, esp ; call 0xffffff800079cd59
0xffffff80007a6497 : mov esi, esp ; call 0xffffff80007a9ae8
0xffffff80005abcb7 : mov esi, esp ; call 0xffffff80007b7ec4
0xffffff8000487086 : mov esi, esp ; call 0xffffff80008032c4
0xffffff800065251a : mov esi, esp ; call 0xffffff8000845c39
0xffffff80002c8fa9 : mov esi, esp ; call r14
0xffffff800029e3f4 : mov esi, esp ; call r15
0xffffff80003a0b07 : mov esi, esp ; call rax
0xffffff80007cd271 : mov esi, esp ; call rcx
0xffffff800064e563 : mov esi, esp ; jmp 0xffffff800064e39e
0xffffff80008f8d74 : mov esi, esp ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000900485 : mov esi, esp ; mov ecx, r14d ; call r8
0xffffff80008f68bc : mov esi, esp ; mov ecx, r14d ; call rax
0xffffff80008f7195 : mov esi, esp ; mov ecx, r14d ; call rbx
0xffffff8000904b0c : mov esi, esp ; mov edx, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80008f4e1c : mov esi, esp ; mov edx, dword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x34] ; call rbx
0xffffff80002cf623 : mov esi, esp ; mov edx, dword ptr [rbp - 0x5c] ; mov rcx, rbx ; call rax
0xffffff80007d04cf : mov esi, esp ; mov edx, ebx ; call rax
0xffffff800065ecad : mov esi, esp ; mov edx, r13d ; call 0xffffff800028e1b8
0xffffff800088f79f : mov esi, esp ; mov edx, r15d ; call rbx
0xffffff80009097e4 : mov esi, esp ; mov edx, r15d ; mov rcx, r14 ; call rax
0xffffff80008f7604 : mov esi, esp ; mov rcx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80007d865e : mov esi, esp ; mov rcx, qword ptr [rbp - 0x60] ; call rax
0xffffff80008fa42c : mov esi, esp ; mov rcx, r13 ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008fe57f : mov esi, esp ; mov rcx, r14 ; call r8
0xffffff8000901acc : mov esi, esp ; mov rcx, r14 ; call r9
0xffffff80008f5973 : mov esi, esp ; mov rcx, r14 ; call rax
0xffffff80008f7f5c : mov esi, esp ; mov rcx, r14 ; call rbx
0xffffff8000558b54 : mov esi, esp ; mov rdx, qword ptr [rbp - 0x30] ; call r14
0xffffff8000529d19 : mov esi, esp ; mov rdx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000908c5c : mov esi, esp ; mov rdx, qword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff800067c6d3 : mov esi, esp ; mov rdx, qword ptr [rbp - 0x430] ; call rcx
0xffffff80008fcd28 : mov esi, esp ; mov rdx, r14 ; call r8
0xffffff80008fcc44 : mov esi, esp ; mov rdx, r14 ; call rax
0xffffff8000558c33 : mov esi, esp ; mov rdx, r14 ; call rbx
0xffffff80008ef043 : mov esi, esp ; mov rdx, r14 ; call rcx
0xffffff80003a040a : mov esi, esp ; mov rdx, r14 ; mov rbx, r8 ; call rax
0xffffff80007b3cc5 : mov esi, esp ; mov rdx, r15 ; call rax
0xffffff80008ee4fc : mov esi, esp ; mov rdx, r15 ; call rcx
0xffffff8000398029 : mov esi, esp ; mov rdx, rax ; call r14
0xffffff80008aa437 : mov esi, esp ; mov rdx, rax ; call r15
0xffffff80003f18dc : mov esi, esp ; mov rdx, rbx ; mov r8d, dword ptr [rbp - 0x30] ; call rax
0xffffff80008000e4 : mov esi, esp ; mov rdx, rbx ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff80007eaeb9 : mov esi, esp ; mov rsi, r14 ; call rbx
0xffffff80007649b3 : mov esi, esp ; ret 0xbaff
0xffffff80005abcb6 : mov esi, r12d ; call 0xffffff80007b7ec5
0xffffff8000487085 : mov esi, r12d ; call 0xffffff80008032c5
0xffffff8000904b0b : mov esi, r12d ; mov edx, dword ptr [rbp - 0x30] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80008ef042 : mov esi, r12d ; mov rdx, r14 ; call rcx
0xffffff800090a0f7 : mov esi, r12d ; mov rdx, r15 ; call rcx
0xffffff800087e546 : mov esi, r13d ; call rax
0xffffff80006064b1 : mov esi, r13d ; call rbx
0xffffff800090a537 : mov esi, r13d ; call rcx
0xffffff800087e812 : mov esi, r13d ; mov rdx, r12 ; call rax
0xffffff800087e52c : mov esi, r13d ; mov rdx, r15 ; call rax
0xffffff8000420b5b : mov esi, r14d ; call 0xffffff80004ccdd5
0xffffff8000388229 : mov esi, r14d ; call r15
0xffffff8000566fd0 : mov esi, r14d ; call rax
0xffffff80008ee32b : mov esi, r14d ; call rcx
0xffffff80003a838b : mov esi, r14d ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007054b1 : mov esi, r15d ; call 0xffffff80006d4a19
0xffffff800050c8b5 : mov esi, r15d ; call 0xffffff8000758b35
0xffffff80003518e8 : mov esi, r15d ; call 0xffffff80008edb15
0xffffff80005ef2e7 : mov esi, r15d ; call r14
0xffffff8000534df1 : mov esi, r15d ; call rax
0xffffff800090a2fb : mov esi, r15d ; call rcx
0xffffff80008fe32a : mov esi, r15d ; mov rdx, r13 ; mov r8, r14 ; call rax
0xffffff8000754818 : mov esp, 0x16 ; jmp rax
0xffffff800075561c : mov esp, 0x16 ; jmp rcx
0xffffff800037407c : mov esp, 0x1bbcdc0a ; pop qword ptr [rcx - 0x3f] ; ret
0xffffff8000373eda : mov esp, 0x1bbcdc0e ; pop qword ptr [rcx - 0x3f] ; ret
0xffffff8000617d6f : mov esp, 0x29000000 ; ret 0x9389
0xffffff800025c917 : mov esp, 0x2c60084 ; add bl, ch ; or edi, edi ; ret 0xd089
0xffffff8000696988 : mov esp, 0x39000000 ; ret
0xffffff80005d2864 : mov esp, 0x3d83ffcb ; ret 0x5503
0xffffff800070743c : mov esp, 0x415bffc8 ; pop rsi ; pop rbp ; ret
0xffffff8000b3de2d : mov esp, 0x4484f938 ; ret 0x8941
0xffffff8000b40b3b : mov esp, 0x45812070 ; ret 0xff49
0xffffff8000752120 : mov esp, 0x48000025 ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000553dc4 : mov esp, 0x4cfffffd ; mov edi, edi ; call 0xffffff8000550049
0xffffff80007f0707 : mov esp, 0x5d000003 ; ret
0xffffff80008115e8 : mov esp, 0x5d00323b ; ret
0xffffff80003952cb : mov esp, 0x5dc0ffc7 ; ret
0xffffff80003952ae : mov esp, 0x5dc809c0 ; ret
0xffffff8000892823 : mov esp, 0x5de00002 ; ret
0xffffff800034f860 : mov esp, 0x5ff007a ; ret
0xffffff80006e8833 : mov esp, 0x81480001 ; ret
0xffffff80005bfc80 : mov esp, 0x834806eb ; ret
0xffffff8000297980 : mov esp, 0x89000764 ; ret
0xffffff80004e60e0 : mov esp, 0x89002783 ; ret
0xffffff8000370a28 : mov esp, 0x890078bb ; ret
0xffffff80007b9719 : mov esp, 0x8901e083 ; ret 0xe2c1
0xffffff80003737d3 : mov esp, 0x89440075 ; loop 0xffffff80003737a2 ; ret 0x105
0xffffff80003738a0 : mov esp, 0x89440075 ; rol ecx, cl ; ret
0xffffff8000316168 : mov esp, 0x89480000 ; ret
0xffffff800029ccbe : mov esp, 0x89480003 ; ret
0xffffff8000588db7 : mov esp, 0x89480022 ; ret
0xffffff800028e7d4 : mov esp, 0x8948ce89 ; ret
0xffffff80006dccaf : mov esp, 0x8948ffbf ; ret
0xffffff80005bccc0 : mov esp, 0x8948ffd1 ; ret
0xffffff80003612d6 : mov esp, 0x8948ffff ; ret
0xffffff8000745580 : mov esp, 0x89ffbc88 ; ret
0xffffff800044f7c0 : mov esp, 0x89fff473 ; ret
0xffffff80003c5da4 : mov esp, 0xc0850073 ; jne 0xffffff80003c5de2 ; pop rbp ; ret
0xffffff8000373edd : mov esp, 0xc1418f1b ; ret
0xffffff8000373e99 : mov esp, 0xc1418f1b ; ret 0x441e
0xffffff80003741dc : mov esp, 0xc1418f1b ; ret 0x891e
0xffffff800037042f : mov esp, 0xc1db3144 ; rcr dword ptr [rsi], 0xd1 ; ret
0xffffff800053b55c : mov esp, 0xd0fffff6 ; idiv bh ; jmp rsp
0xffffff800076e9c3 : mov esp, 0xe8f7894c ; je 0xffffff800076ea11 ; ret 0x41ff
0xffffff8000759949 : mov esp, 0xe8ff894c ; out dx, al ; xchg eax, esi ; ret
0xffffff8000737864 : mov esp, 0xf037402 ; mov bh, 0x10 ; movzx eax, dx ; pop rbp ; ret
0xffffff80007f8fcb : mov esp, 0xf58befe8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003eab80 : mov esp, 0xf6fffa84 ; ret
0xffffff80005d878a : mov esp, 0xf741d231 ; idiv bh ; ret 0x5389
0xffffff8000b47e8f : mov esp, 0xfeeebf36 ; jmp rbx
0xffffff800077f816 : mov esp, 0xffdae4e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800032af2a : mov esp, 0xfffdd0d5 ; dec dword ptr [rcx - 1] ; ret 0x3949
0xffffff800056f11a : mov esp, 0xfffe3005 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80008c2539 : mov esp, 0xffff38d5 ; dec dword ptr [rax - 1] ; ret 0x8348
0xffffff8000674fed : mov esp, 0xffff4005 ; dec dword ptr [rax + 0x29] ; ret
0xffffff8000275304 : mov esp, 0xffffffff ; jmp 0xffffff800027533b
0xffffff8000706e38 : mov esp, 1 ; jmp rax
0xffffff800080255e : mov esp, 6 ; jmp rax
0xffffff8000800545 : mov esp, dword ptr [rbp - 0x30] ; mov rcx, qword ptr [rbp - 0x48] ; jmp rax
0xffffff800049817a : mov esp, dword ptr [rbp - 0x68] ; jmp 0xffffff80004981c3
0xffffff800052668c : mov esp, dword ptr [rbp - 0x78] ; mov rdi, r12 ; call 0xffffff80003928a8
0xffffff80007eaece : mov esp, dword ptr [rbp - 0x78] ; mov rdi, r12 ; mov rsi, r14 ; call rbx
0xffffff80007607b1 : mov esp, dword ptr [rdx] ; ret
0xffffff8000762ccc : mov esp, dword ptr [rip + 0x3cd12e] ; call 0xffffff80003922f9
0xffffff800082de45 : mov esp, dword ptr [rsi] ; add al, ch ; ret
0xffffff800065b274 : mov esp, eax ; call r15
0xffffff800084c6a7 : mov esp, eax ; call rax
0xffffff800084c67b : mov esp, eax ; mov edi, dword ptr [rbx] ; shr edi, 0x1c ; call rax
0xffffff80007701d4 : mov esp, eax ; mov rdi, r14 ; call 0xffffff8000393048
0xffffff8000775b94 : mov esp, eax ; mov rdi, rbx ; call 0xffffff800039a708
0xffffff800084589c : mov esp, ebx ; mov rdi, r15 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff8000907157 : mov esp, ecx ; jmp 0xffffff80009070b8
0xffffff8000776fed : mov esp, edi ; jmp 0xffffff8000776ffe
0xffffff800051fb85 : mov esp, edi ; mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff800067e6a9 : mov esp, edx ; call 0xffffff800029e855
0xffffff800076a6a8 : mov esp, edx ; mov qword ptr [rbp - 0x50], r12 ; call 0xffffff8000392a49
0xffffff80004eb75e : mov esp, edx ; mov rsi, r14 ; call 0xffffff800010e148
0xffffff80007bf8c3 : mov esp, edx ; std ; ljmp [rcx] ; ret
0xffffff800039a794 : mov esp, esi ; call rdi
0xffffff80004bf91c : mov esp, esp ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800069c8b0 : mov fs, word ptr [rax] ; idiv edi ; call rcx
0xffffff80006a2e5e : mov fs, word ptr [rax] ; ret
0xffffff800088ee0d : mov fs, word ptr [rbx + 0x2a] ; add byte ptr [rax + 0x5b], ch ; pop r14 ; pop rbp ; ret
0xffffff8000862a0d : mov fs, word ptr [rdi] ; sub eax, 0x415b6000 ; pop rsi ; pop rbp ; ret
0xffffff80002bcd77 : mov gs, eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xfcff
0xffffff800058e415 : mov gs, esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800079834f : mov gs, word ptr [rax - 0x7effffff] ; ret 0x4240
0xffffff800079833d : mov gs, word ptr [rax - 0x7effffff] ; ret 0xbdc0
0xffffff80006f840d : mov gs, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002915b2 : mov qword ptr [r14 + 0x10], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000641fa5 : mov qword ptr [r14 + 0x18], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025a5cf : mov qword ptr [r14 + 0x20], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085de6a : mov qword ptr [r14 + 0x20], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d4f61 : mov qword ptr [r14 + 0x28], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088e8ae : mov qword ptr [r14 + 0x30], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008946e6 : mov qword ptr [r14 + 0x48], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000880db3 : mov qword ptr [r14 + 0x50], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c2eaa : mov qword ptr [r14 + 0x60], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000719304 : mov qword ptr [r14 + 8], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c872a : mov qword ptr [r14], rax ; jmp 0xffffff80003c9d65
0xffffff80008b8c5e : mov qword ptr [r14], rax ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028a001 : mov qword ptr [r14], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003890ea : mov qword ptr [r14], rax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025962f : mov qword ptr [r14], rbx ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002662d0 : mov qword ptr [r14], rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007965e5 : mov qword ptr [r14], rcx ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008989a6 : mov qword ptr [r8 + rcx], rdx ; mov al, 1 ; pop rbp ; ret
0xffffff80003895a7 : mov qword ptr [r8], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000328124 : mov qword ptr [r9 + 0x10], rax ; pop rbp ; ret
0xffffff80005bf479 : mov qword ptr [r9 + 0x20], rax ; pop rbp ; ret
0xffffff80005b1d69 : mov qword ptr [r9 + 0x28], rax ; pop rbp ; ret
0xffffff80005821a9 : mov qword ptr [r9 + 0x40], rax ; pop rbp ; ret
0xffffff80005ebb19 : mov qword ptr [r9 + 0x68], rax ; pop rbp ; ret
0xffffff800057fe19 : mov qword ptr [r9 + 0x78], rax ; pop rbp ; ret
0xffffff80005810f3 : mov qword ptr [r9 + 0x90], rax ; pop rbp ; ret
0xffffff800080ce25 : mov qword ptr [r9], rax ; mov eax, edi ; pop rbp ; ret
0xffffff800066de38 : mov qword ptr [rax + 0x10], rcx ; jmp 0xffffff800066de05
0xffffff8000327a27 : mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0xffffff800033d57b : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff800026daf8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rcx + 8], rsi ; pop rbp ; ret
0xffffff800059bb3b : mov qword ptr [rax + 0x18], 0 ; pop rbp ; ret
0xffffff800033d57f : mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0xffffff80005bed57 : mov qword ptr [rax + 0x20], rdx ; pop rbp ; ret
0xffffff800074fcec : mov qword ptr [rax + 0x24], rcx ; pop rbp ; ret
0xffffff80005b1647 : mov qword ptr [rax + 0x28], rdx ; pop rbp ; ret
0xffffff80003ba80d : mov qword ptr [rax + 0x3a8], rdi ; pop rbp ; ret
0xffffff8000581a87 : mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0xffffff8000338dfa : mov qword ptr [rax + 0x438], rdi ; pop rbp ; ret
0xffffff80003ba7f4 : mov qword ptr [rax + 0x490], rdi ; pop rbp ; ret
0xffffff8000561f72 : mov qword ptr [rax + 0x60], rdx ; xor eax, eax ; pop rbp ; ret
0xffffff80005eb3f7 : mov qword ptr [rax + 0x68], rdx ; pop rbp ; ret
0xffffff800057f6f7 : mov qword ptr [rax + 0x78], rdx ; pop rbp ; ret
0xffffff80005807e6 : mov qword ptr [rax + 0x90], rdx ; pop rbp ; ret
0xffffff8000389de1 : mov qword ptr [rax + 0xb8], rsi ; pop rbp ; ret
0xffffff8000389d71 : mov qword ptr [rax + 0xd0], rsi ; pop rbp ; ret
0xffffff8000895d2e : mov qword ptr [rax + 8], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002be085 : mov qword ptr [rax + 8], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000327434 : mov qword ptr [rax + 8], rcx ; pop rbp ; ret
0xffffff800039cced : mov qword ptr [rax + 8], rdi ; pop rbp ; ret
0xffffff800039cdfa : mov qword ptr [rax + rbx - 0x38], rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007aaba7 : mov qword ptr [rax + rcx], rdx ; pop rbp ; ret
0xffffff800074fa95 : mov qword ptr [rax], 0 ; pop rbp ; ret
0xffffff8000763a3d : mov qword ptr [rax], rbx ; call 0xffffff8000393046
0xffffff800041ec80 : mov qword ptr [rax], rdi ; mov qword ptr [rdi + 8], rax ; pop rbp ; ret
0xffffff800034925e : mov qword ptr [rax], rdi ; pop rbp ; ret
0xffffff80002f9dea : mov qword ptr [rax], rsi ; pop rbp ; ret
0xffffff8000336eb8 : mov qword ptr [rbp - 0x120], rsi ; inc edx ; jmp 0xffffff8000336ed2
0xffffff80004ec838 : mov qword ptr [rbp - 0x280], rax ; call 0xffffff80004f8a59
0xffffff800074f0c2 : mov qword ptr [rbp - 0x30], r9 ; mov r9, rbx ; call rax
0xffffff80008b22d6 : mov qword ptr [rbp - 0x30], rbx ; mov rsi, r12 ; call rax
0xffffff80003150be : mov qword ptr [rbp - 0x40], rbx ; add rdx, r13 ; sub rdx, rax ; jmp 0xffffff80003150f7
0xffffff8000256802 : mov qword ptr [rbp - 0x40], rdi ; call 0xffffff8000392a46
0xffffff80005ee51b : mov qword ptr [rbp - 0x40], rdx ; call rax
0xffffff80007cf5a6 : mov qword ptr [rbp - 0x48], r13 ; call rcx
0xffffff80007b872b : mov qword ptr [rbp - 0x48], rcx ; call rcx
0xffffff800076a6aa : mov qword ptr [rbp - 0x50], r12 ; call 0xffffff8000392a47
0xffffff80007eb89e : mov qword ptr [rbp - 0x50], r14 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff800076a5f9 : mov qword ptr [rbp - 0x50], rdx ; call rax
0xffffff8000757b5a : mov qword ptr [rbp - 0x5b8], rbx ; call r15
0xffffff80005c81d3 : mov qword ptr [rbp - 0x68], r12 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80002a63e1 : mov qword ptr [rbp - 0x68], rax ; mov r10, rax ; jmp 0xffffff80002a6412
0xffffff8000765fb8 : mov qword ptr [rbp - 0x80], r9 ; call 0xffffff80003923e7
0xffffff80006a67b6 : mov qword ptr [rbp - 0x80], rax ; mov rdi, r14 ; call 0xffffff8000392a49
0xffffff800068e615 : mov qword ptr [rbp - 0x80], rdi ; call rax
0xffffff80007c86aa : mov qword ptr [rbp - 0xa0], rdx ; call rax
0xffffff80007c6ec6 : mov qword ptr [rbp - 0xd8], rbx ; call rax
0xffffff80006541f2 : mov qword ptr [rbp - 0xe8], r8 ; call qword ptr [rax]
0xffffff800026dbcc : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ae376 : mov qword ptr [rbx + 0x10], rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000399f3f : mov qword ptr [rbx + 0x18], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025a4af : mov qword ptr [rbx + 0x20], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800041e992 : mov qword ptr [rbx + 0x58], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e34df : mov qword ptr [rbx + 0x58], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c2e00 : mov qword ptr [rbx + 0x60], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e3694 : mov qword ptr [rbx + 0x64], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004e3425 : mov qword ptr [rbx + 0x70], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c3bc8 : mov qword ptr [rbx + 8], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a5e1a : mov qword ptr [rbx + 8], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396454 : mov qword ptr [rbx], r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800050f9a1 : mov qword ptr [rbx], r14 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000271efb : mov qword ptr [rbx], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000359e50 : mov qword ptr [rbx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000710dbc : mov qword ptr [rbx], rdi ; xor esi, esi ; xor edx, edx ; call 0xffffff80004ccfd9
0xffffff800026dd3b : mov qword ptr [rcx + 0x10], rdi ; mov qword ptr [rdx + 8], rdi ; pop rbp ; ret
0xffffff80005283e1 : mov qword ptr [rcx + 0x160], rdx ; pop rbp ; ret
0xffffff80005283d1 : mov qword ptr [rcx + 0x168], rdx ; pop rbp ; ret
0xffffff80004b5bf8 : mov qword ptr [rcx + 0x18], rdx ; jmp 0xffffff80004b5bc5
0xffffff8000468c34 : mov qword ptr [rcx + 0x2c0], rdx ; jmp 0xffffff8000468c08
0xffffff8000468754 : mov qword ptr [rcx + 0x2d0], rdx ; jmp 0xffffff8000468728
0xffffff800083d14d : mov qword ptr [rcx + 0x40], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff80008404d0 : mov qword ptr [rcx + 0x60], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800026dafc : mov qword ptr [rcx + 8], rsi ; pop rbp ; ret
0xffffff800080d2bc : mov qword ptr [rcx + r8*8], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800089897f : mov qword ptr [rcx + rax + 8], rdx ; mov al, 1 ; pop rbp ; ret
0xffffff8000377082 : mov qword ptr [rcx + rdx + 8], rax ; pop rbp ; ret
0xffffff80007aab25 : mov qword ptr [rcx + rdx], rdi ; pop rbp ; ret
0xffffff8000719057 : mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff800049f927 : mov qword ptr [rcx], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000770a87 : mov qword ptr [rcx], rax ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff8000389049 : mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff8000642019 : mov qword ptr [rcx], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000299c09 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80006eba2b : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002534d1 : mov qword ptr [rcx], rbx ; jmp 0xffffff8000253536
0xffffff800078ccd6 : mov qword ptr [rcx], rdx ; pop rbp ; ret
0xffffff80003992e1 : mov qword ptr [rcx], rsi ; pop rdi ; ret
0xffffff8000884f5c : mov qword ptr [rdi + 0x10], 0 ; pop rbp ; ret
0xffffff8000495737 : mov qword ptr [rdi + 0x10], r11 ; mov qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff8000719367 : mov qword ptr [rdi + 0x10], rax ; pop rbp ; ret
0xffffff8000449099 : mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800032755b : mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff800026dd50 : mov qword ptr [rdi + 0x10], rdi ; pop rbp ; ret
0xffffff800078c9c9 : mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff80005cbbe9 : mov qword ptr [rdi + 0x18], 0 ; pop rbp ; ret
0xffffff80003274ff : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 0x20], rax ; pop rbp ; ret
0xffffff800049573b : mov qword ptr [rdi + 0x18], rax ; pop rbp ; ret
0xffffff80004486e8 : mov qword ptr [rdi + 0x18], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000719345 : mov qword ptr [rdi + 0x18], rcx ; pop rbp ; ret
0xffffff8000719370 : mov qword ptr [rdi + 0x18], rsi ; pop rbp ; ret
0xffffff80002be702 : mov qword ptr [rdi + 0x190], rax ; pop rbp ; ret
0xffffff800036e903 : mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000327503 : mov qword ptr [rdi + 0x20], rax ; pop rbp ; ret
0xffffff80005be88b : mov qword ptr [rdi + 0x20], rcx ; pop rbp ; ret
0xffffff8000350704 : mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff8000796224 : mov qword ptr [rdi + 0x20], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff800031eb89 : mov qword ptr [rdi + 0x28], rax ; pop rbp ; ret
0xffffff80005b117b : mov qword ptr [rdi + 0x28], rcx ; pop rbp ; ret
0xffffff800036e907 : mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff80002c0ad2 : mov qword ptr [rdi + 0x2e8], rsi ; pop rbp ; ret
0xffffff8000326a6e : mov qword ptr [rdi + 0x30], 0 ; pop rbp ; ret
0xffffff80006e186b : mov qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff800088b853 : mov qword ptr [rdi + 0x30], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002daf14 : mov qword ptr [rdi + 0x318], rsi ; pop rbp ; ret
0xffffff80002c0a89 : mov qword ptr [rdi + 0x360], rsi ; pop rbp ; ret
0xffffff80002c0a69 : mov qword ptr [rdi + 0x368], rsi ; pop rbp ; ret
0xffffff80007f0664 : mov qword ptr [rdi + 0x388], rsi ; pop rbp ; ret
0xffffff8000698734 : mov qword ptr [rdi + 0x38], rsi ; pop rbp ; ret
0xffffff80007f0684 : mov qword ptr [rdi + 0x390], rsi ; pop rbp ; ret
0xffffff80007f06c4 : mov qword ptr [rdi + 0x3a0], rsi ; pop rbp ; ret
0xffffff80007f0874 : mov qword ptr [rdi + 0x3a8], rsi ; pop rbp ; ret
0xffffff80007f0724 : mov qword ptr [rdi + 0x3b0], rsi ; pop rbp ; ret
0xffffff8000869bba : mov qword ptr [rdi + 0x40], 0 ; pop rbp ; ret
0xffffff80005815bb : mov qword ptr [rdi + 0x40], rcx ; pop rbp ; ret
0xffffff80007f0774 : mov qword ptr [rdi + 0x438], rsi ; pop rbp ; ret
0xffffff80007f06e4 : mov qword ptr [rdi + 0x450], rsi ; pop rbp ; ret
0xffffff80007f0854 : mov qword ptr [rdi + 0x458], rsi ; pop rbp ; ret
0xffffff8000767903 : mov qword ptr [rdi + 0x58], rax ; pop rbp ; ret
0xffffff8000342b04 : mov qword ptr [rdi + 0x58], rsi ; pop rbp ; ret
0xffffff800039cda8 : mov qword ptr [rdi + 0x60], 0 ; pop rbp ; ret
0xffffff800031ed74 : mov qword ptr [rdi + 0x60], rsi ; pop rbp ; ret
0xffffff80006f64ed : mov qword ptr [rdi + 0x68], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80005eaf2b : mov qword ptr [rdi + 0x68], rcx ; pop rbp ; ret
0xffffff80004b40c4 : mov qword ptr [rdi + 0x68], rsi ; pop rbp ; ret
0xffffff8000766b7a : mov qword ptr [rdi + 0x70], rax ; movzx eax, cl ; pop rbp ; ret
0xffffff80007b5768 : mov qword ptr [rdi + 0x78], rax ; pop rbp ; ret
0xffffff800057f22b : mov qword ptr [rdi + 0x78], rcx ; pop rbp ; ret
0xffffff80004b3c94 : mov qword ptr [rdi + 0x78], rsi ; pop rbp ; ret
0xffffff8000278a49 : mov qword ptr [rdi + 0x88], rax ; pop rbp ; ret
0xffffff80008a82b4 : mov qword ptr [rdi + 0x88], rsi ; pop rbp ; ret
0xffffff800058020e : mov qword ptr [rdi + 0x90], rcx ; pop rbp ; ret
0xffffff80008a82c4 : mov qword ptr [rdi + 0x90], rsi ; pop rbp ; ret
0xffffff80008a82d4 : mov qword ptr [rdi + 0x98], rsi ; pop rbp ; ret
0xffffff80003b5dc9 : mov qword ptr [rdi + 0xa0], rax ; pop rbp ; ret
0xffffff800030a911 : mov qword ptr [rdi + 0xa0], rsi ; pop rbp ; ret
0xffffff80008d5c2d : mov qword ptr [rdi + 0xa8], rax ; pop rbp ; ret
0xffffff80008d5c6d : mov qword ptr [rdi + 0xb0], rax ; pop rbp ; ret
0xffffff80004b4134 : mov qword ptr [rdi + 0xb0], rsi ; pop rbp ; ret
0xffffff80004b4154 : mov qword ptr [rdi + 0xb8], rsi ; pop rbp ; ret
0xffffff8000326ae3 : mov qword ptr [rdi + 0xd0], rax ; pop rbp ; ret
0xffffff80007f0794 : mov qword ptr [rdi + 0xd80], rsi ; pop rbp ; ret
0xffffff80003274db : mov qword ptr [rdi + 0xe0], rax ; pop rbp ; ret
0xffffff80007ae296 : mov qword ptr [rdi + 8], 0 ; pop rbp ; ret
0xffffff800034925a : mov qword ptr [rdi + 8], rax ; mov qword ptr [rax], rdi ; pop rbp ; ret
0xffffff800041ec83 : mov qword ptr [rdi + 8], rax ; pop rbp ; ret
0xffffff800026dd4c : mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi + 0x10], rdi ; pop rbp ; ret
0xffffff800034fae4 : mov qword ptr [rdi + 8], rdi ; pop rbp ; ret
0xffffff80008b6a21 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff8000377044 : mov qword ptr [rdi + 8], rdx ; pop rbp ; ret
0xffffff80002f9db3 : mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80008f25e7 : mov qword ptr [rdi + rax*8 + 8], rdx ; pop rbp ; ret
0xffffff800080ee54 : mov qword ptr [rdi], -1 ; pop rbp ; ret
0xffffff80002c806c : mov qword ptr [rdi], 0 ; pop rbp ; ret
0xffffff80003922f0 : mov qword ptr [rdi], 0 ; ret
0xffffff80004ab112 : mov qword ptr [rdi], rax ; mov rax, r9 ; pop rbp ; ret
0xffffff8000276473 : mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80003baf54 : mov qword ptr [rdi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000807edd : mov qword ptr [rdi], rcx ; pop rbp ; ret
0xffffff800034fae1 : mov qword ptr [rdi], rdi ; mov qword ptr [rdi + 8], rdi ; pop rbp ; ret
0xffffff8000273b8a : mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800079606c : mov qword ptr [rdi], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff8000429658 : mov qword ptr [rdx + 0x30], rsi ; jmp 0xffffff8000429625
0xffffff800026dd3f : mov qword ptr [rdx + 8], rdi ; pop rbp ; ret
0xffffff800056451d : mov qword ptr [rdx + 8], rsi ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800089b79e : mov qword ptr [rdx + rax + 8], rsi ; pop rbp ; ret
0xffffff80003a8541 : mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff800049fc1b : mov qword ptr [rdx + rax*8], rdi ; xor eax, eax ; pop rbp ; ret
0xffffff80003a0f17 : mov qword ptr [rdx + rcx - 8], rax ; pop rbp ; ret
0xffffff80002a0a7d : mov qword ptr [rdx], 0 ; pop rbp ; ret
0xffffff8000392967 : mov qword ptr [rdx], rax ; leave ; ret
0xffffff80002a581c : mov qword ptr [rdx], rax ; mov eax, 2 ; pop rbp ; ret
0xffffff80002a57a5 : mov qword ptr [rdx], rax ; mov eax, 3 ; pop rbp ; ret
0xffffff800083b912 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800033d99d : mov qword ptr [rdx], rax ; pop rbp ; ret
0xffffff80002991e0 : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000401684 : mov qword ptr [rdx], rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80002a57ea : mov qword ptr [rdx], rcx ; mov eax, 1 ; pop rbp ; ret
0xffffff800039f17c : mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff80002994ac : mov qword ptr [rdx], rcx ; pop rbx ; pop rbp ; ret
0xffffff80002909ae : mov qword ptr [rdx], rdi ; pop rbp ; ret
0xffffff80002c80de : mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff80002b762e : mov qword ptr [rdx], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff80008cdc6d : mov qword ptr [rip + 0x217bdc], rax ; pop rbp ; ret
0xffffff80008ad9e7 : mov qword ptr [rip + 0x237e3a], rax ; pop rbp ; ret
0xffffff80008eddc9 : mov qword ptr [rip + 0x249ab8], r8 ; pop rbp ; ret
0xffffff80008ed0d5 : mov qword ptr [rip + 0x24a5fc], rax ; pop rbp ; ret
0xffffff800089ab1f : mov qword ptr [rip + 0x24ac02], rax ; pop rbp ; ret
0xffffff80008e76ba : mov qword ptr [rip + 0x25000f], rax ; pop rbp ; ret
0xffffff80008d6f0a : mov qword ptr [rip + 0x2605e7], rax ; pop rbp ; ret
0xffffff8000884f85 : mov qword ptr [rip + 0x26078c], rax ; pop rbp ; ret
0xffffff80008d650a : mov qword ptr [rip + 0x260fbf], rax ; pop rbp ; ret
0xffffff80008d5d4a : mov qword ptr [rip + 0x261757], rax ; pop rbp ; ret
0xffffff80008d559a : mov qword ptr [rip + 0x261edf], rax ; pop rbp ; ret
0xffffff80008d1e7a : mov qword ptr [rip + 0x2655c7], rax ; pop rbp ; ret
0xffffff80008d12fa : mov qword ptr [rip + 0x26611f], rax ; pop rbp ; ret
0xffffff80008d023a : mov qword ptr [rip + 0x2671b7], rax ; pop rbp ; ret
0xffffff80008ce60a : mov qword ptr [rip + 0x268dbf], rax ; pop rbp ; ret
0xffffff80008c4a7a : mov qword ptr [rip + 0x272887], rax ; pop rbp ; ret
0xffffff80008c3c8a : mov qword ptr [rip + 0x27364f], rax ; pop rbp ; ret
0xffffff80008c2cf7 : mov qword ptr [rip + 0x2745ba], rax ; pop rbp ; ret
0xffffff80008c0e67 : mov qword ptr [rip + 0x276432], rax ; pop rbp ; ret
0xffffff80008b2d9a : mov qword ptr [rip + 0x28436f], rax ; pop rbp ; ret
0xffffff80008b24ba : mov qword ptr [rip + 0x284c27], rax ; pop rbp ; ret
0xffffff80008ae7d7 : mov qword ptr [rip + 0x2888e2], rax ; pop rbp ; ret
0xffffff80008accb7 : mov qword ptr [rip + 0x28a3d2], rax ; pop rbp ; ret
0xffffff80008a765a : mov qword ptr [rip + 0x28f907], rax ; pop rbp ; ret
0xffffff80008a6c4a : mov qword ptr [rip + 0x2902e7], rax ; pop rbp ; ret
0xffffff80008a5d4a : mov qword ptr [rip + 0x2911bf], rax ; pop rbp ; ret
0xffffff800089977a : mov qword ptr [rip + 0x29d617], rax ; pop rbp ; ret
0xffffff80008989fa : mov qword ptr [rip + 0x29e36f], rax ; pop rbp ; ret
0xffffff80008961ba : mov qword ptr [rip + 0x2a0b87], rax ; pop rbp ; ret
0xffffff8000894bfa : mov qword ptr [rip + 0x2a211f], rax ; pop rbp ; ret
0xffffff800089397a : mov qword ptr [rip + 0x2a3377], rax ; pop rbp ; ret
0xffffff8000892b4a : mov qword ptr [rip + 0x2a417f], rax ; pop rbp ; ret
0xffffff8000891f5a : mov qword ptr [rip + 0x2a4d47], rax ; pop rbp ; ret
0xffffff80008913ba : mov qword ptr [rip + 0x2a58bf], rax ; pop rbp ; ret
0xffffff8000890cfa : mov qword ptr [rip + 0x2a5f57], rax ; pop rbp ; ret
0xffffff800088fb9a : mov qword ptr [rip + 0x2a708f], rax ; pop rbp ; ret
0xffffff800088e91a : mov qword ptr [rip + 0x2a82e7], rax ; pop rbp ; ret
0xffffff800088ddfa : mov qword ptr [rip + 0x2a8ddf], rax ; pop rbp ; ret
0xffffff8000889f4a : mov qword ptr [rip + 0x2acc17], rax ; pop rbp ; ret
0xffffff800088979a : mov qword ptr [rip + 0x2ad39f], rax ; pop rbp ; ret
0xffffff800088793a : mov qword ptr [rip + 0x2af1d7], rax ; pop rbp ; ret
0xffffff8000885aca : mov qword ptr [rip + 0x2b0ff7], rax ; pop rbp ; ret
0xffffff800088523a : mov qword ptr [rip + 0x2b185f], rax ; pop rbp ; ret
0xffffff800088490a : mov qword ptr [rip + 0x2b2167], rax ; pop rbp ; ret
0xffffff8000810b75 : mov qword ptr [rip + 0x2d3624], rax ; pop rbp ; ret
0xffffff800080ec42 : mov qword ptr [rip + 0x2d553f], rax ; pop rbp ; ret
0xffffff800085936a : mov qword ptr [rip + 0x2dd1c7], rax ; pop rbp ; ret
0xffffff80007faf63 : mov qword ptr [rip + 0x2e915e], rax ; pop rbp ; ret
0xffffff800083179a : mov qword ptr [rip + 0x303ca7], rax ; pop rbp ; ret
0xffffff800083055a : mov qword ptr [rip + 0x304ebf], rax ; pop rbp ; ret
0xffffff800082d06a : mov qword ptr [rip + 0x308337], rax ; pop rbp ; ret
0xffffff80007db5e2 : mov qword ptr [rip + 0x3088ff], rax ; pop rbp ; ret
0xffffff800082bcea : mov qword ptr [rip + 0x30968f], rax ; pop rbp ; ret
0xffffff800082a54d : mov qword ptr [rip + 0x30ae04], rax ; pop rbp ; ret
0xffffff800081826a : mov qword ptr [rip + 0x31d04f], rax ; pop rbp ; ret
0xffffff8000817c1a : mov qword ptr [rip + 0x31d677], rax ; pop rbp ; ret
0xffffff8000815daa : mov qword ptr [rip + 0x31f4bf], rax ; pop rbp ; ret
0xffffff800081484a : mov qword ptr [rip + 0x3209f7], rax ; pop rbp ; ret
0xffffff8000813e4a : mov qword ptr [rip + 0x3213cf], rax ; pop rbp ; ret
0xffffff8000812bea : mov qword ptr [rip + 0x3225df], rax ; pop rbp ; ret
0xffffff80008115e5 : mov qword ptr [rip + 0x323bbc], rax ; pop rbp ; ret
0xffffff800080ee0c : mov qword ptr [rip + 0x32637d], rax ; pop rbp ; ret
0xffffff800080d661 : mov qword ptr [rip + 0x327b00], rax ; pop rbp ; ret
0xffffff80007b3ea7 : mov qword ptr [rip + 0x32fd12], rax ; pop rbp ; ret
0xffffff80007b3da4 : mov qword ptr [rip + 0x32fe15], rdi ; pop rbp ; ret
0xffffff80007b3d8b : mov qword ptr [rip + 0x32fe2e], rax ; pop rbp ; ret
0xffffff80007a560b : mov qword ptr [rip + 0x339486], rax ; pop rbp ; ret
0xffffff80007a2519 : mov qword ptr [rip + 0x33c540], rax ; pop rbp ; ret
0xffffff80007f623e : mov qword ptr [rip + 0x33e5b3], rcx ; pop rbp ; ret
0xffffff80007e9338 : mov qword ptr [rip + 0x34b469], rax ; pop rbp ; ret
0xffffff80007e7cd9 : mov qword ptr [rip + 0x34ca80], rax ; pop rbp ; ret
0xffffff800075225b : mov qword ptr [rip + 0x38c53e], rax ; pop rbp ; ret
0xffffff8000751cab : mov qword ptr [rip + 0x38cae6], rax ; pop rbp ; ret
0xffffff8000751327 : mov qword ptr [rip + 0x38d45a], rax ; pop rbp ; ret
0xffffff800074b7f3 : mov qword ptr [rip + 0x392e9e], rax ; pop rbp ; ret
0xffffff800079ddae : mov qword ptr [rip + 0x39656b], rax ; pop rbp ; ret
0xffffff8000798ae1 : mov qword ptr [rip + 0x397788], rax ; pop rbp ; ret
0xffffff800072f3c2 : mov qword ptr [rip + 0x3ad53f], rax ; pop rbp ; ret
0xffffff800077caaf : mov qword ptr [rip + 0x3b347a], rax ; pop rbp ; ret
0xffffff8000758661 : mov qword ptr [rip + 0x3d7778], rax ; pop rbp ; ret
0xffffff800073bb7f : mov qword ptr [rip + 0x3f3202], rax ; pop rbp ; ret
0xffffff800059ecf8 : mov qword ptr [rip + 0x53a4c1], rax ; call 0xffffff800029afa9
0xffffff800059ecb4 : mov qword ptr [rip + 0x53a4ed], rax ; call 0xffffff800029afa9
0xffffff80004d0219 : mov qword ptr [rip + 0x606ef8], rax ; pop rbp ; ret
0xffffff80005000ab : mov qword ptr [rip + 0x61b2a6], rax ; pop rbp ; ret
0xffffff80004ced6e : mov qword ptr [rip + 0x64b0db], rax ; pop rbp ; ret
0xffffff80004c948f : mov qword ptr [rip + 0x6508d2], rax ; pop rbp ; ret
0xffffff80004829c8 : mov qword ptr [rip + 0x6525b1], rax ; pop rbp ; ret
0xffffff800049d98b : mov qword ptr [rip + 0x677bbe], rax ; pop rbp ; ret
0xffffff80003ae6c2 : mov qword ptr [rip + 0x6a2bd7], rax ; pop rbp ; ret
0xffffff80003a2587 : mov qword ptr [rip + 0x6aec2a], rdi ; pop rbp ; ret
0xffffff80003a2549 : mov qword ptr [rip + 0x6aec60], rdi ; pop rbp ; ret
0xffffff800042062d : mov qword ptr [rip + 0x6b475c], rax ; pop rbp ; ret
0xffffff800041ec5f : mov qword ptr [rip + 0x6b60fa], rdi ; pop rbp ; ret
0xffffff800041ea65 : mov qword ptr [rip + 0x6b6304], rax ; pop rbp ; ret
0xffffff8000448ab7 : mov qword ptr [rip + 0x6cb582], rcx ; pop rbp ; ret
0xffffff800040bada : mov qword ptr [rip + 0x70835f], rax ; pop rbp ; ret
0xffffff80003ca8de : mov qword ptr [rip + 0x708453], rax ; pop rbp ; ret
0xffffff80003a9d84 : mov qword ptr [rip + 0x727e3d], rdi ; pop rbp ; ret
0xffffff80003a8564 : mov qword ptr [rip + 0x7294dd], rdi ; pop rbp ; ret
0xffffff800038db34 : mov qword ptr [rip + 0x7436c5], rax ; pop rbp ; ret
0xffffff80003a703f : mov qword ptr [rip + 0x75878a], rax ; call qword ptr [rax]
0xffffff800039a21e : mov qword ptr [rip + 0x764f53], rax ; pop rbp ; ret
0xffffff80003a6a62 : mov qword ptr [rip + 0x790d1f], r9 ; pop rbp ; ret
0xffffff80003a6922 : mov qword ptr [rip + 0x790e5f], r9 ; pop rbp ; ret
0xffffff800028f032 : mov qword ptr [rip + 0x79d007], rax ; pop rbp ; ret
0xffffff800028f002 : mov qword ptr [rip + 0x79d02f], rax ; pop rbp ; ret
0xffffff8000310ba5 : mov qword ptr [rip + 0x7ae704], rax ; pop rbp ; ret
0xffffff80002fb5b9 : mov qword ptr [rip + 0x7f8480], rdx ; pop rbp ; ret
0xffffff80002d468e : mov qword ptr [rip + 0x81988b], rax ; pop rbp ; ret
0xffffff800026269b : mov qword ptr [rip + 0x83d656], rsi ; pop rbp ; ret
0xffffff80002af1e2 : mov qword ptr [rip + 0x83e28f], rax ; pop rbp ; ret
0xffffff800029d484 : mov qword ptr [rip + 0x84e6d5], rdi ; pop rbp ; ret
0xffffff80002cee6c : mov qword ptr [rsi + 0x10], rax ; mov qword ptr [rsi + 0x18], rax ; pop rbp ; ret
0xffffff80002ceb3f : mov qword ptr [rsi + 0x10], rax ; pop rbp ; ret
0xffffff80006c984a : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f9daf : mov qword ptr [rsi + 0x10], rdi ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff800026db09 : mov qword ptr [rsi + 0x10], rsi ; pop rbp ; ret
0xffffff80002cee70 : mov qword ptr [rsi + 0x18], rax ; pop rbp ; ret
0xffffff8000509d6f : mov qword ptr [rsi + 0x18], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f9de6 : mov qword ptr [rsi + 0x18], rdi ; mov qword ptr [rax], rsi ; pop rbp ; ret
0xffffff80004f95ab : mov qword ptr [rsi + 0x20], 0 ; pop rbp ; ret
0xffffff80007724fa : mov qword ptr [rsi + 0x28], rax ; pop rbp ; ret
0xffffff80004950d8 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; ret
0xffffff8000764220 : mov qword ptr [rsi + 0x30], rcx ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039d512 : mov qword ptr [rsi + 0x38], rax ; pop rbp ; ret
0xffffff8000564c12 : mov qword ptr [rsi + 0x50], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800055b77b : mov qword ptr [rsi + 0x68], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800052b830 : mov qword ptr [rsi + 0xd8], rax ; pop rbp ; ret
0xffffff800050faee : mov qword ptr [rsi + 8], rax ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800028ba89 : mov qword ptr [rsi + 8], rax ; pop rbp ; ret
0xffffff800026db05 : mov qword ptr [rsi + 8], rsi ; mov qword ptr [rsi + 0x10], rsi ; pop rbp ; ret
0xffffff8000369dbb : mov qword ptr [rsi + rdx + 0x60], rcx ; pop rbp ; ret
0xffffff800039942b : mov qword ptr [rsi], 0 ; pop rbp ; ret
0xffffff80003b6aaa : mov qword ptr [rsi], 0xb8 ; pop rbp ; ret
0xffffff80003babee : mov qword ptr [rsi], r9 ; xor eax, eax ; pop rbp ; ret
0xffffff800030fc95 : mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff8000291ba5 : mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000399273 : mov qword ptr [rsi], rcx ; mov eax, 1 ; ret
0xffffff80002c808e : mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff8000389576 : mov qword ptr [rsi], rcx ; xor eax, eax ; pop rbp ; ret
0xffffff80005161d4 : mov qword ptr [rsi], rcx ; xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80003992a3 : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0xffffff80002c811c : mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff80008ebfaa : mov qword ptr [rsi], rdx ; pop rbp ; ret
0xffffff80008bc09f : mov qword ptr [rsp], r9 ; mov r9, r11 ; call r10
0xffffff80008bc04e : mov qword ptr [rsp], rax ; call r10
0xffffff80008bbedf : mov qword ptr [rsp], rax ; lea rsi, [rbp - 0x70] ; call r10
0xffffff80002a63e5 : mov r10, rax ; jmp 0xffffff80002a640e
0xffffff80008d253a : mov r10, rax ; jmp 0xffffff80008d258c
0xffffff8000752d7d : mov r10d, 0xbae80038 ; cld ; ret
0xffffff80002a122f : mov r10d, eax ; jmp 0xffffff80002a123d
0xffffff80003dc3ec : mov r10d, eax ; jmp 0xffffff80003dc417
0xffffff800042cc99 : mov r10d, eax ; jmp 0xffffff800042ccec
0xffffff80005fa3d2 : mov r10d, eax ; jmp 0xffffff80005fa3dc
0xffffff80008d232f : mov r11, rbx ; jmp 0xffffff80008d2388
0xffffff8000800544 : mov r12, qword ptr [rbp - 0x30] ; mov rcx, qword ptr [rbp - 0x48] ; jmp rax
0xffffff8000498179 : mov r12, qword ptr [rbp - 0x68] ; jmp 0xffffff80004981c4
0xffffff800052668b : mov r12, qword ptr [rbp - 0x78] ; mov rdi, r12 ; call 0xffffff80003928a9
0xffffff800067e6a8 : mov r12, r10 ; call 0xffffff800029e856
0xffffff8000776fec : mov r12, r15 ; jmp 0xffffff8000776fff
0xffffff800051fb84 : mov r12, r15 ; mov ecx, dword ptr [rbp - 0x7c] ; jmp rdx
0xffffff800084c6a6 : mov r12, r8 ; call rax
0xffffff800084c67a : mov r12, r8 ; mov edi, dword ptr [rbx] ; shr edi, 0x1c ; call rax
0xffffff800065b273 : mov r12, rax ; call r15
0xffffff80004eb75d : mov r12, rdx ; mov rsi, r14 ; call 0xffffff800010e149
0xffffff80007bada4 : mov r12b, 0x89 ; ret
0xffffff8000841100 : mov r12b, 0x89 ; ret 0x2944
0xffffff8000754817 : mov r12d, 0x16 ; jmp rax
0xffffff800075561b : mov r12d, 0x16 ; jmp rcx
0xffffff8000759948 : mov r12d, 0xe8ff894c ; out dx, al ; xchg eax, esi ; ret
0xffffff80007f8fca : mov r12d, 0xf58befe8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d8789 : mov r12d, 0xf741d231 ; idiv bh ; ret 0x5389
0xffffff8000706e37 : mov r12d, 1 ; jmp rax
0xffffff800080255d : mov r12d, 6 ; jmp rax
0xffffff80007701d3 : mov r12d, eax ; mov rdi, r14 ; call 0xffffff8000393049
0xffffff8000775b93 : mov r12d, eax ; mov rdi, rbx ; call 0xffffff800039a709
0xffffff8000907156 : mov r12d, ecx ; jmp 0xffffff80009070b9
0xffffff80003164b3 : mov r13, qword ptr [rbp - 0x58] ; mov rdi, r13 ; call 0xffffff8000392799
0xffffff8000605998 : mov r13, rax ; test r13, r13 ; jne 0xffffff8000605999 ; jmp 0xffffff800060596d
0xffffff800076dfe6 : mov r13, rcx ; mov rdi, rbx ; call 0xffffff8000392a49
0xffffff8000748874 : mov r13d, 0x16 ; mov r15d, ebx ; jmp rax
0xffffff80006b9a29 : mov r13d, 0x1b8ff ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000567b6e : mov r13d, 0x2a ; jmp rcx
0xffffff80008b9637 : mov r13d, 0xbd410027 ; ret 2
0xffffff8000594807 : mov r13d, 1 ; jmp rdx
0xffffff8000594832 : mov r13d, 1 ; jmp rsi
0xffffff80002c6bb5 : mov r13d, 4 ; jmp rax
0xffffff8000772291 : mov r13d, eax ; mov rdi, r12 ; call 0xffffff8000393049
0xffffff800076e00e : mov r13d, eax ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff8000418583 : mov r13d, r12d ; jmp 0xffffff800041886f
0xffffff80005dcf96 : mov r14, qword ptr [r14] ; test r14, r14 ; jne 0xffffff80005dcf67 ; jmp 0xffffff80005dcfba
0xffffff800048e4f3 : mov r14, qword ptr [rbp - 0x220] ; jmp rdx
0xffffff800048611f : mov r14, qword ptr [rbp - 0x288] ; jmp rax
0xffffff80007eaeb8 : mov r14, r12 ; mov rsi, r14 ; call rbx
0xffffff80003feb1c : mov r14, rcx ; call 0xffffff8000393049
0xffffff8000887ff7 : mov r14, rdi ; xor ebx, ebx ; xor esi, esi ; call 0xffffff8000864249
0xffffff80007100ba : mov r14, rdx ; call 0xffffff800078c385
0xffffff80007f186b : mov r14, rdx ; jmp rcx
0xffffff80008a681e : mov r14, rsi ; call 0xffffff8000392a45
0xffffff800076f136 : mov r14, rsi ; call 0xffffff8000396b86
0xffffff80007f4e57 : mov r14d, 0x16 ; jmp rcx
0xffffff80005ca928 : mov r14d, 0x2a ; jmp rcx
0xffffff80005ca471 : mov r14d, 0x2a ; mov rbx, r15 ; jmp rcx
0xffffff80007209ff : mov r14d, 0xb70f8031 ; ret
0xffffff80008bf8b9 : mov r14d, 0xe00002c7 ; jmp 0xffffff80008bf88b
0xffffff80005e7c5f : mov r14d, 0xffffffff ; mov rdx, rax ; jmp 0xffffff80005e7c82
0xffffff80006aa948 : mov r14d, 1 ; mov rdi, r14 ; call rax
0xffffff800076e69a : mov r14d, eax ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff80005dfd88 : mov r15, r12 ; jmp 0xffffff80005dfd98
0xffffff8000651c76 : mov r15, r14 ; call qword ptr [r15]
0xffffff800054dee0 : mov r15, r8 ; call r15
0xffffff800074ef9e : mov r15, r9 ; call r10
0xffffff800082dc2d : mov r15, r9 ; call rax
0xffffff80002670d6 : mov r15, rbx ; call r15
0xffffff80003eb0e2 : mov r15, rcx ; call 0xffffff8000393049
0xffffff80007666d1 : mov r15, rdi ; call 0xffffff80003923e6
0xffffff8000267794 : mov r15, rdi ; mov edi, 0xfffffffa ; call rbx
0xffffff80006e12b8 : mov r15, rdx ; call 0xffffff800030de46
0xffffff80007a5bae : mov r15, rdx ; call rax
0xffffff800054ddb5 : mov r15, rdx ; mov rbx, rcx ; call r15
0xffffff80006730d8 : mov r15b, byte ptr [rbp - 0xb8] ; jmp rdi
0xffffff80007844e6 : mov r15b, dil ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000655fbe : mov r15d, dword ptr [r14 + 0x2c] ; mov rdi, r14 ; call qword ptr [rax]
0xffffff80007eb021 : mov r15d, eax ; mov rdi, r13 ; mov rsi, r14 ; call rbx
0xffffff8000554e33 : mov r15d, eax ; mov rdi, r14 ; call 0xffffff80005510f8
0xffffff800074887a : mov r15d, ebx ; jmp rax
0xffffff8000511b88 : mov r8, qword ptr [r8 + 0x30] ; test r8, r8 ; jne 0xffffff8000511b5b ; pop rbp ; ret
0xffffff80005b1074 : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80005b1029 ; pop rbp ; ret
0xffffff80005b209a : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80005b2049 ; pop rbp ; ret
0xffffff80005bf770 : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80005bf739 ; pop rbp ; ret
0xffffff80005ebe10 : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80005ebdd9 ; pop rbp ; ret
0xffffff8000637a20 : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80006379e9 ; pop rbp ; ret
0xffffff8000687efa : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff8000687ec9 ; pop rbp ; ret
0xffffff80006a435a : mov r8, qword ptr [r8] ; test r8, r8 ; jne 0xffffff80006a4329 ; pop rbp ; ret
0xffffff80004cfe01 : mov r8, qword ptr [rbp + 0x18] ; call 0xffffff80004fc026
0xffffff80006582d8 : mov r8, qword ptr [rbp - 0x1b0] ; call r9
0xffffff800065973f : mov r8, qword ptr [rbp - 0x1b0] ; call rbx
0xffffff8000659a7b : mov r8, qword ptr [rbp - 0x1e8] ; call rax
0xffffff8000890af9 : mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000890832 : mov r8, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3b06 : mov r8, qword ptr [rbp - 0x38] ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff800074eff9 : mov r8, qword ptr [rbp - 0x38] ; mov r9, qword ptr [rbp - 0x48] ; call rax
0xffffff800074f2a6 : mov r8, qword ptr [rbp - 0x38] ; mov r9, r14 ; call rax
0xffffff80008fbd9a : mov r8, qword ptr [rbp - 0x40] ; call rbx
0xffffff80008f88b8 : mov r8, qword ptr [rbp - 0x40] ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff800074f12c : mov r8, qword ptr [rbp - 0x48] ; mov r9, qword ptr [rbp - 0x38] ; call rax
0xffffff80008f6e60 : mov r8, qword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; call r12
0xffffff80008f6cd0 : mov r8, qword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; call rbx
0xffffff80004d8ba1 : mov r8, qword ptr [rbp - 0x5d8] ; call rax
0xffffff8000593acf : mov r8, qword ptr [rbp - 0xe0] ; call rax
0xffffff80007fcafe : mov r8, qword ptr [rbx + 0x20] ; mov r9, qword ptr [rbx + 0x28] ; call r10
0xffffff80007f01c0 : mov r8, qword ptr [rsi + 0x18] ; mov rsi, rax ; pop rbp ; jmp r11
0xffffff80008bd032 : mov r8, r10 ; mov r9, r11 ; call r14
0xffffff80008bd6d4 : mov r8, r10 ; mov r9, r15 ; call r14
0xffffff80008bcff7 : mov r8, r11 ; call r14
0xffffff80008bd712 : mov r8, r11 ; mov r9, r10 ; call r14
0xffffff80008bd337 : mov r8, r11 ; mov r9, r10 ; call r15
0xffffff80008e3a71 : mov r8, r12 ; call 0xffffff80004efce5
0xffffff8000636620 : mov r8, r12 ; call 0xffffff80007c28a5
0xffffff80004da040 : mov r8, r12 ; call rbx
0xffffff800074acb7 : mov r8, r12 ; mov r9, r15 ; call rax
0xffffff80006a3094 : mov r8, r12 ; mov rdx, rbx ; call 0xffffff80002c53a9
0xffffff80006f0375 : mov r8, r13 ; call 0xffffff80004fc585
0xffffff800074ef9b : mov r8, r13 ; mov r15, r9 ; call r10
0xffffff80008bd2b9 : mov r8, r14 ; call r15
0xffffff8000837199 : mov r8, r14 ; call r9
0xffffff80008f5ac6 : mov r8, r14 ; call rax
0xffffff800027c7d2 : mov r8, r15 ; call 0xffffff80002689e5
0xffffff800042c0a5 : mov r8, r15 ; call 0xffffff8000508345
0xffffff80005d363e : mov r8, r15 ; call 0xffffff80005d2699
0xffffff80005d53fe : mov r8, r15 ; call 0xffffff80005d49e9
0xffffff80008bd696 : mov r8, r15 ; call r14
0xffffff80006586f6 : mov r8, r15 ; call r9
0xffffff80008bd073 : mov r8, r15 ; mov r9, r10 ; call r14
0xffffff80006a2431 : mov r8, r15 ; mov rdx, rbx ; call 0xffffff80002c53a9
0xffffff80008bbffe : mov r8, r9 ; mov r9, rax ; call r10
0xffffff80007582bc : mov r8, r9 ; pop rbp ; jmp rax
0xffffff80007a5749 : mov r8, rax ; call r15
0xffffff8000696506 : mov r8, rbx ; call 0xffffff80002c53a6
0xffffff80006f02d6 : mov r8, rbx ; call 0xffffff80004fc585
0xffffff8000848ca0 : mov r8, rbx ; call 0xffffff800084f349
0xffffff800051bc8f : mov r8, rbx ; call rax
0xffffff8000698d8e : mov r8, rbx ; mov rdx, r15 ; call 0xffffff80002c53a9
0xffffff80005b012f : mov r8, rcx ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0xffffff80006674cb : mov r8, rdi ; call 0xffffff800028e4a6
0xffffff8000719054 : mov r8, rdi ; mov qword ptr [rcx], r8 ; pop rbp ; ret
0xffffff80008f6e66 : mov r8b, 0x41 ; call rsp
0xffffff80008f6fce : mov r8b, 0x4c ; mov ecx, dword ptr [rbp - 0x48] ; call r14
0xffffff80008f7091 : mov r8b, 0x4c ; mov ecx, dword ptr [rbp - 0x48] ; call rbx
0xffffff8000671eef : mov r8b, 0x88 ; ret
0xffffff80007baa8c : mov r8b, 0x89 ; ret
0xffffff80007c13e9 : mov r8b, 0x89 ; ret 0x2944
0xffffff8000778056 : mov r8b, 0xe8 ; movsxd rbx, dword ptr [rbx - 0x76b70003] ; ret
0xffffff80003ea191 : mov r8b, 0xf ; ret
0xffffff8000693313 : mov r8b, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000729f26 : mov r8b, 1 ; ret
0xffffff80006e9c9d : mov r8d, 0x2d ; jmp rcx
0xffffff800034c815 : mov r8d, 0x3941c0ff ; ret
0xffffff8000517de9 : mov r8d, 0x4cf7894c ; mov edx, esp ; call rax
0xffffff800066ec6b : mov r8d, 0x83484575 ; ret
0xffffff800074f12e : mov r8d, 0xc84d8b4c ; call rax
0xffffff80007d6a62 : mov r8d, 0xd21fe7e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000271639 : mov r8d, 0xfffcb0e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000317e90 : mov r8d, 0xffffffba ; call rbx
0xffffff8000607e1e : mov r8d, 1 ; mov rdi, rax ; call rbx
0xffffff8000579e10 : mov r8d, 2 ; pop rbp ; ret
0xffffff80008fbb28 : mov r8d, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80003f18e1 : mov r8d, dword ptr [rbp - 0x30] ; call rax
0xffffff80008f3f36 : mov r8d, dword ptr [rbp - 0x34] ; call rbx
0xffffff800090925d : mov r8d, dword ptr [rbp - 0x3c] ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3d1e : mov r8d, dword ptr [rbp - 0x40] ; mov r9d, dword ptr [rbp - 0x3c] ; call rbx
0xffffff80007f020b : mov r8d, dword ptr [rsi + 0x18] ; mov esi, eax ; pop rbp ; jmp r11
0xffffff80007f018c : mov r8d, dword ptr [rsi + 0x18] ; mov rsi, rax ; pop rbp ; jmp r11
0xffffff800087c2c8 : mov r8d, eax ; call rbx
0xffffff800066dc8b : mov r8d, ebx ; call 0xffffff800028e4a6
0xffffff80008ef0fa : mov r8d, r13d ; call rbx
0xffffff80008ef16d : mov r8d, r14d ; call rbx
0xffffff800066a47c : mov r8d, r15d ; mov r9, r13 ; call 0xffffff800028e4a9
0xffffff800089891c : mov r8d, r9d ; call r10
0xffffff800041ee10 : mov r9, qword ptr [r9] ; test r9, r9 ; jne 0xffffff800041eda9 ; pop rbp ; ret
0xffffff800088b038 : mov r9, qword ptr [rbp - 0x118] ; call 0xffffff8000757279
0xffffff80008f3b0a : mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fa87d : mov r9, qword ptr [rbp - 0x38] ; call r10
0xffffff800074f130 : mov r9, qword ptr [rbp - 0x38] ; call rax
0xffffff80008f88bc : mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f6fd0 : mov r9, qword ptr [rbp - 0x48] ; call r14
0xffffff800074effd : mov r9, qword ptr [rbp - 0x48] ; call rax
0xffffff80008f7093 : mov r9, qword ptr [rbp - 0x48] ; call rbx
0xffffff80008f6e64 : mov r9, qword ptr [rbp - 0x50] ; call r12
0xffffff80008f6cd4 : mov r9, qword ptr [rbp - 0x50] ; call rbx
0xffffff8000326be8 : mov r9, qword ptr [rbp - 0x60] ; jmp 0xffffff8000326c02
0xffffff80007fcb02 : mov r9, qword ptr [rbx + 0x28] ; call r10
0xffffff80003893f9 : mov r9, qword ptr [rsi + 0x18] ; mov rax, qword ptr [rsi + 0x20] ; call rdi
0xffffff80008bd076 : mov r9, r10 ; call r14
0xffffff80008bd33a : mov r9, r10 ; call r15
0xffffff80008bc0a3 : mov r9, r11 ; call r10
0xffffff80008bd035 : mov r9, r11 ; call r14
0xffffff80008bd37f : mov r9, r11 ; call r15
0xffffff8000594769 : mov r9, r11 ; jmp rdi
0xffffff80008f6526 : mov r9, r12 ; call rbx
0xffffff800066a47f : mov r9, r13 ; call 0xffffff800028e4a6
0xffffff80004f0f8c : mov r9, r13 ; call 0xffffff800078d255
0xffffff800053455f : mov r9, r13 ; call rax
0xffffff80008f5e26 : mov r9, r13 ; call rbx
0xffffff80008bd3cb : mov r9, r14 ; call r15
0xffffff800074f2aa : mov r9, r14 ; call rax
0xffffff80008bd0bb : mov r9, r15 ; call r14
0xffffff800074acba : mov r9, r15 ; call rax
0xffffff80008bc001 : mov r9, rax ; call r10
0xffffff800074f0c6 : mov r9, rbx ; call rax
0xffffff800063f053 : mov r9b, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000774ffc : mov r9b, 0xff ; mov rdi, r15 ; call 0xffffff8000397209
0xffffff80003dc3e9 : mov r9b, 1 ; mov r10d, eax ; jmp 0xffffff80003dc41a
0xffffff80008d2534 : mov r9d, 0x10 ; mov r10, rax ; jmp 0xffffff80008d2592
0xffffff80008d2566 : mov r9d, 2 ; mov r10, rax ; jmp 0xffffff80008d2592
0xffffff800087c4d5 : mov r9d, dword ptr [rax + 0x60] ; mov rsi, r13 ; call rbx
0xffffff80008f3d22 : mov r9d, dword ptr [rbp - 0x3c] ; call rbx
0xffffff80008fa638 : mov r9d, dword ptr [rbp - 0x44] ; call r10
0xffffff8000879ed7 : mov r9d, dword ptr [rsi + 0x60] ; mov rsi, r14 ; call rax
0xffffff8000879a0d : mov r9d, dword ptr [rsi + 0x60] ; mov rsi, rbx ; call rax
0xffffff80004b4443 : mov r9d, ebx ; call 0xffffff80004c06f5
0xffffff80007f9e1d : mov r9d, r12d ; call 0xffffff800029e859
0xffffff8000703e92 : mov r9d, r13d ; call 0xffffff8000500125
0xffffff80003951a1 : mov r9d, r14d ; call 0xffffff8000381405
0xffffff8000892910 : mov rax, -0x1ffffd44 ; pop rbp ; ret
0xffffff800049f684 : mov rax, -1 ; pop rbp ; ret
0xffffff8000392d6c : mov rax, 1 ; ret
0xffffff8000389046 : mov rax, cr4 ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff8000367575 : mov rax, qword ptr [8] ; pop rbp ; ret
0xffffff800032e933 : mov rax, qword ptr [r12 + 8] ; mov rdi, r12 ; call qword ptr [rax]
0xffffff800082d740 : mov rax, qword ptr [r12] ; test rax, rax ; je 0xffffff800082d759 ; call rax
0xffffff80008be534 : mov rax, qword ptr [r14 + 0x38] ; mov qword ptr [rsp], rax ; call r10
0xffffff800088fb4d : mov rax, qword ptr [r8 + 0x1e0] ; pop rbp ; jmp rax
0xffffff800088fb43 : mov rax, qword ptr [r8 + 0x1e8] ; pop rbp ; jmp rax
0xffffff80007ff10c : mov rax, qword ptr [r8 + rax + 0x40] ; pop rbp ; jmp rax
0xffffff80007ff00c : mov rax, qword ptr [r8 + rax + 8] ; pop rbp ; jmp rax
0xffffff80008172e6 : mov rax, qword ptr [r8 + rax + 8] ; pop rbp ; ret
0xffffff80007fefcc : mov rax, qword ptr [r8 + rax] ; pop rbp ; jmp rax
0xffffff80007ff0cc : mov rax, qword ptr [r9 + rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000303768 : mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff80002f6988 : mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff800089cbe7 : mov rax, qword ptr [rax + 0x120] ; pop rbp ; jmp rax
0xffffff800082fdcb : mov rax, qword ptr [rax + 0x148] ; pop rbp ; jmp rax
0xffffff800072c654 : mov rax, qword ptr [rax + 0x148] ; pop rbp ; ret
0xffffff800082fdeb : mov rax, qword ptr [rax + 0x150] ; pop rbp ; jmp rax
0xffffff800074d444 : mov rax, qword ptr [rax + 0x150] ; pop rbp ; ret
0xffffff80008b5fa7 : mov rax, qword ptr [rax + 0x160] ; pop rbp ; jmp rax
0xffffff800039a32d : mov rax, qword ptr [rax + 0x1638] ; pop rbp ; ret
0xffffff80003a310d : mov rax, qword ptr [rax + 0x168] ; pop rbp ; ret
0xffffff800086116b : mov rax, qword ptr [rax + 0x170] ; pop rbp ; jmp rax
0xffffff80003a312d : mov rax, qword ptr [rax + 0x170] ; pop rbp ; ret
0xffffff80003a314d : mov rax, qword ptr [rax + 0x178] ; pop rbp ; ret
0xffffff8000878983 : mov rax, qword ptr [rax + 0x188] ; pop rbp ; ret
0xffffff800033d999 : mov rax, qword ptr [rax + 0x18] ; mov qword ptr [rdx], rax ; pop rbp ; ret
0xffffff80002f6998 : mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff8000877143 : mov rax, qword ptr [rax + 0x190] ; pop rbp ; ret
0xffffff8000890647 : mov rax, qword ptr [rax + 0x1c8] ; pop rbp ; jmp rax
0xffffff800038decb : mov rax, qword ptr [rax + 0x1c8] ; pop rbp ; ret
0xffffff8000878e5c : mov rax, qword ptr [rax + 0x1d8] ; pop rbp ; jmp rax
0xffffff800038c07d : mov rax, qword ptr [rax + 0x1e0] ; pop rbp ; ret
0xffffff80008a753b : mov rax, qword ptr [rax + 0x1f0] ; pop rbp ; jmp rax
0xffffff8000888f83 : mov rax, qword ptr [rax + 0x1f8] ; pop rbp ; jmp rax
0xffffff8000303788 : mov rax, qword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff80002afd0b : mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff8000758bd8 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff80007607f8 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000760818 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff8000758bf8 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 8] ; pop rbp ; jmp rax
0xffffff8000303798 : mov rax, qword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff80002afd2b : mov rax, qword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff80004fa70b : mov rax, qword ptr [rax + 0x30] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80003037a8 : mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff80002b730d : mov rax, qword ptr [rax + 0x310] ; pop rbp ; ret
0xffffff800031eafd : mov rax, qword ptr [rax + 0x318] ; pop rbp ; ret
0xffffff800077e02d : mov rax, qword ptr [rax + 0x350] ; pop rbp ; ret
0xffffff80003037b8 : mov rax, qword ptr [rax + 0x38] ; pop rbp ; jmp rax
0xffffff8000389efd : mov rax, qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff80003ba84d : mov rax, qword ptr [rax + 0x3a8] ; pop rbp ; ret
0xffffff80003037c8 : mov rax, qword ptr [rax + 0x40] ; pop rbp ; jmp rax
0xffffff80007b1212 : mov rax, qword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rax ; pop rbp ; ret
0xffffff80007c6a58 : mov rax, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; jmp rax
0xffffff80003037d8 : mov rax, qword ptr [rax + 0x48] ; pop rbp ; jmp rax
0xffffff80003a25e3 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0xffffff80003a2610 ; call rax
0xffffff8000811307 : mov rax, qword ptr [rax + 0x48] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80003ba834 : mov rax, qword ptr [rax + 0x490] ; pop rbp ; ret
0xffffff80002db358 : mov rax, qword ptr [rax + 0x50] ; pop rbp ; ret
0xffffff80008112f7 : mov rax, qword ptr [rax + 0x50] ; xor esi, esi ; pop rbp ; jmp rax
0xffffff800038dfbb : mov rax, qword ptr [rax + 0x60] ; pop rbp ; ret
0xffffff8000865bd7 : mov rax, qword ptr [rax + 0x640] ; pop rbp ; jmp rax
0xffffff80007f01db : mov rax, qword ptr [rax + 0x68] ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80007c6a5c : mov rax, qword ptr [rax + 0x68] ; pop rbp ; jmp rax
0xffffff8000342178 : mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007f022b : mov rax, qword ptr [rax + 0x78] ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff8000879963 : mov rax, qword ptr [rax + 0x7c8] ; pop rbp ; jmp rax
0xffffff800087cd5f : mov rax, qword ptr [rax + 0x820] ; pop rbp ; jmp rax
0xffffff80008ade37 : mov rax, qword ptr [rax + 0x880] ; pop rbp ; jmp rax
0xffffff80008b4637 : mov rax, qword ptr [rax + 0x888] ; pop rbp ; ret
0xffffff80007fbc1b : mov rax, qword ptr [rax + 0x88] ; pop rbp ; ret
0xffffff80008b0797 : mov rax, qword ptr [rax + 0x8d0] ; pop rbp ; jmp rax
0xffffff80008b07b7 : mov rax, qword ptr [rax + 0x8d8] ; pop rbp ; jmp rax
0xffffff80008a8677 : mov rax, qword ptr [rax + 0x8e0] ; pop rbp ; jmp rax
0xffffff80008aa763 : mov rax, qword ptr [rax + 0x8f0] ; pop rbp ; jmp rax
0xffffff80008aa793 : mov rax, qword ptr [rax + 0x8f8] ; pop rbp ; jmp rax
0xffffff80004fa7db : mov rax, qword ptr [rax + 0x8f8] ; pop rbp ; ret
0xffffff80008aa7c3 : mov rax, qword ptr [rax + 0x900] ; pop rbp ; jmp rax
0xffffff80008aa7f3 : mov rax, qword ptr [rax + 0x908] ; pop rbp ; jmp rax
0xffffff80008aa843 : mov rax, qword ptr [rax + 0x918] ; pop rbp ; jmp rax
0xffffff80008aa873 : mov rax, qword ptr [rax + 0x920] ; pop rbp ; jmp rax
0xffffff8000511b2d : mov rax, qword ptr [rax + 0xa0] ; pop rbp ; ret
0xffffff800039cd8b : mov rax, qword ptr [rax + 0xb8] ; pop rbp ; ret
0xffffff8000758018 : mov rax, qword ptr [rax + 0xd0] ; pop rbp ; ret
0xffffff8000758bfc : mov rax, qword ptr [rax + 8] ; pop rbp ; jmp rax
0xffffff800078c726 : mov rax, qword ptr [rax + 8] ; pop rbp ; ret
0xffffff8000393eb6 : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0xffffff8000393eca ; call rax
0xffffff8000541eeb : mov rax, qword ptr [rax + rax + 0x31] ; shr al, 0xba ; ret 0xffd4
0xffffff80007ff04c : mov rax, qword ptr [rax + rcx + 0x10] ; pop rbp ; jmp rax
0xffffff80007ff08c : mov rax, qword ptr [rax + rcx + 0x18] ; pop rbp ; jmp rax
0xffffff8000812813 : mov rax, qword ptr [rax + rcx*8] ; pop rbp ; ret
0xffffff800078c986 : mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800028a6f8 : mov rax, qword ptr [rax] ; test rax, rax ; je 0xffffff800028a718 ; call rax
0xffffff80003903ba : mov rax, qword ptr [rax] ; test rax, rax ; je 0xffffff80003903ce ; call rax
0xffffff80003a2840 : mov rax, qword ptr [rax] ; test rax, rax ; je 0xffffff80003a2854 ; pop rbp ; jmp rax
0xffffff80003a304c : mov rax, qword ptr [rax] ; test rax, rax ; je 0xffffff80003a3065 ; call rax
0xffffff800044ebd7 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0xffffff800044ebd9 ; pop rbp ; ret
0xffffff80008a994d : mov rax, qword ptr [rbp - 0x10] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80005da48d : mov rax, qword ptr [rbp - 0x118] ; mov edx, eax ; jmp 0xffffff80005da4c0
0xffffff80008584c2 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff8000882204 : mov rax, qword ptr [rbp - 0x30] ; call rax
0xffffff80008000e9 : mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff80003896f4 : mov rax, qword ptr [rbp - 0x38] ; jmp rcx
0xffffff8000686ba6 : mov rax, qword ptr [rbp - 0x58] ; call qword ptr [rax]
0xffffff8000588ed7 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800080cbb8 : mov rax, qword ptr [rbp - 8] ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80005115a7 : mov rax, qword ptr [rbx + 0x20] ; mov rsi, qword ptr [rax] ; call 0xffffff80002cd859
0xffffff800053c680 : mov rax, qword ptr [rbx + 0x30] ; test rax, rax ; je 0xffffff800053c694 ; call rax
0xffffff80007b4478 : mov rax, qword ptr [rbx + 0x58] ; test rax, rax ; je 0xffffff80007b4479 ; call rax
0xffffff8000354545 : mov rax, qword ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a2f59 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0xffffff80003a2f79 ; call rax
0xffffff80004fa9b7 : mov rax, qword ptr [rcx + 0x10] ; add rsp, 8 ; pop rbp ; ret
0xffffff800039076f : mov rax, qword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff800077e002 : mov rax, qword ptr [rcx + 0x128] ; pop rbp ; ret
0xffffff800049d82b : mov rax, qword ptr [rcx + 0x130] ; pop rbp ; ret
0xffffff80003a3089 : mov rax, qword ptr [rcx + 0x168] ; pop rbp ; ret
0xffffff80003a30b9 : mov rax, qword ptr [rcx + 0x170] ; pop rbp ; ret
0xffffff80003a30e9 : mov rax, qword ptr [rcx + 0x178] ; pop rbp ; ret
0xffffff80007af881 : mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80005c1330 : mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff8000870c34 : mov rax, qword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff80002daf02 : mov rax, qword ptr [rcx + 0x318] ; pop rbp ; ret
0xffffff80007b11e1 : mov rax, qword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff8000756bb7 : mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80004fa052 : mov rax, qword ptr [rcx + 0x988] ; pop rbp ; ret
0xffffff80002cd19f : mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff800025a18a : mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000658135 : mov rax, qword ptr [rcx + rax*8 - 8] ; call qword ptr [rax]
0xffffff8000655f1c : mov rax, qword ptr [rcx + rax*8 - 8] ; mov ebx, dword ptr [rdi + 0x2c] ; call qword ptr [rax]
0xffffff800039109e : mov rax, qword ptr [rcx + rax*8] ; add rax, 0x68 ; pop rbp ; ret
0xffffff800049e17e : mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008adba4 : mov rax, qword ptr [rcx + rax*8] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028ba86 : mov rax, qword ptr [rcx] ; mov qword ptr [rsi + 8], rax ; pop rbp ; ret
0xffffff80006456ef : mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff80002f6994 : mov rax, qword ptr [rdi + 0x10] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80005630db : mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800082fd94 : mov rax, qword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800082fda4 : mov rax, qword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x24] ; pop rbp ; ret
0xffffff800082fdb4 : mov rax, qword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff80002f6984 : mov rax, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff800081280f : mov rax, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rax + rcx*8] ; pop rbp ; ret
0xffffff800082cbec : mov rax, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff8000516524 : mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff8000532ddf : mov rax, qword ptr [rdi + 0x1e0] ; pop rbp ; jmp rax
0xffffff80002db354 : mov rax, qword ptr [rdi + 0x20] ; mov rax, qword ptr [rax + 0x50] ; pop rbp ; ret
0xffffff80002db144 : mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80007724f6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x28], rax ; pop rbp ; ret
0xffffff800075fb14 : mov rax, qword ptr [rdi + 0x28] ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff800086ee94 : mov rax, qword ptr [rdi + 0x28] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff80002db564 : mov rax, qword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff80002db1c4 : mov rax, qword ptr [rdi + 0x290] ; pop rbp ; ret
0xffffff80002db134 : mov rax, qword ptr [rdi + 0x2b0] ; pop rbp ; ret
0xffffff80004f9034 : mov rax, qword ptr [rdi + 0x30] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff800056584b : mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002db544 : mov rax, qword ptr [rdi + 0x310] ; pop rbp ; ret
0xffffff80002daeb4 : mov rax, qword ptr [rdi + 0x318] ; pop rbp ; ret
0xffffff80002e984b : mov rax, qword ptr [rdi + 0x320] ; pop rbp ; ret
0xffffff80002daf24 : mov rax, qword ptr [rdi + 0x350] ; pop rbp ; ret
0xffffff80002c099b : mov rax, qword ptr [rdi + 0x360] ; pop rbp ; ret
0xffffff80002c095b : mov rax, qword ptr [rdi + 0x368] ; pop rbp ; ret
0xffffff80007f0654 : mov rax, qword ptr [rdi + 0x388] ; pop rbp ; ret
0xffffff800039d50e : mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsi + 0x38], rax ; pop rbp ; ret
0xffffff80002a0404 : mov rax, qword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80007f0674 : mov rax, qword ptr [rdi + 0x390] ; pop rbp ; ret
0xffffff80007f06b4 : mov rax, qword ptr [rdi + 0x3a0] ; pop rbp ; ret
0xffffff80007f0864 : mov rax, qword ptr [rdi + 0x3a8] ; pop rbp ; ret
0xffffff80002bed0b : mov rax, qword ptr [rdi + 0x3b0] ; pop rbp ; ret
0xffffff80005644d4 : mov rax, qword ptr [rdi + 0x3dc] ; pop rbp ; ret
0xffffff80007f0764 : mov rax, qword ptr [rdi + 0x438] ; pop rbp ; ret
0xffffff800077e0f4 : mov rax, qword ptr [rdi + 0x440] ; pop rbp ; ret
0xffffff8000389e74 : mov rax, qword ptr [rdi + 0x448] ; pop rbp ; ret
0xffffff80007f06d4 : mov rax, qword ptr [rdi + 0x450] ; pop rbp ; ret
0xffffff80007f0844 : mov rax, qword ptr [rdi + 0x458] ; pop rbp ; ret
0xffffff80002b7184 : mov rax, qword ptr [rdi + 0x488] ; pop rbp ; ret
0xffffff80005659fb : mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff800039a6a4 : mov rax, qword ptr [rdi + 0x4a0] ; pop rbp ; ret
0xffffff8000342174 : mov rax, qword ptr [rdi + 0x50] ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff8000342184 : mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80002db574 : mov rax, qword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff8000895e3a : mov rax, qword ptr [rdi + 0x60] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800027fc6e : mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b40a4 : mov rax, qword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa0c4 : mov rax, qword ptr [rdi + 0x70] ; mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0xffffff80004b3caf : mov rax, qword ptr [rdi + 0x70] ; pop rbp ; ret
0xffffff80004b3c84 : mov rax, qword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff80004b4164 : mov rax, qword ptr [rdi + 0x80] ; pop rbp ; ret
0xffffff80002a9a61 : mov rax, qword ptr [rdi + 0x820] ; pop rbp ; ret
0xffffff80004b4174 : mov rax, qword ptr [rdi + 0x88] ; pop rbp ; ret
0xffffff80004f9414 : mov rax, qword ptr [rdi + 0x8f8] ; pop rbp ; ret
0xffffff80004b4184 : mov rax, qword ptr [rdi + 0x90] ; pop rbp ; ret
0xffffff8000356d64 : mov rax, qword ptr [rdi + 0x98] ; pop rbp ; ret
0xffffff80004f8fb4 : mov rax, qword ptr [rdi + 0x998] ; pop rbp ; ret
0xffffff80004f9044 : mov rax, qword ptr [rdi + 0x9d0] ; pop rbp ; ret
0xffffff8000511b3a : mov rax, qword ptr [rdi + 0xa0] ; pop rbp ; ret
0xffffff80004b4124 : mov rax, qword ptr [rdi + 0xb0] ; pop rbp ; ret
0xffffff80004b4144 : mov rax, qword ptr [rdi + 0xb8] ; pop rbp ; ret
0xffffff8000895d04 : mov rax, qword ptr [rdi + 0xc0] ; pop rbp ; ret
0xffffff80004fa034 : mov rax, qword ptr [rdi + 0xd0] ; pop rbp ; ret
0xffffff80007f0784 : mov rax, qword ptr [rdi + 0xd80] ; pop rbp ; ret
0xffffff80004fa094 : mov rax, qword ptr [rdi + 0xd8] ; pop rbp ; ret
0xffffff80004b41a4 : mov rax, qword ptr [rdi + 0xe0] ; pop rbp ; ret
0xffffff8000504ad4 : mov rax, qword ptr [rdi + 0xf0] ; pop rbp ; ret
0xffffff8000303764 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff8000810b44 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff8000303784 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; jmp rax
0xffffff8000303794 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; jmp rax
0xffffff80003037a4 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff80003037b4 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x38] ; pop rbp ; jmp rax
0xffffff80003037c4 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; pop rbp ; jmp rax
0xffffff80003037d4 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; pop rbp ; jmp rax
0xffffff8000303744 : mov rax, qword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff80004f9f04 : mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0xffffff8000807cd9 : mov rax, qword ptr [rdi + rax*8 + 0x10] ; pop rbp ; ret
0xffffff80008f25d7 : mov rax, qword ptr [rdi + rax*8 + 8] ; pop rbp ; ret
0xffffff800082d61b : mov rax, qword ptr [rdi - 8] ; add rax, -8 ; pop rbp ; ret
0xffffff80008d8388 : mov rax, qword ptr [rdi] ; call qword ptr [rax + 0x28]
0xffffff80004a757b : mov rax, qword ptr [rdi] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800088af04 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff800085d6b8 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; pop rbp ; jmp rax
0xffffff800078c723 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 8] ; pop rbp ; ret
0xffffff800078c983 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800028ba54 : mov rax, qword ptr [rdi] ; pop rbp ; ret
0xffffff80008790c4 : mov rax, qword ptr [rip + 0x26c565] ; pop rbp ; ret
0xffffff80008661c4 : mov rax, qword ptr [rip + 0x27f265] ; pop rbp ; ret
0xffffff80008661a4 : mov rax, qword ptr [rip + 0x27f40d] ; pop rbp ; ret
0xffffff80008661b4 : mov rax, qword ptr [rip + 0x27f415] ; pop rbp ; ret
0xffffff8000864664 : mov rax, qword ptr [rip + 0x280f35] ; pop rbp ; ret
0xffffff800085d344 : mov rax, qword ptr [rip + 0x28805d] ; pop rbp ; ret
0xffffff80006c5494 : mov rax, qword ptr [rip + 0x3a3795] ; pop rbp ; jmp rax
0xffffff80006c54a4 : mov rax, qword ptr [rip + 0x3a379d] ; pop rbp ; jmp rax
0xffffff80006c53e4 : mov rax, qword ptr [rip + 0x3a37fd] ; pop rbp ; jmp rax
0xffffff80006c53d4 : mov rax, qword ptr [rip + 0x3a3805] ; pop rbp ; jmp rax
0xffffff800077d0d3 : mov rax, qword ptr [rip + 0x3b217e] ; pop rbp ; ret
0xffffff8000559164 : mov rax, qword ptr [rip + 0x50fac5] ; pop rbp ; jmp rax
0xffffff8000559174 : mov rax, qword ptr [rip + 0x50facd] ; pop rbp ; jmp rax
0xffffff80005590d4 : mov rax, qword ptr [rip + 0x50fb0d] ; pop rbp ; jmp rax
0xffffff80005590c4 : mov rax, qword ptr [rip + 0x50fb15] ; pop rbp ; jmp rax
0xffffff80003c71e4 : mov rax, qword ptr [rip + 0x692c65] ; pop rbp ; ret
0xffffff80003c7174 : mov rax, qword ptr [rip + 0x692cdd] ; pop rbp ; ret
0xffffff80003ad52c : mov rax, qword ptr [rip + 0x6a3b4d] ; call qword ptr [rax]
0xffffff80003acfce : mov rax, qword ptr [rip + 0x6a40ab] ; call qword ptr [rax]
0xffffff80003ab660 : mov rax, qword ptr [rip + 0x6a5c21] ; pop rbp ; ret
0xffffff800039ee3b : mov rax, qword ptr [rip + 0x6b223e] ; call qword ptr [rax]
0xffffff800039ebf9 : mov rax, qword ptr [rip + 0x6b2480] ; call qword ptr [rax]
0xffffff80003a9197 : mov rax, qword ptr [rip + 0x728a2a] ; call rax
0xffffff80003907b0 : mov rax, qword ptr [rip + 0x75b391] ; pop rbp ; ret
0xffffff80003a38b4 : mov rax, qword ptr [rip + 0x75b9ed] ; pop rbp ; ret
0xffffff80003a2d64 : mov rax, qword ptr [rip + 0x75bd65] ; pop rbp ; ret
0xffffff8000393f93 : mov rax, qword ptr [rip + 0x76b836] ; call qword ptr [rax]
0xffffff8000366eb4 : mov rax, qword ptr [rip + 0x79824d] ; pop rbp ; ret
0xffffff8000366ea4 : mov rax, qword ptr [rip + 0x798265] ; pop rbp ; ret
0xffffff800028f014 : mov rax, qword ptr [rip + 0x79d01d] ; pop rbp ; jmp rax
0xffffff800034305a : mov rax, qword ptr [rip + 0x7b6967] ; xor edi, edi ; call rax
0xffffff80002c9ba9 : mov rax, qword ptr [rip + 0x823fa0] ; pop rbp ; ret
0xffffff80002c9bc4 : mov rax, qword ptr [rip + 0x823ff5] ; pop rbp ; ret
0xffffff80002c9bbb : mov rax, qword ptr [rip + 0x823ff6] ; pop rbp ; ret
0xffffff80002c9bb2 : mov rax, qword ptr [rip + 0x823ff7] ; pop rbp ; ret
0xffffff80002c9bf1 : mov rax, qword ptr [rip + 0x824088] ; pop rbp ; ret
0xffffff80002c9be8 : mov rax, qword ptr [rip + 0x824089] ; pop rbp ; ret
0xffffff80002c9bdf : mov rax, qword ptr [rip + 0x82408a] ; pop rbp ; ret
0xffffff80002c9bd6 : mov rax, qword ptr [rip + 0x82408b] ; pop rbp ; ret
0xffffff80002c9bcd : mov rax, qword ptr [rip + 0x82408c] ; pop rbp ; ret
0xffffff8000262984 : mov rax, qword ptr [rip + 0x83d3fd] ; pop rbp ; ret
0xffffff80007678ff : mov rax, qword ptr [rsi + 0x10] ; mov qword ptr [rdi + 0x58], rax ; pop rbp ; ret
0xffffff8000889e4b : mov rax, qword ptr [rsi + 0x130] ; pop rbp ; ret
0xffffff80003893fd : mov rax, qword ptr [rsi + 0x20] ; call rdi
0xffffff80008850bb : mov rax, qword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff80007b5764 : mov rax, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x78], rax ; pop rbp ; ret
0xffffff8000327431 : mov rax, qword ptr [rsi] ; mov qword ptr [rax + 8], rcx ; pop rbp ; ret
0xffffff80007aefdd : mov rax, r10 ; je 0xffffff80007aefec ; xor eax, eax ; pop rbp ; ret
0xffffff80007aefe9 : mov rax, r10 ; pop rbp ; ret
0xffffff80006901bf : mov rax, r11 ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002a635a : mov rax, r13 ; je 0xffffff80002a638c ; mov rbx, r8 ; call rcx
0xffffff8000291dfe : mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a63de : mov rax, r8 ; mov qword ptr [rbp - 0x68], rax ; mov r10, rax ; jmp 0xffffff80002a6415
0xffffff8000511b93 : mov rax, r8 ; pop rbp ; ret
0xffffff800054f1b9 : mov rax, r8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b0132 : mov rax, r8 ; pop rbx ; pop rbp ; ret
0xffffff800041ee1a : mov rax, r9 ; pop rbp ; ret
0xffffff80007533c1 : mov rax, r9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000685a75 : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000272ba5 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff8000253159 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800027fd01 : mov rax, rbx ; jmp 0xffffff800027fccc
0xffffff800025d1b9 : mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002db4e7 : mov rax, rcx ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000372912 : mov rax, rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000637cad : mov rax, rcx ; je 0xffffff8000637cbc ; xor eax, eax ; pop rbp ; ret
0xffffff80004fa6ed : mov rax, rcx ; jne 0xffffff80004fa6e6 ; pop rbp ; ret
0xffffff800059f71d : mov rax, rcx ; jne 0xffffff800059f716 ; pop rbp ; ret
0xffffff8000769b4d : mov rax, rcx ; jne 0xffffff8000769b46 ; pop rbp ; ret
0xffffff8000328121 : mov rax, rcx ; mov qword ptr [r9 + 0x10], rax ; pop rbp ; ret
0xffffff80005bf476 : mov rax, rcx ; mov qword ptr [r9 + 0x20], rax ; pop rbp ; ret
0xffffff80005b1d66 : mov rax, rcx ; mov qword ptr [r9 + 0x28], rax ; pop rbp ; ret
0xffffff80005821a6 : mov rax, rcx ; mov qword ptr [r9 + 0x40], rax ; pop rbp ; ret
0xffffff80005ebb16 : mov rax, rcx ; mov qword ptr [r9 + 0x68], rax ; pop rbp ; ret
0xffffff800057fe16 : mov rax, rcx ; mov qword ptr [r9 + 0x78], rax ; pop rbp ; ret
0xffffff800028e84a : mov rax, rcx ; mov rcx, rdx ; jne 0xffffff800028e849 ; pop rbp ; ret
0xffffff80004a53ca : mov rax, rcx ; mov rcx, rdx ; jne 0xffffff80004a53c9 ; pop rbp ; ret
0xffffff800025002f : mov rax, rcx ; pop rbp ; ret
0xffffff800034a9cb : mov rax, rcx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007aef41 : mov rax, rdi ; je 0xffffff80007aef50 ; xor eax, eax ; pop rbp ; ret
0xffffff800030fc92 : mov rax, rdi ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff800049fb24 : mov rax, rdi ; mov rdi, rsi ; pop rbp ; jmp rax
0xffffff80003668ad : mov rax, rdi ; pop rbp ; ret
0xffffff80007b735c : mov rax, rdi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a6d2 : mov rax, rdi ; ret
0xffffff8000269f93 : mov rax, rdx ; jne 0xffffff8000269f86 ; pop rbp ; ret
0xffffff8000572a13 : mov rax, rdx ; movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0xffffff80002db462 : mov rax, rdx ; pop rbp ; ret
0xffffff800049cbf6 : mov rax, rdx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c9ba0 : mov rax, rdx ; shr rax, 0x12 ; pop rbp ; ret
0xffffff8000750279 : mov rax, rsi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000366ab0 : mov rax, rsi ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800031f1e5 : mov rax, rsi ; pop rbp ; ret
0xffffff80002ff39e : mov rax, rsi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3ad5 : mov rbp, cr3 ; ret
0xffffff8000796201 : mov rbp, rsp ; add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80002c80a1 : mov rbp, rsp ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff8000495751 : mov rbp, rsp ; add qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80006d64d1 : mov rbp, rsp ; and byte ptr [rdi + 0x42], 0xf7 ; pop rbp ; ret
0xffffff80004d26b1 : mov rbp, rsp ; and edi, 0xf ; mov eax, edi ; pop rbp ; ret
0xffffff800040c871 : mov rbp, rsp ; dec dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800040c7c1 : mov rbp, rsp ; inc dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff8000512e51 : mov rbp, rsp ; inc dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff80007f4b81 : mov rbp, rsp ; inc dword ptr [rdx] ; xor eax, eax ; pop rbp ; ret
0xffffff80004953c1 : mov rbp, rsp ; inc qword ptr [rdi] ; pop rbp ; ret
0xffffff8000751de1 : mov rbp, rsp ; lea rax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000756b71 : mov rbp, rsp ; lea rax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c1 : mov rbp, rsp ; lea rax, [rdi + 0x68] ; pop rbp ; ret
0xffffff8000802a81 : mov rbp, rsp ; lfence ; pop rbp ; ret
0xffffff8000864221 : mov rbp, rsp ; mov al, 1 ; pop rbp ; ret
0xffffff800088e881 : mov rbp, rsp ; mov al, byte ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800088f591 : mov rbp, rsp ; mov al, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000813591 : mov rbp, rsp ; mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff800088e871 : mov rbp, rsp ; mov byte ptr [rdi + 0x28], 0 ; pop rbp ; ret
0xffffff8000568bd1 : mov rbp, rsp ; mov dword ptr [r9], esi ; xor eax, eax ; pop rbp ; ret
0xffffff8000588ea1 : mov rbp, rsp ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff8000588eb1 : mov rbp, rsp ; mov dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff8000815601 : mov rbp, rsp ; mov dword ptr [rdi + 0x20], esi ; mov eax, esi ; pop rbp ; ret
0xffffff80007961f1 : mov rbp, rsp ; mov dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80007f07e1 : mov rbp, rsp ; mov dword ptr [rdi + 0x40], esi ; pop rbp ; ret
0xffffff80004b3bf1 : mov rbp, rsp ; mov dword ptr [rdi + 0x44], esi ; pop rbp ; ret
0xffffff80004b3bd1 : mov rbp, rsp ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80004b3c11 : mov rbp, rsp ; mov dword ptr [rdi + 0x4c], esi ; pop rbp ; ret
0xffffff800089fb11 : mov rbp, rsp ; mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff800088c521 : mov rbp, rsp ; mov dword ptr [rsi + 0x2c], edx ; pop rbp ; ret
0xffffff80006564c1 : mov rbp, rsp ; mov eax, 0x10 ; pop rbp ; ret
0xffffff800084f541 : mov rbp, rsp ; mov eax, 0x1000 ; pop rbp ; ret
0xffffff800079dcb1 : mov rbp, rsp ; mov eax, 0x13 ; pop rbp ; ret
0xffffff8000797021 : mov rbp, rsp ; mov eax, 0x138 ; pop rbp ; ret
0xffffff80004ce961 : mov rbp, rsp ; mov eax, 0x16 ; pop rbp ; ret
0xffffff8000766731 : mov rbp, rsp ; mov eax, 0x19 ; pop rbp ; ret
0xffffff80007117a1 : mov rbp, rsp ; mov eax, 0x1e ; pop rbp ; ret
0xffffff80005664c1 : mov rbp, rsp ; mov eax, 0x20 ; pop rbp ; ret
0xffffff800039b881 : mov rbp, rsp ; mov eax, 0x200 ; pop rbp ; ret
0xffffff800065b801 : mov rbp, rsp ; mov eax, 0x240 ; pop rbp ; ret
0xffffff8000622df1 : mov rbp, rsp ; mov eax, 0x268 ; pop rbp ; ret
0xffffff8000622e01 : mov rbp, rsp ; mov eax, 0x2b8 ; pop rbp ; ret
0xffffff80003bba01 : mov rbp, rsp ; mov eax, 0x2d ; pop rbp ; ret
0xffffff8000285971 : mov rbp, rsp ; mov eax, 0x2e ; pop rbp ; ret
0xffffff80007b01e1 : mov rbp, rsp ; mov eax, 0x4000000 ; pop rbp ; ret
0xffffff800077c2a1 : mov rbp, rsp ; mov eax, 0x4e ; pop rbp ; ret
0xffffff8000797031 : mov rbp, rsp ; mov eax, 0x58 ; pop rbp ; ret
0xffffff8000657a71 : mov rbp, rsp ; mov eax, 0x600 ; pop rbp ; ret
0xffffff8000526b41 : mov rbp, rsp ; mov eax, 0x66 ; pop rbp ; ret
0xffffff800065a4a1 : mov rbp, rsp ; mov eax, 0x71 ; pop rbp ; ret
0xffffff800033f401 : mov rbp, rsp ; mov eax, 0x90 ; pop rbp ; ret
0xffffff8000797251 : mov rbp, rsp ; mov eax, 0xa ; pop rbp ; ret
0xffffff80008455f1 : mov rbp, rsp ; mov eax, 0xa9 ; pop rbp ; ret
0xffffff8000366e81 : mov rbp, rsp ; mov eax, 0xc ; pop rbp ; ret
0xffffff80007960c1 : mov rbp, rsp ; mov eax, 0xe0 ; pop rbp ; ret
0xffffff80008b3c01 : mov rbp, rsp ; mov eax, 0xe0000001 ; pop rbp ; ret
0xffffff800085b7b1 : mov rbp, rsp ; mov eax, 0xe00002c7 ; pop rbp ; ret
0xffffff8000310e41 : mov rbp, rsp ; mov eax, 1 ; pop rbp ; ret
0xffffff80003bb4c1 : mov rbp, rsp ; mov eax, 3 ; pop rbp ; ret
0xffffff80002a0b41 : mov rbp, rsp ; mov eax, 4 ; pop rbp ; ret
0xffffff800029c5d1 : mov rbp, rsp ; mov eax, 5 ; pop rbp ; ret
0xffffff80002cee81 : mov rbp, rsp ; mov eax, 6 ; pop rbp ; ret
0xffffff800050bfd1 : mov rbp, rsp ; mov eax, 9 ; pop rbp ; ret
0xffffff8000831441 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x10] ; dec eax ; pop rbp ; ret
0xffffff800082bac1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005e0481 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff80008155d1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80005cf381 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff800080f811 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80008107c1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x24] ; pop rbp ; ret
0xffffff80008121a1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff8000780141 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x2c] ; pop rbp ; ret
0xffffff80002f6971 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082c6d1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x34] ; pop rbp ; ret
0xffffff80008980b1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x38] ; inc eax ; pop rbp ; ret
0xffffff8000350731 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80008980c1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x3c] ; inc eax ; pop rbp ; ret
0xffffff80004b3b31 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff80004b3be1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x44] ; pop rbp ; ret
0xffffff80002ae7f1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80004b3c01 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80004b40e1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80008980a1 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x58] ; inc eax ; pop rbp ; ret
0xffffff800089fb21 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80002db221 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa021 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x6c] ; pop rbp ; ret
0xffffff80002db701 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff80005e0451 : mov rbp, rsp ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff8000767821 : mov rbp, rsp ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028bb51 : mov rbp, rsp ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff80004b3a31 : mov rbp, rsp ; mov eax, dword ptr [rdi] ; and eax, 1 ; pop rbp ; ret
0xffffff80004a6de1 : mov rbp, rsp ; mov eax, dword ptr [rdi] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80004a54f1 : mov rbp, rsp ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff800049e4b1 : mov rbp, rsp ; mov eax, r8d ; pop rbp ; ret
0xffffff800088e841 : mov rbp, rsp ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff8000350701 : mov rbp, rsp ; mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff8000796241 : mov rbp, rsp ; mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000698731 : mov rbp, rsp ; mov qword ptr [rdi + 0x38], rsi ; pop rbp ; ret
0xffffff8000342b01 : mov rbp, rsp ; mov qword ptr [rdi + 0x58], rsi ; pop rbp ; ret
0xffffff800031ed71 : mov rbp, rsp ; mov qword ptr [rdi + 0x60], rsi ; pop rbp ; ret
0xffffff80004b40c1 : mov rbp, rsp ; mov qword ptr [rdi + 0x68], rsi ; pop rbp ; ret
0xffffff80004b3c91 : mov rbp, rsp ; mov qword ptr [rdi + 0x78], rsi ; pop rbp ; ret
0xffffff8000796091 : mov rbp, rsp ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80002c80b1 : mov rbp, rsp ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039f201 : mov rbp, rsp ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff8000870c31 : mov rbp, rsp ; mov rax, qword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff80007951c1 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000516521 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002db141 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80002db561 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800081e941 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002a0401 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800077e091 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000342181 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80002db571 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80004b40b1 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b40a1 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004b3c81 : mov rbp, rsp ; mov rax, qword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff8000303741 : mov rbp, rsp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff80004f9f01 : mov rbp, rsp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028ba51 : mov rbp, rsp ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0xffffff8000372941 : mov rbp, rsp ; mov rax, rdi ; pop rbp ; ret
0xffffff800049e6d1 : mov rbp, rsp ; mov rax, rsi ; pop rbp ; ret
0xffffff80004fa641 : mov rbp, rsp ; mov word ptr [rdi + 0x6a], si ; pop rbp ; ret
0xffffff800029ed11 : mov rbp, rsp ; movsx edi, dil ; pop rbp ; jmp rsi
0xffffff80007960a1 : mov rbp, rsp ; movsxd rax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007961e1 : mov rbp, rsp ; movsxd rax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082baa1 : mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800086b6d1 : mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff8000898091 : mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000516481 : mov rbp, rsp ; movzx eax, byte ptr [rdi] ; pop rbp ; ret
0xffffff80002b7b01 : mov rbp, rsp ; movzx eax, dil ; pop rbp ; ret
0xffffff800082bab1 : mov rbp, rsp ; movzx eax, word ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80007960d1 : mov rbp, rsp ; movzx eax, word ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80004fa081 : mov rbp, rsp ; movzx eax, word ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa651 : mov rbp, rsp ; movzx eax, word ptr [rdi + 0x6a] ; pop rbp ; ret
0xffffff8000811171 : mov rbp, rsp ; movzx eax, word ptr [rdi + 8] ; pop rbp ; ret
0xffffff80004b3af1 : mov rbp, rsp ; or byte ptr [rdi + 1], 0x10 ; pop rbp ; ret
0xffffff80004b3a81 : mov rbp, rsp ; or byte ptr [rdi], 0x10 ; pop rbp ; ret
0xffffff80004b3ad1 : mov rbp, rsp ; or byte ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80004b3b11 : mov rbp, rsp ; or byte ptr [rdi], 0x40 ; pop rbp ; ret
0xffffff80002510e1 : mov rbp, rsp ; pop rbp ; ret
0xffffff8000802a71 : mov rbp, rsp ; sfence ; pop rbp ; ret
0xffffff800049e421 : mov rbp, rsp ; shr edi, 0x18 ; mov eax, edi ; pop rbp ; ret
0xffffff80004d26d1 : mov rbp, rsp ; shr edi, 4 ; mov eax, edi ; pop rbp ; ret
0xffffff80003403c1 : mov rbp, rsp ; test rsi, rsi ; je 0xffffff80003403d4 ; pop rbp ; ret
0xffffff800028d6f1 : mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0xffffff80007c1f26 : mov rbx, qword ptr [r12] ; mov rdi, r12 ; call 0xffffff800010e149
0xffffff8000756d97 : mov rbx, qword ptr [rax + 0x68] ; mov rdi, r14 ; call 0xffffff8000393049
0xffffff800058dbde : mov rbx, qword ptr [rbp - 0x1d0] ; jmp rcx
0xffffff80007eaea9 : mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff800039ff35 : mov rbx, qword ptr [rbp - 0x30] ; mov edx, dword ptr [rbp - 0x38] ; jmp rax
0xffffff800029dafe : mov rbx, qword ptr [rbp - 0x78] ; mov rsi, rbx ; call r15
0xffffff800064bc2c : mov rbx, qword ptr [rbp - 0x80] ; jmp rcx
0xffffff800082a1da : mov rbx, r10 ; call rbx
0xffffff800071a3a8 : mov rbx, r10 ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff800071a3c8
0xffffff80006b26c9 : mov rbx, r12 ; mov rdx, r15 ; call rax
0xffffff800045172f : mov rbx, r15 ; je 0xffffff80004516e9 ; jmp 0xffffff8000451743
0xffffff80005ca477 : mov rbx, r15 ; jmp rcx
0xffffff80006a6e04 : mov rbx, r15 ; mov rdi, r12 ; call 0xffffff8000393048
0xffffff80004cff27 : mov rbx, r8 ; call 0xffffff80004fc1e5
0xffffff800084c955 : mov rbx, r8 ; call qword ptr [rbx]
0xffffff80003a03e7 : mov rbx, r8 ; call rax
0xffffff80002a635f : mov rbx, r8 ; call rcx
0xffffff8000381ed6 : mov rbx, r9 ; call 0xffffff800028e155
0xffffff8000766356 : mov rbx, r9 ; call 0xffffff80003923e6
0xffffff80005931b6 : mov rbx, r9 ; mov rcx, rbx ; call rax
0xffffff80007662cf : mov rbx, r9 ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff80005365b2 : mov rbx, rax ; call 0xffffff80003928a5
0xffffff800076520d : mov rbx, rax ; call 0xffffff8000393046
0xffffff8000267807 : mov rbx, rax ; call rbx
0xffffff800063500a : mov rbx, rax ; test rbx, rbx ; jne 0xffffff800063500b ; jmp 0xffffff8000634fdf
0xffffff800054ddb8 : mov rbx, rcx ; call r15
0xffffff800052bcf9 : mov rbx, rcx ; call rax
0xffffff80004cfdfe : mov rbx, rcx ; mov r8, qword ptr [rbp + 0x18] ; call 0xffffff80004fc029
0xffffff80004e2f51 : mov rbx, rdi ; call 0xffffff800010e146
0xffffff80007d6121 : mov rbx, rdi ; call rax
0xffffff800054dfaa : mov rbx, rdx ; call rbx
0xffffff800049fc37 : mov rbx, rsi ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff800055d47e : mov rbx, rsi ; mov rsi, qword ptr [rdx + rcx*8 + 0x48] ; call rax
0xffffff80005197bf : mov rbx, rsi ; xor r14d, r14d ; jmp rcx
0xffffff8000754681 : mov rcx, qword ptr [r15 + 8] ; jmp 0xffffff8000754697
0xffffff800084de7c : mov rcx, qword ptr [r9 + 0x28] ; test rcx, rcx ; mov edx, r8d ; jmp 0xffffff800084de9b
0xffffff800079194e : mov rcx, qword ptr [rbp + 0x10] ; call rax
0xffffff80005330e3 : mov rcx, qword ptr [rbp - 0x30] ; call rax
0xffffff80008f7606 : mov rcx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80005d19a9 : mov rcx, qword ptr [rbp - 0x38] ; jmp rax
0xffffff8000890af5 : mov rcx, qword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000845565 : mov rcx, qword ptr [rbp - 0x38] ; mov rdi, qword ptr [rbp - 0x30] ; call rcx
0xffffff800089082e : mov rcx, qword ptr [rbp - 0x40] ; mov r8, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3f32 : mov rcx, qword ptr [rbp - 0x40] ; mov r8d, dword ptr [rbp - 0x34] ; call rbx
0xffffff8000800548 : mov rcx, qword ptr [rbp - 0x48] ; jmp rax
0xffffff80008fbd96 : mov rcx, qword ptr [rbp - 0x48] ; mov r8, qword ptr [rbp - 0x40] ; call rbx
0xffffff80008f6fcc : mov rcx, qword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; call r14
0xffffff80008f708f : mov rcx, qword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; call rbx
0xffffff800081cdbb : mov rcx, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x50] ; call rcx
0xffffff80007d8660 : mov rcx, qword ptr [rbp - 0x60] ; call rax
0xffffff800088bb32 : mov rcx, qword ptr [rbp - 0x60] ; mov r8, r15 ; call r9
0xffffff800088be2b : mov rcx, qword ptr [rbp - 0x78] ; mov r8, r15 ; call r9
0xffffff800066de34 : mov rcx, qword ptr [rbx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; jmp 0xffffff800066de09
0xffffff8000885a47 : mov rcx, qword ptr [rbx + 0x20] ; call r15
0xffffff800084234b : mov rcx, qword ptr [rbx + 0x48] ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff80003a296b : mov rcx, qword ptr [rcx + 0x50] ; test rcx, rcx ; je 0xffffff80003a297f ; call rcx
0xffffff800086dfab : mov rcx, qword ptr [rcx + 0x50] ; test rcx, rcx ; je 0xffffff800086dfbf ; call rcx
0xffffff8000811319 : mov rcx, qword ptr [rcx + 0x58] ; xor esi, esi ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80003a299b : mov rcx, qword ptr [rcx + 0x60] ; test rcx, rcx ; je 0xffffff80003a29af ; call rcx
0xffffff8000831f7f : mov rcx, qword ptr [rcx + 8] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff800075877e : mov rcx, qword ptr [rcx + 8] ; or byte ptr [rcx + rax], 0xc ; pop rbp ; ret
0xffffff8000758760 : mov rcx, qword ptr [rcx + 8] ; or byte ptr [rcx + rax], 4 ; pop rbp ; ret
0xffffff8000288fe8 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff8000289002 ; call rcx
0xffffff800028a768 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff800028a782 ; call rcx
0xffffff80002b0098 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80002b00b2 ; call rcx
0xffffff80002b0348 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80002b0362 ; call rcx
0xffffff80003ab868 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; je 0xffffff80003ab882 ; call rcx
0xffffff8000250025 : mov rcx, qword ptr [rcx] ; cmp rcx, rdx ; jne 0xffffff8000250029 ; pop rbp ; ret
0xffffff8000328410 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000328409 ; pop rbp ; ret
0xffffff80003284ad : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80003284a9 ; pop rbp ; ret
0xffffff800040c040 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800040c029 ; pop rbp ; ret
0xffffff800041ece8 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800041ece9 ; pop rbp ; ret
0xffffff8000448f78 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000448f79 ; pop rbp ; ret
0xffffff8000530ecf : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000530ec9 ; pop rbp ; ret
0xffffff8000530f6d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000530f69 ; pop rbp ; ret
0xffffff800057f1cd : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800057f1c9 ; pop rbp ; ret
0xffffff800058248c : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000582479 ; pop rbp ; ret
0xffffff80005825ac : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000582599 ; pop rbp ; ret
0xffffff80005a8f7d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005a8f79 ; pop rbp ; ret
0xffffff80005b111d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005b1119 ; pop rbp ; ret
0xffffff80005e47bb : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005e47b9 ; pop rbp ; ret
0xffffff80005e485d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80005e4859 ; pop rbp ; ret
0xffffff8000687f9d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff8000687f99 ; pop rbp ; ret
0xffffff80006a43fd : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80006a43f9 ; pop rbp ; ret
0xffffff800077e295 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800077e299 ; pop rbp ; ret
0xffffff800084cc18 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800084cc19 ; pop rbp ; ret
0xffffff800084fc48 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff800084fc49 ; pop rbp ; ret
0xffffff80008c680c : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c6809 ; pop rbp ; ret
0xffffff80008c68ad : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c68a9 ; pop rbp ; ret
0xffffff80008c77f6 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c77e9 ; pop rbp ; ret
0xffffff80008c87ac : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c87a9 ; pop rbp ; ret
0xffffff80008c884d : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c8849 ; pop rbp ; ret
0xffffff80008c975b : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c9759 ; pop rbp ; ret
0xffffff80008c97fd : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0xffffff80008c97f9 ; pop rbp ; ret
0xffffff80008127ed : mov rcx, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008456e2 : mov rcx, qword ptr [rdi + 0x38] ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008dfc1c : mov rcx, qword ptr [rdi + 0x48] ; mov rdi, rax ; pop rbp ; jmp r8
0xffffff80003992a0 : mov rcx, qword ptr [rdi] ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0xffffff80002f7ce1 : mov rcx, qword ptr [rdx + 0x50] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff80005801b1 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005801a9 ; pop rbp ; ret
0xffffff8000581564 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000581559 ; pop rbp ; ret
0xffffff8000582531 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000582529 ; pop rbp ; ret
0xffffff80005b2151 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005b2149 ; pop rbp ; ret
0xffffff80005bf821 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005bf819 ; pop rbp ; ret
0xffffff80005ebec1 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80005ebeb9 ; pop rbp ; ret
0xffffff8000637ad1 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff8000637ac9 ; pop rbp ; ret
0xffffff80008c78a1 : mov rcx, qword ptr [rdx] ; test rcx, rcx ; jne 0xffffff80008c7899 ; pop rbp ; ret
0xffffff800086699e : mov rcx, qword ptr [rip + 0x2cfe5b] ; pop rbp ; jmp rax
0xffffff800086697e : mov rcx, qword ptr [rip + 0x2cfe7b] ; pop rbp ; jmp rax
0xffffff8000847eb0 : mov rcx, qword ptr [rsi + 0x30] ; mov edx, eax ; jmp 0xffffff8000847ecb
0xffffff8000508291 : mov rcx, qword ptr [rsi + 8] ; sub eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80007ec9a4 : mov rcx, r10 ; call rbx
0xffffff80008bcff4 : mov rcx, r10 ; mov r8, r11 ; call r14
0xffffff80008bd2b6 : mov rcx, r10 ; mov r8, r14 ; call r15
0xffffff80008bd693 : mov rcx, r10 ; mov r8, r15 ; call r14
0xffffff80008bcfc0 : mov rcx, r11 ; call r14
0xffffff8000757acf : mov rcx, r12 ; call r15
0xffffff80005343c1 : mov rcx, r12 ; call r8
0xffffff800090946a : mov rcx, r12 ; call rax
0xffffff80002d9f6a : mov rcx, r13 ; call 0xffffff800028e1b9
0xffffff8000829e5c : mov rcx, r13 ; call r15
0xffffff80008f5f56 : mov rcx, r13 ; call rax
0xffffff80008f8fca : mov rcx, r13 ; call rbx
0xffffff800074acb4 : mov rcx, r13 ; mov r8, r12 ; mov r9, r15 ; call rax
0xffffff8000837196 : mov rcx, r13 ; mov r8, r14 ; call r9
0xffffff80006676b0 : mov rcx, r13 ; mov r8, rdi ; call 0xffffff800028e4a9
0xffffff80008f7aad : mov rcx, r13 ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fa87a : mov rcx, r13 ; mov r9, qword ptr [rbp - 0x38] ; call r10
0xffffff80008fa42e : mov rcx, r13 ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f6523 : mov rcx, r13 ; mov r9, r12 ; call rbx
0xffffff80008f6a04 : mov rcx, r13 ; mov r9, r14 ; call rax
0xffffff800066a017 : mov rcx, r14 ; call 0xffffff800028e4a6
0xffffff8000770ff6 : mov rcx, r14 ; call 0xffffff8000396b86
0xffffff80002672b9 : mov rcx, r14 ; call qword ptr [rbx]
0xffffff80008bd23a : mov rcx, r14 ; call r15
0xffffff80008fe581 : mov rcx, r14 ; call r8
0xffffff8000901ace : mov rcx, r14 ; call r9
0xffffff80008f5975 : mov rcx, r14 ; call rax
0xffffff80008f7f5e : mov rcx, r14 ; call rbx
0xffffff80004578e9 : mov rcx, r14 ; jmp rax
0xffffff800051bc8c : mov rcx, r14 ; mov r8, rbx ; call rax
0xffffff80008fa635 : mov rcx, r14 ; mov r9d, dword ptr [rbp - 0x44] ; call r10
0xffffff8000757623 : mov rcx, r15 ; call r12
0xffffff80008bd65c : mov rcx, r15 ; call r14
0xffffff800049f9aa : mov rcx, r15 ; call rax
0xffffff80008f6784 : mov rcx, r15 ; mov r9, r14 ; call rax
0xffffff80008b2d66 : mov rcx, r8 ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff8000898919 : mov rcx, r8 ; mov r8d, r9d ; call r10
0xffffff80008456bc : mov rcx, r8 ; pop rbp ; jmp rax
0xffffff80008744ba : mov rcx, r9 ; pop rbp ; jmp r11
0xffffff800089285c : mov rcx, r9 ; pop rbp ; jmp rax
0xffffff80003888fa : mov rcx, rax ; call 0xffffff8000384b45
0xffffff80008bde1b : mov rcx, rax ; call r12
0xffffff80004b4440 : mov rcx, rax ; mov r9d, ebx ; call 0xffffff80004c06f8
0xffffff800067a806 : mov rcx, rax ; mov rax, rcx ; pop rbp ; ret
0xffffff800089281b : mov rcx, rax ; pop rbp ; jmp r8
0xffffff800082a29b : mov rcx, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80002cf628 : mov rcx, rbx ; call rax
0xffffff800028e84d : mov rcx, rdx ; jne 0xffffff800028e846 ; pop rbp ; ret
0xffffff80004a53cd : mov rcx, rdx ; jne 0xffffff80004a53c6 ; pop rbp ; ret
0xffffff800038975f : mov rcx, rdx ; shr rcx, 0x20 ; call qword ptr [rax]
0xffffff8000366910 : mov rcx, rsi ; jne 0xffffff8000366909 ; mov rax, rdi ; pop rbp ; ret
0xffffff80002908e2 : mov rcx, rsi ; mov rsi, rdi ; jne 0xffffff80002908d9 ; pop rbp ; ret
0xffffff8000376868 : mov rdi, qword ptr [r12 + 0x10] ; call rax
0xffffff800042113f : mov rdi, qword ptr [r12 + 0x28] ; mov rsi, r9 ; call rcx
0xffffff80003768b8 : mov rdi, qword ptr [r13 + 0x10] ; call rax
0xffffff800089426b : mov rdi, qword ptr [r13 + 0x18] ; mov rsi, r13 ; call r15
0xffffff8000375d50 : mov rdi, qword ptr [r14 + 0x10] ; call rax
0xffffff8000901830 : mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff8000822911 : mov rdi, qword ptr [r14 + 0x48] ; xor esi, esi ; call r15
0xffffff8000900be0 : mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff80009002b0 : mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff80005028f5 : mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff80009018f0 : mov rdi, qword ptr [r14 + 0x88] ; call rcx
0xffffff80008f5320 : mov rdi, qword ptr [r14 + 0xe0] ; call rcx
0xffffff8000376488 : mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff8000288c26 : mov rdi, qword ptr [r15 + 0x20] ; call rax
0xffffff80008e674c : mov rdi, qword ptr [r15 + 0xa0] ; call 0xffffff8000392a49
0xffffff80007f6831 : mov rdi, qword ptr [rax + 0x10] ; call 0xffffff8000392a46
0xffffff800076a12d : mov rdi, qword ptr [rax + 0x10] ; call 0xffffff8000392a47
0xffffff8000884cb8 : mov rdi, qword ptr [rax + 0x10] ; call 0xffffff80008c0f86
0xffffff8000401e4f : mov rdi, qword ptr [rax + 0x1a0] ; call 0xffffff800010e089
0xffffff80004c40c4 : mov rdi, qword ptr [rax + 0xd0] ; call 0xffffff8000510379
0xffffff800082ca41 : mov rdi, qword ptr [rax + rbx*8] ; mov rsi, r14 ; call rcx
0xffffff80007b9523 : mov rdi, qword ptr [rax] ; test rdi, rdi ; jne 0xffffff80007b9529 ; pop rbp ; ret
0xffffff800084d203 : mov rdi, qword ptr [rbp + 0x20] ; jmp rdx
0xffffff80007c7b47 : mov rdi, qword ptr [rbp - 0x138] ; call 0xffffff80007d3e29
0xffffff80006a1257 : mov rdi, qword ptr [rbp - 0x158] ; call rax
0xffffff80005e2115 : mov rdi, qword ptr [rbp - 0x178] ; call rax
0xffffff80006594e5 : mov rdi, qword ptr [rbp - 0x1a8] ; call qword ptr [rax]
0xffffff800076346d : mov rdi, qword ptr [rbp - 0x30] ; call 0xffffff8000392a47
0xffffff8000763592 : mov rdi, qword ptr [rbp - 0x30] ; call 0xffffff8000393047
0xffffff8000845569 : mov rdi, qword ptr [rbp - 0x30] ; call rcx
0xffffff80006064ad : mov rdi, qword ptr [rbp - 0x30] ; mov esi, r13d ; call rbx
0xffffff80008fb8c3 : mov rdi, qword ptr [rbp - 0x30] ; mov rsi, r15 ; call rbx
0xffffff8000845558 : mov rdi, qword ptr [rbp - 0x30] ; mov rsi, rax ; call rcx
0xffffff8000763459 : mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e7
0xffffff8000763a8e : mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e8
0xffffff8000763a8d : mov rdi, qword ptr [rbp - 0x38] ; call 0xffffff80003923e9
0xffffff80008f8419 : mov rdi, qword ptr [rbp - 0x40] ; mov rsi, r14 ; call r15
0xffffff800054544c : mov rdi, qword ptr [rbp - 0x48] ; mov rsi, r12 ; call r14
0xffffff800081cdbf : mov rdi, qword ptr [rbp - 0x50] ; call rcx
0xffffff800081cdae : mov rdi, qword ptr [rbp - 0x50] ; mov rsi, rax ; call rcx
0xffffff8000720c80 : mov rdi, qword ptr [rbp - 0x50] ; movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000720ca0
0xffffff80008f1792 : mov rdi, qword ptr [rbp - 0x60] ; call rbx
0xffffff80008f181b : mov rdi, qword ptr [rbp - 0x60] ; call rcx
0xffffff80006e7ea8 : mov rdi, qword ptr [rbp - 0x650] ; call 0xffffff80006e40c9
0xffffff80002d6678 : mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000392936
0xffffff80002d6d45 : mov rdi, qword ptr [rbp - 0x68] ; call 0xffffff8000393046
0xffffff800051cf5a : mov rdi, qword ptr [rbp - 0x68] ; mov rdx, r15 ; call rax
0xffffff80003aa485 : mov rdi, qword ptr [rbp - 0x70] ; mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003aa604 : mov rdi, qword ptr [rbp - 0x70] ; mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff800068e28d : mov rdi, qword ptr [rbp - 0x80] ; mov rdx, rbx ; call rax
0xffffff80004731c4 : mov rdi, qword ptr [rbp - 0xb8] ; call 0xffffff80007af419
0xffffff8000651a85 : mov rdi, qword ptr [rbp - 0xb8] ; call qword ptr [r15]
0xffffff80006521aa : mov rdi, qword ptr [rbp - 0xc8] ; call qword ptr [r15]
0xffffff80006521e1 : mov rdi, qword ptr [rbp - 0xc8] ; call qword ptr [rbx]
0xffffff800063415e : mov rdi, qword ptr [rbp - 0xd0] ; call 0xffffff80007d0469
0xffffff800070f620 : mov rdi, qword ptr [rbp - 0xe8] ; call 0xffffff80004bb929
0xffffff8000389828 : mov rdi, qword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff8000375e42 : mov rdi, qword ptr [rbx + 0x10] ; call rax
0xffffff8000389855 : mov rdi, qword ptr [rbx + 0x10] ; mov rsi, qword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff80008944f9 : mov rdi, qword ptr [rbx + 0x18] ; mov rsi, rbx ; call r15
0xffffff8000288df6 : mov rdi, qword ptr [rbx + 0x20] ; call rax
0xffffff8000288f38 : mov rdi, qword ptr [rbx + 0x20] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800053a012 : mov rdi, qword ptr [rbx + 0x28] ; call rax
0xffffff80005526f2 : mov rdi, qword ptr [rbx + 0x30] ; mov esi, 1 ; call rax
0xffffff8000821a8d : mov rdi, qword ptr [rbx + 0x48] ; call rax
0xffffff8000840415 : mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff80008808ae : mov rdi, qword ptr [rbx + 0x50] ; mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff800084233e : mov rdi, qword ptr [rbx + 0x50] ; mov rsi, rax ; call rcx
0xffffff8000799f14 : mov rdi, qword ptr [rbx + 0x60] ; mov esi, 1 ; call rax
0xffffff80002a14c0 : mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80002a14ad : mov rdi, qword ptr [rbx + 8] ; call rcx
0xffffff800074b480 : mov rdi, qword ptr [rbx + 8] ; xor esi, esi ; xor edx, edx ; call qword ptr [rbx]
0xffffff80003bab23 : mov rdi, qword ptr [rcx + 0x3a8] ; pop rbp ; jmp rax
0xffffff80003baaea : mov rdi, qword ptr [rcx + 0x490] ; pop rbp ; jmp rax
0xffffff80007b8803 : mov rdi, qword ptr [rdi] ; test rdi, rdi ; jne 0xffffff80007b8809 ; pop rbp ; ret
0xffffff80008791f9 : mov rdi, qword ptr [rdx] ; mov rsi, rbx ; call rax
0xffffff80008dc640 : mov rdi, qword ptr [rip + 0x208e49] ; call 0xffffff8000858909
0xffffff800086c7a9 : mov rdi, qword ptr [rip + 0x278ce0] ; call 0xffffff8000858a29
0xffffff80008667fd : mov rdi, qword ptr [rip + 0x27ec34] ; call 0xffffff8000392a49
0xffffff800086677e : mov rdi, qword ptr [rip + 0x27ecb3] ; call 0xffffff8000392a49
0xffffff80008a6e13 : mov rdi, qword ptr [rip + 0x28e36e] ; call 0xffffff8000393049
0xffffff80008a6e05 : mov rdi, qword ptr [rip + 0x28e37c] ; call 0xffffff8000393049
0xffffff8000786d6d : mov rdi, qword ptr [rip + 0x3a851c] ; call 0xffffff8000393049
0xffffff80006b67d6 : mov rdi, qword ptr [rip + 0x3be433] ; call 0xffffff8000392a49
0xffffff8000746d71 : mov rdi, qword ptr [rip + 0x3e8518] ; call 0xffffff8000393049
0xffffff80005e673c : mov rdi, qword ptr [rip + 0x482565] ; call 0xffffff8000392a49
0xffffff8000586811 : mov rdi, qword ptr [rip + 0x4e2490] ; call 0xffffff8000392a49
0xffffff8000618c5d : mov rdi, qword ptr [rip + 0x50b2cc] ; call 0xffffff80002d4ef9
0xffffff800053677d : mov rdi, qword ptr [rip + 0x532524] ; call 0xffffff8000392a49
0xffffff80005367fd : mov rdi, qword ptr [rip + 0x53314c] ; call 0xffffff8000392a49
0xffffff8000546d9e : mov rdi, qword ptr [rip + 0x59155b] ; call 0xffffff8000393049
0xffffff80004b6df1 : mov rdi, qword ptr [rip + 0x61fbb8] ; call 0xffffff8000393049
0xffffff80004b6690 : mov rdi, qword ptr [rip + 0x620319] ; call 0xffffff8000392939
0xffffff80004d6dd4 : mov rdi, qword ptr [rip + 0x642f15] ; call 0xffffff8000393049
0xffffff80004d6d41 : mov rdi, qword ptr [rip + 0x642fa8] ; call 0xffffff8000393049
0xffffff80003ac1f3 : mov rdi, qword ptr [rip + 0x7260a6] ; call rax
0xffffff80003ac103 : mov rdi, qword ptr [rip + 0x726196] ; call rax
0xffffff80003ac007 : mov rdi, qword ptr [rip + 0x726292] ; call rax
0xffffff80003aade2 : mov rdi, qword ptr [rip + 0x726dcf] ; call rax
0xffffff80003a92ab : mov rdi, qword ptr [rip + 0x728906] ; call rax
0xffffff8000892ab6 : mov rdi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff80008a7586 : mov rdi, r10 ; pop rbp ; jmp rax
0xffffff80007c1f2a : mov rdi, r12 ; call 0xffffff800010e145
0xffffff80004e3a66 : mov rdi, r12 ; call 0xffffff800010e146
0xffffff8000601bd7 : mov rdi, r12 ; call 0xffffff800010e149
0xffffff8000674bde : mov rdi, r12 ; call 0xffffff8000297b46
0xffffff800042262e : mov rdi, r12 ; call 0xffffff800029e855
0xffffff800079943b : mov rdi, r12 ; call 0xffffff80002b5745
0xffffff80003504c1 : mov rdi, r12 ; call 0xffffff800034ab69
0xffffff8000763a6c : mov rdi, r12 ; call 0xffffff80003923e6
0xffffff8000763a6b : mov rdi, r12 ; call 0xffffff80003923e7
0xffffff8000763a6a : mov rdi, r12 ; call 0xffffff80003923e8
0xffffff80003063a1 : mov rdi, r12 ; call 0xffffff8000392605
0xffffff800052668f : mov rdi, r12 ; call 0xffffff80003928a5
0xffffff80004d6706 : mov rdi, r12 ; call 0xffffff8000392935
0xffffff80004d6705 : mov rdi, r12 ; call 0xffffff8000392936
0xffffff80004d6704 : mov rdi, r12 ; call 0xffffff8000392937
0xffffff800076482d : mov rdi, r12 ; call 0xffffff8000392a46
0xffffff80003e6dc0 : mov rdi, r12 ; call 0xffffff8000393045
0xffffff80007649af : mov rdi, r12 ; call 0xffffff8000393046
0xffffff80003ea956 : mov rdi, r12 ; call 0xffffff8000393049
0xffffff8000348c20 : mov rdi, r12 ; call 0xffffff8000394ef5
0xffffff800078af9b : mov rdi, r12 ; call 0xffffff8000397205
0xffffff800028849e : mov rdi, r12 ; call 0xffffff8000397209
0xffffff8000708cd7 : mov rdi, r12 ; call 0xffffff80006d4f75
0xffffff8000668780 : mov rdi, r12 ; call 0xffffff80007b4a65
0xffffff80007d8f87 : mov rdi, r12 ; call 0xffffff80007b51f5
0xffffff80007689a8 : mov rdi, r12 ; call 0xffffff80007c4bb5
0xffffff8000446829 : mov rdi, r12 ; call 0xffffff80007c4bb9
0xffffff80008df279 : mov rdi, r12 ; call 0xffffff80008deab9
0xffffff80004e1cc0 : mov rdi, r12 ; call 0xffffff80008fdf95
0xffffff800086db54 : mov rdi, r12 ; call qword ptr [rax + 0x28]
0xffffff800081c779 : mov rdi, r12 ; call qword ptr [rax + 0x38]
0xffffff800032e938 : mov rdi, r12 ; call qword ptr [rax]
0xffffff8000625402 : mov rdi, r12 ; call r14
0xffffff80005293c3 : mov rdi, r12 ; call rax
0xffffff80006d441f : mov rdi, r12 ; jmp 0xffffff80006d43ea
0xffffff80006357d5 : mov rdi, r12 ; mov esi, dword ptr [rbp - 0x54] ; mov edx, r15d ; call rax
0xffffff800090a534 : mov rdi, r12 ; mov esi, r13d ; call rcx
0xffffff8000420b58 : mov rdi, r12 ; mov esi, r14d ; call 0xffffff80004ccdd8
0xffffff800090a2f8 : mov rdi, r12 ; mov esi, r15d ; call rcx
0xffffff80007a5bab : mov rdi, r12 ; mov r15, rdx ; call rax
0xffffff80006b26c6 : mov rdi, r12 ; mov rbx, r12 ; mov rdx, r15 ; call rax
0xffffff80004e4603 : mov rdi, r12 ; mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff800064ab68 : mov rdi, r12 ; mov rdx, r13 ; call rax
0xffffff80007c569b : mov rdi, r12 ; mov rdx, r13 ; call rcx
0xffffff80005398b5 : mov rdi, r12 ; mov rdx, r14 ; call rax
0xffffff8000621aab : mov rdi, r12 ; mov rdx, r15 ; call rax
0xffffff80008f5ac0 : mov rdi, r12 ; mov rdx, r15 ; mov r8, r14 ; call rax
0xffffff80005dca12 : mov rdi, r12 ; mov rdx, rbx ; call rax
0xffffff80008fcb17 : mov rdi, r12 ; mov rsi, r13 ; mov rcx, r15 ; call rax
0xffffff8000539913 : mov rdi, r12 ; mov rsi, r14 ; call rax
0xffffff80007eaed1 : mov rdi, r12 ; mov rsi, r14 ; call rbx
0xffffff800028d7c7 : mov rdi, r12 ; mov rsi, r15 ; call r14
0xffffff80007cadfa : mov rdi, r12 ; mov rsi, r15 ; call rax
0xffffff80007a73a3 : mov rdi, r12 ; mov rsi, r15 ; call rcx
0xffffff80008ee158 : mov rdi, r12 ; mov rsi, r15 ; mov edx, r14d ; call rcx
0xffffff800049d1d0 : mov rdi, r12 ; mov rsi, r15 ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff8000906e38 : mov rdi, r12 ; mov rsi, r15 ; mov rdx, r14 ; call rcx
0xffffff80008876da : mov rdi, r12 ; mov rsi, rax ; call rbx
0xffffff8000543b69 : mov rdi, r12 ; mov rsi, rbx ; call r14
0xffffff8000421e93 : mov rdi, r13 ; call 0xffffff800010e145
0xffffff8000765d9e : mov rdi, r13 ; call 0xffffff80003923e6
0xffffff8000566234 : mov rdi, r13 ; call 0xffffff80003924d5
0xffffff8000316339 : mov rdi, r13 ; call 0xffffff8000392605
0xffffff80003164b7 : mov rdi, r13 ; call 0xffffff8000392795
0xffffff800076e3f8 : mov rdi, r13 ; call 0xffffff8000392936
0xffffff8000696772 : mov rdi, r13 ; call 0xffffff8000392a45
0xffffff8000764586 : mov rdi, r13 ; call 0xffffff8000392a46
0xffffff80007644f6 : mov rdi, r13 ; call 0xffffff8000393046
0xffffff8000299afd : mov rdi, r13 ; call 0xffffff8000393049
0xffffff800059714f : mov rdi, r13 ; call 0xffffff80005833e5
0xffffff80005d4189 : mov rdi, r13 ; call 0xffffff80005d4c79
0xffffff80006ad897 : mov rdi, r13 ; call 0xffffff80006a9b85
0xffffff800056b0bd : mov rdi, r13 ; call 0xffffff80006b73b5
0xffffff800056b0bc : mov rdi, r13 ; call 0xffffff80006b73b6
0xffffff80006187cd : mov rdi, r13 ; call 0xffffff80007b4a65
0xffffff80007c897c : mov rdi, r13 ; call 0xffffff80007c4bb5
0xffffff8000878773 : mov rdi, r13 ; call 0xffffff80008749e5
0xffffff800087a4ca : mov rdi, r13 ; call qword ptr [rax + 0x28]
0xffffff80008aeab0 : mov rdi, r13 ; call qword ptr [rax + 0x38]
0xffffff800053e583 : mov rdi, r13 ; call r12
0xffffff80008deb98 : mov rdi, r13 ; call r15
0xffffff80004eb925 : mov rdi, r13 ; call rax
0xffffff80008214d8 : mov rdi, r13 ; call rbx
0xffffff80007c7dc3 : mov rdi, r13 ; call rcx
0xffffff8000877307 : mov rdi, r13 ; mov ebx, ecx ; call qword ptr [rax + 0x28]
0xffffff80006359ab : mov rdi, r13 ; mov edx, r14d ; call rax
0xffffff80007487a0 : mov rdi, r13 ; mov esi, ebx ; call 0xffffff8000370e88
0xffffff8000487082 : mov rdi, r13 ; mov esi, r12d ; call 0xffffff80008032c8
0xffffff800090a0f4 : mov rdi, r13 ; mov esi, r12d ; mov rdx, r15 ; call rcx
0xffffff800050c8b2 : mov rdi, r13 ; mov esi, r15d ; call 0xffffff8000758b38
0xffffff800076a5f6 : mov rdi, r13 ; mov qword ptr [rbp - 0x50], rdx ; call rax
0xffffff80008bd37c : mov rdi, r13 ; mov r9, r11 ; call r15
0xffffff80008bd3c8 : mov rdi, r13 ; mov r9, r14 ; call r15
0xffffff800076b297 : mov rdi, r13 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800076a718 : mov rdi, r13 ; mov rdx, qword ptr [rbp - 0x50] ; call rax
0xffffff80006423a7 : mov rdi, r13 ; mov rdx, r12 ; call rax
0xffffff8000646446 : mov rdi, r13 ; mov rdx, r15 ; call rax
0xffffff80007c92be : mov rdi, r13 ; mov rdx, r8 ; call rcx
0xffffff80008cd7b9 : mov rdi, r13 ; mov rdx, rax ; call r15
0xffffff800062bb6a : mov rdi, r13 ; mov rdx, rbx ; call rax
0xffffff80007d0fe1 : mov rdi, r13 ; mov rdx, rbx ; call rcx
0xffffff80007d796d : mov rdi, r13 ; mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff80008b235a : mov rdi, r13 ; mov rsi, r14 ; call r12
0xffffff80007eaf43 : mov rdi, r13 ; mov rsi, r14 ; call rbx
0xffffff8000534415 : mov rdi, r13 ; mov rsi, r14 ; call rcx
0xffffff800028e044 : mov rdi, r13 ; mov rsi, r15 ; call r14
0xffffff800081274f : mov rdi, r13 ; mov rsi, rax ; call r14
0xffffff80008ddb84 : mov rdi, r13 ; mov rsi, rax ; call rbx
0xffffff800055795b : mov rdi, r13 ; mov rsi, rax ; call rcx
0xffffff80005453c2 : mov rdi, r13 ; mov rsi, rbx ; call r14
0xffffff80003d3bef : mov rdi, r14 ; call 0xffffff800010e089
0xffffff80007c1e7b : mov rdi, r14 ; call 0xffffff800010e145
0xffffff80003523d3 : mov rdi, r14 ; call 0xffffff800010e695
0xffffff80008cb626 : mov rdi, r14 ; call 0xffffff8000297875
0xffffff800054b8f4 : mov rdi, r14 ; call 0xffffff8000297b45
0xffffff8000674691 : mov rdi, r14 ; call 0xffffff8000297b46
0xffffff800042038b : mov rdi, r14 ; call 0xffffff80002a46d9
0xffffff80006b0ee7 : mov rdi, r14 ; call 0xffffff80002d8926
0xffffff80004bc9f3 : mov rdi, r14 ; call 0xffffff8000338c65
0xffffff80002960e4 : mov rdi, r14 ; call 0xffffff80003923e5
0xffffff8000763bd3 : mov rdi, r14 ; call 0xffffff80003923e6
0xffffff800055620b : mov rdi, r14 ; call 0xffffff80003924d5
0xffffff8000341cf8 : mov rdi, r14 ; call 0xffffff8000392609
0xffffff800030212e : mov rdi, r14 ; call 0xffffff8000392799
0xffffff8000767d42 : mov rdi, r14 ; call 0xffffff80003928a6
0xffffff80006a67ba : mov rdi, r14 ; call 0xffffff8000392a45
0xffffff8000762d33 : mov rdi, r14 ; call 0xffffff8000392a46
0xffffff80006a6d58 : mov rdi, r14 ; call 0xffffff8000393045
0xffffff8000767468 : mov rdi, r14 ; call 0xffffff8000393046
0xffffff800028be95 : mov rdi, r14 ; call 0xffffff8000393049
0xffffff8000277217 : mov rdi, r14 ; call 0xffffff8000393485
0xffffff8000476c77 : mov rdi, r14 ; call 0xffffff8000422eb5
0xffffff800050e02e : mov rdi, r14 ; call 0xffffff80004cdfa9
0xffffff8000546b5a : mov rdi, r14 ; call 0xffffff8000532e65
0xffffff8000554dd1 : mov rdi, r14 ; call 0xffffff8000551035
0xffffff8000554e36 : mov rdi, r14 ; call 0xffffff80005510f5
0xffffff80006aec27 : mov rdi, r14 ; call 0xffffff80005510f9
0xffffff80005c9214 : mov rdi, r14 ; call 0xffffff80005c5505
0xffffff80005d926c : mov rdi, r14 ; call 0xffffff80005e5495
0xffffff8000708748 : mov rdi, r14 ; call 0xffffff80007084c9
0xffffff80007b87c5 : mov rdi, r14 ; call 0xffffff80007b4a65
0xffffff8000549acf : mov rdi, r14 ; call 0xffffff80007b5da5
0xffffff800059bde9 : mov rdi, r14 ; call 0xffffff80007b8025
0xffffff80006bbec2 : mov rdi, r14 ; call 0xffffff80007b8125
0xffffff80005f038a : mov rdi, r14 ; call 0xffffff80007d0469
0xffffff80008b0f0d : mov rdi, r14 ; call 0xffffff8000856ad9
0xffffff80008788e4 : mov rdi, r14 ; call 0xffffff8000874b95
0xffffff800086c561 : mov rdi, r14 ; call qword ptr [rax + 0x20]
0xffffff80006558a4 : mov rdi, r14 ; call qword ptr [rax]
0xffffff80008bcc69 : mov rdi, r14 ; call r10
0xffffff8000636453 : mov rdi, r14 ; call r12
0xffffff800038826e : mov rdi, r14 ; call r15
0xffffff80004e4df8 : mov rdi, r14 ; call rax
0xffffff80003aa14b : mov rdi, r14 ; call rbx
0xffffff800038fa74 : mov rdi, r14 ; call rcx
0xffffff800044fb3b : mov rdi, r14 ; call rdx
0xffffff8000437f7c : mov rdi, r14 ; jmp 0xffffff8000437faf
0xffffff80008be2bc : mov rdi, r14 ; jmp 0xffffff80008be371
0xffffff800067a04d : mov rdi, r14 ; mov ecx, ebx ; call 0xffffff8000666267
0xffffff800083dfc1 : mov rdi, r14 ; mov edx, ebx ; call rcx
0xffffff8000851884 : mov rdi, r14 ; mov esi, ebx ; call 0xffffff80008edb17
0xffffff80005cf6a8 : mov rdi, r14 ; mov esi, ebx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000534dee : mov rdi, r14 ; mov esi, r15d ; call rax
0xffffff80005ee518 : mov rdi, r14 ; mov qword ptr [rbp - 0x40], rdx ; call rax
0xffffff80007eaeb5 : mov rdi, r14 ; mov r14, r12 ; mov rsi, r14 ; call rbx
0xffffff80006f02d3 : mov rdi, r14 ; mov r8, rbx ; call 0xffffff80004fc588
0xffffff80008bcd2f : mov rdi, r14 ; mov r9, r11 ; call r10
0xffffff80008bccc9 : mov rdi, r14 ; mov r9, rax ; call r10
0xffffff80005ee5f4 : mov rdi, r14 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff8000517deb : mov rdi, r14 ; mov rdx, r12 ; call rax
0xffffff80005193b0 : mov rdi, r14 ; mov rdx, r13 ; call rax
0xffffff800054d704 : mov rdi, r14 ; mov rdx, r15 ; call rax
0xffffff800054cdd2 : mov rdi, r14 ; mov rdx, rbx ; call rax
0xffffff80007c9dfb : mov rdi, r14 ; mov rdx, rbx ; call rcx
0xffffff80007fc9f1 : mov rdi, r14 ; mov rsi, r12 ; call rax
0xffffff80008ee4f8 : mov rdi, r14 ; mov rsi, r12 ; mov rdx, r15 ; call rcx
0xffffff80002d0893 : mov rdi, r14 ; mov rsi, r13 ; call rax
0xffffff80003ac3ee : mov rdi, r14 ; mov rsi, r13 ; call rbx
0xffffff8000881c8d : mov rdi, r14 ; mov rsi, r13 ; mov rdx, r15 ; call rax
0xffffff8000653380 : mov rdi, r14 ; mov rsi, r15 ; call qword ptr [rax]
0xffffff8000904513 : mov rdi, r14 ; mov rsi, r15 ; call rbx
0xffffff80008f73cf : mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800081e149 : mov rdi, r14 ; mov rsi, rax ; call r12
0xffffff8000653602 : mov rdi, r14 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff80007d16c1 : mov rdi, r14 ; mov rsi, rbx ; call r12
0xffffff8000541fdc : mov rdi, r14 ; mov rsi, rbx ; call r15
0xffffff8000790ba0 : mov rdi, r14 ; mov rsi, rbx ; call rax
0xffffff8000591ecc : mov rdi, r15 ; call 0xffffff800010e145
0xffffff80004e3122 : mov rdi, r15 ; call 0xffffff800010e146
0xffffff800065e911 : mov rdi, r15 ; call 0xffffff800028e1b6
0xffffff800051b8ab : mov rdi, r15 ; call 0xffffff8000297b45
0xffffff8000674c09 : mov rdi, r15 ; call 0xffffff8000297b46
0xffffff80007f987a : mov rdi, r15 ; call 0xffffff80002b5b65
0xffffff800025c6c2 : mov rdi, r15 ; call 0xffffff80002d8925
0xffffff80002961b6 : mov rdi, r15 ; call 0xffffff80003923e5
0xffffff8000762e29 : mov rdi, r15 ; call 0xffffff80003923e6
0xffffff80007a6628 : mov rdi, r15 ; call 0xffffff80003928a5
0xffffff80004e6667 : mov rdi, r15 ; call 0xffffff8000392935
0xffffff800076d8d3 : mov rdi, r15 ; call 0xffffff8000392936
0xffffff80007a67f6 : mov rdi, r15 ; call 0xffffff8000392a45
0xffffff800076308e : mov rdi, r15 ; call 0xffffff8000392a46
0xffffff80007630b8 : mov rdi, r15 ; call 0xffffff8000393046
0xffffff80003eb088 : mov rdi, r15 ; call 0xffffff8000393049
0xffffff800028af81 : mov rdi, r15 ; call 0xffffff8000397205
0xffffff8000773d74 : mov rdi, r15 ; call 0xffffff8000397206
0xffffff8000419d82 : mov rdi, r15 ; call 0xffffff8000445fb5
0xffffff80004602c9 : mov rdi, r15 ; call 0xffffff80004cc565
0xffffff800060cde0 : mov rdi, r15 ; call 0xffffff8000529005
0xffffff8000604d68 : mov rdi, r15 ; call 0xffffff8000529b79
0xffffff8000553dc8 : mov rdi, r15 ; call 0xffffff8000550045
0xffffff80002883f3 : mov rdi, r15 ; call 0xffffff8000761979
0xffffff800056895e : mov rdi, r15 ; call 0xffffff80007c4bb5
0xffffff8000769dae : mov rdi, r15 ; call 0xffffff80007d23b9
0xffffff80003b6336 : mov rdi, r15 ; call 0xffffff80008edb19
0xffffff80002883a3 : mov rdi, r15 ; call 0xffffff800090a6e9
0xffffff8000288459 : mov rdi, r15 ; call rax
0xffffff80006362cd : mov rdi, r15 ; call rbx
0xffffff80008f5020 : mov rdi, r15 ; call rcx
0xffffff800074f387 : mov rdi, r15 ; mov edx, r14d ; call rax
0xffffff80008ef03f : mov rdi, r15 ; mov esi, r12d ; mov rdx, r14 ; call rcx
0xffffff80008ee328 : mov rdi, r15 ; mov esi, r14d ; call rcx
0xffffff800053455c : mov rdi, r15 ; mov r9, r13 ; call rax
0xffffff8000766353 : mov rdi, r15 ; mov rbx, r9 ; call 0xffffff80003923e9
0xffffff8000302375 : mov rdi, r15 ; mov rdx, qword ptr [rbp - 0x30] ; jmp rcx
0xffffff800060533b : mov rdi, r15 ; mov rdx, r12 ; call rax
0xffffff80006052ac : mov rdi, r15 ; mov rdx, r13 ; call rax
0xffffff80008f629a : mov rdi, r15 ; mov rdx, r14 ; call r8
0xffffff800064cfca : mov rdi, r15 ; mov rdx, r14 ; call rax
0xffffff80008eefe1 : mov rdi, r15 ; mov rdx, r14 ; call rcx
0xffffff8000516683 : mov rdi, r15 ; mov rdx, rbx ; call rax
0xffffff80002c8fa5 : mov rdi, r15 ; mov rsi, r12 ; call r14
0xffffff80007ccfa7 : mov rdi, r15 ; mov rsi, r12 ; call rax
0xffffff80007cd26d : mov rdi, r15 ; mov rsi, r12 ; call rcx
0xffffff80008f8d70 : mov rdi, r15 ; mov rsi, r12 ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80008f68b8 : mov rdi, r15 ; mov rsi, r12 ; mov ecx, r14d ; call rax
0xffffff80007d04cb : mov rdi, r15 ; mov rsi, r12 ; mov edx, ebx ; call rax
0xffffff80008f596f : mov rdi, r15 ; mov rsi, r12 ; mov rcx, r14 ; call rax
0xffffff80008fcc40 : mov rdi, r15 ; mov rsi, r12 ; mov rdx, r14 ; call rax
0xffffff80007eaf35 : mov rdi, r15 ; mov rsi, r13 ; call rbx
0xffffff8000909464 : mov rdi, r15 ; mov rsi, r13 ; mov rcx, r12 ; call rax
0xffffff80004b4f4f : mov rdi, r15 ; mov rsi, r14 ; call rbx
0xffffff80008eec58 : mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff8000905c90 : mov rdi, r15 ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff800085a709 : mov rdi, r15 ; mov rsi, rax ; call r12
0xffffff80008ddc73 : mov rdi, r15 ; mov rsi, rax ; call rbx
0xffffff80004df968 : mov rdi, r15 ; mov rsi, rbx ; call 0xffffff800010e149
0xffffff8000298cdc : mov rdi, r15 ; mov rsi, rbx ; call 0xffffff80002d4ef8
0xffffff8000298cdb : mov rdi, r15 ; mov rsi, rbx ; call 0xffffff80002d4ef9
0xffffff80003753ad : mov rdi, r15 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800077835b : mov rdi, r15 ; mov rsi, rbx ; call rax
0xffffff80008bab25 : mov rdi, r8 ; call qword ptr [rax + 0x28]
0xffffff800075e13f : mov rdi, r8 ; pop rbp ; jmp 0xffffff800077a426
0xffffff80005a4cbd : mov rdi, rax ; call 0xffffff800057f149
0xffffff80007a76d0 : mov rdi, rax ; call 0xffffff800077ef59
0xffffff80003f8830 : mov rdi, rax ; call 0xffffff80007b4a65
0xffffff8000864363 : mov rdi, rax ; call 0xffffff8000870645
0xffffff8000878466 : mov rdi, rax ; call 0xffffff8000874b99
0xffffff80008a15ed : mov rdi, rax ; call r12
0xffffff8000607e24 : mov rdi, rax ; call rbx
0xffffff800052c743 : mov rdi, rax ; call rcx
0xffffff80006064df : mov rdi, rax ; mov esi, r13d ; call rbx
0xffffff8000269f90 : mov rdi, rax ; mov rax, rdx ; jne 0xffffff8000269f89 ; pop rbp ; ret
0xffffff80008708c0 : mov rdi, rax ; mov rsi, r12 ; call r15
0xffffff8000860080 : mov rdi, rax ; mov rsi, r14 ; call r15
0xffffff80008dfc20 : mov rdi, rax ; pop rbp ; jmp r8
0xffffff800082cc36 : mov rdi, rax ; pop rbp ; jmp rcx
0xffffff80003993a0 : mov rdi, rax ; xor rbp, rbp ; call rbx
0xffffff80007a65e2 : mov rdi, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff8000879ac3 : mov rdi, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff8000641ed6 : mov rdi, rbx ; call 0xffffff800010e145
0xffffff80004df7c9 : mov rdi, rbx ; call 0xffffff800010e146
0xffffff800026b2c9 : mov rdi, rbx ; call 0xffffff80002775b5
0xffffff8000673fec : mov rdi, rbx ; call 0xffffff8000297b46
0xffffff800044844c : mov rdi, rbx ; call 0xffffff80002a46d5
0xffffff80006cc67c : mov rdi, rbx ; call 0xffffff80002d8925
0xffffff80006b61e2 : mov rdi, rbx ; call 0xffffff80002d8926
0xffffff8000763f43 : mov rdi, rbx ; call 0xffffff80003923e6
0xffffff800076e75d : mov rdi, rbx ; call 0xffffff8000392606
0xffffff800076e783 : mov rdi, rbx ; call 0xffffff8000392796
0xffffff80007a65ce : mov rdi, rbx ; call 0xffffff80003928a5
0xffffff8000767ccd : mov rdi, rbx ; call 0xffffff80003928a6
0xffffff80004e664f : mov rdi, rbx ; call 0xffffff8000392935
0xffffff800076d18c : mov rdi, rbx ; call 0xffffff8000392936
0xffffff8000764f65 : mov rdi, rbx ; call 0xffffff8000392a46
0xffffff8000476dbb : mov rdi, rbx ; call 0xffffff8000393045
0xffffff8000764f50 : mov rdi, rbx ; call 0xffffff8000393046
0xffffff8000775742 : mov rdi, rbx ; call 0xffffff8000397206
0xffffff8000775b76 : mov rdi, rbx ; call 0xffffff800039a706
0xffffff80003eee0b : mov rdi, rbx ; call 0xffffff800044b0a5
0xffffff800044191f : mov rdi, rbx ; call 0xffffff80004cdbe5
0xffffff800056f872 : mov rdi, rbx ; call 0xffffff800057bae5
0xffffff80007b4591 : mov rdi, rbx ; call 0xffffff80007907d5
0xffffff8000668824 : mov rdi, rbx ; call 0xffffff80007b4a65
0xffffff80003518ba : mov rdi, rbx ; call 0xffffff80008edb15
0xffffff8000811475 : mov rdi, rbx ; call qword ptr [rax + 0x38]
0xffffff80008a8c0d : mov rdi, rbx ; call r14
0xffffff800054bf9b : mov rdi, rbx ; call r15
0xffffff8000367632 : mov rdi, rbx ; call rax
0xffffff8000390937 : mov rdi, rbx ; call rcx
0xffffff80007a8015 : mov rdi, rbx ; call rdx
0xffffff80004d94a5 : mov rdi, rbx ; mov esi, dword ptr [rbp - 0x78] ; mov rdx, r15 ; call rcx
0xffffff8000609090 : mov rdi, rbx ; mov esi, r14d ; call r15
0xffffff8000566fcd : mov rdi, rbx ; mov esi, r14d ; call rax
0xffffff80003518e5 : mov rdi, rbx ; mov esi, r15d ; call 0xffffff80008edb18
0xffffff80005ef2e4 : mov rdi, rbx ; mov esi, r15d ; call r14
0xffffff800079194b : mov rdi, rbx ; mov rcx, qword ptr [rbp + 0x10] ; call rax
0xffffff80007cf5fe : mov rdi, rbx ; mov rdx, qword ptr [rbp - 0x48] ; call rax
0xffffff8000647240 : mov rdi, rbx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0xffffff80005ed3d2 : mov rdi, rbx ; mov rdx, r12 ; call rax
0xffffff800062c225 : mov rdi, rbx ; mov rdx, r13 ; call rax
0xffffff80007cefef : mov rdi, rbx ; mov rdx, r13 ; call rcx
0xffffff800081f94a : mov rdi, rbx ; mov rdx, r14 ; call r12
0xffffff800054c7a4 : mov rdi, rbx ; mov rdx, r14 ; call rax
0xffffff800052b075 : mov rdi, rbx ; mov rdx, r15 ; call rax
0xffffff80008299bc : mov rdi, rbx ; mov rdx, rax ; call r15
0xffffff800077faa0 : mov rdi, rbx ; mov rsi, qword ptr [rbp - 0x30] ; call r12
0xffffff800077f6fe : mov rdi, rbx ; mov rsi, qword ptr [rbp - 0x38] ; call r15
0xffffff80004c484e : mov rdi, rbx ; mov rsi, qword ptr [rbp - 0x60] ; call rax
0xffffff8000617c86 : mov rdi, rbx ; mov rsi, r12 ; call rax
0xffffff800075deb9 : mov rdi, rbx ; mov rsi, r13 ; call rax
0xffffff80004b49a8 : mov rdi, rbx ; mov rsi, r14 ; call r12
0xffffff80005225ce : mov rdi, rbx ; mov rsi, r14 ; call rax
0xffffff800054fb8c : mov rdi, rbx ; mov rsi, r14 ; call rcx
0xffffff80007908d2 : mov rdi, rbx ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff80006534a5 : mov rdi, rbx ; mov rsi, r15 ; call qword ptr [rax]
0xffffff80002db830 : mov rdi, rbx ; mov rsi, r15 ; call r12
0xffffff80007909a0 : mov rdi, rbx ; mov rsi, r15 ; call rax
0xffffff800081df7c : mov rdi, rbx ; mov rsi, rax ; call r12
0xffffff800082e480 : mov rdi, rbx ; mov rsi, rax ; call r14
0xffffff800082e5c7 : mov rdi, rbx ; mov rsi, rax ; call r15
0xffffff80005cf71d : mov rdi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800050f08d : mov rdi, rcx ; jae 0xffffff800050f086 ; pop rbp ; ret
0xffffff80006e3bf9 : mov rdi, rcx ; jne 0xffffff80006e3be6 ; pop rbp ; ret
0xffffff8000892adc : mov rdi, rcx ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff800052bcf6 : mov rdi, rcx ; mov rbx, rcx ; call rax
0xffffff80005e38d6 : mov rdi, rcx ; pop rbp ; jmp r8
0xffffff800053ec22 : mov rdi, rcx ; pop rbp ; jmp rax
0xffffff800066d8cf : mov rdi, rdx ; call 0xffffff8000529b75
0xffffff80003993f0 : mov rdi, rdx ; call rsi
0xffffff80007cf05f : mov rdi, rdx ; mov rdx, r13 ; call rax
0xffffff80007dd23b : mov rdi, rdx ; mov rdx, r14 ; call rax
0xffffff80003a85b6 : mov rdi, rsi ; call rax
0xffffff80003a85fa : mov rdi, rsi ; call rcx
0xffffff80004f858e : mov rdi, rsi ; jl 0xffffff80004f8566 ; pop rbp ; ret
0xffffff80005abcb3 : mov rdi, rsi ; mov esi, r12d ; call 0xffffff80007b7ec8
0xffffff80008e3272 : mov rdi, rsi ; mov rsi, rax ; call 0xffffff80008df538
0xffffff800081366a : mov rdi, rsi ; mov rsi, rax ; call rcx
0xffffff80004f9020 : mov rdi, rsi ; mov rsi, rcx ; jne 0xffffff80004f9019 ; pop rbp ; ret
0xffffff80008b2d3e : mov rdi, rsi ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff800049fb27 : mov rdi, rsi ; pop rbp ; jmp rax
0xffffff80003a85e1 : mov rdi, rsi ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007ae3f5 : mov rdx, dr0 ; mov byte ptr [rdi + rcx], dl ; pop rbp ; ret
0xffffff80005076d4 : mov rdx, qword ptr [r12 + 0x58] ; call rax
0xffffff80008f178e : mov rdx, qword ptr [r15 + 0x10] ; mov rdi, qword ptr [rbp - 0x60] ; call rbx
0xffffff80008f1817 : mov rdx, qword ptr [r15 + 0x10] ; mov rdi, qword ptr [rbp - 0x60] ; call rcx
0xffffff80007b60fb : mov rdx, qword ptr [r15 + 0xc0] ; call rcx
0xffffff800029a621 : mov rdx, qword ptr [rax + 0x10] ; xor edi, edi ; call qword ptr [rax]
0xffffff80004923c4 : mov rdx, qword ptr [rax + 0x18] ; mov ecx, ebx ; call r9
0xffffff80004cff23 : mov rdx, qword ptr [rbp + 0x18] ; mov rbx, r8 ; call 0xffffff80004fc1e9
0xffffff80004e4606 : mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff8000639497 : mov rdx, qword ptr [rbp - 0x110] ; call rax
0xffffff8000590b96 : mov rdx, qword ptr [rbp - 0x200] ; call 0xffffff80007bce69
0xffffff8000558b56 : mov rdx, qword ptr [rbp - 0x30] ; call r14
0xffffff8000529d1b : mov rdx, qword ptr [rbp - 0x30] ; call rbx
0xffffff800053313e : mov rdx, qword ptr [rbp - 0x30] ; call rcx
0xffffff8000302378 : mov rdx, qword ptr [rbp - 0x30] ; jmp rcx
0xffffff80005343bd : mov rdx, qword ptr [rbp - 0x30] ; mov rcx, r12 ; call r8
0xffffff80008f8fc6 : mov rdx, qword ptr [rbp - 0x30] ; mov rcx, r13 ; call rbx
0xffffff8000908c5e : mov rdx, qword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff80002cf12d : mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80005330df : mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x30] ; call rax
0xffffff800067c6d5 : mov rdx, qword ptr [rbp - 0x430] ; call rcx
0xffffff80007cf601 : mov rdx, qword ptr [rbp - 0x48] ; call rax
0xffffff800076a71b : mov rdx, qword ptr [rbp - 0x50] ; call rax
0xffffff800055eeb8 : mov rdx, qword ptr [rbp - 0x50] ; call rcx
0xffffff80007d9a14 : mov rdx, qword ptr [rbp - 0x550] ; call rax
0xffffff8000647243 : mov rdx, qword ptr [rbp - 0x80] ; call rax
0xffffff80007c82d9 : mov rdx, qword ptr [rbp - 0x90] ; call rax
0xffffff80007c7f99 : mov rdx, qword ptr [rbp - 0x90] ; call rcx
0xffffff80007c8a35 : mov rdx, qword ptr [rbp - 0xa0] ; call rax
0xffffff80007c896c : mov rdx, qword ptr [rbp - 0xa0] ; call rcx
0xffffff80007ca486 : mov rdx, qword ptr [rbp - 0xb8] ; call rax
0xffffff80007ca411 : mov rdx, qword ptr [rbp - 0xb8] ; call rcx
0xffffff800064b539 : mov rdx, qword ptr [rbp - 0xc0] ; call rax
0xffffff80007c780d : mov rdx, qword ptr [rbp - 0xd8] ; call rax
0xffffff80007c72c0 : mov rdx, qword ptr [rbp - 0xd8] ; call rcx
0xffffff8000501ef2 : mov rdx, qword ptr [rbp - 0xe0] ; call 0xffffff800080e1d9
0xffffff8000885a43 : mov rdx, qword ptr [rbx + 0x18] ; mov rcx, qword ptr [rbx + 0x20] ; call r15
0xffffff800054bfc0 : mov rdx, qword ptr [rbx + 0x28] ; call rax
0xffffff8000423a97 : mov rdx, qword ptr [rdx + r8*8] ; jmp 0xffffff8000423aad
0xffffff800078ccd1 : mov rdx, qword ptr [rsi + rdx + 8] ; mov qword ptr [rcx], rdx ; pop rbp ; ret
0xffffff80008bcfbd : mov rdx, r10 ; mov rcx, r11 ; call r14
0xffffff80008bd237 : mov rdx, r10 ; mov rcx, r14 ; call r15
0xffffff80008bd659 : mov rdx, r10 ; mov rcx, r15 ; call r14
0xffffff80004a1eaf : mov rdx, r10 ; pop rbp ; jmp rax
0xffffff80008bcf5b : mov rdx, r11 ; call r14
0xffffff80008bde18 : mov rdx, r11 ; mov rcx, rax ; call r12
0xffffff800065ecfe : mov rdx, r12 ; call 0xffffff800028e1b6
0xffffff800066a36a : mov rdx, r12 ; call 0xffffff800028e4a6
0xffffff8000642e6f : mov rdx, r12 ; call 0xffffff8000642679
0xffffff8000293c29 : mov rdx, r12 ; call r15
0xffffff8000905d7a : mov rdx, r12 ; call r8
0xffffff800060533e : mov rdx, r12 ; call rax
0xffffff80002cf3b2 : mov rdx, r12 ; call rbx
0xffffff8000882201 : mov rdx, r12 ; mov rax, qword ptr [rbp - 0x30] ; call rax
0xffffff8000829e59 : mov rdx, r12 ; mov rcx, r13 ; call r15
0xffffff800066a014 : mov rdx, r12 ; mov rcx, r14 ; call 0xffffff800028e4a9
0xffffff8000651eb3 : mov rdx, r13 ; call 0xffffff800028e1b5
0xffffff80006636f9 : mov rdx, r13 ; call 0xffffff800028e1b6
0xffffff8000669f11 : mov rdx, r13 ; call 0xffffff800028e4a6
0xffffff800076eb6f : mov rdx, r13 ; call 0xffffff8000396b86
0xffffff80003ad355 : mov rdx, r13 ; call 0xffffff800074ac49
0xffffff8000440999 : mov rdx, r13 ; call 0xffffff80007ecbf5
0xffffff80004d6d91 : mov rdx, r13 ; call rax
0xffffff80007c569e : mov rdx, r13 ; call rcx
0xffffff80007cf5a3 : mov rdx, r13 ; mov qword ptr [rbp - 0x48], r13 ; call rcx
0xffffff80008fe32d : mov rdx, r13 ; mov r8, r14 ; call rax
0xffffff8000451f94 : mov rdx, r14 ; call 0xffffff800028e1b5
0xffffff80002ace05 : mov rdx, r14 ; call 0xffffff8000299025
0xffffff80002ace04 : mov rdx, r14 ; call 0xffffff8000299026
0xffffff800076bbbf : mov rdx, r14 ; call 0xffffff8000396b86
0xffffff80003cd23c : mov rdx, r14 ; call 0xffffff80004494a5
0xffffff800026ac07 : mov rdx, r14 ; call 0xffffff800074ac49
0xffffff800049d1d6 : mov rdx, r14 ; call qword ptr [rbx]
0xffffff8000819bba : mov rdx, r14 ; call r12
0xffffff80008f629d : mov rdx, r14 ; call r8
0xffffff80005398b8 : mov rdx, r14 ; call rax
0xffffff8000558c35 : mov rdx, r14 ; call rbx
0xffffff800060ec25 : mov rdx, r14 ; call rcx
0xffffff80003a040c : mov rdx, r14 ; mov rbx, r8 ; call rax
0xffffff800049f9a7 : mov rdx, r14 ; mov rcx, r15 ; call rax
0xffffff800049fa46 : mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007ce05f : mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff8000781f2b : mov rdx, r15 ; call 0xffffff800028e1b5
0xffffff800065f23e : mov rdx, r15 ; call 0xffffff800028e1b6
0xffffff8000698d91 : mov rdx, r15 ; call 0xffffff80002c53a6
0xffffff80003592f2 : mov rdx, r15 ; call 0xffffff8000315575
0xffffff8000772c86 : mov rdx, r15 ; call 0xffffff8000396b86
0xffffff800047d22d : mov rdx, r15 ; call 0xffffff80004494a5
0xffffff80006ea41e : mov rdx, r15 ; call 0xffffff8000726715
0xffffff80008bd629 : mov rdx, r15 ; call r14
0xffffff80004eb43f : mov rdx, r15 ; call rax
0xffffff80005bc895 : mov rdx, r15 ; call rbx
0xffffff80004d94ab : mov rdx, r15 ; call rcx
0xffffff80008e3a6e : mov rdx, r15 ; mov r8, r12 ; call 0xffffff80004efce8
0xffffff80008f5ac3 : mov rdx, r15 ; mov r8, r14 ; call rax
0xffffff80007ec9a1 : mov rdx, r15 ; mov rcx, r10 ; call rbx
0xffffff800051bc89 : mov rdx, r15 ; mov rcx, r14 ; mov r8, rbx ; call rax
0xffffff80007c92c1 : mov rdx, r8 ; call rcx
0xffffff8000635c45 : mov rdx, r8 ; jmp 0xffffff8000635c5d
0xffffff80008ec360 : mov rdx, r8 ; jmp 0xffffff80008ec394
0xffffff80007582b9 : mov rdx, r8 ; mov r8, r9 ; pop rbp ; jmp rax
0xffffff80008bd0b8 : mov rdx, r9 ; mov r9, r15 ; call r14
0xffffff8000845efc : mov rdx, r9 ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff80007437f1 : mov rdx, rax ; call 0xffffff80003985e9
0xffffff8000397b76 : mov rdx, rax ; call r14
0xffffff80008299bf : mov rdx, rax ; call r15
0xffffff80002a69c0 : mov rdx, rax ; jle 0xffffff80002a69a6 ; pop rbp ; ret
0xffffff80005e6bbe : mov rdx, rax ; jmp 0xffffff80005e6bd4
0xffffff80005e7c65 : mov rdx, rax ; jmp 0xffffff80005e7c7c
0xffffff80005e87be : mov rdx, rax ; jmp 0xffffff80005e87d4
0xffffff800076efb4 : mov rdx, rax ; jmp 0xffffff800076efc1
0xffffff8000793ba0 : mov rdx, rax ; jmp 0xffffff8000793bbf
0xffffff80008c99ce : mov rdx, rax ; jmp 0xffffff80008c99f1
0xffffff80008c9f7e : mov rdx, rax ; jmp 0xffffff80008c9fa1
0xffffff80008e9a56 : mov rdx, rax ; jmp 0xffffff80008e9a64
0xffffff80004fa6ea : mov rdx, rax ; mov rax, rcx ; jne 0xffffff80004fa6e9 ; pop rbp ; ret
0xffffff800059f71a : mov rdx, rax ; mov rax, rcx ; jne 0xffffff800059f719 ; pop rbp ; ret
0xffffff8000769b4a : mov rdx, rax ; mov rax, rcx ; jne 0xffffff8000769b49 ; pop rbp ; ret
0xffffff80007a498d : mov rdx, rax ; pop rbp ; jmp r11
0xffffff8000870ab5 : mov rdx, rax ; pop rbp ; jmp r9
0xffffff8000812364 : mov rdx, rax ; pop rbp ; jmp rcx
0xffffff8000766e85 : mov rdx, rax ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff80008ae41c : mov rdx, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80004e6413 : mov rdx, rbx ; call 0xffffff800010e056
0xffffff8000691f5e : mov rdx, rbx ; call 0xffffff800028e1b5
0xffffff8000661256 : mov rdx, rbx ; call 0xffffff800028e1b6
0xffffff80006a2434 : mov rdx, rbx ; call 0xffffff80002c53a6
0xffffff80006eec40 : mov rdx, rbx ; call 0xffffff800030f496
0xffffff800076ba85 : mov rdx, rbx ; call 0xffffff8000396b86
0xffffff8000267101 : mov rdx, rbx ; call r15
0xffffff8000516686 : mov rdx, rbx ; call rax
0xffffff80007c9dfe : mov rdx, rbx ; call rcx
0xffffff8000281b63 : mov rdx, rbx ; mov ecx, r15d ; call qword ptr [rdi]
0xffffff80007b8728 : mov rdx, rbx ; mov qword ptr [rbp - 0x48], rcx ; call rcx
0xffffff800027c7cf : mov rdx, rbx ; mov r8, r15 ; call 0xffffff80002689e8
0xffffff80003f18de : mov rdx, rbx ; mov r8d, dword ptr [rbp - 0x30] ; call rax
0xffffff80008bd757 : mov rdx, rbx ; mov r9, r11 ; call r14
0xffffff80008000e6 : mov rdx, rbx ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff8000669daa : mov rdx, rcx ; call 0xffffff800028e4a6
0xffffff8000413bf2 : mov rdx, rcx ; call 0xffffff80003dfee5
0xffffff8000892907 : mov rdx, rcx ; mov ecx, eax ; pop rbp ; jmp r8
0xffffff8000327a24 : mov rdx, rcx ; mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0xffffff80005bed54 : mov rdx, rcx ; mov qword ptr [rax + 0x20], rdx ; pop rbp ; ret
0xffffff80005b1644 : mov rdx, rcx ; mov qword ptr [rax + 0x28], rdx ; pop rbp ; ret
0xffffff8000581a84 : mov rdx, rcx ; mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0xffffff80005eb3f4 : mov rdx, rcx ; mov qword ptr [rax + 0x68], rdx ; pop rbp ; ret
0xffffff800057f6f4 : mov rdx, rcx ; mov qword ptr [rax + 0x78], rdx ; pop rbp ; ret
0xffffff800028a904 : mov rdx, rcx ; pop rbp ; jmp r8
0xffffff80008b4477 : mov rdx, rcx ; pop rbp ; jmp rax
0xffffff80003a831f : mov rdx, rdi ; wrmsr ; pop rbp ; ret
0xffffff800055dbce : mov rsi, qword ptr [r12 + rcx*8 + 0x48] ; call rax
0xffffff80008f5c9d : mov rsi, qword ptr [r13 + 0xe0] ; call rcx
0xffffff8000674651 : mov rsi, qword ptr [r14 - 8] ; call 0xffffff8000297b47
0xffffff80004a1da0 : mov rsi, qword ptr [r14] ; jmp 0xffffff80004a1d6c
0xffffff80008985b0 : mov rsi, qword ptr [r15 + 0x48] ; mov rdx, r15 ; call rax
0xffffff800055e719 : mov rsi, qword ptr [r15 + rcx*8 + 0x48] ; call rax
0xffffff800044fb37 : mov rsi, qword ptr [r9 + 0x68] ; mov rdi, r14 ; call rdx
0xffffff800083dfbd : mov rsi, qword ptr [rax + 0x30] ; mov rdi, r14 ; mov edx, ebx ; call rcx
0xffffff80005115ab : mov rsi, qword ptr [rax] ; call 0xffffff80002cd855
0xffffff8000799a68 : mov rsi, qword ptr [rax] ; mov edx, 1 ; call rcx
0xffffff80005c0303 : mov rsi, qword ptr [rbp - 0x138] ; call rax
0xffffff8000463452 : mov rsi, qword ptr [rbp - 0x148] ; call qword ptr [rcx]
0xffffff8000617ead : mov rsi, qword ptr [rbp - 0x300] ; call rax
0xffffff800077faa3 : mov rsi, qword ptr [rbp - 0x30] ; call r12
0xffffff80004c38d9 : mov rsi, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008f9b33 : mov rsi, qword ptr [rbp - 0x30] ; mov rdx, r12 ; call rbx
0xffffff800077f701 : mov rsi, qword ptr [rbp - 0x38] ; call r15
0xffffff8000272672 : mov rsi, qword ptr [rbp - 0x38] ; jmp rax
0xffffff800054dedc : mov rsi, qword ptr [rbp - 0x38] ; mov r15, r8 ; call r15
0xffffff800054dfa6 : mov rsi, qword ptr [rbp - 0x38] ; mov rbx, rdx ; call rbx
0xffffff80007ac7b2 : mov rsi, qword ptr [rbp - 0x3e8] ; call rcx
0xffffff80006b6ef1 : mov rsi, qword ptr [rbp - 0x40] ; call rax
0xffffff800027c4e2 : mov rsi, qword ptr [rbp - 0x40] ; jmp 0xffffff800027c55e
0xffffff800053313a : mov rsi, qword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rcx
0xffffff80008f04c1 : mov rsi, qword ptr [rbp - 0x50] ; mov rdx, r14 ; call rbx
0xffffff8000757bbf : mov rsi, qword ptr [rbp - 0x5b8] ; call r15
0xffffff80004c4851 : mov rsi, qword ptr [rbp - 0x60] ; call rax
0xffffff80002cf129 : mov rsi, qword ptr [rbp - 0x60] ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80002cf3ae : mov rsi, qword ptr [rbp - 0x60] ; mov rdx, r12 ; call rbx
0xffffff8000799c69 : mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff8000799c3a : mov rsi, qword ptr [rbp - 0x68] ; call rcx
0xffffff8000647659 : mov rsi, qword ptr [rbp - 0x68] ; lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff80007d7970 : mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff800029dcc3 : mov rsi, qword ptr [rbp - 0x78] ; call r14
0xffffff800029dd25 : mov rsi, qword ptr [rbp - 0x78] ; call r15
0xffffff80003aa489 : mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003aa608 : mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff800029df3e : mov rsi, qword ptr [rbp - 0x78] ; call rcx
0xffffff80004bef8b : mov rsi, qword ptr [rbp - 0xd8] ; call r12
0xffffff8000389859 : mov rsi, qword ptr [rbx + 0x18] ; call qword ptr [rax]
0xffffff800053a00e : mov rsi, qword ptr [rbx + 0x18] ; mov rdi, qword ptr [rbx + 0x28] ; call rax
0xffffff800054bfbc : mov rsi, qword ptr [rbx + 0x20] ; mov rdx, qword ptr [rbx + 0x28] ; call rax
0xffffff80008808b2 : mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff8000671b74 : mov rsi, qword ptr [rbx - 8] ; call 0xffffff8000297b47
0xffffff8000674c52 : mov rsi, qword ptr [rbx] ; mov rdi, rbx ; call 0xffffff8000297b49
0xffffff8000870595 : mov rsi, qword ptr [rcx] ; call rax
0xffffff8000799ae7 : mov rsi, qword ptr [rcx] ; mov edx, 1 ; call rax
0xffffff800082edff : mov rsi, qword ptr [rdi + 0x18] ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff80004196fd : mov rsi, qword ptr [rdx + rax*8] ; jmp 0xffffff8000419717
0xffffff800055d481 : mov rsi, qword ptr [rdx + rcx*8 + 0x48] ; call rax
0xffffff80008d7aae : mov rsi, qword ptr [rip + 0x25ee8b] ; pop rbp ; jmp rax
0xffffff80008d7a7e : mov rsi, qword ptr [rip + 0x25eea3] ; pop rbp ; jmp rax
0xffffff8000865cee : mov rsi, qword ptr [rip + 0x2d0b0b] ; pop rbp ; jmp rax
0xffffff8000865cce : mov rsi, qword ptr [rip + 0x2d0b2b] ; pop rbp ; jmp rax
0xffffff8000865cae : mov rsi, qword ptr [rip + 0x2d0b4b] ; pop rbp ; jmp rax
0xffffff80007fe241 : mov rsi, qword ptr [rip + 0x2e5ee0] ; call r14
0xffffff80007fe220 : mov rsi, qword ptr [rip + 0x2e5f01] ; call r12
0xffffff800082fb1e : mov rsi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff80007132b7 : mov rsi, qword ptr [rsi] ; jmp 0xffffff800071357c
0xffffff80004a1eac : mov rsi, r10 ; mov rdx, r10 ; pop rbp ; jmp rax
0xffffff80008bcf58 : mov rsi, r10 ; mov rdx, r11 ; call r14
0xffffff80008bd626 : mov rsi, r10 ; mov rdx, r15 ; call r14
0xffffff800065ec7e : mov rsi, r12 ; call 0xffffff800028e1b6
0xffffff8000508c43 : mov rsi, r12 ; call 0xffffff80002d4ef5
0xffffff80006a6970 : mov rsi, r12 ; call 0xffffff80002d4ef6
0xffffff80003686e2 : mov rsi, r12 ; call 0xffffff8000369549
0xffffff80007723d8 : mov rsi, r12 ; call 0xffffff8000396b86
0xffffff80007a6496 : mov rsi, r12 ; call 0xffffff80007a9ae9
0xffffff80002c8fa8 : mov rsi, r12 ; call r14
0xffffff800029e3f3 : mov rsi, r12 ; call r15
0xffffff80003a0b06 : mov rsi, r12 ; call rax
0xffffff80007cd270 : mov rsi, r12 ; call rcx
0xffffff800064e562 : mov rsi, r12 ; jmp 0xffffff800064e39f
0xffffff80008f8d73 : mov rsi, r12 ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000900484 : mov rsi, r12 ; mov ecx, r14d ; call r8
0xffffff80008f68bb : mov rsi, r12 ; mov ecx, r14d ; call rax
0xffffff80008f7194 : mov rsi, r12 ; mov ecx, r14d ; call rbx
0xffffff80008f4e1b : mov rsi, r12 ; mov edx, dword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x34] ; call rbx
0xffffff80002cf622 : mov rsi, r12 ; mov edx, dword ptr [rbp - 0x5c] ; mov rcx, rbx ; call rax
0xffffff80007d04ce : mov rsi, r12 ; mov edx, ebx ; call rax
0xffffff800065ecac : mov rsi, r12 ; mov edx, r13d ; call 0xffffff800028e1b9
0xffffff800088f79e : mov rsi, r12 ; mov edx, r15d ; call rbx
0xffffff80009097e3 : mov rsi, r12 ; mov edx, r15d ; mov rcx, r14 ; call rax
0xffffff80008f7603 : mov rsi, r12 ; mov rcx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80007d865d : mov rsi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rax
0xffffff80008fe57e : mov rsi, r12 ; mov rcx, r14 ; call r8
0xffffff8000901acb : mov rsi, r12 ; mov rcx, r14 ; call r9
0xffffff80008f5972 : mov rsi, r12 ; mov rcx, r14 ; call rax
0xffffff80008f7f5b : mov rsi, r12 ; mov rcx, r14 ; call rbx
0xffffff8000558b53 : mov rsi, r12 ; mov rdx, qword ptr [rbp - 0x30] ; call r14
0xffffff8000529d18 : mov rsi, r12 ; mov rdx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fcd27 : mov rsi, r12 ; mov rdx, r14 ; call r8
0xffffff80008fcc43 : mov rsi, r12 ; mov rdx, r14 ; call rax
0xffffff8000558c32 : mov rsi, r12 ; mov rdx, r14 ; call rbx
0xffffff80003a0409 : mov rsi, r12 ; mov rdx, r14 ; mov rbx, r8 ; call rax
0xffffff80007b3cc4 : mov rsi, r12 ; mov rdx, r15 ; call rax
0xffffff80008ee4fb : mov rsi, r12 ; mov rdx, r15 ; call rcx
0xffffff8000398028 : mov rsi, r12 ; mov rdx, rax ; call r14
0xffffff80008aa436 : mov rsi, r12 ; mov rdx, rax ; call r15
0xffffff80004e9ecf : mov rsi, r13 ; call 0xffffff800010e146
0xffffff800066366d : mov rsi, r13 ; call 0xffffff800028e1b6
0xffffff80005025a6 : mov rsi, r13 ; call 0xffffff800029e855
0xffffff80006a588d : mov rsi, r13 ; call 0xffffff80002d4ef6
0xffffff80007fa92c : mov rsi, r13 ; call 0xffffff8000396b85
0xffffff800076ebac : mov rsi, r13 ; call 0xffffff8000396b86
0xffffff80002ae485 : mov rsi, r13 ; call 0xffffff800074ac49
0xffffff800029ddf5 : mov rsi, r13 ; call r12
0xffffff800089426f : mov rsi, r13 ; call r15
0xffffff80002d0896 : mov rsi, r13 ; call rax
0xffffff80003ac3f1 : mov rsi, r13 ; call rbx
0xffffff800066369a : mov rsi, r13 ; mov edx, ebx ; call 0xffffff800028e1b8
0xffffff8000502615 : mov rsi, r13 ; mov edx, ebx ; call 0xffffff800029e857
0xffffff800087c2c5 : mov rsi, r13 ; mov r8d, eax ; call rbx
0xffffff80007eb018 : mov rsi, r13 ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000909467 : mov rsi, r13 ; mov rcx, r12 ; call rax
0xffffff80008fcb1a : mov rsi, r13 ; mov rcx, r15 ; call rax
0xffffff80008f6781 : mov rsi, r13 ; mov rcx, r15 ; mov r9, r14 ; call rax
0xffffff8000881c90 : mov rsi, r13 ; mov rdx, r15 ; call rax
0xffffff800064e837 : mov rsi, r14 ; call 0xffffff800010e059
0xffffff80004eb760 : mov rsi, r14 ; call 0xffffff800010e146
0xffffff8000301f0f : mov rsi, r14 ; call 0xffffff800028e1b5
0xffffff800065e996 : mov rsi, r14 ; call 0xffffff800028e4a6
0xffffff80005022a1 : mov rsi, r14 ; call 0xffffff800029e859
0xffffff80006a24a0 : mov rsi, r14 ; call 0xffffff80002c36c6
0xffffff80006a65c7 : mov rsi, r14 ; call 0xffffff80002d4ef6
0xffffff8000489964 : mov rsi, r14 ; call 0xffffff8000495bc5
0xffffff80004b49ab : mov rsi, r14 ; call r12
0xffffff8000555247 : mov rsi, r14 ; call r15
0xffffff80005225d1 : mov rsi, r14 ; call rax
0xffffff80004b4f52 : mov rsi, r14 ; call rbx
0xffffff8000534418 : mov rsi, r14 ; call rcx
0xffffff8000713247 : mov rsi, r14 ; jmp 0xffffff800071357c
0xffffff800060e5a9 : mov rsi, r14 ; lea rdx, [rbp - 0x78] ; call rcx
0xffffff800042c0a2 : mov rsi, r14 ; mov r8, r15 ; call 0xffffff8000508348
0xffffff80007eaea6 : mov rsi, r14 ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008f5f53 : mov rsi, r14 ; mov rcx, r13 ; call rax
0xffffff8000905d77 : mov rsi, r14 ; mov rdx, r12 ; call r8
0xffffff80007908d5 : mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff80003592ef : mov rsi, r14 ; mov rdx, r15 ; call 0xffffff8000315578
0xffffff8000776371 : mov rsi, r14 ; mov rdx, r15 ; call 0xffffff8000396b89
0xffffff80008835a1 : mov rsi, r14 ; mov rdx, rbx ; call rax
0xffffff800084568a : mov rsi, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800065f1ca : mov rsi, r15 ; call 0xffffff800028e1b6
0xffffff8000766da4 : mov rsi, r15 ; call 0xffffff8000396b86
0xffffff80002938e9 : mov rsi, r15 ; call qword ptr [rax]
0xffffff80002db833 : mov rsi, r15 ; call r12
0xffffff800028d7ca : mov rsi, r15 ; call r14
0xffffff80007909a3 : mov rsi, r15 ; call rax
0xffffff80008fb8c7 : mov rsi, r15 ; call rbx
0xffffff80008fcff2 : mov rsi, r15 ; call rcx
0xffffff80008fb9b6 : mov rsi, r15 ; mov ecx, r12d ; call rbx
0xffffff800065f1f7 : mov rsi, r15 ; mov edx, r12d ; call 0xffffff800028e1b9
0xffffff8000658395 : mov rsi, r15 ; mov edx, r14d ; call r8
0xffffff80008ee15b : mov rsi, r15 ; mov edx, r14d ; call rcx
0xffffff80008f5d1c : mov rsi, r15 ; mov r9, r13 ; call rax
0xffffff80008f5e23 : mov rsi, r15 ; mov r9, r13 ; call rbx
0xffffff80008f6a01 : mov rsi, r15 ; mov rcx, r13 ; mov r9, r14 ; call rax
0xffffff800076eb6c : mov rsi, r15 ; mov rdx, r13 ; call 0xffffff8000396b89
0xffffff8000440996 : mov rsi, r15 ; mov rdx, r13 ; call 0xffffff80007ecbf8
0xffffff800087f092 : mov rsi, r15 ; mov rdx, r13 ; call rax
0xffffff800049d1d3 : mov rsi, r15 ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff800060fc91 : mov rsi, r15 ; mov rdx, r14 ; call rax
0xffffff800060ec22 : mov rsi, r15 ; mov rdx, r14 ; call rcx
0xffffff8000397b73 : mov rsi, r15 ; mov rdx, rax ; call r14
0xffffff80007d42ec : mov rsi, r8 ; call 0xffffff800010e059
0xffffff8000421144 : mov rsi, r9 ; call rcx
0xffffff80006783eb : mov rsi, rax ; call 0xffffff800029ab96
0xffffff800076882b : mov rsi, rax ; call 0xffffff8000398566
0xffffff80008e3275 : mov rsi, rax ; call 0xffffff80008df535
0xffffff800081df7f : mov rsi, rax ; call r12
0xffffff8000812752 : mov rsi, rax ; call r14
0xffffff800082e5ca : mov rsi, rax ; call r15
0xffffff80008876dd : mov rsi, rax ; call rbx
0xffffff80005526a6 : mov rsi, rax ; call rcx
0xffffff8000755f10 : mov rsi, rax ; jg 0xffffff8000755ee6 ; pop rbp ; ret
0xffffff8000533d10 : mov rsi, rax ; jmp rcx
0xffffff80008ec2d4 : mov rsi, rax ; jmp rdi
0xffffff8000686ba3 : mov rsi, rax ; mov rax, qword ptr [rbp - 0x58] ; call qword ptr [rax]
0xffffff80008744b7 : mov rsi, rax ; mov rcx, r9 ; pop rbp ; jmp r11
0xffffff8000819c79 : mov rsi, rax ; mov rdx, r12 ; call r15
0xffffff8000819bb7 : mov rsi, rax ; mov rdx, r14 ; call r12
0xffffff80006a1ff0 : mov rsi, rax ; pop rbp ; jmp 0xffffff80002c36c7
0xffffff80007f0190 : mov rsi, rax ; pop rbp ; jmp r11
0xffffff80008151e5 : mov rsi, rax ; pop rbp ; jmp rcx
0xffffff80004ab073 : mov rsi, rax ; sub eax, esi ; pop rbp ; ret
0xffffff800029bcac : mov rsi, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff800085a38f : mov rsi, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff80004d1ef6 : mov rsi, rbx ; call 0xffffff800010e145
0xffffff80004df96b : mov rsi, rbx ; call 0xffffff800010e146
0xffffff8000301f28 : mov rsi, rbx ; call 0xffffff800028e1b5
0xffffff80006611db : mov rsi, rbx ; call 0xffffff800028e1b6
0xffffff80002fe91c : mov rsi, rbx ; call 0xffffff800029ac15
0xffffff80006a256f : mov rsi, rbx ; call 0xffffff80002c36c6
0xffffff8000298cdf : mov rsi, rbx ; call 0xffffff80002d4ef5
0xffffff80006a5d53 : mov rsi, rbx ; call 0xffffff80002d4ef6
0xffffff80003753b0 : mov rsi, rbx ; call qword ptr [rax]
0xffffff80007d16c4 : mov rsi, rbx ; call r12
0xffffff8000543b6c : mov rsi, rbx ; call r14
0xffffff800029db02 : mov rsi, rbx ; call r15
0xffffff80002ce379 : mov rsi, rbx ; call rax
0xffffff8000288304 : mov rsi, rbx ; call rcx
0xffffff8000662afe : mov rsi, rbx ; mov edx, dword ptr [rbp - 0x78] ; call 0xffffff800028e1b9
0xffffff8000661208 : mov rsi, rbx ; mov edx, r15d ; call 0xffffff800028e1b9
0xffffff8000757acc : mov rsi, rbx ; mov rcx, r12 ; call r15
0xffffff80008a15ea : mov rsi, rbx ; mov rdi, rax ; call r12
0xffffff800087e8e0 : mov rsi, rbx ; mov rdx, r13 ; call rax
0xffffff800087e3f1 : mov rsi, rbx ; mov rdx, r14 ; call rax
0xffffff80008f0851 : mov rsi, rbx ; mov rdx, r15 ; call rax
0xffffff8000413bef : mov rsi, rbx ; mov rdx, rcx ; call 0xffffff80003dfee8
0xffffff8000800b3a : mov rsi, rbx ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80008bbe44 : mov rsi, rcx ; call 0xffffff8000857f59
0xffffff80004f9023 : mov rsi, rcx ; jne 0xffffff80004f9016 ; pop rbp ; ret
0xffffff80008456b9 : mov rsi, rcx ; mov rcx, r8 ; pop rbp ; jmp rax
0xffffff80002908e5 : mov rsi, rdi ; jne 0xffffff80002908d6 ; pop rbp ; ret
0xffffff800038971a : mov rsi, rdi ; shr rsi, 0x20 ; call qword ptr [rax]
0xffffff80008b7b3d : mov rsi, rdx ; jne 0xffffff80008b7b39 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008bdc29 : mov rsi, rdx ; mov rdx, r15 ; call r14
0xffffff800028a901 : mov rsi, rdx ; mov rdx, rcx ; pop rbp ; jmp r8
0xffffff80007f01df : mov rsi, rdx ; pop rbp ; jmp rax
0xffffff800084589b : mov rsp, rbx ; mov rdi, r15 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800039a793 : mov rsp, rsi ; call rdi
0xffffff80008358ee : mov sil, al ; mov dl, al ; jmp rdi
0xffffff80008218da : mov spl, 0xff ; pop rbp ; ret
0xffffff800044d56e : mov ss, ecx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033dba1 : mov ss, word ptr [rax - 0xa000000] ; ret
0xffffff800065d40e : mov ss, word ptr [rax] ; ret
0xffffff80003c8e4e : mov ss, word ptr [rbx + 0x58bffff] ; ret 0x73
0xffffff800053ea59 : mov ss, word ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800071ea26 : mov word ptr [r9], ax ; xor eax, eax ; pop rbp ; ret
0xffffff8000388d0b : mov word ptr [rax + 0x1680], dx ; pop rbp ; ret
0xffffff80006c83a3 : mov word ptr [rax + 0x28], si ; xor eax, eax ; pop rbp ; ret
0xffffff800050ced8 : mov word ptr [rax + 0x68], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80008790a2 : mov word ptr [rax + 0xc0], cx ; pop rbp ; ret
0xffffff8000558e96 : mov word ptr [rax + rax*2], fs ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff8000755308 : mov word ptr [rax + rdi - 0x28d01800], ss ; ret
0xffffff800029e975 : mov word ptr [rax], ax ; test eax, eax ; je 0xffffff800029e986 ; pop rbp ; ret
0xffffff80002c207a : mov word ptr [rax], cx ; je 0xffffff80002c2087 ; pop rbp ; ret
0xffffff8000281eb6 : mov word ptr [rax], es ; add byte ptr [rax], al ; call 0xffffff800028e156
0xffffff800066e541 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff8000370246 : mov word ptr [rbp + 0x31], es ; rol dword ptr [rcx - 0x2f], cl ; ret
0xffffff8000498d7e : mov word ptr [rbp - 0x76bbffb7], fs ; ret 0x8945
0xffffff80003266a1 : mov word ptr [rbx + 0x4c], ax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800064bfbf : mov word ptr [rbx + 0xc], cx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000527db0 : mov word ptr [rbx - 0x42], fs ; push qword ptr [rcx] ; fild dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000396214 : mov word ptr [rbx], r14w ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000373410 : mov word ptr [rbx], ss ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80006788cd : mov word ptr [rcx + 0xf], es ; mov dh, 0xcf ; lea rsi, [rbp - 0x68] ; call rbx
0xffffff80003b40f0 : mov word ptr [rcx + 1], es ; ret
0xffffff8000855147 : mov word ptr [rcx + rax - 0x20], cs ; jmp rax
0xffffff800067898d : mov word ptr [rcx + rcx*4 - 6], es ; call rbx
0xffffff800036fdc8 : mov word ptr [rcx - 0x2f], es ; ret 0x8944
0xffffff8000872790 : mov word ptr [rcx - 0x5a], fs ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006238f4 : mov word ptr [rcx], ds ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000570961 : mov word ptr [rcx], es ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b3eb2a : mov word ptr [rcx], es ; ja 0xffffff8000b3eafa ; imul edx, dword ptr [rcx + rax*4 - 0xf], 0x77 ; ret
0xffffff80007b9996 : mov word ptr [rdi + 0x1c], si ; pop rbp ; ret
0xffffff80007962d8 : mov word ptr [rdi + 0x3c], 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80007962a8 : mov word ptr [rdi + 0x3c], si ; xor eax, eax ; pop rbp ; ret
0xffffff80004fa644 : mov word ptr [rdi + 0x6a], si ; pop rbp ; ret
0xffffff800081ed37 : mov word ptr [rdi + 0x70], cx ; pop rbp ; ret
0xffffff800062172e : mov word ptr [rdi + 0xd2], ax ; pop rbp ; ret
0xffffff80006b1eca : mov word ptr [rdi + 2], 0 ; pop rbp ; ret
0xffffff800034277a : mov word ptr [rdi + rax*8 + 4], cx ; pop rbp ; ret
0xffffff8000b3d118 : mov word ptr [rdx], cs ; ret 0x29dc
0xffffff80007715b0 : mov word ptr [rdx], ds ; ret 0x48ff
0xffffff800064faee : mov word ptr [rdx], es ; add byte ptr [rax], al ; fistp word ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000644129 : mov word ptr [rdx], es ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000645c91 : mov word ptr [rdx], es ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006f00ed : mov word ptr [rsi + 0x10], ax ; xor eax, eax ; pop rbp ; ret
0xffffff80007d4d27 : mov word ptr [rsi + 0x16], cx ; pop rbp ; ret
0xffffff80005f14f1 : mov word ptr [rsi + 0x1e], cx ; pop rbp ; ret
0xffffff80005efb5a : mov word ptr [rsi + 0x8e], ax ; pop rbp ; ret
0xffffff8000720daf : mov word ptr [rsi], 0 ; pop rbp ; ret
0xffffff800058461b : mov word ptr [rsi], ax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000526b2b : mov word ptr [rsi], ax ; xor eax, eax ; pop rbp ; ret
0xffffff8000399283 : mov word ptr [rsi], cx ; xor eax, eax ; ret
0xffffff80008ae3d3 : mov word ptr [rsp], fs ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff800036f75b : movabs al, byte ptr [0x1da0105c0c1c889] ; ret 0xf089
0xffffff8000b3c2c4 : movabs al, byte ptr [0x2041d22841ca8845] ; ret 0xc220
0xffffff80003acf87 : movabs al, byte ptr [0x274c08548000000] ; call rax
0xffffff80008ef4b9 : movabs al, byte ptr [0x274c08548000003] ; call rax
0xffffff800065b8b4 : movabs al, byte ptr [0x28f1e8c03100394e] ; ret
0xffffff800065b408 : movabs al, byte ptr [0x308de8c0310034f6] ; ret
0xffffff80002a2b8f : movabs al, byte ptr [0x3948198b48000008] ; ret
0xffffff800084219d : movabs al, byte ptr [0x450fdb85c1440f05] ; ret
0xffffff8000394eda : movabs al, byte ptr [0x5d00000001b80076] ; ret
0xffffff80003a2897 : movabs al, byte ptr [0x5d00000005000001] ; ret
0xffffff800072e596 : movabs al, byte ptr [0x5d01344f80000004] ; ret
0xffffff800026d6ac : movabs al, byte ptr [0x5d10c48348000240] ; ret
0xffffff800028e191 : movabs al, byte ptr [0x5d5b08c483480085] ; ret
0xffffff80008112e1 : movabs al, byte ptr [0x5d5e415b00000090] ; ret
0xffffff80008809d7 : movabs al, byte ptr [0x5d5e415b00000170] ; ret
0xffffff80008904f7 : movabs al, byte ptr [0x5d5e415b00000178] ; ret
0xffffff800036808c : movabs al, byte ptr [0x5dc031ee75007268] ; ret
0xffffff8000847d51 : movabs al, byte ptr [0x6b00000000000000] ; ret
0xffffff80006e67a0 : movabs al, byte ptr [0x8148227400000004] ; ret
0xffffff80006bdac8 : movabs al, byte ptr [0x8348f8738b48ffbd] ; ret
0xffffff800069b668 : movabs al, byte ptr [0x8348fb894c000000] ; ret
0xffffff80007add76 : movabs al, byte ptr [0x8349c4ff49000000] ; call qword ptr [rax]
0xffffff80005e0dcc : movabs al, byte ptr [0x840fe48445fff48d] ; ret
0xffffff8000b4526b : movabs al, byte ptr [0x884138048a428048] ; ret 0x45
0xffffff8000b3cc45 : movabs al, byte ptr [0x88c000c888e812dd] ; ret 0xe280
0xffffff800079215a : movabs al, byte ptr [0x892856ff41f7894c] ; ret
0xffffff8000b3c82c : movabs al, byte ptr [0x8941e8adf8f705a0] ; ret
0xffffff80007fa110 : movabs al, byte ptr [0x8948f7894cfffffc] ; ret 0x11e8
0xffffff80007fa782 : movabs al, byte ptr [0x8948ff894cfffffc] ; ret 0x4fe8
0xffffff800087b987 : movabs al, byte ptr [0x894cdf8949fe894c] ; ret 0x8941
0xffffff80003efe5e : movabs al, byte ptr [0x894cec894dd68941] ; ret
0xffffff80007596e0 : movabs al, byte ptr [0x9955e8ef894c1889] ; ret
0xffffff80002922aa : movabs al, byte ptr [0xbc8b4a006d7c8d4f] ; jmp rax
0xffffff8000462950 : movabs al, byte ptr [0xe8fffffeecb58d48] ; ret
0xffffff80003c4de0 : movabs al, byte ptr [0xe9eb894d884d8b4c] ; ret 0xfff3
0xffffff800083fe14 : movabs al, byte ptr [0xf641000001d0840f] ; ret 0xb820
0xffffff80008955ee : movabs al, byte ptr [0xf766f63145a4758b] ; ret 0x720
0xffffff800048902c : movabs al, byte ptr [0xff48c38948fff0d5] ; ret
0xffffff800046d38f : movabs al, byte ptr [0xff48c6ff48000000] ; ret 0xff48
0xffffff800077039c : movabs al, byte ptr [0xff48e43145ffb277] ; ret
0xffffff8000810267 : movabs al, byte ptr [0xff813c8944fffffe] ; ret 0x8948
0xffffff80008403b6 : movabs al, byte ptr [0xffeeffd3eb84458b] ; call rbx
0xffffff800048b957 : movabs al, byte ptr [0xfffd4485c7fffffc] ; call qword ptr [rsi]
0xffffff80004b2a66 : movabs al, byte ptr [0xfffe418d80fffffe] ; call qword ptr [rax]
0xffffff8000b3c794 : movabs byte ptr [0x20d1284144c98041], al ; ret 0xd200
0xffffff80008b1891 : movabs byte ptr [0x39d7b60f40000000], al ; ret 0x840f
0xffffff80006296c2 : movabs byte ptr [0x440f0ac083004fa4], al ; ret
0xffffff800066df9b : movabs byte ptr [0x4fae8c031003400], al ; ret 0x4cff
0xffffff800045610a : movabs byte ptr [0x8348c08941ffff26], al ; ret
0xffffff800053f5a3 : movabs byte ptr [0x8348c6ff48000000], al ; ret
0xffffff80007df75a : movabs byte ptr [0x8348c6ff49001211], al ; ret
0xffffff8000449317 : movabs byte ptr [0x850f02c2f6000000], al ; ret 0
0xffffff80003d10fa : movabs byte ptr [0x8941f0894d000783], al ; ret
0xffffff8000745a19 : movabs byte ptr [0x8948589c697c003e], al ; ret
0xffffff8000b4929a : movabs byte ptr [0x8949e9214dc98949], al ; ret 0x214d
0xffffff8000728de5 : movabs byte ptr [0x894dd0458b4cffdd], al ; ret 0x8b44
0xffffff80006634dc : movabs byte ptr [0xafb9e8c03100349a], al ; ret 0xf0ff
0xffffff8000652964 : movabs byte ptr [0xb841e8c031003565], al ; ret
0xffffff80002fff44 : movabs byte ptr [0xe8000000d7be0064], al ; jmp rcx
0xffffff80005f952a : movabs byte ptr [0xff48c0ff48000000], al ; ret 0xff48
0xffffff800056c9f1 : movabs dword ptr [0x358bdb85c389ffff], eax ; ret 0x56bc
0xffffff800078c981 : movabs dword ptr [0x5d008b48078b48c1], eax ; ret
0xffffff8000698c62 : movabs dword ptr [0x5d5b28c48348ffcf], eax ; ret
0xffffff80005cd859 : movabs dword ptr [0x80c18148c12911e1], eax ; ret
0xffffff8000250e3c : movabs dword ptr [0x810000014b830fcb], eax ; ret 0
0xffffff8000509759 : movabs dword ptr [0x8148c38948ffe90f], eax ; ret
0xffffff800056c0a1 : movabs dword ptr [0x8330558b41fffff8], eax ; ret 0x81d8
0xffffff8000728cdb : movabs dword ptr [0x894dd0458b4cffdd], eax ; ret 0x758b
0xffffff80003d49b2 : movabs dword ptr [0x940f02e683000000], eax ; ret 0xc031
0xffffff8000454509 : movabs dword ptr [0xe3d8d48c031ffe4], eax ; ret 0x51
0xffffff80007ae7c1 : movabs dword ptr [0xff48df89df430fce], eax ; ret 0x8949
0xffffff80007ae060 : movabs dword ptr [0xff49c889c8430ff2], eax ; ret 0x894c
0xffffff800042a7d9 : movabs dword ptr [0xfff9798d80ffce38], eax ; jmp qword ptr [rax]
0xffffff800076461f : movabs eax, dword ptr [0x3fb6e8c289480037] ; ret
0xffffff8000669d6c : movabs eax, dword ptr [0x4729e8c03100343c] ; ret 0xe9ff
0xffffff80002661e3 : movabs eax, dword ptr [0x5c61b75c0840083] ; ret
0xffffff8000338e87 : movabs eax, dword ptr [0x5dc0310277007c14] ; ret
0xffffff80006564ab : movabs eax, dword ptr [0x5dc031c35d003b16] ; ret
0xffffff80008786a2 : movabs eax, dword ptr [0x6b48fffffef2e9ff] ; ret 0x4d38
0xffffff800087d272 : movabs eax, dword ptr [0x80b8fffffb9be9ff] ; ret
0xffffff80005ffd72 : movabs eax, dword ptr [0x8348f8738b48004d] ; ret
0xffffff800069b542 : movabs eax, dword ptr [0x8348fb894c000000] ; ret
0xffffff80006a048b : movabs eax, dword ptr [0x8948d989480011c0] ; ret
0xffffff8000663038 : movabs eax, dword ptr [0xb45de8c0310034a1] ; ret 0xf0ff
0xffffff8000764554 : movabs eax, dword ptr [0xde81e8ff894cffb6] ; ret 0x31ff
0xffffff8000764524 : movabs eax, dword ptr [0xdeb1e8ff894cffb6] ; ret 0x31ff
0xffffff8000442571 : movabs eax, dword ptr [0xe8df89487f000000] ; ret 0xf50a
0xffffff80004d30fa : movabs eax, dword ptr [0xffc05d8b48000001] ; ret
0xffffff8000491b34 : movabs eax, dword ptr [0xffffffc2d5ffffc2] ; ret 0xffff
0xffffff8000864668 : movaps xmm0, xmmword ptr [rax] ; pop rbp ; ret
0xffffff80008511f3 : movaps xmm5, xmmword ptr [rbp - 0x60] ; add rsp, 0x60 ; leave ; ret
0xffffff800062f015 : movd mm0, eax ; mulss xmm0, xmm1 ; pop rbp ; ret
0xffffff800062f014 : movd mm0, r8d ; mulss xmm0, xmm1 ; pop rbp ; ret
0xffffff8000885ace : movntps xmmword ptr [rax], xmm0 ; pop rbp ; ret
0xffffff80005929a8 : movsb byte ptr [rdi], byte ptr [rsi] ; add bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006296c3 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r11 + 0x440f0ac0], r8b ; ret
0xffffff8000451ebe : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r15], cl ; mov dh, 0x44 ; or bh, bh ; pop rbp ; ret
0xffffff800025f593 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80007b1ddb : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80008ae3d5 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004bb70d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr gs:[rax - 1], cl ; ret
0xffffff800026ef52 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff800060de6e : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x35b43], al ; jmp rax
0xffffff8000756af7 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x5dc03100 ; ret
0xffffff8000498e5c : movsb byte ptr [rdi], byte ptr [rsi] ; add r8b, bpl ; adc r8b, byte ptr [rax] ; add bh, bh ; ret
0xffffff80002b9628 : movsb byte ptr [rdi], byte ptr [rsi] ; and ebx, edi ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80005724ea : movsb byte ptr [rdi], byte ptr [rsi] ; call 0xffffff800010e057
0xffffff8000769098 : movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; ret 0x48ff
0xffffff800068c364 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; add byte ptr [rax - 0x77], r9b ; ret 0x70e8
0xffffff8000886deb : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c6d9d : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax + 0x69] ; ret
0xffffff8000894699 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028e384 : movsb byte ptr [rdi], byte ptr [rsi] ; fdivr qword ptr [rcx] ; add byte ptr [rax], dh ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a5678 : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0xffffff80003a56e8 ; add bh, bh ; ret
0xffffff8000651af8 : movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0xffffff800067298a : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, 0xc0310033 ; call 0xffffff800029e859
0xffffff80002cf627 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rcx, rbx ; call rax
0xffffff800062b95c : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rdi], 0x5d ; ret
0xffffff80007e7ea8 : movsb byte ptr [rdi], byte ptr [rsi] ; or edx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005b107b : movsb byte ptr [rdi], byte ptr [rsi] ; pop rbp ; ret
0xffffff800059ecfc : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add al, ch ; pushfq ; ret 0xffcf
0xffffff800059ecd2 : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax - 0x77], cl ; ret 0x3e8
0xffffff800059ed16 : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax - 0x77], cl ; ret 0xbfe8
0xffffff800076dd98 : movsb byte ptr [rdi], byte ptr [rsi] ; push rdx ; ret 0x4dff
0xffffff800030d30c : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff80002eac2e : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x65
0xffffff8000331ea8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff5
0xffffff80008788e8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0xffffff8000645f74 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; pop rbp ; ret
0xffffff8000373bd0 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rcx - 0x3e912615], esp ; ret
0xffffff80002931e0 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000693547 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000834378 : movsb byte ptr [rdi], byte ptr [rsi] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000290ec8 : movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rax], eax ; pop rbp ; ret
0xffffff800075f228 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; ret
0xffffff8000399264 : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0xffffff80005520f6 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [r9], sil ; shr al, 0xa0 ; ret
0xffffff8000268785 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add al, ch ; ret 0x259
0xffffff80003f343e : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff8000498dfa : movsd dword ptr [rdi], dword ptr [rsi] ; add r8b, bpl ; scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80008ed0d9 : movsd dword ptr [rdi], dword ptr [rsi] ; and al, 0 ; pop rbp ; ret
0xffffff800034b6e7 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a7644 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763597 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; ret 0x41ff
0xffffff80008ba24a : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff800050a317 : movsd dword ptr [rdi], dword ptr [rsi] ; js 0xffffff800050a344 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005f4187 : movsd dword ptr [rdi], dword ptr [rsi] ; lea ebx, [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008d01be : movsd dword ptr [rdi], dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000737334 : movsd dword ptr [rdi], dword ptr [rsi] ; mov bh, bh ; call rcx
0xffffff800080d089 : movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, r8d ; pop rbp ; ret
0xffffff8000316167 : movsd dword ptr [rdi], dword ptr [rsi] ; mov esp, 0x89480000 ; ret
0xffffff8000886c97 : movsd dword ptr [rdi], dword ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007543ee : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff8000765557 : movsd dword ptr [rdi], dword ptr [rsi] ; push rcx ; ret
0xffffff800066dd97 : movsd dword ptr [rdi], dword ptr [rsi] ; push rdi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ab99d : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80004b4447 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0
0xffffff8000772cd7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4cff
0xffffff80002f76e7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x7f
0xffffff800067432e : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe9ff
0xffffff8000421e97 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffce
0xffffff8000508c47 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffdc
0xffffff8000546bb7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0xffffff800089cfe7 : movsd dword ptr [rdi], dword ptr [rsi] ; sahf ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff80007ad5cd : movsd dword ptr [rdi], dword ptr [rsi] ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x39] ; ret
0xffffff8000767f97 : movsd dword ptr [rdi], dword ptr [rsi] ; stosb byte ptr [rdi], al ; ret 0x8bff
0xffffff8000772ac4 : movsd dword ptr [rdi], dword ptr [rsi] ; sub eax, dword ptr [rax] ; call 0xffffff800039a706
0xffffff800066299c : movsd dword ptr [rdi], dword ptr [rsi] ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff8000535677 : movsd dword ptr [rdi], dword ptr [rsi] ; xor bl, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080d088 : movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, r8d ; pop rbp ; ret
0xffffff8000480ed8 : movsx eax, al ; pop rbp ; ret
0xffffff800080df3a : movsx eax, bh ; pop rbp ; ret
0xffffff8000484a63 : movsx eax, byte ptr [rbx + r14] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000484a64 : movsx eax, byte ptr [rbx + rsi] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000366778 : movsx eax, cl ; movsx ecx, dl ; sub eax, ecx ; pop rbp ; ret
0xffffff8000701e35 : movsx eax, di ; pop rbp ; ret
0xffffff800080df39 : movsx eax, dil ; pop rbp ; ret
0xffffff8000451f03 : movsx eax, word ptr [rax] ; pop rbp ; ret
0xffffff80002db714 : movsx eax, word ptr [rdi + 0x2d2] ; pop rbp ; ret
0xffffff800056315e : movsx eax, word ptr [rdi + 0x9a] ; pop rbp ; ret
0xffffff80006d023a : movsx ebx, ax ; jmp 0xffffff80006d0193
0xffffff80003667c4 : movsx ecx, al ; sub eax, ecx ; pop rbp ; ret
0xffffff800036677b : movsx ecx, dl ; sub eax, ecx ; pop rbp ; ret
0xffffff80003667c3 : movsx ecx, r8b ; sub eax, ecx ; pop rbp ; ret
0xffffff8000267804 : movsx edi, ah ; mov rbx, rax ; call rbx
0xffffff800029dcc0 : movsx edi, al ; mov rsi, qword ptr [rbp - 0x78] ; call r14
0xffffff800029e3f0 : movsx edi, al ; mov rsi, r12 ; call r15
0xffffff800029ed15 : movsx edi, bh ; pop rbp ; jmp rsi
0xffffff800029e41e : movsx edi, byte ptr [rax + rcx] ; mov rsi, r12 ; call r15
0xffffff800029df3b : movsx edi, byte ptr [rax] ; mov rsi, qword ptr [rbp - 0x78] ; call rcx
0xffffff800029dd91 : movsx edi, byte ptr [rbp - 0x30] ; mov rsi, rbx ; call r15
0xffffff800029ed14 : movsx edi, dil ; pop rbp ; jmp rsi
0xffffff8000267803 : movsx edi, r12b ; mov rbx, rax ; call rbx
0xffffff80003a84d7 : movsx esi, word ptr [rax + rax] ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80007779a1 : movsxd rax, dword ptr [r12 + r15*4] ; add rax, r12 ; jmp rax
0xffffff80002715ec : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0xffffff8000491ebf : movsxd rax, dword ptr [r12 + rbx*4] ; add rax, r12 ; jmp rax
0xffffff8000855144 : movsxd rax, dword ptr [r12 + rcx*4] ; add rax, r12 ; jmp rax
0xffffff80008a12b7 : movsxd rax, dword ptr [r13 + r15*4] ; add rax, r13 ; jmp rax
0xffffff8000375205 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0xffffff800089e947 : movsxd rax, dword ptr [r14 + r12*4] ; add rax, r14 ; jmp rax
0xffffff80005f6df4 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0xffffff8000309622 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0xffffff80003b3955 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0xffffff80005ff103 : movsxd rax, dword ptr [r8 + rsi*4] ; add rax, r8 ; jmp rax
0xffffff80008cb201 : movsxd rax, dword ptr [r9 + rax*4] ; add rax, r9 ; jmp rax
0xffffff8000276470 : movsxd rax, dword ptr [rax + 0x10] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007fbbfc : movsxd rax, dword ptr [rax + 0x91c] ; pop rbp ; ret
0xffffff80003b3956 : movsxd rax, dword ptr [rax + rax*4] ; add rax, r8 ; jmp rax
0xffffff80005ff104 : movsxd rax, dword ptr [rax + rsi*4] ; add rax, r8 ; jmp rax
0xffffff80002bb192 : movsxd rax, dword ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000311ea9 : movsxd rax, dword ptr [rax] ; mov ebx, r9d ; call 0xffffff800028e157
0xffffff800049e17c : movsxd rax, dword ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80004b7bb0 : movsxd rax, dword ptr [rax] ; mov rax, rdi ; pop rbp ; ret
0xffffff80004a804e : movsxd rax, dword ptr [rax] ; pop rbp ; ret
0xffffff80004a325c : movsxd rax, dword ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000375206 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0xffffff80008a12b8 : movsxd rax, dword ptr [rbp + rdi*4] ; add rax, r13 ; jmp rax
0xffffff8000281f2b : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0xffffff800072bb00 : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0xffffff80006ecd92 : movsxd rax, dword ptr [rcx + r13*4] ; add rax, rcx ; jmp rax
0xffffff80008cb202 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, r9 ; jmp rax
0xffffff80008d50ea : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0xffffff80004578e3 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; mov rcx, r14 ; jmp rax
0xffffff80003b642a : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; xor esi, esi ; jmp rax
0xffffff8000545f05 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; xor r13d, r13d ; jmp rax
0xffffff800067ec34 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; xor r15d, r15d ; jmp rax
0xffffff80006ecd93 : movsxd rax, dword ptr [rcx + rbp*4] ; add rax, rcx ; jmp rax
0xffffff800048657a : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0xffffff800055656b : movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0xffffff80007ea668 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0xffffff800072bb01 : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0xffffff800074672c : movsxd rax, dword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; pop rbp ; ret
0xffffff80007960a5 : movsxd rax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007961e5 : movsxd rax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff8000309623 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0xffffff800027014f : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0xffffff80003820d9 : movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0xffffff80003c1c4f : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0xffffff8000754022 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003907f2 : movsxd rax, dword ptr [rip + 0x75b348] ; pop rbp ; ret
0xffffff80005f6df5 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0xffffff80003b38cc : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0xffffff80003a09f7 : movsxd rax, dword ptr [rsi + rbx*4] ; add rax, rsi ; jmp rax
0xffffff80004be37b : movsxd rax, dword ptr [rsi + rcx*4] ; add rax, rsi ; jmp rax
0xffffff800078c49e : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0xffffff80006bfab9 : movsxd rax, dword ptr [rsi - 0x76b7fff1] ; ret
0xffffff800089e948 : movsxd rax, dword ptr [rsi] ; add rax, r14 ; jmp rax
0xffffff80002715ed : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0xffffff8000491ec0 : movsxd rax, dword ptr [rsp + rbx*4] ; add rax, r12 ; jmp rax
0xffffff8000855145 : movsxd rax, dword ptr [rsp + rcx*4] ; add rax, r12 ; jmp rax
0xffffff80007779a2 : movsxd rax, dword ptr [rsp + rdi*4] ; add rax, r12 ; jmp rax
0xffffff80004a325b : movsxd rax, dword ptr es:[rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002715eb : movsxd rax, dword ptr fs:[r12 + rax*4] ; add rax, r12 ; jmp rax
0xffffff800065b3a9 : movsxd rax, edi ; cmp al, byte ptr [rax] ; mov rax, qword ptr [rcx + rax*8 - 8] ; call qword ptr [rax]
0xffffff8000807cd7 : movsxd rax, edx ; mov rax, qword ptr [rdi + rax*8 + 0x10] ; pop rbp ; ret
0xffffff8000342755 : movsxd rax, esi ; mov eax, dword ptr [rdi + rax*8] ; pop rbp ; ret
0xffffff80008f25e5 : movsxd rax, esi ; mov qword ptr [rdi + rax*8 + 8], rdx ; pop rbp ; ret
0xffffff80005dfdf6 : movsxd rax, esi ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008f25d5 : movsxd rax, esi ; mov rax, qword ptr [rdi + rax*8 + 8] ; pop rbp ; ret
0xffffff8000388da5 : movsxd rax, esi ; movzx eax, word ptr [rdi + rax*2 + 0x58] ; pop rbp ; ret
0xffffff800041ea69 : movsxd rbp, dword ptr [rbx] ; pop rbp ; ret
0xffffff800088ee0e : movsxd rbp, dword ptr [rdx] ; add byte ptr [rax + 0x5b], ch ; pop r14 ; pop rbp ; ret
0xffffff80002851fb : movsxd rbx, dword ptr [rax + 0x78] ; sbb dword ptr [rcx - 0x7f], eax ; in eax, 0xff ; jmp rax
0xffffff80003464d5 : movsxd rbx, dword ptr [rax] ; or al, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000778059 : movsxd rbx, dword ptr [rbx - 0x76b70003] ; ret
0xffffff80005c0866 : movsxd rbx, dword ptr [rcx + rbx*4] ; add rbx, rcx ; jmp rbx
0xffffff8000590a27 : movsxd rbx, dword ptr [rdi + rcx*4] ; add rbx, rdi ; jmp rbx
0xffffff800058fa97 : movsxd rbx, dword ptr [rdx + rbx*4] ; add rbx, rdx ; jmp rbx
0xffffff8000597d55 : movsxd rbx, dword ptr [rsi + rbx*4] ; add rbx, rsi ; jmp rbx
0xffffff800051f890 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0xffffff800051f8f1 : movsxd rcx, dword ptr [r14 + rcx*4] ; add rcx, r14 ; jmp rcx
0xffffff800026df20 : movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0xffffff80008407c9 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0xffffff80005200d3 : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0xffffff80002b1cda : movsxd rcx, dword ptr [rax + r12*4] ; add rcx, rax ; jmp rcx
0xffffff800029573f : movsxd rcx, dword ptr [rax + r13*4] ; add rcx, rax ; jmp rcx
0xffffff80005167a3 : movsxd rcx, dword ptr [rax + r14*4] ; add rcx, rax ; jmp rcx
0xffffff800027c38e : movsxd rcx, dword ptr [rax + r15*4] ; add rcx, rax ; jmp rcx
0xffffff8000295740 : movsxd rcx, dword ptr [rax + rbp*4] ; add rcx, rax ; jmp rcx
0xffffff8000258313 : movsxd rcx, dword ptr [rax + rbx*4] ; add rcx, rax ; jmp rcx
0xffffff8000275324 : movsxd rcx, dword ptr [rax + rcx*2 - 0x7d] ; ret
0xffffff80008407ca : movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, r8 ; jmp rcx
0xffffff80002b8f88 : movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0xffffff8000749d7e : movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; xor eax, eax ; jmp rcx
0xffffff800027c38f : movsxd rcx, dword ptr [rax + rdi*4] ; add rcx, rax ; jmp rcx
0xffffff8000286b96 : movsxd rcx, dword ptr [rax + rdx*4] ; add rcx, rax ; jmp rcx
0xffffff800028fc41 : movsxd rcx, dword ptr [rax + rsi*4] ; add rcx, rax ; jmp rcx
0xffffff8000580bab : movsxd rcx, dword ptr [rax - 0x75] ; xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff800059e3cb : movsxd rcx, dword ptr [rax - 0x77] ; ret
0xffffff80002b1cdb : movsxd rcx, dword ptr [rax] ; add rcx, rax ; jmp rcx
0xffffff80007f1865 : movsxd rcx, dword ptr [rax] ; add rcx, rax ; mov r14, rdx ; jmp rcx
0xffffff800067f1e4 : movsxd rcx, dword ptr [rax] ; add rcx, rax ; xor r15d, r15d ; jmp rcx
0xffffff80004d01f8 : movsxd rcx, dword ptr [rax] ; jg 0xffffff80004d025e ; pop r14 ; pop rbp ; ret
0xffffff8000861234 : movsxd rcx, dword ptr [rbx + 0x7f] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800054fdba : movsxd rcx, dword ptr [rbx] ; lea rdi, [r14 + rcx*8] ; mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff80005200d4 : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0xffffff800026df21 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, r15 ; jmp rcx
0xffffff80008be67f : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0xffffff800073816b : movsxd rcx, dword ptr [rdi] ; mov bh, 0xc7 ; pop rbp ; ret
0xffffff800083f2b2 : movsxd rcx, dword ptr [rdx + r13*4] ; add rcx, rdx ; jmp rcx
0xffffff800083f2b3 : movsxd rcx, dword ptr [rdx + rbp*4] ; add rcx, rdx ; jmp rcx
0xffffff800051f891 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, r10 ; jmp rcx
0xffffff8000270458 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, rdx ; jmp rcx
0xffffff8000533d0a : movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, rdx ; mov rsi, rax ; jmp rcx
0xffffff800051f8f2 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, r14 ; jmp rcx
0xffffff8000440220 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0xffffff80007ad539 : movsxd rcx, esp ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006034fb : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0xffffff80008188ad : movsxd rdi, dword ptr [rax + r9*4] ; add rdi, rax ; jmp rdi
0xffffff80004c0519 : movsxd rdi, dword ptr [rax + rbx*4] ; add rdi, rax ; jmp rdi
0xffffff80008188ae : movsxd rdi, dword ptr [rax + rcx*4] ; add rdi, rax ; jmp rdi
0xffffff8000584735 : movsxd rdi, dword ptr [rax + rdi*4] ; add rdi, rax ; jmp rdi
0xffffff800066ffc9 : movsxd rdi, dword ptr [rax - 0x76b7fffd] ; ret
0xffffff80007a0b69 : movsxd rdi, dword ptr [rax] ; sti ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000389671 : movsxd rdi, dword ptr [rbx + rbp + 8] ; test r15, r15 ; jne 0xffffff80003896ba ; call qword ptr [rax]
0xffffff80003a38fe : movsxd rdi, dword ptr [rbx + rdi*4] ; add rdi, rbx ; jmp rdi
0xffffff8000806807 : movsxd rdi, dword ptr [rcx + rbx*4] ; add rdi, rcx ; jmp rdi
0xffffff800026695f : movsxd rdi, dword ptr [rcx + rdi*4] ; add rdi, rcx ; jmp rdi
0xffffff800058fabb : movsxd rdi, dword ptr [rdx + r9*4] ; add rdi, rdx ; jmp rdi
0xffffff800058fabc : movsxd rdi, dword ptr [rdx + rcx*4] ; add rdi, rdx ; jmp rdi
0xffffff8000594763 : movsxd rdi, dword ptr [rdx + rcx*4] ; add rdi, rdx ; mov r9, r11 ; jmp rdi
0xffffff80006034fc : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0xffffff8000590721 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, rdx ; jmp rdi
0xffffff80005283b1 : movsxd rdi, dword ptr [rsi + rdi*4] ; add rdi, rsi ; jmp rdi
0xffffff80008ec2ce : movsxd rdi, dword ptr [rsi + rdi*4] ; add rdi, rsi ; mov rsi, rax ; jmp rdi
0xffffff80005020f4 : movsxd rdi, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ef9ff : movsxd rdi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000291a53 : movsxd rdi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030d94b : movsxd rdi, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065e549 : movsxd rdi, esp ; ret 0x45ff
0xffffff800059b7bf : movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0xffffff800059b82f : movsxd rdx, dword ptr [r11 + r10*4] ; add rdx, r11 ; jmp rdx
0xffffff80007be3c8 : movsxd rdx, dword ptr [r11 + rdx*4] ; add rdx, r11 ; jmp rdx
0xffffff8000594742 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0xffffff800051f8c1 : movsxd rdx, dword ptr [r9 + rcx*4] ; add rdx, r9 ; mov ecx, eax ; jmp rdx
0xffffff80005021be : movsxd rdx, dword ptr [rax + 0x20] ; call 0xffffff800030f499
0xffffff800059b7df : movsxd rdx, dword ptr [rax + r9*4] ; add rdx, rax ; jmp rdx
0xffffff80008e24cf : movsxd rdx, dword ptr [rax + rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000572a17 : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, rax ; jmp rdx
0xffffff800080f452 : movsxd rdx, dword ptr [rax + rdi*4] ; add rdx, rax ; jmp rdx
0xffffff8000594743 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, r8 ; jmp rdx
0xffffff8000272c22 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0xffffff800039b8b8 : movsxd rdx, dword ptr [rax + rsi*4] ; add rdx, rax ; jmp rdx
0xffffff8000568c07 : movsxd rdx, dword ptr [rbx + rdi*8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800059b830 : movsxd rdx, dword ptr [rbx + rdx*4] ; add rdx, r11 ; jmp rdx
0xffffff800067ef51 : movsxd rdx, dword ptr [rcx + r12*4] ; add rdx, rcx ; jmp rdx
0xffffff80006eee79 : movsxd rdx, dword ptr [rcx + r13*4] ; add rdx, rcx ; jmp rdx
0xffffff80006ec0ce : movsxd rdx, dword ptr [rcx + r14*4] ; add rdx, rcx ; jmp rdx
0xffffff80005c0cf6 : movsxd rdx, dword ptr [rcx + r8*4] ; add rdx, rcx ; jmp rdx
0xffffff8000512c04 : movsxd rdx, dword ptr [rcx + rax*4] ; add rdx, rcx ; jmp rdx
0xffffff80006eee7a : movsxd rdx, dword ptr [rcx + rbp*4] ; add rdx, rcx ; jmp rdx
0xffffff80003b15ad : movsxd rdx, dword ptr [rcx + rbx*4] ; add rdx, rcx ; jmp rdx
0xffffff800051f8c2 : movsxd rdx, dword ptr [rcx + rcx*4] ; add rdx, r9 ; mov ecx, eax ; jmp rdx
0xffffff800028684d : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0xffffff800028fe6d : movsxd rdx, dword ptr [rcx + rsi*4] ; add rdx, rcx ; jmp rdx
0xffffff800067ef52 : movsxd rdx, dword ptr [rcx] ; add rdx, rcx ; jmp rdx
0xffffff80007f0ef5 : movsxd rdx, dword ptr [rdi + r15*4] ; add rdx, rdi ; jmp rdx
0xffffff80005dde34 : movsxd rdx, dword ptr [rdi + rbp*8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007f0ef6 : movsxd rdx, dword ptr [rdi + rdi*4] ; add rdx, rdi ; jmp rdx
0xffffff800056ec8b : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0xffffff800059b7c0 : movsxd rdx, dword ptr [rdx + rdx*4] ; add rdx, r10 ; jmp rdx
0xffffff8000764db9 : movsxd rdx, dword ptr [rsi + 3] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800080679b : movsxd rdx, dword ptr [rsi + r15*4] ; add rdx, rsi ; jmp rdx
0xffffff80003947cb : movsxd rdx, dword ptr [rsi + rax*4] ; add rdx, rsi ; jmp rdx
0xffffff800080679c : movsxd rdx, dword ptr [rsi + rdi*4] ; add rdx, rsi ; jmp rdx
0xffffff800035a345 : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0xffffff800056ec89 : movsxd rdx, dword ptr cs:[rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0xffffff80007be3c7 : movsxd rdx, dword ptr es:[r11 + rdx*4] ; add rdx, r11 ; jmp rdx
0xffffff800030f35b : movsxd rdx, edx ; add rbx, rdx ; jmp 0xffffff800030f377
0xffffff800049a31a : movsxd rsi, dword ptr [r13 + rsi*4] ; add rsi, r13 ; jmp rsi
0xffffff800048da67 : movsxd rsi, dword ptr [r14 + rsi*4] ; add rsi, r14 ; jmp rsi
0xffffff8000499d40 : movsxd rsi, dword ptr [r15 + rdi*4] ; add rsi, r15 ; xor edi, edi ; jmp rsi
0xffffff8000821a94 : movsxd rsi, dword ptr [rax + 0x7f] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800081bc69 : movsxd rsi, dword ptr [rax + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800082483b : movsxd rsi, dword ptr [rax - 3] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049a31b : movsxd rsi, dword ptr [rbp + rsi*4] ; add rsi, r13 ; jmp rsi
0xffffff80007f178e : movsxd rsi, dword ptr [rbx + r12*4] ; add rsi, rbx ; jmp rsi
0xffffff80007f178f : movsxd rsi, dword ptr [rbx] ; add rsi, rbx ; jmp rsi
0xffffff8000455340 : movsxd rsi, dword ptr [rcx + r13*4] ; add rsi, rcx ; jmp rsi
0xffffff8000455341 : movsxd rsi, dword ptr [rcx + rbp*4] ; add rsi, rcx ; jmp rsi
0xffffff800067be8b : movsxd rsi, dword ptr [rcx + rdx*4] ; add rsi, rcx ; jmp rsi
0xffffff800057a03b : movsxd rsi, dword ptr [rcx + rsi*4] ; add rsi, rcx ; jmp rsi
0xffffff800030f129 : movsxd rsi, dword ptr [rcx - 0x7eb7fffd] ; ret
0xffffff8000499d41 : movsxd rsi, dword ptr [rdi + rdi*4] ; add rsi, r15 ; xor edi, edi ; jmp rsi
0xffffff80002a0a07 : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0xffffff80005c0ccf : movsxd rsi, dword ptr [rdx + r8*4] ; add rsi, rdx ; jmp rsi
0xffffff80005c0cd0 : movsxd rsi, dword ptr [rdx + rax*4] ; add rsi, rdx ; jmp rsi
0xffffff800060106a : movsxd rsi, dword ptr [rdx + rsi*4] ; add rsi, rdx ; jmp rsi
0xffffff800030f029 : movsxd rsi, dword ptr [rdx - 0x7eb7fffd] ; ret
0xffffff8000706c36 : movsxd rsi, dword ptr [rdx] ; add al, ch ; ret 0xc93a
0xffffff8000652adf : movsxd rsi, dword ptr [rip - 0x173fcf00] ; mov bh, 0xb9 ; ret
0xffffff800048da68 : movsxd rsi, dword ptr [rsi + rsi*4] ; add rsi, r14 ; jmp rsi
0xffffff800030f40f : movsxd rsi, esi ; add rdx, rsi ; jmp 0xffffff800030f42b
0xffffff800026517c : movsxd rsi, esi ; ret 0x7580
0xffffff8000762f79 : movsxd rsi, esp ; ret 0x31ff
0xffffff8000685ad9 : movsxd rsp, dword ptr [rax] ; sar edi, 0x5d ; ret
0xffffff80002ed679 : movsxd rsp, dword ptr [rbx - 0x7cb70008] ; ret
0xffffff80009015b8 : movsxd rsp, dword ptr [rbx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80003c1ae5 : movzx eax, ah ; pop rbp ; ret
0xffffff80006d499b : movzx eax, al ; add eax, eax ; pop rbp ; ret
0xffffff80007570e7 : movzx eax, al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800036b188 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000338162 : movzx eax, al ; lea eax, [rax + rax*4] ; pop rbp ; ret
0xffffff80003999a1 : movzx eax, al ; mov dword ptr [rsi], eax ; pop rbp ; ret
0xffffff800028a91a : movzx eax, al ; or eax, 4 ; pop rbp ; ret
0xffffff800026626f : movzx eax, al ; pop rbp ; ret
0xffffff800034b927 : movzx eax, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bdce4 : movzx eax, al ; shl eax, 2 ; pop rbp ; ret
0xffffff80002b760a : movzx eax, al ; shl eax, 4 ; pop rbp ; ret
0xffffff8000505031 : movzx eax, al ; xor eax, 1 ; add eax, ecx ; pop rbp ; ret
0xffffff800058468f : movzx eax, al ; xor eax, 1 ; pop rbp ; ret
0xffffff80002c02bb : movzx eax, ax ; pop rbp ; ret
0xffffff800080dbde : movzx eax, ax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000672034 : movzx eax, ax ; shr ecx, 0x10 ; jne 0xffffff8000672039 ; pop rbp ; ret
0xffffff80002b7b05 : movzx eax, bh ; pop rbp ; ret
0xffffff800039a46d : movzx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003bad3b : movzx eax, byte ptr [rax + 0x139] ; pop rbp ; ret
0xffffff80003bad8b : movzx eax, byte ptr [rax + 0x140] ; pop rbp ; ret
0xffffff8000683d36 : movzx eax, byte ptr [rax + 0x30] ; pop rbp ; ret
0xffffff800038e03b : movzx eax, byte ptr [rax + 0x4c] ; pop rbp ; ret
0xffffff8000451ec1 : movzx eax, byte ptr [rax + rcx - 1] ; pop rbp ; ret
0xffffff80007f89ef : movzx eax, byte ptr [rbp - 1] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003907eb : movzx eax, byte ptr [rcx + 0x11] ; pop rbp ; ret
0xffffff800028bbae : movzx eax, byte ptr [rcx + 0x1c] ; and eax, 1 ; pop rbp ; ret
0xffffff800082baa4 : movzx eax, byte ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800086b6d4 : movzx eax, byte ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80004fa164 : movzx eax, byte ptr [rdi + 0x4f] ; and eax, 1 ; pop rbp ; ret
0xffffff8000898094 : movzx eax, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000516484 : movzx eax, byte ptr [rdi] ; pop rbp ; ret
0xffffff8000520328 : movzx eax, byte ptr [rdx] ; or eax, esi ; pop rbp ; ret
0xffffff8000683d44 : movzx eax, byte ptr [rip + 0x3ef371] ; pop rbp ; ret
0xffffff80004847a4 : movzx eax, byte ptr [rip + 0x650805] ; pop rbp ; ret
0xffffff800039a604 : movzx eax, byte ptr [rip + 0x73730d] ; pop rbp ; ret
0xffffff80003918f4 : movzx eax, byte ptr [rip + 0x73f975] ; pop rbp ; ret
0xffffff80007835c6 : movzx eax, cl ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800035d6b8 : movzx eax, cl ; lea eax, [rax + rax*4 + 2] ; pop rbp ; ret
0xffffff8000892859 : movzx eax, cl ; mov rcx, r9 ; pop rbp ; jmp rax
0xffffff8000268ecd : movzx eax, cl ; pop rbp ; ret
0xffffff800043778e : movzx eax, cl ; xor eax, 1 ; pop rbp ; ret
0xffffff800071ea78 : movzx eax, cx ; pop rbp ; ret
0xffffff80005656b7 : movzx eax, dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800073814c : movzx eax, di ; pop rbp ; ret
0xffffff80002b7b04 : movzx eax, dil ; pop rbp ; ret
0xffffff80003ab798 : movzx eax, dl ; pop rbp ; ret
0xffffff8000387ee7 : movzx eax, dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d7304 : movzx eax, dl ; ret
0xffffff80005841f3 : movzx eax, dx ; pop rbp ; ret
0xffffff8000388ca3 : movzx eax, dx ; pop rbx ; pop rbp ; ret
0xffffff80005656b6 : movzx eax, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000451ed1 : movzx eax, si ; pop rbp ; ret
0xffffff80008ed91b : movzx eax, word ptr [rax + 6] ; and eax, 1 ; pop rbp ; ret
0xffffff8000738196 : movzx eax, word ptr [rcx + rax*2] ; pop rbp ; ret
0xffffff800082bab4 : movzx eax, word ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80007960d4 : movzx eax, word ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80002c02c4 : movzx eax, word ptr [rdi + 0x428] ; pop rbp ; ret
0xffffff80004fa0f4 : movzx eax, word ptr [rdi + 0x4e] ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa084 : movzx eax, word ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa654 : movzx eax, word ptr [rdi + 0x6a] ; pop rbp ; ret
0xffffff800056317e : movzx eax, word ptr [rdi + 0x98] ; pop rbp ; ret
0xffffff8000811174 : movzx eax, word ptr [rdi + 8] ; pop rbp ; ret
0xffffff8000388da7 : movzx eax, word ptr [rdi + rax*2 + 0x58] ; pop rbp ; ret
0xffffff800049f49b : movzx eax, word ptr [rdx + rax*8 + 0x18] ; and eax, 1 ; pop rbp ; ret
0xffffff8000705dde : movzx eax, word ptr [rsi + 0x28] ; pop rbp ; ret
0xffffff8000802b6b : movzx ebx, byte ptr [rax + rcx] ; jmp 0xffffff8000802b7b
0xffffff8000389003 : movzx ecx, al ; mov eax, ecx ; pop rbp ; ret
0xffffff80002fd345 : movzx ecx, al ; mov eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002f7b5a : movzx ecx, al ; xor eax, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80006788cf : movzx ecx, bh ; lea rsi, [rbp - 0x68] ; call rbx
0xffffff8000436250 : movzx ecx, byte ptr [rsi + 3] ; sub eax, ecx ; pop rbp ; ret
0xffffff8000387d2c : movzx ecx, cl ; shl ecx, 4 ; or eax, ecx ; pop rbp ; ret
0xffffff800072c179 : movzx ecx, cx ; cmp ecx, r10d ; jae 0xffffff800072c159 ; pop rbp ; ret
0xffffff80003c1ae0 : movzx ecx, dx ; mov dword ptr [rdi], ecx ; movzx eax, ah ; pop rbp ; ret
0xffffff80006788ce : movzx ecx, r15b ; lea rsi, [rbp - 0x68] ; call rbx
0xffffff8000776b2c : movzx ecx, word ptr [rax + 2] ; cmp ecx, 3 ; jne 0xffffff8000776aff ; jmp 0xffffff8000776b5b
0xffffff800073845b : movzx ecx, word ptr [rdx] ; movzx eax, cx ; pop rbp ; ret
0xffffff800058ae46 : movzx edx, al ; inc edx ; jmp 0xffffff800058ae5e
0xffffff800071adb5 : movzx edx, byte ptr [r15] ; inc rdx ; jmp 0xffffff800071ade7
0xffffff8000719a6b : movzx edx, byte ptr [rbx] ; inc rdx ; jmp 0xffffff8000719a88
0xffffff8000719a53 : movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000719a8b
0xffffff800071a3ab : movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff800071a3c5
0xffffff800071adb6 : movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff800071ade6
0xffffff8000720c84 : movzx edx, byte ptr [rdi] ; inc rdx ; jmp 0xffffff8000720c9c
0xffffff8000799f36 : movzx edx, cl ; mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff8000892943 : movzx edx, dh ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff8000722899 : movzx edx, dl ; inc rdx ; jmp 0xffffff80007228af
0xffffff800079b8a3 : movzx edx, dl ; mov rsi, r15 ; call rcx
0xffffff800088e722 : movzx edx, dl ; pop rbp ; jmp rax
0xffffff80006d0562 : movzx edx, dx ; cmp edx, ecx ; jae 0xffffff80006d0548 ; pop rbp ; ret
0xffffff800058fea2 : movzx edx, dx ; cmp edx, esi ; setae dl ; jmp 0xffffff800058fee2
0xffffff800058fe86 : movzx edx, dx ; cmp edx, esi ; setbe dl ; jmp 0xffffff800058fee2
0xffffff800058fe62 : movzx edx, dx ; cmp edx, esi ; sete dl ; jmp 0xffffff800058fee2
0xffffff800058fe6f : movzx edx, dx ; cmp edx, esi ; setne dl ; jmp 0xffffff800058fee2
0xffffff8000892942 : movzx edx, sil ; mov esi, eax ; pop rbp ; jmp rcx
0xffffff8000737868 : movzx edx, word ptr [rax] ; movzx eax, dx ; pop rbp ; ret
0xffffff800083d757 : movzx edx, word ptr [rcx + 0x20] ; cmp esi, edx ; jb 0xffffff800083d6f3 ; mov edx, eax ; jmp 0xffffff800083d770
0xffffff80003ae4bb : movzx esi, al ; mov eax, esi ; pop rbp ; ret
0xffffff80007675f6 : movzx esi, al ; mov rdi, r15 ; call 0xffffff8000393049
0xffffff800056b0ba : movzx esi, bl ; mov rdi, r13 ; call 0xffffff80006b73b8
0xffffff80006253fe : movzx esi, byte ptr [rax + rcx] ; mov rdi, r12 ; call r14
0xffffff80004650de : movzx esi, cl ; cmp esi, 0x2f ; je 0xffffff80004650d9 ; jmp 0xffffff80004650b4
0xffffff80008eefde : movzx esi, sp ; mov rdi, r15 ; mov rdx, r14 ; call rcx
0xffffff8000737773 : movzx esi, word ptr [r8] ; movzx eax, si ; pop rbp ; ret
0xffffff8000737774 : movzx esi, word ptr [rax] ; movzx eax, si ; pop rbp ; ret
0xffffff8000892858 : movzx r8d, cl ; mov rcx, r9 ; pop rbp ; jmp rax
0xffffff80006c2666 : mul byte ptr [rbx] ; str word ptr [rax - 0x77] ; ret
0xffffff8000533736 : mul byte ptr [rsi - 9] ; ret 0x140
0xffffff80006d4ba1 : mul byte ptr [rsi - 9] ; ret 0x2001
0xffffff80008955f4 : mul byte ptr [rsi - 9] ; ret 0x720
0xffffff800067ca94 : mul byte ptr [rsi - 9] ; ret 0xc00f
0xffffff8000545375 : mul byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007602e5 : mul dword ptr [rax] ; ret
0xffffff80008cbf95 : mul dword ptr [rdi - 0x54] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008b59fe : mul dword ptr [rdi] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005aa1e5 : mul dword ptr [rsi - 0x75] ; push rcx ; add ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80006197c8 : mul dword ptr [rsi - 0x77] ; ret 0x4303
0xffffff800039f1ce : mul edx ; shr rdx, 4 ; mov dword ptr [rcx], edx ; pop rbp ; ret
0xffffff800039a74d : mul edx ; shrd rax, rdx, 0x20 ; ret
0xffffff800039a6ca : mul esi ; shrd rax, rdx, 0x20 ; ret
0xffffff800039a74c : mul rdx ; shrd rax, rdx, 0x20 ; ret
0xffffff800039a6c9 : mul rsi ; shrd rax, rdx, 0x20 ; ret
0xffffff800062f019 : mulps xmm0, xmm1 ; pop rbp ; ret
0xffffff800062f018 : mulss xmm0, xmm1 ; pop rbp ; ret
0xffffff80005d3982 : neg bl ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800060540f : neg byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800086af19 : neg byte ptr [rbp - 1] ; loopne 0xffffff800086af80 ; ret
0xffffff80008ba624 : neg byte ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff80008bb39a : neg byte ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000482e26 : neg byte ptr [rdx - 0x1b] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000605410 : neg byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000618547 : neg byte ptr [rip + 0x3d830000] ; ret 0x50c4
0xffffff800076b6df : neg dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp 0xffffff8000393048
0xffffff80003a85e3 : neg dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; jmp rax
0xffffff800077dd78 : neg dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80003aa165 : neg dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000291825 : neg dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049f36b : neg eax ; sbb eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049f1a2 : neg eax ; sbb eax, eax ; pop rbp ; ret
0xffffff80003669d7 : neg eax ; test r8d, r8d ; cmove eax, edx ; pop rbp ; ret
0xffffff800088f79c : neg edi ; mov rsi, r12 ; mov edx, r15d ; call rbx
0xffffff800088f79b : neg r15d ; mov rsi, r12 ; mov edx, r15d ; call rbx
0xffffff8000894a40 : nop ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800089498b : nop ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800048c975 : nop ; add al, ch ; ret
0xffffff80006b4ab6 : nop ; add byte ptr [r8 - 0x77], r9b ; ret 0x1fe8
0xffffff80006b4a72 : nop ; add byte ptr [r8 - 0x77], r9b ; ret 0x63e8
0xffffff8000844d6f : nop ; add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff8000826c10 : nop ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80005f0320 : nop ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80005da595 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff800076cdae : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xde7c
0xffffff80006d68da : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff80002752a9 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800054038d : nop ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000269f3b : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007543d1 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000630589 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff800061d041 : nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff800062e9dd : nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff80006306a7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xb78b
0xffffff80003c04ca : nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x7c], ah ; ret 0
0xffffff800033dba2 : nop ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800033f6bf : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0xffffff80005802ef : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff800029c370 : nop ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b3ae09 : nop ; add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000541de6 : nop ; add byte ptr [rcx], r14b ; shr al, 0xc0 ; ret
0xffffff800086474f : nop ; add byte ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800086993e : nop ; add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008c2bfa : nop ; add byte ptr [rsi], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80008dd26d : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret
0xffffff80004ef225 : nop ; add dword ptr [rax], eax ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff8000750065 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; xor eax, eax ; pop rbp ; ret
0xffffff80004c6d30 : nop ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80007972ca : nop ; add dword ptr [rax], ecx ; jne 0xffffff80007972f5 ; jmp 0xffffff80007972eb
0xffffff80005f4e0f : nop ; add dword ptr [rax], ecx ; pop rbp ; ret
0xffffff800085ed68 : nop ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006f8586 : nop ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800036972a : nop ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003696fe : nop ; add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff800085f00c : nop ; add qword ptr [rax], rax ; add bh, bh ; ret
0xffffff800081da7b : nop ; add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000810e7f : nop ; add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff8000872c5d : nop ; add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0xe1e9
0xffffff8000286b98 : nop ; add rcx, rax ; jmp rcx
0xffffff8000286d76 : nop ; add rcx, rax ; mov eax, 4 ; jmp rcx
0xffffff8000594745 : nop ; add rdx, r8 ; jmp rdx
0xffffff8000272c24 : nop ; add rdx, rax ; jmp rdx
0xffffff8000869d3a : nop ; and byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008c3a33 : nop ; and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800041cb0c : nop ; call 0xffffff7fc3cbcafa
0xffffff80006825e5 : nop ; call 0xffffff800029e853
0xffffff800080f6ba : nop ; call 0xffffff804880f6c9
0xffffff80008710ba : nop ; call 0xffffff80488710c9
0xffffff80008715ba : nop ; call 0xffffff80488715c9
0xffffff8000871aba : nop ; call 0xffffff8048871ac9
0xffffff8000871fba : nop ; call 0xffffff8048871fc9
0xffffff80008915ba : nop ; call 0xffffff80488915c9
0xffffff8000893cba : nop ; call 0xffffff8048893cc9
0xffffff8000899aba : nop ; call 0xffffff8048899ac9
0xffffff800089c8ba : nop ; call 0xffffff804889c8c9
0xffffff80008a4aba : nop ; call 0xffffff80488a4ac9
0xffffff80008a4fba : nop ; call 0xffffff80488a4fc9
0xffffff80008aedba : nop ; call 0xffffff80488aedc9
0xffffff80008b26ba : nop ; call 0xffffff80488b26c9
0xffffff80008c33ba : nop ; call 0xffffff80488c33c9
0xffffff80008c4dba : nop ; call 0xffffff80488c4dc9
0xffffff80008d21ba : nop ; call 0xffffff80488d21c9
0xffffff80008bbee6 : nop ; call r10
0xffffff80007d7973 : nop ; call rbx
0xffffff8000280cf6 : nop ; cdq ; imul eax, dword ptr [rax], -0x42 ; ret
0xffffff800086d240 : nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800080ef23 : nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008301d0 : nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000882863 : nop ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a49aa : nop ; cmp dword ptr [rdi + 0x10], 0 ; jne 0xffffff80003a49b0 ; ret
0xffffff80003a48d0 : nop ; cmp dword ptr [rdi + 8], 0 ; jne 0xffffff80003a48d6 ; ret
0xffffff800081b280 : nop ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008cf1f0 : nop ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff8000815951 : nop ; cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000784c77 : nop ; idiv bh ; inc ecx ; idiv bh ; jmp rbx
0xffffff80003933df : nop ; inc dword ptr gs:[0x18] ; ret
0xffffff800066e92f : nop ; inc eax ; add dl, dl ; jns 0xffffff800066e938 ; pop rbp ; ret
0xffffff800066e92e : nop ; inc eax ; add dl, dl ; jns 0xffffff800066e939 ; pop rbp ; ret
0xffffff80004a1dd7 : nop ; int 0xff
0xffffff80003026b4 : nop ; jno 0xffffff800030273c ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800090ab7f : nop ; lea rax, [rip + 0x193e71] ; ret
0xffffff80006dfec7 : nop ; ljmp [rax] ; jmp qword ptr [rsi]
0xffffff80008657c3 : nop ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003934cf : nop ; lock and dword ptr [rdi], esi ; ret
0xffffff80003934af : nop ; lock or dword ptr [rdi], esi ; ret
0xffffff800058ae8b : nop ; lodsd eax, dword ptr [rsi] ; idiv bh ; call rdi
0xffffff800035eeec : nop ; loopne 0xffffff800035eef4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008127d0 : nop ; loopne 0xffffff80008127dd ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a7ef : nop ; mfence ; ret
0xffffff800039927f : nop ; mov cx, word ptr [rdi] ; mov word ptr [rsi], cx ; xor eax, eax ; ret
0xffffff80003e7dac : nop ; mov dl, 0xfa ; push rsi ; ret
0xffffff800082fea9 : nop ; mov eax, 0x5b000001 ; pop r14 ; pop rbp ; ret
0xffffff8000886a31 : nop ; mov eax, 0x88000001 ; ret
0xffffff80008a91ce : nop ; mov eax, 0xf000008 ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80008ae4fe : nop ; mov eax, 0xff000001 ; ret
0xffffff8000743e0f : nop ; mov edi, dword ptr [rbx] ; call rcx
0xffffff80006dfeb2 : nop ; mov edx, 0x40 ; call 0xffffff800071c0f8
0xffffff80008bc04d : nop ; mov qword ptr [rsp], rax ; call r10
0xffffff80008bbffd : nop ; mov r8, r9 ; mov r9, rax ; call r10
0xffffff80002a14bf : nop ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff800074b47f : nop ; mov rdi, qword ptr [rbx + 8] ; xor esi, esi ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000764f4f : nop ; mov rdi, rbx ; call 0xffffff8000393047
0xffffff8000764f4e : nop ; mov rdi, rbx ; call 0xffffff8000393048
0xffffff8000647658 : nop ; mov rsi, qword ptr [rbp - 0x68] ; lea rdx, [rbp - 0x60] ; call qword ptr [rbx]
0xffffff80003aa488 : nop ; mov rsi, qword ptr [rbp - 0x78] ; call r8
0xffffff80003aa607 : nop ; mov rsi, qword ptr [rbp - 0x78] ; call rax
0xffffff80005802ee : nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff800085ed67 : nop ; nop ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800090ab7e : nop ; nop ; lea rax, [rip + 0x193e71] ; ret
0xffffff80002c0b18 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b19 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b1a : nop ; nop ; nop ; nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b1b : nop ; nop ; nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b1c : nop ; nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b1d : nop ; nop ; nop ; pop rbp ; ret
0xffffff80002c0b1e : nop ; nop ; pop rbp ; ret
0xffffff8000443590 : nop ; or byte ptr [rax - 1], cl ; ret 0x6349
0xffffff80008928c1 : nop ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff8000291a98 : nop ; or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800082cd30 : nop ; or byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008be616 : nop ; or qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0xc7b8
0xffffff80008be4ec : nop ; pop rax ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff80002c0b1f : nop ; pop rbp ; ret
0xffffff800063ed12 : nop ; popfq ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0xffffff8000824774 : nop ; push -0xffffff ; ret
0xffffff80008606f4 : nop ; push 0x20000003 ; ret
0xffffff800082bba0 : nop ; push 0x5b000001 ; pop r14 ; pop rbp ; ret
0xffffff800087fac9 : nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff800081a79f : nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008123b0 : nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff80004953bf : nop ; push rbp ; mov rbp, rsp ; inc qword ptr [rdi] ; pop rbp ; ret
0xffffff800081358f : nop ; push rbp ; mov rbp, rsp ; mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff8000831f0f : nop ; push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80004b3b2f : nop ; push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff800028bb4f : nop ; push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff80005cff0f : nop ; push rbp ; mov rbp, rsp ; mov rax, rdi ; pop rbp ; ret
0xffffff80004b3a7f : nop ; push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x10 ; pop rbp ; ret
0xffffff80004b3acf : nop ; push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80004b3b0f : nop ; push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x40 ; pop rbp ; ret
0xffffff800038904f : nop ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff800029415f : nop ; push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0xffffff800056f867 : nop ; push rsi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80006553fc : nop ; ret
0xffffff8000769973 : nop ; ret 0x48ff
0xffffff80003539f8 : nop ; ret 0x7d
0xffffff8000641f1c : nop ; ret 0xffc4
0xffffff80007f513f : nop ; ret 0xfffe
0xffffff800085eb9b : nop ; rol byte ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000820ada : nop ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008a919e : nop ; ror byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80008176a0 : nop ; sbb byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000812506 : nop ; sbb eax, 0xe8c03100 ; push rax ; ret 0xffff
0xffffff8000798b3a : nop ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089f933 : nop ; sti ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80008ae058 : nop ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff800062de00 : nop ; test al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000863898 : nop ; test al, 5 ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff80008826cc : nop ; xchg eax, edx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000813620 : nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003925af : nop ; xor eax, eax ; ret
0xffffff80003b281c : nop dword ptr [rax] ; dec eax ; jne 0xffffff80003b27c9 ; pop rbp ; ret
0xffffff80003f882d : nop dword ptr [rax] ; mov rdi, rax ; call 0xffffff80007b4a68
0xffffff80008ec35d : nop dword ptr [rax] ; mov rdx, r8 ; jmp 0xffffff80008ec397
0xffffff80002882ac : nop dword ptr [rax] ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff800053648d : nop dword ptr [rdx] ; call 0xffffff8000392796
0xffffff80002c02fa : not al ; and al, 1 ; movzx eax, al ; pop rbp ; ret
0xffffff8000808eb9 : not byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff80004a33e6 : not byte ptr [rcx - 0x11] ; dec dword ptr [rax + 0x63] ; ret
0xffffff800073d935 : not dword ptr [rdx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800026cc55 : not dword ptr [rdx + rax] ; add cl, ch ; ret
0xffffff80006587ff : not dword ptr [rdx] ; add byte ptr ss:[rcx], dh ; shr al, 0xa6 ; pop rcx ; ret
0xffffff8000342746 : not eax ; and eax, 1 ; pop rbp ; ret
0xffffff8000584f15 : not eax ; and eax, dword ptr [rcx] ; or eax, edx ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800080dbff : not eax ; movzx eax, ax ; pop rbp ; ret
0xffffff800076e405 : not ebp ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000393049
0xffffff800039d5d3 : not ecx ; and ecx, 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff800049eb12 : not ecx ; mov rax, rcx ; pop rbp ; ret
0xffffff80002886bd : not edi ; and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80004ab008 : not edi ; mov eax, edi ; pop rbp ; ret
0xffffff80007bd125 : not edx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000366bea : not esi ; add rsi, rax ; mov rax, rsi ; pop rbp ; ret
0xffffff80004b75f4 : not esi ; and dword ptr [rdi + 0xd8], esi ; pop rbp ; ret
0xffffff800049eb11 : not rcx ; mov rax, rcx ; pop rbp ; ret
0xffffff800057210d : or ah, bl ; add byte ptr [r9], sil ; shr al, 0x88 ; ret
0xffffff80002c72f9 : or ah, byte ptr [rax] ; ret 0xb60f
0xffffff8000501fa2 : or ah, byte ptr [rbp - 5] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000373a5d : or ah, byte ptr [rcx - 0x3e912615] ; ret
0xffffff80003a3b02 : or ah, byte ptr [rdx - 0x76b70002] ; ret
0xffffff800038b866 : or ah, byte ptr [rsi + 0x41] ; mov dword ptr [rdx], 0x83490000 ; ret 0xa902
0xffffff80006005ad : or ah, byte ptr [rsi - 0x3f] ; ret
0xffffff800068f59a : or ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80007e7d42 : or ah, byte ptr [rsi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005325d6 : or ah, dh ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000680785 : or al, 0 ; add al, ch ; ret
0xffffff800053edfb : or al, 0 ; add bh, bh ; or byte ptr [r8 - 0x7d], r9b ; ret
0xffffff80005f0420 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800026fa43 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800060be80 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003813f0 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80003cca81 : or al, 0 ; add byte ptr [rax], al ; call 0xffffff8000448d56
0xffffff800051219e : or al, 0 ; add byte ptr [rax], al ; jmp 0xffffff800051216b
0xffffff8000626dae : or al, 0 ; add byte ptr [rax], al ; jmp 0xffffff8000626d8d
0xffffff8000716b07 : or al, 0 ; add byte ptr [rax], al ; jmp 0xffffff8000716b71
0xffffff8000749dcb : or al, 0 ; add byte ptr [rax], al ; jmp 0xffffff8000749d99
0xffffff8000347eb0 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000278301 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a03e4 : or al, 0 ; add byte ptr [rcx + rcx*4 - 0x3d], cl ; call rax
0xffffff8000813280 : or al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800042cc97 : or al, 0 ; mov r10d, eax ; jmp 0xffffff800042ccee
0xffffff80008135a6 : or al, 0 ; sete al ; pop rbp ; ret
0xffffff80002fe140 : or al, 0 ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800076d380 : or al, 0x1f ; cmp al, 0 ; call 0xffffff8000392a47
0xffffff8000584efa : or al, 0x21 ; ret 0xd0f7
0xffffff8000586764 : or al, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008bc0a1 : or al, 0x24 ; mov r9, r11 ; call r10
0xffffff8000393422 : or al, 0x25 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff800089a428 : or al, 0x31 ; div byte ptr [rcx] ; rcr byte ptr [rbp + 0x41], cl ; jmp rcx
0xffffff80003464d7 : or al, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800034999b : or al, 0x31 ; ret
0xffffff8000349f89 : or al, 0x31 ; ret 0xca01
0xffffff800065e993 : or al, 0x31 ; ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; add bh, bl ; ret 0x66ff
0xffffff80007dd238 : or al, 0x31 ; test byte ptr [rax - 0x77], 0xd7 ; mov rdx, r14 ; call rax
0xffffff800054fc0a : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff80005ed3cf : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r12 ; call rax
0xffffff800062c222 : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r13 ; call rax
0xffffff80007cefec : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r13 ; call rcx
0xffffff8000634582 : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r14 ; call rax
0xffffff800052b072 : or al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r15 ; call rax
0xffffff80007d611e : or al, 0x31 ; test byte ptr [rax - 0x77], 0xfb ; call rax
0xffffff800062bb67 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rax
0xffffff80007c92bb : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, eax ; call rcx
0xffffff800068ecf7 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, edi ; call rax
0xffffff80006423a4 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, esp ; call rax
0xffffff80005dca0f : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0x48 ; mov edx, ebx ; call rax
0xffffff80007c5486 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, ebp ; call rax
0xffffff8000621aa8 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, edi ; call rax
0xffffff800076ac36 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, esi ; call rax
0xffffff800054c158 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 1], 0x48 ; mov edx, ebx ; call rax
0xffffff800062d1d4 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, ebp ; call rax
0xffffff800064cfc7 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, esi ; call rax
0xffffff800054d419 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, esp ; call rax
0xffffff800054cdcf : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov edx, ebx ; call rax
0xffffff800076a11c : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, ebp ; call rax
0xffffff800054d701 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, edi ; call rax
0xffffff8000557bf3 : or al, 0x31 ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, esp ; call rax
0xffffff800064d874 : or al, 0x39 ; fmul dword ptr [rdi] ; ret
0xffffff80002ff10e : or al, 0x39 ; ret
0xffffff80003b4743 : or al, 0x39 ; ret 0x1272
0xffffff8000b3a1c0 : or al, 0x3f ; pop rbp ; dec dword ptr [rbp + rcx*4 + 0x35] ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000762670 : or al, 0x45 ; ret
0xffffff80005109c1 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000468c33 : or al, 0x48 ; mov dword ptr [rcx + 0x2c0], edx ; jmp 0xffffff8000468c09
0xffffff8000468753 : or al, 0x48 ; mov dword ptr [rcx + 0x2d0], edx ; jmp 0xffffff8000468729
0xffffff80003903b9 : or al, 0x48 ; mov eax, dword ptr [rax] ; test rax, rax ; je 0xffffff80003903cf ; call rax
0xffffff80008c465e : or al, 0x48 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000566fcc : or al, 0x48 ; mov edi, ebx ; mov esi, r14d ; call rax
0xffffff8000390b77 : or al, 0x49 ; lea edi, [rbp + 0x148] ; call rax
0xffffff800090182f : or al, 0x49 ; mov edi, dword ptr [rsi + 0x18] ; call rcx
0xffffff8000900bdf : or al, 0x49 ; mov edi, dword ptr [rsi + 0x50] ; call rcx
0xffffff80009002af : or al, 0x49 ; mov edi, dword ptr [rsi + 0x58] ; call rcx
0xffffff80007d04ca : or al, 0x4c ; mov edi, edi ; mov rsi, r12 ; mov edx, ebx ; call rax
0xffffff8000659890 : or al, 0x4c ; ret
0xffffff80005dfd87 : or al, 0x4d ; mov edi, esp ; jmp 0xffffff80005dfd99
0xffffff8000570af1 : or al, 0x5b ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff800049fec3 : or al, 0x5b ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000447159 : or al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80002db38b : or al, 0x5d ; ret
0xffffff80002f4a27 : or al, 0x71 ; add byte ptr [rax - 0x75], cl ; shr dword ptr [rax], 0x5d ; ret
0xffffff80008af9d4 : or al, 0x72 ; sbb dword ptr [rcx - 1], ecx ; ret 0x8348
0xffffff8000262628 : or al, 0x73 ; adc eax, 0x8348c7ff ; ret 0x3920
0xffffff80003b6f08 : or al, 0x73 ; or al, 0xff ; ret
0xffffff8000399716 : or al, 0x73 ; or al, 0xff ; ret 0x8348
0xffffff80008c2246 : or al, 0x73 ; ud0 ; ret 0x8348
0xffffff80003c5067 : or al, 0x74 ; add cl, ch ; ret 0xffef
0xffffff80002882fe : or al, 0x74 ; and al, 0x44 ; mov edi, esp ; mov rsi, rbx ; call rcx
0xffffff80003b2699 : or al, 0x75 ; add al, 0x89 ; ret 0x29eb
0xffffff80008e60ff : or al, 0x75 ; add eax, 0x5d5e415b ; ret
0xffffff8000b45c24 : or al, 0x80 ; and al, 6 ; ret 0x4010
0xffffff80005420e2 : or al, 0x81 ; add byte ptr [rsi - 0x75], ah ; ret 0xc166
0xffffff80008d92e0 : or al, 0x81 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800040e768 : or al, 0x81 ; ret
0xffffff800041073f : or al, 0x81 ; ret 0x1000
0xffffff8000548c6f : or al, 0x81 ; ret 0xbdc0
0xffffff800040d616 : or al, 0x81 ; ret 0xfff
0xffffff800059b9a4 : or al, 0x83 ; call qword ptr [rax]
0xffffff80003b1f69 : or al, 0x83 ; clc ; add dword ptr [rcx], ebx ; ror byte ptr [rcx], cl ; ret 0xdb85
0xffffff80004b3b08 : or al, 0x83 ; loopne 0xffffff80004b3b12 ; pop rbp ; ret
0xffffff80004fa42a : or al, 0x83 ; loopne 0xffffff80004fa434 ; pop rbp ; ret
0xffffff800084e71a : or al, 0x83 ; loopne 0xffffff800084e724 ; pop rbp ; ret
0xffffff800034353f : or al, 0x83 ; ret
0xffffff8000680b4e : or al, 0x83 ; ret 0x44f4
0xffffff800048fcdd : or al, 0x84 ; sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0xffffff80008407cb : or al, 0x88 ; add rcx, r8 ; jmp rcx
0xffffff80002b8f89 : or al, 0x88 ; add rcx, rax ; jmp rcx
0xffffff8000749d7f : or al, 0x88 ; add rcx, rax ; xor eax, eax ; jmp rcx
0xffffff80003b1e11 : or al, 0x88 ; ret
0xffffff80005200d5 : or al, 0x89 ; add rcx, r9 ; jmp rcx
0xffffff80003b2748 : or al, 0x89 ; fisub dword ptr [rcx] ; ret 0xd0f7
0xffffff80002926a5 : or al, 0x89 ; ret
0xffffff80002fec07 : or al, 0x89 ; ret 0x3948
0xffffff80003b37a2 : or al, 0x89 ; ret 0x4c6
0xffffff8000b3d11d : or al, 0x89 ; ret 0xca21
0xffffff800051f892 : or al, 0x8a ; add rcx, r10 ; jmp rcx
0xffffff8000270459 : or al, 0x8a ; add rcx, rdx ; jmp rcx
0xffffff8000533d0b : or al, 0x8a ; add rcx, rdx ; mov rsi, rax ; jmp rcx
0xffffff80005fb8f3 : or al, 0x8a ; or eax, 0x5d0d4788 ; ret
0xffffff80008a6576 : or al, 0x8b ; adc byte ptr [r9], dil ; ret 0x975
0xffffff800059811c : or al, 0x8b ; push rdi ; or al, 0x21 ; ret 0xd0f7
0xffffff8000584ef7 : or al, 0x8b ; push rsi ; or al, 0x21 ; ret 0xd0f7
0xffffff800051f8f3 : or al, 0x8e ; add rcx, r14 ; jmp rcx
0xffffff8000440221 : or al, 0x8e ; add rcx, rsi ; jmp rcx
0xffffff800026df22 : or al, 0x8f ; add rcx, r15 ; jmp rcx
0xffffff80008be680 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0xffffff8000286b97 : or al, 0x90 ; add rcx, rax ; jmp rcx
0xffffff80003a61a8 : or al, 0x91 ; jne 0xffffff80003a61b2 ; call 0xffffff80003923e6
0xffffff80003683fa : or al, 0x91 ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000258314 : or al, 0x98 ; add rcx, rax ; jmp rcx
0xffffff800064bc27 : or al, 0x98 ; add rcx, rax ; mov rbx, qword ptr [rbp - 0x80] ; jmp rcx
0xffffff8000654790 : or al, 0x9d ; ret
0xffffff800069cfc0 : or al, 0xa ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80002b1cdc : or al, 0xa0 ; add rcx, rax ; jmp rcx
0xffffff80007f1866 : or al, 0xa0 ; add rcx, rax ; mov r14, rdx ; jmp rcx
0xffffff800067f1e5 : or al, 0xa0 ; add rcx, rax ; xor r15d, r15d ; jmp rcx
0xffffff8000295741 : or al, 0xa8 ; add rcx, rax ; jmp rcx
0xffffff80008d6be0 : or al, 0xa8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083f2b4 : or al, 0xaa ; add rcx, rdx ; jmp rcx
0xffffff80006636a0 : or al, 0xab ; ret 0xebff
0xffffff800028fc42 : or al, 0xb0 ; add rcx, rax ; jmp rcx
0xffffff800027c390 : or al, 0xb8 ; add rcx, rax ; jmp rcx
0xffffff80003896ef : or al, 0xb8 ; add rcx, rax ; mov rax, qword ptr [rbp - 0x38] ; jmp rcx
0xffffff8000766f30 : or al, 0xc1 ; ret 0x48ff
0xffffff80003a8543 : or al, 0xc2 ; pop rbp ; ret
0xffffff80005b7083 : or al, 0xc6 ; cmp eax, 0xe8c03100 ; ret 0xce77
0xffffff80004a23fc : or al, 0xc9 ; and word ptr [rdi + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff8000807d3c : or al, 0xc9 ; and word ptr [rdx + rcx*8 + 0x18], 0xfffa ; pop rbp ; ret
0xffffff800080356f : or al, 0xc9 ; and word ptr [rdx + rcx*8 + 0x18], 0xfffe ; pop rbp ; ret
0xffffff8000623097 : or al, 0xcb ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000680c27 : or al, 0xcd ; or byte ptr [rax], al ; add byte ptr [rax], al ; add eax, ecx ; pop rbp ; ret
0xffffff80008c42e0 : or al, 0xd1 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004c6bd0 : or al, 0xd8 ; pop rcx ; add byte ptr [rax + 0x39], cl ; ret
0xffffff8000650390 : or al, 0xe1 ; ret
0xffffff80004d33d7 : or al, 0xe8 ; ret
0xffffff800036ed88 : or al, 0xe8 ; ret 0xd9f2
0xffffff8000719357 : or al, 0xeb ; adc ecx, dword ptr [rax + 0x29] ; ret 0xe7c
0xffffff8000410761 : or al, 0xeb ; add bh, bh ; ret 0xf239
0xffffff8000417c63 : or al, 0xec ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a61e0 : or al, 0xed ; ret 0x4cff
0xffffff80003924b0 : or al, 0xf ; add byte ptr [rax], al ; popfq ; xor eax, eax ; ret
0xffffff800058e50b : or al, 0xf ; mov es, ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800066d590 : or al, 0xf ; ret 0xc7ff
0xffffff800074e10b : or al, 0xf ; test byte ptr [rcx + rax], ch ; add dh, dh ; ret 0xf04
0xffffff8000311412 : or al, 0xf ; xchg eax, ebp ; ret 0xe181
0xffffff80004eb9f4 : or al, 0xf ; xchg eax, esp ; ret
0xffffff80005709bf : or al, 0xf ; xchg eax, esp ; shr bl, 2 ; xor eax, eax ; pop rbp ; ret
0xffffff800069ee8a : or al, 0xf2 ; dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0xffffff8000783920 : or al, 0xf3 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008e462e : or al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f53e0 : or al, 0xf4 ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002f7f88 : or al, 0xf6 ; ret 0x7401
0xffffff800058c145 : or al, 0xf6 ; ret 0x7410
0xffffff80004a67d6 : or al, 0xf6 ; ret 0xbe01
0xffffff8000853ca0 : or al, 0xf7 ; ret
0xffffff80002cd49f : or al, 0xfc ; inc dword ptr [rbx + 0x35] ; ret
0xffffff80002fef83 : or al, 0xff ; ret
0xffffff8000257af3 : or al, 0xff ; ret 0x3944
0xffffff80003c9aea : or al, 0xff ; ret 0x5589
0xffffff8000399718 : or al, 0xff ; ret 0x8348
0xffffff8000758765 : or al, 1 ; add al, 0x5d ; ret
0xffffff800072d9b6 : or al, 1 ; add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 2 ; pop rbp ; ret
0xffffff8000890649 : or al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800038decd : or al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007ae212 : or al, 1 ; cmp ecx, dword ptr [rdi + 4] ; jne 0xffffff80007ae1d9 ; pop rbx ; pop rbp ; ret
0xffffff80004a6393 : or al, 1 ; je 0xffffff80004a63a4 ; mov eax, dword ptr [rcx + rdx + 0x14] ; pop rbp ; ret
0xffffff80004a690d : or al, 1 ; je 0xffffff80004a691e ; mov eax, dword ptr [rcx + rdx + 0x10] ; pop rbp ; ret
0xffffff8000758783 : or al, 1 ; or al, 0x5d ; ret
0xffffff80002fa86b : or al, 1 ; or eax, 0x7f9452 ; pop rbx ; pop rbp ; ret
0xffffff8000256b06 : or al, 1 ; or eax, 0x890c93 ; pop rbp ; ret
0xffffff8000655f34 : or al, 1 ; ret
0xffffff80007aeec0 : or al, 2 ; je 0xffffff80007aeecd ; xor eax, eax ; pop rbp ; ret
0xffffff80004a6453 : or al, 2 ; jne 0xffffff80004a6460 ; xor eax, eax ; pop rbp ; ret
0xffffff800066ea91 : or al, 3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800028b3dd : or al, 6 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000879965 : or al, 7 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800048bb9b : or al, bh ; test dword ptr [rbp + rdi*8 - 1], eax ; call qword ptr [rsi]
0xffffff80002ffad2 : or al, byte ptr [rax + 0x415b007f] ; pop rsi ; pop rbp ; ret
0xffffff8000321eae : or al, byte ptr [rax + rax] ; add al, ch ; cdq ; ret 0xfff6
0xffffff80004ad550 : or al, byte ptr [rax - 0x2ac73] ; jmp qword ptr [rax]
0xffffff80006c7c14 : or al, byte ptr [rax - 0xa] ; ret
0xffffff80008a1d4f : or al, byte ptr [rax] ; add al, ch ; stc ; ret
0xffffff80008486af : or al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80005b949c : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000577c03 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff80005a53fc : or al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80004d79c2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000797255 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000367b6f : or al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004e3a63 : or al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff800010e149
0xffffff8000684569 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x3fcee7b1], cl ; pop rbp ; ret
0xffffff800066ab5a : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x4c ; ret 0x4cff
0xffffff80005e8be3 : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, cl ; ret
0xffffff80005d418e : or al, byte ptr [rax] ; add cl, ch ; ret 0
0xffffff800025d665 : or al, byte ptr [rbx] ; add bl, ch ; ret
0xffffff8000b3e210 : or al, byte ptr [rcx + 0x7f9c00e7] ; ret
0xffffff80004e9f03 : or al, byte ptr [rcx + rcx*8 - 0xb7de8c] ; ret
0xffffff8000815560 : or al, byte ptr [rcx - 0x75] ; jbe 0xffffff8000815586 ; test esi, esi ; je 0xffffff8000815574 ; call rax
0xffffff80004f7c28 : or al, byte ptr [rcx - 0x7d] ; call qword ptr [rcx]
0xffffff8000754747 : or al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000b4452b : or al, byte ptr [rcx - 0x7d] ; ret 0x4504
0xffffff80005aaae2 : or al, byte ptr [rcx] ; ret 0xca29
0xffffff8000b3c565 : or al, byte ptr [rcx] ; ret 0xe381
0xffffff800080cd74 : or al, byte ptr [rdx + 0xf] ; mov dh, 4 ; or dword ptr [rcx], edi ; ret 0xb75
0xffffff8000277e20 : or al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800090a964 : or al, ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002f23e8 : or al, ch ; add bh, byte ptr [rdx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f3088 : or al, ch ; add dh, byte ptr [rax] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e1b21 : or al, ch ; cdq ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000692dce : or al, ch ; cld ; stosd dword ptr [rdi], eax ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80003612d3 : or al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov esp, 0x8948ffff ; ret
0xffffff80002f0452 : or al, ch ; cwde ; pop rcx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f2212 : or al, ch ; fdivr dword ptr [rbx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000764320 : or al, ch ; fisubr dword ptr [rsi] ; ret
0xffffff8000765802 : or al, ch ; fmul st(3) ; ret 0x45ff
0xffffff800035ea11 : or al, ch ; imul esp, ebp, 0x8948ffff ; ret
0xffffff80006b1b5d : or al, ch ; insd dword ptr [rdi], dx ; mov esi, 0x8948fffb ; ret 0x4b8b
0xffffff80002ef96b : or al, ch ; jg 0xffffff80002ef9db ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000791159 : or al, ch ; jnp 0xffffff800079116c ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000692a5a : or al, ch ; jo 0xffffff8000692a15 ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80007643f9 : or al, ch ; loope 0xffffff80007643e0 ; ret 0x45ff
0xffffff800035efd8 : or al, ch ; loopne 0xffffff800035efe4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000692d18 : or al, ch ; mov dl, 0xac ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff800025dc1c : or al, ch ; mov es, word ptr [rbp + rdx + 0x58b6600] ; ret
0xffffff800035eeea : or al, ch ; nop ; loopne 0xffffff800035eef6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000692cc1 : or al, ch ; or dword ptr [rbp - 0x76b70003], ebp ; ret 0xc931
0xffffff80007642f4 : or al, ch ; out 0xe0, al ; ret 0x31ff
0xffffff80002ef9fc : or al, ch ; out dx, al ; movsxd rdi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027ae5d : or al, ch ; popfq ; ret
0xffffff80002f0098 : or al, ch ; push rdx ; pop rbp ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007643a6 : or al, ch ; push rsp ; ret
0xffffff8000286097 : or al, ch ; ret
0xffffff800026e918 : or al, ch ; ret 0x123a
0xffffff8000803ad8 : or al, ch ; ret 0xba7d
0xffffff80002f2128 : or al, ch ; ret 0xfa3c
0xffffff80002e55d8 : or al, ch ; ret 0xfb09
0xffffff80002f2fb8 : or al, ch ; sal byte ptr [rax], cl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048f4a1 : or al, ch ; stc ; ret
0xffffff800080319d : or al, ch ; std ; mov esi, 0x8948ffc9 ; ret
0xffffff8000365acf : or al, ch ; stosd dword ptr [rdi], eax ; je 0xffffff8000365adb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006ae39e : or al, ch ; sub al, 0xf6 ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f4662 : or al, ch ; sub byte ptr [rdx], bl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f3158 : or al, ch ; xor ch, byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002f2958 : or al, ch ; xor dh, byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007d4f34 : or al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff8000b3d119 : or al, dl ; fsubr qword ptr [rcx] ; or al, 0x89 ; ret 0xca21
0xffffff8000371630 : or bh, al ; adc r8b, r14b ; loope 0xffffff8000371610 ; ret
0xffffff80003a0f1a : or bh, al ; pop rbp ; ret
0xffffff80006b8354 : or bh, al ; str word ptr [rax - 0x77] ; ret
0xffffff80004cb90d : or bh, bh ; adc byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800031f170 : or bh, bh ; add eax, 0x7da6b1 ; pop rbp ; ret
0xffffff80003a9b4f : or bh, bh ; dec dword ptr [rax - 0x39] ; ret
0xffffff80004988e2 : or bh, bh ; dec dword ptr [rax - 1] ; ret
0xffffff8000357449 : or bh, bh ; lcall [rdi] ; add byte ptr [rax - 0x7b], cl ; ret
0xffffff8000773a68 : or bh, bh ; mov byte ptr [rcx + rax], dh ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000451ec4 : or bh, bh ; pop rbp ; ret
0xffffff80003876d7 : or bh, bh ; ret
0xffffff800077869f : or bh, bh ; ret 0x1589
0xffffff800049bd0a : or bh, bh ; ret 0x1c7
0xffffff80004f8588 : or bh, bh ; ret 0x3944
0xffffff8000287d32 : or bh, bh ; ret 0x3949
0xffffff8000729c87 : or bh, bh ; ret 0x394c
0xffffff800053284d : or bh, bh ; ret 0x4166
0xffffff8000725996 : or bh, bh ; ret 0x5589
0xffffff8000620ef6 : or bh, bh ; ret 0x8548
0xffffff80002d5faa : or bh, bh ; ret 0xc031
0xffffff800025c5bb : or bh, bh ; ret 0xd089
0xffffff80002959cd : or bh, bh ; ret 0xee75
0xffffff80008b795b : or bh, bh ; ret 0xf075
0xffffff80002762da : or bh, bh ; ret 0xf175
0xffffff8000717356 : or bh, bh ; ret 0xf575
0xffffff8000340f07 : or bh, bh ; sal dword ptr [rbp - 0xc], 0x49 ; inc edx ; jmp 0xffffff8000340f1b
0xffffff80002a57ec : or bh, byte ptr [rax + 1] ; pop rbp ; ret
0xffffff80005e6bb8 : or bh, byte ptr [rbx - 1] ; mov rdx, rax ; jmp 0xffffff80005e6bda
0xffffff80005e87b8 : or bh, byte ptr [rcx - 1] ; mov rdx, rax ; jmp 0xffffff80005e87da
0xffffff80006960c2 : or bh, byte ptr [rcx - 3] ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800071ac50 : or bh, byte ptr [rcx] ; enter 0x773, -1 ; ret
0xffffff8000600329 : or bh, byte ptr [rcx] ; ret 0x2275
0xffffff80004810b6 : or bh, byte ptr [rcx] ; ret 0x470f
0xffffff800078e84e : or bh, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007aafea : or bh, byte ptr [rsi + 0x400] ; mov edi, r12d ; call rcx
0xffffff800053489e : or bh, byte ptr [rsi + 1] ; mov rdi, rbx ; call rax
0xffffff800069cf81 : or bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800030b2b5 : or bh, cl ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007b9a03 : or bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff8000307d64 : or bh, dh ; ret
0xffffff80006c6304 : or bh, dh ; ret 0
0xffffff8000763934 : or bh, dh ; ret 0x48ff
0xffffff80004acc38 : or bh, dh ; ret 0x80
0xffffff80004fb142 : or bh, dh ; ret 0x800
0xffffff800084e6e4 : or bh, dh ; ret 0xffff
0xffffff80006c670f : or bh, dh ; rol dword ptr [rax], 0 ; add byte ptr [rdi + rcx], al ; ret 0x8b41
0xffffff800037407d : or bl, ah ; mov esp, 0xc1418f1b ; ret
0xffffff800083986f : or bl, al ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839897
0xffffff80008398ec : or bl, al ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839914
0xffffff8000839969 : or bl, al ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839991
0xffffff80002994ae : or bl, byte ptr [rbx + 0x5d] ; ret
0xffffff800036f626 : or bl, byte ptr [rcx - 0x3ea57d87] ; ret
0xffffff8000605a62 : or bl, byte ptr [rsi] ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff800057984a : or bl, ch ; adc dword ptr [rax - 0x77], ecx ; ret 0xc749
0xffffff800051b10e : or bl, ch ; adc eax, 0xd33d8d48 ; ret 0x4b
0xffffff80005b0f88 : or bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a2c79 : or bl, ch ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008caa91 : or bl, ch ; or eax, 0x5d5e415b ; ret
0xffffff80005dd8c4 : or bl, cl ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800083986e : or bl, r8b ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839898
0xffffff80008398eb : or bl, r8b ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839915
0xffffff8000839968 : or bl, r8b ; cmovne r13d, ecx ; cmovne eax, edx ; jmp 0xffffff8000839992
0xffffff800079c3c0 : or byte ptr [ebp + 0x29], al ; ret 0x8944
0xffffff8000762596 : or byte ptr [r10 + 0xf], al ; mov dh, 0x14 ; sub dword ptr [rcx], ecx ; ret 0x8842
0xffffff8000516464 : or byte ptr [r10 + r8 + 0x5d], r14b ; ret
0xffffff80004a1c08 : or byte ptr [r11 + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80002a5e1c : or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000584ef3 : or byte ptr [r11 + 0x568b0c42], r9b ; or al, 0x21 ; ret 0xd0f7
0xffffff80004a6df9 : or byte ptr [r11 + 0x7894807], r9b ; pop rbp ; ret
0xffffff80006c6356 : or byte ptr [r11 - 0x74b6f3af], cl ; or dh, dh ; ret 0x7401
0xffffff800039a72c : or byte ptr [r11], r15b ; ja 0xffffff800039a750 ; jne 0xffffff800039a707 ; ret
0xffffff80002ff3c4 : or byte ptr [r13 + 3], r14b ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002588b8 : or byte ptr [r13 + r8 + 0x5b], sil ; pop r14 ; pop rbp ; ret
0xffffff80007f4487 : or byte ptr [r14 + 0x14], 8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006265c0 : or byte ptr [r14], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007820e1 : or byte ptr [r14], 2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000766070 : or byte ptr [r15], 0x85 ; ret
0xffffff800029df39 : or byte ptr [r15], 0xbe ; cmp byte ptr [rax - 0x75], cl ; jne 0xffffff800029ded3 ; call rcx
0xffffff80007e4325 : or byte ptr [r8 + 0x39], cl ; ret 0x840f
0xffffff800048d097 : or byte ptr [r8 + 0x39], r9b ; ret
0xffffff8000758762 : or byte ptr [r8 + 0x5d04010c], al ; ret
0xffffff8000758780 : or byte ptr [r8 + 0x5d0c010c], al ; ret
0xffffff80008cae1c : or byte ptr [r8 + 0xc], r15b ; pop rbp ; ret
0xffffff80003a5f2f : or byte ptr [r8 - 0x39], cl ; ret 0xff01
0xffffff80003f1d1e : or byte ptr [r8 - 0x39], cl ; ret 0xffff
0xffffff8000831f81 : or byte ptr [r8 - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000884cb6 : or byte ptr [r8 - 0x75], cl ; js 0xffffff8000884cd4 ; call 0xffffff80008c0f88
0xffffff80008b4cf6 : or byte ptr [r8 - 0x75], cl ; js 0xffffff80008b4d14 ; call 0xffffff80008c0f88
0xffffff80008c4ce6 : or byte ptr [r8 - 0x75], cl ; js 0xffffff80008c4d04 ; call 0xffffff80008c0f88
0xffffff80003037c6 : or byte ptr [r8 - 0x75], r9b ; pop rbp ; jmp rax
0xffffff8000647266 : or byte ptr [r8 - 0x77], 0x8c ; ret
0xffffff8000642017 : or byte ptr [r8 - 0x77], cl ; add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff8000324b65 : or byte ptr [r8 - 0x77], cl ; ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff8000288fea : or byte ptr [r8 - 0x7b], cl ; leave ; je 0xffffff8000289000 ; call rcx
0xffffff800028a76a : or byte ptr [r8 - 0x7b], cl ; leave ; je 0xffffff800028a780 ; call rcx
0xffffff80002b009a : or byte ptr [r8 - 0x7b], cl ; leave ; je 0xffffff80002b00b0 ; call rcx
0xffffff80002b034a : or byte ptr [r8 - 0x7b], cl ; leave ; je 0xffffff80002b0360 ; call rcx
0xffffff80003ab86a : or byte ptr [r8 - 0x7b], cl ; leave ; je 0xffffff80003ab880 ; call rcx
0xffffff8000582a84 : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff80003a6274 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x48], 0x83 ; ret
0xffffff800054e46c : or byte ptr [r8 - 0x7d], cl ; ret
0xffffff8000328523 : or byte ptr [r8 - 0x7d], cl ; ret 0x48e0
0xffffff800053edff : or byte ptr [r8 - 0x7d], r9b ; ret
0xffffff800075136d : or byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055dbcc : or byte ptr [r9 - 0x75], cl ; je 0xffffff800055dba5 ; call rax
0xffffff800055e717 : or byte ptr [r9 - 0x75], cl ; je 0xffffff800055e6f3 ; call rax
0xffffff80005d1ae9 : or byte ptr [rax + 0x29], cl ; ret
0xffffff8000326c9d : or byte ptr [rax + 0x39], cl ; ret
0xffffff80007e4326 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff800039f734 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rdx - 0x2a], 1 ; pop rbp ; ret
0xffffff8000757aca : or byte ptr [rax + 0x48], al ; mov esi, ebx ; mov rcx, r12 ; call r15
0xffffff8000758763 : or byte ptr [rax + 0x5d04010c], al ; ret
0xffffff8000758781 : or byte ptr [rax + 0x5d0c010c], al ; ret
0xffffff800048bf7e : or byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff80003bd962 : or byte ptr [rax + 0x68], bl ; ret
0xffffff80003bd942 : or byte ptr [rax + 0x68], bl ; ret 0
0xffffff800085560b : or byte ptr [rax + 0x69], cl ; ret 0xca00
0xffffff80008cae1d : or byte ptr [rax + 0xc], bh ; pop rbp ; ret
0xffffff80005e8c7b : or byte ptr [rax + 0xe0], 4 ; pop rbp ; ret
0xffffff80002ca0e8 : or byte ptr [rax + 0xf], 0x45 ; ret 0x8b48
0xffffff800067d3f3 : or byte ptr [rax + 0xf], 0xa3 ; ret 0x820f
0xffffff80007aa389 : or byte ptr [rax + 0xf], cl ; div edi ; ret 0x20
0xffffff800032736b : or byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff8000b3c59d : or byte ptr [rax + 1], cl ; ret 0x2948
0xffffff800075e3ff : or byte ptr [rax + 1], cl ; ret 0x8948
0xffffff80003a3bd8 : or byte ptr [rax + 9], cl ; ret
0xffffff800063e47f : or byte ptr [rax + 9], cl ; ret 0xf44
0xffffff8000531056 : or byte ptr [rax + rax*8 - 0xb7c88c], al ; ret 0x8348
0xffffff80003a1e4f : or byte ptr [rax + rax], al ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80004d7e17 : or byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003a31a3 : or byte ptr [rax + rbp*4], 0 ; pop rbp ; ret
0xffffff8000396153 : or byte ptr [rax + rcx*4 + 0x33], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039f0d4 : or byte ptr [rax - 0x39], cl ; ret
0xffffff80003a5f30 : or byte ptr [rax - 0x39], cl ; ret 0xff01
0xffffff80003f1d1f : or byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff8000393215 : or byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0xffffff80006bb14c : or byte ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax - 0x47] ; ret
0xffffff80006569b7 : or byte ptr [rax - 0x3f], cl ; call 0xffffff807727a2e5
0xffffff800083d3e8 : or byte ptr [rax - 0x3f], cl ; jmp 0xffffff802a465d16
0xffffff800083d3e7 : or byte ptr [rax - 0x3f], cl ; jmp 0xffffff802a465d17
0xffffff80004b6507 : or byte ptr [rax - 0x73], 0x4b ; js 0xffffff80004b6509 ; ret 0x4808
0xffffff8000482c0f : or byte ptr [rax - 0x73], 0x54 ; ret
0xffffff8000389780 : or byte ptr [rax - 0x73], cl ; jge 0xffffff800038975e ; call qword ptr [rax]
0xffffff8000604c86 : or byte ptr [rax - 0x73], cl ; jne 0xffffff8000604c50 ; call rax
0xffffff800088be2a : or byte ptr [rax - 0x75], 0x4d ; mov byte ptr [rbp - 0x77], cl ; clc ; call r9
0xffffff8000758017 : or byte ptr [rax - 0x75], cl ; adc al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000831f82 : or byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000884cb7 : or byte ptr [rax - 0x75], cl ; js 0xffffff8000884cd3 ; call 0xffffff80008c0f87
0xffffff80008b4cf7 : or byte ptr [rax - 0x75], cl ; js 0xffffff80008b4d13 ; call 0xffffff80008c0f87
0xffffff80008c4ce7 : or byte ptr [rax - 0x75], cl ; js 0xffffff80008c4d03 ; call 0xffffff80008c0f87
0xffffff80005c908f : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0xffffff8000287d2e : or byte ptr [rax - 0x75], cl ; or r15b, dil ; ret 0x3949
0xffffff80003037c7 : or byte ptr [rax - 0x75], cl ; pop rbp ; jmp rax
0xffffff8000566825 : or byte ptr [rax - 0x75], cl ; pop rbp ; sar bh, 1 ; ret
0xffffff8000647267 : or byte ptr [rax - 0x77], 0x8c ; ret
0xffffff800068e290 : or byte ptr [rax - 0x77], 0xda ; call rax
0xffffff800026dbcb : or byte ptr [rax - 0x77], cl ; adc byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003490dc : or byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret
0xffffff800034900b : or byte ptr [rax - 0x77], cl ; adc edi, edi ; ret
0xffffff8000642018 : or byte ptr [rax - 0x77], cl ; add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff800083b73b : or byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0xffffff80007aab24 : or byte ptr [rax - 0x77], cl ; cmp al, 0x11 ; pop rbp ; ret
0xffffff800061b686 : or byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff800075deb8 : or byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x12] ; call rax
0xffffff8000617c85 : or byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0x1a] ; call rax
0xffffff80005225cd : or byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff80003ea0d8 : or byte ptr [rax - 0x77], cl ; fmul dword ptr [rbx - 0x76b743a3] ; ret 0xb941
0xffffff80002a50d8 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; call rdx
0xffffff8000760202 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; cmc ; outsd dx, dword ptr [rsi] ; ret
0xffffff80007c85d4 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80002a3ff5 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xee4
0xffffff800026db08 : or byte ptr [rax - 0x77], cl ; jbe 0xffffff800026db23 ; pop rbp ; ret
0xffffff800026dd4f : or byte ptr [rax - 0x77], cl ; jg 0xffffff800026dd6a ; pop rbp ; ret
0xffffff80002f9de5 : or byte ptr [rax - 0x77], cl ; jle 0xffffff80002f9e0b ; mov qword ptr [rax], rsi ; pop rbp ; ret
0xffffff80002a6739 : or byte ptr [rax - 0x77], cl ; ret
0xffffff800036f44f : or byte ptr [rax - 0x77], cl ; ret 0x148
0xffffff80008ded10 : or byte ptr [rax - 0x77], cl ; ret 0x8148
0xffffff80008a3d25 : or byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff8000410d5d : or byte ptr [rax - 0x77], cl ; ret 0xe95d
0xffffff8000289ef1 : or byte ptr [rax - 0x77], cl ; ret 0xf6e8
0xffffff8000324b66 : or byte ptr [rax - 0x77], cl ; ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff80006b7997 : or byte ptr [rax - 0x77], cl ; test dword ptr [rax - 2], ecx ; ret 0x4ae9
0xffffff8000288feb : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff8000288fff ; call rcx
0xffffff800028a76b : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff800028a77f ; call rcx
0xffffff80002b009b : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80002b00af ; call rcx
0xffffff80002b034b : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80002b035f ; call rcx
0xffffff80003ab86b : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff80003ab87f ; call rcx
0xffffff800063fd5c : or byte ptr [rax - 0x7b], cl ; leave ; je 0xffffff800063fd73 ; mov rdi, rbx ; call rcx
0xffffff80006c97fc : or byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80006c97f9 ; xor eax, eax ; pop rbp ; ret
0xffffff8000582a85 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff80004c5f56 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1c], cl ; pop rbp ; ret
0xffffff80003a6275 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x48], 0x83 ; ret
0xffffff80007b408b : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x5b], 0x5d ; jmp rax
0xffffff8000742e4b : or byte ptr [rax - 0x7cb80000], ah ; ret
0xffffff80003b8ea2 : or byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000388b2d : or byte ptr [rax - 0x7d], cl ; clc ; jne 0xffffff8000388b28 ; pop rbp ; ret
0xffffff8000388b65 : or byte ptr [rax - 0x7d], cl ; clc ; jne 0xffffff8000388b58 ; pop rbp ; ret
0xffffff80007ac323 : or byte ptr [rax - 0x7d], cl ; jns 0xffffff80007ac350 ; add byte ptr [rdi], cl ; lahf ; ret 0xdb85
0xffffff800025fdca : or byte ptr [rax - 0x7d], cl ; ret
0xffffff800068672e : or byte ptr [rax - 0x7d], cl ; ret 0x4118
0xffffff8000388d8f : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0xffffff800036aabc : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff80007bf07b : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff80007377f8 : or byte ptr [rax - 0x7d], cl ; ret 0x4820
0xffffff8000328524 : or byte ptr [rax - 0x7d], cl ; ret 0x48e0
0xffffff800071e17d : or byte ptr [rax - 0x7d], cl ; ret 0x6608
0xffffff80006d0661 : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0xffffff800065a8e8 : or byte ptr [rax - 0x7d], cl ; ret 0xe908
0xffffff80008bc479 : or byte ptr [rax - 0x7d], cl ; ret 0xff04
0xffffff8000485c9f : or byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0x83 ; ret
0xffffff80002615d3 : or byte ptr [rax - 0x7d], r9b ; ret
0xffffff800033e4f6 : or byte ptr [rax - 0x7f], cl ; ret
0xffffff80002978d2 : or byte ptr [rax - 1], cl ; ret
0xffffff80002dbc7e : or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000443591 : or byte ptr [rax - 1], cl ; ret 0x6349
0xffffff80003778ab : or byte ptr [rax - 1], cl ; ret 0x8b48
0xffffff8000842566 : or byte ptr [rax - 1], cl ; ret 0xc3ff
0xffffff800075e443 : or byte ptr [rax - 1], cl ; ret 0xc9ff
0xffffff8000842652 : or byte ptr [rax - 1], cl ; ret 0xfe83
0xffffff80006b9b46 : or byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000683c72 : or byte ptr [rax - 1], cl ; ret 0xff49
0xffffff8000708e22 : or byte ptr [rax - 9], cl ; ret 0xf07f
0xffffff800037ec00 : or byte ptr [rax], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80008aa7f5 : or byte ptr [rax], 9 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000764091 : or byte ptr [rax], al ; adc byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e9
0xffffff80004e5453 : or byte ptr [rax], al ; add al, ch ; in eax, 0x8c ; ret 0x8bff
0xffffff800034c385 : or byte ptr [rax], al ; add al, ch ; ret
0xffffff80008a0886 : or byte ptr [rax], al ; add al, ch ; ret 0x9ed8
0xffffff80004b1d78 : or byte ptr [rax], al ; add byte ptr [rax - 0x51a73], al ; call qword ptr [rax]
0xffffff80004b1da0 : or byte ptr [rax], al ; add byte ptr [rax - 0x51a73], al ; jmp qword ptr [rax]
0xffffff80002a2b90 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb dword ptr [rax + 0x39], ecx ; ret
0xffffff80006c79d5 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add esi, edi ; ret 0
0xffffff800041af00 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008732b4 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80008928c2 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff80004950d5 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sub byte ptr [rbx + 0x5d], r11b ; ret
0xffffff8000409e19 : or byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff8000299f9b : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800036f472 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x4c8b
0xffffff80004642f0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005cb947 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0xffffff800036ef21 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000680c29 : or byte ptr [rax], al ; add byte ptr [rax], al ; add eax, ecx ; pop rbp ; ret
0xffffff80003928ce : or byte ptr [rax], al ; add byte ptr [rax], al ; add esi, dword ptr [rdi + rdx - 0x37] ; ret
0xffffff80002d7b84 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000266c1d : or byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0xffffff8000267133 : or byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0xffffff8000392963 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; leave ; ret
0xffffff80002670d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov r15, rbx ; call r15
0xffffff8000794fd5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0xffffff80007908aa : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff8000846483 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000367579 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800088d841 : or byte ptr [rax], al ; add byte ptr [rax], al ; sete al ; pop rbp ; ret
0xffffff8000700c26 : or byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80002a5b93 : or byte ptr [rax], al ; add byte ptr [rbp - 0x48], dh ; pop rbp ; ret
0xffffff8000291a99 : or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800070bd8b : or byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fe02], al ; ret
0xffffff80008a0f8e : or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff80008abd2a : or byte ptr [rax], al ; add byte ptr [rcx - 0x1e00a23a], cl ; pop rbp ; ret
0xffffff80005d2512 : or byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; adc dword ptr [rax - 1], r9d ; ret
0xffffff800041afca : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80004571bd : or byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; add cl, byte ptr [rdi] ; ret 0x19eb
0xffffff80008babfc : or byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000531f81 : or byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xffd5
0xffffff8000531f52 : or byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x54 ; ret 0xffd5
0xffffff80007c7430 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x8548
0xffffff80008a91a0 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80008d91ff : or byte ptr [rax], al ; add byte ptr [rsi + 0x8000], bh ; pop rbp ; jmp rax
0xffffff80008e1a5e : or byte ptr [rax], al ; add byte ptr [rsi + 3], bh ; pop rbp ; jmp rax
0xffffff80006c8665 : or byte ptr [rax], al ; add dh, dh ; ret
0xffffff80006276cb : or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004f9467 : or byte ptr [rax], al ; and eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff800072f2c2 : or byte ptr [rax], al ; je 0xffffff800072f2cd ; pop rbp ; ret
0xffffff8000293677 : or byte ptr [rax], al ; jne 0xffffff8000293682 ; pop rbp ; ret
0xffffff8000316437 : or byte ptr [rax], al ; jne 0xffffff8000316459 ; test dx, dx ; setne dl ; jmp 0xffffff800031645b
0xffffff80003a48d3 : or byte ptr [rax], al ; jne 0xffffff80003a48d3 ; ret
0xffffff800079d4f2 : or byte ptr [rax], al ; jne 0xffffff800079d503 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077d8e7 : or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x10] ; pop rbp ; ret
0xffffff800077d8f7 : or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff8000780157 : or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x2c] ; pop rbp ; ret
0xffffff800077d9df : or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff80004e463c : or byte ptr [rax], al ; mov rdi, r12 ; mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff8000303510 : or byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800080f9b9 : or byte ptr [rax], al ; sete al ; pop rbp ; ret
0xffffff80007ff08f : or byte ptr [rax], bl ; pop rbp ; jmp rax
0xffffff8000864ce0 : or byte ptr [rax], ch ; add byte ptr [rcx - 0x7d], al ; std ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xca84
0xffffff80006a0c6b : or byte ptr [rax], cl ; pop rbp ; ret
0xffffff80007ff04f : or byte ptr [rax], dl ; pop rbp ; jmp rax
0xffffff80007ff04e : or byte ptr [rax], r10b ; pop rbp ; jmp rax
0xffffff80007ff08e : or byte ptr [rax], r11b ; pop rbp ; jmp rax
0xffffff80006276ca : or byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006a0c6a : or byte ptr [rax], r9b ; pop rbp ; ret
0xffffff80005496e4 : or byte ptr [rbp + 0x13], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065f554 : or byte ptr [rbp + 0x15], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800079c3c1 : or byte ptr [rbp + 0x29], al ; ret 0x8944
0xffffff80004e17b3 : or byte ptr [rbp + 0x39], 0x2c ; ret 0xdf75
0xffffff80004f8e1a : or byte ptr [rbp + 0x41], bl ; jmp rbx
0xffffff8000437f64 : or byte ptr [rbp + 0x52], 2 ; jmp 0xffffff8000437fcc
0xffffff8000b490d1 : or byte ptr [rbp + 1], cl ; ror dword ptr [rcx - 0x77], cl ; ret 0x8149
0xffffff800037c58e : or byte ptr [rbp + 2], dh ; xor eax, eax ; pop rbp ; ret
0xffffff800037c58d : or byte ptr [rbp + 2], sil ; xor eax, eax ; pop rbp ; ret
0xffffff80002ff3c5 : or byte ptr [rbp + 3], dh ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800031f1c1 : or byte ptr [rbp + 5], dh ; mov eax, 1 ; pop rbp ; ret
0xffffff80004b37ae : or byte ptr [rbp + 5], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800051f5b6 : or byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000799438 : or byte ptr [rbp + 8], dh ; mov rdi, r12 ; call 0xffffff80002b5748
0xffffff80002588b9 : or byte ptr [rbp + rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff80002d10c4 : or byte ptr [rbp + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008085e2 : or byte ptr [rbp + rcx*4 + 0x3d], 6 ; call qword ptr [rax]
0xffffff80007afeb1 : or byte ptr [rbp - 0x17], bl ; js 0xffffff80007afe77 ; mov bh, 0xff ; pop rbp ; ret
0xffffff8000788d22 : or byte ptr [rbp - 0x17], bl ; push rdi ; xchg eax, edi ; mov bl, 0xff ; pop rbp ; ret
0xffffff80007bd8b4 : or byte ptr [rbp - 0x40f0b701], ch ; ret
0xffffff80007735e7 : or byte ptr [rbp - 0x75], cl ; jl 0xffffff8000773618 ; and byte ptr [rax - 0x77], cl ; ret
0xffffff800065a554 : or byte ptr [rbp - 0x76b7ffeb], ah ; ret
0xffffff8000618787 : or byte ptr [rbp - 0x76ec812e], al ; ret 0xca29
0xffffff80003861cd : or byte ptr [rbp - 0x77], al ; imul ecx ; ret 4
0xffffff8000483631 : or byte ptr [rbp - 0x77], al ; ret 0xc141
0xffffff80006b8cd7 : or byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret
0xffffff8000389674 : or byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x37] ; call qword ptr [rax]
0xffffff80004847a8 : or byte ptr [rbp], ah ; pop rbp ; ret
0xffffff8000781d4c : or byte ptr [rbx + 0x28901e0], al ; xor eax, eax ; pop rbp ; ret
0xffffff800044854b : or byte ptr [rbx + 0x2c], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002810b9 : or byte ptr [rbx + 0x39483040], cl ; ret
0xffffff80005a053d : or byte ptr [rbx + 0x3b496], cl ; add bh, bh ; ret 0x5789
0xffffff80004a1f10 : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b9
0xffffff800055bd6e : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff8000298039
0xffffff800035e9b7 : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff800074ac49
0xffffff800065354f : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp r8
0xffffff80002b11b4 : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp rax
0xffffff800088655d : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250d3f : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80002a5e1d : or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000297ca6 : or byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000584ef4 : or byte ptr [rbx + 0x568b0c42], cl ; or al, 0x21 ; ret 0xd0f7
0xffffff8000598119 : or byte ptr [rbx + 0x578b0c40], cl ; or al, 0x21 ; ret 0xd0f7
0xffffff80006ae882 : or byte ptr [rbx + 0x5d], bl ; jmp 0xffffff80002d4ef6
0xffffff8000764370 : or byte ptr [rbx + 0x5d], bl ; jmp 0xffffff80003923e6
0xffffff8000766ffb : or byte ptr [rbx + 0x5d], bl ; jmp 0xffffff8000393046
0xffffff8000885201 : or byte ptr [rbx + 0x5d], bl ; jmp 0xffffff80008114a5
0xffffff800050e970 : or byte ptr [rbx + 0x5d], bl ; jmp r8
0xffffff8000272bab : or byte ptr [rbx + 0x5d], bl ; jmp rax
0xffffff800082a2a1 : or byte ptr [rbx + 0x5d], bl ; jmp rcx
0xffffff80002501e7 : or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80004a6dfa : or byte ptr [rbx + 0x7894807], cl ; pop rbp ; ret
0xffffff80007cfeab : or byte ptr [rbx + rcx*4 + 0x70], cl ; cmp byte ptr [rbp + 0x31], al ; in al, 0xf6 ; ret 0x7501
0xffffff800078c6f5 : or byte ptr [rbx - 0x1a82fd08], al ; pop rbp ; ret
0xffffff800089dbd1 : or byte ptr [rbx - 0x1c3efe1d], al ; or byte ptr [rcx], cl ; ret
0xffffff80006c6357 : or byte ptr [rbx - 0x74b6f3af], cl ; or dh, dh ; ret 0x7401
0xffffff8000679754 : or byte ptr [rbx - 0x76b7ffed], dh ; ret
0xffffff8000858452 : or byte ptr [rbx - 0x78a0739], al ; pop rbp ; ret
0xffffff80003651e1 : or byte ptr [rbx - 0x7cb7d7ad], cl ; ret
0xffffff80007a9659 : or byte ptr [rbx - 0xe8a0007], al ; pop rbp ; ret
0xffffff800046f04d : or byte ptr [rbx], 2 ; jmp 0xffffff800046f061
0xffffff800030fd4c : or byte ptr [rbx], ah ; add eax, 0x7ecd21 ; pop rbp ; ret
0xffffff800039a72d : or byte ptr [rbx], bh ; ja 0xffffff800039a74f ; jne 0xffffff800039a706 ; ret
0xffffff800037c6f7 : or byte ptr [rbx], ch ; pop rbp ; ret
0xffffff80008970d6 : or byte ptr [rcx + 0x1b00f14], cl ; pop rbp ; ret
0xffffff8000443900 : or byte ptr [rcx + 0x39], al ; ret 0x1575
0xffffff80003927ec : or byte ptr [rcx + 0x53cce8c6], cl ; add byte ptr [rax], al ; ret
0xffffff8000392776 : or byte ptr [rcx + 0x58f2e8c6], cl ; add byte ptr [rax], al ; ret
0xffffff800039284c : or byte ptr [rcx + 0x5b7ce8c6], cl ; add byte ptr [rax], al ; ret
0xffffff8000561dea : or byte ptr [rcx + 0x5dc03101], cl ; ret
0xffffff80003684ca : or byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff8000855143 : or byte ptr [rcx + 0x63], cl ; add al, 0x8c ; add rax, r12 ; jmp rax
0xffffff80006034fa : or byte ptr [rcx + 0x63], cl ; cmp al, 0xba ; add rdi, r10 ; jmp rdi
0xffffff80004a0286 : or byte ptr [rcx + 0x63], cl ; ret 0xc148
0xffffff800069a36c : or byte ptr [rcx + 0xf], al ; mov dh, 0x96 ; ret
0xffffff800083530a : or byte ptr [rcx + 0xf], al ; mov dh, 0xc ; adc byte ptr [rax - 1], cl ; ret 0xf983
0xffffff8000731324 : or byte ptr [rcx + 1], cl ; and byte ptr [r8 - 1], r9b ; ret
0xffffff80007072ff : or byte ptr [rcx + 3], al ; push rsi ; add al, 1 ; ret 0x341
0xffffff80004ac851 : or byte ptr [rcx + 9], al ; ret 0x8548
0xffffff8000758782 : or byte ptr [rcx + rax], 0xc ; pop rbp ; ret
0xffffff8000758764 : or byte ptr [rcx + rax], 4 ; pop rbp ; ret
0xffffff80003962d3 : or byte ptr [rcx + rcx*4 + 0x33], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396453 : or byte ptr [rcx + rcx*4 + 0x33], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000579846 : or byte ptr [rcx + rcx*4 + 0x69], cl ; or bl, ch ; adc dword ptr [rax - 0x77], ecx ; ret 0xc749
0xffffff80004db2d3 : or byte ptr [rcx + rcx*4 + 0x78], cl ; cmp dh, dh ; ret 0xf30
0xffffff8000624825 : or byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret 0xf2c8
0xffffff80007aafaf : or byte ptr [rcx + rcx*4 - 0x19], al ; mov rsi, r13 ; call rax
0xffffff800079943a : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80002b5746
0xffffff80003e6dbf : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff8000393046
0xffffff80004e1cbf : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80008fdf96
0xffffff800032e937 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0xffffff8000625401 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call r14
0xffffff8000539912 : or byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, r14 ; call rax
0xffffff800029e421 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; call r15
0xffffff8000762e69 : or byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e7
0xffffff800077835a : or byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, rbx ; call rax
0xffffff80004bc9f2 : or byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000338c66
0xffffff8000476c76 : or byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff8000422eb6
0xffffff800084c0a2 : or byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0xffffff8000437f7b : or byte ptr [rcx + rcx*4 - 9], cl ; jmp 0xffffff8000437fb0
0xffffff8000534ded : or byte ptr [rcx + rcx*4 - 9], cl ; mov esi, r15d ; call rax
0xffffff80002d0892 : or byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r13 ; call rax
0xffffff80005841c8 : or byte ptr [rcx + rcx*8 - 0x3fcefb8c], al ; pop rbp ; ret
0xffffff80006c6366 : or byte ptr [rcx - 0x3e7cb7c7], cl ; add al, 0xf6 ; ret 0x7402
0xffffff80003736be : or byte ptr [rcx - 0x3ea57d87], bl ; rcr byte ptr [rsi], 0x89 ; ret 0xfa31
0xffffff8000371c89 : or byte ptr [rcx - 0x3ea57d87], bl ; ret
0xffffff8000820f64 : or byte ptr [rcx - 0x59], ch ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0xffffff80004b66d6 : or byte ptr [rcx - 0x73], 0x4e ; js 0xffffff80004b66d8 ; ret 0x4808
0xffffff800031b2fa : or byte ptr [rcx - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0xffffff800072d752 : or byte ptr [rcx - 0x75], al ; push rdi ; add al, 0x21 ; ret 0xd109
0xffffff80003696fa : or byte ptr [rcx - 0x75], al ; sahf ; nop ; add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff800055dbcd : or byte ptr [rcx - 0x75], cl ; je 0xffffff800055dba4 ; call rax
0xffffff800055e718 : or byte ptr [rcx - 0x75], cl ; je 0xffffff800055e6f2 ; call rax
0xffffff80008f178d : or byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f173f ; call rbx
0xffffff80008f1816 : or byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f17c8 ; call rcx
0xffffff8000679154 : or byte ptr [rcx - 0x76b7ffed], bh ; ret
0xffffff80002bf62c : or byte ptr [rcx - 0x77], al ; add al, 0x5d ; ret
0xffffff800072da61 : or byte ptr [rcx - 0x77], al ; or ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff80008989bf : or byte ptr [rcx - 0x77], cl ; adc al, 8 ; mov al, 1 ; pop rbp ; ret
0xffffff80006c0562 : or byte ptr [rcx - 0x78], al ; push rsp ; sysenter
0xffffff800031140d : or byte ptr [rcx - 0x7d], al ; jg 0xffffff8000311462 ; or al, 0xf ; xchg eax, ebp ; ret 0xe181
0xffffff80007e4fec : or byte ptr [rcx - 0x7d], cl ; ret 0x4814
0xffffff8000491feb : or byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0xffffff8000b4056a : or byte ptr [rcx - 0x7f], al ; mov dh, 0xc9 ; ret 0x4908
0xffffff8000b477f4 : or byte ptr [rcx - 0x7f], al ; ret
0xffffff80004aa680 : or byte ptr [rcx - 1], al ; ret
0xffffff80002763bd : or byte ptr [rcx - 1], al ; ret 0xed75
0xffffff80007ff9e9 : or byte ptr [rcx - 1], cl ; ror byte ptr [rcx + rcx*4 + 1], 0x5d ; ret
0xffffff80002faf63 : or byte ptr [rcx], 0 ; pop rbp ; ret
0xffffff8000b4a176 : or byte ptr [rcx], ah ; enter -0x3fff, 0x29 ; ret 0xf281
0xffffff800058e903 : or byte ptr [rcx], ah ; ret 0xd0f7
0xffffff800078af97 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r12 ; call 0xffffff8000397209
0xffffff800072e116 : or byte ptr [rcx], al ; add byte ptr [rax], al ; or byte ptr [rdi + 0x31], 1 ; pop rbp ; ret
0xffffff800049bdec : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800046a73f : or byte ptr [rcx], al ; mov byte ptr [rdi + 0x147], cl ; pop rbp ; ret
0xffffff800029f320 : or byte ptr [rcx], al ; ret 0x9389
0xffffff80005ac1d5 : or byte ptr [rcx], al ; ret 0xb70f
0xffffff8000b4a198 : or byte ptr [rcx], al ; ret 0xf089
0xffffff800027af78 : or byte ptr [rcx], bh ; ret
0xffffff8000668ec5 : or byte ptr [rcx], bh ; ret 0x850f
0xffffff80007e2c8b : or byte ptr [rcx], bh ; ret 0x8948
0xffffff8000659378 : or byte ptr [rcx], ch ; fisub dword ptr [rsi - 0x3f] ; ret 0x6608
0xffffff80008aa7f6 : or byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008da38e : or byte ptr [rcx], cl ; mov esi, dword ptr [r12 + 0x3c] ; call rax
0xffffff800089dbd7 : or byte ptr [rcx], cl ; ret
0xffffff800080c818 : or byte ptr [rcx], cl ; ret 0x1be
0xffffff800080554e : or byte ptr [rcx], cl ; ret 0x8d48
0xffffff80003ea2d1 : or byte ptr [rcx], cl ; ret 0xca09
0xffffff8000359278 : or byte ptr [rcx], dh ; leave ; pop rbp ; jmp 0xffffff8000315576
0xffffff80008d19b4 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800062f951 : or byte ptr [rcx], dh ; ret
0xffffff80005c0c6b : or byte ptr [rcx], dh ; ret 0xcb01
0xffffff80005981f5 : or byte ptr [rcx], dh ; ret 0xf129
0xffffff8000781cb3 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffc9
0xffffff80006da544 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800054bf98 : or byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call r15
0xffffff800036a2b2 : or byte ptr [rcx], dh ; test byte ptr [rbx + 0x474fffb], 0x39 ; ret
0xffffff800055e354 : or byte ptr [rdi + 0x25], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072d9fa : or byte ptr [rdi + 0x30], 0x10 ; pop rbp ; ret
0xffffff800072da1a : or byte ptr [rdi + 0x30], 0x20 ; pop rbp ; ret
0xffffff800072dc0a : or byte ptr [rdi + 0x30], 0x40 ; pop rbp ; ret
0xffffff800072d9ca : or byte ptr [rdi + 0x30], 0x80 ; pop rbp ; ret
0xffffff800072d9ea : or byte ptr [rdi + 0x30], 1 ; pop rbp ; ret
0xffffff800072da0a : or byte ptr [rdi + 0x30], 2 ; pop rbp ; ret
0xffffff800072da2a : or byte ptr [rdi + 0x30], 4 ; pop rbp ; ret
0xffffff800072d9da : or byte ptr [rdi + 0x30], 8 ; pop rbp ; ret
0xffffff800072d9aa : or byte ptr [rdi + 0x31], 0x10 ; pop rbp ; ret
0xffffff800072db9b : or byte ptr [rdi + 0x31], 0x20 ; pop rbp ; ret
0xffffff800072dbba : or byte ptr [rdi + 0x31], 0x40 ; pop rbp ; ret
0xffffff800072e11a : or byte ptr [rdi + 0x31], 1 ; pop rbp ; ret
0xffffff800072d9ba : or byte ptr [rdi + 0x31], 2 ; pop rbp ; ret
0xffffff800072d99a : or byte ptr [rdi + 0x31], 4 ; pop rbp ; ret
0xffffff800072e5d7 : or byte ptr [rdi + 0x31], 8 ; pop rbp ; ret
0xffffff800072d97b : or byte ptr [rdi + 0x32], 1 ; pop rbp ; ret
0xffffff800072db8a : or byte ptr [rdi + 0x32], 2 ; pop rbp ; ret
0xffffff800072dd5a : or byte ptr [rdi + 0x32], 4 ; pop rbp ; ret
0xffffff800072db22 : or byte ptr [rdi + 0x32], 8 ; pop rbp ; ret
0xffffff800072e55a : or byte ptr [rdi + 0x33], 0x40 ; pop rbp ; ret
0xffffff800072dd76 : or byte ptr [rdi + 0x34], 0x10 ; pop rbp ; ret
0xffffff800072e59a : or byte ptr [rdi + 0x34], 1 ; pop rbp ; ret
0xffffff800072e5ab : or byte ptr [rdi + 0x34], 2 ; pop rbp ; ret
0xffffff800072daca : or byte ptr [rdi + 0x34], 4 ; pop rbp ; ret
0xffffff800072e54a : or byte ptr [rdi + 0x34], 8 ; pop rbp ; ret
0xffffff80002c0b34 : or byte ptr [rdi + 0x358], 1 ; pop rbp ; ret
0xffffff800072eb0a : or byte ptr [rdi + 0x35], 0x10 ; pop rbp ; ret
0xffffff800072eb1a : or byte ptr [rdi + 0x35], 0x20 ; pop rbp ; ret
0xffffff800072d960 : or byte ptr [rdi + 0x35], 0x80 ; pop rbp ; ret
0xffffff800072dbcb : or byte ptr [rdi + 0x35], 1 ; pop rbp ; ret
0xffffff80007698bc : or byte ptr [rdi + 0x37], 0 ; call 0xffffff8000393047
0xffffff80002bbe0c : or byte ptr [rdi + 0x3f0], 1 ; pop rbp ; ret
0xffffff80002bbe3c : or byte ptr [rdi + 0x3f0], 4 ; pop rbp ; ret
0xffffff80006d6456 : or byte ptr [rdi + 0x41], 1 ; pop rbp ; ret
0xffffff800047f577 : or byte ptr [rdi + 0x46], 8 ; pop rbp ; ret
0xffffff80004d01f9 : or byte ptr [rdi + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff80005f0004 : or byte ptr [rdi + 0x94], 4 ; pop rbp ; ret
0xffffff800031eb69 : or byte ptr [rdi + 0xe8], 0x40 ; pop rbp ; ret
0xffffff80004b3af4 : or byte ptr [rdi + 1], 0x10 ; pop rbp ; ret
0xffffff80006d6370 : or byte ptr [rdi + 6], 0x80 ; pop rbp ; ret
0xffffff80002f7c7e : or byte ptr [rdi + rax - 0x48], dh ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000574d81 : or byte ptr [rdi + rcx - 0x4a], al ; ret
0xffffff800078cf43 : or byte ptr [rdi + rcx - 0x75], dh ; push rsp ; ret
0xffffff80004b3a84 : or byte ptr [rdi], 0x10 ; pop rbp ; ret
0xffffff80004b3ad4 : or byte ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80004b3b14 : or byte ptr [rdi], 0x40 ; pop rbp ; ret
0xffffff80006c66cd : or byte ptr [rdi], 0x44 ; ret 0x508d
0xffffff80006eb5d7 : or byte ptr [rdi], 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000288334 : or byte ptr [rdi], 0x85 ; out dx, al ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff8000349c62 : or byte ptr [rdi], 0x85 ; ret
0xffffff80006763c4 : or byte ptr [rdi], 0x85 ; ret 0
0xffffff8000316468 : or byte ptr [rdi], 0x94 ; ret 0x4eb
0xffffff8000308d91 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0xffffff80007bd03c : or byte ptr [rdi], 0x95 ; ret 0x9589
0xffffff80004c0996 : or byte ptr [rdi], 0xb6 ; ret 0x48d
0xffffff8000720a02 : or byte ptr [rdi], 0xb7 ; ret
0xffffff800029df3a : or byte ptr [rdi], 0xbe ; cmp byte ptr [rax - 0x75], cl ; jne 0xffffff800029ded2 ; call rcx
0xffffff8000547854 : or byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039133a : or byte ptr [rdi], cl ; and al, al ; pop rbp ; ret
0xffffff8000391595 : or byte ptr [rdi], cl ; and al, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800038de53 : or byte ptr [rdi], cl ; mov dh, 0x74 ; add eax, 0x75f239d0 ; ret 0xd284
0xffffff80005e32db : or byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0xffffff8000722898 : or byte ptr [rdi], cl ; mov dh, 0xd2 ; inc rdx ; jmp 0xffffff80007228b0
0xffffff80003d73ab : or byte ptr [rdi], cl ; ret
0xffffff80006c6764 : or byte ptr [rdi], cl ; ret 0x508d
0xffffff80004ef356 : or byte ptr [rdi], cl ; ret 0xc7f6
0xffffff800057ac92 : or byte ptr [rdi], cl ; test byte ptr [rsi - 0x9000003], ch ; ret
0xffffff80003ee7b1 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0xc085
0xffffff8000859ed4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800048ba61 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x30a8
0xffffff80004ba8bb : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff800071bf45 : or byte ptr [rdx + 0x18428801], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80007f05dc : or byte ptr [rdx + 0x34], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000793734 : or byte ptr [rdx + 0x3f0], 1 ; pop rbp ; ret
0xffffff8000762597 : or byte ptr [rdx + 0xf], al ; mov dh, 0x14 ; sub dword ptr [rcx], ecx ; ret 0x8842
0xffffff80002c207c : or byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000661e27 : or byte ptr [rdx - 0x74be57b3], cl ; xor byte ptr [r9], r15b ; ret
0xffffff800055c8e4 : or byte ptr [rdx - 0x76b7002d], bh ; ret
0xffffff8000679854 : or byte ptr [rdx - 0x76b7ffed], dh ; ret
0xffffff800082cd31 : or byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000781750 : or byte ptr [rdx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000614195 : or byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003b1c7b : or byte ptr [rdx], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800074b555 : or byte ptr [rip + 0x336df0], 0x80 ; pop rbp ; ret
0xffffff8000746ace : or byte ptr [rip + 0x33b877], 0x20 ; pop rbp ; ret
0xffffff8000664554 : or byte ptr [rip - 0x76b7ffeb], al ; ret
0xffffff800059c5a0 : or byte ptr [rip - 0x7cb80000], al ; ret
0xffffff80007f4488 : or byte ptr [rsi + 0x14], 8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008ea844 : or byte ptr [rsi + 0x18], bh ; call 0xffffff8000856ad8
0xffffff80009002b8 : or byte ptr [rsi + 0x23], dh ; add byte ptr [rax - 1], cl ; ret
0xffffff80003d5f5d : or byte ptr [rsi + 1], 0x40 ; pop rbp ; ret
0xffffff800074b463 : or byte ptr [rsi + 1], bh ; xor edx, edx ; call qword ptr [rbx]
0xffffff80002bad70 : or byte ptr [rsi + 2], 0x80 ; xor eax, eax ; pop rbp ; ret
0xffffff8000749533 : or byte ptr [rsi + 2], bh ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000748c36 : or byte ptr [rsi + 3], bh ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff80004a67d5 : or byte ptr [rsi + rsi*8], cl ; ret 0xbe01
0xffffff80005ab7ac : or byte ptr [rsi - 0x3f7a0003], 0xf ; xchg eax, esp ; ret
0xffffff8000590a17 : or byte ptr [rsi - 0x3f], ah ; ret 0x4808
0xffffff80005847d0 : or byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff8000669c54 : or byte ptr [rsi - 0x76b7ffec], ch ; ret
0xffffff8000668eb3 : or byte ptr [rsi - 0x77], ah ; push rbp ; ret 0x958b
0xffffff8000265f63 : or byte ptr [rsi - 0x77], ah ; ret 0x4d8b
0xffffff8000677a59 : or byte ptr [rsi - 0x77], ah ; ret 0x8b48
0xffffff800043b921 : or byte ptr [rsi - 0x77], ah ; ret 0x8d48
0xffffff8000262c3e : or byte ptr [rsi - 0x77], ah ; ret 0xd8b
0xffffff8000516083 : or byte ptr [rsi - 9], ah ; ret
0xffffff8000500b54 : or byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff80006265c1 : or byte ptr [rsi], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007820e2 : or byte ptr [rsi], 2 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005d41c5 : or byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000604c85 : or byte ptr cs:[rax - 0x73], cl ; jne 0xffffff8000604c51 ; call rax
0xffffff8000349c61 : or byte ptr ds:[rdi], 0x85 ; ret
0xffffff80003b1c7a : or byte ptr ds:[rdx], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c679e : or ch, 0xff ; jmp 0xffffff80005c67e1
0xffffff80004dfe17 : or ch, al ; ret
0xffffff80004e0803 : or ch, al ; xlatb ; ret
0xffffff8000753b32 : or ch, bh ; ret
0xffffff80006a2a9c : or ch, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3c443 : or ch, byte ptr [rax] ; shl dword ptr [rax], 1 ; ret 0x8841
0xffffff80008846be : or ch, byte ptr [rbx] ; add byte ptr [rax], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fefc9 : or ch, byte ptr [rcx] ; add byte ptr [rcx - 0x75], cl ; add al, 0 ; pop rbp ; jmp rax
0xffffff80007ff009 : or ch, byte ptr [rcx] ; add byte ptr [rcx - 0x75], cl ; add byte ptr [rax], r9b ; pop rbp ; jmp rax
0xffffff80006614a4 : or ch, cl ; ret 0x49ff
0xffffff80006615a2 : or cl, ah ; ret 0x49ff
0xffffff800058477d : or cl, al ; and cl, 1 ; movzx eax, cl ; pop rbp ; ret
0xffffff800059d6f0 : or cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff800030b416 : or cl, bh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000623235 : or cl, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d23fb : or cl, byte ptr [r8 - 0x7d] ; ret
0xffffff8000298e22 : or cl, byte ptr [rax + 0x39] ; ret 0x57d
0xffffff8000745bb3 : or cl, byte ptr [rax + 0x39] ; ret 0x8948
0xffffff8000719337 : or cl, byte ptr [rax + 0x39] ; ret 0xe7f
0xffffff8000600e26 : or cl, byte ptr [rax + 0x63] ; ret
0xffffff8000b496b3 : or cl, byte ptr [rax + 1] ; ret 0x294c
0xffffff80006c65a7 : or cl, byte ptr [rax - 0x75] ; add cl, byte ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800053a00d : or cl, byte ptr [rax - 0x75] ; jae 0xffffff800053a033 ; mov rdi, qword ptr [rbx + 0x28] ; call rax
0xffffff800054f3e9 : or cl, byte ptr [rax - 0x75] ; jne 0xffffff800054f3c3 ; call rbx
0xffffff8000288f37 : or cl, byte ptr [rax - 0x75] ; jnp 0xffffff8000288f65 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000821a8c : or cl, byte ptr [rax - 0x75] ; jnp 0xffffff8000821ade ; call rax
0xffffff8000490f6e : or cl, byte ptr [rax - 0x771c0938] ; shr dword ptr [rax], cl ; ret
0xffffff800051f05b : or cl, byte ptr [rax - 0x77] ; mov byte ptr [r9], r15b ; fmul dword ptr [rdi] ; ret
0xffffff80003831c2 : or cl, byte ptr [rax - 0x77] ; ret
0xffffff800041427d : or cl, byte ptr [rax - 0x77] ; ret 0x8148
0xffffff80005801b3 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff80005801a7 ; pop rbp ; ret
0xffffff8000581566 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff8000581557 ; pop rbp ; ret
0xffffff8000582533 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff8000582527 ; pop rbp ; ret
0xffffff80005b2153 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff80005b2147 ; pop rbp ; ret
0xffffff80005bf823 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff80005bf817 ; pop rbp ; ret
0xffffff80005ebec3 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff80005ebeb7 ; pop rbp ; ret
0xffffff8000637ad3 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff8000637ac7 ; pop rbp ; ret
0xffffff80008c78a3 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0xffffff80008c7897 ; pop rbp ; ret
0xffffff80008176f0 : or cl, byte ptr [rax - 0x7b] ; leave ; setne al ; pop rbp ; ret
0xffffff80004b2761 : or cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000267ef6 : or cl, byte ptr [rax - 0x7d] ; ret 0x3930
0xffffff8000449964 : or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0xffffff80004af369 : or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff80004cb796 : or cl, byte ptr [rax - 0x7d] ; ret 0x4820
0xffffff800045876f : or cl, byte ptr [rax - 0x7d] ; ret 0x4c04
0xffffff80004aca15 : or cl, byte ptr [rax - 0x7d] ; ret 0x6608
0xffffff80002a5d14 : or cl, byte ptr [rax - 0x7d] ; ret 0x8504
0xffffff800025d971 : or cl, byte ptr [rax - 0x7d] ; ret 0xeb03
0xffffff8000601d07 : or cl, byte ptr [rax - 0x7d] ; ret 0xff04
0xffffff800058e59f : or cl, byte ptr [rax - 0x7f] ; ret
0xffffff80005490f8 : or cl, byte ptr [rax - 1] ; ret
0xffffff800066daea : or cl, byte ptr [rax - 1] ; ret 0x2c6
0xffffff800038f827 : or cl, byte ptr [rax - 1] ; ret 0x3948
0xffffff800045a4fb : or cl, byte ptr [rax - 1] ; ret 0x8440
0xffffff800066dac6 : or cl, byte ptr [rax - 1] ; ret 0x8a41
0xffffff800066da94 : or cl, byte ptr [rax - 1] ; ret 0x8d4d
0xffffff8000553357 : or cl, byte ptr [rax - 1] ; ret 0xb60f
0xffffff8000829c29 : or cl, byte ptr [rax - 1] ; ret 0xc031
0xffffff8000840244 : or cl, byte ptr [rax - 1] ; ret 0xc3ff
0xffffff80005b3219 : or cl, byte ptr [rax - 1] ; ret 0xc984
0xffffff8000492001 : or cl, byte ptr [rax - 1] ; ret 0xe88
0xffffff80002a2101 : or cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff800066d124 : or cl, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80002bb506 : or cl, byte ptr [rax] ; ret 0xf280
0xffffff80003b530f : or cl, byte ptr [rbp + 0x58b4a1c] ; ret
0xffffff8000b43b6e : or cl, byte ptr [rbp - 0x1b47d850] ; ret
0xffffff80005dcf95 : or cl, byte ptr [rbp - 0x75] ; test r14, r14 ; jne 0xffffff80005dcf68 ; jmp 0xffffff80005dcfbb
0xffffff80007039a2 : or cl, byte ptr [rbx - 0x25] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055795a : or cl, byte ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call rcx
0xffffff800088fb42 : or cl, byte ptr [rcx - 0x75] ; sub al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80002ade7a : or cl, byte ptr [rcx - 1] ; ret
0xffffff800038b95e : or cl, byte ptr [rcx - 1] ; ret 0x3949
0xffffff80008f23ab : or cl, byte ptr [rcx - 1] ; ret 0x394d
0xffffff800033ff8f : or cl, byte ptr [rdi + 0x61] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800073845d : or cl, byte ptr [rdi] ; mov bh, 0xc1 ; pop rbp ; ret
0xffffff80006296c8 : or cl, byte ptr [rdi] ; ret
0xffffff800065035d : or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x3d83
0xffffff8000834505 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret
0xffffff800079d73f : or cl, byte ptr [rdx - 0xb7febd] ; ret
0xffffff8000327e21 : or cl, ch ; ret
0xffffff800075884b : or dh, al ; add al, 1 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80008d2a79 : or dh, bh ; add byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0xffffff8000455991 : or dh, bh ; ret
0xffffff80002ebe38 : or dh, byte ptr [rax + rax + 0x48] ; cmp edi, eax ; jne 0xffffff80002ebe4b ; pop rbp ; ret
0xffffff800066d47d : or dh, byte ptr [rax + rax] ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800058467c : or dh, byte ptr [rax + rdx + 0xf] ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000683190 : or dh, byte ptr [rax] ; ret
0xffffff8000751d6d : or dh, byte ptr [rbp + 7] ; mov eax, 1 ; pop rbp ; ret
0xffffff80008b6a91 : or dh, byte ptr [rbp + rax - 0x48] ; loop 0xffffff80008b6aa2 ; add al, ah ; pop rbp ; ret
0xffffff8000843545 : or dh, byte ptr [rbp - 0x28] ; pop rbx ; pop rbp ; ret
0xffffff80006c5512 : or dh, byte ptr [rcx + rax*8] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073db7d : or dh, byte ptr [rcx] ; ret
0xffffff80005287e1 : or dh, byte ptr [rcx] ; ret 0xd629
0xffffff80003b6342 : or dh, byte ptr [rcx] ; ror byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0xffffff8000708cd4 : or dh, byte ptr [rcx] ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; xchg eax, ecx ; ret 0xfffc
0xffffff8000252859 : or dh, byte ptr [rdx - 0x1c] ; pop rbp ; ret
0xffffff8000659829 : or dh, byte ptr [rip - 0x173fcf00] ; insd dword ptr [rdi], dx ; ret
0xffffff80007f0a88 : or dh, byte ptr [rsi + 7] ; mov eax, 0x16 ; pop rbp ; ret
0xffffff800050fcf6 : or dh, cl ; mov dl, sil ; movzx eax, dl ; pop rbp ; ret
0xffffff80003831b7 : or dh, dh ; ret
0xffffff80007a28f1 : or dh, dh ; ret 0x4c10
0xffffff80002a260e : or dh, dh ; ret 0x7401
0xffffff80006c5e7f : or dh, dh ; ret 0x7408
0xffffff80007a2927 : or dh, dh ; ret 0x7410
0xffffff80007cff33 : or dh, dh ; ret 0x7420
0xffffff80006c5ed0 : or dh, dh ; ret 0x7440
0xffffff80006c5eec : or dh, dh ; ret 0x7480
0xffffff80002c1754 : or dh, dh ; ret 0x7501
0xffffff80007c4f13 : or dh, dh ; ret 0x750e
0xffffff8000787975 : or dh, dh ; ret 0xb908
0xffffff80002a283c : or dh, dh ; ret 0xf01
0xffffff80004b4be6 : or dh, dh ; ret 0xf0c
0xffffff80006c674f : or dh, dh ; rol dword ptr [rdx], 0xf ; ret 0x508d
0xffffff8000620ef5 : or dil, dil ; ret 0x8548
0xffffff80004acc37 : or dil, r14b ; ret 0x80
0xffffff8000451ec3 : or dil, r15b ; pop rbp ; ret
0xffffff8000765632 : or dl, ah ; ret 0x49ff
0xffffff80005677fb : or dl, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c7d12 : or dl, byte ptr [rbp + 0x66] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80006a76a6 : or dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800076d1bd : or dl, dh ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; js 0xffffff800076d22d ; ret 0x49ff
0xffffff800076d199 : or dl, dh ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; pushfq ; pop rsi ; ret 0x49ff
0xffffff800071ea4c : or dl, dh ; movzx eax, ax ; pop rbp ; ret
0xffffff800071ea4b : or dl, r14b ; movzx eax, ax ; pop rbp ; ret
0xffffff8000559262 : or dword ptr [r11 - 0x7af0e108], eax ; ret 1
0xffffff8000731468 : or dword ptr [rax + 0x21], ecx ; ret
0xffffff80003c1f1f : or dword ptr [rax + 0x39], ecx ; ret
0xffffff8000250027 : or dword ptr [rax + 0x39], ecx ; sal dword ptr [rbp - 0xd], 1 ; pop rbp ; ret
0xffffff8000793733 : or dword ptr [rax + 0x3f08a], eax ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80002bbe0b : or dword ptr [rax + 0x3f08f], eax ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80002bbe6b : or dword ptr [rax + 0x3f0a7], eax ; add dh, bh ; pop rbp ; ret
0xffffff800028869d : or dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80004e35c1 : or dword ptr [rax + 0x5b000000], 0x41 ; pop rsi ; pop rbp ; ret
0xffffff800062689e : or dword ptr [rax + 0x63], ecx ; sar edi, cl ; ret
0xffffff800087866a : or dword ptr [rax + 0x6b], ecx ; ret 0x4938
0xffffff80008785dd : or dword ptr [rax + 0x6b], ecx ; ret 0x4d38
0xffffff800044d4c3 : or dword ptr [rax + 0xf480059], esp ; ret
0xffffff800073f557 : or dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800056cfe3 : or dword ptr [rax + 1], 0x2ab8ce ; add byte ptr [rax], al ; jmp rsi
0xffffff80002b5dde : or dword ptr [rax + 1], 0x4bbc8 ; add byte ptr [rax], al ; jmp rax
0xffffff800073f839 : or dword ptr [rax + 1], 0x4ebbc8 ; add byte ptr [rax], al ; jmp rax
0xffffff80008d50ec : or dword ptr [rax + 1], 0xbbe0ffc8 ; ret 2
0xffffff8000545f07 : or dword ptr [rax + 1], 0xed3145c8 ; jmp rax
0xffffff80004578e5 : or dword ptr [rax + 1], 0xf1894cc8 ; jmp rax
0xffffff800067ec36 : or dword ptr [rax + 1], 0xff3145c8 ; jmp rax
0xffffff8000281f2d : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0xffffff8000345c78 : or dword ptr [rax + 4], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80002e97bb : or dword ptr [rax + rax*4], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800025dee2 : or dword ptr [rax + rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800066d58a : or dword ptr [rax + rax], esi ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800061c180 : or dword ptr [rax - 0x49], eax ; add eax, dword ptr [rax - 0xa] ; out 0x28, eax ; ret 0x9388
0xffffff80002e8e4c : or dword ptr [rax - 0x73], ecx ; add eax, 0x14c ; pop rbp ; ret
0xffffff80006564a7 : or dword ptr [rax - 0x73], ecx ; add eax, 0x3b16a1 ; pop rbp ; ret
0xffffff80006568b1 : or dword ptr [rax - 0x73], ecx ; jge 0xffffff800065683e ; mov rdx, r15 ; call rax
0xffffff80003ac1f2 : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x7260a6 ; call rax
0xffffff80003ac102 : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x726196 ; call rax
0xffffff80003ac006 : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x726292 ; call rax
0xffffff80003aade1 : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x726dcf ; call rax
0xffffff80003a92aa : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x728906 ; call rax
0xffffff8000324cb8 : or dword ptr [rax - 0x75], ecx ; sbb byte ptr [r8 + 0x39], cl ; ret 0x3372
0xffffff8000895e30 : or dword ptr [rax - 0x75], ecx ; xchg dword ptr [rax + 0x5d000000], edi ; ret
0xffffff8000511b39 : or dword ptr [rax - 0x75], ecx ; xchg dword ptr [rax + 0x5d000000], esp ; ret
0xffffff80008e76b9 : or dword ptr [rax - 0x77], ecx ; add eax, 0x25000f ; pop rbp ; ret
0xffffff800060908f : or dword ptr [rax - 0x77], ecx ; fild word ptr [rcx + rcx*4 - 0xa] ; call r15
0xffffff8000877d51 : or dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret 0x894c
0xffffff8000b3c7ab : or dword ptr [rax - 0x77befd36], eax ; ret 0x8041
0xffffff8000328412 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000328407 ; pop rbp ; ret
0xffffff80003284af : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80003284a7 ; pop rbp ; ret
0xffffff800040c042 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800040c027 ; pop rbp ; ret
0xffffff800041ecea : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800041ece7 ; pop rbp ; ret
0xffffff8000448f7a : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000448f77 ; pop rbp ; ret
0xffffff8000530ed1 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000530ec7 ; pop rbp ; ret
0xffffff8000530f6f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000530f67 ; pop rbp ; ret
0xffffff800057f1cf : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800057f1c7 ; pop rbp ; ret
0xffffff800058248e : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000582477 ; pop rbp ; ret
0xffffff80005825ae : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000582597 ; pop rbp ; ret
0xffffff80005a8f7f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80005a8f77 ; pop rbp ; ret
0xffffff80005b111f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80005b1117 ; pop rbp ; ret
0xffffff80005e47bd : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80005e47b7 ; pop rbp ; ret
0xffffff80005e485f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80005e4857 ; pop rbp ; ret
0xffffff8000687f9f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff8000687f97 ; pop rbp ; ret
0xffffff80006a43ff : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80006a43f7 ; pop rbp ; ret
0xffffff800077e297 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800077e297 ; pop rbp ; ret
0xffffff800084cc1a : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800084cc17 ; pop rbp ; ret
0xffffff800084fc4a : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff800084fc47 ; pop rbp ; ret
0xffffff80008c680e : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c6807 ; pop rbp ; ret
0xffffff80008c68af : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c68a7 ; pop rbp ; ret
0xffffff80008c77f8 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c77e7 ; pop rbp ; ret
0xffffff80008c87ae : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c87a7 ; pop rbp ; ret
0xffffff80008c884f : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c8847 ; pop rbp ; ret
0xffffff80008c975d : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c9757 ; pop rbp ; ret
0xffffff80008c97ff : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0xffffff80008c97f7 ; pop rbp ; ret
0xffffff80003527b6 : or dword ptr [rax - 0x7d], 0x5d5b08c4 ; ret
0xffffff80004ac8f6 : or dword ptr [rax - 0x7d], ecx ; ret
0xffffff800039b358 : or dword ptr [rax - 0x7d], ecx ; ret 0xbe08
0xffffff80004aca96 : or dword ptr [rax - 0x7d], ecx ; ret 0xf08
0xffffff80005b9d73 : or dword ptr [rax - 0x7f], ecx ; ret
0xffffff800026b754 : or dword ptr [rax - 0x7f], ecx ; ret 0xa4
0xffffff8000719341 : or dword ptr [rax - 1], ecx ; leave ; mov qword ptr [rdi + 0x18], rcx ; pop rbp ; ret
0xffffff80002647b7 : or dword ptr [rax - 1], ecx ; ret
0xffffff8000570aa8 : or dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff80005ffb04 : or dword ptr [rax - 1], ecx ; ret 0xb60f
0xffffff80002805f3 : or dword ptr [rax - 1], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000262f98 : or dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], cl ; ret 0x149
0xffffff800064860e : or dword ptr [rax], 0x58b4001 ; clc ; ret
0xffffff80006a248b : or dword ptr [rax], 0x89480000 ; ret
0xffffff8000618570 : or dword ptr [rax], eax ; add bh, bh ; ret 0x3145
0xffffff80004ba35d : or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x637e
0xffffff80004ba45f : or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x9f0f
0xffffff80008aa19e : or dword ptr [rax], eax ; add byte ptr [rax + 0x5e415b01], dh ; pop rbp ; ret
0xffffff80002c8119 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; pop rbp ; ret
0xffffff8000517373 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002bf69c : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0xffffff80008be618 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc7b8
0xffffff800027c8e3 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004cba48 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003165c3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000394829 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xffffff8000394869
0xffffff800050bfd5 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000854dbc : or dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0xffffff80006de48e : or dword ptr [rax], eax ; add byte ptr [rbx + 0x11], bh ; jmp 0xffffff80006de464
0xffffff8000291b20 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007cadf7 : or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, r15 ; call rax
0xffffff80008fcf94 : or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff8000876010 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff80004bc504 : or dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff8000728d78 : or dword ptr [rax], eax ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80007a5c15 : or dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0xffffff80002fb202 : or dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002faf64 : or dword ptr [rax], eax ; pop rbp ; ret
0xffffff80004f9862 : or dword ptr [rax], ebp ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005877a1 : or dword ptr [rbp - 0x16cc8b37], eax ; ret
0xffffff8000692cc3 : or dword ptr [rbp - 0x76b70003], ebp ; ret 0xc931
0xffffff800041ee12 : or dword ptr [rbp - 0x7b], ecx ; leave ; jne 0xffffff800041eda7 ; pop rbp ; ret
0xffffff8000b49aa7 : or dword ptr [rbp], eax ; rol byte ptr [rcx + 8], cl ; ret 0xe280
0xffffff80006d3fae : or dword ptr [rbx + 0x15], ebp ; ret 0x3a21
0xffffff80009015b7 : or dword ptr [rbx + 0x23], esp ; add byte ptr [rax - 1], cl ; ret
0xffffff800072db69 : or dword ptr [rbx + 0x30], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025892f : or dword ptr [rbx + 0x41], ebx ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000859ed0 : or dword ptr [rbx + 0xf08ac7d], eax ; xchg eax, esp ; ret
0xffffff80007555eb : or dword ptr [rbx + 0xfd03911], ecx ; ret 0x189
0xffffff80003990c3 : or dword ptr [rbx + rcx*4 + 0x35], eax ; pop rcx ; ret
0xffffff80002aab4e : or dword ptr [rbx + rcx*4 + 5], eax ; ret 0x7fe0
0xffffff80007c75b5 : or dword ptr [rbx + rdi + 0x35], ecx ; ret
0xffffff80007bed63 : or dword ptr [rbx - 0x76b70053], ecx ; ret
0xffffff8000660c8f : or dword ptr [rbx - 0x7af0d605], eax ; ret 0
0xffffff8000660f31 : or dword ptr [rbx - 0x7af0d608], eax ; ret
0xffffff80003b5823 : or dword ptr [rbx - 0x7af0df05], eax ; ret
0xffffff8000559263 : or dword ptr [rbx - 0x7af0e108], eax ; ret 1
0xffffff80002ebd43 : or dword ptr [rbx], 0x39480074 ; ret
0xffffff80005bddfc : or dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000586763 : or dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075f533 : or dword ptr [rbx], edi ; ret
0xffffff800040c499 : or dword ptr [rcx + 0x29], eax ; rol byte ptr [rcx + rcx*4 + 0x47], 0x70 ; pop rbp ; ret
0xffffff80002fc803 : or dword ptr [rcx + 0x448d48c0], ecx ; ret
0xffffff800036dff8 : or dword ptr [rcx + 0x58], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002c235f : or dword ptr [rcx + 0x58], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008034f8 : or dword ptr [rcx + rax*8 + 0x18], 0x20 ; xor eax, eax ; pop rbp ; ret
0xffffff80008b2460 : or dword ptr [rcx + rax], 0 ; add byte ptr [rcx], bh ; ret 0x97f
0xffffff800028e043 : or dword ptr [rcx + rcx*4 - 0x11], ecx ; mov rsi, r15 ; call r14
0xffffff8000624c25 : or dword ptr [rcx + rcx*4 - 0x79], eax ; mov eax, 0x5d000000 ; ret
0xffffff8000541fdb : or dword ptr [rcx + rcx*4 - 9], ecx ; mov rsi, rbx ; call r15
0xffffff80007aadf5 : or dword ptr [rcx + rcx*4], eax ; ret
0xffffff800061503a : or dword ptr [rcx + rdi + 0x3d], eax ; ret 0x4c55
0xffffff80002d3c84 : or dword ptr [rcx - 0x3b7cb728], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800053b604 : or dword ptr [rcx - 0x75], eax ; jbe 0xffffff800053b629 ; mov rdi, rbx ; call rax
0xffffff800029c7f1 : or dword ptr [rcx - 0x75], eax ; jl 0xffffff800029c822 ; xor rsi, r14 ; call rax
0xffffff80005486cc : or dword ptr [rcx - 0xf423f3e], eax ; dec dword ptr [rax - 1] ; ret
0xffffff80003c60ad : or dword ptr [rcx - 1], ecx ; ret 0x8349
0xffffff8000517f9b : or dword ptr [rcx], 0x8948ffdc ; ret
0xffffff8000298931 : or dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff8000298932 : or dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80007ff049 : or dword ptr [rcx], ebp ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax], r10b ; pop rbp ; jmp rax
0xffffff80007ff089 : or dword ptr [rcx], ebp ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax], r11b ; pop rbp ; jmp rax
0xffffff80007ff109 : or dword ptr [rcx], ebp ; add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x5d], r8b ; jmp rax
0xffffff80007ff0c9 : or dword ptr [rcx], ebp ; add byte ptr [rcx - 0x75], cl ; add dword ptr [rax], r12d ; pop rbp ; jmp rax
0xffffff80008d9053 : or dword ptr [rcx], ebp ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800052deda : or dword ptr [rcx], ebp ; ret 0xb75
0xffffff80007b74b9 : or dword ptr [rcx], ecx ; ret 0x5589
0xffffff80007bcfa5 : or dword ptr [rcx], ecx ; ret 0x9589
0xffffff800080cd79 : or dword ptr [rcx], edi ; ret 0xb75
0xffffff800029995f : or dword ptr [rcx], edx ; xor eax, eax ; pop rbp ; ret
0xffffff800030d104 : or dword ptr [rcx], esi ; div byte ptr [rcx] ; shr al, cl ; ret 0xf975
0xffffff8000342364 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800029eb61 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0xffffff80008f3184 : or dword ptr [rdi + 0x2d0], esi ; pop rbp ; ret
0xffffff800072dbf1 : or dword ptr [rdi + 0x30], 0x280 ; pop rbp ; ret
0xffffff800072e164 : or dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff80004b3864 : or dword ptr [rdi + 0x38], 0x100000 ; pop rbp ; ret
0xffffff80004b3874 : or dword ptr [rdi + 0x38], 0x200000 ; pop rbp ; ret
0xffffff80004b3894 : or dword ptr [rdi + 0x38], 0x400 ; pop rbp ; ret
0xffffff80004b36d4 : or dword ptr [rdi + 0x38], 0x40000 ; pop rbp ; ret
0xffffff80004b3ab4 : or dword ptr [rdi + 0x38], 0x8000 ; pop rbp ; ret
0xffffff80004b3b6a : or dword ptr [rdi + 0x38], esi ; pop rbp ; ret
0xffffff80004b75e4 : or dword ptr [rdi + 0xd8], esi ; pop rbp ; ret
0xffffff8000288a4e : or dword ptr [rdi - 0x6af10000], eax ; ret 0xf685
0xffffff8000750375 : or dword ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff800062b91d : or dword ptr [rdi], 0x5d ; ret
0xffffff80002a812c : or dword ptr [rdi], ecx ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff80004ef35c : or dword ptr [rdi], ecx ; ret 0xc809
0xffffff80004a2be2 : or dword ptr [rdi], ecx ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003934b1 : or dword ptr [rdi], esi ; ret
0xffffff800076a633 : or dword ptr [rdx + 0x37], eax ; add al, ch ; add al, 0x84 ; ret 0x49ff
0xffffff80008ed722 : or dword ptr [rdx + 0x5dc031ff], eax ; ret
0xffffff8000460a75 : or dword ptr [rdx - 0xb7feb5], ecx ; ret
0xffffff80007a7473 : or dword ptr [rdx - 3], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a5f13 : or dword ptr [rdx], ebp ; ret
0xffffff8000614145 : or dword ptr [rdx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005376ae : or dword ptr [rdx], ebx ; call 0xffffff8000393049
0xffffff800078e8c7 : or dword ptr [rdx], edi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b49631 : or dword ptr [rdx], edx ; add byte ptr [rax + 0x21485000], al ; ret 0x148
0xffffff80002e2fd7 : or dword ptr [rdx], esi ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80007d24a3 : or dword ptr [rdx], esp ; add byte ptr ss:[rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007ab9ac : or dword ptr [rsi + 0x200], edi ; mov edi, ebx ; call rax
0xffffff800072d939 : or dword ptr [rsi + 0x30], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000396213 : or dword ptr [rsi + 0x44], esp ; mov dword ptr [rbx], esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000395232 : or dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff80006c7bdf : or dword ptr [rsi + rsi*8], eax ; ret
0xffffff80006714e9 : or dword ptr [rsi - 0x39], esp ; ret 0
0xffffff8000728d77 : or dword ptr gs:[rax], eax ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80006531ca : or eax, 0x10 ; pop rbp ; ret
0xffffff800061939d : or eax, 0x107d26b ; ret 0xeac1
0xffffff80007f8924 : or eax, 0x139b27 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80007ade2e : or eax, 0x1480033 ; ret
0xffffff80007c394e : or eax, 0x15474d ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000860efc : or eax, 0x158d4800 ; xchg eax, ebp ; ret
0xffffff80007af3fe : or eax, 0x168b1d ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80006536ba : or eax, 0x18 ; pop rbp ; ret
0xffffff8000485b6e : or eax, 0x184c8d48 ; add dword ptr [rax - 1], ecx ; ret
0xffffff8000793d2e : or eax, 0x19e70d ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800077bd8a : or eax, 0x1b66a1 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000653bea : or eax, 0x20 ; pop rbp ; ret
0xffffff800079db87 : or eax, 0x20000 ; mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff80008ed976 : or eax, 0x211939 ; mov dword ptr [rdi], ecx ; pop rbp ; ret
0xffffff8000909927 : or eax, 0x22df94 ; jmp 0xffffff80009098f6
0xffffff8000909847 : or eax, 0x22e074 ; jmp 0xffffff8000909816
0xffffff80007fcbdb : or eax, 0x291d60 ; jne 0xffffff80007fcbd8 ; pop rbp ; ret
0xffffff80008a3653 : or eax, 0x293830 ; pop rbp ; ret
0xffffff80008669a0 : or eax, 0x2cfe5b ; pop rbp ; jmp rax
0xffffff8000866980 : or eax, 0x2cfe7b ; pop rbp ; jmp rax
0xffffff8000605053 : or eax, 0x30d418 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80007f6240 : or eax, 0x33e5b3 ; pop rbp ; ret
0xffffff80005b216f : or eax, 0x36023c ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80002ba9f9 : or eax, 0x415bfffb ; pop rsi ; pop rbp ; ret
0xffffff8000572244 : or eax, 0x41eac0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000630286 : or eax, 0x440035 ; xor eax, eax ; pop rbp ; ret
0xffffff800062e616 : or eax, 0x441a95 ; xor eax, eax ; pop rbp ; ret
0xffffff800062e266 : or eax, 0x441dd5 ; xor eax, eax ; pop rbp ; ret
0xffffff80002ceb3d : or eax, 0x468948f0 ; adc byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff80003aa2ef : or eax, 0x48000000 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80004da8ff : or eax, 0x48000000 ; add esp, 0x30 ; pop rbp ; ret
0xffffff80002ceb3b : or eax, 0x48f00df0 ; mov dword ptr [rsi + 0x10], eax ; pop rbp ; ret
0xffffff800060b8cf : or eax, 0x4cec64 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004a768f : or eax, 0x4e0f0003 ; ret 0x589
0xffffff8000627586 : or eax, 0x4fc9cd ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff80003c41a1 : or eax, 0x4ff98149 ; ret
0xffffff80004f9f99 : or eax, 0x56a722 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000568537 : or eax, 0x570134 ; pop rbp ; ret
0xffffff800055b8a6 : or eax, 0x57ccc1 ; pop rbp ; ret
0xffffff800055b156 : or eax, 0x57d40d ; pop rbp ; ret
0xffffff800055ac26 : or eax, 0x57d92d ; pop rbp ; ret
0xffffff8000528e62 : or eax, 0x5af125 ; pop rbp ; ret
0xffffff8000766f79 : or eax, 0x5b000000 ; pop r14 ; pop rbp ; ret
0xffffff8000848404 : or eax, 0x5ba0000 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80002bb913 : or eax, 0x5bc03100 ; pop r14 ; pop rbp ; ret
0xffffff80008cc397 : or eax, 0x5d0026b0 ; ret
0xffffff80008661a7 : or eax, 0x5d0027f4 ; ret
0xffffff80005590d7 : or eax, 0x5d0050fb ; jmp rax
0xffffff800055b157 : or eax, 0x5d0057d4 ; ret
0xffffff800039a607 : or eax, 0x5d007373 ; ret
0xffffff80004fa219 : or eax, 0x5d01e083 ; ret
0xffffff80005fb8f6 : or eax, 0x5d0d4788 ; ret
0xffffff80005c2ae8 : or eax, 0x5d5e415b ; ret
0xffffff80004a3259 : or eax, 0x6326aa ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d3be7 : or eax, 0x6461c4 ; pop rbp ; ret
0xffffff80004d3c6b : or eax, 0x646220 ; pop rbp ; ret
0xffffff80004d3c42 : or eax, 0x646239 ; pop rbp ; ret
0xffffff80004d3c1f : or eax, 0x646264 ; pop rbp ; ret
0xffffff80002b9a80 : or eax, 0x6511cb ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80002b111e : or eax, 0x68126d ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800041ecac : or eax, 0x6b60af ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff8000274591 : or eax, 0x6bdbda ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000448ab9 : or eax, 0x6cb582 ; pop rbp ; ret
0xffffff800036d040 : or eax, 0x6e427f ; pop rbp ; ret
0xffffff80003b5cf8 : or eax, 0x731ffb ; pop rbp ; ret
0xffffff80003a6f12 : or eax, 0x7583b9 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80003a6f35 : or eax, 0x758496 ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000394fe5 : or eax, 0x769f4a ; pop rbp ; ret
0xffffff80003934f9 : or eax, 0x76b9d2 ; mov cr3, rcx ; pop rbp ; ret
0xffffff80005933d6 : or eax, 0x7701f883 ; sub byte ptr [rax - 1], cl ; ret
0xffffff80003a3db6 : or eax, 0x78bed5 ; mov dword ptr [rax + 0x44], ecx ; pop rbp ; ret
0xffffff80003a6a64 : or eax, 0x790d1f ; pop rbp ; ret
0xffffff80003a6924 : or eax, 0x790e5f ; pop rbp ; ret
0xffffff80008598b4 : or eax, 0x7985e800 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025325f : or eax, 0x7d8c08 ; pop rbp ; ret
0xffffff80002fa86d : or eax, 0x7f9452 ; pop rbx ; pop rbp ; ret
0xffffff80002e97ba : or eax, 0x804c09 ; xor eax, eax ; pop rbp ; ret
0xffffff80002a014f : or eax, 0x81058b48 ; ret
0xffffff80002b02a2 : or eax, 0x83d229 ; pop rbp ; ret
0xffffff80004363ef : or eax, 0x89000006 ; ret
0xffffff8000433e7f : or eax, 0x890001a8 ; ret
0xffffff8000421d6f : or eax, 0x890004b8 ; ret
0xffffff800041429f : or eax, 0x89003818 ; ret
0xffffff8000256b08 : or eax, 0x890c93 ; pop rbp ; ret
0xffffff80004c1c64 : or eax, 0x89440000 ; ret 0xead1
0xffffff80005e81a0 : or eax, 0x89480000 ; ret
0xffffff80002c2ed9 : or eax, 0x89480001 ; ret
0xffffff8000623cd5 : or eax, 0x89480019 ; ret
0xffffff80007a99b7 : or eax, 0x89481975 ; ret 0x8348
0xffffff8000780ea5 : or eax, 0x8948fffd ; ret
0xffffff800068cc04 : or eax, 0x8948fffe ; ret 0x894c
0xffffff8000764583 : or eax, 0x894c0000 ; out dx, eax ; call 0xffffff8000392a49
0xffffff80002a688a : or eax, 0x894c0000 ; ret
0xffffff8000287822 : or eax, 0x894c0011 ; jmp 0xffffff8000287879
0xffffff80003ae52f : or eax, 0x89fff5f9 ; ret
0xffffff80006b326f : or eax, 0x89fffa5d ; ret
0xffffff800047a9ff : or eax, 0x89fffc96 ; ret
0xffffff80002a44cf : or eax, 0x89fffff4 ; ret
0xffffff8000793d2f : or eax, 0x8b0019e7 ; add al, 0x81 ; pop rbp ; ret
0xffffff800061c557 : or eax, 0x8c3940f ; ret
0xffffff80005bd451 : or eax, 0xc031ffcd ; pop rbp ; ret
0xffffff8000526dcf : or eax, 0xc031ffd7 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002baa4a : or eax, 0xc031fffb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000737c9d : or eax, 0xc1b70fa8 ; pop rbp ; ret
0xffffff8000799c35 : or eax, 0xd231ff31 ; mov rsi, qword ptr [rbp - 0x68] ; call rcx
0xffffff8000754e87 : or eax, 0xe8003899 ; mov al, 0xdb ; ret
0xffffff800075e6b8 : or eax, 0xe8df8948 ; jg 0xffffff800075e70f ; ret
0xffffff80007602e0 : or eax, 0xe8df8948 ; mul dword ptr [rax] ; ret
0xffffff800075e8d8 : or eax, 0xe8df8948 ; pop rdi ; ret
0xffffff800075e988 : or eax, 0xe8df8948 ; scasd eax, dword ptr [rdi] ; ret
0xffffff800075eedf : or eax, 0xe8f7894c ; pop rax ; ret
0xffffff800075ecf4 : or eax, 0xe8f7894c ; ret
0xffffff80007b87c4 : or eax, 0xe8f7894c ; xchg eax, ebx ; ret 0xffff
0xffffff80003b653f : or eax, 0xe9ffed7c ; ret 0xfffe
0xffffff800046f04c : or eax, 0xeb020b80 ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80003cb321 : or eax, 0xebc38948 ; or byte ptr [rax - 0x77], cl ; ret
0xffffff800070ad87 : or eax, 0xf000000 ; ret
0xffffff800070ad96 : or eax, 0xf000000 ; ret 0x8348
0xffffff80002b4e12 : or eax, 0xf0894400 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800071c419 : or eax, 0xf6000000 ; ret 0xf20
0xffffff800066cf1f : or eax, 0xf6000001 ; ret 0x7402
0xffffff8000787972 : or eax, 0xf608e083 ; ret 0xb908
0xffffff8000307d61 : or eax, 0xf708e083 ; ret
0xffffff80005900d1 : or eax, 0xfc73944 ; xchg eax, esi ; ret 0xf739
0xffffff80008f6b0d : or eax, 0xff480024 ; ret
0xffffff80008761d5 : or eax, 0xffd08930 ; ret 0x394c
0xffffff800038b580 : or eax, 0xffd80acb ; xchg rsi, rdi ; call rsi
0xffffff8000b3b7ae : or eax, 0xffffc135 ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff8000b3a4c8 : or eax, 0xffffd41b ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff8000b3a038 : or eax, 0xffffd8ab ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff80008b6a59 : or eax, 1 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008e1a23 : or eax, 4 ; mov dword ptr [r8], eax ; pop rbp ; ret
0xffffff800028a91d : or eax, 4 ; pop rbp ; ret
0xffffff8000391338 : or eax, 8 ; mov cr0, rax ; pop rbp ; ret
0xffffff800032cb31 : or eax, dword ptr [rax - 0x7eb7fffb] ; ret
0xffffff800026cc51 : or eax, dword ptr [rax] ; add al, ch ; not dword ptr [rdx + rax] ; add cl, ch ; ret
0xffffff800085790c : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e9e65 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff800053c327 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80002859b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004bc6f1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80003a84b0 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80003c41ac : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff800084548c : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005d3fd5 : or eax, dword ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008680a6 : or eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff80002db20e : or eax, dword ptr [rax] ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002dbe0c : or eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006cbd1f : or eax, dword ptr [rbp + 0x31] ; dec dword ptr [rcx - 0x77] ; fsub st(1), st(0) ; ret 0xb
0xffffff80007f8c22 : or eax, dword ptr [rbp - 0x18] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007f8ab6 : or eax, dword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80005fce70 : or eax, dword ptr [rbx - 0x7cb7013f] ; ret 0x8408
0xffffff80008810d1 : or eax, dword ptr [rcx + 0xf7ffe2] ; add byte ptr [rcx], cl ; ret 0x8966
0xffffff80003d97e8 : or eax, dword ptr [rcx - 0x50] ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003e5116 : or eax, dword ptr [rcx - 0x50] ; add dword ptr [rcx - 0x77], eax ; ret 0xaee9
0xffffff8000845414 : or eax, dword ptr [rcx - 0x77] ; ret
0xffffff80005d749c : or eax, dword ptr [rcx] ; ret
0xffffff8000744731 : or eax, dword ptr [rdi + 3] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000448a8b : or eax, dword ptr [rdx + rcx*4] ; pop rbp ; ret
0xffffff800066149d : or eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800046f04e : or eax, dword ptr [rdx] ; jmp 0xffffff800046f060
0xffffff80004191f5 : or eax, dword ptr [rip + 0x100] ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff8000419227
0xffffff800041b0bb : or eax, dword ptr [rip + 0x100] ; sub eax, ecx ; mov edx, eax ; jmp 0xffffff800041b0ed
0xffffff8000448a98 : or eax, dword ptr [rip + 0x61bc22] ; pop rbp ; ret
0xffffff8000448a90 : or eax, dword ptr [rip + 0x61bc3a] ; pop rbp ; ret
0xffffff8000668a36 : or eax, dword ptr [rip - 0x3fcf0000] ; call 0xffffff800028e4a9
0xffffff80007c4921 : or eax, dword ptr [rsi - 0x76b70005] ; ret
0xffffff8000367159 : or eax, eax ; pop rbp ; ret
0xffffff800039962c : or eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000651ea1 : or eax, ebx ; ret
0xffffff8000367154 : or eax, ecx ; or eax, esi ; or eax, r8d ; pop rbp ; ret
0xffffff8000262b16 : or eax, ecx ; pop rbp ; ret
0xffffff80002bbecd : or eax, ecx ; xor eax, 1 ; pop rbp ; ret
0xffffff800039944f : or eax, edi ; pop rbp ; ret
0xffffff8000584f19 : or eax, edx ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80003baf52 : or eax, edx ; mov qword ptr [rdi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7477 : or eax, edx ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80003a8342 : or eax, edx ; pop rbp ; ret
0xffffff800039a6bd : or eax, edx ; ret
0xffffff8000895d6a : or eax, esi ; mov dword ptr [rdi + 0x20], eax ; pop rbp ; ret
0xffffff8000377080 : or eax, esi ; mov qword ptr [rcx + rdx + 8], rax ; pop rbp ; ret
0xffffff8000367156 : or eax, esi ; or eax, r8d ; pop rbp ; ret
0xffffff800052032b : or eax, esi ; pop rbp ; ret
0xffffff80007aaa2a : or eax, esi ; pop rbx ; pop rbp ; ret
0xffffff8000367158 : or eax, r8d ; pop rbp ; ret
0xffffff8000810a61 : or ebp, dword ptr [rsi - 0x58] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800054bd99 : or ebx, 0xffffffd8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e7151 : or ebx, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ecd2a : or ebx, dword ptr [rax] ; fisttp dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff800047c52f : or ebx, dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800085a9f1 : or ebx, dword ptr [rbx - 0x76b70005] ; ret
0xffffff80005f404f : or ebx, dword ptr [rip + 0x478b4100] ; and byte ptr [rax - 1], cl ; ret
0xffffff80005dd824 : or ebx, ecx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002e55db : or ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d9b91 : or ebx, esp ; dec dword ptr [rax + 1] ; ret
0xffffff8000567c7b : or ecx, dword ptr [rax + 0x21] ; ret 0x49f0
0xffffff80002fac8d : or ecx, dword ptr [rax + 0x69] ; ret
0xffffff80002b701b : or ecx, dword ptr [rax + 0x69] ; ret 0xca00
0xffffff80004e9f01 : or ecx, dword ptr [rax + 0x74c9840a] ; and dword ptr [rax - 1], ecx ; ret
0xffffff800083916a : or ecx, dword ptr [rax + 1] ; ret
0xffffff80002d66a3 : or ecx, dword ptr [rax - 0x75] ; jge 0xffffff80002d6647 ; call 0xffffff8000392937
0xffffff800076b398 : or ecx, dword ptr [rax - 0x75] ; js 0xffffff800076b3b5 ; call 0xffffff8000392a48
0xffffff800039eee0 : or ecx, dword ptr [rax - 0x77] ; adc ecx, dword ptr [rax + 0x69] ; ret 0xca00
0xffffff80007b2799 : or ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff80007f62d4 : or ecx, dword ptr [rax - 0x77] ; push rbp ; ror byte ptr [rax + 0x69], 1 ; ret 0xca00
0xffffff80003cfbba : or ecx, dword ptr [rax - 0x77] ; ret
0xffffff80004854dc : or ecx, dword ptr [rax - 0x77] ; ret 0xc148
0xffffff80003c89d7 : or ecx, dword ptr [rax - 0x7d] ; call qword ptr [rax]
0xffffff8000353985 : or ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80002dc1d8 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4804
0xffffff80002fb341 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4878
0xffffff800029e804 : or ecx, dword ptr [rax - 1] ; ret
0xffffff80005f8840 : or ecx, dword ptr [rax - 1] ; ret 0x6348
0xffffff800052e244 : or ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff8000520baf : or ecx, dword ptr [rax - 1] ; ret 0xf631
0xffffff8000452af7 : or ecx, dword ptr [rax - 1] ; ret 0xff49
0xffffff8000326bed : or ecx, dword ptr [rbp + rcx*4 + 0x2d] ; ret
0xffffff80002fd1d8 : or ecx, dword ptr [rbx + 0x29485041] ; ret
0xffffff8000294a0d : or ecx, dword ptr [rbx + 0x33093] ; add dh, dh ; ret 0x7540
0xffffff80003c1c9c : or ecx, dword ptr [rbx + 0x74331515] ; add byte ptr [rcx], ch ; ret 0xaf0f
0xffffff800039ef84 : or ecx, dword ptr [rcx + 0x69] ; ret 0xca00
0xffffff80007a5baa : or ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov r15, rdx ; call rax
0xffffff80008f501f : or ecx, dword ptr [rcx + rcx*4 - 1] ; call rcx
0xffffff80008f265f : or ecx, dword ptr [rcx + rcx*4 - 9] ; call rcx
0xffffff800054fdbb : or ecx, dword ptr [rcx - 0x73] ; cmp al, 0xce ; mov esi, dword ptr [rbx + 0x68] ; call rax
0xffffff80005cd7ce : or ecx, dword ptr [rcx - 0x77] ; push rdi ; xor byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80005cdc60 : or ecx, dword ptr [rcx - 0x77] ; push rsi ; xor byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff800072da64 : or ecx, dword ptr [rcx - 0x7d] ; ret
0xffffff800080840e : or ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfe83
0xffffff80007cde71 : or ecx, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000327559 : or ecx, eax ; mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff80005be889 : or ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; pop rbp ; ret
0xffffff80005b1179 : or ecx, eax ; mov qword ptr [rdi + 0x28], rcx ; pop rbp ; ret
0xffffff80005815b9 : or ecx, eax ; mov qword ptr [rdi + 0x40], rcx ; pop rbp ; ret
0xffffff80005eaf29 : or ecx, eax ; mov qword ptr [rdi + 0x68], rcx ; pop rbp ; ret
0xffffff800057f229 : or ecx, eax ; mov qword ptr [rdi + 0x78], rcx ; pop rbp ; ret
0xffffff800081ed35 : or ecx, eax ; mov word ptr [rdi + 0x70], cx ; pop rbp ; ret
0xffffff8000631f41 : or ecx, eax ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000709ce3 : or ecx, ebp ; ret
0xffffff8000709be4 : or ecx, ebp ; ret 1
0xffffff800062310b : or ecx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080dfd2 : or ecx, edi ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfd9 ; pop rbp ; ret
0xffffff8000342778 : or ecx, edx ; mov word ptr [rdi + rax*8 + 4], cx ; pop rbp ; ret
0xffffff80003f9629 : or edi, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006572e1 : or edi, dword ptr [rcx] ; xor eax, 0xe8c03100 ; mov ah, 0x71 ; ret
0xffffff80003a8019 : or edi, dword ptr [rdi + 0x37] ; pop rbp ; jmp rax
0xffffff80002ce376 : or edi, dword ptr [rdi] ; mov rsi, rbx ; call rax
0xffffff800075f224 : or edi, dword ptr [rip - 0x6a5b1800] ; ret
0xffffff80002da87a : or edi, dword ptr [rsi + 0x358d4800] ; ret
0xffffff80005455e4 : or edi, eax ; mov dword ptr [rdx], edi ; xor eax, eax ; pop rbp ; ret
0xffffff80003d3d52 : or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff80006a44a1 : or edi, eax ; ret 0x48ff
0xffffff8000783cb3 : or edi, ebx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ad588 : or edi, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fef5e : or edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff8000795412 : or edi, ecx ; mov rax, rdi ; pop rbp ; ret
0xffffff80005455e2 : or edi, ecx ; or edi, eax ; mov dword ptr [rdx], edi ; xor eax, eax ; pop rbp ; ret
0xffffff8000825e02 : or edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000682ffb : or edi, edi ; ret
0xffffff80005397c9 : or edi, edi ; ret 0x8348
0xffffff800025c91e : or edi, edi ; ret 0xd089
0xffffff800084e1e5 : or edi, edi ; rol dword ptr [rcx + rdi - 0x27], 0x72 ; ret
0xffffff800025c20b : or edi, edi ; ror dword ptr [rcx + 0x1d8d48ca], 0x59 ; ret
0xffffff800025a1f1 : or edi, edi ; sar byte ptr [rax + 1], 1 ; pop rbp ; ret
0xffffff80003f24af : or edi, edx ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80005e2c34 : or edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049e4a7 : or edi, esi ; mov eax, edi ; pop rbp ; ret
0xffffff8000725a69 : or edi, esi ; rol dword ptr [rax], 0 ; add byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff80008d59cf : or edx, dword ptr [rip + 0x7894800] ; pop rbp ; ret
0xffffff8000726862 : or edx, eax ; bsr rax, rdx ; jmp 0xffffff8000726890
0xffffff8000726bb2 : or edx, eax ; bsr rax, rdx ; jmp 0xffffff8000726be6
0xffffff80007e7ea9 : or edx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000321e95 : or edx, ecx ; mov dword ptr [rax + 0x48], edx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a6aea : or edx, edi ; xor eax, eax ; cmp ecx, 0 ; cmove eax, edx ; jmp 0xffffff80002a6b06
0xffffff80008da38f : or edx, esi ; mov esi, dword ptr [r12 + 0x3c] ; call rax
0xffffff80008e567d : or edx, esi ; mov esi, dword ptr [rdi + 0x3c] ; mov rdi, rax ; pop rbp ; jmp rcx
0xffffff8000377042 : or edx, esi ; mov qword ptr [rdi + 8], rdx ; pop rbp ; ret
0xffffff8000390737 : or esi, dword ptr [rax + rax + 0x5d] ; ret
0xffffff800080f462 : or esi, dword ptr [rbp + 2] ; pop rbp ; ret
0xffffff8000437876 : or esi, dword ptr [rbp + 7] ; mov eax, 1 ; pop rbp ; ret
0xffffff80007b2fa3 : or esi, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x32e8
0xffffff80004f9fbe : or esi, dword ptr [rcx + rax*4] ; mov eax, esi ; pop rbp ; ret
0xffffff800076f931 : or esi, dword ptr [rcx] ; ret 0x41ff
0xffffff800066b0a1 : or esi, dword ptr [rcx] ; ret 0x48ff
0xffffff80004dabb6 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80003e7c31 : or esi, dword ptr [rdx + rdi*8 + 0x7b8b48ff] ; xor al, ch ; ret 0xfffa
0xffffff80008f0120 : or esi, dword ptr [rdx + rdx*2 - 0x7d] ; call qword ptr [rsi]
0xffffff8000b47949 : or esi, dword ptr [rsi] ; mov bh, 0xfa ; jmp rdi
0xffffff8000390736 : or esi, dword ptr cs:[rax + rax + 0x5d] ; ret
0xffffff80003a8503 : or esi, eax ; mov edi, 0x34 ; pop rbp ; jmp rcx
0xffffff80006603a3 : or esi, ebx ; ret 0x66ff
0xffffff8000813dd3 : or esi, ecx ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff8000520326 : or esi, ecx ; movzx eax, byte ptr [rdx] ; or eax, esi ; pop rbp ; ret
0xffffff80007d4130 : or esi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002cc4e7 : or esi, esi ; ret
0xffffff8000275c19 : or esi, esi ; ret 0x7401
0xffffff800053ae82 : or esi, esi ; ret 0x7502
0xffffff80008d08ac : or esi, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d08ab : or esi, r12d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3ae31 : or esp, dword ptr [rbp - 0x76b70033] ; ret
0xffffff8000662a1f : or esp, dword ptr [rdi - 0x3fceffcc] ; call 0xffffff800028e1b9
0xffffff80004f66eb : or esp, dword ptr [rsi - 0x75] ; sbb byte ptr [r14 - 0x77], spl ; ret 0xc166
0xffffff8000668eac : or esp, dword ptr [rsi - 0x77] ; ret 0xc166
0xffffff80004d7e09 : or esp, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000651da3 : or esp, eax ; ret
0xffffff8000517f9c : or esp, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763cd1 : or esp, edi ; ret 0x31ff
0xffffff8000764831 : or esp, edx ; ret 0x48ff
0xffffff800028ef42 : or esp, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800072d938 : or qword ptr [r14 + 0x30], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007aadf4 : or qword ptr [r9 + rcx*4], rax ; ret
0xffffff80008be617 : or qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret 0xc7b8
0xffffff800072db68 : or qword ptr [rbx + 0x30], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072dbf0 : or qword ptr [rdi + 0x30], 0x280 ; pop rbp ; ret
0xffffff800072e163 : or qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff800075884a : or r14b, al ; add al, 1 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff80003a0f19 : or r15b, al ; pop rbp ; ret
0xffffff800069cf80 : or r15b, bpl ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800071ac4f : or r15b, byte ptr [rcx] ; enter 0x773, -1 ; ret
0xffffff8000287d31 : or r15b, dil ; ret 0x3949
0xffffff800037162f : or r15b, r8b ; adc r8b, r14b ; loope 0xffffff8000371611 ; ret
0xffffff80008ad587 : or r15d, r11d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b43b6d : or r9b, byte ptr [r13 - 0x1b47d850] ; ret
0xffffff8000b496b2 : or r9b, byte ptr [rax + 1] ; ret 0x294c
0xffffff80008b6a58 : or rax, 1 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000391337 : or rax, 8 ; mov cr0, rax ; pop rbp ; ret
0xffffff80007f8ab5 : or rax, qword ptr [rbp - 8] ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800039962b : or rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000262b15 : or rax, rcx ; pop rbp ; ret
0xffffff800039944e : or rax, rdi ; pop rbp ; ret
0xffffff80003baf51 : or rax, rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80003b7476 : or rax, rdx ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80003a8341 : or rax, rdx ; pop rbp ; ret
0xffffff800039a6bc : or rax, rdx ; ret
0xffffff800037707f : or rax, rsi ; mov qword ptr [rcx + rdx + 8], rax ; pop rbp ; ret
0xffffff8000327558 : or rcx, rax ; mov qword ptr [rdi + 0x10], rcx ; pop rbp ; ret
0xffffff80005be888 : or rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbp ; ret
0xffffff80005b1178 : or rcx, rax ; mov qword ptr [rdi + 0x28], rcx ; pop rbp ; ret
0xffffff80005815b8 : or rcx, rax ; mov qword ptr [rdi + 0x40], rcx ; pop rbp ; ret
0xffffff80005eaf28 : or rcx, rax ; mov qword ptr [rdi + 0x68], rcx ; pop rbp ; ret
0xffffff800057f228 : or rcx, rax ; mov qword ptr [rdi + 0x78], rcx ; pop rbp ; ret
0xffffff8000795411 : or rdi, rcx ; mov rax, rdi ; pop rbp ; ret
0xffffff8000726861 : or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726891
0xffffff8000726bb1 : or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726be7
0xffffff8000377041 : or rdx, rsi ; mov qword ptr [rdi + 8], rdx ; pop rbp ; ret
0xffffff800050fcf5 : or sil, cl ; mov dl, sil ; movzx eax, dl ; pop rbp ; ret
0xffffff80008d2a78 : or sil, r15b ; add byte ptr [rax - 0x77], cl ; clc ; pop rbp ; ret
0xffffff80006c674e : or sil, sil ; rol dword ptr [rdx], 0xf ; ret 0x508d
0xffffff80008034f7 : or word ptr [rcx + rax*8 + 0x18], 0x20 ; xor eax, eax ; pop rbp ; ret
0xffffff80008a0084 : out 0, al ; add byte ptr [rax], al ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff80004be2d5 : out 0, al ; add byte ptr [rcx], al ; add byte ptr [rcx], cl ; ret 0xd609
0xffffff8000615330 : out 0, eax ; add byte ptr [rax], al ; and byte ptr [rax - 0x77], cl ; ret
0xffffff8000b3edcb : out 0, eax ; add byte ptr [rax], al ; mov bl, 0x89 ; ret
0xffffff8000b45406 : out 0, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x214c
0xffffff80003d3d50 : out 0x10, eax ; or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff8000369955 : out 0x12, eax ; add cl, ch ; ret 0xfffe
0xffffff800063bb1a : out 0x13, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000666395 : out 0x14, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007b3c7e : out 0x15, al ; add byte ptr [rax + 1], cl ; ret
0xffffff800088776e : out 0x16, eax ; add bh, bh ; ret
0xffffff80005fbb60 : out 0x17, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003a8d6b : out 0x18, al ; mov edi, 0xd ; call rax
0xffffff800049e4a5 : out 0x18, eax ; or edi, esi ; mov eax, edi ; pop rbp ; ret
0xffffff80007972e6 : out 0x1f, eax ; mov dword ptr [rsi], edi ; xor eax, eax ; pop rbp ; ret
0xffffff80008e6a2e : out 0x24, eax ; add byte ptr [rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e8f9e : out 0x24, eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800089664e : out 0x25, al ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008d6a7e : out 0x25, eax ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061c186 : out 0x28, eax ; ret 0x9388
0xffffff8000888c76 : out 0x2c, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800088231e : out 0x2c, al ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000838ffb : out 0x30, eax ; ret 0x3b88
0xffffff80007aa305 : out 0x33, al ; idiv edi ; push rdi ; ret 0
0xffffff8000674656 : out 0x34, al ; ret 0xe9ff
0xffffff80002f83f5 : out 0x38, eax ; cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000761629 : out 0x3c, eax ; add al, ch ; scasd eax, dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; ret
0xffffff800065a6b6 : out 0x3d, al ; ret
0xffffff800076ea46 : out 0x3e, al ; ret 0xffff
0xffffff8000257e1d : out 0x3f, al ; lea rax, [rcx + rsi*8] ; pop rbp ; ret
0xffffff800029e3f5 : out 0x41, al ; call rdi
0xffffff80002c8faa : out 0x41, al ; call rsi
0xffffff8000625404 : out 0x41, eax ; call rsi
0xffffff800075ee55 : out 0x41, eax ; ret
0xffffff8000900486 : out 0x44, al ; mov ecx, esi ; call r8
0xffffff80008f68bd : out 0x44, al ; mov ecx, esi ; call rax
0xffffff80008f7196 : out 0x44, al ; mov ecx, esi ; call rbx
0xffffff800065ecae : out 0x44, al ; mov edx, ebp ; call 0xffffff800028e1b7
0xffffff800088f7a0 : out 0x44, al ; mov edx, edi ; call rbx
0xffffff80009097e5 : out 0x44, al ; mov edx, edi ; mov rcx, r14 ; call rax
0xffffff800090a536 : out 0x44, eax ; mov esi, ebp ; call rcx
0xffffff800090a2fa : out 0x44, eax ; mov esi, edi ; call rcx
0xffffff8000420b5a : out 0x44, eax ; mov esi, esi ; call 0xffffff80004ccdd6
0xffffff80004239f9 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008f7605 : out 0x48, al ; mov ecx, dword ptr [rbp - 0x30] ; call rbx
0xffffff80007d865f : out 0x48, al ; mov ecx, dword ptr [rbp - 0x60] ; call rax
0xffffff8000558b55 : out 0x48, al ; mov edx, dword ptr [rbp - 0x30] ; call r14
0xffffff8000529d1a : out 0x48, al ; mov edx, dword ptr [rbp - 0x30] ; call rbx
0xffffff8000908c5d : out 0x48, al ; mov edx, dword ptr [rbp - 0x38] ; mov ecx, dword ptr [rbp - 0x2c] ; call rbx
0xffffff800067c6d4 : out 0x48, al ; mov edx, dword ptr [rbp - 0x430] ; call rcx
0xffffff800039802a : out 0x48, al ; mov edx, eax ; call r14
0xffffff80008aa438 : out 0x48, al ; mov edx, eax ; call r15
0xffffff80003f18dd : out 0x48, al ; mov edx, ebx ; mov r8d, dword ptr [rbp - 0x30] ; call rax
0xffffff80008000e5 : out 0x48, al ; mov edx, ebx ; mov rax, qword ptr [rbp - 0x38] ; call qword ptr [rax]
0xffffff800039a6cb : out 0x48, al ; shrd eax, edx, 0x20 ; ret
0xffffff8000606a0e : out 0x48, eax ; lea ecx, [rbp - 0x200] ; call rax
0xffffff80003a9424 : out 0x48, eax ; lea edx, [rbp - 0xd8] ; call r15
0xffffff80004e4605 : out 0x48, eax ; mov edx, dword ptr [rbp + 0x28] ; call rax
0xffffff80006395de : out 0x48, eax ; mov edx, dword ptr [rbp - 0x110] ; call rax
0xffffff80005dca14 : out 0x48, eax ; mov edx, ebx ; call rax
0xffffff80007b8727 : out 0x48, eax ; mov edx, ebx ; mov qword ptr [rbp - 0x48], rcx ; call rcx
0xffffff8000618648 : out 0x48, eax ; mov esi, dword ptr [rbp - 0x300] ; call rax
0xffffff8000533139 : out 0x48, eax ; mov esi, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x30] ; call rcx
0xffffff80008876dc : out 0x48, eax ; mov esi, eax ; call rbx
0xffffff8000543b6b : out 0x48, eax ; mov esi, ebx ; call r14
0xffffff8000288303 : out 0x48, eax ; mov esi, ebx ; call rcx
0xffffff800063c2c5 : out 0x49, al ; add al, ch ; ret
0xffffff80007a5bad : out 0x49, eax ; mov edi, edx ; call rax
0xffffff800060be53 : out 0x4c, al ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff80008fa879 : out 0x4c, al ; mov ecx, ebp ; mov r9, qword ptr [rbp - 0x38] ; call r10
0xffffff80008fa42d : out 0x4c, al ; mov ecx, ebp ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008fe580 : out 0x4c, al ; mov ecx, esi ; call r8
0xffffff8000901acd : out 0x4c, al ; mov ecx, esi ; call r9
0xffffff80008f5974 : out 0x4c, al ; mov ecx, esi ; call rax
0xffffff80008f7f5d : out 0x4c, al ; mov ecx, esi ; call rbx
0xffffff80007eaf34 : out 0x4c, al ; mov edi, edi ; mov rsi, r13 ; call rbx
0xffffff80007b3cc6 : out 0x4c, al ; mov edx, edi ; call rax
0xffffff80008ee4fd : out 0x4c, al ; mov edx, edi ; call rcx
0xffffff80008fcd29 : out 0x4c, al ; mov edx, esi ; call r8
0xffffff80008fcc45 : out 0x4c, al ; mov edx, esi ; call rax
0xffffff8000558c34 : out 0x4c, al ; mov edx, esi ; call rbx
0xffffff80008ef044 : out 0x4c, al ; mov edx, esi ; call rcx
0xffffff80003a040b : out 0x4c, al ; mov edx, esi ; mov rbx, r8 ; call rax
0xffffff80007eaeba : out 0x4c, al ; mov esi, esi ; call rbx
0xffffff80006b26c8 : out 0x4c, eax ; mov ebx, esp ; mov rdx, r15 ; call rax
0xffffff80008f7aac : out 0x4c, eax ; mov ecx, ebp ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff800064ab6a : out 0x4c, eax ; mov edx, ebp ; call rax
0xffffff80007c569d : out 0x4c, eax ; mov edx, ebp ; call rcx
0xffffff8000621aad : out 0x4c, eax ; mov edx, edi ; call rax
0xffffff80008f5ac2 : out 0x4c, eax ; mov edx, edi ; mov r8, r14 ; call rax
0xffffff80005398b7 : out 0x4c, eax ; mov edx, esi ; call rax
0xffffff80007aafb2 : out 0x4c, eax ; mov esi, ebp ; call rax
0xffffff80008fcb19 : out 0x4c, eax ; mov esi, ebp ; mov rcx, r15 ; call rax
0xffffff800028d7c9 : out 0x4c, eax ; mov esi, edi ; call r14
0xffffff80007cadfc : out 0x4c, eax ; mov esi, edi ; call rax
0xffffff80007a73a5 : out 0x4c, eax ; mov esi, edi ; call rcx
0xffffff80008ee15a : out 0x4c, eax ; mov esi, edi ; mov edx, r14d ; call rcx
0xffffff800049d1d2 : out 0x4c, eax ; mov esi, edi ; mov rdx, r14 ; call qword ptr [rbx]
0xffffff8000906e3a : out 0x4c, eax ; mov esi, edi ; mov rdx, r14 ; call rcx
0xffffff8000539915 : out 0x4c, eax ; mov esi, esi ; call rax
0xffffff80007eaed3 : out 0x4c, eax ; mov esi, esi ; call rbx
0xffffff80008aa435 : out 0x4c, eax ; mov esi, esp ; mov rdx, rax ; call r15
0xffffff80005fb867 : out 0x4d, al ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff800046af4b : out 0x58, al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x137d
0xffffff80002a6b9c : out 0x5b, al ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000866f98 : out 0x5b, eax ; pop r14 ; pop rbp ; ret
0xffffff80002908e9 : out 0x5d, al ; ret
0xffffff8000340f58 : out 0x5d, eax ; ret
0xffffff8000534559 : out 0x5e, eax ; add byte ptr [rcx + rcx*4 - 1], cl ; mov r9, r13 ; call rax
0xffffff8000b3eadd : out 0x5f, eax ; call rdi
0xffffff80006583b5 : out 0x60, eax ; ret
0xffffff80006579b6 : out 0x6a, al ; ret
0xffffff80007fb0d5 : out 0x6a, eax ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000496aba : out 0x72, al ; ret
0xffffff80002721a1 : out 0x77, al ; add eax, dword ptr [rbx - 0x7cb70340] ; ret 0x4810
0xffffff800075b056 : out 0x7f, al ; ret
0xffffff800088e91d : out 0x82, eax ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800075a546 : out 0x83, al ; ret
0xffffff800059b4a2 : out 0x85, eax ; ror byte ptr [rdi], 0x84 ; ret
0xffffff800075a756 : out 0x88, al ; ret
0xffffff800049137f : out 0x88, eax ; fisubr dword ptr [rax] ; ret 0xca80
0xffffff800030cb8e : out 0x89, al ; ret 0x8948
0xffffff8000477941 : out 0x89, al ; ret 0x894c
0xffffff800072d622 : out 0x89, al ; ret 0xd6e8
0xffffff80002b5ac0 : out 0x89, eax ; fimul word ptr [rax - 0x77] ; ret 0xd5e8
0xffffff800036ffec : out 0x89, eax ; ret
0xffffff800025570c : out 0x89, eax ; ret 0x40b9
0xffffff800042ff75 : out 0x89, eax ; shr eax, cl ; ret
0xffffff800075a556 : out 0x8a, al ; ret
0xffffff80008f4e1d : out 0x8b, al ; push rbp ; enter 0x4d8b, -0x34 ; call rbx
0xffffff80002cf624 : out 0x8b, al ; push rbp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rcx, rbx ; call rax
0xffffff800083e190 : out 0x8b, al ; xchg eax, ebx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0xffffff80006357d7 : out 0x8b, eax ; jne 0xffffff800063578e ; mov edx, r15d ; call rax
0xffffff8000b44563 : out 0x98, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80004c87c6 : out 0x9e, eax ; add byte ptr [rcx], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80005f6165 : out 0xaf, eax ; sbb eax, 0x5dc03100 ; ret
0xffffff80006bbb7d : out 0xb, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004e2f55 : out 0xb1, eax ; ret 0xc7ff
0xffffff80002ef855 : out 0xb3, eax ; add r9b, r13b ; ret
0xffffff800076a22a : out 0xb6, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073a2ed : out 0xb9, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073a20d : out 0xb9, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000772665 : out 0xc1, eax ; mov dl, 0xff ; call 0xffffff8000399241
0xffffff800037d8e8 : out 0xc7, al ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rcx]
0xffffff8000751cae : out 0xca, al ; cmp byte ptr [rax], al ; pop rbp ; ret
0xffffff80006d48fc : out 0xcb, eax ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800075f5ba : out 0xd6, al ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; jnp 0xffffff800075f606 ; ret
0xffffff80005ec055 : out 0xda, al ; dec dword ptr [rax + 1] ; ret
0xffffff80004887e5 : out 0xdd, eax ; lock dec dword ptr [rax - 0x77] ; ret
0xffffff80007086a4 : out 0xe0, al ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007642f6 : out 0xe0, al ; ret 0x31ff
0xffffff80005348ae : out 0xe5, eax ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800081ca28 : out 0xe8, al ; adc cl, byte ptr [rcx - 0x76b70001] ; ret
0xffffff800062c075 : out 0xe8, al ; adc eax, 0x89fffc1b ; ret
0xffffff800085a7e0 : out 0xe8, al ; and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800080b43b : out 0xe8, al ; call qword ptr [rdx]
0xffffff800085a82e : out 0xe8, al ; cld ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065afc6 : out 0xe8, al ; in al, 0x31 ; ret
0xffffff800065414d : out 0xe8, al ; int 0x3f
0xffffff800055ec8c : out 0xe8, al ; ja 0xffffff800055ecbe ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a6972 : out 0xe8, al ; js 0xffffff80006a695f ; ret 0x4dff
0xffffff8000394377 : out 0xe8, al ; mov bl, 0x75 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000285ccd : out 0xe8, al ; mov ebp, 0x89ffff2d ; ret
0xffffff80004e60de : out 0xe8, al ; mov esp, 0x89002783 ; ret
0xffffff8000508c45 : out 0xe8, al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffdc
0xffffff800039905b : out 0xe8, al ; outsd dx, dword ptr [rsi] ; ret
0xffffff800065fc01 : out 0xe8, al ; rcl qword ptr [r11], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800027b1f7 : out 0xe8, al ; ret
0xffffff800052db5f : out 0xe8, al ; sbb eax, dword ptr [rip - 0x7eb70042] ; ret
0xffffff800065ec80 : out 0xe8, al ; sub dh, ch ; ret 0x31ff
0xffffff80004b929d : out 0xe8, al ; sub eax, 0x8900013b ; ret
0xffffff8000495cd7 : out 0xe8, al ; xchg eax, ebx ; test byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000654fd0 : out 0xe8, al ; xor qword ptr [rsi], rdx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000770e36 : out 0xe8, eax ; add al, 0x22 ; ret 0x65ff
0xffffff8000711095 : out 0xe8, eax ; add eax, 0x89fffba1 ; ret 0xd285
0xffffff80005667f6 : out 0xe8, eax ; and al, 0x21 ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d6708 : out 0xe8, eax ; and al, dl ; jmp 0xffffff80004d6710
0xffffff80008d3418 : out 0xe8, eax ; and bh, dl ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000409a95 : out 0xe8, eax ; and eax, 0x89000193 ; ret
0xffffff80006bbb47 : out 0xe8, eax ; and edi, dword ptr [rbp - 0x76b70043] ; ret
0xffffff80003082d0 : out 0xe8, eax ; cli ; ret
0xffffff800076f85c : out 0xe8, eax ; fidiv word ptr [rcx] ; ret 0x49ff
0xffffff8000826e5c : out 0xe8, eax ; fisub word ptr [rbx - 0x76b80000] ; ret
0xffffff80007128a9 : out 0xe8, eax ; int1 ; js 0xffffff80007128bc ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075b9b3 : out 0xe8, eax ; ja 0xffffff800075ba2a ; ret
0xffffff80007f5c9d : out 0xe8, eax ; je 0xffffff80007f5ca2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004b7ffb : out 0xe8, eax ; jmp qword ptr [rsi]
0xffffff80003ea958 : out 0xe8, eax ; loop 0xffffff80003ea8e9 ; cli ; push rsi ; ret
0xffffff8000660920 : out 0xe8, eax ; mov al, byte ptr [rsi + 5] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000763e43 : out 0xe8, eax ; mov bh, 0x68 ; ret
0xffffff80008d3f8c : out 0xe8, eax ; mov cs, word ptr [rcx - 0x76b70007] ; ret
0xffffff8000762cf1 : out 0xe8, eax ; mov dword ptr [rdi], eax ; ret
0xffffff80006ff181 : out 0xe8, eax ; mov ecx, 0x89fffd63 ; ret
0xffffff800072eddf : out 0xe8, eax ; mov ecx, dword ptr [rdx - 0x76b7004a] ; ret
0xffffff80007649b1 : out 0xe8, eax ; mov esi, esp ; ret 0xbaff
0xffffff8000693311 : out 0xe8, eax ; mov r8b, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082d936 : out 0xe8, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a44cd : out 0xe8, eax ; or eax, 0x89fffff4 ; ret
0xffffff800085a9ef : out 0xe8, eax ; or ebx, dword ptr [rbx - 0x76b70005] ; ret
0xffffff800076482f : out 0xe8, eax ; or esp, edx ; ret 0x48ff
0xffffff8000674c4c : out 0xe8, eax ; out dx, al ; ret 0x48ff
0xffffff8000878aeb : out 0xe8, eax ; out dx, eax ; mov esi, 0x8948ffff ; ret
0xffffff800075d4bb : out 0xe8, eax ; outsd dx, dword ptr [rsi] ; push rsp ; ret
0xffffff800071303d : out 0xe8, eax ; pop rbp ; jno 0xffffff8000713050 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800078af9d : out 0xe8, eax ; pop rbp ; ret 0xffc0
0xffffff8000775761 : out 0xe8, eax ; pop rcx ; ret 0xbeff
0xffffff80003fd0f4 : out 0xe8, eax ; pop rdi ; stc ; push rsi ; ret
0xffffff800075d1e9 : out 0xe8, eax ; push rcx ; pop rsi ; ret
0xffffff800075d1dc : out 0xe8, eax ; push rdi ; ret
0xffffff80003063a3 : out 0xe8, eax ; push rdi ; ret 8
0xffffff800029bc17 : out 0xe8, eax ; ret
0xffffff80006e3358 : out 0xe8, eax ; ret 0x1c3
0xffffff800037c048 : out 0xe8, eax ; ret 0x222
0xffffff80006fe8b8 : out 0xe8, eax ; ret 0x6b
0xffffff800031e208 : out 0xe8, eax ; ret 0x742
0xffffff800052dc58 : out 0xe8, eax ; ret 0xac
0xffffff800079ed78 : out 0xe8, eax ; ret 0xbf3c
0xffffff80002cbb38 : out 0xe8, eax ; ret 0xcb6
0xffffff80006a6278 : out 0xe8, eax ; ret 0xcec7
0xffffff8000648f78 : out 0xe8, eax ; ret 0xd4a0
0xffffff80004a1658 : out 0xe8, eax ; ret 0xe372
0xffffff8000448778 : out 0xe8, eax ; ret 0xe4f3
0xffffff8000634d58 : out 0xe8, eax ; ret 0xf1e6
0xffffff8000624828 : out 0xe8, eax ; ret 0xf2c8
0xffffff80002a4438 : out 0xe8, eax ; ret 0xf2d
0xffffff800030b808 : out 0xe8, eax ; ret 0xf98e
0xffffff80003f0278 : out 0xe8, eax ; ret 0xfa2d
0xffffff80003c01f8 : out 0xe8, eax ; ret 0xfd96
0xffffff80002d23c8 : out 0xe8, eax ; ret 0xffca
0xffffff80006d5508 : out 0xe8, eax ; ret 0xfff5
0xffffff8000772267 : out 0xe8, eax ; rol dword ptr [rdi], cl ; ret 0xc7ff
0xffffff80007f5ed0 : out 0xe8, eax ; sbb dh, byte ptr [rdx - 8] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bb61f : out 0xe8, eax ; sbb edi, dword ptr [rdx - 0x43] ; dec dword ptr [rax - 1] ; ret
0xffffff800056667b : out 0xe8, eax ; scasd eax, dword ptr [rdi] ; ret 0xffe2
0xffffff800074c1aa : out 0xe8, eax ; shr byte ptr [rbx + rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800079943d : out 0xe8, eax ; std ; ret 0xffb1
0xffffff800077098f : out 0xe8, eax ; stosd dword ptr [rdi], eax ; ret 0x49ff
0xffffff80007f3fba : out 0xe8, eax ; xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000708cd9 : out 0xe8, eax ; xchg eax, ecx ; ret 0xfffc
0xffffff800052f804 : out 0xe8, eax ; xchg eax, esi ; test eax, 0x89480024 ; ret
0xffffff8000299614 : out 0xe8, eax ; xchg eax, esp ; str word ptr [rax + 0x63] ; ret
0xffffff80005264c3 : out 0xe8, eax ; xlatb ; ret
0xffffff80006a4ed3 : out 0xea, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000754555 : out 0xea, eax ; ret
0xffffff800084939e : out 0xeb, al ; adc dword ptr [rcx - 1], eax ; ret
0xffffff800074f5f9 : out 0xeb, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xd285
0xffffff800041a27e : out 0xeb, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d4421 : out 0xeb, eax ; ret 0x894c
0xffffff80006bdd44 : out 0xf, eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004d26b5 : out 0xf, eax ; mov eax, edi ; pop rbp ; ret
0xffffff800084c6a4 : out 0xf, eax ; mov r12, r8 ; call rax
0xffffff800084c953 : out 0xf, eax ; mov rbx, r8 ; call qword ptr [rbx]
0xffffff800089579e : out 0xf0, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff8000716f8c : out 0xf1, eax ; xor eax, 0xf801c400 ; pop rbp ; ret
0xffffff800077d8f5 : out 0xf2, eax ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff8000858437 : out 0xf8, eax ; mov edx, eax ; jmp 0xffffff8000858447
0xffffff8000757096 : out 0xfa, al ; ret
0xffffff80008626be : out 0xfa, al ; sbb al, byte ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80006b1465 : out 0xfc, eax ; adc dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002ea2e7 : out 0xfe, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003275a0 : out 0xfe, al ; mov rax, rsi ; pop rbp ; ret
0xffffff80006aadea : out 0xfe, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035e8be : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081a1a1 : out 0xff, al ; inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x95 ; ret
0xffffff80008422ad : out 0xff, al ; jmp qword ptr [rcx]
0xffffff8000279465 : out 0xff, al ; jmp rax
0xffffff800052b512 : out 0xff, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000822677 : out 0xff, al ; push rbp ; mov al, 0x89 ; ret
0xffffff80004d9c83 : out 0xff, al ; xor eax, eax ; pop rbp ; ret
0xffffff800053218a : out 0xff, al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008422cd : out 0xff, eax ; call qword ptr [rax]
0xffffff80006f3f25 : out 0xff, eax ; call qword ptr [rdi]
0xffffff800048bc65 : out 0xff, eax ; call rcx
0xffffff80007e73fd : out 0xff, eax ; call rdi
0xffffff80003b351f : out 0xff, eax ; dec dword ptr [rax - 1] ; ret
0xffffff80007aa7fa : out 0xff, eax ; idiv edi ; inc dword ptr [rcx - 9] ; ret
0xffffff80008422c9 : out 0xff, eax ; inc esi ; out 0xff, eax ; call qword ptr [rax]
0xffffff8000644662 : out 0xff, eax ; jmp qword ptr [rcx]
0xffffff80006f3f01 : out 0xff, eax ; jmp qword ptr [rdi]
0xffffff800056333e : out 0xff, eax ; jmp rcx
0xffffff800074655e : out 0xff, eax ; lcall [rdi] ; add byte ptr [rbp - 0x77], al ; ret
0xffffff800086d23e : out 0xff, eax ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800086ab5d : out 0xff, eax ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081ea49 : out 0xff, eax ; nop ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800087fac7 : out 0xff, eax ; nop ; push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff8000796290 : out 0xff, eax ; pop rbp ; ret
0xffffff800081c5d6 : out 0xff, eax ; push rax ; sub bh, bh ; ret
0xffffff800086db56 : out 0xff, eax ; push rax ; sub byte ptr [rcx - 0x42], al ; ret 2
0xffffff80002fa206 : out 0xff, eax ; ret
0xffffff80007d3f89 : out 0xff, eax ; ror byte ptr [rax - 0x77], 1 ; ret
0xffffff800071d34e : out 1, al ; add esi, eax ; movzx eax, si ; pop rbp ; ret
0xffffff80003ba535 : out 1, al ; mov eax, esi ; pop rbp ; ret
0xffffff800086291e : out 1, al ; sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000252818 : out 1, eax ; mov edi, ecx ; jae 0xffffff8000252817 ; pop rbp ; ret
0xffffff800050f08b : out 1, eax ; mov rdi, rcx ; jae 0xffffff800050f088 ; pop rbp ; ret
0xffffff80008a6c4d : out 2, eax ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff800081a323 : out 3, al ; add byte ptr [rax + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80002601fe : out 3, al ; cmp edx, esi ; setl dl ; jmp 0xffffff800026022a
0xffffff80003d3d70 : out 3, eax ; or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff800028cd0a : out 4, eax ; add byte ptr [rax + 1], cl ; ret
0xffffff80003a8dac : out 4, eax ; mov dword ptr [rax + rdi], esi ; pop rbp ; ret
0xffffff80003a8d8c : out 4, eax ; mov eax, dword ptr [rax + rdi] ; pop rbp ; ret
0xffffff8000641ed4 : out 5, al ; mov rdi, rbx ; call 0xffffff800010e147
0xffffff8000884d5e : out 7, al ; sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800061adc0 : out dx, al ; adc byte ptr [rcx], al ; ret 0xb70f
0xffffff80006ef906 : out dx, al ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80005daf5e : out dx, al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80002601fb : out dx, al ; add al, byte ptr [rbx - 0xdc6fc1a] ; setl dl ; jmp 0xffffff800026022d
0xffffff80004a67d0 : out dx, al ; add byte ptr [rbx - 0x9f3f7ac], cl ; ret 0xbe01
0xffffff80006d9a47 : out dx, al ; add cl, ch ; ret
0xffffff8000288337 : out dx, al ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800033fbd2 : out dx, al ; add eax, 0xfed8545 ; xchg eax, esp ; ret 0x2040
0xffffff800058e416 : out dx, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80004f1fe0 : out dx, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800077b049 : out dx, al ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x1eb7b], cl ; jmp qword ptr [rcx]
0xffffff80008edf36 : out dx, al ; add rsp, 4 ; pop rbp ; ret
0xffffff80008b69c6 : out dx, al ; and al, byte ptr [rax] ; test rax, rax ; je 0xffffff80008b69d9 ; pop rbp ; ret
0xffffff800038973d : out dx, al ; and byte ptr [rcx - 0x75], al ; push rsp ; and al, 8 ; call qword ptr [rax]
0xffffff80002957be : out dx, al ; and dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000443cde : out dx, al ; call 0xffffff7fc3ce3ce8
0xffffff80004e9ed1 : out dx, al ; call 0xffffff800010e144
0xffffff800066366f : out dx, al ; call 0xffffff800028e1b4
0xffffff80005025a8 : out dx, al ; call 0xffffff800029e853
0xffffff80006a588f : out dx, al ; call 0xffffff80002d4ef4
0xffffff800030dcb4 : out dx, al ; call 0xffffff80003498b8
0xffffff80007fa92e : out dx, al ; call 0xffffff8000396b83
0xffffff800076ebae : out dx, al ; call 0xffffff8000396b84
0xffffff80002ae487 : out dx, al ; call 0xffffff800074ac47
0xffffff800029ddf7 : out dx, al ; call r12
0xffffff8000894271 : out dx, al ; call r15
0xffffff80002d0898 : out dx, al ; call rax
0xffffff80003ac3f3 : out dx, al ; call rbx
0xffffff800090a539 : out dx, al ; call rcx
0xffffff800065e8be : out dx, al ; clc ; ret 0x49ff
0xffffff80007a2ce1 : out dx, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008918ad : out dx, al ; cmp byte ptr [rdx], ch ; add byte ptr [rax], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006783f6 : out dx, al ; cmp dword ptr [rsi], eax ; call 0xffffff800029afa7
0xffffff80003b4e43 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a2a82 : out dx, al ; jb 0xffffff80003a2a89 ; pop rbp ; ret
0xffffff80008192ce : out dx, al ; jg 0xffffff80008192d8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800041d22a : out dx, al ; jmp 0xffffff800041c835
0xffffff80008ba8e8 : out dx, al ; jmp 0xffffff80008bab29
0xffffff80008f78d2 : out dx, al ; jmp qword ptr [rbx]
0xffffff800049a321 : out dx, al ; jmp rsi
0xffffff8000b3e3c8 : out dx, al ; jns 0xffffff8000b3e3b6 ; cmp esi, ecx ; push rcx ; jmp qword ptr [rdx]
0xffffff80003b8b05 : out dx, al ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800075664e : out dx, al ; leave ; ret
0xffffff800030d37e : out dx, al ; mov ah, 8 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008a3651 : out dx, al ; mov dword ptr [rip + 0x293830], ecx ; pop rbp ; ret
0xffffff800036be7e : out dx, al ; mov ecx, 0x8948fff2 ; ret
0xffffff80008fbb24 : out dx, al ; mov ecx, dword ptr [rbp - 0x30] ; mov r8d, dword ptr [rbp - 0x2c] ; call rbx
0xffffff8000908121 : out dx, al ; mov ecx, dword ptr [rbp - 0x34] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff800066369c : out dx, al ; mov edx, ebx ; call 0xffffff800028e1b6
0xffffff8000502617 : out dx, al ; mov edx, ebx ; call 0xffffff800029e855
0xffffff800087c2c7 : out dx, al ; mov r8d, eax ; call rbx
0xffffff80007eb01a : out dx, al ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008f7854 : out dx, al ; mov rcx, qword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x30] ; call rbx
0xffffff80008fbd95 : out dx, al ; mov rcx, qword ptr [rbp - 0x48] ; mov r8, qword ptr [rbp - 0x40] ; call rbx
0xffffff8000909469 : out dx, al ; mov rcx, r12 ; call rax
0xffffff80008fcb1c : out dx, al ; mov rcx, r15 ; call rax
0xffffff80008f6783 : out dx, al ; mov rcx, r15 ; mov r9, r14 ; call rax
0xffffff80005330de : out dx, al ; mov rdx, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x30] ; call rax
0xffffff800087e814 : out dx, al ; mov rdx, r12 ; call rax
0xffffff800087e52e : out dx, al ; mov rdx, r15 ; call rax
0xffffff80008e3a6d : out dx, al ; mov rdx, r15 ; mov r8, r12 ; call 0xffffff80004efce9
0xffffff80002ef9fe : out dx, al ; movsxd rdi, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004b6506 : out dx, al ; or byte ptr [rax - 0x73], 0x4b ; js 0xffffff80004b650a ; ret 0x4808
0xffffff8000842565 : out dx, al ; or byte ptr [rax - 1], cl ; ret 0xc3ff
0xffffff80004b66d5 : out dx, al ; or byte ptr [rcx - 0x73], 0x4e ; js 0xffffff80004b66d9 ; ret 0x4808
0xffffff800072db21 : out dx, al ; or byte ptr [rdi + 0x32], 8 ; pop rbp ; ret
0xffffff800028e851 : out dx, al ; pop rbp ; ret
0xffffff8000564f66 : out dx, al ; pop rbx ; add al, ch ; ret 0x8d2
0xffffff80008b7b41 : out dx, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065b2e0 : out dx, al ; pop rcx ; xor eax, 0xe8c03100 ; mov ch, 0x31 ; ret
0xffffff800075d94e : out dx, al ; push rsi ; ret
0xffffff800041ef1e : out dx, al ; ret
0xffffff800074605a : out dx, al ; ret 0x33
0xffffff800065f363 : out dx, al ; ret 0x41ff
0xffffff800053bc1f : out dx, al ; ret 0x44
0xffffff800076e64e : out dx, al ; ret 0x45ff
0xffffff8000674c4e : out dx, al ; ret 0x48ff
0xffffff8000669dae : out dx, al ; ret 0xe9ff
0xffffff80008c36ad : out dx, al ; sbb ah, byte ptr [rdi] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089114e : out dx, al ; sbb byte ptr [eax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000893dce : out dx, al ; sbb byte ptr [rax], r8b ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085ccee : out dx, al ; sbb rax, qword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800075c08e : out dx, al ; stosb byte ptr [rdi], al ; ret
0xffffff800089cfad : out dx, al ; sub dword ptr [rcx], 0x415b6000 ; pop rsi ; pop rbp ; ret
0xffffff800075994e : out dx, al ; xchg eax, esi ; ret
0xffffff8000810dad : out dx, al ; xor al, byte ptr [r8] ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800085e0fe : out dx, al ; xor bh, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081629e : out dx, al ; xor dword ptr [rax], eax ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000367fd1 : out dx, al ; xor eax, eax ; pop rbp ; ret
0xffffff800039742d : out dx, eax ; adc al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000603407 : out dx, eax ; adc byte ptr [rcx + 0x63], cl ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0xffffff800080ddea : out dx, eax ; adc byte ptr [rcx], al ; ret 0xb70f
0xffffff80004d26d5 : out dx, eax ; add al, 0x89 ; clc ; pop rbp ; ret
0xffffff80004cad76 : out dx, eax ; add al, ch ; ret 0xec7c
0xffffff8000526b96 : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x5dc03106], cl ; ret
0xffffff800033f15d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800062f3b9 : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc085
0xffffff80005dde36 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000421e95 : out dx, eax ; call 0xffffff800010e143
0xffffff8000765da0 : out dx, eax ; call 0xffffff80003923e4
0xffffff80002ce87d : out dx, eax ; call 0xffffff80003923e8
0xffffff8000566236 : out dx, eax ; call 0xffffff80003924d3
0xffffff800031633b : out dx, eax ; call 0xffffff8000392603
0xffffff80003164b9 : out dx, eax ; call 0xffffff8000392793
0xffffff800068943c : out dx, eax ; call 0xffffff80003928a9
0xffffff800076e3fa : out dx, eax ; call 0xffffff8000392934
0xffffff8000696774 : out dx, eax ; call 0xffffff8000392a43
0xffffff8000764588 : out dx, eax ; call 0xffffff8000392a44
0xffffff80007644f8 : out dx, eax ; call 0xffffff8000393044
0xffffff8000299aff : out dx, eax ; call 0xffffff8000393047
0xffffff80006e0ebc : out dx, eax ; call 0xffffff8000393048
0xffffff8000597151 : out dx, eax ; call 0xffffff80005833e3
0xffffff80005d418b : out dx, eax ; call 0xffffff80005d4c77
0xffffff80006ad899 : out dx, eax ; call 0xffffff80006a9b83
0xffffff80006ac669 : out dx, eax ; call 0xffffff80006ac8a9
0xffffff800056b0bf : out dx, eax ; call 0xffffff80006b73b3
0xffffff80006187cf : out dx, eax ; call 0xffffff80007b4a63
0xffffff80007c897e : out dx, eax ; call 0xffffff80007c4bb3
0xffffff8000878775 : out dx, eax ; call 0xffffff80008749e3
0xffffff800087a4cc : out dx, eax ; call qword ptr [rax + 0x28]
0xffffff80008aeab2 : out dx, eax ; call qword ptr [rax + 0x38]
0xffffff800053e585 : out dx, eax ; call r12
0xffffff80008deb9a : out dx, eax ; call r15
0xffffff80004eb927 : out dx, eax ; call rax
0xffffff80008214da : out dx, eax ; call rbx
0xffffff80007c7dc5 : out dx, eax ; call rcx
0xffffff8000366369 : out dx, eax ; cli ; inc dword ptr [rbp + 0x5d0275c0] ; ret
0xffffff800033cdc3 : out dx, eax ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000b465cf : out dx, eax ; cmp ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80004a33e8 : out dx, eax ; dec dword ptr [rax + 0x63] ; ret
0xffffff800049cab7 : out dx, eax ; dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff800049ce23 : out dx, eax ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80003a1632 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002bbc2d : out dx, eax ; fdivp st(2) ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008dca23 : out dx, eax ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b471ca : out dx, eax ; idiv bh ; and ecx, dword ptr [rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000b45fb4 : out dx, eax ; in eax, dx ; and ecx, dword ptr [rax + 0x21] ; fmul dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800027c5aa : out dx, eax ; inc dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; ret 0xc8ff
0xffffff80004399cb : out dx, eax ; jmp 0xffffff7fc3cce2d5
0xffffff8000397267 : out dx, eax ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80004cc04a : out dx, eax ; lea rdx, [rip + 0x60b0d6] ; call rcx
0xffffff80007375a0 : out dx, eax ; mov bh, bh ; call qword ptr [rbx]
0xffffff8000737178 : out dx, eax ; mov bh, bh ; call qword ptr [rsi - 0x2d000036]
0xffffff8000737330 : out dx, eax ; mov bh, bh ; jmp qword ptr [rbp - 0x2e000078]
0xffffff800073735c : out dx, eax ; mov bh, bh ; jmp rcx
0xffffff8000877309 : out dx, eax ; mov ebx, ecx ; call qword ptr [rax + 0x28]
0xffffff80006359ad : out dx, eax ; mov edx, r14d ; call rax
0xffffff800033ccf3 : out dx, eax ; mov esi, 0x3948feed ; ret
0xffffff80007c0bb6 : out dx, eax ; mov esi, 0x8948dead ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000878aed : out dx, eax ; mov esi, 0x8948ffff ; ret
0xffffff80006e93e2 : out dx, eax ; mov esi, dword ptr [rbp - 0x664] ; call 0xffffff8000705659
0xffffff80007f8fcd : out dx, eax ; mov esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007487a2 : out dx, eax ; mov esi, ebx ; call 0xffffff8000370e86
0xffffff8000487084 : out dx, eax ; mov esi, r12d ; call 0xffffff80008032c6
0xffffff800090a0f6 : out dx, eax ; mov esi, r12d ; mov rdx, r15 ; call rcx
0xffffff800050c8b4 : out dx, eax ; mov esi, r15d ; call 0xffffff8000758b36
0xffffff800076a5f8 : out dx, eax ; mov qword ptr [rbp - 0x50], rdx ; call rax
0xffffff80008bf8b8 : out dx, eax ; mov r14d, 0xe00002c7 ; jmp 0xffffff80008bf88c
0xffffff80008bd336 : out dx, eax ; mov r8, r11 ; mov r9, r10 ; call r15
0xffffff80008bd37e : out dx, eax ; mov r9, r11 ; call r15
0xffffff80008bd3ca : out dx, eax ; mov r9, r14 ; call r15
0xffffff800076b299 : out dx, eax ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800076a71a : out dx, eax ; mov rdx, qword ptr [rbp - 0x50] ; call rax
0xffffff80007c82d8 : out dx, eax ; mov rdx, qword ptr [rbp - 0x90] ; call rax
0xffffff80007c7f98 : out dx, eax ; mov rdx, qword ptr [rbp - 0x90] ; call rcx
0xffffff80007c8a34 : out dx, eax ; mov rdx, qword ptr [rbp - 0xa0] ; call rax
0xffffff80008bd236 : out dx, eax ; mov rdx, r10 ; mov rcx, r14 ; call r15
0xffffff80006423a9 : out dx, eax ; mov rdx, r12 ; call rax
0xffffff8000646448 : out dx, eax ; mov rdx, r15 ; call rax
0xffffff80007c92c0 : out dx, eax ; mov rdx, r8 ; call rcx
0xffffff80008cd7bb : out dx, eax ; mov rdx, rax ; call r15
0xffffff800062bb6c : out dx, eax ; mov rdx, rbx ; call rax
0xffffff80007d0fe3 : out dx, eax ; mov rdx, rbx ; call rcx
0xffffff80007ac7b1 : out dx, eax ; mov rsi, qword ptr [rbp - 0x3e8] ; call rcx
0xffffff80002cf3ad : out dx, eax ; mov rsi, qword ptr [rbp - 0x60] ; mov rdx, r12 ; call rbx
0xffffff80007d796f : out dx, eax ; mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff80007d865c : out dx, eax ; mov rsi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rax
0xffffff80007b3cc3 : out dx, eax ; mov rsi, r12 ; mov rdx, r15 ; call rax
0xffffff80008b235c : out dx, eax ; mov rsi, r14 ; call r12
0xffffff80007eaf45 : out dx, eax ; mov rsi, r14 ; call rbx
0xffffff8000534417 : out dx, eax ; mov rsi, r14 ; call rcx
0xffffff800028e046 : out dx, eax ; mov rsi, r15 ; call r14
0xffffff8000812751 : out dx, eax ; mov rsi, rax ; call r14
0xffffff80008ddb86 : out dx, eax ; mov rsi, rax ; call rbx
0xffffff800055795d : out dx, eax ; mov rsi, rax ; call rcx
0xffffff80005453c4 : out dx, eax ; mov rsi, rbx ; call r14
0xffffff80008cb200 : out dx, eax ; movsxd rax, dword ptr [r9 + rax*4] ; add rax, r9 ; jmp rax
0xffffff8000625fbf : out dx, eax ; pop rbp ; ret
0xffffff800061cfd7 : out dx, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007aa322 : out dx, eax ; push rdi ; ret 0
0xffffff800064f206 : out dx, eax ; ret
0xffffff800065f1cf : out dx, eax ; ret 0x31ff
0xffffff80005c99e4 : out dx, eax ; ret 0x3c
0xffffff800065f243 : out dx, eax ; ret 0x41ff
0xffffff800034b253 : out dx, eax ; ret 0x60
0xffffff800065f1ff : out dx, eax ; ret 0xebff
0xffffff800085113a : out dx, eax ; ret 0xf66
0xffffff800035927d : out dx, eax ; ret 0xfffb
0xffffff80002e8bfd : out dx, eax ; ret 0xfffe
0xffffff80006a2f82 : out dx, eax ; sub al, 0x47 ; stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a2f67 : out dx, eax ; sub al, 0x62 ; stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a2311 : out dx, eax ; sub al, 0xb8 ; mov dh, 0xfc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006a20c4 : out dx, eax ; sub al, 5 ; mov ecx, 0x8948fffc ; ret 0x8b48
0xffffff80008a623e : out dx, eax ; sub byte ptr [rax], al ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008162d8 : out dx, eax ; xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff800062e0db : out dx, eax ; xor eax, eax ; pop rbp ; ret
0xffffff800084b720 : out dx, eax ; xor edx, edx ; div dword ptr [rdi + 0x24] ; mov eax, edx ; pop rbp ; ret
0xffffff8000607e73 : outsb dx, byte ptr [rsi] ; add al, 0 ; add byte ptr [rbp - 0x7b], al ; in al, 0xf ; xchg eax, ebp ; ret 0x8548
0xffffff80002a33f5 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; ret 0x8948
0xffffff80005723d4 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x68f0fc08], al ; ret
0xffffff8000347eae : outsb dx, byte ptr [rsi] ; add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008b885f : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800065466c : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], sil ; shr al, 0x2a ; sahf ; ret
0xffffff80002d74d2 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], 0x8948589c ; ret
0xffffff8000476db8 : outsb dx, byte ptr [rsi] ; add eax, 0xdf894800 ; call 0xffffff8000393048
0xffffff800086312d : outsb dx, byte ptr [rsi] ; and byte ptr [rip + 0x415b2000], ch ; pop rsi ; pop rbp ; ret
0xffffff80007ab64c : outsb dx, byte ptr [rsi] ; and edi, 0xffffff ; xor esi, esi ; call rax
0xffffff800089b8ae : outsb dx, byte ptr [rsi] ; call 0xffffff7f89d1b8d3
0xffffff8000762e6e : outsb dx, byte ptr [rsi] ; cmc ; ret 0x48ff
0xffffff80002e8bf6 : outsb dx, byte ptr [rsi] ; jge 0xffffff80002e8c02 ; xor esi, esi ; call 0xffffff80002d4ef8
0xffffff8000907952 : outsb dx, byte ptr [rsi] ; jmp qword ptr [rdx]
0xffffff800025a187 : outsb dx, byte ptr [rsi] ; jp 0xffffff800025a193 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000375c0b : outsb dx, byte ptr [rsi] ; js 0xffffff8000375c17 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000641a60 : outsb dx, byte ptr [rsi] ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028c53e : outsb dx, byte ptr [rsi] ; mov bl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0xffffff800077d885 : outsb dx, byte ptr [rsi] ; mov dl, 0xff ; pop rbp ; ret
0xffffff80008dc93e : outsb dx, byte ptr [rsi] ; mov ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008cc2be : outsb dx, byte ptr [rsi] ; mov edx, dword ptr [rip + 0x7894800] ; pop rbp ; ret
0xffffff80006dccae : outsb dx, byte ptr [rsi] ; mov esp, 0x8948ffbf ; ret
0xffffff80007e1b20 : outsb dx, byte ptr [rsi] ; or al, ch ; cdq ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d59ee : outsb dx, byte ptr [rsi] ; or edx, dword ptr [rip + 0x7894800] ; pop rbp ; ret
0xffffff80008e6a2d : outsb dx, byte ptr [rsi] ; out 0x24, eax ; add byte ptr [rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076da09 : outsb dx, byte ptr [rsi] ; pop rax ; mov rdi, r13 ; call 0xffffff8000392a48
0xffffff800089238e : outsb dx, byte ptr [rsi] ; pop rdx ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000606157 : outsb dx, byte ptr [rsi] ; ret
0xffffff800050427d : outsb dx, byte ptr [rsi] ; ret 0x47
0xffffff80006672ea : outsb dx, byte ptr [rsi] ; ret 0x4cff
0xffffff8000667343 : outsb dx, byte ptr [rsi] ; ret 0x66ff
0xffffff800034f236 : outsb dx, byte ptr [rsi] ; ret 0x7a
0xffffff800078c1f1 : outsb dx, byte ptr [rsi] ; sar bh, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008d17a4 : outsb dx, byte ptr [rsi] ; sbb eax, 0xd8d4800 ; ret 0x1d6d
0xffffff80008b8226 : outsb dx, byte ptr [rsi] ; shl byte ptr [rdi], 1 ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff80007534ae : outsb dx, byte ptr [rsi] ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800088e2ee : outsb dx, byte ptr [rsi] ; sub al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800068e15e : outsb dx, byte ptr [rsi] ; xor esi, esi ; mov rdi, rbx ; mov rdx, r15 ; call rax
0xffffff8000347eac : outsb dx, byte ptr fs:[rsi] ; add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800065466b : outsb dx, byte ptr gs:[rsi] ; add byte ptr [rcx], sil ; shr al, 0x2a ; sahf ; ret
0xffffff8000251eef : outsd dx, dword ptr [rsi] ; add al, ch ; pop rdx ; ret 3
0xffffff8000251ead : outsd dx, dword ptr [rsi] ; add al, ch ; pushfq ; ret 3
0xffffff8000336236 : outsd dx, dword ptr [rsi] ; add al, ch ; ret
0xffffff8000423d87 : outsd dx, dword ptr [rsi] ; add al, ch ; ret 0x297
0xffffff80004196fb : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; xor al, 0xc2 ; jmp 0xffffff8000419719
0xffffff8000338bcd : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008483ef : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; jmp 0xffffff800084844d
0xffffff80008483ee : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; jmp 0xffffff800084844e
0xffffff800065459c : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], sil ; shr al, 0xfa ; sahf ; ret
0xffffff8000423a95 : outsd dx, dword ptr [rsi] ; add byte ptr [rdx - 0x75], cl ; adc al, 0xc2 ; jmp 0xffffff8000423aaf
0xffffff8000336c24 : outsd dx, dword ptr [rsi] ; add dh, dh ; ret 0x7506
0xffffff8000577d26 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff80002b95ad : outsd dx, dword ptr [rsi] ; add eax, 0x8948fffb ; ret
0xffffff800076e3f6 : outsd dx, dword ptr [rsi] ; and byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xffffff8000392938
0xffffff8000803e15 : outsd dx, dword ptr [rsi] ; call qword ptr [rdx]
0xffffff80002ba2ad : outsd dx, dword ptr [rsi] ; clc ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000669d5d : outsd dx, dword ptr [rsi] ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xf41
0xffffff80003578d6 : outsd dx, dword ptr [rsi] ; hlt ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80006bbf7d : outsd dx, dword ptr [rsi] ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a5279 : outsd dx, dword ptr [rsi] ; ja 0xffffff80008a52a9 ; jmp 0xffffff80008a52c1
0xffffff80008a7109 : outsd dx, dword ptr [rsi] ; ja 0xffffff80008a7139 ; jmp 0xffffff80008a7151
0xffffff800039aa16 : outsd dx, dword ptr [rsi] ; jae 0xffffff800039aa1d ; pop rbp ; ret
0xffffff8000367967 : outsd dx, dword ptr [rsi] ; jbe 0xffffff800036796e ; pop rbp ; ret
0xffffff8000367966 : outsd dx, dword ptr [rsi] ; jbe 0xffffff800036796f ; pop rbp ; ret
0xffffff800069a0dc : outsd dx, dword ptr [rsi] ; jmp 0xffffff800069a0e4
0xffffff800050d2dd : outsd dx, dword ptr [rsi] ; jmp qword ptr [rdi]
0xffffff800050f22d : outsd dx, dword ptr [rsi] ; mov ebp, 0x8948ffd8 ; ret 0x8948
0xffffff8000397266 : outsd dx, dword ptr [rsi] ; out dx, eax ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000391158 : outsd dx, dword ptr [rsi] ; push 0 ; pop rbp ; ret
0xffffff80008059dd : outsd dx, dword ptr [rsi] ; push rdi ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075d4bd : outsd dx, dword ptr [rsi] ; push rsp ; ret
0xffffff800039905d : outsd dx, dword ptr [rsi] ; ret
0xffffff80007425a5 : outsd dx, dword ptr [rsi] ; ret 0x34
0xffffff80006daebc : outsd dx, dword ptr [rsi] ; ret 0x3f
0xffffff80006674d0 : outsd dx, dword ptr [rsi] ; ret 0x48ff
0xffffff800057d548 : outsd dx, dword ptr [rsi] ; ret 0x4e
0xffffff80007db8cd : outsd dx, dword ptr [rsi] ; ret 0xffab
0xffffff8000862f2d : outsd dx, dword ptr [rsi] ; ret 0xfffa
0xffffff8000b4582e : outsd dx, dword ptr [rsi] ; ror byte ptr [rcx + 0x21], 1 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800039244d : outsd dx, dword ptr [rsi] ; sldt word ptr [rax] ; popfq ; ret
0xffffff80008b2d9d : outsd dx, dword ptr [rsi] ; sub byte ptr [r8], al ; pop rbp ; ret
0xffffff80005c0f3d : outsd dx, dword ptr [rsi] ; sub eax, 0x8948ffd1 ; ret
0xffffff80007e062d : outsd dx, dword ptr [rsi] ; wait ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000654f2d : outsd dx, dword ptr [rsi] ; xchg eax, ebp ; ret
0xffffff800074b397 : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rax] ; jg 0xffffff800074b3ff ; pop r14 ; pop rbp ; ret
0xffffff8000338bcc : outsd dx, dword ptr ds:[rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000391157 : outsd dx, dword ptr gs:[rsi] ; push 0 ; pop rbp ; ret
0xffffff80007f1bb8 : paddb mm7, mm7 ; call qword ptr [rsi]
0xffffff80007541ed : paddd mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000556b5e : paddq mm7, mm7 ; lea rdi, [rbp - 0x78] ; call 0xffffff8000752d79
0xffffff800067ff8c : paddsw mm7, mm7 ; call qword ptr [rax]
0xffffff80006cb163 : paddw mm7, mm7 ; call qword ptr [rax - 0x86]
0xffffff80003a49a9 : pause ; cmp dword ptr [rdi + 0x10], 0 ; jne 0xffffff80003a49b1 ; ret
0xffffff80003a48cf : pause ; cmp dword ptr [rdi + 8], 0 ; jne 0xffffff80003a48d7 ; ret
0xffffff80002ea04a : pcmpeqb mm0, qword ptr [rip + 0x2910c383] ; ret
0xffffff8000392356 : pcmpeqw mm0, qword ptr [rcx] ; ret
0xffffff800039232d : pcmpeqw mm0, qword ptr [rsi] ; mov eax, 1 ; ret
0xffffff80003925d7 : pcmpeqw mm2, qword ptr [rax + rdi*4] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff80003675f8 : pcmpeqw mm6, mm5 ; and eax, 1 ; pop rbp ; ret
0xffffff80002c02b8 : pcmpeqw mm6, mm5 ; movzx eax, ax ; pop rbp ; ret
0xffffff8000416f03 : pcmpeqw mm6, qword ptr [rip + 0x8c48348] ; pop rbx ; pop rbp ; ret
0xffffff80003924ef : pcmpeqw mm7, qword ptr [rcx] ; ret
0xffffff80004f19c1 : pminsw mm7, mm7 ; mov rdi, rbx ; call 0xffffff80004cdbe8
0xffffff80003a5f4a : pop qword ptr [rbx + rbx*8 - 0xb7ca8c] ; ret 0xec75
0xffffff80005c14d5 : pop qword ptr [rbx - 0x76b7ffaf] ; ret 0xffe8
0xffffff80008c4e9d : pop qword ptr [rbx] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000373edf : pop qword ptr [rcx - 0x3f] ; ret
0xffffff8000373e9b : pop qword ptr [rcx - 0x3f] ; ret 0x441e
0xffffff80003741de : pop qword ptr [rcx - 0x3f] ; ret 0x891e
0xffffff800064bb2c : pop qword ptr [rcx - 0x7f000000] ; ret
0xffffff800046a742 : pop qword ptr [rdi + 1] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006ffe59 : pop r11 ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002da75c : pop r11 ; pop r14 ; pop rbp ; ret
0xffffff80003a498d : pop r11 ; pop rcx ; pop rax ; ret
0xffffff800075d4f5 : pop r11 ; ret
0xffffff80005c0145 : pop r12 ; add rax, rsi ; pop rbp ; ret
0xffffff80003ea41c : pop r12 ; call 0xffffff8000393048
0xffffff800038b932 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; leave ; ret
0xffffff8000266740 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800026781e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250987 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a8f8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0xffffff8000516512 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000392799
0xffffff80003ad983 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff800039549f : pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp r8
0xffffff80002a6b9e : pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000250370 : pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002a171f : pop r12 ; pop rbp ; ret
0xffffff800038941e : pop r12 ; pop rbx ; leave ; ret
0xffffff80004cf139 : pop r12 ; xor eax, eax ; pop rbp ; ret
0xffffff800038941c : pop r13 ; pop r12 ; pop rbx ; leave ; ret
0xffffff800038b934 : pop r13 ; pop r14 ; pop r15 ; leave ; ret
0xffffff8000341f6a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b9
0xffffff80003db46f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff80003e7709
0xffffff800060a0f6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000606349
0xffffff80002ee9f0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800074ac49
0xffffff8000266742 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000267820 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250989 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a8fa : pop r13 ; pop r14 ; pop r15 ; ret
0xffffff8000738199 : pop r13 ; ret
0xffffff800038941a : pop r14 ; pop r13 ; pop r12 ; pop rbx ; leave ; ret
0xffffff800038b936 : pop r14 ; pop r15 ; leave ; ret
0xffffff8000341f6c : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b7
0xffffff800055bd70 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000298037
0xffffff8000766b49 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff80003923e8
0xffffff8000516514 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000392797
0xffffff80007677cb : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000393048
0xffffff800076b7d2 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800039923d
0xffffff80003db471 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff80003e7707
0xffffff800060a0f8 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000606347
0xffffff80002ee9f2 : pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800074ac47
0xffffff80003ad985 : pop r14 ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff80003954a1 : pop r14 ; pop r15 ; pop rbp ; jmp r8
0xffffff80008b891d : pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000267822 : pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250372 : pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a8fc : pop r14 ; pop r15 ; ret
0xffffff800076b6e1 : pop r14 ; pop rbp ; jmp 0xffffff8000393046
0xffffff80008ba5bd : pop r14 ; pop rbp ; jmp 0xffffff800086b829
0xffffff80008ba626 : pop r14 ; pop rbp ; jmp rax
0xffffff8000612546 : pop r14 ; pop rbp ; jmp rcx
0xffffff80002529d2 : pop r14 ; pop rbp ; ret
0xffffff800038b938 : pop r15 ; leave ; ret
0xffffff8000341f6e : pop r15 ; pop rbp ; jmp 0xffffff800028e1b5
0xffffff800055bd72 : pop r15 ; pop rbp ; jmp 0xffffff8000298035
0xffffff80004d46a4 : pop r15 ; pop rbp ; jmp 0xffffff80002a46d9
0xffffff8000766b4b : pop r15 ; pop rbp ; jmp 0xffffff80003923e6
0xffffff8000516516 : pop r15 ; pop rbp ; jmp 0xffffff8000392795
0xffffff80007677cd : pop r15 ; pop rbp ; jmp 0xffffff8000393046
0xffffff800076b7d4 : pop r15 ; pop rbp ; jmp 0xffffff800039923b
0xffffff80003db473 : pop r15 ; pop rbp ; jmp 0xffffff80003e7705
0xffffff800060a0fa : pop r15 ; pop rbp ; jmp 0xffffff8000606345
0xffffff80002ee9f4 : pop r15 ; pop rbp ; jmp 0xffffff800074ac45
0xffffff8000761ae1 : pop r15 ; pop rbp ; jmp 0xffffff800078b479
0xffffff80003ad987 : pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff80003954a3 : pop r15 ; pop rbp ; jmp r8
0xffffff80008b891f : pop r15 ; pop rbp ; jmp rax
0xffffff8000267824 : pop r15 ; pop rbp ; jmp rcx
0xffffff8000250374 : pop r15 ; pop rbp ; ret
0xffffff800090a8fe : pop r15 ; ret
0xffffff800065ad81 : pop r15 ; xor eax, 0xe8c03100 ; adc al, 0x37 ; ret
0xffffff8000766809 : pop r8 ; add al, 0x4c ; mov edi, edi ; call 0xffffff80003923e9
0xffffff8000865517 : pop r8 ; add dword ptr [rbx + rdx*8 - 0x15], esi ; ret 0x8b49
0xffffff80003a2a51 : pop r8 ; add eax, 0x5d000000 ; ret
0xffffff80007657fd : pop r8 ; add rdi, 8 ; call 0xffffff80003923e9
0xffffff800036dff9 : pop r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008980a5 : pop r8 ; inc eax ; pop rbp ; ret
0xffffff80002db576 : pop r8 ; pop rbp ; ret
0xffffff80002c2360 : pop r8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b447a : pop r8 ; test rax, rax ; je 0xffffff80007b4477 ; call rax
0xffffff800081131b : pop r8 ; xor esi, esi ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80003923c1 : pop r9 ; ret
0xffffff80007dbd53 : pop rax ; adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800076b618 : pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff80006c3704 : pop rax ; adc ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000453704 : pop rax ; adc esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006ca8f4 : pop rax ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000765d9c : pop rax ; add al, 0x4c ; mov edi, ebp ; call 0xffffff80003923e8
0xffffff800076680a : pop rax ; add al, 0x4c ; mov edi, edi ; call 0xffffff80003923e8
0xffffff800040eee8 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x5d027502], ch ; ret
0xffffff8000726d73 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rcx], al ; ret 0x3944
0xffffff800043d050 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x428d
0xffffff800067850f : pop rax ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0xffffff800054124b : pop rax ; add al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff800062f0ac : pop rax ; add byte ptr [r8 - 0x77], r9b ; ret 0x29e8
0xffffff800054ff73 : pop rax ; add byte ptr [rax + 0xf], cl ; enter 0x18b, 0x5d ; ret
0xffffff800054fd2c : pop rax ; add byte ptr [rax - 0x77], cl ; ret 0xaae8
0xffffff800054db24 : pop rax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000882098 : pop rax ; add byte ptr [rax], al ; add al, ch ; call rax
0xffffff800043186d : pop rax ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb60f
0xffffff80004c68d3 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000489174 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004a90d1 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039277b : pop rax ; add byte ptr [rax], al ; ret
0xffffff800054fe56 : pop rax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800076653b : pop rax ; add cl, byte ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e8
0xffffff800076653a : pop rax ; add cl, byte ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e9
0xffffff80007c47cb : pop rax ; add dword ptr [rax], eax ; add al, ch ; lodsb al, byte ptr [rsi] ; ret
0xffffff800077cf94 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800046af4c : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x137d
0xffffff800072d9a6 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x5d10314f], al ; ret
0xffffff800053205d : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff8000577cb5 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff80005b945c : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000622b89 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007c1e77 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff800010e149
0xffffff80008be037 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff8000865518 : pop rax ; add dword ptr [rbx + rdx*8 - 0x15], esi ; ret 0x8b49
0xffffff8000554f03 : pop rax ; add dword ptr [rcx - 0x77], ecx ; ret 0x8841
0xffffff800083d071 : pop rax ; add dword ptr [rcx], esi ; ret
0xffffff80007047e6 : pop rax ; add eax, 0x39410000 ; ret 0xf44
0xffffff80003a2a52 : pop rax ; add eax, 0x5d000000 ; ret
0xffffff80006f84c8 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002c0b36 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80005c1f48 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x5d ; ret 0xffcc
0xffffff80005c1ee1 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0xc4 ; ret 0xffcc
0xffffff80007657fe : pop rax ; add rdi, 8 ; call 0xffffff80003923e8
0xffffff80007f0165 : pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80005b9c5b : pop rax ; add rsp, 0x20 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800036dffa : pop rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000672604 : pop rax ; and al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000492af1 : pop rax ; and al, 0x83 ; ret
0xffffff80004978cd : pop rax ; and byte ptr [rax + 1], cl ; ret
0xffffff800076e75b : pop rax ; and byte ptr [rax - 0x77], cl ; fucomip st(0) ; wait ; ret 0x48ff
0xffffff80004c68c4 : pop rax ; and cl, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e2a81 : pop rax ; and eax, 0x89440020 ; ret
0xffffff80005076d8 : pop rax ; call rax
0xffffff80009002b3 : pop rax ; call rcx
0xffffff800047ce74 : pop rax ; cmp al, 0x83 ; ret
0xffffff800074c4a4 : pop rax ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf44
0xffffff8000686d04 : pop rax ; fst qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000775a08 : pop rax ; fsub qword ptr [rip + 0x358d4800] ; ret 0x25dc
0xffffff8000666504 : pop rax ; in eax, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000577ccf : pop rax ; inc dword ptr [rbx - 0x78f0e805] ; ret 1
0xffffff80008980a6 : pop rax ; inc eax ; pop rbp ; ret
0xffffff80006bde04 : pop rax ; insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0xffffff80006a6d54 : pop rax ; je 0xffffff80006a6d1e ; dec dword ptr [rcx + rcx*4 - 9] ; call 0xffffff8000393049
0xffffff80005230e4 : pop rax ; jmp rsi
0xffffff8000322964 : pop rax ; jne 0xffffff800032296f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007cd904 : pop rax ; jno 0xffffff80007cd90b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005e6df4 : pop rax ; jp 0xffffff80005e6dcb ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffda
0xffffff80007817d4 : pop rax ; mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000251827 : pop rax ; mov dword ptr [rax], eax ; shl rax, 0x12 ; pop rbp ; ret
0xffffff80005fe98e : pop rax ; mov dword ptr [rcx + rsi*4 + 0x5c], edi ; jmp 0xffffff80005fe95e
0xffffff8000797914 : pop rax ; mov dword ptr [rcx], edi ; add al, ch ; ret
0xffffff80003a0af3 : pop rax ; mov edi, 0xc00 ; call rax
0xffffff800081121a : pop rax ; mov edx, 1 ; pop rbp ; jmp rax
0xffffff80006965d4 : pop rax ; mov esi, 1 ; call 0xffffff80003928a8
0xffffff8000561f71 : pop rax ; mov qword ptr [rax + 0x60], rdx ; xor eax, eax ; pop rbp ; ret
0xffffff8000256801 : pop rax ; mov qword ptr [rbp - 0x40], rdi ; call 0xffffff8000392a47
0xffffff8000786f62 : pop rax ; mov qword ptr [rbx + 0x58], rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054f1b8 : pop rax ; mov rax, r8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076da0a : pop rax ; mov rdi, r13 ; call 0xffffff8000392a47
0xffffff800076b6cd : pop rax ; mov rdi, r14 ; call 0xffffff8000392a47
0xffffff80009001e3 : pop rax ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff800076b703 : pop rax ; mov rdi, r15 ; call 0xffffff8000392a47
0xffffff800076d425 : pop rax ; mov rdi, rbx ; call 0xffffff8000392a47
0xffffff8000892adb : pop rax ; mov rdi, rcx ; mov ecx, r8d ; pop rbp ; jmp rax
0xffffff800065d28b : pop rax ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80002be087 : pop rax ; or byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005d4204 : pop rax ; or byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008be4ed : pop rax ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff8000666404 : pop rax ; out 0x14, al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800063c2c4 : pop rax ; out 0x49, al ; add al, ch ; ret
0xffffff800028869f : pop rax ; pop rbp ; ret
0xffffff800028e48d : pop rax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002c2361 : pop rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029eb67 : pop rax ; pop rbx ; pop rbp ; ret
0xffffff800038b660 : pop rax ; popfq ; leave ; ret
0xffffff8000756d99 : pop rax ; push -0x170876b4 ; popfq ; ret 0xffc3
0xffffff8000357400 : pop rax ; push rsi ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80006a7704 : pop rax ; rcl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003a4990 : pop rax ; ret
0xffffff800073b884 : pop rax ; ret 0x33
0xffffff80005e4f09 : pop rax ; ret 0x3c
0xffffff80006daed4 : pop rax ; ret 0x3f
0xffffff80004e88b2 : pop rax ; ret 0x48ff
0xffffff800066211d : pop rax ; ret 0x49ff
0xffffff8000346de4 : pop rax ; ret 4
0xffffff800077d792 : pop rax ; sar edi, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000547804 : pop rax ; shl byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007ba187 : pop rax ; shl dword ptr [rsi + 0xf], 1 ; ret 0x5676
0xffffff8000547904 : pop rax ; shl dword ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000399945 : pop rax ; shr eax, 9 ; and eax, 1 ; pop rbp ; ret
0xffffff800047c06e : pop rax ; stc ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rbx]
0xffffff800085e774 : pop rax ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008913be : pop rax ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80007d1d04 : pop rax ; sub eax, 0x8948fffe ; ret
0xffffff80003037fb : pop rax ; test rax, rax ; je 0xffffff800030380b ; pop rbp ; jmp rax
0xffffff80003037fa : pop rax ; test rax, rax ; je 0xffffff800030380c ; pop rbp ; jmp rax
0xffffff800062886f : pop rax ; test rax, rax ; je 0xffffff80006288a0 ; mov rdi, r13 ; call rax
0xffffff80007b447b : pop rax ; test rax, rax ; je 0xffffff80007b4476 ; call rax
0xffffff80007c5275 : pop rax ; test rax, rax ; je 0xffffff80007c5289 ; mov rdi, r15 ; call rax
0xffffff800065321a : pop rax ; xor eax, 0xe8c03100 ; jl 0xffffff80006531dc ; ret
0xffffff80007d4455 : pop rax ; xor eax, eax ; pop rbp ; ret
0xffffff800081131c : pop rax ; xor esi, esi ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff80007d57ce : pop rax ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007ec8c2 : pop rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800067e60d : pop rbp ; adc dh, dh ; ret
0xffffff800029ae84 : pop rbp ; add al, byte ptr [rax] ; add al, ch ; ret
0xffffff800029b085 : pop rbp ; add al, byte ptr [rax] ; add al, ch ; ret 0xff30
0xffffff800029ab85 : pop rbp ; add al, byte ptr [rax] ; add al, ch ; ret 0xff35
0xffffff8000831f03 : pop rbp ; add al, byte ptr [rax] ; add al, ch ; ret 0xffa5
0xffffff8000391385 : pop rbp ; add al, ch ; and al, 0x29 ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff800044d56b : pop rbp ; add al, ch ; mov ss, ecx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000385c87 : pop rbp ; add al, ch ; ret 0xf084
0xffffff80006a65c4 : pop rbp ; add byte ptr [r9 + r9*4 - 0xa], cl ; call 0xffffff80002d4ef9
0xffffff800054f65f : pop rbp ; add byte ptr [rax - 0x77], cl ; ret 0x77e8
0xffffff8000711b2b : pop rbp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0xffffff8000381ed4 : pop rbp ; add byte ptr [rcx + rcx*4 - 0x35], cl ; call 0xffffff800028e157
0xffffff8000388225 : pop rbp ; add byte ptr [rcx], dh ; rol byte ptr [rcx + rcx*4 - 0xa], 0x41 ; call rdi
0xffffff8000550a67 : pop rbp ; add byte ptr [rdx], al ; jne 0xffffff8000550a7a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000391f3d : pop rbp ; add byte ptr [rsi + 0x39b], bh ; call 0xffffff800028e159
0xffffff80007fe38d : pop rbp ; add byte ptr cs:[rax - 0x77], cl ; ret 0x48e8
0xffffff80004ebde2 : pop rbp ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80003f6bca : pop rbp ; add dh, dh ; ret
0xffffff800072fd02 : pop rbp ; and byte ptr [rax - 0x7d], cl ; ret
0xffffff80006a7cac : pop rbp ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80002f009b : pop rbp ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000579217 : pop rbp ; cmc ; push rbp ; add byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff8000b3a1c2 : pop rbp ; dec dword ptr [rbp + rcx*4 + 0x35] ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800073b77d : pop rbp ; enter -0x72b8, 0x35 ; pop rdx ; ret
0xffffff800037024f : pop rbp ; enter -0xc77, -0x3f ; ret
0xffffff8000652b69 : pop rbp ; enter 0x48ff, -0x77 ; ret
0xffffff8000369f73 : pop rbp ; enter 0x6b48, -0x10 ; jo 0xffffff8000369f69 ; ret 0xda41
0xffffff80008ec321 : pop rbp ; enter 0xf41, -0x6a ; ret
0xffffff800085735f : pop rbp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008f6e12 : pop rbp ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80004e1540 : pop rbp ; jmp 0xffffff800010e0d4
0xffffff8000341f70 : pop rbp ; jmp 0xffffff800028e1b3
0xffffff800055bd74 : pop rbp ; jmp 0xffffff8000298033
0xffffff80003384b5 : pop rbp ; jmp 0xffffff80002a46d3
0xffffff80004d46a6 : pop rbp ; jmp 0xffffff80002a46d7
0xffffff80006a1ff3 : pop rbp ; jmp 0xffffff80002c36c4
0xffffff8000278054 : pop rbp ; jmp 0xffffff80002cc2a9
0xffffff80006ae884 : pop rbp ; jmp 0xffffff80002d4ef4
0xffffff8000298137 : pop rbp ; jmp 0xffffff80002d4ef8
0xffffff800073bdc4 : pop rbp ; jmp 0xffffff80002d4ef9
0xffffff800035927b : pop rbp ; jmp 0xffffff8000315573
0xffffff800030ed40 : pop rbp ; jmp 0xffffff800034e4a8
0xffffff8000764372 : pop rbp ; jmp 0xffffff80003923e4
0xffffff8000516518 : pop rbp ; jmp 0xffffff8000392793
0xffffff80004c67eb : pop rbp ; jmp 0xffffff8000392a43
0xffffff8000766ffd : pop rbp ; jmp 0xffffff8000393044
0xffffff800076b7d6 : pop rbp ; jmp 0xffffff8000399239
0xffffff80003ac9ee : pop rbp ; jmp 0xffffff80003998c9
0xffffff80003db475 : pop rbp ; jmp 0xffffff80003e7703
0xffffff800060a0fc : pop rbp ; jmp 0xffffff8000606343
0xffffff80002ee9f6 : pop rbp ; jmp 0xffffff800074ac43
0xffffff800075e142 : pop rbp ; jmp 0xffffff800077a423
0xffffff8000761ae3 : pop rbp ; jmp 0xffffff800078b477
0xffffff8000885203 : pop rbp ; jmp 0xffffff80008114a3
0xffffff80008ba5bf : pop rbp ; jmp 0xffffff800086b827
0xffffff8000303748 : pop rbp ; jmp qword ptr [rax]
0xffffff80004f8e1b : pop rbp ; jmp r11
0xffffff800028a907 : pop rbp ; jmp r8
0xffffff8000477a9a : pop rbp ; jmp r9
0xffffff80008b8921 : pop rbp ; jmp rax
0xffffff8000267826 : pop rbp ; jmp rcx
0xffffff800029ed18 : pop rbp ; jmp rsi
0xffffff80002eec47 : pop rbp ; jno 0xffffff80002eec53 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff800071303f : pop rbp ; jno 0xffffff800071304e ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003b9ce7 : pop rbp ; jnp 0xffffff80003b9d64 ; add byte ptr [rax - 0x7d], cl ; ret 0x8930
0xffffff8000763f41 : pop rbp ; mov al, 0x48 ; mov edi, ebx ; call 0xffffff80003923e8
0xffffff800036f786 : pop rbp ; mov al, 0x89 ; ret 0xc2c1
0xffffff80007e7ea5 : pop rbp ; mov al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; or edx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000748145 : pop rbp ; mov bh, bh ; ret
0xffffff80007eaea4 : pop rbp ; mov byte ptr [rcx + rcx*4 - 0xa], cl ; mov rbx, qword ptr [rbp - 0x30] ; call rbx
0xffffff8000b3b4d2 : pop rbp ; mov eax, 0x8b48c3ff ; test al, 0x39 ; ret
0xffffff800036fb43 : pop rbp ; mov eax, 0xd1f33144 ; ret
0xffffff800030f61a : pop rbp ; mov eax, 0xffffffba ; call rbx
0xffffff80007e0cb7 : pop rbp ; mov ecx, 0xc148002a ; jmp qword ptr [rax]
0xffffff8000311ea7 : pop rbp ; mov esi, 0x89440063 ; retf ; call 0xffffff800028e159
0xffffff80005bccbf : pop rbp ; mov esp, 0x8948ffd1 ; ret
0xffffff800037042e : pop rbp ; mov esp, 0xc1db3144 ; rcr dword ptr [rsi], 0xd1 ; ret
0xffffff8000370245 : pop rbp ; mov word ptr [rbp + 0x31], es ; rol dword ptr [rcx - 0x2f], cl ; ret
0xffffff80003b40ef : pop rbp ; mov word ptr [rcx + 1], es ; ret
0xffffff80006005ac : pop rbp ; or ah, byte ptr [rsi - 0x3f] ; ret
0xffffff8000760201 : pop rbp ; or byte ptr [rax - 0x77], cl ; fucomip st(0) ; cmc ; outsd dx, dword ptr [rsi] ; ret
0xffffff80007bd03b : pop rbp ; or byte ptr [rdi], 0x95 ; ret 0x9589
0xffffff80005e819f : pop rbp ; or eax, 0x89480000 ; ret
0xffffff800038941d : pop rbp ; pop r12 ; pop rbx ; leave ; ret
0xffffff800038b935 : pop rbp ; pop r14 ; pop r15 ; leave ; ret
0xffffff8000341f6b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b8
0xffffff80007677ca : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000393049
0xffffff80003db470 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff80003e7708
0xffffff800060a0f7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000606348
0xffffff80002ee9f1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800074ac48
0xffffff80008bad27 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000267821 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff800025098a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a8fb : pop rbp ; pop r14 ; pop r15 ; ret
0xffffff800038b65c : pop rbp ; pop rdx ; pop rcx ; pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff8000641ebf : pop rbp ; push -0x37 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025002d : pop rbp ; ret
0xffffff80005c99eb : pop rbp ; ret 0x3c
0xffffff80006af0f3 : pop rbp ; ret 0x66ff
0xffffff800078af9f : pop rbp ; ret 0xffc0
0xffffff80005c1f4f : pop rbp ; ret 0xffcc
0xffffff8000843c7d : pop rbp ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x4503
0xffffff8000678500 : pop rbp ; ror byte ptr [rax + 0x69], 1 ; ret
0xffffff800041a542 : pop rbp ; ror byte ptr [rax - 0x75], 1 ; pop rbp ; ror byte ptr [rax - 1], 1 ; ret
0xffffff800041a546 : pop rbp ; ror byte ptr [rax - 1], 1 ; ret
0xffffff80003150c0 : pop rbp ; ror byte ptr [rcx + rax - 0x16], 0x48 ; sub edx, eax ; jmp 0xffffff80003150f5
0xffffff80008b22d8 : pop rbp ; ror byte ptr [rcx + rcx*4 - 0x1a], 1 ; call rax
0xffffff80003c55c2 : pop rbp ; ror byte ptr [rdi], 0xb6 ; ret
0xffffff8000566828 : pop rbp ; sar bh, 1 ; ret
0xffffff8000621848 : pop rbp ; sbb dh, dh ; ret 0x7520
0xffffff80003fb3ec : pop rbp ; sub al, 0xf6 ; ret
0xffffff80008bb6ef : pop rbp ; sub bl, byte ptr [rbp - 0x76277601] ; ret
0xffffff800085d347 : pop rbp ; sub byte ptr [rax], 0 ; pop rbp ; ret
0xffffff800030a1cc : pop rbp ; sub dword ptr [rax + rax - 0x42], esp ; ret 0x18
0xffffff800037f3d0 : pop rbp ; test al, 0x89 ; ror byte ptr [rax + 0x39], 1 ; ret
0xffffff800070982f : pop rbp ; test al, 0xf6 ; ret
0xffffff800074987c : pop rbp ; test bh, bh ; ret
0xffffff800049afff : pop rbp ; xor eax, 0x89480000 ; ret
0xffffff8000358892 : pop rbx ; adc byte ptr [rax + 0x39], cl ; ret
0xffffff8000546da1 : pop rbx ; adc eax, 0x96e80059 ; ret 0xffe4
0xffffff800041b429 : pop rbx ; add al, 0x75 ; ret
0xffffff800036d4b9 : pop rbx ; add al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000564f67 : pop rbx ; add al, ch ; ret 0x8d2
0xffffff8000570af2 : pop rbx ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff800051e596 : pop rbx ; add byte ptr [rax - 0x77], cl ; ret 0x40e8
0xffffff8000392851 : pop rbx ; add byte ptr [rax], al ; ret
0xffffff800051be7d : pop rbx ; add byte ptr [rcx], bh ; ret
0xffffff80004a0d5c : pop rbx ; add byte ptr [rdi - 0x18], bh ; call 0xffffff800080cfb9
0xffffff80004b9072 : pop rbx ; add dword ptr [rcx - 1], ecx ; ret
0xffffff80007f26d1 : pop rbx ; add eax, 0x8948fff6 ; ret
0xffffff800029fae1 : pop rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000893040 : pop rbx ; and dword ptr [rdx], ebp ; add byte ptr [rax + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff8000338c20 : pop rbx ; clc ; dec dword ptr [rax - 1] ; ret
0xffffff80002ac56c : pop rbx ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff800032863c : pop rbx ; idiv bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800087bde1 : pop rbx ; jb 0xffffff800087bd9a ; push rsi ; ret
0xffffff8000333dab : pop rbx ; jl 0xffffff8000333db6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005cfa71 : pop rbx ; jle 0xffffff80005cfac0 ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000389420 : pop rbx ; leave ; ret
0xffffff80008a7140 : pop rbx ; loopne 0xffffff80008a7174 ; add byte ptr [rax + 0x5b], dh ; pop r14 ; pop rbp ; ret
0xffffff80003e78e1 : pop rbx ; mov bh, 0xfa ; push rsi ; ret
0xffffff800076ead4 : pop rbx ; mov bl, 0xff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000326c9c : pop rbx ; or byte ptr [rax + 0x39], cl ; ret
0xffffff800031b2f9 : pop rbx ; or byte ptr [rcx - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0xffffff8000625fbe : pop rbx ; out dx, eax ; pop rbp ; ret
0xffffff800090a8f7 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0xffffff80003ad982 : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff800039549e : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp r8
0xffffff80002a6b9d : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800025036f : pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004a1f11 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b8
0xffffff800055bd6f : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000298038
0xffffff8000766b48 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff80003923e9
0xffffff800076b7d1 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800039923e
0xffffff800035e9b8 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff800074ac48
0xffffff8000653550 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp r8
0xffffff80008b891c : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800088655e : pop rbx ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff80002504e9 : pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800076b6e0 : pop rbx ; pop r14 ; pop rbp ; jmp 0xffffff8000393047
0xffffff80008ba625 : pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000612545 : pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff80002529d1 : pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800038b65f : pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff80006ae883 : pop rbx ; pop rbp ; jmp 0xffffff80002d4ef5
0xffffff8000764371 : pop rbx ; pop rbp ; jmp 0xffffff80003923e5
0xffffff8000766ffc : pop rbx ; pop rbp ; jmp 0xffffff8000393045
0xffffff8000885202 : pop rbx ; pop rbp ; jmp 0xffffff80008114a4
0xffffff800050e971 : pop rbx ; pop rbp ; jmp r8
0xffffff8000272bac : pop rbx ; pop rbp ; jmp rax
0xffffff800082a2a2 : pop rbx ; pop rbp ; jmp rcx
0xffffff80002501e8 : pop rbx ; pop rbp ; ret
0xffffff80003a498e : pop rbx ; pop rcx ; pop rax ; ret
0xffffff80008f6c81 : pop rbx ; pop rdi ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80008eda6d : pop rbx ; popfq ; and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800085c881 : pop rbx ; push rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800045b7e1 : pop rbx ; ret
0xffffff8000739bb8 : pop rbx ; ret 0x28
0xffffff80004e85f3 : pop rbx ; ret 0x48ff
0xffffff80003a2fa5 : pop rbx ; ret 0x75
0xffffff8000770ffb : pop rbx ; ret 0x85ff
0xffffff800076d4cb : pop rbx ; ret 0xbeff
0xffffff8000568caf : pop rbx ; sar edi, cl ; mov ebx, 0x16 ; jmp 0xffffff8000568c84
0xffffff80008b0161 : pop rbx ; sbb ch, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080de7e : pop rbx ; sti ; push rdi ; ror byte ptr [rdi], 1 ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80006c25cf : pop rbx ; str word ptr [rax - 0x77] ; ret
0xffffff800030a1e9 : pop rbx ; sub dword ptr [rax + rax - 0x42], esp ; ret
0xffffff80007c09d5 : pop rbx ; test al, 0x2c ; add bh, bh ; ret 0xd139
0xffffff80007699e1 : pop rbx ; xchg eax, esi ; ret 0x44ff
0xffffff8000612a01 : pop rbx ; xlatb ; sbb eax, dword ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80004869de : pop rbx ; xor byte ptr [rbx - 0x6bf0fe05], al ; ret
0xffffff80008b54b3 : pop rcx ; adc al, 0xf6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800025d6c3 : pop rcx ; adc eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000547877 : pop rcx ; add al, ch ; ret 0xe4b1
0xffffff8000546da3 : pop rcx ; add al, ch ; xchg eax, esi ; ret 0xffe4
0xffffff800058e59c : pop rcx ; add bl, ch ; or cl, byte ptr [rax - 0x7f] ; ret
0xffffff80006a696d : pop rcx ; add byte ptr [r9 + r9*4 - 0x1a], cl ; call 0xffffff80002d4ef9
0xffffff80004c6bd2 : pop rcx ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800044d4c5 : pop rcx ; add byte ptr [rax + 0xf], cl ; ret
0xffffff80005897b5 : pop rcx ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800087e860 : pop rcx ; add byte ptr es:[rcx + rcx*4 - 0x12], al ; call rax
0xffffff80008ec0d1 : pop rcx ; add dword ptr [rax - 1], ecx ; ror dword ptr [rdi], 0xb6 ; ret
0xffffff800048c733 : pop rcx ; add dword ptr [rax], eax ; add bh, bh ; ret
0xffffff80005c1f6f : pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x36 ; ret 0xffcc
0xffffff80005c1f08 : pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x9d ; ret 0xffcc
0xffffff80008bcdee : pop rcx ; add ecx, dword ptr [rcx - 0x73] ; add eax, dword ptr [rcx + 0x29] ; ret
0xffffff8000290f40 : pop rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005cbd53 : pop rcx ; and al, 0xcc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000302c70 : pop rcx ; and byte ptr [rcx - 0x7f], cl ; ret
0xffffff8000316336 : pop rcx ; clc ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392608
0xffffff80002f0455 : pop rcx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b6bc3 : pop rcx ; cmp dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800051219a : pop rcx ; fdivr st(7) ; mov eax, 0xc ; jmp 0xffffff800051216f
0xffffff800083635c : pop rcx ; idiv bh ; jmp rbx
0xffffff800082015b : pop rcx ; imul esp, dword ptr [rdi], 0xc0854800 ; je 0xffffff800082016f ; call rax
0xffffff80003b0b51 : pop rcx ; jae 0xffffff80003b0b64 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000254401 : pop rcx ; lea rdx, [rdx + rax*8] ; jmp 0xffffff800025441e
0xffffff80004b7baf : pop rcx ; movsxd rax, dword ptr [rax] ; mov rax, rdi ; pop rbp ; ret
0xffffff80003a498f : pop rcx ; pop rax ; ret
0xffffff800038b65e : pop rcx ; pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff80007f9a10 : pop rcx ; popfq ; sbb eax, 0x358d4800 ; ret
0xffffff800025c213 : pop rcx ; ret
0xffffff80005cea47 : pop rcx ; ret 0x40
0xffffff80003724f8 : pop rcx ; ret 0x441e
0xffffff80004e879b : pop rcx ; ret 0x48ff
0xffffff800034b2e9 : pop rcx ; ret 0x60
0xffffff800034e8a3 : pop rcx ; ret 0x7a
0xffffff800036fe1a : pop rcx ; ret 0x891e
0xffffff8000775763 : pop rcx ; ret 0xbeff
0xffffff80007baf13 : pop rcx ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800030639e : pop rcx ; stc ; dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000392608
0xffffff80003fd0cb : pop rcx ; stc ; inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff80007b595c : pop rcx ; sub eax, 0x440f4800 ; ret 0x8b48
0xffffff800054ff4b : pop rcx ; test byte ptr [rax], bl ; pop rbp ; ret
0xffffff800056d6b3 : pop rcx ; xor al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065b2e1 : pop rcx ; xor eax, 0xe8c03100 ; mov ch, 0x31 ; ret
0xffffff800048d852 : pop rdi ; adc dh, dh ; ret
0xffffff80007cbd75 : pop rdi ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ret
0xffffff80002f88b9 : pop rdi ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800029f441 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35d
0xffffff80004e4df6 : pop rdi ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff8000341f03 : pop rdi ; add byte ptr [rsi + 0x210], bh ; call 0xffffff800028e159
0xffffff80004ebc46 : pop rdi ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000402d3d : pop rdi ; add dword ptr [rax + rax], -0x77 ; ret
0xffffff800027efc1 : pop rdi ; add eax, 0x5e415b00 ; pop rbp ; ret
0xffffff800077f100 : pop rdi ; and al, 0x74 ; sbb edi, edi ; ret
0xffffff800076cf58 : pop rdi ; and al, ch ; loope 0xffffff800076cfbc ; ret 0x48ff
0xffffff8000b3ead5 : pop rdi ; call rdi
0xffffff80006ebdb1 : pop rdi ; cmp byte ptr [rcx - 0x4a], al ; add esi, esi ; ret
0xffffff80008f6c82 : pop rdi ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80008629d9 : pop rdi ; ja 0xffffff8000862a06 ; jmp 0xffffff8000862a1e
0xffffff80008815e9 : pop rdi ; ja 0xffffff8000881616 ; jmp 0xffffff800088162e
0xffffff80008856f9 : pop rdi ; ja 0xffffff8000885726 ; jmp 0xffffff800088573e
0xffffff8000893e39 : pop rdi ; ja 0xffffff8000893e66 ; jmp 0xffffff8000893e7e
0xffffff800089cf79 : pop rdi ; ja 0xffffff800089cfa6 ; jmp 0xffffff800089cfbe
0xffffff80008e6cb9 : pop rdi ; ja 0xffffff80008e6ce6 ; jmp 0xffffff80008e6cfe
0xffffff800040c775 : pop rdi ; jbe 0xffffff800040c7ed ; add al, ch ; ret 0xf868
0xffffff800060de01 : pop rdi ; je 0xffffff800060ddfd ; ret
0xffffff800038b939 : pop rdi ; leave ; ret
0xffffff800029f43f : pop rdi ; mov eax, 0x5f ; cmovle eax, edx ; pop rbp ; ret
0xffffff80003992e6 : pop rdi ; mov eax, 0xe ; ret
0xffffff8000768bc4 : pop rdi ; mov edx, 0xf00003c ; xchg eax, ebp ; ret 0xca20
0xffffff800029ccbd : pop rdi ; mov esp, 0x89480003 ; ret
0xffffff800089dbd0 : pop rdi ; or byte ptr [rbx - 0x1c3efe1d], al ; or byte ptr [rcx], cl ; ret
0xffffff8000389419 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbx ; leave ; ret
0xffffff800076d424 : pop rdi ; pop rax ; mov rdi, rbx ; call 0xffffff8000392a48
0xffffff8000341f6f : pop rdi ; pop rbp ; jmp 0xffffff800028e1b4
0xffffff800055bd73 : pop rdi ; pop rbp ; jmp 0xffffff8000298034
0xffffff80004d46a5 : pop rdi ; pop rbp ; jmp 0xffffff80002a46d8
0xffffff8000298136 : pop rdi ; pop rbp ; jmp 0xffffff80002d4ef9
0xffffff800030ed3f : pop rdi ; pop rbp ; jmp 0xffffff800034e4a9
0xffffff8000766b4c : pop rdi ; pop rbp ; jmp 0xffffff80003923e5
0xffffff8000516517 : pop rdi ; pop rbp ; jmp 0xffffff8000392794
0xffffff80007677ce : pop rdi ; pop rbp ; jmp 0xffffff8000393045
0xffffff800076b7d5 : pop rdi ; pop rbp ; jmp 0xffffff800039923a
0xffffff80003db474 : pop rdi ; pop rbp ; jmp 0xffffff80003e7704
0xffffff800060a0fb : pop rdi ; pop rbp ; jmp 0xffffff8000606344
0xffffff80002ee9f5 : pop rdi ; pop rbp ; jmp 0xffffff800074ac44
0xffffff8000761ae2 : pop rdi ; pop rbp ; jmp 0xffffff800078b478
0xffffff80003ad988 : pop rdi ; pop rbp ; jmp qword ptr [rax]
0xffffff80003954a4 : pop rdi ; pop rbp ; jmp r8
0xffffff80008b8920 : pop rdi ; pop rbp ; jmp rax
0xffffff8000267825 : pop rdi ; pop rbp ; jmp rcx
0xffffff8000250375 : pop rdi ; pop rbp ; ret
0xffffff8000668a3d : pop rdi ; pop rdx ; ret 0xe9ff
0xffffff800038b65a : pop rdi ; pop rsi ; pop rbp ; pop rdx ; pop rcx ; pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff800076d3dd : pop rdi ; push rsi ; ret 0x8bff
0xffffff80003992e4 : pop rdi ; ret
0xffffff8000770c0c : pop rdi ; ret 0x41ff
0xffffff8000671b7a : pop rdi ; ret 0x48ff
0xffffff8000671b50 : pop rdi ; ret 0x4cff
0xffffff80004bd19d : pop rdi ; ret 0x63
0xffffff80002d9acd : pop rdi ; ret 0x66
0xffffff80002b47c0 : pop rdi ; ret 0x68
0xffffff800026b001 : pop rdi ; ret 0x6c
0xffffff80002595ee : pop rdi ; ret 0x6d
0xffffff800034f23d : pop rdi ; ret 0x7a
0xffffff8000541f4d : pop rdi ; ret 0xffd4
0xffffff80002c1f4d : pop rdi ; ret 0xfffc
0xffffff80006881c9 : pop rdi ; sar bh, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800079d434 : pop rdi ; sbb bh, dh ; ret
0xffffff80007914e0 : pop rdi ; sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r8 + 0x29], r9b ; ret
0xffffff80003fd0f7 : pop rdi ; stc ; push rsi ; ret
0xffffff8000832983 : pop rdi ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000651554 : pop rdi ; sub al, 0x41 ; call qword ptr [rdi]
0xffffff80003e78bb : pop rdi ; sub al, 0xf6 ; ret
0xffffff8000890cfe : pop rdi ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000668a85 : pop rdi ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800040badd : pop rdi ; xor dword ptr [rax], 0x5d ; ret
0xffffff800065ad82 : pop rdi ; xor eax, 0xe8c03100 ; adc al, 0x37 ; ret
0xffffff80007ff13d : pop rdi ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005e7da2 : pop rdx ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800061c688 : pop rdx ; add al, 0x89 ; fisubr dword ptr [rcx] ; ret 0xd285
0xffffff800053648f : pop rdx ; add al, ch ; cli ; ret 0xffe5
0xffffff80003c9ae7 : pop rdx ; add bl, ch ; or al, 0xff ; ret 0x5589
0xffffff8000534fbc : pop rdx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004b8ba5 : pop rdx ; add byte ptr [rcx], bh ; ret 0x8d0f
0xffffff80003c1e4f : pop rdx ; add byte ptr [rsi + 0x1fa], bh ; call 0xffffff800028e159
0xffffff80003c1e78 : pop rdx ; add byte ptr [rsi + 0x1fb], bh ; call 0xffffff800028e159
0xffffff80003c1e98 : pop rdx ; add byte ptr [rsi + 0x1ff], bh ; call 0xffffff800028e159
0xffffff800084891f : pop rdx ; add dword ptr [rax - 1], ecx ; ret 0xdb84
0xffffff800082078e : pop rdx ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0xffffff80002b7391 : pop rdx ; add eax, dword ptr [rax] ; add byte ptr [rax], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80005cb4a4 : pop rdx ; add eax, esi ; add al, 0x37 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0xffffff8000315a14 : pop rdx ; and byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80005ee13a : pop rdx ; cmc ; add byte ptr [r8 - 0x77], r9b ; ret
0xffffff8000652f19 : pop rdx ; enter 0x48ff, -0x77 ; ret
0xffffff80006a6192 : pop rdx ; in eax, dx ; ret 0x4cff
0xffffff80002dd397 : pop rdx ; jb 0xffffff80002dd3a3 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80007bfff0 : pop rdx ; jmp qword ptr [rcx]
0xffffff80006534f2 : pop rdx ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000866282 : pop rdx ; mov ebp, 0x8948fffa ; ret
0xffffff80006be94d : pop rdx ; mov rdi, rbx ; call rax
0xffffff800056a3e6 : pop rdx ; mov rsi, rbx ; call rax
0xffffff80003a48ce : pop rdx ; pause ; cmp dword ptr [rdi + 8], 0 ; jne 0xffffff80003a48d8 ; ret
0xffffff800038b65d : pop rdx ; pop rcx ; pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff80008b2bc2 : pop rdx ; popfq ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083bffe : pop rdx ; push qword ptr [rcx] ; inc dword ptr [rcx - 0xa] ; ret 0x7403
0xffffff800057a2e5 : pop rdx ; push rdi ; add byte ptr [r8 + 0xf], cl ; ret 0x8948
0xffffff8000566ce2 : pop rdx ; ret
0xffffff800076cf5c : pop rdx ; ret 0x48ff
0xffffff8000497611 : pop rdx ; ret 0x49
0xffffff800076cf89 : pop rdx ; ret 0x49ff
0xffffff80003708fa : pop rdx ; ret 0x5e
0xffffff8000668a3e : pop rdx ; ret 0xe9ff
0xffffff8000251ef2 : pop rdx ; ret 3
0xffffff8000339682 : pop rdx ; ret 4
0xffffff8000791111 : pop rdx ; sar bh, 0x89 ; ret
0xffffff800026c446 : pop rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff800089238f : pop rdx ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000891228 : pop rdx ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800082f70e : pop rdx ; xor byte ptr [rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008e545e : pop rsi ; adc al, 0 ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800063e923 : pop rsi ; adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80002915b4 : pop rsi ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800061c73a : pop rsi ; adc byte ptr [rcx], ch ; ret
0xffffff8000814d3d : pop rsi ; add al, 0x32 ; add byte ptr [rax], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008af6c2 : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff8000387786 : pop rsi ; add al, ch ; ret
0xffffff80004eb923 : pop rsi ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0xffffff800053455a : pop rsi ; add byte ptr [rcx + rcx*4 - 1], cl ; mov r9, r13 ; call rax
0xffffff80004ebd35 : pop rsi ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000880335 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff800048d08e : pop rsi ; and al, 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000326c5c : pop rsi ; and byte ptr [rax + 0x39], cl ; ret
0xffffff800085de6c : pop rsi ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800028fa1b : pop rsi ; and eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000565422 : pop rsi ; cld ; dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800036480b : pop rsi ; cmp al, 0x83 ; ret
0xffffff80002dcf17 : pop rsi ; jb 0xffffff80002dcf23 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80007d38b4 : pop rsi ; jmp qword ptr [rax]
0xffffff80004e4d6c : pop rsi ; jo 0xffffff80004e4d68 ; ret
0xffffff80007afd43 : pop rsi ; jo 0xffffff80007afcd8 ; sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff80003c2c9e : pop rsi ; jp 0xffffff80003c2ca4 ; dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff800048bc34 : pop rsi ; loope 0xffffff800048bc39 ; jmp rax
0xffffff800048bc40 : pop rsi ; loope 0xffffff800048bc45 ; jmp qword ptr [rdx]
0xffffff800067c2be : pop rsi ; loope 0xffffff800067c2d8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b3d75b : pop rsi ; mov edi, 0x1417bdf ; ret 0xe781
0xffffff80008173de : pop rsi ; mov edx, 0x89480001 ; ret
0xffffff8000652ade : pop rsi ; movsxd rsi, dword ptr [rip - 0x173fcf00] ; mov bh, 0xb9 ; ret
0xffffff8000452d39 : pop rsi ; or bh, bh ; ret
0xffffff80004ac850 : pop rsi ; or byte ptr [rcx + 9], al ; ret 0x8548
0xffffff8000516082 : pop rsi ; or byte ptr [rsi - 9], ah ; ret
0xffffff80008a623d : pop rsi ; out dx, eax ; sub byte ptr [rax], al ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800038941b : pop rsi ; pop r13 ; pop r12 ; pop rbx ; leave ; ret
0xffffff800038b937 : pop rsi ; pop r15 ; leave ; ret
0xffffff8000341f6d : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff800028e1b6
0xffffff800055bd71 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff8000298036
0xffffff8000766b4a : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff80003923e7
0xffffff8000516515 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff8000392796
0xffffff80007677cc : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff8000393047
0xffffff800076b7d3 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff800039923c
0xffffff80003db472 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff80003e7706
0xffffff800060a0f9 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff8000606346
0xffffff80002ee9f3 : pop rsi ; pop r15 ; pop rbp ; jmp 0xffffff800074ac46
0xffffff80003ad986 : pop rsi ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff80003954a2 : pop rsi ; pop r15 ; pop rbp ; jmp r8
0xffffff80008b891e : pop rsi ; pop r15 ; pop rbp ; jmp rax
0xffffff8000267823 : pop rsi ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250373 : pop rsi ; pop r15 ; pop rbp ; ret
0xffffff800090a8fd : pop rsi ; pop r15 ; ret
0xffffff800076b6e2 : pop rsi ; pop rbp ; jmp 0xffffff8000393045
0xffffff80008ba5be : pop rsi ; pop rbp ; jmp 0xffffff800086b828
0xffffff80008ba627 : pop rsi ; pop rbp ; jmp rax
0xffffff8000612547 : pop rsi ; pop rbp ; jmp rcx
0xffffff800038b65b : pop rsi ; pop rbp ; pop rdx ; pop rcx ; pop rbx ; pop rax ; popfq ; leave ; ret
0xffffff80002529d3 : pop rsi ; pop rbp ; ret
0xffffff8000551c36 : pop rsi ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80008946e8 : pop rsi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002bb6be : pop rsi ; push 0x158d4800 ; ret
0xffffff8000880db5 : pop rsi ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d6e23 : pop rsi ; push rsp ; mov rdi, r14 ; call 0xffffff8000393047
0xffffff8000447cba : pop rsi ; ret
0xffffff80008eb51e : pop rsi ; ret 0x24
0xffffff8000770d00 : pop rsi ; ret 0x41ff
0xffffff800076d1a1 : pop rsi ; ret 0x49ff
0xffffff800030ab4e : pop rsi ; ret 0x53
0xffffff800054c0ae : pop rsi ; ret 0x58
0xffffff8000457c8e : pop rsi ; ret 0x6b
0xffffff80006b67de : pop rsi ; ret 0xffcd
0xffffff8000641fa7 : pop rsi ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800033db7f : pop rsi ; sbb byte ptr [rcx], dh ; sal dh, cl ; ret
0xffffff800085e66e : pop rsi ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080dbfc : pop rsi ; sti ; push rdi ; ror byte ptr [rdi], 1 ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80003637dc : pop rsi ; sub al, 0x83 ; ret
0xffffff8000775740 : pop rsi ; sub byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov dh, 0x1a ; ret 0xbeff
0xffffff800025cd9d : pop rsi ; sub byte ptr [rbp - 0x76fd8a25], al ; ret
0xffffff80006d4f63 : pop rsi ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000392b4e : pop rsi ; sub dword ptr [rax], edi ; leave ; ret
0xffffff800089b63d : pop rsi ; wait ; sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800088cb3d : pop rsi ; xchg byte ptr [rdx], ch ; add byte ptr [rax + 0x5b], cl ; pop r14 ; pop rbp ; ret
0xffffff80002c5880 : pop rsi ; xor byte ptr [rax + 0x29], cl ; ret
0xffffff800088e8b0 : pop rsi ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007b9582 : pop rsi ; xor byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff800088203d : pop rsi ; xor dword ptr [rbx], ebp ; add byte ptr [rax + 0x5b], bl ; pop r14 ; pop rbp ; ret
0xffffff8000652e5a : pop rsi ; xor eax, 0xe8c03100 ; cmp al, 0xb6 ; ret
0xffffff80007c3602 : pop rsi ; xor rax, rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003b1def : pop rsp ; adc al, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e0f : pop rsp ; adc cl, byte ptr [rax + rcx*4] ; ret
0xffffff80003b1e2f : pop rsp ; adc dl, byte ptr [rax + rcx*4] ; ret
0xffffff80004f27e6 : pop rsp ; adc eax, 0x75fb3900 ; or cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff8000497d38 : pop rsp ; add al, 0 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000716941 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x8f43], al ; jmp qword ptr [rax]
0xffffff80003a341c : pop rsp ; add al, ch ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000498b8e : pop rsp ; add byte ptr [rax - 0x7d], cl ; ret 0x3110
0xffffff8000508c41 : pop rsp ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call 0xffffff80002d4ef7
0xffffff80004ebf12 : pop rsp ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff800087e543 : pop rsp ; add byte ptr es:[rcx + rcx*4 - 0x12], al ; call rax
0xffffff80002eabd0 : pop rsp ; add byte ptr fs:[rax], 0x5d ; ret
0xffffff800072db97 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x5d20314f], al ; ret
0xffffff80004dc764 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x16dfceb6], al ; ret 0xfffd
0xffffff80007961d0 : pop rsp ; add dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800077a034 : pop rsp ; add eax, -2 ; jne 0xffffff8000779fc9 ; xor eax, eax ; pop rbp ; ret
0xffffff80005ac4eb : pop rsp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005926f0 : pop rsp ; add edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c0146 : pop rsp ; add rax, rsi ; pop rbp ; ret
0xffffff8000657e9a : pop rsp ; and dh, byte ptr [rip - 0x173fcf00] ; sti ; ret
0xffffff80003ea41d : pop rsp ; call 0xffffff8000393047
0xffffff80002f016b : pop rsp ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003ec8e0 : pop rsp ; cli ; push rsi ; ret
0xffffff8000831b98 : pop rsp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000420630 : pop rsp ; imul r8d, dword ptr [r8], 0x5d ; ret
0xffffff80005fe992 : pop rsp ; jmp 0xffffff80005fe95a
0xffffff8000765380 : pop rsp ; mov rdi, r12 ; call 0xffffff80003923e7
0xffffff800076537f : pop rsp ; mov rdi, r12 ; call 0xffffff80003923e8
0xffffff80005bd450 : pop rsp ; or eax, 0xc031ffcd ; pop rbp ; ret
0xffffff8000336c23 : pop rsp ; outsd dx, dword ptr [rsi] ; add dh, dh ; ret 0x7506
0xffffff800038b933 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; leave ; ret
0xffffff8000266741 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800026781f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; jmp rcx
0xffffff8000250988 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800090a8f9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0xffffff8000516513 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp 0xffffff8000392798
0xffffff80003ad984 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp qword ptr [rax]
0xffffff80003954a0 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp r8
0xffffff80008b89bf : pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff8000250371 : pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002a1720 : pop rsp ; pop rbp ; ret
0xffffff800038941f : pop rsp ; pop rbx ; leave ; ret
0xffffff80007e2b63 : pop rsp ; popfq ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0xffffff80003ab664 : pop rsp ; push 0 ; pop rbp ; ret
0xffffff80007693e0 : pop rsp ; pushfq ; ret 0x49ff
0xffffff800036c23f : pop rsp ; ret
0xffffff80007e8510 : pop rsp ; ret 0x34
0xffffff800076d3c8 : pop rsp ; ret 0x49ff
0xffffff800076d39a : pop rsp ; ret 0x4cff
0xffffff8000803665 : pop rsp ; ret 0xeb20
0xffffff80003cd240 : pop rsp ; ret 7
0xffffff800029d637 : pop rsp ; ror byte ptr [rdx - 0xb7febe], 1 ; ret 0xc188
0xffffff80008342c0 : pop rsp ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085aa50 : pop rsp ; test al, 0xfb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a83f8 : pop rsp ; xchg bh, bh ; xor eax, eax ; pop rbp ; ret
0xffffff8000325cd0 : pop rsp ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800082f748 : pop rsp ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff80004cf13a : pop rsp ; xor eax, eax ; pop rbp ; ret
0xffffff800053e1bb : popfq ; add al, r13b ; in eax, dx ; call rsp
0xffffff800053e209 : popfq ; add al, r13b ; lahf ; call rsp
0xffffff800059fb76 : popfq ; add al, r13b ; ret 0xdf34
0xffffff800077f492 : popfq ; add bh, bh ; ret
0xffffff800029d09e : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800064bd1c : popfq ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35b8
0xffffff800063ed13 : popfq ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0xffffff800048f497 : popfq ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cb7dba8], cl ; ret
0xffffff8000805007 : popfq ; add eax, 0x89480031 ; ret
0xffffff80008eda6e : popfq ; and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ed998 : popfq ; and al, 0 ; add rax, 8 ; pop rbp ; ret
0xffffff80008edb01 : popfq ; and al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002c43a7 : popfq ; cld ; dec dword ptr [rax + 0x69] ; ret
0xffffff800086cb19 : popfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083aa49 : popfq ; cmp dh, 0xff ; inc dword ptr [rcx - 1] ; ret
0xffffff8000392ada : popfq ; cmp rdi, rdx ; jne 0xffffff8000392b21 ; leave ; ret
0xffffff80003930ff : popfq ; cmp rdi, rdx ; jne 0xffffff8000393146 ; leave ; ret
0xffffff80007390e5 : popfq ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800073aad3 : popfq ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000b4a66d : popfq ; dec dword ptr [rcx + 0x21] ; fisttp qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80008ada9f : popfq ; js 0xffffff80008ada9e ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000392ed9 : popfq ; leave ; mov rax, 1 ; ret
0xffffff800038b661 : popfq ; leave ; ret
0xffffff80008592aa : popfq ; mov bl, 0xff ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003fcb16 : popfq ; mov eax, 0x83fffffe ; ret 0x89fc
0xffffff80004c6d2f : popfq ; nop ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80004c1c63 : popfq ; or eax, 0x89440000 ; ret 0xead1
0xffffff800027603f : popfq ; ret
0xffffff8000b450ce : popfq ; ret 0x4ca2
0xffffff800076cdf1 : popfq ; ret 0x85ff
0xffffff8000844590 : popfq ; ret 0xb60f
0xffffff80002a9986 : popfq ; ret 0xbb83
0xffffff8000756d9f : popfq ; ret 0xffc3
0xffffff80005c1f0f : popfq ; ret 0xffcc
0xffffff80005115af : popfq ; ret 0xffdb
0xffffff8000311eaf : popfq ; ret 0xfff7
0xffffff8000902f8f : popfq ; ret 0xfffe
0xffffff80007f9a11 : popfq ; sbb eax, 0x358d4800 ; ret
0xffffff80004dd0ff : popfq ; shr byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000693ca9 : popfq ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80008b2bc3 : popfq ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003be30a : popfq ; sub al, 2 ; add byte ptr [rax], al ; jmp rdx
0xffffff80007e2b64 : popfq ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0xffffff80008ad368 : popfq ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff800089d188 : popfq ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff80008a98af : popfq ; xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000794c85 : popfq ; xor al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006632a9 : popfq ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800082b5f8 : popfq ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff80003924b4 : popfq ; xor eax, eax ; ret
0xffffff800039324c : popfq ; xor rax, rax ; ret
0xffffff8000491cd8 : psraw mm7, mm7 ; dec dword ptr [rdi] ; loope 0xffffff8000491ce5 ; jmp qword ptr [rsi]
0xffffff8000491cdc : psraw mm7, mm7 ; jmp qword ptr [rsi]
0xffffff800036851d : psubsb mm5, qword ptr [rbp - 0x7600000e] ; ret
0xffffff8000771554 : push -0x1076b3fc ; call 0xffffff8000393048
0xffffff8000771553 : push -0x1076b3fc ; call 0xffffff8000393049
0xffffff800065f242 : push -0x11 ; ret 0x41ff
0xffffff800036808d : push -0x118aff8e ; xor eax, eax ; pop rbp ; ret
0xffffff80005b38d4 : push -0x140031be ; ret 0x8d48
0xffffff800060c73a : push -0x16000003 ; ret
0xffffff8000756d9a : push -0x170876b4 ; popfq ; ret 0xffc3
0xffffff80006a2074 : push -0x172076b8 ; ret
0xffffff80002c1f48 : push -0x173fcf00 ; pop rdi ; ret 0xfffc
0xffffff8000801de6 : push -0x18000000 ; push rcx ; ret
0xffffff80006a0fd2 : push -0x1a3ebeff ; add ecx, dword ptr [rdi] ; mov dh, 0x8f ; ret
0xffffff800057bcc8 : push -0x1f ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff8000511f0a : push -0x24 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007652d2 : push -0x29 ; ret 0x48ff
0xffffff80005dd29c : push -0x31 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000641ec0 : push -0x37 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763b7d : push -0x378274b8 ; call 0xffffff80003923e8
0xffffff8000369df1 : push -0x3fcef977 ; pop rbp ; ret
0xffffff800050cedb : push -0x3fcf0000 ; pop rbp ; ret
0xffffff8000876c81 : push -0x47c58c00 ; ret 2
0xffffff80008cf697 : push -0x47c78cc7 ; ret 2
0xffffff800039271b : push -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff80005509c5 : push -0x48 ; add dword ptr [rax], esp ; ret 0x2304
0xffffff80007a2a55 : push -0x50e9a18 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000767f93 : push -0x5a17ffc9 ; stosb byte ptr [rdi], al ; ret 0x8bff
0xffffff80004739d2 : push -0x5cf0fe4d ; ret 0xb72
0xffffff8000251eac : push -0x6317ff91 ; ret 3
0xffffff80008555fc : push -0x75 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004d2914 : push -0x760000bd ; ret
0xffffff800075b564 : push -0x760028e8 ; ret
0xffffff80008b8694 : push -0x76005a2b ; ret
0xffffff800046d2bf : push -0x762676b8 ; ret
0xffffff800032618d : push -0x76b3ff83 ; ret
0xffffff8000291573 : push -0x76b70002 ; ret
0xffffff8000697150 : push -0x76b70003 ; ret 0x8b49
0xffffff800030d3cf : push -0x76b70004 ; ret
0xffffff800026d3b6 : push -0x76b7fffa ; ret
0xffffff80003e24ec : push -0x76befffa ; ret
0xffffff80004531a4 : push -0x76ffb53f ; ret
0xffffff80006b4124 : push -0x76ffee2a ; ret
0xffffff80003dba34 : push -0x76fff90a ; ret
0xffffff80004cc814 : push -0x76fffd03 ; ret
0xffffff80007d8e64 : push -0x76fffead ; ret
0xffffff800040a734 : push -0x76ffff8f ; ret
0xffffff8000532785 : push -0x76fffffd ; ret
0xffffff80003b2ef4 : push -0x76fffffe ; ret 0x8b48
0xffffff80005284ac : push -0x76ffffff ; ret
0xffffff80005340dd : push -0x77 ; ret
0xffffff8000434953 : push -0x7c000004 ; ret 0x89f8
0xffffff8000504ae6 : push -0x7ceb173f ; loopne 0xffffff8000504af6 ; pop rbp ; ret
0xffffff8000504ae5 : push -0x7ceb173f ; loopne 0xffffff8000504af7 ; pop rbp ; ret
0xffffff800075acd2 : push -0x7d ; ret
0xffffff80002b1121 : push -0x7efb7500 ; pop rbp ; ret
0xffffff80006d636f : push -0x7ff9b080 ; pop rbp ; ret
0xffffff800077332d : push -0x8fffffd ; ret 0
0xffffff8000610212 : push -0x8ffffff ; ret
0xffffff8000586b05 : push -0x8ffffff ; ret 0
0xffffff800074bff2 : push -0x9000001 ; ret 0x7404
0xffffff80008deb17 : push -0x9fffffe ; ret
0xffffff80007fb0d6 : push -0xb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bafb2 : push -0xc ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000746b26 : push -0xf176bf ; ret
0xffffff8000824775 : push -0xffffff ; ret
0xffffff800050e032 : push -1 ; sti ; push rsi ; ret
0xffffff800030d25f : push -4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000341e6a : push -7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048c5da : push 0 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000666ecf : push 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8d8b
0xffffff80003acfd3 : push 0 ; call qword ptr [rax]
0xffffff80003a703d : push 0 ; mov qword ptr [rip + 0x75878a], rax ; call qword ptr [rax]
0xffffff800035da38 : push 0 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000391159 : push 0 ; pop rbp ; ret
0xffffff8000341eed : push 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d0419 : push 0x1170e95d ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000693e51 : push 0x148ffd0 ; ret
0xffffff80002b4f98 : push 0x158d4800 ; lodsd eax, dword ptr [rsi] ; ret 0x68
0xffffff80002bb6bf : push 0x158d4800 ; ret
0xffffff80002b4fb5 : push 0x158d4800 ; ret 0x68
0xffffff80002b99aa : push 0x158d4800 ; ret 0x73d2
0xffffff80008606f5 : push 0x20000003 ; ret
0xffffff80005158f8 : push 0x27 ; add byte ptr [rax + 0x16], bh ; pop rbp ; ret
0xffffff80005129cd : push 0x29e28944 ; ret 0x448d
0xffffff80007bd898 : push 0x29ffffff ; ret 0x8941
0xffffff8000333011 : push 0x2bf007c ; add byte ptr [rax], al ; add al, ch ; ret 0xf68c
0xffffff80004eb2d2 : push 0x2e ; ret 0xc7ff
0xffffff8000310542 : push 0x37 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a567a : push 0x39c3ff00 ; ret
0xffffff8000251f0f : push 0x39e8006f ; ret 3
0xffffff8000854770 : push 0x39fffffc ; ret
0xffffff8000855a31 : push 0x39ffffff ; ret
0xffffff80007075f2 : push 0x3a ; fdiv st(7), st(0) ; xor eax, eax ; pop rbp ; ret
0xffffff8000439798 : push 0x3b9 ; add cl, ch ; ret 5
0xffffff800069da4b : push 0x3d ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80002af4be : push 0x415b0575 ; pop rsi ; pop rbp ; ret
0xffffff8000831e9b : push 0x415bffb6 ; pop rsi ; pop rbp ; ret
0xffffff80003ae68b : push 0x415bfff2 ; pop rsi ; pop rbp ; ret
0xffffff80002eae25 : push 0x415e415b ; pop rdi ; pop rbp ; ret
0xffffff8000489491 : push 0x41ffffff ; call qword ptr [rdi]
0xffffff80006a588a : push 0x43 ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call 0xffffff80002d4ef9
0xffffff8000801e7b : push 0x48000000 ; mov edi, ebx ; call 0xffffff800010e149
0xffffff800056f6c4 : push 0x48000000 ; mov edi, ebx ; call rax
0xffffff800039f794 : push 0x48b4800 ; ret 0x8b44
0xffffff800025ce5e : push 0x48fffc37 ; test eax, eax ; je 0xffffff800025ce79 ; call rax
0xffffff80002dfa3e : push 0x48ffffa2 ; test eax, eax ; je 0xffffff80002dfa59 ; call rax
0xffffff8000574b8e : push 0x4c000000 ; mov edi, ebp ; call rax
0xffffff800076ac93 : push 0x4f0fd039 ; ret 0xc085
0xffffff8000658a32 : push 0x5a ; ret
0xffffff8000251eee : push 0x5ae8006f ; ret 3
0xffffff800082bba1 : push 0x5b000001 ; pop r14 ; pop rbp ; ret
0xffffff80004fa647 : push 0x5d ; ret
0xffffff80003a308c : push 0x5d000001 ; ret
0xffffff8000622df5 : push 0x5d000002 ; ret
0xffffff80002c095e : push 0x5d000003 ; ret
0xffffff80002a174a : push 0x5d000008 ; ret
0xffffff80005eaf06 : push 0x5d01e083 ; ret
0xffffff80007d4ede : push 0x5d5e415b ; ret
0xffffff80008a3276 : push 0x5dc03101 ; ret
0xffffff80007f01de : push 0x5dd68948 ; jmp rax
0xffffff80008a7585 : push 0x5dd7894c ; jmp rax
0xffffff80008404cf : push 0x60418948 ; xor eax, eax ; pop rbp ; ret
0xffffff800078bf12 : push 0x65 ; mov bl, 0xff ; jmp 0xffffff800078be7d
0xffffff8000667342 : push 0x6e ; ret 0x66ff
0xffffff80002dc217 : push 0x72 ; add byte ptr [rax - 0x75], cl ; shr dword ptr [rax], 0x5d ; ret
0xffffff800076b6d2 : push 0x73 ; ret 0x80ff
0xffffff80008f278f : push 0x74c98548 ; fisttp dword ptr [rcx + rcx*4 - 9] ; call rcx
0xffffff80008f2737 : push 0x74c98548 ; or ecx, dword ptr [rcx + rcx*4 - 9] ; call rcx
0xffffff80003c5cb2 : push 0x75 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003b912f : push 0x75ffffff ; jg 0xffffff80003b9126 ; ret
0xffffff8000803dfd : push 0x7a358d48 ; call qword ptr [rdx]
0xffffff8000251ecd : push 0x7be8006f ; ret 3
0xffffff800028a717 : push 0x7c ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007e9042 : push 0x7c ; lodsb al, byte ptr [rsi] ; inc dword ptr [rbx + 0x440f30f8] ; ret
0xffffff800079bdff : push 0x7e850f08 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000508290 : push 0x84e8b48 ; sub eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff8000751edd : push 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff80005c78f3 : push 0xf48db85 ; ret 0x8b48
0xffffff80002fe946 : push bx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d7606 : push cx ; jne 0xffffff80002d7613 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003b1867 : push qword ptr [rax + rax + 3] ; jne 0xffffff80003b1876 ; pop rbp ; ret
0xffffff800076d8d0 : push qword ptr [rax + rbx + 0x4c] ; mov edi, edi ; call 0xffffff8000392939
0xffffff800059e7d5 : push qword ptr [rax + rbx - 0xa] ; ret 0x7480
0xffffff8000359276 : push qword ptr [rax + rcx + 0x31] ; leave ; pop rbp ; jmp 0xffffff8000315578
0xffffff800054bf96 : push qword ptr [rax + rcx + 0x31] ; test byte ptr [rax - 0x77], 0xdf ; call r15
0xffffff8000619098 : push qword ptr [rax + rcx + 0x4c] ; mov edi, esp ; mov rsi, r14 ; call rax
0xffffff80007f16c7 : push qword ptr [rax + rdi*8 - 1] ; call rax
0xffffff800043a8b6 : push qword ptr [rax + rdx - 0x18] ; ret 0xffc9
0xffffff80008be589 : push qword ptr [rax + rdx - 0x48] ; ret 2
0xffffff800029b429 : push qword ptr [rax + rdx - 0xa] ; ret
0xffffff80008e773e : push qword ptr [rax - 0x3b7cb7ff] ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80003262ef : push qword ptr [rbp + 0x2e] ; jmp 0xffffff8000326533
0xffffff8000726556 : push qword ptr [rbp + 0x32] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072722b : push qword ptr [rbp + 0x34] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800088f9cd : push qword ptr [rbp + 0x35] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800036a2e3 : push qword ptr [rbp + 0x37] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000893490 : push qword ptr [rbp + 0x37] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000389677 : push qword ptr [rbp + 0x37] ; call qword ptr [rax]
0xffffff80003c0b2d : push qword ptr [rbp + 0x37] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029f39b : push qword ptr [rbp + 0x41] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800028ef5d : push qword ptr [rbp + 2] ; pop rbp ; ret
0xffffff800028f069 : push qword ptr [rbp + 4] ; xor eax, eax ; pop rbp ; ret
0xffffff80003a9a5c : push qword ptr [rbp + 7] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800034366c : push qword ptr [rbp + rax + 0x39] ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff800050fc63 : push qword ptr [rbp + rax + 0x39] ; ror byte ptr [rdi], 1 ; ret 0xc35d
0xffffff80002b762b : push qword ptr [rbp + rax + 0x48] ; mov dword ptr [rdx], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80003952c7 : push qword ptr [rbp + rax + 0xf] ; mov esp, 0x5dc0ffc7 ; ret
0xffffff80003a2fc9 : push qword ptr [rbp + rax - 0x10] ; inc dword ptr [rcx] ; pop rbp ; ret
0xffffff800062d3f6 : push qword ptr [rbp + rax - 0x18] ; ret 0xf074
0xffffff800071c0e2 : push qword ptr [rbp + rax - 0x77] ; jno 0xffffff800071c135 ; xor eax, eax ; pop rbp ; ret
0xffffff800075db4f : push qword ptr [rbp + rax*8 - 1] ; call qword ptr [rdx]
0xffffff800080fe64 : push qword ptr [rbp - 0x17] ; pop rbp ; ret
0xffffff800051354a : push qword ptr [rbp - 0x1d] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800079db4e : push qword ptr [rbp - 0x21] ; pop rbp ; ret
0xffffff80007b8808 : push qword ptr [rbp - 0xb] ; pop rbp ; ret
0xffffff80004692fb : push qword ptr [rbp - 0xe] ; jmp 0xffffff80004692c7
0xffffff80007a965c : push qword ptr [rbp - 0xf] ; pop rbp ; ret
0xffffff8000273b87 : push qword ptr [rbx + rax + 0x48] ; mov dword ptr [rdi], esi ; pop rbp ; ret
0xffffff80007837db : push qword ptr [rbx + rax - 0x75] ; adc al, 0x5d ; ret
0xffffff8000756ac8 : push qword ptr [rbx + rax - 0x75] ; or al, 0x5d ; ret
0xffffff800031f22b : push qword ptr [rbx + rax - 0x75] ; pop rbp ; ret
0xffffff800078c9db : push qword ptr [rbx + rax - 0x75] ; sbb al, 0x5d ; ret
0xffffff80006eab25 : push qword ptr [rbx + rbp*2 - 0x77] ; ret 0xca29
0xffffff80004616e2 : push qword ptr [rbx + rbp*8 - 0x15] ; mov bh, 0xff ; ret
0xffffff8000563ba8 : push qword ptr [rbx + rcx - 0x48] ; call qword ptr [rax]
0xffffff800068d7ce : push qword ptr [rbx + rdx + 0x31] ; imul al ; cwde ; ret
0xffffff80006784fe : push qword ptr [rbx] ; pop rbp ; ror byte ptr [rax + 0x69], 1 ; ret
0xffffff8000437831 : push qword ptr [rcx + rbx - 0x7d] ; jmp qword ptr [rax]
0xffffff800055720c : push qword ptr [rcx + rdx - 0x77] ; ret
0xffffff80008534fd : push qword ptr [rcx - 0x4c] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800028bc79 : push qword ptr [rcx - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000409200 : push qword ptr [rcx] ; div byte ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80003aefcb : push qword ptr [rcx] ; div byte ptr [rcx] ; sal byte ptr [rcx], cl ; leave ; pop rbp ; jmp rax
0xffffff80002fb3a4 : push qword ptr [rcx] ; div byte ptr [rcx] ; shr al, cl ; ret 0xfaa4
0xffffff800080d9f2 : push qword ptr [rcx] ; div dh ; ret
0xffffff80004872cf : push qword ptr [rcx] ; div dh ; ret 0x7401
0xffffff800039367c : push qword ptr [rcx] ; fcomi st(6) ; ret 0xbe03
0xffffff80003919df : push qword ptr [rcx] ; fild dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff8000526fc3 : push qword ptr [rcx] ; fild dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80004f9b25 : push qword ptr [rcx] ; fisttp dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800039f0cf : push qword ptr [rcx] ; idiv bh ; push rax ; or byte ptr [rax - 0x39], cl ; ret
0xffffff800083bfff : push qword ptr [rcx] ; inc dword ptr [rcx - 0xa] ; ret 0x7403
0xffffff80003eee08 : push qword ptr [rcx] ; leave ; mov rdi, rbx ; call 0xffffff800044b0a8
0xffffff8000298403 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80005720c8 : push qword ptr [rcx] ; rol byte ptr [rcx - 0x7d], 0xff ; add dword ptr [rdi], ecx ; ret 0x518d
0xffffff80007e263c : push qword ptr [rcx] ; rol byte ptr [rcx - 0xa], cl ; ret 0x7403
0xffffff8000499e04 : push qword ptr [rcx] ; ror byte ptr [rax + 0x29], cl ; ret 0x8348
0xffffff8000799c37 : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], cl ; jne 0xffffff8000799bdd ; call rcx
0xffffff800025d09b : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000484886 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800079fe73 : push qword ptr [rcx] ; ror byte ptr [rcx + 0x63488455], cl ; ret 0xc148
0xffffff800055225d : push qword ptr [rcx] ; shr al, 0x3b ; ret 0xffd3
0xffffff800065fcaa : push qword ptr [rcx] ; shr al, 0x9e ; jmp 0xffffff800065fc7a
0xffffff80005721c3 : push qword ptr [rcx] ; shr al, 0xd5 ; ret 0xffd1
0xffffff80006bccce : push qword ptr [rcx] ; shr al, cl ; stosb byte ptr [rdi], al ; ret
0xffffff8000483d52 : push qword ptr [rcx] ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8548
0xffffff80007d0fde : push qword ptr [rcx] ; test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rcx
0xffffff800069d002 : push qword ptr [rcx] ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0xffffff80006ded07 : push qword ptr [rdi + rax + 0x31] ; imul al ; jmp rsi
0xffffff8000721070 : push qword ptr [rdi + rax + 0x31] ; imul al ; xchg eax, esi ; ret
0xffffff8000767b76 : push qword ptr [rdi + rax - 0x18] ; ret 0xc2ae
0xffffff800080c703 : push qword ptr [rdi + rbx*8 - 1] ; jmp rbp
0xffffff800029b1ff : push qword ptr [rdi + rcx - 0xa] ; ret
0xffffff8000491bcb : push qword ptr [rdi + rdi*4 - 1] ; jmp qword ptr [rax]
0xffffff8000491bc7 : push qword ptr [rdi + rdi*4 - 1] ; push qword ptr [rdi + rdi*4 - 1] ; jmp qword ptr [rax]
0xffffff8000b4b513 : push qword ptr [rdi + rsi*2 - 1] ; jmp rsi
0xffffff800088504d : push qword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b1e7e : push qword ptr [rdx + rax + 0x31] ; leave ; mov eax, ecx ; pop rbp ; ret
0xffffff80008035d4 : push qword ptr [rdx + rax + 0x5d] ; ret
0xffffff80006b25a4 : push qword ptr [rdx + rbx + 0x31] ; imul al ; ret 0xe775
0xffffff800077dcb1 : push qword ptr [rdx + rcx - 0x46] ; add byte ptr [rax], al ; add al, ch ; ret 0x9903
0xffffff80008d36bd : push qword ptr [rdx] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073724b : push qword ptr [rdx] ; xchg bh, bh ; jmp rsp
0xffffff80003aa152 : push qword ptr [rsi + rax + 0x4c] ; mov edi, esi ; call r15
0xffffff80003386db : push qword ptr [rsi + rax*2 - 0x7f] ; ret 0x380
0xffffff8000430956 : push qword ptr [rsi + rsi - 0x77] ; ret
0xffffff8000b4b4a7 : push qword ptr [rsi] ; mov edi, edi ; call qword ptr [rdi]
0xffffff800036a2b7 : push qword ptr [rsp + rax + 0x39] ; ret
0xffffff800078c9c6 : push qword ptr [rsp + rax + 0x48] ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff800078c956 : push qword ptr [rsp + rax + 0x48] ; mov dword ptr [rdi + 0x20], esi ; pop rbp ; ret
0xffffff80005630d8 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005630f8 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff800078c5a8 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff8000565848 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80005659f8 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80002c09d8 : push qword ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80007742f5 : push qword ptr [rsp + rax - 0x77] ; clc ; pop rbp ; ret
0xffffff800074d39a : push qword ptr [rsp + rax - 0x77] ; ret
0xffffff800048fcdb : push qword ptr [rsp + rcx - 0x7c] ; sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0xffffff800033d861 : push qword ptr [rsp + rdx - 1] ; ret 0x8b41
0xffffff800078d9eb : push r10 ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000289ecf : push r11 ; adc dword ptr [rax], eax ; pop rbp ; ret
0xffffff80004c1e66 : push r11 ; add r8b, bpl ; ret
0xffffff80002768a9 : push r12 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800059f471 : push r12 ; je 0xffffff800059f47c ; pop rbp ; ret
0xffffff800075d4e5 : push r12 ; ret
0xffffff80007f6f48 : push r12 ; setg al ; movzx eax, al ; pop rbp ; ret
0xffffff8000574428 : push r14 ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret
0xffffff80005e530c : push r14 ; cmp eax, dword ptr [rax] ; jmp 0xffffff80005e52d9
0xffffff800061f2a8 : push r14 ; ret
0xffffff8000259a83 : push r14 ; ret 0x7401
0xffffff800057a2fd : push r15 ; add byte ptr [r8 + 0xf], cl ; ret 0x8948
0xffffff8000797500 : push r8 ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007f71a3 : push r8 ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff8000342176 : push r8 ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff8000342186 : push r8 ; pop rbp ; ret
0xffffff80004fa426 : push r8 ; shr eax, 0xc ; and eax, 1 ; pop rbp ; ret
0xffffff80003a296d : push r8 ; test rcx, rcx ; je 0xffffff80003a297d ; call rcx
0xffffff800086dfad : push r8 ; test rcx, rcx ; je 0xffffff800086dfbd ; call rcx
0xffffff80008202b3 : push r8 ; xor dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b4110 : push r8 ; xor eax, eax ; pop rbp ; ret
0xffffff80008d64b5 : push rax ; adc al, byte ptr [rax] ; mov rdi, r14 ; call rax
0xffffff80002a1f67 : push rax ; adc bh, al ; add eax, 0x84a661 ; push rax ; ret
0xffffff80004b5bf6 : push rax ; adc byte ptr [rax - 0x77], cl ; push rcx ; sbb bl, ch ; ret 0x8a41
0xffffff80003cf34a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0xffffff8000500b90 : push rax ; adc byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff800032762b : push rax ; adc dh, dh ; ret 0xf01
0xffffff8000550948 : push rax ; add al, 0 ; add byte ptr [rbp + rcx*4 - 0x4c], cl ; ret
0xffffff8000452d33 : push rax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; pop rsi ; or bh, bh ; ret
0xffffff8000629f77 : push rax ; add al, ch ; ret 0xd68a
0xffffff80005c9a66 : push rax ; add byte ptr [rax - 0x77], cl ; ret 0x70e8
0xffffff80005d8363 : push rax ; add byte ptr [rax - 0x77], cl ; ret 0x73e8
0xffffff8000389469 : push rax ; add byte ptr [rax], al ; add bl, cl ; call rdi
0xffffff800063ddef : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff80004b28d2 : push rax ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, cl ; ret
0xffffff80005d62ec : push rax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0xffffff8000616226 : push rax ; add byte ptr [rcx], bh ; ret
0xffffff800061bd91 : push rax ; add byte ptr [rcx], ch ; ret 0xca39
0xffffff8000546a80 : push rax ; add byte ptr [rcx], r14b ; rol byte ptr [rcx + rcx*4 - 0x17], 0xe8 ; ret
0xffffff8000421820 : push rax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x844
0xffffff80005d659c : push rax ; add byte ptr [rsi + 2], bh ; call 0xffffff80003928a9
0xffffff800076efb2 : push rax ; add dword ptr [rax - 0x77], ecx ; ret 0x6eb
0xffffff80004e4ea6 : push rax ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ecx ; xchg eax, edx ; ret 0x41ff
0xffffff80008bf860 : push rax ; add dword ptr [rax], eax ; add bl, ch ; sbb eax, dword ptr [rcx - 0x42] ; ret 2
0xffffff800087faca : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0xffffff8000733faf : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800072dac6 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x5d04344f], al ; ret
0xffffff800065d25e : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff8000670f35 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; call rcx
0xffffff800081a7a0 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800038dcf3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008123b1 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff80008b2358 : push rax ; add dword ptr [rcx + rcx*4 - 0x11], ecx ; mov rsi, r14 ; call r12
0xffffff80006f84ad : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800072e6be : push rax ; add eax, dword ptr [rax] ; add cl, ch ; ret 0
0xffffff80003897b6 : push rax ; add ecx, ebp ; ret
0xffffff80007f00ff : push rax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049a51b : push rax ; and byte ptr [rax + 1], cl ; ret 0x708b
0xffffff8000497ba1 : push rax ; and byte ptr [rax + 1], cl ; ret 0x8949
0xffffff8000832d0c : push rax ; and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000503d72 : push rax ; and byte ptr [rax - 0x7d], cl ; ret 0xbee0
0xffffff8000815070 : push rax ; and byte ptr [rcx], dh ; leave ; call 0xffffff80008c12a6
0xffffff80005be95b : push rax ; and dh, dh ; ret 0xf01
0xffffff800064195c : push rax ; and ecx, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000840418 : push rax ; call rcx
0xffffff800088cf9c : push rax ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002baa1d : push rax ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073790d : push rax ; cmp al, byte ptr [rax] ; call 0xffffff80003924d9
0xffffff80008da9fe : push rax ; cmp bh, bh ; ret
0xffffff800080ed77 : push rax ; cmp byte ptr [rax - 0x77], cl ; ret
0xffffff8000811479 : push rax ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff8000827df2 : push rax ; cmp byte ptr [rbp + rcx*4 + 0x25], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff8000568534 : push rax ; dec dword ptr [rip + 0x570134] ; pop rbp ; ret
0xffffff80002ba6cc : push rax ; hlt ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073a3cc : push rax ; in eax, 0xb9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003a48a0 : push rax ; inc dword ptr [rdx - 0xffd8] ; leave ; ret
0xffffff800062ee48 : push rax ; inc dword ptr [rip + 0x441260] ; pop rbp ; ret
0xffffff800043efb1 : push rax ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff80006fc410 : push rax ; je 0xffffff80006fc429 ; retf 0x8941 ; push rsp ; sysenter
0xffffff80006fc7ab : push rax ; je 0xffffff80006fc7c4 ; retf 0x8941 ; push rsp ; sysenter
0xffffff8000623013 : push rax ; jmp qword ptr [rcx]
0xffffff80007c6e1d : push rax ; jne 0xffffff80007c6e28 ; xor eax, eax ; pop rbp ; ret
0xffffff80007d8e42 : push rax ; jo 0xffffff80007d8dd1 ; ret
0xffffff80007eedb3 : push rax ; jo 0xffffff80007eed42 ; ret
0xffffff800057f2fb : push rax ; js 0xffffff800057f2f7 ; ret 0xf01
0xffffff800057f6f9 : push rax ; js 0xffffff800057f75c ; ret
0xffffff8000273d1c : push rax ; lock add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0xffffff80003711b3 : push rax ; loope 0xffffff800037118d ; ret
0xffffff800072d7cc : push rax ; mov cl, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003894f7 : push rax ; mov dword ptr [r9], 1 ; pop rbp ; ret
0xffffff8000797501 : push rax ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007f71a4 : push rax ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002f7ce4 : push rax ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff8000342177 : push rax ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff8000900b13 : push rax ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff80008808b1 : push rax ; mov rsi, qword ptr [rbx + 0x58] ; call rax
0xffffff8000842341 : push rax ; mov rsi, rax ; call rcx
0xffffff80008daffa : push rax ; or al, 0xf6 ; ret 0x7401
0xffffff80005b0f87 : push rax ; or bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff800085560a : push rax ; or byte ptr [rax + 0x69], cl ; ret 0xca00
0xffffff800075e3fe : push rax ; or byte ptr [rax + 1], cl ; ret 0x8948
0xffffff800039f0d3 : push rax ; or byte ptr [rax - 0x39], cl ; ret
0xffffff80008d19b3 : push rax ; or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000500b53 : push rax ; or byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff8000327e20 : push rax ; or cl, ch ; ret
0xffffff800060908e : push rax ; or dword ptr [rax - 0x77], ecx ; fild word ptr [rcx + rcx*4 - 0xa] ; call r15
0xffffff8000808c69 : push rax ; or esi, esi ; ret 0x7502
0xffffff80002db35b : push rax ; pop rbp ; ret
0xffffff800026770c : push rax ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800025bac3 : push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800046d2be : push rax ; push -0x762676b8 ; ret
0xffffff800039071d : push rax ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000439a97 : push rax ; push rbx ; add al, ch ; mov cl, 0x32 ; add byte ptr ss:[rcx], ch ; ret
0xffffff8000b4a4a1 : push rax ; push rcx ; ret 0x8a41
0xffffff80002a1f6f : push rax ; ret
0xffffff800076da10 : push rax ; ret 0x41ff
0xffffff800076e016 : push rax ; ret 0x45ff
0xffffff800076d8d8 : push rax ; ret 0x4cff
0xffffff800032d5f4 : push rax ; ret 0x7c
0xffffff800057224c : push rax ; ret 0xffd1
0xffffff800081250c : push rax ; ret 0xffff
0xffffff800065eb7d : push rax ; sal dword ptr [rax + rax], cl ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000781b16 : push rax ; sar edi, 0x89 ; ret
0xffffff8000569767 : push rax ; sar edi, cl ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff800082a21f : push rax ; sbb al, 0 ; xor eax, eax ; mov rbx, r10 ; call rbx
0xffffff800039eff7 : push rax ; sbb al, 0x89 ; push rcx ; sbb al, 0x5d ; ret
0xffffff8000328996 : push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0xffffff8000746b22 : push rax ; sbb byte ptr [rbx], al ; push -0xf176bf ; ret
0xffffff8000657833 : push rax ; sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006b8dac : push rax ; sbb esi, ecx ; dec dword ptr [rax + 1] ; ret
0xffffff8000589e92 : push rax ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80004fa427 : push rax ; shr eax, 0xc ; and eax, 1 ; pop rbp ; ret
0xffffff8000833844 : push rax ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081c5d8 : push rax ; sub bh, bh ; ret
0xffffff8000824bac : push rax ; sub byte ptr [rax + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80008be3b0 : push rax ; sub byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff800085decd : push rax ; sub byte ptr [rax + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086b319 : push rax ; sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800087a4ce : push rax ; sub byte ptr [rax - 0x7d], cl ; ret
0xffffff8000812b70 : push rax ; sub byte ptr [rax - 1], cl ; ret
0xffffff80008bb217 : push rax ; sub byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx - 0x44] ; ret 2
0xffffff800081addd : push rax ; sub byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff8000837ecb : push rax ; sub byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008173be : push rax ; sub byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086db58 : push rax ; sub byte ptr [rcx - 0x42], al ; ret 2
0xffffff800087730d : push rax ; sub dh, dh ; ret
0xffffff80005b124b : push rax ; sub dh, dh ; ret 0xf01
0xffffff80006a027a : push rax ; sysenter
0xffffff800052f84c : push rax ; test eax, 0x89480024 ; ret
0xffffff80003a2fc7 : push rax ; test edi, edi ; je 0xffffff80003a2fda ; lock inc dword ptr [rcx] ; pop rbp ; ret
0xffffff80003a296e : push rax ; test rcx, rcx ; je 0xffffff80003a297c ; call rcx
0xffffff800086dfae : push rax ; test rcx, rcx ; je 0xffffff800086dfbc ; call rcx
0xffffff80008f29b7 : push rax ; test rcx, rcx ; je 0xffffff80008f29d1 ; mov rdi, r14 ; call rcx
0xffffff80008f2a0f : push rax ; test rcx, rcx ; je 0xffffff80008f29f9 ; mov rdi, r14 ; call rcx
0xffffff800080e0e5 : push rax ; xadd byte ptr [rdi], al ; movsx eax, al ; pop rbp ; ret
0xffffff800080df98 : push rax ; xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff8000812914 : push rax ; xor byte ptr [rax + rax*8 - 0xb7d68c], al ; ret
0xffffff80002a83d7 : push rax ; xor byte ptr [rax - 0x77], cl ; ret
0xffffff800061375c : push rax ; xor dh, dh ; ret 0x7404
0xffffff80002f8598 : push rax ; xor dword ptr [rax - 0x1f3eb800], eax ; or al, 0x5d ; ret
0xffffff80008202b4 : push rax ; xor dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b4111 : push rax ; xor eax, eax ; pop rbp ; ret
0xffffff80008112fa : push rax ; xor esi, esi ; pop rbp ; jmp rax
0xffffff80002c55b6 : push rbp ; adc dh, dh ; ret 0x4820
0xffffff80004c8d4c : push rbp ; add al, 0xf6 ; ret 0x7540
0xffffff800050f22a : push rbp ; add al, ch ; outsd dx, dword ptr [rsi] ; mov ebp, 0x8948ffd8 ; ret 0x8948
0xffffff800038e0c6 : push rbp ; add al, ch ; ret
0xffffff8000390053 : push rbp ; add bh, bh ; ret
0xffffff80007c9d22 : push rbp ; add bh, dh ; ret 0xff3d
0xffffff8000579219 : push rbp ; add byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff8000289b72 : push rbp ; add byte ptr [rax + 0x69], cl ; ret 0xca00
0xffffff800035d4af : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800057b618 : push rbp ; add byte ptr [rax - 0x77], cl ; ret 0xbee8
0xffffff80003c7d13 : push rbp ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003a1e1d : push rbp ; add byte ptr [rax - 0x7f], cl ; ret 0x22c
0xffffff80007336df : push rbp ; add byte ptr [rax], al ; jmp 0xffffff800072f9ac
0xffffff800050f40d : push rbp ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; pop rbp ; ret
0xffffff8000563338 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; out 0xff, eax ; jmp rcx
0xffffff8000609602 : push rbp ; add esi, esi ; ret 0xf0f
0xffffff800028d8b0 : push rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007107b7 : push rbp ; and al, ch ; ret 0x9fd8
0xffffff80006986a7 : push rbp ; and al, dl ; dec dword ptr [rax + 1] ; ret
0xffffff80004210a3 : push rbp ; and dh, dh ; ret 0x4d02
0xffffff80005fdcc7 : push rbp ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800046a0ab : push rbp ; call qword ptr [rdi]
0xffffff80007596e7 : push rbp ; cdq ; ret
0xffffff800039131a : push rbp ; clc ; add rsp, 8 ; pop rbp ; ret
0xffffff80005c0247 : push rbp ; cmp bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007597e7 : push rbp ; cwde ; ret
0xffffff80007f1c06 : push rbp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800037f9a4 : push rbp ; enter -0x2f77, -0x7f ; ret 0x200
0xffffff800075e30b : push rbp ; enter 0x1ee8, 0x46 ; ret
0xffffff80003724a4 : push rbp ; enter 0x3344, 0x55 ; rol byte ptr [rcx - 0x2f], 1 ; ret 0x8944
0xffffff8000908c60 : push rbp ; enter 0x4d8b, -0x2c ; call rbx
0xffffff80008f4e1f : push rbp ; enter 0x4d8b, -0x34 ; call rbx
0xffffff80008ecdc5 : push rbp ; enter 0xf48, -0x5d ; ret 0x820f
0xffffff8000784367 : push rbp ; fdivr st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000489962 : push rbp ; fmul dword ptr [rcx + rcx*4 - 0xa] ; call 0xffffff8000495bc7
0xffffff800060e6dd : push rbp ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005433f8 : push rbp ; idiv edi ; call rcx
0xffffff8000369e37 : push rbp ; jbe 0xffffff8000369e3e ; pop rbp ; ret
0xffffff8000673673 : push rbp ; jbe 0xffffff80006736b2 ; ret 0x840f
0xffffff800074809f : push rbp ; jl 0xffffff80007480e6 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002ffcd7 : push rbp ; jle 0xffffff80002ffd62 ; add byte ptr [rcx + 0x5d14ca44], cl ; ret
0xffffff80006e0ef7 : push rbp ; jnp 0xffffff80006e0ee1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000422617 : push rbp ; js 0xffffff8000422629 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002938e7 : push rbp ; loopne 0xffffff800029393b ; mov esi, edi ; call qword ptr [rax]
0xffffff8000822679 : push rbp ; mov al, 0x89 ; ret
0xffffff80003172c4 : push rbp ; mov al, 0xf ; xchg eax, esp ; ret
0xffffff8000419d80 : push rbp ; mov byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000445fb7
0xffffff80003c56bf : push rbp ; mov byte ptr [rcx - 0x77], al ; ret 0xb60f
0xffffff80003c574b : push rbp ; mov byte ptr [rcx], bh ; fmul dword ptr [rdi] ; ret
0xffffff800036f9c3 : push rbp ; mov eax, 0x89d70144 ; rol ecx, cl ; ret
0xffffff8000796200 : push rbp ; mov rbp, rsp ; add dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80002c80a0 : push rbp ; mov rbp, rsp ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff8000495750 : push rbp ; mov rbp, rsp ; add qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff80006d64d0 : push rbp ; mov rbp, rsp ; and byte ptr [rdi + 0x42], 0xf7 ; pop rbp ; ret
0xffffff800040c870 : push rbp ; mov rbp, rsp ; dec dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800040c7c0 : push rbp ; mov rbp, rsp ; inc dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff8000512e50 : push rbp ; mov rbp, rsp ; inc dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff80007f4b80 : push rbp ; mov rbp, rsp ; inc dword ptr [rdx] ; xor eax, eax ; pop rbp ; ret
0xffffff80004953c0 : push rbp ; mov rbp, rsp ; inc qword ptr [rdi] ; pop rbp ; ret
0xffffff8000751de0 : push rbp ; mov rbp, rsp ; lea rax, [rdi + 0x18] ; pop rbp ; ret
0xffffff8000756b70 : push rbp ; mov rbp, rsp ; lea rax, [rdi + 0x48] ; pop rbp ; ret
0xffffff80007f07c0 : push rbp ; mov rbp, rsp ; lea rax, [rdi + 0x68] ; pop rbp ; ret
0xffffff8000802a80 : push rbp ; mov rbp, rsp ; lfence ; pop rbp ; ret
0xffffff8000864220 : push rbp ; mov rbp, rsp ; mov al, 1 ; pop rbp ; ret
0xffffff800088e880 : push rbp ; mov rbp, rsp ; mov al, byte ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800088f590 : push rbp ; mov rbp, rsp ; mov al, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000813590 : push rbp ; mov rbp, rsp ; mov al, byte ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff800088e870 : push rbp ; mov rbp, rsp ; mov byte ptr [rdi + 0x28], 0 ; pop rbp ; ret
0xffffff8000588ea0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x14], esi ; pop rbp ; ret
0xffffff8000588eb0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x18], esi ; pop rbp ; ret
0xffffff80007961f0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x30], esi ; pop rbp ; ret
0xffffff80007f07e0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x40], esi ; pop rbp ; ret
0xffffff80004b3bf0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x44], esi ; pop rbp ; ret
0xffffff80004b3bd0 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff80004b3c10 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x4c], esi ; pop rbp ; ret
0xffffff800089fb10 : push rbp ; mov rbp, rsp ; mov dword ptr [rdi + 0x58], esi ; pop rbp ; ret
0xffffff800088c520 : push rbp ; mov rbp, rsp ; mov dword ptr [rsi + 0x2c], edx ; pop rbp ; ret
0xffffff800082bac0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005e0480 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff80008155d0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80005cf380 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff800080f810 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80008107c0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x24] ; pop rbp ; ret
0xffffff80008121a0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff8000780140 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x2c] ; pop rbp ; ret
0xffffff80002f6970 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082c6d0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x34] ; pop rbp ; ret
0xffffff8000350730 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff80004b3b30 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x40] ; pop rbp ; ret
0xffffff80004b3be0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x44] ; pop rbp ; ret
0xffffff80002ae7f0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80004b3c00 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff80004b40e0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff800089fb20 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80002db220 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa020 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x6c] ; pop rbp ; ret
0xffffff80002db700 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0x74] ; pop rbp ; ret
0xffffff80005e0450 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff8000767820 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028bb50 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff80004a54f0 : push rbp ; mov rbp, rsp ; mov eax, dword ptr [rdi] ; sub eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff800049e4b0 : push rbp ; mov rbp, rsp ; mov eax, r8d ; pop rbp ; ret
0xffffff800088e840 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff8000350700 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff8000796240 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x28], rsi ; pop rbp ; ret
0xffffff8000698730 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x38], rsi ; pop rbp ; ret
0xffffff8000342b00 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x58], rsi ; pop rbp ; ret
0xffffff800031ed70 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x60], rsi ; pop rbp ; ret
0xffffff80004b40c0 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x68], rsi ; pop rbp ; ret
0xffffff80004b3c90 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 0x78], rsi ; pop rbp ; ret
0xffffff8000796090 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80002c80b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff800039f200 : push rbp ; mov rbp, rsp ; mov qword ptr [rsi], rdi ; pop rbp ; ret
0xffffff8000870c30 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rcx + 0x28] ; pop rbp ; jmp rax
0xffffff80007951c0 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000516520 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80002db140 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff80002db560 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff800081e940 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80002a0400 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x38] ; pop rbp ; ret
0xffffff800077e090 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000342180 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x50] ; pop rbp ; ret
0xffffff80002db570 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x58] ; pop rbp ; ret
0xffffff80004b40b0 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff80004b40a0 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004b3c80 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 0x78] ; pop rbp ; ret
0xffffff8000303740 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; jmp qword ptr [rax]
0xffffff80004f9f00 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800028ba50 : push rbp ; mov rbp, rsp ; mov rax, qword ptr [rdi] ; pop rbp ; ret
0xffffff8000372940 : push rbp ; mov rbp, rsp ; mov rax, rdi ; pop rbp ; ret
0xffffff800049e6d0 : push rbp ; mov rbp, rsp ; mov rax, rsi ; pop rbp ; ret
0xffffff80004fa640 : push rbp ; mov rbp, rsp ; mov word ptr [rdi + 0x6a], si ; pop rbp ; ret
0xffffff800029ed10 : push rbp ; mov rbp, rsp ; movsx edi, dil ; pop rbp ; jmp rsi
0xffffff80007960a0 : push rbp ; mov rbp, rsp ; movsxd rax, dword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff80007961e0 : push rbp ; mov rbp, rsp ; movsxd rax, dword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff800082baa0 : push rbp ; mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800086b6d0 : push rbp ; mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x4c] ; pop rbp ; ret
0xffffff8000898090 : push rbp ; mov rbp, rsp ; movzx eax, byte ptr [rdi + 0x5c] ; pop rbp ; ret
0xffffff8000516480 : push rbp ; mov rbp, rsp ; movzx eax, byte ptr [rdi] ; pop rbp ; ret
0xffffff80002b7b00 : push rbp ; mov rbp, rsp ; movzx eax, dil ; pop rbp ; ret
0xffffff800082bab0 : push rbp ; mov rbp, rsp ; movzx eax, word ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80007960d0 : push rbp ; mov rbp, rsp ; movzx eax, word ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80004fa080 : push rbp ; mov rbp, rsp ; movzx eax, word ptr [rdi + 0x68] ; pop rbp ; ret
0xffffff80004fa650 : push rbp ; mov rbp, rsp ; movzx eax, word ptr [rdi + 0x6a] ; pop rbp ; ret
0xffffff8000811170 : push rbp ; mov rbp, rsp ; movzx eax, word ptr [rdi + 8] ; pop rbp ; ret
0xffffff80004b3af0 : push rbp ; mov rbp, rsp ; or byte ptr [rdi + 1], 0x10 ; pop rbp ; ret
0xffffff80004b3a80 : push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x10 ; pop rbp ; ret
0xffffff80004b3ad0 : push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x20 ; pop rbp ; ret
0xffffff80004b3b10 : push rbp ; mov rbp, rsp ; or byte ptr [rdi], 0x40 ; pop rbp ; ret
0xffffff80002510e0 : push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff8000802a70 : push rbp ; mov rbp, rsp ; sfence ; pop rbp ; ret
0xffffff800028d6f0 : push rbp ; mov rbp, rsp ; xor eax, eax ; pop rbp ; ret
0xffffff800036fdc7 : push rbp ; mov word ptr [rcx - 0x2f], es ; ret 0x8944
0xffffff80002cf626 : push rbp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rcx, rbx ; call rax
0xffffff800073814b : push rbp ; movzx eax, di ; pop rbp ; ret
0xffffff8000598118 : push rbp ; or byte ptr [rbx + 0x578b0c40], cl ; or al, 0x21 ; ret 0xd0f7
0xffffff80006763c3 : push rbp ; or byte ptr [rdi], 0x85 ; ret 0
0xffffff80007a5c14 : push rbp ; or dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0xffffff800088776d : push rbp ; out 0x16, eax ; add bh, bh ; ret
0xffffff80005fb8a6 : push rbp ; out 0x4d, al ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff8000658957 : push rbp ; pop rax ; ret
0xffffff8000891227 : push rbp ; pop rdx ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80008a83f7 : push rbp ; pop rsp ; xchg bh, bh ; xor eax, eax ; pop rbp ; ret
0xffffff800076d8d7 : push rbp ; push rax ; ret 0x4cff
0xffffff800076d8e7 : push rbp ; push rdi ; ret 0x4cff
0xffffff80003b0c97 : push rbp ; ret
0xffffff800076da48 : push rbp ; ret 0x4cff
0xffffff800034bfb6 : push rbp ; ret 0x60
0xffffff8000625704 : push rbp ; ret 0x8b49
0xffffff8000668c4b : push rbp ; ret 0x8bff
0xffffff8000668eb6 : push rbp ; ret 0x958b
0xffffff80008ef168 : push rbp ; rol byte ptr [rcx + rcx*4 - 0x17], 1 ; mov r8d, r14d ; call rbx
0xffffff8000371e31 : push rbp ; rol byte ptr [rcx + rsi - 0xe], 0xd1 ; ret 0x5589
0xffffff80003724a8 : push rbp ; rol byte ptr [rcx - 0x2f], 1 ; ret 0x8944
0xffffff80003b03b8 : push rbp ; rol byte ptr [rcx - 1], 1 ; ret 0x3941
0xffffff80003b6666 : push rbp ; ror byte ptr [rax + 0x29], 1 ; ret 0x8348
0xffffff800031804d : push rbp ; ror byte ptr [rax + 0x39], 1 ; ret 0x840f
0xffffff80007f62d7 : push rbp ; ror byte ptr [rax + 0x69], 1 ; ret 0xca00
0xffffff80005edada : push rbp ; ror byte ptr [rax - 0x73], 0xc ; ret 0x8b48
0xffffff800026c442 : push rbp ; ror byte ptr [rax - 0x75], 0x5a ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff800053c7c2 : push rbp ; ror byte ptr [rax - 0x75], 1 ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8348
0xffffff8000321433 : push rbp ; ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret
0xffffff80005a71ce : push rbp ; ror byte ptr [rax - 0x7f], 1 ; ret 0x410
0xffffff800053c7c6 : push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8348
0xffffff80003c3161 : push rbp ; ror byte ptr [rax], 1 ; ret 0xdb85
0xffffff80008f8fc8 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x17], 1 ; call rbx
0xffffff80005343bf : push rbp ; ror byte ptr [rcx + rcx*4 - 0x1f], 1 ; call r8
0xffffff8000456f74 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xf3ba
0xffffff800038c53a : push rbp ; ror byte ptr [rdi], 0xb6 ; ret 0x589
0xffffff8000600324 : push rbp ; ror byte ptr [rdi], 0xb7 ; push rdx ; or bh, byte ptr [rcx] ; ret 0x2275
0xffffff8000820735 : push rbp ; sal dh, 1 ; ret 0x4c01
0xffffff8000768973 : push rbp ; sal dh, 1 ; ret 0x7404
0xffffff8000523fa3 : push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0x894c
0xffffff8000524c82 : push rbp ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4cf2
0xffffff80004cff25 : push rbp ; sbb byte ptr [rcx + rcx*4 - 0x3d], cl ; call 0xffffff80004fc1e7
0xffffff80004ed8ae : push rbp ; shl byte ptr [rsi - 0x77], 0x4d ; ret 0x8b44
0xffffff80004edb07 : push rbp ; shl byte ptr [rsi - 0x77], 0x7d ; ret 0xa74
0xffffff800086eb70 : push rbp ; shr al, 0x39 ; adc al, byte ptr [rcx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80007621c0 : push rbp ; shr al, 0xb9 ; ret
0xffffff80008dbf7a : push rbp ; shr al, 1 ; call rax
0xffffff800043c35d : push rbp ; shr al, 1 ; lodsb al, byte ptr [rsi] ; ret
0xffffff800043c3a2 : push rbp ; shr al, 1 ; ret
0xffffff800026aee8 : push rbp ; sub bh, bh ; ret 0x1189
0xffffff800026ae4e : push rbp ; sub byte ptr [rcx], al ; ret 0x8941
0xffffff8000269377 : push rbp ; sub byte ptr [rcx], bh ; ret 0xc75
0xffffff80008823f7 : push rbp ; sub r8d, dword ptr [rax] ; pop rbp ; ret
0xffffff80006ef4d4 : push rbp ; test al, 0xf6 ; ret 0x4c20
0xffffff80003b3164 : push rbp ; test al, 0xff ; ret 0x8948
0xffffff800079fe77 : push rbp ; test byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff8000747b2c : push rbp ; test byte ptr [rax - 0x7d], cl ; ret 0x45f8
0xffffff80007479ea : push rbp ; test byte ptr [rax - 0x7d], cl ; ret 0x4830
0xffffff800054ff53 : push rbp ; test byte ptr [rax], bl ; pop rbp ; ret
0xffffff80004ba70c : push rbp ; xor al, 0x89 ; ret 0xca29
0xffffff8000316431 : push rbp ; xor al, 0xf7 ; ret 0
0xffffff800086e5e7 : push rbp ; xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007cf075 : push rbp ; xor esi, esi ; mov rdi, rbx ; mov rdx, r13 ; call rax
0xffffff8000701332 : push rbx ; adc ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff800079d963 : push rbx ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0xffffff800077264f : push rbx ; adc byte ptr [rax - 0x7f], cl ; ret
0xffffff80006c11bb : push rbx ; adc byte ptr [rcx], al ; ret 0xd129
0xffffff800058bbe9 : push rbx ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff800062e9c3 : push rbx ; adc byte ptr [rcx], ch ; ret 0x2772
0xffffff8000701320 : push rbx ; adc byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80007c32e9 : push rbx ; adc cl, byte ptr [rax - 0x7d] ; ret
0xffffff8000289e7d : push rbx ; adc dword ptr [rax], eax ; pop rbp ; ret
0xffffff80003b6176 : push rbx ; add ah, dh ; pop rbp ; ret
0xffffff80008f5eb4 : push rbx ; add al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80007181d0 : push rbx ; add al, byte ptr [rax] ; add cl, ch ; ret 0
0xffffff8000439a98 : push rbx ; add al, ch ; mov cl, 0x32 ; add byte ptr ss:[rcx], ch ; ret
0xffffff800059ecfd : push rbx ; add al, ch ; pushfq ; ret 0xffcf
0xffffff80003baec6 : push rbx ; add al, ch ; ret
0xffffff80005f4077 : push rbx ; add al, ch ; ret 0xd9e9
0xffffff80005e38d4 : push rbx ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff800059ecd3 : push rbx ; add byte ptr [rax - 0x77], cl ; ret 0x3e8
0xffffff800059ed17 : push rbx ; add byte ptr [rax - 0x77], cl ; ret 0xbfe8
0xffffff80003c7f03 : push rbx ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003b634b : push rbx ; add byte ptr [rax - 1], cl ; ret
0xffffff800036ae84 : push rbx ; add byte ptr [rax], al ; add al, ch ; ret
0xffffff80003927f1 : push rbx ; add byte ptr [rax], al ; ret
0xffffff80005e3329 : push rbx ; add byte ptr [rsi + 1], bh ; call rax
0xffffff8000757b34 : push rbx ; add byte ptr fs:[rax], ah ; xor ecx, ecx ; call r15
0xffffff80007580c0 : push rbx ; add byte ptr fs:[rax], ah ; xor ecx, ecx ; call rbx
0xffffff80003b633c : push rbx ; add dh, dh ; ret
0xffffff8000357984 : push rbx ; add eax, dword ptr [rax] ; add al, ch ; ret
0xffffff80004c1e67 : push rbx ; add r8b, bpl ; ret
0xffffff80007504cd : push rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800078f353 : push rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff800078fe91 : push rbx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff800079d3fc : push rbx ; and bh, bh ; ret 0x3145
0xffffff80006caa03 : push rbx ; and cl, byte ptr [rax - 1] ; ret 0x73e8
0xffffff8000836370 : push rbx ; call 0xffffff7fff76637c
0xffffff800043dc3f : push rbx ; cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002e2c65 : push rbx ; cmp al, 0x21 ; ret 0xca81
0xffffff80003300ad : push rbx ; cmp al, 0xf6 ; ret 0x7501
0xffffff8000349685 : push rbx ; cmp al, 0xf7 ; ret 0
0xffffff80006250c9 : push rbx ; cmp bl, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800071ec58 : push rbx ; cmp byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065c4c9 : push rbx ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800072a589 : push rbx ; enter -3, -0x77 ; ret
0xffffff80002cec28 : push rbx ; inc dword ptr [rbp + 0x31] ; push rsi ; ret
0xffffff800039a221 : push rbx ; jbe 0xffffff800039a22a ; pop rbp ; ret
0xffffff800081b879 : push rbx ; je 0xffffff800081b883 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000325d4e : push rbx ; jl 0xffffff8000325d4b ; ret 0
0xffffff800033379a : push rbx ; jl 0xffffff8000333797 ; ret 0
0xffffff80002a381d : push rbx ; jo 0xffffff80002a3819 ; ret 0x7510
0xffffff8000392659 : push rbx ; js 0xffffff8000392662 ; leave ; ret
0xffffff80005df580 : push rbx ; js 0xffffff80005df50f ; ret 0x2144
0xffffff8000643603 : push rbx ; leave ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000491cbf : push rbx ; loopne 0xffffff8000491cca ; inc dword ptr [rax] ; loope 0xffffff8000491cce ; jmp rbx
0xffffff80007a5829 : push rbx ; mov bl, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000552753 : push rbx ; mov edi, 1 ; xor edx, edx ; call rax
0xffffff800049fc36 : push rbx ; mov rbx, rsi ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff80004a804d : push rbx ; movsxd rax, dword ptr [rax] ; pop rbp ; ret
0xffffff80003a49a8 : push rbx ; nop ; cmp dword ptr [rdi + 0x10], 0 ; jne 0xffffff80003a49b2 ; ret
0xffffff800068f599 : push rbx ; or ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80008a6575 : push rbx ; or al, 0x8b ; adc byte ptr [r9], dil ; ret 0x975
0xffffff80006bedd0 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0xffffff80004438ff : push rbx ; or byte ptr [rcx + 0x39], al ; ret 0x1575
0xffffff80007f0164 : push rbx ; pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff800053e1ba : push rbx ; popfq ; add al, r13b ; in eax, dx ; call rsp
0xffffff8000629f76 : push rbx ; push rax ; add al, ch ; ret 0xd68a
0xffffff80007f00fe : push rbx ; push rax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80006061a2 : push rbx ; ret
0xffffff80005c88d0 : push rbx ; ret 0x3c
0xffffff8000778299 : push rbx ; ret 0x49ff
0xffffff800030e070 : push rbx ; ret 0x7e
0xffffff80004e8dd8 : push rbx ; ret 0xc7ff
0xffffff800076e6e9 : push rbx ; ret 0xfff
0xffffff8000859b19 : push rbx ; retf 0x2d ; test rax, rax ; je 0xffffff8000859b2d ; call rax
0xffffff80004b316c : push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x820f
0xffffff80004460a4 : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff8000323d5c : push rbx ; sbb byte ptr [rax - 0x75], cl ; mov byte ptr [r8 + 0x39], r9b ; ret 0xf48
0xffffff800049ca4b : push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff80002701f7 : push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff800026de56 : push rbx ; sbb byte ptr [rbx - 0x7cb7df8e], cl ; ret 0x4824
0xffffff8000682ae1 : push rbx ; scasb al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002fe947 : push rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000304540 : push rbx ; std ; jmp qword ptr [rcx]
0xffffff80006bf6b3 : push rbx ; str word ptr [rax - 0x77] ; ret
0xffffff80002f5988 : push rbx ; sub al, 0x8b ; xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff80008918e8 : push rbx ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80002e27b2 : push rbx ; sub byte ptr [rax - 0x7d], cl ; ret
0xffffff8000881658 : push rbx ; sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80003ca8e1 : push rbx ; test byte ptr [rax], dh ; pop rbp ; ret
0xffffff8000479db6 : push rbx ; xor al, ch ; ret
0xffffff8000698a3f : push rbx ; xor byte ptr [rax + 0x39], cl ; ret 0x1676
0xffffff80006521df : push rbx ; xor byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff38 ; call qword ptr [rbx]
0xffffff80003f0337 : push rbx ; xor byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000831eeb : push rbx ; xor byte ptr [rax], al ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800064abb9 : push rbx ; xor esi, esi ; mov rdi, r12 ; mov rdx, r13 ; call rax
0xffffff80002db48f : push rcx ; adc al, 0x7e ; and byte ptr [rax + 0x63], cl ; ret 0x8b48
0xffffff80005284da : push rcx ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rbp*8 - 9], cl ; ret
0xffffff8000790381 : push rcx ; adc byte ptr [rcx], bh ; ret 0x4d0f
0xffffff800072f14c : push rcx ; adc byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000327c43 : push rcx ; adc dh, dh ; ret 0xf01
0xffffff8000804c17 : push rcx ; adc edi, dword ptr [rcx] ; ret 0x940f
0xffffff800060646b : push rcx ; add ah, byte ptr [rsi - 0x3f] ; ret 0x4408
0xffffff80005aa1e8 : push rcx ; add ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0xffffff80004b300e : push rcx ; add al, 0 ; add byte ptr [rax + 1], cl ; ret 0x348
0xffffff800058e8ee : push rcx ; add al, 0x21 ; ret 0xd0f7
0xffffff8000b4a398 : push rcx ; add al, 0x29 ; ret 0xe281
0xffffff80003a90ed : push rcx ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff80005c2037 : push rcx ; add al, ch ; ret 0xdd05
0xffffff800055714d : push rcx ; add al, ch ; xor byte ptr [rdx], r12b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005d6867 : push rcx ; add byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff80006132a8 : push rcx ; add byte ptr [rax - 0x77], cl ; enter -0x74b8, 5 ; ret
0xffffff800060bcf6 : push rcx ; add byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp r8
0xffffff800060627c : push rcx ; add byte ptr [rax - 0x77], cl ; ret 0x5ae8
0xffffff80005c14d7 : push rcx ; add byte ptr [rax - 0x77], cl ; ret 0xffe8
0xffffff8000662ccc : push rcx ; add byte ptr [rax - 1], r9b ; ret 0x8948
0xffffff800078855b : push rcx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rbx]
0xffffff80006356d1 : push rcx ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff800061239d : push rcx ; add byte ptr [rcx], al ; sbb eax, eax ; pop rbp ; ret
0xffffff800061a83f : push rcx ; add byte ptr [rcx], dh ; leave ; movzx eax, cl ; pop rbp ; ret
0xffffff8000452480 : push rcx ; add byte ptr [rcx], dh ; shr al, 0xc7 ; ret
0xffffff8000259fbf : push rcx ; add cl, byte ptr [rax + 0x21] ; ret 0xc748
0xffffff8000259fcd : push rcx ; add dword ptr [rax + 0x21], ecx ; ret 0xc748
0xffffff8000698a26 : push rcx ; add dword ptr [rax - 0x75], ecx ; cmp byte ptr [r8 + 0x39], cl ; ret 0x1573
0xffffff8000745ba9 : push rcx ; add dword ptr [rbx + rbx*8 + 0x39480575], eax ; ret 0xa72
0xffffff8000529673 : push rcx ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80005292e0 : push rcx ; add dword ptr [rcx], edi ; ret 0xca75
0xffffff80007dfe6f : push rcx ; add eax, 0x89440000 ; ret
0xffffff80006cc48f : push rcx ; and cl, byte ptr [rax - 1] ; ret 0xe7e8
0xffffff800059d02e : push rcx ; and dh, dh ; ret 0xf01
0xffffff80002632be : push rcx ; call rax
0xffffff800082df1b : push rcx ; cdq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008ddc70 : push rcx ; cmc ; dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, rax ; call rbx
0xffffff80003f1168 : push rcx ; cmp al, 0xf6 ; ret 0x7530
0xffffff80004c469b : push rcx ; cmp bh, dh ; ret 0
0xffffff800058dcc7 : push rcx ; cmp byte ptr [rcx], ah ; ret 0xd0f7
0xffffff8000802e82 : push rcx ; dec dword ptr [rax - 1] ; ret 0xce89
0xffffff80006537c9 : push rcx ; enter 0x48ff, -0x77 ; ret
0xffffff800029abcb : push rcx ; fld qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800046177e : push rcx ; inc byte ptr [rbx + 0x470f02fa] ; ret
0xffffff800059d81d : push rcx ; insb byte ptr [rdi], dx ; test edx, edx ; jne 0xffffff800059d83b ; xor eax, eax ; pop rbp ; ret
0xffffff800033437e : push rcx ; je 0xffffff800033438d ; ret 0x2475
0xffffff8000275c13 : push rcx ; jl 0xffffff8000275c0f ; ret 0x7504
0xffffff80002bad93 : push rcx ; jl 0xffffff80002bad4b ; add esi, esi ; ret 0x7504
0xffffff8000334a0c : push rcx ; jl 0xffffff8000334a13 ; pop rbp ; ret
0xffffff800026aa30 : push rcx ; jmp 0xffffff800026ac21
0xffffff8000b3e3cd : push rcx ; jmp qword ptr [rdx]
0xffffff80002d7607 : push rcx ; jne 0xffffff80002d7612 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800057f925 : push rcx ; js 0xffffff800057f921 ; ret 0xf01
0xffffff800057f9f7 : push rcx ; js 0xffffff800057f9f3 ; ret 0xf01
0xffffff800085886b : push rcx ; loope 0xffffff8000858873 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000886ceb : push rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800077d9dd : push rcx ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff800058e902 : push rcx ; or byte ptr [rcx], ah ; ret 0xd0f7
0xffffff80005bddfb : push rcx ; or dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004a33e7 : push rcx ; out dx, eax ; dec dword ptr [rax + 0x63] ; ret
0xffffff800069a0db : push rcx ; outsd dx, dword ptr [rsi] ; jmp 0xffffff800069a0e5
0xffffff800075d1eb : push rcx ; pop rsi ; ret
0xffffff8000b496b0 : push rcx ; push rsp ; or r9b, byte ptr [rax + 1] ; ret 0x294c
0xffffff800065fafb : push rcx ; rcl byte ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005ebff6 : push rcx ; ret
0xffffff80008aa323 : push rcx ; ret 0x28
0xffffff80002efcab : push rcx ; ret 0x73
0xffffff8000b4a4a2 : push rcx ; ret 0x8a41
0xffffff8000827185 : push rcx ; sbb al, 0 ; mov rdi, r13 ; call rbx
0xffffff8000829e74 : push rcx ; sbb al, 0 ; xor eax, eax ; mov rsi, rbx ; call r15
0xffffff800039effa : push rcx ; sbb al, 0x5d ; ret
0xffffff80004b5bfa : push rcx ; sbb bl, ch ; ret 0x8a41
0xffffff800031b2b5 : push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8949
0xffffff8000503654 : push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff8000494ddf : push rcx ; sbb byte ptr [rax + 0x39], cl ; ret 0xf48
0xffffff800043ac25 : push rcx ; sbb byte ptr [rax + 1], cl ; ret 0xf748
0xffffff8000892f7f : push rcx ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80005aff20 : push rcx ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff80005c29a6 : push rcx ; sbb dh, dh ; ret 0xf01
0xffffff800090aba3 : push rcx ; sbb dword ptr ds:[rax], eax ; ret
0xffffff80005affd4 : push rcx ; sbb esi, esi ; ret
0xffffff800089008e : push rcx ; sub al, byte ptr [rax] ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039eff4 : push rcx ; sub byte ptr [rcx + 0x51891c50], cl ; sbb al, 0x5d ; ret
0xffffff80005b1875 : push rcx ; sub dh, dh ; ret 0xf01
0xffffff8000663d96 : push rcx ; xchg eax, edx ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000769beb : push rcx ; xchg eax, esp ; ret 0x45ff
0xffffff800076944b : push rcx ; xchg eax, esp ; ret 0x48ff
0xffffff800058dcb3 : push rcx ; xor al, 0x21 ; ret 0xd0f7
0xffffff80004713c1 : push rcx ; xor al, 0xf6 ; ret 0xf01
0xffffff800058dca0 : push rcx ; xor byte ptr [rcx], ah ; ret 0xd0f7
0xffffff800065373f : push rcx ; xor eax, 0xe8c03100 ; push rdi ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800065e90e : push rcx ; xor eax, eax ; mov rdi, r15 ; call 0xffffff800028e1b9
0xffffff8000328992 : push rdi ; adc byte ptr [rax + 0x39], cl ; push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0xffffff80002ccf81 : push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0x3175
0xffffff8000630d58 : push rdi ; adc byte ptr [rax + 1], cl ; ret 0x148
0xffffff800065c815 : push rdi ; adc byte ptr [rax + 1], cl ; ret 0x8b41
0xffffff80008f1790 : push rdi ; adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f173c ; call rbx
0xffffff80008f1819 : push rdi ; adc byte ptr [rax - 0x75], cl ; jge 0xffffff80008f17c5 ; call rcx
0xffffff80005b00a0 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff8000540212 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret 0x481c
0xffffff8000420277 : push rdi ; adc byte ptr [rcx - 0xa], al ; ret 0x7501
0xffffff800072d755 : push rdi ; add al, 0x21 ; ret 0xd109
0xffffff80006d8892 : push rdi ; add al, 0x39 ; ret 0x3373
0xffffff80006051b0 : push rdi ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x57 ; add bh, byte ptr [rcx] ; ret 0x850f
0xffffff800060b1be : push rdi ; add al, byte ptr [rcx + 0x29] ; ret 0x4566
0xffffff800056852e : push rdi ; add al, ch ; call r10
0xffffff8000566cdf : push rdi ; add al, ch ; pop rdx ; ret
0xffffff8000376bc6 : push rdi ; add al, ch ; ret
0xffffff800036c7c7 : push rdi ; add al, ch ; ret 0x1f9
0xffffff80006051b6 : push rdi ; add bh, byte ptr [rcx] ; ret 0x850f
0xffffff800057a2e6 : push rdi ; add byte ptr [r8 + 0xf], cl ; ret 0x8948
0xffffff80005a48d7 : push rdi ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80005671a6 : push rdi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055feff : push rdi ; add byte ptr [rax - 0x77], cl ; ret 0xd7e8
0xffffff80005a27ba : push rdi ; add byte ptr [rcx + 0x39], cl ; ret
0xffffff8000566cb9 : push rdi ; add byte ptr [rcx + rcx*4 + 0x73], cl ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff80005abf84 : push rdi ; add byte ptr [rcx], dh ; imul al ; ret
0xffffff80003f2490 : push rdi ; add byte ptr [rcx], dh ; shr al, 0xb7 ; ret
0xffffff800026ab5a : push rdi ; add dword ptr [rax], eax ; add bh, bh ; ret 0x3145
0xffffff8000621fa5 : push rdi ; add dword ptr [rbp + 0x39], ecx ; ret 0x3c7d
0xffffff8000579d26 : push rdi ; add dword ptr [rdi], ecx ; mov dh, 0x46 ; add dword ptr [rcx], edi ; ret 0x850f
0xffffff80003f3462 : push rdi ; add eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff80007e4fe6 : push rdi ; and byte ptr [rbp + 0x31], al ; fucomi st(3) ; or byte ptr [rcx - 0x7d], cl ; ret 0x4814
0xffffff80007637e5 : push rdi ; clc ; ret 0x41ff
0xffffff80007054b5 : push rdi ; cmc ; cld ; push rsi ; ret
0xffffff8000653658 : push rdi ; cmp byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0xffffff80007fcfe7 : push rdi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000880a5d : push rdi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000882009 : push rdi ; ja 0xffffff8000882036 ; jmp 0xffffff800088204e
0xffffff800026e235 : push rdi ; jbe 0xffffff800026e244 ; xor eax, eax ; pop rbp ; ret
0xffffff80003c05cb : push rdi ; je 0xffffff80003c05d5 ; add byte ptr [rbp + 2], dh ; pop rbp ; ret
0xffffff800031623e : push rdi ; jmp qword ptr [rcx]
0xffffff800077b3d5 : push rdi ; jne 0xffffff800077b3a1 ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; jmp qword ptr [rdi]
0xffffff80003a2ba5 : push rdi ; jnp 0xffffff80003a2bad ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008059de : push rdi ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000653745 : push rdi ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000902c5a : push rdi ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff80003a8714 : push rdi ; mov rdi, rsi ; call rax
0xffffff800059811e : push rdi ; or al, 0x21 ; ret 0xd0f7
0xffffff8000708e21 : push rdi ; or byte ptr [rax - 9], cl ; ret 0xf07f
0xffffff800078c6f4 : push rdi ; or byte ptr [rbx - 0x1a82fd08], al ; pop rbp ; ret
0xffffff80004e1cbe : push rdi ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80008fdf97
0xffffff800066dd98 : push rdi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80009001e2 : push rdi ; pop rax ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff8000890cfd : push rdi ; pop rdi ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff80004739d1 : push rdi ; push -0x5cf0fe4d ; ret 0xb72
0xffffff8000900b12 : push rdi ; push rax ; mov rdi, r14 ; mov rsi, r15 ; call rcx
0xffffff80005d8a5d : push rdi ; push rcx ; add byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff80003202b1 : push rdi ; ret
0xffffff800034ce1b : push rdi ; ret 0
0xffffff80007aa360 : push rdi ; ret 0x20
0xffffff800042514d : push rdi ; ret 0x3574
0xffffff80006689f2 : push rdi ; ret 0x41ff
0xffffff80004e8a28 : push rdi ; ret 0x48ff
0xffffff800076d8e8 : push rdi ; ret 0x4cff
0xffffff8000668a8d : push rdi ; ret 0xebff
0xffffff80004b2874 : push rdi ; ret 0xffdf
0xffffff80003355d4 : push rdi ; ret 0xfff7
0xffffff80003951a5 : push rdi ; ret 0xfffe
0xffffff8000554dd5 : push rdi ; ret 0xffff
0xffffff80003063a5 : push rdi ; ret 8
0xffffff800080dbfe : push rdi ; ror byte ptr [rdi], 1 ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80007fe2e5 : push rdi ; sal dword ptr [rsi + 0x3e0c1ff], cl ; pop rbp ; ret
0xffffff800051fa88 : push rdi ; sbb byte ptr [rax + 0x63], cl ; fimul dword ptr [rax + 0x39] ; ret
0xffffff800079535f : push rdi ; sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff8000901bca : push rdi ; sbb byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff800065c198 : push rdi ; sbb byte ptr [rcx], al ; ret 0x2deb
0xffffff8000635b7a : push rdi ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff800085c882 : push rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082ca3f : push rdi ; sub byte ptr [rax - 0x75], cl ; cmp al, 0xd8 ; mov rsi, r14 ; call rcx
0xffffff80008a6bf0 : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret 0x3108
0xffffff80008ec00e : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4803
0xffffff800082cc32 : push rdi ; sub byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc7 ; pop rbp ; jmp rcx
0xffffff8000788d25 : push rdi ; xchg eax, edi ; mov bl, 0xff ; pop rbp ; ret
0xffffff80005cd7d1 : push rdi ; xor byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80004f8fc6 : push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0xffffff800040c474 : push rdi ; xor dh, dh ; ret 0x7520
0xffffff80004b3d5c : push rdi ; xor eax, r8d ; pop rbp ; ret
0xffffff8000b3c39a : push rdx ; adc bpl, byte ptr [r9] ; ret 0xe281
0xffffff80002611b8 : push rdx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff800082aa5c : push rdx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0xffffff8000289f55 : push rdx ; adc dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800058b90b : push rdx ; add al, 0xff ; ret 0xd139
0xffffff800044d444 : push rdx ; add byte ptr [rax + 0x450f4c01], ch ; ret
0xffffff80005fb9e3 : push rdx ; add byte ptr [rax - 0x77], cl ; ret 0xf3e8
0xffffff80005f57c3 : push rdx ; add byte ptr [rax], al ; je 0xffffff80005f57d0 ; pop rbp ; ret
0xffffff80005af00e : push rdx ; add byte ptr [rcx], bh ; ret
0xffffff800053cb35 : push rdx ; add byte ptr [rcx], ch ; rcl bl, 1 ; loop 0xffffff800053cb44 ; ret 0xead3
0xffffff8000451fc9 : push rdx ; add dword ptr [rax + 0x39], ecx ; ret 0xf07c
0xffffff800084e8cb : push rdx ; add dword ptr [rax - 1], ecx ; ret 0x8445
0xffffff80005ffc7a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007378b6 : push rdx ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff80008eb8df : push rdx ; and byte ptr [rax - 0x7d], cl ; ret 0x4c03
0xffffff800078d98e : push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a86d0 : push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80003eddc6 : push rdx ; cli ; push rsi ; ret
0xffffff80008ddb81 : push rdx ; cmc ; dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, rax ; call rbx
0xffffff80006a72a6 : push rdx ; cmc ; xor byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb9
0xffffff800035a0d3 : push rdx ; cmp dh, dh ; ret 0xf02
0xffffff80007691ea : push rdx ; cwde ; ret 0x4dff
0xffffff8000753dea : push rdx ; in al, dx ; ret
0xffffff800049e17a : push rdx ; jb 0xffffff800049e1e9 ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80002ffb8a : push rdx ; jg 0xffffff80002ffc15 ; add byte ptr [rcx + 0x39ead1ca], cl ; ret 0x870f
0xffffff80002ef887 : push rdx ; jno 0xffffff80002ef893 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80004c7d11 : push rdx ; js 0xffffff80004c7d0d ; ret 0x7401
0xffffff80007615fa : push rdx ; lea eax, [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800058fc48 : push rdx ; mov dl, r8b ; jmp 0xffffff800058fc5e
0xffffff80008ab6ea : push rdx ; mov ecx, 0x415b0028 ; pop rsi ; pop rbp ; ret
0xffffff80004a7e5a : push rdx ; mov esi, 0x8948ffe2 ; ret
0xffffff80004b49a7 : push rdx ; mov rdi, rbx ; mov rsi, r14 ; call r12
0xffffff8000886dea : push rdx ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000600328 : push rdx ; or bh, byte ptr [rcx] ; ret 0x2275
0xffffff80008422ac : push rdx ; out 0xff, al ; jmp qword ptr [rcx]
0xffffff80004399ca : push rdx ; out dx, eax ; jmp 0xffffff7fc3cce2d6
0xffffff80002f009a : push rdx ; pop rbp ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000831e9a : push rdx ; push 0x415bffb6 ; pop rsi ; pop rbp ; ret
0xffffff800025c318 : push rdx ; ret
0xffffff80008cc31a : push rdx ; ret 0x1d
0xffffff800088a962 : push rdx ; ret 0x2a
0xffffff800076dd99 : push rdx ; ret 0x4dff
0xffffff80007faab5 : push rdx ; sar edi, 1 ; pop rbp ; ret
0xffffff8000829e85 : push rdx ; sbb al, 0 ; xor eax, eax ; mov rsi, r12 ; call r15
0xffffff800077c988 : push rdx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007d7790 : push rdx ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002fa86e : push rdx ; xchg eax, esp ; jg 0xffffff80002fa878 ; pop rbx ; pop rbp ; ret
0xffffff800065ce15 : push rsi ; adc byte ptr [rax + 1], cl ; ret 0x8b41
0xffffff800058be47 : push rsi ; adc byte ptr [rcx], ch ; fiadd dword ptr [rcx] ; ret 0xd089
0xffffff800059cf0b : push rsi ; adc cl, ch ; ret
0xffffff8000506eb2 : push rsi ; add al, 0xff ; ret 0x8941
0xffffff8000707302 : push rsi ; add al, 1 ; ret 0x341
0xffffff80003fede7 : push rsi ; add al, ch ; ret 0xe8f3
0xffffff80006a6c63 : push rsi ; add byte ptr [r9 + r9*4 - 0xa], cl ; call 0xffffff80002d4ef9
0xffffff80005b2dac : push rsi ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800056e654 : push rsi ; add byte ptr [rax - 0x77], cl ; ret 0x82e8
0xffffff800056e5f5 : push rsi ; add byte ptr [rax - 0x77], cl ; ret 0xe1e8
0xffffff8000575d98 : push rsi ; add byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff8000575153 : push rsi ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; enter -0x72b4, 0x35 ; ret 0x41b8
0xffffff80005697f9 : push rsi ; add byte ptr [rbp - 0x17], bl ; fucomip st(5) ; loop 0xffffff8000569809 ; pop rbp ; ret
0xffffff8000574429 : push rsi ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret
0xffffff8000575398 : push rsi ; add byte ptr [rbx + rcx*4 + 0xd], cl ; sysenter
0xffffff800038c537 : push rsi ; add byte ptr [rbx - 0x49f03fab], cl ; ret 0x589
0xffffff80004f9fbc : push rsi ; add byte ptr [rbx], cl ; xor al, 0x81 ; mov eax, esi ; pop rbp ; ret
0xffffff800056f868 : push rsi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000878252 : push rsi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff8000608543 : push rsi ; add eax, 0x4d14f4 ; add al, 0x75 ; ret
0xffffff80007c2806 : push rsi ; and bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004caa9c : push rsi ; and byte ptr [rcx - 0x73], cl ; adc sil, r14b ; ret 0x4901
0xffffff800059d1f4 : push rsi ; and dh, dh ; ret 0xf01
0xffffff80008e698e : push rsi ; and edx, dword ptr [rax + rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800051ac36 : push rsi ; call rdi
0xffffff80007839d6 : push rsi ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a830d : push rsi ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80007d4af4 : push rsi ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003646d8 : push rsi ; cmp al, 0xc7 ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff80002d8a82 : push rsi ; cmp byte ptr [rdi + r9], al ; xchg eax, esp ; ret
0xffffff80005e530d : push rsi ; cmp eax, dword ptr [rax] ; jmp 0xffffff80005e52d8
0xffffff80006532d9 : push rsi ; enter 0x48ff, -0x77 ; ret
0xffffff80008c3896 : push rsi ; fcomi st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000357401 : push rsi ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003fb3e6 : push rsi ; jbe 0xffffff80003fb3eb ; inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff80003eb0e6 : push rsi ; jg 0xffffff80003eb0e8 ; push rsi ; ret
0xffffff8000330fcc : push rsi ; jl 0xffffff8000330fdb ; ret 0x8941
0xffffff8000331008 : push rsi ; jl 0xffffff8000331017 ; ret 0x8941
0xffffff8000331044 : push rsi ; jl 0xffffff8000331053 ; ret 0x8941
0xffffff8000331080 : push rsi ; jl 0xffffff800033108f ; ret 0x8941
0xffffff80003310bc : push rsi ; jl 0xffffff80003310cb ; ret 0x8941
0xffffff80003310f8 : push rsi ; jl 0xffffff8000331107 ; ret 0x8941
0xffffff8000331134 : push rsi ; jl 0xffffff8000331143 ; ret 0x8941
0xffffff8000331170 : push rsi ; jl 0xffffff800033117f ; ret 0x8941
0xffffff8000331224 : push rsi ; jl 0xffffff8000331233 ; ret 0x8941
0xffffff8000331260 : push rsi ; jl 0xffffff800033126f ; ret 0x8941
0xffffff80003312ee : push rsi ; jl 0xffffff80003312fd ; ret 0x8941
0xffffff800033132a : push rsi ; jl 0xffffff8000331339 ; ret 0x8941
0xffffff8000331366 : push rsi ; jl 0xffffff8000331375 ; ret 0x8941
0xffffff800089b57e : push rsi ; jmp 0xffffff7f89d1b5a3
0xffffff800065f656 : push rsi ; jmp 0xffffff800065f61d
0xffffff800064791d : push rsi ; jmp qword ptr [rcx]
0xffffff800040c5ee : push rsi ; jo 0xffffff800040c651 ; ret
0xffffff800058cd40 : push rsi ; jo 0xffffff800058cd45 ; ret
0xffffff800075306e : push rsi ; mov bh, 0x38 ; add al, ch ; leave ; stc ; ret
0xffffff8000b46550 : push rsi ; mov cs, word ptr ss:[rcx + 0x21] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000885896 : push rsi ; mov ebx, 0x8948fff8 ; ret
0xffffff80002534d0 : push rsi ; mov qword ptr [rcx], rbx ; jmp 0xffffff8000253537
0xffffff80002ab163 : push rsi ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000584ef9 : push rsi ; or al, 0x21 ; ret 0xd0f7
0xffffff80005aaae1 : push rsi ; or al, byte ptr [rcx] ; ret 0xca29
0xffffff8000835309 : push rsi ; or byte ptr [rcx + 0xf], al ; mov dh, 0xc ; adc byte ptr [rax - 1], cl ; ret 0xf983
0xffffff80007072fe : push rsi ; or byte ptr [rcx + 3], al ; push rsi ; add al, 1 ; ret 0x341
0xffffff8000251eed : push rsi ; push 0x5ae8006f ; ret 3
0xffffff800049fc35 : push rsi ; push rbx ; mov rbx, rsi ; mov rdi, qword ptr [rbx + 8] ; call qword ptr [rbx]
0xffffff800025ed17 : push rsi ; ret
0xffffff800076d386 : push rsi ; ret 0x41ff
0xffffff80007aa7e7 : push rsi ; ret 0x4801
0xffffff8000496c2d : push rsi ; ret 0x49
0xffffff800061fe8a : push rsi ; ret 0x4c02
0xffffff8000259a84 : push rsi ; ret 0x7401
0xffffff80004d5d92 : push rsi ; ret 0x7402
0xffffff800074bff5 : push rsi ; ret 0x7404
0xffffff80004d5866 : push rsi ; ret 0x7408
0xffffff80006d180e : push rsi ; ret 0x7501
0xffffff80003d55c1 : push rsi ; ret 0x7502
0xffffff80006464f0 : push rsi ; ret 0x7504
0xffffff80004e388e : push rsi ; ret 0x7580
0xffffff800060ef50 : push rsi ; ret 0x8b04
0xffffff800076d3de : push rsi ; ret 0x8bff
0xffffff8000587751 : push rsi ; ret 0xba02
0xffffff80006bbec6 : push rsi ; ret 0xf
0xffffff8000577954 : push rsi ; ret 0xf01
0xffffff8000500bb8 : push rsi ; ret 0xf02
0xffffff80002bcfc0 : push rsi ; ret 0xf03
0xffffff800083ad68 : push rsi ; ret 0xf08
0xffffff80003d547f : push rsi ; ret 0xf20
0xffffff80007a61f1 : push rsi ; ret 0xf80
0xffffff800068c386 : push rsi ; ret 0xffd0
0xffffff800076d3a9 : push rsi ; ret 0xfff
0xffffff800025c6c6 : push rsi ; ret 7
0xffffff80003b849e : push rsi ; sahf ; imul eax, dword ptr [rax], 0xc889ec75 ; pop rbp ; ret
0xffffff8000287fe2 : push rsi ; sbb byte ptr [rax + 0x39], cl ; ret 0x974
0xffffff80005253da : push rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4cf2
0xffffff80005e9b37 : push rsi ; sbb eax, 0x940ffa39 ; ret
0xffffff800065e856 : push rsi ; stc ; ret 0x44ff
0xffffff800085c8f3 : push rsi ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004e35e6 : push rsi ; stosd dword ptr [rdi], eax ; ret 0x41ff
0xffffff8000767d46 : push rsi ; stosd dword ptr [rdi], eax ; ret 0x49ff
0xffffff80002cd536 : push rsi ; sub al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800081eb88 : push rsi ; sub al, 0 ; sete al ; pop rbp ; ret
0xffffff800088c525 : push rsi ; sub al, 0x5d ; ret
0xffffff80002dc495 : push rsi ; sub al, 0x8b ; jnp 0xffffff80002dc4cb ; lea rsi, [r14 + 0x30] ; call rax
0xffffff80003636ab : push rsi ; sub al, 0xc7 ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff8000372dec : push rsi ; sub bh, bh ; ret 0x8941
0xffffff8000881338 : push rsi ; sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80007f455e : push rsi ; sysenter
0xffffff8000663afe : push rsi ; xchg eax, esp ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000555b96 : push rsi ; xlatb ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000603866 : push rsi ; xor al, 0xe9 ; ret
0xffffff80005cdc63 : push rsi ; xor byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff800045171a : push rsi ; xor byte ptr [rax - 0x77], cl ; ret
0xffffff80002f135f : push rsi ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff8000831bf2 : push rsi ; xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007336bf : push rsi ; xor eax, 0xb840f80 ; ret
0xffffff8000345e0c : push rsp ; adc byte ptr ds:[rax + 0x39], cl ; ret 0xd74
0xffffff8000646d7f : push rsp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff80006a6e7a : push rsp ; add byte ptr [r9 + r9*4 - 0x12], cl ; call 0xffffff80002d4ef9
0xffffff80005f4440 : push rsp ; add byte ptr [rbp - 0x75], cl ; insd dword ptr [rdi], dx ; add cl, ch ; ret 0
0xffffff800051d1b7 : push rsp ; add byte ptr [rcx], bh ; ret
0xffffff80004225c7 : push rsp ; add byte ptr [rcx], dh ; shr al, 0x80 ; ret 0xffe7
0xffffff80006240b4 : push rsp ; add byte ptr [rsi], 0xf ; scasd eax, dword ptr [rdi] ; ret
0xffffff800072d996 : push rsp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x5d04314f], al ; ret
0xffffff80008ae775 : push rsp ; add dword ptr [rax], ebp ; xor eax, eax ; pop rbp ; ret
0xffffff80002af5a4 : push rsp ; add dword ptr [rax], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000898981 : push rsp ; add dword ptr [rax], ecx ; mov al, 1 ; pop rbp ; ret
0xffffff80006df9e6 : push rsp ; add eax, 0xc0310000 ; pop rbp ; ret
0xffffff8000695383 : push rsp ; add rsp, 0x10 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002768aa : push rsp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005076d6 : push rsp ; and al, 0x58 ; call rax
0xffffff8000389741 : push rsp ; and al, 8 ; call qword ptr [rax]
0xffffff800063267c : push rsp ; and ecx, dword ptr [rdi] ; pop rbp ; ret
0xffffff80007f1638 : push rsp ; fdiv qword ptr [rbx] ; add al, ch ; call qword ptr [rbx]
0xffffff800059f472 : push rsp ; je 0xffffff800059f47b ; pop rbp ; ret
0xffffff8000805a88 : push rsp ; jno 0xffffff8000805a91 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000344c58 : push rsp ; jnp 0xffffff8000344c64 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000836d48 : push rsp ; jnp 0xffffff8000836d50 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000689818 : push rsp ; lea rdi, [rip + 0x327cba] ; jmp 0xffffff80006897ed
0xffffff80005e5308 : push rsp ; lea rdi, [rip + 0x3b5641] ; jmp 0xffffff80005e52dd
0xffffff80006aae99 : push rsp ; mov esi, 1 ; mov rdi, r15 ; call rax
0xffffff80006d6e24 : push rsp ; mov rdi, r14 ; call 0xffffff8000393046
0xffffff80005076d3 : push rsp ; mov rdx, qword ptr [r12 + 0x58] ; call rax
0xffffff80004a67d4 : push rsp ; or byte ptr [rsi + rsi*8], cl ; ret 0xbe01
0xffffff8000604c84 : push rsp ; or byte ptr cs:[rax - 0x73], cl ; jne 0xffffff8000604c52 ; call rax
0xffffff80007fefc8 : push rsp ; or ch, byte ptr [rcx] ; add byte ptr [rcx - 0x75], cl ; add al, 0 ; pop rbp ; jmp rax
0xffffff8000b496b1 : push rsp ; or r9b, byte ptr [rax + 1] ; ret 0x294c
0xffffff8000389d6e : push rsp ; pop rbp ; ret
0xffffff800075dfe8 : push rsp ; push rax ; ret
0xffffff80006537c8 : push rsp ; push rcx ; enter 0x48ff, -0x77 ; ret
0xffffff8000376bc5 : push rsp ; push rdi ; add al, ch ; ret
0xffffff8000482bcd : push rsp ; ret
0xffffff8000489968 : push rsp ; ret 0
0xffffff80006bec13 : push rsp ; ret 0x2f
0xffffff800025440a : push rsp ; ret 0x4808
0xffffff8000802f9e : push rsp ; ret 0xb818
0xffffff800054b8e8 : push rsp ; ret 0xffd4
0xffffff8000531f58 : push rsp ; ret 0xffd5
0xffffff800089707b : push rsp ; rol dword ptr [rax + rsi*4], 1 ; pop rbp ; ret
0xffffff80007f6f49 : push rsp ; setg al ; movzx eax, al ; pop rbp ; ret
0xffffff800085d83f : push rsp ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c0565 : push rsp ; sysenter
0xffffff80004439fb : push rsp ; xchg eax, ebp ; mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff80008ec03f : push rsp ; xor al, byte ptr [rax + rcx*2 - 0x7d] ; ret 0x4803
0xffffff80002db45f : push rsp ; xor dword ptr [rax], esp ; mov rax, rdx ; pop rbp ; ret
0xffffff8000284e38 : push rsp ; xor dword ptr [rcx + rax], eax ; ret 0x894c
0xffffff8000284cde : push rsp ; xor dword ptr [rcx + rax], eax ; ret 0x8b48
0xffffff8000b3fa09 : push rsp ; xor ecx, dword ptr [rax + 0x31] ; ret 0x8d4c
0xffffff800080eab8 : pushfq ; add al, 0x2f ; add byte ptr [rax + 0x29], cl ; ret
0xffffff80004ba34b : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0xffffff8000829110 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1777
0xffffff8000828f6f : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff800089f27b : pushfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff8000708415 : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003e814c : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76be8fb9], cl ; ret 0xc141
0xffffff80006d8716 : pushfq ; add byte ptr [rax], al ; add dh, bh ; ret 0xb60f
0xffffff8000831250 : pushfq ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000491ec2 : pushfq ; add rax, r12 ; jmp rax
0xffffff80007cbd73 : pushfq ; and al, 0x5f ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ret
0xffffff80007a59f6 : pushfq ; and al, 0x78 ; add dword ptr [rax], eax ; add bh, dh ; ret
0xffffff8000778292 : pushfq ; and al, 0xe8 ; add byte ptr [rax], al ; add al, ch ; push rbx ; ret 0x49ff
0xffffff8000683849 : pushfq ; and al, 0xf8 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80008df303 : pushfq ; and al, 4 ; add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret
0xffffff80008df2a6 : pushfq ; and al, 4 ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff800086cc8e : pushfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d9095 : pushfq ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006db6b9 : pushfq ; cmp dword ptr [rax], eax ; push rax ; ret
0xffffff80007f9877 : pushfq ; mov ecx, 0xff894cff ; call 0xffffff80002b5b68
0xffffff8000399944 : pushfq ; pop rax ; shr eax, 9 ; and eax, 1 ; pop rbp ; ret
0xffffff800038a243 : pushfq ; pop rbp ; ret
0xffffff800076d1a0 : pushfq ; pop rsi ; ret 0x49ff
0xffffff800076d190 : pushfq ; push rdi ; ret 0x48ff
0xffffff80002ec580 : pushfq ; ret
0xffffff8000862180 : pushfq ; ret 0x1a
0xffffff8000260203 : pushfq ; ret 0x1deb
0xffffff80006644e6 : pushfq ; ret 0x48ff
0xffffff80004975cf : pushfq ; ret 0x49
0xffffff80007693e1 : pushfq ; ret 0x49ff
0xffffff80007c77ab : pushfq ; ret 0x550a
0xffffff800083c5d6 : pushfq ; ret 0x800
0xffffff800040dd04 : pushfq ; ret 0x8949
0xffffff800029b705 : pushfq ; ret 0x98
0xffffff80007455d5 : pushfq ; ret 0xf40
0xffffff8000255e61 : pushfq ; ret 0xf7d
0xffffff80006cc680 : pushfq ; ret 0xffc0
0xffffff800059ed00 : pushfq ; ret 0xffcf
0xffffff8000674bc5 : pushfq ; ret 0xfff
0xffffff8000251eb0 : pushfq ; ret 3
0xffffff80002960e0 : pushfq ; ror dword ptr [rdi], cl ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e9
0xffffff800053d120 : pushfq ; scasd eax, dword ptr [rdi] ; pop rcx ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80006badf5 : pushfq ; str word ptr [rax - 0x77] ; ret
0xffffff80008ef404 : pushfq ; test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000816a50 : pushfq ; test eax, 0x8948ffff ; ret
0xffffff80007bf88c : rcl ah, 0xfd ; ljmp [rcx] ; ret
0xffffff80002d6f01 : rcl bl, 1 ; call 0xffffff7fc231fa57
0xffffff800053cb38 : rcl bl, 1 ; loop 0xffffff800053cb41 ; ret 0xead3
0xffffff800083b87d : rcl byte ptr [rax + 0x49], 0xff ; ret
0xffffff800084e657 : rcl byte ptr [rax], 0x5d ; ret
0xffffff80002ee1fd : rcl byte ptr [rax], 0xff ; ret 0xed75
0xffffff80006a79c5 : rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a7822 : rcl byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000390839 : rcl byte ptr [rbp], cl ; jmp 0xffffff8000390849
0xffffff800065fafc : rcl byte ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800076503c : rcl byte ptr [rdi + 0x4be80037], 0xd7 ; ret 0x31ff
0xffffff8000634bc3 : rcl byte ptr [rsi], 0x89 ; ret 0x8844
0xffffff800076cdad : rcl dword ptr [rax + 0x48000000], 0x39 ; ret 0xde7c
0xffffff8000497ae1 : rcl dword ptr [rax + rcx*2], 0x39 ; ret 0xcf72
0xffffff80008a060d : rcl dword ptr [rax], 0x39 ; ret
0xffffff800078cc62 : rcl dword ptr [rax], 0x4c ; cmp ecx, eax ; jl 0xffffff800078cc58 ; pop rbp ; ret
0xffffff80003f2fcd : rcl dword ptr [rax], 0x83 ; ret 0x75fc
0xffffff80006a7675 : rcl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065fc04 : rcl dword ptr [rbx], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007659a9 : rcl dword ptr [rcx], cl ; ret
0xffffff80006d441b : rcl dword ptr [rdi - 0x76b30021], 0xe7 ; jmp 0xffffff80006d43ee
0xffffff800073758c : rcl dword ptr [rsi - 0x64530001], 0xff ; call qword ptr [rbx]
0xffffff80003f5a7b : rcl ebp, 0xf9 ; push rsi ; ret
0xffffff800065fc03 : rcl qword ptr [r11], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80006608da : rcr al, cl ; ret 0x49ff
0xffffff800076506a : rcr bh, cl ; ret 0x48ff
0xffffff80007ffb16 : rcr byte ptr [r9], 1 ; sal bh, cl ; ror byte ptr [rcx], cl ; ret 0x8349
0xffffff800043d04f : rcr byte ptr [rax + 2], 0 ; add byte ptr [rcx], bh ; ret 0x428d
0xffffff800067850e : rcr byte ptr [rax + 2], 0 ; add byte ptr [rcx], ch ; ret
0xffffff80005e304c : rcr byte ptr [rax - 0x31], 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000764f3c : rcr byte ptr [rax - 0x7417ffc9], 0xd5 ; ret 0x48ff
0xffffff80008db016 : rcr byte ptr [rax], 0x83 ; sar esi, 0x75 ; ret
0xffffff800089a42c : rcr byte ptr [rbp + 0x41], cl ; jmp rcx
0xffffff800077d881 : rcr byte ptr [rbp - 0x17], cl ; outsb dx, byte ptr [rsi] ; mov dl, 0xff ; pop rbp ; ret
0xffffff80004eecac : rcr byte ptr [rbp - 0x3d], 0x31 ; rcr byte ptr [rbp - 0x3d], 0x5d ; ret
0xffffff8000511b95 : rcr byte ptr [rbp - 0x3d], 0x4c ; mov eax, eax ; pop rbp ; ret
0xffffff80006523bd : rcr byte ptr [rbp - 0x3d], 0x55 ; mov rbp, rsp ; pop rbp ; ret
0xffffff80004eecb0 : rcr byte ptr [rbp - 0x3d], 0x5d ; ret
0xffffff80006d056d : rcr byte ptr [rbp - 0x3d], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000725493 : rcr byte ptr [rbp - 0x3d], 0xc6 ; add dword ptr [rcx], eax ; mov al, 1 ; pop rbp ; ret
0xffffff8000716668 : rcr byte ptr [rbp - 0x3d], 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000381ed3 : rcr byte ptr [rbp], 1 ; mov rbx, r9 ; call 0xffffff800028e158
0xffffff80004f9e84 : rcr byte ptr [rbp], cl ; pop rbp ; ret
0xffffff800025930c : rcr byte ptr [rbx + 0x41], 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000492239 : rcr byte ptr [rbx + 0x41], 0x5e ; pop r15 ; pop rbp ; ret
0xffffff8000258bf2 : rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800054d8bb : rcr byte ptr [rbx + 0x41], 1 ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff800049cbf8 : rcr byte ptr [rbx + 0x41], 1 ; pop rsi ; pop rbp ; ret
0xffffff80008df4cc : rcr byte ptr [rbx + 0x41], cl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; jmp rax
0xffffff800051be7c : rcr byte ptr [rbx], 0x39 ; ret
0xffffff800074d5e5 : rcr byte ptr [rcx + 0x28], cl ; add al, ch ; ret 0xb40b
0xffffff8000488b2a : rcr byte ptr [rcx + 1], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007ffb17 : rcr byte ptr [rcx], 1 ; sal bh, cl ; ror byte ptr [rcx], cl ; ret 0x8349
0xffffff8000720dac : rcr byte ptr [rsi + 0x6c766ff], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003719c4 : rcr byte ptr [rsi], 0x89 ; ret 0x3144
0xffffff80003736c4 : rcr byte ptr [rsi], 0x89 ; ret 0xfa31
0xffffff80004fb8f7 : rcr ch, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004cbd3d : rcr dword ptr [r11 + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002d2d24 : rcr dword ptr [r13 - 0x3d], 0x48 ; mov eax, ecx ; pop rbp ; ret
0xffffff800050a305 : rcr dword ptr [r13 - 0x3d], 0x5d ; ret
0xffffff80002ce60b : rcr dword ptr [rax], 0 ; add byte ptr [rbx + 0x440f01f8], al ; ret
0xffffff80008034fa : rcr dword ptr [rax], 0x20 ; xor eax, eax ; pop rbp ; ret
0xffffff8000802ba1 : rcr dword ptr [rax], 0x20 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000484bbd : rcr dword ptr [rax], 0xf6 ; ret
0xffffff8000358c2e : rcr dword ptr [rbp - 0x17], 0x4b ; sar ebx, 0xff ; pop rbp ; ret
0xffffff8000358c8e : rcr dword ptr [rbp - 0x17], 0xeb ; sar bl, 0xff ; pop rbp ; ret
0xffffff80002d2d25 : rcr dword ptr [rbp - 0x3d], 0x48 ; mov eax, ecx ; pop rbp ; ret
0xffffff800050a306 : rcr dword ptr [rbp - 0x3d], 0x5d ; ret
0xffffff800071646c : rcr dword ptr [rbp - 0x3d], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000767419 : rcr dword ptr [rbx + 0x2c], cl ; add al, ch ; fidiv word ptr [rdx] ; ret
0xffffff80002fdece : rcr dword ptr [rbx + 0x41], 0x5c ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80004cbd3e : rcr dword ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800086bbf6 : rcr dword ptr [rcx + 0x5d010027], 1 ; ret
0xffffff80002a62ba : rcr dword ptr [rcx], 0xc0 ; and eax, 1 ; pop rbp ; ret
0xffffff800036fbd8 : rcr dword ptr [rsi], 0xd1 ; ret
0xffffff80004db574 : rcr edi, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075556b : rcr edx, 1 ; ret
0xffffff8000764f69 : rcr edx, cl ; ret 0x48ff
0xffffff80008034f9 : rcr qword ptr [rax], 0x20 ; xor eax, eax ; pop rbp ; ret
0xffffff80003c7959 : rdmsr ; and eax, 0xf ; pop rbp ; ret
0xffffff80003991e5 : rdmsr ; mov dword ptr [rsi], eax ; mov dword ptr [rdi], edx ; xor eax, eax ; ret
0xffffff8000399202 : rdmsr ; mov dword ptr [rsi], eax ; mov dword ptr [rsi + 4], edx ; xor eax, eax ; ret
0xffffff80003a8c2a : rdmsr ; pop rbp ; ret
0xffffff80007dcc28 : rdtsc ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, edi ; call rax
0xffffff8000399263 : rep movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0xffffff80007543ed : rep movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff800080d087 : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, r8d ; pop rbp ; ret
0xffffff800025002e : ret
0xffffff8000250e45 : ret 0
0xffffff800028610b : ret 0x10
0xffffff800044fac5 : ret 0x100
0xffffff80002d73bf : ret 0x1000
0xffffff80006d4b96 : ret 0x1002
0xffffff800029781a : ret 0x100d
0xffffff800083f4ab : ret 0x101
0xffffff80008fe837 : ret 0x1011
0xffffff80006b3ffa : ret 0x103e
0xffffff80003737da : ret 0x105
0xffffff80006b2e5a : ret 0x1052
0xffffff800029073a : ret 0x106a
0xffffff800028ff3a : ret 0x1072
0xffffff8000626208 : ret 0x1073
0xffffff80007bcb17 : ret 0x1076
0xffffff8000588276 : ret 0x108
0xffffff8000624bbb : ret 0x1085
0xffffff80007a77ae : ret 0x10b9
0xffffff800028b61a : ret 0x10cf
0xffffff800082ec0a : ret 0x10e5
0xffffff800058faf1 : ret 0x10e9
0xffffff800025d969 : ret 0x10eb
0xffffff80008babea : ret 0x10f
0xffffff800027721c : ret 0x11
0xffffff80003c8958 : ret 0x110
0xffffff8000b3a9e4 : ret 0x115
0xffffff8000311778 : ret 0x1174
0xffffff80005afaec : ret 0x1175
0xffffff80003b379b : ret 0x1176
0xffffff8000728699 : ret 0x1177
0xffffff8000803552 : ret 0x118
0xffffff800026aeeb : ret 0x1189
0xffffff800066869a : ret 0x11d
0xffffff8000274f1a : ret 0x11d4
0xffffff80003728b1 : ret 0x11e
0xffffff80002751ca : ret 0x11e2
0xffffff80007fa119 : ret 0x11e8
0xffffff8000419700 : ret 0x11eb
0xffffff80002dc828 : ret 0x12
0xffffff800026e91a : ret 0x123a
0xffffff80003b4745 : ret 0x1272
0xffffff8000436159 : ret 0x1275
0xffffff80004738ce : ret 0x127e
0xffffff80008d2f99 : ret 0x127f
0xffffff80004fa90b : ret 0x128
0xffffff800026911a : ret 0x1292
0xffffff80008d0aff : ret 0x129f
0xffffff800028599b : ret 0x12b8
0xffffff800027b48a : ret 0x12c
0xffffff800026a83a : ret 0x12c9
0xffffff8000850947 : ret 0x12e9
0xffffff8000254405 : ret 0x12eb
0xffffff8000804153 : ret 0x12fc
0xffffff8000256808 : ret 0x13
0xffffff800025d07a : ret 0x1359
0xffffff80002677d8 : ret 0x1373
0xffffff80003c6025 : ret 0x1375
0xffffff8000897e7d : ret 0x1376
0xffffff8000793930 : ret 0x1378
0xffffff800046af52 : ret 0x137d
0xffffff800081f30a : ret 0x139
0xffffff800025847a : ret 0x13ab
0xffffff8000740807 : ret 0x13e8
0xffffff80005dcf9d : ret 0x13eb
0xffffff800048ffcb : ret 0x13fc
0xffffff800056b0c2 : ret 0x14
0xffffff8000533739 : ret 0x140
0xffffff8000251d5a : ret 0x140b
0xffffff80002c72fe : ret 0x141
0xffffff80003af435 : ret 0x144
0xffffff80008af928 : ret 0x145
0xffffff80005be099 : ret 0x1475
0xffffff800071ea07 : ret 0x148
0xffffff80003851ef : ret 0x1488
0xffffff80002fa29d : ret 0x1489
0xffffff8000282485 : ret 0x148b
0xffffff8000262f9e : ret 0x149
0xffffff80002611c0 : ret 0x14c
0xffffff80006446b8 : ret 0x14d
0xffffff800089a4f3 : ret 0x15
0xffffff80004ff006 : ret 0x150
0xffffff80005fe5e0 : ret 0x1501
0xffffff8000698a2e : ret 0x1573
0xffffff8000443903 : ret 0x1575
0xffffff800085067f : ret 0x1576
0xffffff80002af954 : ret 0x1589
0xffffff800066136a : ret 0x15b1
0xffffff8000455365 : ret 0x15e8
0xffffff8000839877 : ret 0x15eb
0xffffff800077a50a : ret 0x162
0xffffff80003c5ff5 : ret 0x1675
0xffffff800036f284 : ret 0x1676
0xffffff800039a65b : ret 0x1689
0xffffff80004a9b5f : ret 0x16b8
0xffffff80007e14af : ret 0x16bb
0xffffff8000845026 : ret 0x16e9
0xffffff80002fc3da : ret 0x17
0xffffff80008c9fb4 : ret 0x1774
0xffffff8000829116 : ret 0x1777
0xffffff80004d3248 : ret 0x1778
0xffffff8000540f96 : ret 0x177c
0xffffff80006077ba : ret 0x177f
0xffffff800087b224 : ret 0x179f
0xffffff8000655eec : ret 0x17e9
0xffffff800030a1d1 : ret 0x18
0xffffff80005cff98 : ret 0x1872
0xffffff8000328356 : ret 0x1874
0xffffff800048ae29 : ret 0x1875
0xffffff80003cad35 : ret 0x187d
0xffffff800054f715 : ret 0x188a
0xffffff80007555f2 : ret 0x189
0xffffff80004883e8 : ret 0x18a
0xffffff800056caf2 : ret 0x18e8
0xffffff8000793ba2 : ret 0x18eb
0xffffff80008639ed : ret 0x18f5
0xffffff80006187d2 : ret 0x19
0xffffff8000866ec7 : ret 0x1913
0xffffff8000324170 : ret 0x1973
0xffffff8000530e39 : ret 0x1974
0xffffff800061cdaa : ret 0x19a5
0xffffff8000670fea : ret 0x19d4
0xffffff80004571c6 : ret 0x19eb
0xffffff800085235c : ret 0x19f5
0xffffff8000372cda : ret 0x1a
0xffffff800084e509 : ret 0x1a2d
0xffffff80004de38a : ret 0x1a6
0xffffff800065af3e : ret 0x1a73
0xffffff80005e4d49 : ret 0x1a74
0xffffff800083d6f7 : ret 0x1a76
0xffffff800076efbe : ret 0x1a8a
0xffffff80004ddd90 : ret 0x1ae8
0xffffff800066daf3 : ret 0x1aeb
0xffffff800036899a : ret 0x1b
0xffffff80002da458 : ret 0x1b2
0xffffff80006e9cba : ret 0x1b7
0xffffff80004b34e2 : ret 0x1b74
0xffffff80006ab892 : ret 0x1b75
0xffffff8000485cbc : ret 0x1b8
0xffffff800030f543 : ret 0x1b9
0xffffff80005fcda5 : ret 0x1bb
0xffffff8000704130 : ret 0x1be
0xffffff800071284f : ret 0x1be8
0xffffff80002b5b3a : ret 0x1c
0xffffff80005238b2 : ret 0x1c0
0xffffff80008e6caa : ret 0x1c18
0xffffff80006e335a : ret 0x1c3
0xffffff800049bd0c : ret 0x1c7
0xffffff800070acc7 : ret 0x1c73
0xffffff800040a04c : ret 0x1c74
0xffffff800087eb42 : ret 0x1c76
0xffffff80002636b6 : ret 0x1c88
0xffffff8000250242 : ret 0x1c8a
0xffffff8000822701 : ret 0x1cb4
0xffffff80006cfe4b : ret 0x1cba
0xffffff800081ec89 : ret 0x1ce4
0xffffff8000776b34 : ret 0x1ceb
0xffffff800081cd18 : ret 0x1cfc
0xffffff8000331cbc : ret 0x1d
0xffffff80005e367a : ret 0x1d07
0xffffff80008194fc : ret 0x1d21
0xffffff800081824e : ret 0x1d33
0xffffff80008d17aa : ret 0x1d6d
0xffffff800072bf60 : ret 0x1d74
0xffffff8000855342 : ret 0x1d76
0xffffff800052327a : ret 0x1d8
0xffffff800081b72b : ret 0x1da6
0xffffff80007f4ca1 : ret 0x1de7
0xffffff80002b158d : ret 0x1de8
0xffffff80003a0bc3 : ret 0x1de9
0xffffff8000260204 : ret 0x1deb
0xffffff800076ef14 : ret 0x1e
0xffffff80003b7a56 : ret 0x1e72
0xffffff800085cbf9 : ret 0x1e75
0xffffff800083d7ed : ret 0x1e76
0xffffff8000605fd9 : ret 0x1e8
0xffffff8000486e35 : ret 0x1e8a
0xffffff800050e81c : ret 0x1ee8
0xffffff8000556b67 : ret 0x1f
0xffffff80002a20fc : ret 0x1f0f
0xffffff80008efb31 : ret 0x1f5f
0xffffff80007214d2 : ret 0x1f73
0xffffff800056513b : ret 0x1f77
0xffffff800061eb1b : ret 0x1f7d
0xffffff800060664e : ret 0x1f7f
0xffffff8000635ba5 : ret 0x1f8a
0xffffff800036c7ca : ret 0x1f9
0xffffff80006b4abb : ret 0x1fe8
0xffffff8000500b57 : ret 0x1ff
0xffffff80008e58d2 : ret 0x1fff
0xffffff80005abcbb : ret 0x20
0xffffff800037f3b7 : ret 0x200
0xffffff80006d4ba4 : ret 0x2001
0xffffff800066f1ab : ret 0x2006
0xffffff800073bdd4 : ret 0x2014
0xffffff80007e3da4 : ret 0x2015
0xffffff80004d5c39 : ret 0x202
0xffffff800033fbd9 : ret 0x2040
0xffffff8000572a3d : ret 0x2041
0xffffff80003c42cd : ret 0x2044
0xffffff8000721496 : ret 0x2073
0xffffff80005aff6d : ret 0x2074
0xffffff8000874972 : ret 0x208
0xffffff80008dbdba : ret 0x209a
0xffffff800084eba9 : ret 0x20a8
0xffffff80007cf7de : ret 0x20b4
0xffffff800066bfdf : ret 0x20b8
0xffffff800059e7f8 : ret 0x20bb
0xffffff80005da495 : ret 0x20eb
0xffffff80007d3eaa : ret 0x20fa
0xffffff80003679ba : ret 0x21
0xffffff80008950aa : ret 0x2134
0xffffff8000b3c507 : ret 0x2141
0xffffff80005df583 : ret 0x2144
0xffffff8000b3c11d : ret 0x2145
0xffffff80002623f7 : ret 0x2148
0xffffff8000b444b9 : ret 0x2149
0xffffff800026fdbc : ret 0x214c
0xffffff800026fdaa : ret 0x214d
0xffffff800062ebda : ret 0x2173
0xffffff800084a83c : ret 0x2174
0xffffff800070475a : ret 0x219
0xffffff800088e2aa : ret 0x21a2
0xffffff80007c18b0 : ret 0x21c9
0xffffff80007c5134 : ret 0x21dd
0xffffff80007a1b79 : ret 0x21e8
0xffffff8000726867 : ret 0x21eb
0xffffff8000590b9f : ret 0x22
0xffffff800037c04a : ret 0x222
0xffffff8000622dea : ret 0x223f
0xffffff800042bbba : ret 0x226
0xffffff80008ec26a : ret 0x2272
0xffffff800060032b : ret 0x2275
0xffffff800086e552 : ret 0x2290
0xffffff80007b33c0 : ret 0x22a7
0xffffff80003a1e21 : ret 0x22c
0xffffff80004e6d58 : ret 0x22e8
0xffffff80002a63e7 : ret 0x22eb
0xffffff80008a9470 : ret 0x23
0xffffff80005509c9 : ret 0x2304
0xffffff800062ea73 : ret 0x2372
0xffffff80005e5529 : ret 0x2374
0xffffff800036e7e3 : ret 0x2376
0xffffff8000875ada : ret 0x238
0xffffff8000718336 : ret 0x23c
0xffffff80002c9817 : ret 0x23e8
0xffffff8000441135 : ret 0x23eb
0xffffff800050c8ba : ret 0x24
0xffffff8000269e8a : ret 0x242
0xffffff80008635aa : ret 0x244f
0xffffff800084cbf9 : ret 0x2473
0xffffff80004aa8de : ret 0x2474
0xffffff8000334381 : ret 0x2475
0xffffff8000860eaa : ret 0x2476
0xffffff800072b652 : ret 0x2477
0xffffff800053aa39 : ret 0x247f
0xffffff800085cfaa : ret 0x24b5
0xffffff80008e9542 : ret 0x24e0
0xffffff80008e8ffa : ret 0x24e6
0xffffff80003150c7 : ret 0x24eb
0xffffff8000783b22 : ret 0x24fb
0xffffff800039813a : ret 0x25
0xffffff80004da5ea : ret 0x2541
0xffffff8000611ff2 : ret 0x2573
0xffffff800026878a : ret 0x259
0xffffff8000775a0f : ret 0x25dc
0xffffff80008b84d5 : ret 0x25e8
0xffffff8000777cb8 : ret 0x25f0
0xffffff80003bc37a : ret 0x26
0xffffff80008d5dfa : ret 0x2616
0xffffff80008d21c2 : ret 0x262f
0xffffff80005b6237 : ret 0x2674
0xffffff8000840140 : ret 0x2676
0xffffff800076ea30 : ret 0x267b
0xffffff800036c07a : ret 0x269
0xffffff800089378a : ret 0x26b8
0xffffff8000529cea : ret 0x26d
0xffffff80006c0f54 : ret 0x27
0xffffff80008c4dc2 : ret 0x2703
0xffffff80008c33c2 : ret 0x271d
0xffffff80007feb6a : ret 0x274
0xffffff80004ecc3a : ret 0x2748
0xffffff80002de8e7 : ret 0x277
0xffffff800062e9c6 : ret 0x2772
0xffffff80004aa71c : ret 0x2774
0xffffff80006af166 : ret 0x2775
0xffffff8000255c26 : ret 0x2777
0xffffff800062276a : ret 0x2779
0xffffff80008be12a : ret 0x2789
0xffffff800061a9c2 : ret 0x27c
0xffffff8000b3f07b : ret 0x27d1
0xffffff800036e603 : ret 0x27e8
0xffffff8000726bb7 : ret 0x27eb
0xffffff80006b0f6a : ret 0x28
0xffffff800030101a : ret 0x281
0xffffff80007520a4 : ret 0x2818
0xffffff80008b497a : ret 0x2827
0xffffff80008b26c2 : ret 0x282a
0xffffff80004da4aa : ret 0x2847
0xffffff80008b04d2 : ret 0x284d
0xffffff80008aedc2 : ret 0x2863
0xffffff80004483fb : ret 0x2872
0xffffff80004aa73a : ret 0x2874
0xffffff8000449062 : ret 0x2876
0xffffff8000863e7a : ret 0x2897
0xffffff800045f622 : ret 0x28a
0xffffff800061e50a : ret 0x28b9
0xffffff80008587ca : ret 0x28cb
0xffffff8000857432 : ret 0x28de
0xffffff80002bb33a : ret 0x28f5
0xffffff80004f0f91 : ret 0x29
0xffffff80007361be : ret 0x2900
0xffffff80008a4fc2 : ret 0x2901
0xffffff800074b7d7 : ret 0x2904
0xffffff80008a4ac2 : ret 0x2906
0xffffff8000659377 : ret 0x2908
0xffffff80005c0d7b : ret 0x290e
0xffffff80005c0d9a : ret 0x2910
0xffffff8000b457e1 : ret 0x2916
0xffffff8000852e0e : ret 0x291b
0xffffff8000b494e4 : ret 0x291e
0xffffff800036d8ba : ret 0x292
0xffffff800069fd2a : ret 0x2926
0xffffff80004e6a8a : ret 0x2938
0xffffff80002759fb : ret 0x2941
0xffffff800036e199 : ret 0x2944
0xffffff80002abda6 : ret 0x2948
0xffffff800049363d : ret 0x2949
0xffffff8000264527 : ret 0x294c
0xffffff800073db9e : ret 0x2961
0xffffff8000423d8a : ret 0x297
0xffffff8000790952 : ret 0x2973
0xffffff8000789050 : ret 0x2974
0xffffff80006ff2a4 : ret 0x2975
0xffffff80007431de : ret 0x297a
0xffffff800089c8c2 : ret 0x2988
0xffffff800080f84c : ret 0x298d
0xffffff800089d1f2 : ret 0x299c
0xffffff800084a63e : ret 0x299e
0xffffff800089c32a : ret 0x29aa
0xffffff8000899ac2 : ret 0x29b6
0xffffff80003709ea : ret 0x29c
0xffffff8000b3d11a : ret 0x29dc
0xffffff800062f0b1 : ret 0x29e8
0xffffff80003b269d : ret 0x29eb
0xffffff8000629918 : ret 0x29f6
0xffffff80007e061f : ret 0x2a
0xffffff800088f9c6 : ret 0x2a02
0xffffff8000b484e3 : ret 0x2a12
0xffffff8000893cc2 : ret 0x2a14
0xffffff80008915c2 : ret 0x2a3b
0xffffff8000b452a7 : ret 0x2a48
0xffffff80008571fa : ret 0x2a58
0xffffff8000890daa : ret 0x2a5e
0xffffff80008b19ae : ret 0x2a74
0xffffff8000612527 : ret 0x2ab8
0xffffff80008877d2 : ret 0x2ada
0xffffff800035dbe7 : ret 0x2b
0xffffff800083d376 : ret 0x2b0
0xffffff800026a89f : ret 0x2b41
0xffffff800039ecc1 : ret 0x2b48
0xffffff80002bf6a1 : ret 0x2b49
0xffffff80005471d5 : ret 0x2b74
0xffffff800087d189 : ret 0x2ba0
0xffffff8000829689 : ret 0x2bab
0xffffff80005b00f1 : ret 0x2bb1
0xffffff8000878dba : ret 0x2bdb
0xffffff80003b990f : ret 0x2be8
0xffffff800082570a : ret 0x2bea
0xffffff8000719a58 : ret 0x2beb
0xffffff80003635ad : ret 0x2c
0xffffff8000701b71 : ret 0x2c1f
0xffffff8000871fc2 : ret 0x2c31
0xffffff8000871ac2 : ret 0x2c36
0xffffff80008715c2 : ret 0x2c3b
0xffffff80008710c2 : ret 0x2c40
0xffffff8000872d92 : ret 0x2c44
0xffffff800041c4e9 : ret 0x2c6
0xffffff80006c9e07 : ret 0x2c73
0xffffff800029a183 : ret 0x2c74
0xffffff80006f9fee : ret 0x2c89
0xffffff800081ae52 : ret 0x2c93
0xffffff80006f63f7 : ret 0x2cb0
0xffffff8000658ede : ret 0x2ce8
0xffffff8000858eb4 : ret 0x2d
0xffffff800077c56d : ret 0x2d4
0xffffff8000861c8a : ret 0x2d49
0xffffff80004b7a8a : ret 0x2d57
0xffffff80007b4d8a : ret 0x2d64
0xffffff80003a691f : ret 0x2d75
0xffffff800040526a : ret 0x2d77
0xffffff80007fce62 : ret 0x2da2
0xffffff800075242a : ret 0x2dab
0xffffff80006e2970 : ret 0x2dd5
0xffffff800065c19b : ret 0x2deb
0xffffff80007fb536 : ret 0x2e
0xffffff80006decc3 : ret 0x2e0e
0xffffff80006d9a53 : ret 0x2e46
0xffffff80007fe372 : ret 0x2e5d
0xffffff80002568c5 : ret 0x2e66
0xffffff80007a450e : ret 0x2e74
0xffffff80007603a8 : ret 0x2e8
0xffffff80006db6ce : ret 0x2e92
0xffffff80002679a3 : ret 0x2eb
0xffffff80004545ac : ret 0x2ee8
0xffffff80008469ea : ret 0x2eea
0xffffff80006673df : ret 0x2f
0xffffff8000685fd2 : ret 0x2f27
0xffffff80007ed872 : ret 0x2f67
0xffffff800028a480 : ret 0x2f77
0xffffff80007e912a : ret 0x2fae
0xffffff8000418f8a : ret 0x2fc
0xffffff80007f70fb : ret 0x2fe8
0xffffff80003a0bb1 : ret 0x2fe9
0xffffff800058fbd5 : ret 0x2feb
0xffffff80007e41ea : ret 0x2ffd
0xffffff80006aaeda : ret 0x30
0xffffff80003a581c : ret 0x300
0xffffff80003937d3 : ret 0x3000
0xffffff80003bc0ce : ret 0x300f
0xffffff80006b5b53 : ret 0x3031
0xffffff8000b459ae : ret 0x3041
0xffffff8000b3c2b4 : ret 0x3044
0xffffff80008322aa : ret 0x304f
0xffffff800037352d : ret 0x305
0xffffff80007de4f2 : ret 0x3059
0xffffff800048ba64 : ret 0x30a8
0xffffff80006c6812 : ret 0x30cc
0xffffff80003af66a : ret 0x31
0xffffff8000394e97 : ret 0x3104
0xffffff8000493838 : ret 0x3108
0xffffff8000493865 : ret 0x3110
0xffffff80006a4bd0 : ret 0x3114
0xffffff80007e2a50 : ret 0x3118
0xffffff80005ab707 : ret 0x3140
0xffffff80003719c7 : ret 0x3144
0xffffff800026ab5f : ret 0x3145
0xffffff800078ce98 : ret 0x3148
0xffffff8000b45258 : ret 0x3149
0xffffff800041dd33 : ret 0x314c
0xffffff80002bfded : ret 0x3164
0xffffff80006e4064 : ret 0x3170
0xffffff8000447bbb : ret 0x3173
0xffffff8000528293 : ret 0x3174
0xffffff80002ccf85 : ret 0x3175
0xffffff8000589a5f : ret 0x3178
0xffffff800069c7a5 : ret 0x317b
0xffffff800081c782 : ret 0x318c
0xffffff8000252829 : ret 0x31d0
0xffffff80004788ea : ret 0x31d1
0xffffff800083c387 : ret 0x31e0
0xffffff800072e9f9 : ret 0x31e8
0xffffff8000693ec0 : ret 0x31ef
0xffffff800054b5c9 : ret 0x31f8
0xffffff8000693b03 : ret 0x31f9
0xffffff800054d2a7 : ret 0x31fe
0xffffff800065ec84 : ret 0x31ff
0xffffff800051ab83 : ret 0x32
0xffffff80006bc55d : ret 0x322a
0xffffff80006bb2c6 : ret 0x3234
0xffffff800080f6c2 : ret 0x325a
0xffffff800060229d : ret 0x3274
0xffffff800046c7ea : ret 0x3292
0xffffff800035d368 : ret 0x32e8
0xffffff80004731cd : ret 0x33
0xffffff800036f926 : ret 0x331e
0xffffff80003724a1 : ret 0x3344
0xffffff80006a53de : ret 0x3358
0xffffff8000324cbf : ret 0x3372
0xffffff80006d8895 : ret 0x3373
0xffffff80006f73d3 : ret 0x3374
0xffffff80005be3a6 : ret 0x3375
0xffffff80007f5fca : ret 0x3392
0xffffff800069dfde : ret 0x33cc
0xffffff80007f6236 : ret 0x33e5
0xffffff80003d6d23 : ret 0x33eb
0xffffff8000744e7a : ret 0x33f
0xffffff80007bfa8a : ret 0x33f5
0xffffff8000660837 : ret 0x34
0xffffff8000262535 : ret 0x341
0xffffff800079b302 : ret 0x3436
0xffffff800084dd3f : ret 0x344
0xffffff80007f0122 : ret 0x3446
0xffffff80002db457 : ret 0x348
0xffffff800036f2e5 : ret 0x3480
0xffffff800029da7c : ret 0x349
0xffffff80007b023a : ret 0x3491
0xffffff80006be902 : ret 0x3492
0xffffff8000794b6a : ret 0x349d
0xffffff800079402a : ret 0x34a8
0xffffff80007e9ae2 : ret 0x34ac
0xffffff80004f84ea : ret 0x34e8
0xffffff800064a110 : ret 0x35
0xffffff8000654e61 : ret 0x3546
0xffffff800042458e : ret 0x3574
0xffffff80006569bd : ret 0x3576
0xffffff800064f8d1 : ret 0x3581
0xffffff800064fe97 : ret 0x3583
0xffffff8000348939 : ret 0x358b
0xffffff80007d571d : ret 0x3595
0xffffff800064bff4 : ret 0x35b1
0xffffff800064bce7 : ret 0x35b8
0xffffff80002b7f2e : ret 0x35e9
0xffffff80003d6878 : ret 0x35eb
0xffffff800042066e : ret 0x36
0xffffff800053203d : ret 0x3600
0xffffff8000642f0e : ret 0x3643
0xffffff800063ea02 : ret 0x3646
0xffffff800067e6f0 : ret 0x3673
0xffffff8000383bf7 : ret 0x3674
0xffffff800066f525 : ret 0x367e
0xffffff800063b9fe : ret 0x367f
0xffffff800063479a : ret 0x36d6
0xffffff8000764ba4 : ret 0x36e8
0xffffff800073904e : ret 0x36f5
0xffffff800048708a : ret 0x37
0xffffff80004a0133 : ret 0x374
0xffffff80002bb4ea : ret 0x375
0xffffff8000412f8a : ret 0x37a2
0xffffff80007b61ca : ret 0x37e1
0xffffff800084b113 : ret 0x37e9
0xffffff80003386df : ret 0x380
0xffffff80005af546 : ret 0x382a
0xffffff800038689d : ret 0x3874
0xffffff80002da3b8 : ret 0x3877
0xffffff8000582eef : ret 0x388
0xffffff800074bb61 : ret 0x38b5
0xffffff8000b3f44a : ret 0x38de
0xffffff80005a0f21 : ret 0x39
0xffffff80003a9ea0 : ret 0x3902
0xffffff80004b67ea : ret 0x3905
0xffffff80004dd3e2 : ret 0x3910
0xffffff8000395102 : ret 0x3920
0xffffff8000267ef9 : ret 0x3930
0xffffff80007d7913 : ret 0x3938
0xffffff80003b03bc : ret 0x3941
0xffffff80008399f3 : ret 0x3944
0xffffff80004f2b57 : ret 0x3945
0xffffff8000262a76 : ret 0x3948
0xffffff8000287d34 : ret 0x3949
0xffffff8000288eab : ret 0x394c
0xffffff80003c34b6 : ret 0x394d
0xffffff80003cbdca : ret 0x3976
0xffffff8000743682 : ret 0x39b0
0xffffff8000794242 : ret 0x39bd
0xffffff80007931ca : ret 0x39c0
0xffffff800065386a : ret 0x39c9
0xffffff800044099e : ret 0x3a
0xffffff80003aab7a : ret 0x3a00
0xffffff80004a5fea : ret 0x3a0d
0xffffff80006d3fb1 : ret 0x3a21
0xffffff80003e784a : ret 0x3a57
0xffffff800081e15a : ret 0x3a8
0xffffff80005f21cc : ret 0x3a9a
0xffffff800081dd3a : ret 0x3ab
0xffffff80003ad560 : ret 0x3ae8
0xffffff80002f64da : ret 0x3b
0xffffff800046f3ca : ret 0x3b48
0xffffff80004ee7e2 : ret 0x3b4c
0xffffff800043641a : ret 0x3b62
0xffffff80003b6fd3 : ret 0x3b65
0xffffff8000838ffd : ret 0x3b88
0xffffff80007f1115 : ret 0x3bb
0xffffff80005dd03a : ret 0x3bc5
0xffffff80004e17a0 : ret 0x3be
0xffffff800078adff : ret 0x3be8
0xffffff80005da600 : ret 0x3bec
0xffffff80006b5e4a : ret 0x3bed
0xffffff80005c88d1 : ret 0x3c
0xffffff80005d393c : ret 0x3c46
0xffffff80005d308a : ret 0x3c4b
0xffffff80006ad1b2 : ret 0x3c4f
0xffffff80005d1c3b : ret 0x3c5d
0xffffff80006ab7b2 : ret 0x3c69
0xffffff80006e154f : ret 0x3c70
0xffffff800026f322 : ret 0x3c74
0xffffff80002d131d : ret 0x3c75
0xffffff80006aaac2 : ret 0x3c76
0xffffff8000621fa9 : ret 0x3c7d
0xffffff80007a4546 : ret 0x3c7f
0xffffff80003b5ba3 : ret 0x3c8d
0xffffff80005cbd40 : ret 0x3cac
0xffffff800076475a : ret 0x3cb6
0xffffff800069cce2 : ret 0x3cbf
0xffffff80005c7c99 : ret 0x3ccd
0xffffff80006e61de : ret 0x3ce8
0xffffff800069a0e2 : ret 0x3ceb
0xffffff80005c26e0 : ret 0x3d24
0xffffff800049237d : ret 0x3d48
0xffffff80004477af : ret 0x3d73
0xffffff80006d4b49 : ret 0x3d75
0xffffff800044c974 : ret 0x3d7d
0xffffff800034f459 : ret 0x3d83
0xffffff80005b9648 : ret 0x3da0
0xffffff800075468a : ret 0x3db6
0xffffff80006cb26b : ret 0x3dd3
0xffffff8000743e8e : ret 0x3ddb
0xffffff800035e96f : ret 0x3e
0xffffff800040b71a : ret 0x3e0f
0xffffff8000692879 : ret 0x3e1b
0xffffff800074b2de : ret 0x3e49
0xffffff8000748cfd : ret 0x3e6f
0xffffff800035487a : ret 0x3e7
0xffffff8000748afa : ret 0x3e71
0xffffff80004aa8a6 : ret 0x3e74
0xffffff8000682f0a : ret 0x3e75
0xffffff80005ab026 : ret 0x3e7a
0xffffff8000289227 : ret 0x3e8
0xffffff80006db0aa : ret 0x3ea
0xffffff800036007a : ret 0x3eab
0xffffff8000340f0e : ret 0x3eb
0xffffff8000741792 : ret 0x3eda
0xffffff800066c9ca : ret 0x3f
0xffffff80006777e2 : ret 0x3f14
0xffffff800073d01a : ret 0x3f1c
0xffffff80005ce9f0 : ret 0x40
0xffffff80003e56ab : ret 0x4000
0xffffff8000b45c28 : ret 0x4010
0xffffff80003d73a3 : ret 0x402
0xffffff800044c81e : ret 0x4072
0xffffff80004aa839 : ret 0x4074
0xffffff80002fec0c : ret 0x4075
0xffffff8000560dcc : ret 0x4076
0xffffff800055817b : ret 0x408b
0xffffff800025570e : ret 0x40b9
0xffffff800028005a : ret 0x40e8
0xffffff80004c0992 : ret 0x40f6
0xffffff800049186c : ret 0x40fe
0xffffff800067e6ae : ret 0x40ff
0xffffff800042aac3 : ret 0x41
0xffffff80005a71d2 : ret 0x410
0xffffff800086517f : ret 0x4101
0xffffff8000487370 : ret 0x4102
0xffffff80002de8cd : ret 0x4103
0xffffff8000275aa0 : ret 0x4104
0xffffff8000373c3f : ret 0x4105
0xffffff80003d076c : ret 0x4107
0xffffff800057adbd : ret 0x4108
0xffffff80008bc890 : ret 0x4110
0xffffff8000593654 : ret 0x4111
0xffffff800051f04b : ret 0x4114
0xffffff80008e362b : ret 0x4115
0xffffff8000686731 : ret 0x4118
0xffffff80005c0d8e : ret 0x4119
0xffffff800036fb12 : ret 0x411e
0xffffff800026e34a : ret 0x4120
0xffffff8000b493a6 : ret 0x4128
0xffffff8000596ce9 : ret 0x4132
0xffffff8000b483cb : ret 0x4141
0xffffff800057c543 : ret 0x4147
0xffffff8000849937 : ret 0x4148
0xffffff800026dc51 : ret 0x415b
0xffffff80007a498f : ret 0x415d
0xffffff80002fa8e9 : ret 0x4166
0xffffff80004aa88b : ret 0x4174
0xffffff80002fece9 : ret 0x4175
0xffffff8000b3d817 : ret 0x417e
0xffffff800049ebdf : ret 0x418
0xffffff80006240c5 : ret 0x4189
0xffffff800057515c : ret 0x41b8
0xffffff8000b4a1db : ret 0x41bf
0xffffff8000b4722a : ret 0x41c8
0xffffff8000838e11 : ret 0x41d0
0xffffff8000b3ed65 : ret 0x41d6
0xffffff8000b48c56 : ret 0x41ea
0xffffff80003b479e : ret 0x41f6
0xffffff80003e2b30 : ret 0x41fc
0xffffff800044d0fb : ret 0x41fe
0xffffff80004df971 : ret 0x41ff
0xffffff8000561556 : ret 0x42
0xffffff8000b3c215 : ret 0x4204
0xffffff8000371df0 : ret 0x4205
0xffffff8000282173 : ret 0x420f
0xffffff800056bcf3 : ret 0x4230
0xffffff80003a34aa : ret 0x4240
0xffffff8000568c52 : ret 0x4257
0xffffff80003b254d : ret 0x4266
0xffffff80007a46e1 : ret 0x4274
0xffffff8000682a8a : ret 0x4275
0xffffff80005b925d : ret 0x428
0xffffff80004840a8 : ret 0x4288
0xffffff80007e7327 : ret 0x428a
0xffffff8000505c34 : ret 0x428b
0xffffff80003b4385 : ret 0x428d
0xffffff800066db28 : ret 0x42c6
0xffffff80008dfe78 : ret 0x42c7
0xffffff8000496632 : ret 0x42f6
0xffffff80002a17da : ret 0x43
0xffffff80006197cb : ret 0x4303
0xffffff8000849d73 : ret 0x430c
0xffffff800063fce2 : ret 0x430d
0xffffff8000338816 : ret 0x430f
0xffffff80006f9592 : ret 0x435c
0xffffff8000556fcd : ret 0x435f
0xffffff80004aa755 : ret 0x4374
0xffffff8000630bb9 : ret 0x4377
0xffffff8000554210 : ret 0x437f
0xffffff80005543e0 : ret 0x4388
0xffffff80002bccc9 : ret 0x4389
0xffffff8000b3edc2 : ret 0x438f
0xffffff80005a3672 : ret 0x43c
0xffffff8000517197 : ret 0x44
0xffffff8000720671 : ret 0x4401
0xffffff8000382d2a : ret 0x4402
0xffffff8000257620 : ret 0x4404
0xffffff8000370281 : ret 0x4405
0xffffff800054ab3b : ret 0x4407
0xffffff800055019a : ret 0x4408
0xffffff8000b41c77 : ret 0x440e
0xffffff80008545ae : ret 0x440f
0xffffff8000b4076f : ret 0x441d
0xffffff800036fbfa : ret 0x441e
0xffffff80007a01b6 : ret 0x4420
0xffffff8000549476 : ret 0x4421
0xffffff8000548ac4 : ret 0x442c
0xffffff8000547f1a : ret 0x4437
0xffffff800080cd97 : ret 0x4438
0xffffff80005a35e0 : ret 0x444
0xffffff800084e220 : ret 0x4450
0xffffff80003b7462 : ret 0x4465
0xffffff800054f33d : ret 0x4466
0xffffff80006e5e94 : ret 0x4476
0xffffff8000542f33 : ret 0x447d
0xffffff80005a3624 : ret 0x448
0xffffff80005129d2 : ret 0x448d
0xffffff8000624c0a : ret 0x44a7
0xffffff800084a6a0 : ret 0x44c7
0xffffff80007eca06 : ret 0x44e8
0xffffff8000680b50 : ret 0x44f4
0xffffff80004918b1 : ret 0x44fe
0xffffff800065e718 : ret 0x44ff
0xffffff80002ee99b : ret 0x45
0xffffff80003a415d : ret 0x4502
0xffffff8000843c81 : ret 0x4503
0xffffff8000843e1c : ret 0x4504
0xffffff8000373563 : ret 0x4505
0xffffff800045f4bd : ret 0x4508
0xffffff80003e0932 : ret 0x450f
0xffffff80005c0825 : ret 0x4510
0xffffff800036fa1c : ret 0x451e
0xffffff80004ac90d : ret 0x4520
0xffffff8000689746 : ret 0x4528
0xffffff80002f5b7a : ret 0x4550
0xffffff80005ff0d5 : ret 0x455c
0xffffff800043969f : ret 0x4566
0xffffff800073016b : ret 0x4574
0xffffff8000573492 : ret 0x4575
0xffffff80005b9269 : ret 0x458
0xffffff80003b0154 : ret 0x4589
0xffffff8000498709 : ret 0x458b
0xffffff8000b44e9d : ret 0x4598
0xffffff8000682132 : ret 0x459d
0xffffff8000b45283 : ret 0x45a0
0xffffff80006b55a4 : ret 0x45c7
0xffffff8000b3e42b : ret 0x45cd
0xffffff800052863c : ret 0x45db
0xffffff8000b46593 : ret 0x45de
0xffffff80003c1865 : ret 0x45e8
0xffffff8000747b30 : ret 0x45f8
0xffffff80004aaa6b : ret 0x45fc
0xffffff800065e54b : ret 0x45ff
0xffffff80002dea14 : ret 0x46
0xffffff8000523ef6 : ret 0x461c
0xffffff8000350e3a : ret 0x463
0xffffff8000b3d709 : ret 0x4641
0xffffff80004491c4 : ret 0x4676
0xffffff8000316bd2 : ret 0x4689
0xffffff8000671bf2 : ret 0x46a1
0xffffff80004a849a : ret 0x46c
0xffffff80002dc97a : ret 0x46e2
0xffffff80006b5fd5 : ret 0x46ea
0xffffff800050427e : ret 0x47
0xffffff80002bc93f : ret 0x470f
0xffffff80005bfa0e : ret 0x473
0xffffff8000627a4d : ret 0x476
0xffffff80002bfde3 : ret 0x4774
0xffffff8000509aa6 : ret 0x4799
0xffffff800050429e : ret 0x47c2
0xffffff80002be9b2 : ret 0x48
0xffffff80005a206a : ret 0x480
0xffffff80007719cb : ret 0x4800
0xffffff8000369889 : ret 0x4801
0xffffff8000388d92 : ret 0x4802
0xffffff800026a334 : ret 0x4803
0xffffff80008bdc96 : ret 0x4804
0xffffff800025d94f : ret 0x4805
0xffffff80004eda0c : ret 0x4808
0xffffff80004f60ab : ret 0x480c
0xffffff80003a8ea0 : ret 0x480e
0xffffff80002611bc : ret 0x4810
0xffffff80006ac672 : ret 0x4813
0xffffff8000498bc5 : ret 0x4814
0xffffff800026c44a : ret 0x4818
0xffffff8000b48ea3 : ret 0x481b
0xffffff800026a78e : ret 0x481c
0xffffff800036f691 : ret 0x481e
0xffffff8000295a10 : ret 0x4820
0xffffff800026de5d : ret 0x4824
0xffffff800052cfd3 : ret 0x4826
0xffffff8000587710 : ret 0x4828
0xffffff8000b409cd : ret 0x482f
0xffffff80005a3148 : ret 0x4830
0xffffff80002990f8 : ret 0x4838
0xffffff80003c0c94 : ret 0x483c
0xffffff800037056c : ret 0x4840
0xffffff800073dbbf : ret 0x4848
0xffffff800052ca41 : ret 0x484a
0xffffff80008203d6 : ret 0x4850
0xffffff800025863f : ret 0x4855
0xffffff80007dffbb : ret 0x4858
0xffffff80007e1d56 : ret 0x4860
0xffffff80002f8ad0 : ret 0x4862
0xffffff80006a74f1 : ret 0x4864
0xffffff80002e142b : ret 0x4865
0xffffff80006e26d2 : ret 0x4870
0xffffff80003660b5 : ret 0x4876
0xffffff80002fb344 : ret 0x4878
0xffffff80005530de : ret 0x487b
0xffffff8000552fde : ret 0x487c
0xffffff8000473666 : ret 0x488d
0xffffff80004c4e2e : ret 0x4890
0xffffff8000720f43 : ret 0x4898
0xffffff8000b44370 : ret 0x48a
0xffffff8000407dce : ret 0x48b8
0xffffff80002a20c1 : ret 0x48d
0xffffff8000328527 : ret 0x48e0
0xffffff800069f26d : ret 0x48e7
0xffffff80007fe392 : ret 0x48e8
0xffffff8000608779 : ret 0x48ec
0xffffff800078c40d : ret 0x48f0
0xffffff80007ba080 : ret 0x48f3
0xffffff80005c0bed : ret 0x48f4
0xffffff800075356f : ret 0x48f7
0xffffff800075f742 : ret 0x48f8
0xffffff8000630573 : ret 0x48fc
0xffffff8000779fc9 : ret 0x48fd
0xffffff8000669035 : ret 0x48fe
0xffffff8000769974 : ret 0x48ff
0xffffff8000496c2e : ret 0x49
0xffffff80004caaa3 : ret 0x4901
0xffffff800066db0e : ret 0x4902
0xffffff80002763cd : ret 0x4903
0xffffff8000491fea : ret 0x4908
0xffffff80004d2893 : ret 0x490d
0xffffff80005f14da : ret 0x490e
0xffffff80002634a1 : ret 0x490f
0xffffff80003166a2 : ret 0x4918
0xffffff800054c708 : ret 0x4920
0xffffff80006af569 : ret 0x4922
0xffffff80006073f3 : ret 0x4925
0xffffff800049deb9 : ret 0x4938
0xffffff8000b4b877 : ret 0x4939
0xffffff80007e2f5b : ret 0x4960
0xffffff800062e34b : ret 0x4972
0xffffff8000b48201 : ret 0x4974
0xffffff800049362a : ret 0x498b
0xffffff8000428bfe : ret 0x4990
0xffffff8000b44dcf : ret 0x4996
0xffffff8000692d61 : ret 0x49ac
0xffffff8000686cd5 : ret 0x49dd
0xffffff8000406bbb : ret 0x49e9
0xffffff8000567c7e : ret 0x49f0
0xffffff80005cac29 : ret 0x49f4
0xffffff800026eae9 : ret 0x49f8
0xffffff800071e6ef : ret 0x49fc
0xffffff80006735ad : ret 0x49fe
0xffffff800065e2fe : ret 0x49ff
0xffffff80004cbb3e : ret 0x4a
0xffffff80005c67a5 : ret 0x4a35
0xffffff8000b4a395 : ret 0x4a42
0xffffff80005c28a5 : ret 0x4a74
0xffffff800054c398 : ret 0x4a75
0xffffff80004d055a : ret 0x4a89
0xffffff8000684b8e : ret 0x4a8e
0xffffff80004c96b7 : ret 0x4ae3
0xffffff80006b79a0 : ret 0x4ae9
0xffffff80007691bf : ret 0x4aff
0xffffff800051b115 : ret 0x4b
0xffffff800047c710 : ret 0x4b02
0xffffff8000b3c246 : ret 0x4b1d
0xffffff80006257ae : ret 0x4b4f
0xffffff80007c158a : ret 0x4b5
0xffffff80002f1d51 : ret 0x4b8b
0xffffff800044020b : ret 0x4b8d
0xffffff800066f30a : ret 0x4bd0
0xffffff800058fe8d : ret 0x4beb
0xffffff800059d70e : ret 0x4c
0xffffff8000820738 : ret 0x4c01
0xffffff800061fe8c : ret 0x4c02
0xffffff80008eb8e3 : ret 0x4c03
0xffffff8000394f3b : ret 0x4c04
0xffffff800036f024 : ret 0x4c08
0xffffff8000423c1b : ret 0x4c0f
0xffffff800078cd66 : ret 0x4c10
0xffffff80003adf55 : ret 0x4c18
0xffffff8000371c38 : ret 0x4c1e
0xffffff80006ef4d7 : ret 0x4c20
0xffffff80005a4f40 : ret 0x4c24
0xffffff8000491799 : ret 0x4c2b
0xffffff80003db3f6 : ret 0x4c40
0xffffff8000b4b9ff : ret 0x4c42
0xffffff80006d5b27 : ret 0x4c48
0xffffff800048bdfe : ret 0x4c50
0xffffff800061503e : ret 0x4c55
0xffffff80003b37a4 : ret 0x4c6
0xffffff80006138fa : ret 0x4c6c
0xffffff8000318e4c : ret 0x4c7
0xffffff800066686d : ret 0x4c71
0xffffff80007141a0 : ret 0x4c79
0xffffff8000257ab1 : ret 0x4c7d
0xffffff800043685b : ret 0x4c7e
0xffffff8000254795 : ret 0x4c81
0xffffff800036f479 : ret 0x4c8b
0xffffff80003cb109 : ret 0x4c8d
0xffffff800065b9d5 : ret 0x4c90
0xffffff8000b450cf : ret 0x4ca2
0xffffff800060e376 : ret 0x4cb6
0xffffff80002bd259 : ret 0x4cc0
0xffffff800060b9c5 : ret 0x4cea
0xffffff800042cc9b : ret 0x4ceb
0xffffff8000605834 : ret 0x4cec
0xffffff800067c8e8 : ret 0x4cf0
0xffffff8000524c86 : ret 0x4cf2
0xffffff800077a2f9 : ret 0x4cf8
0xffffff800065feb0 : ret 0x4cff
0xffffff8000648806 : ret 0x4d
0xffffff8000873a6f : ret 0x4d00
0xffffff80008bbeb8 : ret 0x4d01
0xffffff80004210a6 : ret 0x4d02
0xffffff800040ee8b : ret 0x4d08
0xffffff80002bd36a : ret 0x4d0f
0xffffff8000816e4a : ret 0x4d10
0xffffff80008785e0 : ret 0x4d38
0xffffff800065f1b2 : ret 0x4d51
0xffffff8000265f67 : ret 0x4d8b
0xffffff8000b474ae : ret 0x4d8e
0xffffff80005ff066 : ret 0x4dae
0xffffff8000b3e990 : ret 0x4daf
0xffffff8000b46707 : ret 0x4dc3
0xffffff80005f9fa2 : ret 0x4dfe
0xffffff80004e9ed5 : ret 0x4dff
0xffffff800057d549 : ret 0x4e
0xffffff80004c63c2 : ret 0x4e0f
0xffffff800046a137 : ret 0x4e3
0xffffff800064084d : ret 0x4e41
0xffffff8000b4b87e : ret 0x4e72
0xffffff80005dadd9 : ret 0x4e74
0xffffff80008ec341 : ret 0x4e75
0xffffff8000793fd6 : ret 0x4e8
0xffffff8000256673 : ret 0x4e8a
0xffffff80005f0c42 : ret 0x4e8e
0xffffff800083a4c6 : ret 0x4e9
0xffffff800031646b : ret 0x4eb
0xffffff800048453f : ret 0x4ee4
0xffffff80003e6b4c : ret 0x4ee8
0xffffff80006d980e : ret 0x4ee9
0xffffff80003d685f : ret 0x4eeb
0xffffff8000627938 : ret 0x4f
0xffffff80005e8bba : ret 0x4f0e
0xffffff80002bcc8b : ret 0x4f0f
0xffffff8000262da5 : ret 0x4f1c
0xffffff800083c40f : ret 0x4f33
0xffffff8000322b74 : ret 0x4f74
0xffffff8000342eca : ret 0x4f8
0xffffff800062b5a2 : ret 0x4f85
0xffffff8000513afa : ret 0x4f88
0xffffff80005dde2a : ret 0x4fbb
0xffffff800062791a : ret 0x4fc4
0xffffff800079f58b : ret 0x4fe8
0xffffff80006291fe : ret 0x50
0xffffff80003b7bb3 : ret 0x502b
0xffffff800042b35a : ret 0x506d
0xffffff80006e5aad : ret 0x5076
0xffffff80005a03aa : ret 0x5081
0xffffff80006c66d0 : ret 0x508d
0xffffff80004ba6b9 : ret 0x50a5
0xffffff800061854d : ret 0x50c4
0xffffff800035d64a : ret 0x50e8
0xffffff80003d6d06 : ret 0x50eb
0xffffff8000559142 : ret 0x50fa
0xffffff800045444c : ret 0x51
0xffffff80005da1b6 : ret 0x512b
0xffffff8000708afd : ret 0x513b
0xffffff8000473cb6 : ret 0x517d
0xffffff800035a6c5 : ret 0x5188
0xffffff800028023a : ret 0x5189
0xffffff80005720d1 : ret 0x518d
0xffffff8000607eb9 : ret 0x51b2
0xffffff8000788559 : ret 0x51e8
0xffffff80004d5454 : ret 0x51e9
0xffffff80008468c6 : ret 0x51ff
0xffffff80006092a8 : ret 0x52
0xffffff800050bf2a : ret 0x5210
0xffffff80005b7552 : ret 0x521d
0xffffff8000b3c398 : ret 0x5222
0xffffff80007a44ea : ret 0x5274
0xffffff80005ac992 : ret 0x52c8
0xffffff8000293a48 : ret 0x52e8
0xffffff800030ab4f : ret 0x53
0xffffff8000436b0b : ret 0x5303
0xffffff80005015f9 : ret 0x537d
0xffffff80004362a1 : ret 0x5388
0xffffff800025913a : ret 0x5389
0xffffff8000365564 : ret 0x538b
0xffffff80003b19ca : ret 0x53a6
0xffffff800059c5c2 : ret 0x53cb
0xffffff80002a59e7 : ret 0x53e8
0xffffff800065c4c1 : ret 0x53ff
0xffffff80005d6a19 : ret 0x54
0xffffff80004ed843 : ret 0x5400
0xffffff80007944ea : ret 0x5439
0xffffff80005a92f2 : ret 0x5441
0xffffff80003a724a : ret 0x5468
0xffffff80003f448a : ret 0x547
0xffffff8000371068 : ret 0x5488
0xffffff800051c8f2 : ret 0x54ab
0xffffff800055cb53 : ret 0x54ba
0xffffff8000416046 : ret 0x54e8
0xffffff800083ab1d : ret 0x54e9
0xffffff8000477865 : ret 0x55
0xffffff80005d2869 : ret 0x5503
0xffffff80007c77ac : ret 0x550a
0xffffff8000621ee1 : ret 0x552b
0xffffff8000850773 : ret 0x5539
0xffffff800038ba3a : ret 0x555
0xffffff800035e37d : ret 0x5572
0xffffff80005d14f5 : ret 0x5574
0xffffff80003702aa : ret 0x5589
0xffffff80005c5332 : ret 0x55d6
0xffffff80005c4b1a : ret 0x55df
0xffffff800072d685 : ret 0x55e8
0xffffff80008979e4 : ret 0x55ff
0xffffff8000577444 : ret 0x5612
0xffffff80004152e2 : ret 0x562b
0xffffff800057537a : ret 0x5633
0xffffff80004d5c4f : ret 0x564
0xffffff80007ba18c : ret 0x5676
0xffffff80008cf6a7 : ret 0x567e
0xffffff800046aba1 : ret 0x5688
0xffffff80005cb6f2 : ret 0x569d
0xffffff800056c9fa : ret 0x56bc
0xffffff80003ef75a : ret 0x57
0xffffff80006b0571 : ret 0x572b
0xffffff80004ba32a : ret 0x572c
0xffffff8000866909 : ret 0x574
0xffffff8000719330 : ret 0x575
0xffffff800037894a : ret 0x5751
0xffffff8000483877 : ret 0x5779
0xffffff80005aa6d2 : ret 0x577a
0xffffff80003b26d6 : ret 0x5789
0xffffff80003f0538 : ret 0x57ab
0xffffff80008e550a : ret 0x57c
0xffffff8000298e25 : ret 0x57d
0xffffff80005056be : ret 0x57e
0xffffff80003a6c93 : ret 0x57e8
0xffffff8000559912 : ret 0x57eb
0xffffff8000846897 : ret 0x57ff
0xffffff800054c084 : ret 0x58
0xffffff800050e95a : ret 0x5810
0xffffff80005a09d9 : ret 0x5812
0xffffff800059f0a2 : ret 0x5826
0xffffff80003e7d11 : ret 0x5835
0xffffff8000554ae2 : ret 0x5838
0xffffff80004483db : ret 0x5873
0xffffff80002ea432 : ret 0x589
0xffffff80002af7ab : ret 0x58b
0xffffff8000393bd1 : ret 0x58bf
0xffffff800054bb3a : ret 0x58c7
0xffffff80005249b2 : ret 0x58e8
0xffffff8000518eaa : ret 0x58f6
0xffffff80003518bf : ret 0x59
0xffffff80004d1f5a : ret 0x5934
0xffffff8000543c32 : ret 0x5946
0xffffff800040c40c : ret 0x597d
0xffffff80005885d1 : ret 0x5996
0xffffff8000318ce5 : ret 0x59eb
0xffffff80003caeb1 : ret 0x59f3
0xffffff80003bc0ef : ret 0x5a
0xffffff80003c6f97 : ret 0x5a27
0xffffff80003c4fa1 : ret 0x5a38
0xffffff80003cc981 : ret 0x5a40
0xffffff80003bb8ef : ret 0x5a50
0xffffff80003c1a7a : ret 0x5a6d
0xffffff800025c830 : ret 0x5a8d
0xffffff8000426a12 : ret 0x5aca
0xffffff800052a2da : ret 0x5adc
0xffffff8000606280 : ret 0x5ae8
0xffffff80005295da : ret 0x5ae9
0xffffff800052845a : ret 0x5afa
0xffffff800051b3c9 : ret 0x5b
0xffffff80003b616a : ret 0x5b16
0xffffff80003afba9 : ret 0x5b7a
0xffffff800045f5db : ret 0x5bb1
0xffffff80003ac9f7 : ret 0x5bb2
0xffffff80007a8e00 : ret 0x5be
0xffffff80005b561f : ret 0x5be8
0xffffff80003e947c : ret 0x5c
0xffffff80004a2d5a : ret 0x5c10
0xffffff800056171a : ret 0x5c32
0xffffff80003968b7 : ret 0x5cc6
0xffffff8000393def : ret 0x5ccb
0xffffff800050a0ca : ret 0x5cd4
0xffffff800058faf9 : ret 0x5ce9
0xffffff80005086ca : ret 0x5cee
0xffffff8000382b8e : ret 0x5d
0xffffff800039008e : ret 0x5d18
0xffffff800038c71d : ret 0x5d3a
0xffffff800032b2ba : ret 0x5d5
0xffffff8000388ca5 : ret 0x5d5b
0xffffff8000388966 : ret 0x5d6f
0xffffff80003726ab : ret 0x5d8b
0xffffff800036793d : ret 0x5dac
0xffffff8000712039 : ret 0x5dbb
0xffffff8000289e8d : ret 0x5de8
0xffffff800047357f : ret 0x5deb
0xffffff80003707cd : ret 0x5e
0xffffff8000381aad : ret 0x5e60
0xffffff8000375bc8 : ret 0x5e7d
0xffffff800037f5ad : ret 0x5e85
0xffffff800037e162 : ret 0x5e99
0xffffff80003e8c12 : ret 0x5ea8
0xffffff80004ac7ba : ret 0x5f
0xffffff80003115fa : ret 0x5f5
0xffffff8000897998 : ret 0x5f74
0xffffff800074387b : ret 0x5fe8
0xffffff8000616677 : ret 0x5ff
0xffffff800034b254 : ret 0x60
0xffffff80005853b1 : ret 0x6072
0xffffff8000351b37 : ret 0x6073
0xffffff8000427b2a : ret 0x60ba
0xffffff800034ac16 : ret 0x60d1
0xffffff8000347de5 : ret 0x60ed
0xffffff80003417ca : ret 0x6143
0xffffff80002d4aca : ret 0x6175
0xffffff80004be5e2 : ret 0x6188
0xffffff800033665c : ret 0x61c6
0xffffff8000318f99 : ret 0x61e8
0xffffff80003216cd : ret 0x62
0xffffff8000331b9f : ret 0x620b
0xffffff800050e6c6 : ret 0x6215
0xffffff80003e668a : ret 0x625
0xffffff80003e648a : ret 0x627
0xffffff800035eb40 : ret 0x6272
0xffffff80004015b5 : ret 0x6273
0xffffff80004b9b38 : ret 0x62e8
0xffffff800076682d : ret 0x62e9
0xffffff800058fe76 : ret 0x62eb
0xffffff80004a7cfa : ret 0x62ec
0xffffff80002afe29 : ret 0x63
0xffffff80002b7446 : ret 0x6348
0xffffff8000443594 : ret 0x6349
0xffffff800030d9a3 : ret 0x6372
0xffffff80005f37c3 : ret 0x6376
0xffffff80004ba362 : ret 0x637e
0xffffff80004bf03a : ret 0x63a3
0xffffff80003e4f8a : ret 0x63c
0xffffff80004987ea : ret 0x63d1
0xffffff8000664377 : ret 0x63e8
0xffffff80003d6aa6 : ret 0x63eb
0xffffff80002f8cd3 : ret 0x64
0xffffff800041923a : ret 0x6412
0xffffff80003e51da : ret 0x642
0xffffff80002fe9a2 : ret 0x6465
0xffffff800048abea : ret 0x64ad
0xffffff80003e408a : ret 0x64b
0xffffff8000489cda : ret 0x64bc
0xffffff8000489071 : ret 0x64c9
0xffffff8000488926 : ret 0x64d0
0xffffff80008ee066 : ret 0x64e8
0xffffff80002eabf6 : ret 0x65
0xffffff80004c6152 : ret 0x653b
0xffffff80007d50d8 : ret 0x657f
0xffffff80002c97d5 : ret 0x65e8
0xffffff8000770e3a : ret 0x65ff
0xffffff80002d9ace : ret 0x66
0xffffff800073773d : ret 0x6603
0xffffff80004aca18 : ret 0x6608
0xffffff8000287d03 : ret 0x6666
0xffffff8000464299 : ret 0x6674
0xffffff80002d68f8 : ret 0x66f3
0xffffff800071e6c3 : ret 0x66fc
0xffffff800071e85a : ret 0x66fe
0xffffff80004e1544 : ret 0x66ff
0xffffff80002c643f : ret 0x67
0xffffff80004a495a : ret 0x670c
0xffffff80002d2176 : ret 0x6717
0xffffff80004a3322 : ret 0x6722
0xffffff80004a2202 : ret 0x6733
0xffffff80002d5821 : ret 0x674
0xffffff8000289373 : ret 0x676
0xffffff80007850d8 : ret 0x677
0xffffff80002c8c8b : ret 0x67a5
0xffffff8000498379 : ret 0x67c0
0xffffff800047c3df : ret 0x67d
0xffffff80002c4cce : ret 0x67dd
0xffffff80002c4041 : ret 0x67e6
0xffffff8000781b13 : ret 0x67e8
0xffffff80002b47c1 : ret 0x68
0xffffff80002bc6a8 : ret 0x684e
0xffffff800048d2a9 : ret 0x6871
0xffffff80002b99a8 : ret 0x687b
0xffffff8000797468 : ret 0x689
0xffffff800084d9e4 : ret 0x68e9
0xffffff8000390d4b : ret 0x69
0xffffff80003c7bfa : ret 0x6926
0xffffff80003c7a4e : ret 0x6929
0xffffff80002ab1a3 : ret 0x693f
0xffffff80002ab0a3 : ret 0x6940
0xffffff80003c8ccb : ret 0x6948
0xffffff80002ffb11 : ret 0x694c
0xffffff8000393d5e : ret 0x6994
0xffffff80002a1d9c : ret 0x69d4
0xffffff80002afb77 : ret 0x6a
0xffffff800029cf92 : ret 0x6a0e
0xffffff80003af1da : ret 0x6a20
0xffffff80003aedfe : ret 0x6a24
0xffffff80002ff6d9 : ret 0x6a74
0xffffff80005734b9 : ret 0x6a75
0xffffff800029538b : ret 0x6a7a
0xffffff80003a6c80 : ret 0x6ae8
0xffffff800027d344 : ret 0x6b
0xffffff800037ae02 : ret 0x6b21
0xffffff80003c0ce2 : ret 0x6b48
0xffffff80002bfb5a : ret 0x6b49
0xffffff800029a119 : ret 0x6b4c
0xffffff80008c1c9e : ret 0x6b74
0xffffff800027e67b : ret 0x6baf
0xffffff800027e17b : ret 0x6bb4
0xffffff800037066a : ret 0x6bc8
0xffffff800026af77 : ret 0x6c
0xffffff800027805d : ret 0x6c10
0xffffff8000452a3a : ret 0x6c14
0xffffff80002a5ff7 : ret 0x6c1c
0xffffff8000271c08 : ret 0x6c6a
0xffffff800036153a : ret 0x6ca9
0xffffff800026ba9e : ret 0x6cb7
0xffffff80002595da : ret 0x6d
0xffffff8000355d8d : ret 0x6d6c
0xffffff80008785f6 : ret 0x6d73
0xffffff80004360f9 : ret 0x6d75
0xffffff8000268366 : ret 0x6d8c
0xffffff800025a0db : ret 0x6db7
0xffffff800039ec2d : ret 0x6de8
0xffffff8000427c61 : ret 0x6e
0xffffff800027867a : ret 0x6e2c
0xffffff80003d0094 : ret 0x6e8
0xffffff800066a614 : ret 0x6eb
0xffffff8000322cfc : ret 0x6ee8
0xffffff800084513e : ret 0x6ee9
0xffffff8000417c23 : ret 0x6f
0xffffff8000251873 : ret 0x6f74
0xffffff80007a4550 : ret 0x6f7f
0xffffff800074366b : ret 0x6fe8
0xffffff800058fe69 : ret 0x6feb
0xffffff800040ea6a : ret 0x7053
0xffffff80002fdef2 : ret 0x707c
0xffffff800049a51f : ret 0x708b
0xffffff800072a799 : ret 0x708d
0xffffff80003d89da : ret 0x70a
0xffffff80002b562a : ret 0x70e8
0xffffff80002c818f : ret 0x7115
0xffffff80003bbf32 : ret 0x7152
0xffffff8000510d29 : ret 0x71e8
0xffffff80003b3a15 : ret 0x71ea
0xffffff80008955f7 : ret 0x720
0xffffff80003b15f7 : ret 0x7211
0xffffff80003afd26 : ret 0x7227
0xffffff80003adcf2 : ret 0x7246
0xffffff80003acfca : ret 0x7253
0xffffff80003a8dea : ret 0x728b
0xffffff80005fb11f : ret 0x728d
0xffffff80003e7772 : ret 0x72cb
0xffffff800058fbfe : ret 0x72e9
0xffffff80002efc5f : ret 0x73
0xffffff80003e27b2 : ret 0x731b
0xffffff80007a802c : ret 0x7374
0xffffff8000301c86 : ret 0x738b
0xffffff80002efb3a : ret 0x73c3
0xffffff80002ef53a : ret 0x73c9
0xffffff80003c83da : ret 0x73cb
0xffffff80002b99af : ret 0x73d2
0xffffff800026eb07 : ret 0x73e8
0xffffff80003ba73a : ret 0x73ec
0xffffff800039f8a1 : ret 0x74
0xffffff80005c386f : ret 0x7400
0xffffff8000259a86 : ret 0x7401
0xffffff80002c6793 : ret 0x7402
0xffffff8000259f84 : ret 0x7403
0xffffff800044b7a7 : ret 0x7404
0xffffff8000640801 : ret 0x7406
0xffffff800025624d : ret 0x7407
0xffffff8000420366 : ret 0x7408
0xffffff800040ede2 : ret 0x7410
0xffffff800038f33a : ret 0x741e
0xffffff800031e20a : ret 0x742
0xffffff800045715b : ret 0x7420
0xffffff800048b949 : ret 0x7430
0xffffff80002e823a : ret 0x743c
0xffffff80006c5ed2 : ret 0x7440
0xffffff80002e7d3a : ret 0x7441
0xffffff800038c5a2 : ret 0x744b
0xffffff80006c741b : ret 0x7460
0xffffff8000624064 : ret 0x7473
0xffffff800059e770 : ret 0x7480
0xffffff800049a52e : ret 0x748b
0xffffff80002e313a : ret 0x748d
0xffffff80006d617a : ret 0x74a
0xffffff800078b46a : ret 0x74e
0xffffff800063f666 : ret 0x74e8
0xffffff80002dc93a : ret 0x74f5
0xffffff80003cb2b4 : ret 0x74fc
0xffffff80003acbfa : ret 0x74fe
0xffffff80003a2f2d : ret 0x75
0xffffff80007590d3 : ret 0x7500
0xffffff80002bad9d : ret 0x7501
0xffffff80002f7f85 : ret 0x7502
0xffffff800028c8d8 : ret 0x7503
0xffffff8000275c16 : ret 0x7504
0xffffff8000336c27 : ret 0x7506
0xffffff8000525ef5 : ret 0x7508
0xffffff80007c4f15 : ret 0x750e
0xffffff80002a3820 : ret 0x7510
0xffffff8000336c70 : ret 0x7519
0xffffff800039b5ba : ret 0x751e
0xffffff800040c477 : ret 0x7520
0xffffff80003f0ac1 : ret 0x7530
0xffffff80004cd2a4 : ret 0x7534
0xffffff8000294a15 : ret 0x7540
0xffffff80003aa96a : ret 0x7541
0xffffff800031f14b : ret 0x7542
0xffffff80007a465d : ret 0x7575
0xffffff800067b744 : ret 0x7576
0xffffff800025d723 : ret 0x7580
0xffffff80004724d4 : ret 0x7589
0xffffff800068e43e : ret 0x758b
0xffffff80003a563a : ret 0x75a1
0xffffff800083d875 : ret 0x75e8
0xffffff80003e46f5 : ret 0x75e9
0xffffff800044eb2c : ret 0x75f8
0xffffff8000276417 : ret 0x75fc
0xffffff80002ee1a3 : ret 0x75fe
0xffffff8000368306 : ret 0x7665
0xffffff80006e3f46 : ret 0x768b
0xffffff80002c0066 : ret 0x76c6
0xffffff80004a4281 : ret 0x774
0xffffff8000387cd6 : ret 0x774d
0xffffff80002b3ae6 : ret 0x778b
0xffffff8000382e12 : ret 0x77ae
0xffffff800025d02a : ret 0x77e
0xffffff800054f663 : ret 0x77e8
0xffffff80002bccc0 : ret 0x77f
0xffffff800037c12a : ret 0x782d
0xffffff8000376e92 : ret 0x785d
0xffffff80005be0a5 : ret 0x7874
0xffffff8000319dca : ret 0x789
0xffffff8000370cf2 : ret 0x78b8
0xffffff8000365e2a : ret 0x7963
0xffffff800054571c : ret 0x798b
0xffffff800036609a : ret 0x798f
0xffffff80003cf8da : ret 0x79b
0xffffff800052874f : ret 0x79b9
0xffffff800064f0b3 : ret 0x79e9
0xffffff800034e8a4 : ret 0x7a
0xffffff8000394832 : ret 0x7a08
0xffffff80003582ca : ret 0x7a3d
0xffffff8000357ffa : ret 0x7a4a
0xffffff80003538f2 : ret 0x7a69
0xffffff800066527f : ret 0x7a8b
0xffffff8000351f9a : ret 0x7a8c
0xffffff800025c590 : ret 0x7a8d
0xffffff800025453a : ret 0x7aca
0xffffff800077677d : ret 0x7ae9
0xffffff800026fd07 : ret 0x7b
0xffffff8000345dea : ret 0x7b42
0xffffff8000344182 : ret 0x7b56
0xffffff80004aa702 : ret 0x7b74
0xffffff80003418da : ret 0x7b80
0xffffff800033d403 : ret 0x7b8b
0xffffff8000316dca : ret 0x7b9
0xffffff800029401f : ret 0x7be8
0xffffff800032d5f5 : ret 0x7c
0xffffff8000337cfa : ret 0x7c2d
0xffffff8000336211 : ret 0x7c37
0xffffff800033565a : ret 0x7c5f
0xffffff80006711c7 : ret 0x7c75
0xffffff8000361ec9 : ret 0x7cdd
0xffffff80003617c9 : ret 0x7ce4
0xffffff800056c41e : ret 0x7ce8
0xffffff800031d161 : ret 0x7d
0xffffff80002eb962 : ret 0x7d38
0xffffff80007e5015 : ret 0x7d77
0xffffff80004f7696 : ret 0x7d83
0xffffff8000474aed : ret 0x7d89
0xffffff800058f984 : ret 0x7de9
0xffffff80002d2c9b : ret 0x7e
0xffffff800066ec88 : ret 0x7e75
0xffffff80002a1231 : ret 0x7eb
0xffffff80002d27da : ret 0x7ec6
0xffffff800049f1fc : ret 0x7ee8
0xffffff800058fbda : ret 0x7eeb
0xffffff80002f76e8 : ret 0x7f
0xffffff800030a716 : ret 0x7f0e
0xffffff8000b3e0a9 : ret 0x7f4d
0xffffff80002fde22 : ret 0x7f5d
0xffffff80002c8642 : ret 0x7f66
0xffffff80007b1e01 : ret 0x7f72
0xffffff8000300efa : ret 0x7f8a
0xffffff80002f8aba : ret 0x7faf
0xffffff80006cef27 : ret 0x7fcf
0xffffff80006cefb8 : ret 0x7fdf
0xffffff80002aab52 : ret 0x7fe0
0xffffff8000b48868 : ret 0x7fe3
0xffffff8000b452ad : ret 0x7ffc
0xffffff80004acc3a : ret 0x80
0xffffff80004fb144 : ret 0x800
0xffffff80003b3e9f : ret 0x8000
0xffffff8000263675 : ret 0x8002
0xffffff80002f8b3a : ret 0x8008
0xffffff80002c7e86 : ret 0x802
0xffffff8000b49cfc : ret 0x8021
0xffffff80002f8bfa : ret 0x803e
0xffffff8000b3d331 : ret 0x8040
0xffffff80008cfd2d : ret 0x8041
0xffffff80004ce7b2 : ret 0x8042
0xffffff8000b468d1 : ret 0x808
0xffffff800079617a : ret 0x80b9
0xffffff800025412a : ret 0x80d
0xffffff8000289f6a : ret 0x80e8
0xffffff8000766f0c : ret 0x80ff
0xffffff80004f66f5 : ret 0x8108
0xffffff80003b1e51 : ret 0x8120
0xffffff8000510c86 : ret 0x8141
0xffffff80002b8e37 : ret 0x8148
0xffffff8000b490d7 : ret 0x8149
0xffffff80002d6292 : ret 0x817d
0xffffff800028a2ca : ret 0x817f
0xffffff800062de9a : ret 0x8189
0xffffff80002d52da : ret 0x818b
0xffffff80002d4ffa : ret 0x818e
0xffffff800056c0aa : ret 0x81d8
0xffffff800080dbf9 : ret 0x81e8
0xffffff80005cd8fc : ret 0x81f6
0xffffff80004b3170 : ret 0x820f
0xffffff8000737a4f : ret 0x828d
0xffffff8000b3ebf6 : ret 0x82b1
0xffffff80008e027a : ret 0x82de
0xffffff800056e658 : ret 0x82e8
0xffffff8000263ace : ret 0x83
0xffffff8000487244 : ret 0x8302
0xffffff800025b345 : ret 0x8303
0xffffff800038b859 : ret 0x8304
0xffffff800061f1c5 : ret 0x8308
0xffffff8000251a80 : ret 0x830f
0xffffff80003a8b2c : ret 0x8310
0xffffff80003adcd7 : ret 0x8318
0xffffff80002e275d : ret 0x832f
0xffffff800035dc51 : ret 0x8333
0xffffff8000360a3e : ret 0x8337
0xffffff800028d0bc : ret 0x8340
0xffffff80002d6b01 : ret 0x8341
0xffffff800064618a : ret 0x8348
0xffffff800025778b : ret 0x8349
0xffffff800050cdb0 : ret 0x834a
0xffffff800027f11c : ret 0x8360
0xffffff800037c941 : ret 0x8366
0xffffff80002affc2 : ret 0x836c
0xffffff80002b627a : ret 0x8373
0xffffff8000666e7c : ret 0x8380
0xffffff8000618741 : ret 0x8389
0xffffff800059773d : ret 0x838a
0xffffff800047226c : ret 0x838b
0xffffff8000808a25 : ret 0x83bd
0xffffff800028683a : ret 0x83be
0xffffff8000833ac2 : ret 0x83bf
0xffffff80004385e0 : ret 0x83cf
0xffffff800053f477 : ret 0x83d
0xffffff8000838972 : ret 0x83d0
0xffffff80006033fb : ret 0x83d5
0xffffff80007e5af2 : ret 0x83e7
0xffffff80002adf8a : ret 0x83f4
0xffffff80004b91b7 : ret 0x83f8
0xffffff8000802f14 : ret 0x83fc
0xffffff800038d961 : ret 0x83fd
0xffffff80004ec4e4 : ret 0x83ff
0xffffff80002e39b6 : ret 0x84
0xffffff80005fcf5b : ret 0x8404
0xffffff80005fce76 : ret 0x8408
0xffffff800026ef58 : ret 0x840f
0xffffff800069bb9c : ret 0x841
0xffffff80002a89bd : ret 0x8431
0xffffff8000421824 : ret 0x844
0xffffff800038e26f : ret 0x8440
0xffffff80008367ed : ret 0x8441
0xffffff800047c1bd : ret 0x8445
0xffffff8000b4b153 : ret 0x848d
0xffffff80002e60c9 : ret 0x849b
0xffffff8000b3c09d : ret 0x84a2
0xffffff80002a1212 : ret 0x84b3
0xffffff800028951a : ret 0x85
0xffffff800039efcb : ret 0x8502
0xffffff80002a5d17 : ret 0x8504
0xffffff80007aa588 : ret 0x8508
0xffffff8000b3cf05 : ret 0x850a
0xffffff80002d1142 : ret 0x850f
0xffffff80004b05b1 : ret 0x8518
0xffffff8000338767 : ret 0x851f
0xffffff8000619836 : ret 0x853b
0xffffff80003118d2 : ret 0x8545
0xffffff800026799c : ret 0x8548
0xffffff8000288a84 : ret 0x854d
0xffffff800025344b : ret 0x8551
0xffffff8000589a6a : ret 0x8566
0xffffff80007a8b7c : ret 0x8569
0xffffff8000323ab1 : ret 0x8589
0xffffff80004f2de0 : ret 0x858b
0xffffff800037116d : ret 0x85c7
0xffffff800028e8da : ret 0x85c9
0xffffff8000832f9b : ret 0x85f0
0xffffff80004ae340 : ret 0x85f6
0xffffff80007630be : ret 0x85ff
0xffffff800030df45 : ret 0x860f
0xffffff80006b6102 : ret 0x8689
0xffffff80008b630a : ret 0x86e
0xffffff8000440e14 : ret 0x86e8
0xffffff800089d3ba : ret 0x870c
0xffffff80002ffb93 : ret 0x870f
0xffffff800030b52a : ret 0x871
0xffffff8000630694 : ret 0x872
0xffffff8000289eb2 : ret 0x8752
0xffffff80008b5a0a : ret 0x877
0xffffff800062eb5d : ret 0x8789
0xffffff8000590b4f : ret 0x87d
0xffffff800040c5e5 : ret 0x87e
0xffffff8000826104 : ret 0x88
0xffffff800038c643 : ret 0x880f
0xffffff800054c51b : ret 0x8840
0xffffff8000554f07 : ret 0x8841
0xffffff8000528e10 : ret 0x8842
0xffffff800072837e : ret 0x8843
0xffffff80003126e0 : ret 0x8844
0xffffff800026321a : ret 0x884b
0xffffff800025ecd2 : ret 0x887f
0xffffff80007c6c65 : ret 0x888d
0xffffff8000b3c357 : ret 0x8894
0xffffff80007076c2 : ret 0x88a
0xffffff80002598da : ret 0x88e3
0xffffff80004ed8f3 : ret 0x88e9
0xffffff8000833c5d : ret 0x8902
0xffffff800036f676 : ret 0x8905
0xffffff80006d0664 : ret 0x8908
0xffffff800062992d : ret 0x890a
0xffffff800060501e : ret 0x890b
0xffffff80006504f2 : ret 0x890f
0xffffff80004c0867 : ret 0x8910
0xffffff800036f831 : ret 0x891e
0xffffff80005853ab : ret 0x8928
0xffffff800026683a : ret 0x892b
0xffffff80003b9ced : ret 0x8930
0xffffff800034ce99 : ret 0x8940
0xffffff80002572f9 : ret 0x8941
0xffffff8000746e5e : ret 0x8943
0xffffff8000275440 : ret 0x8944
0xffffff80002869b2 : ret 0x8945
0xffffff8000728c41 : ret 0x8947
0xffffff8000256281 : ret 0x8948
0xffffff800026ef7e : ret 0x8949
0xffffff800049191c : ret 0x894a
0xffffff800029935c : ret 0x894b
0xffffff800026ee6d : ret 0x894c
0xffffff800026f348 : ret 0x894d
0xffffff8000262cd9 : ret 0x8966
0xffffff80002500b2 : ret 0x896f
0xffffff8000251c7a : ret 0x89b9
0xffffff800083d961 : ret 0x89e8
0xffffff8000845224 : ret 0x89f2
0xffffff8000843eaf : ret 0x89f3
0xffffff8000845311 : ret 0x89f7
0xffffff8000434958 : ret 0x89f8
0xffffff80003cba7e : ret 0x89fc
0xffffff80004e6430 : ret 0x89ff
0xffffff80005fb955 : ret 0x8a40
0xffffff800029e29a : ret 0x8a41
0xffffff80008323a1 : ret 0x8a42
0xffffff8000b44b6c : ret 0x8a43
0xffffff8000388bfa : ret 0x8a45
0xffffff800041c3fe : ret 0x8a90
0xffffff8000251a2e : ret 0x8a9c
0xffffff800079cd20 : ret 0x8ae8
0xffffff80006660a7 : ret 0x8aff
0xffffff80002b5e34 : ret 0x8b
0xffffff800060ef52 : ret 0x8b04
0xffffff8000b47318 : ret 0x8b17
0xffffff8000371d3a : ret 0x8b1e
0xffffff80002b3df5 : ret 0x8b41
0xffffff800028f2b1 : ret 0x8b44
0xffffff8000807cd8 : ret 0x8b48
0xffffff80002673a9 : ret 0x8b49
0xffffff80002562f1 : ret 0x8b4c
0xffffff80003281af : ret 0x8b4d
0xffffff800038f5a7 : ret 0x8b4f
0xffffff80005219ab : ret 0x8b66
0xffffff800040dd31 : ret 0x8b78
0xffffff80008517a2 : ret 0x8ba8
0xffffff80004e5459 : ret 0x8bff
0xffffff80004edece : ret 0x8c0f
0xffffff800026e7c9 : ret 0x8c14
0xffffff80003d6a7a : ret 0x8ce9
0xffffff80007e2671 : ret 0x8d03
0xffffff80003719d9 : ret 0x8d05
0xffffff800043c34a : ret 0x8d0f
0xffffff8000b4b839 : ret 0x8d17
0xffffff8000564f6a : ret 0x8d2
0xffffff8000b4b843 : ret 0x8d2e
0xffffff80006f74e5 : ret 0x8d3b
0xffffff8000410a0f : ret 0x8d41
0xffffff80007c1427 : ret 0x8d42
0xffffff80004bff2c : ret 0x8d44
0xffffff80004aab0a : ret 0x8d45
0xffffff8000b3c25b : ret 0x8d46
0xffffff80003743dd : ret 0x8d47
0xffffff800048d09d : ret 0x8d48
0xffffff8000366cff : ret 0x8d49
0xffffff80002763d4 : ret 0x8d4a
0xffffff80002611fd : ret 0x8d4c
0xffffff8000460a6c : ret 0x8d4d
0xffffff8000b4bb77 : ret 0x8d4e
0xffffff80003c9b5f : ret 0x8d4f
0xffffff80003181b0 : ret 0x8d75
0xffffff800028f324 : ret 0x8d8b
0xffffff800039be09 : ret 0x8dff
0xffffff8000298e3b : ret 0x8e0f
0xffffff800074f79c : ret 0x8ee8
0xffffff800078257c : ret 0x8ee9
0xffffff8000433628 : ret 0x8f0f
0xffffff800062eb4b : ret 0x8f8a
0xffffff80002c9ecd : ret 0x9066
0xffffff80008d7306 : ret 0x90c3
0xffffff8000605a4a : ret 0x90e8
0xffffff800066002d : ret 0x90ff
0xffffff800059bcda : ret 0x9103
0xffffff800030143a : ret 0x911
0xffffff800053d9ca : ret 0x912
0xffffff800030e09c : ret 0x9176
0xffffff800025c01f : ret 0x9189
0xffffff800039ed09 : ret 0x91e8
0xffffff80008171ff : ret 0x91ff
0xffffff80008a07c5 : ret 0x920f
0xffffff80005ebf48 : ret 0x92e8
0xffffff80003ca6ae : ret 0x930f
0xffffff800083e4aa : ret 0x9323
0xffffff800061c143 : ret 0x932b
0xffffff800061c188 : ret 0x9388
0xffffff800029f322 : ret 0x9389
0xffffff8000883458 : ret 0x93ff
0xffffff800044cf96 : ret 0x940f
0xffffff80005d1671 : ret 0x941
0xffffff8000374088 : ret 0x944
0xffffff80002b3273 : ret 0x948
0xffffff800036fc89 : ret 0x948d
0xffffff80002fe47a : ret 0x94b
0xffffff800035b5e9 : ret 0x94c
0xffffff80007b77e6 : ret 0x94e8
0xffffff80008507c5 : ret 0x94e9
0xffffff8000b3fbf2 : ret 0x95
0xffffff800031714a : ret 0x950f
0xffffff80002fdc7a : ret 0x953
0xffffff80003126c0 : ret 0x9588
0xffffff80003dffac : ret 0x9589
0xffffff8000668eb7 : ret 0x958b
0xffffff8000641845 : ret 0x95e8
0xffffff80002d92d7 : ret 0x9673
0xffffff80002e9bb4 : ret 0x96e8
0xffffff80004b06aa : ret 0x97
0xffffff800026ff24 : ret 0x970f
0xffffff8000324cb6 : ret 0x972
0xffffff8000624c23 : ret 0x973
0xffffff8000287fe6 : ret 0x974
0xffffff800066578c : ret 0x975
0xffffff800029e9e7 : ret 0x97d
0xffffff800055bd33 : ret 0x97e8
0xffffff80008b2466 : ret 0x97f
0xffffff800029b6df : ret 0x98
0xffffff8000419902 : ret 0x98e8
0xffffff800069a929 : ret 0x98e9
0xffffff800077dcba : ret 0x9903
0xffffff800085394a : ret 0x9a1
0xffffff80006e6080 : ret 0x9ae8
0xffffff8000b3ca09 : ret 0x9b8
0xffffff8000528d62 : ret 0x9c0f
0xffffff80008ca18a : ret 0x9c3f
0xffffff8000b3d926 : ret 0x9c67
0xffffff80008c49ea : ret 0x9c97
0xffffff800075f6ae : ret 0x9ce8
0xffffff80008beaea : ret 0x9cf6
0xffffff800043cb45 : ret 0x9d0f
0xffffff8000430a1a : ret 0x9d1
0xffffff800073c87a : ret 0x9d18
0xffffff80003e605b : ret 0x9d8b
0xffffff80008b3eea : ret 0x9da2
0xffffff80003b9b9d : ret 0x9de8
0xffffff80008ab2ea : ret 0x9e2e
0xffffff80008aacea : ret 0x9e34
0xffffff80008aa0ea : ret 0x9e40
0xffffff80008a7dea : ret 0x9e63
0xffffff800025692f : ret 0x9e72
0xffffff80006059a1 : ret 0x9e8
0xffffff80008a43ea : ret 0x9e9d
0xffffff800072289e : ret 0x9eb
0xffffff80008a2bea : ret 0x9eb5
0xffffff80008a0eea : ret 0x9ed2
0xffffff80008a088a : ret 0x9ed8
0xffffff800074077c : ret 0x9ee8
0xffffff800067b69c : ret 0x9ee9
0xffffff80004ba464 : ret 0x9f0f
0xffffff8000899eea : ret 0x9f42
0xffffff80008968ea : ret 0x9f78
0xffffff8000895eea : ret 0x9f82
0xffffff80008931ea : ret 0x9faf
0xffffff8000891aea : ret 0x9fc6
0xffffff80007107ba : ret 0x9fd8
0xffffff800088efea : ret 0x9ff1
0xffffff80008d895a : ret 0x9fff
0xffffff80002fba9e : ret 0xa
0xffffff80004e17fd : ret 0xa0
0xffffff800088ccea : ret 0xa014
0xffffff800088a6ea : ret 0xa03a
0xffffff8000b3d814 : ret 0xa0d1
0xffffff80003473aa : ret 0xa0e8
0xffffff8000271749 : ret 0xa1e8
0xffffff800086f6ea : ret 0xa1ea
0xffffff800086f3ea : ret 0xa1ed
0xffffff800086f0ea : ret 0xa1f0
0xffffff80008618ea : ret 0xa2c8
0xffffff80008615ea : ret 0xa2cb
0xffffff80006c71d1 : ret 0xa2e9
0xffffff80005af1d7 : ret 0xa3e8
0xffffff800068032a : ret 0xa3eb
0xffffff800026b757 : ret 0xa4
0xffffff8000857fea : ret 0xa454
0xffffff80008461ea : ret 0xa47f
0xffffff800085508a : ret 0xa497
0xffffff8000830cea : ret 0xa5d4
0xffffff800026f9f5 : ret 0xa5e8
0xffffff800082c3ea : ret 0xa61d
0xffffff80006a497a : ret 0xa697
0xffffff8000796a24 : ret 0xa6e8
0xffffff8000745bb1 : ret 0xa72
0xffffff80004edb0c : ret 0xa74
0xffffff8000751d2a : ret 0xa75
0xffffff800034e885 : ret 0xa76
0xffffff800062ba0b : ret 0xa77
0xffffff800053ca7b : ret 0xa79
0xffffff8000814eea : ret 0xa792
0xffffff800028e553 : ret 0xa7d
0xffffff8000810fea : ret 0xa7d1
0xffffff8000414283 : ret 0xa8
0xffffff800034c773 : ret 0xa9
0xffffff800038b86f : ret 0xa902
0xffffff8000791b62 : ret 0xa920
0xffffff80008f1dba : ret 0xaa4d
0xffffff800054fd30 : ret 0xaae8
0xffffff800061c174 : ret 0xab
0xffffff8000b412fc : ret 0xab3
0xffffff80008d6cba : ret 0xabc7
0xffffff80007d14ea : ret 0xabcc
0xffffff80004b21cf : ret 0xabe8
0xffffff800052dc5a : ret 0xac
0xffffff80008ed0ca : ret 0xac48
0xffffff80008ccc1a : ret 0xac57
0xffffff80007c2fea : ret 0xacb1
0xffffff8000b3f2e6 : ret 0xad88
0xffffff80004183cd : ret 0xade8
0xffffff80008024fe : ret 0xae75
0xffffff800084de85 : ret 0xaeb
0xffffff80008ae38a : ret 0xaebb
0xffffff800049f1cc : ret 0xaee8
0xffffff80003e511c : ret 0xaee9
0xffffff80003b01a0 : ret 0xaf0f
0xffffff800079b58a : ret 0xaf2b
0xffffff800079d47a : ret 0xafa6
0xffffff800061208a : ret 0xafbf
0xffffff800051192b : ret 0xafe8
0xffffff80002d667e : ret 0xb
0xffffff80007a320a : ret 0xb014
0xffffff8000608e7a : ret 0xb052
0xffffff80005f8849 : ret 0xb07c
0xffffff80006d3362 : ret 0xb07f
0xffffff80006fbbc3 : ret 0xb080
0xffffff8000783eea : ret 0xb0a2
0xffffff80005ffa7a : ret 0xb0e6
0xffffff80005e8b2a : ret 0xb0e8
0xffffff8000b3c023 : ret 0xb0f2
0xffffff80008f23b1 : ret 0xb172
0xffffff80003804f7 : ret 0xb3e8
0xffffff800074d5ea : ret 0xb40b
0xffffff8000526809 : ret 0xb475
0xffffff80003c8281 : ret 0xb48
0xffffff80002e263a : ret 0xb4b
0xffffff80005b90ba : ret 0xb54f
0xffffff8000737aea : ret 0xb566
0xffffff80007437fa : ret 0xb572
0xffffff80007435fa : ret 0xb574
0xffffff800030b3c7 : ret 0xb58b
0xffffff8000267745 : ret 0xb5e8
0xffffff800072f6ea : ret 0xb6
0xffffff80008d7303 : ret 0xb60f
0xffffff800040821b : ret 0xb641
0xffffff8000764624 : ret 0xb6e8
0xffffff800034095a : ret 0xb70f
0xffffff80004739d7 : ret 0xb72
0xffffff80005a72f0 : ret 0xb73
0xffffff8000757a2d : ret 0xb74
0xffffff80004950ce : ret 0xb75
0xffffff8000640c80 : ret 0xb77
0xffffff80006306af : ret 0xb78b
0xffffff800084bb83 : ret 0xb7e8
0xffffff8000282176 : ret 0xb7e9
0xffffff8000266d43 : ret 0xb8
0xffffff800043fe83 : ret 0xb804
0xffffff800043fe49 : ret 0xb808
0xffffff80007376a1 : ret 0xb818
0xffffff800083fe1d : ret 0xb820
0xffffff80007377cd : ret 0xb828
0xffffff8000884e0a : ret 0xb83
0xffffff8000495425 : ret 0xb841
0xffffff800080eb7a : ret 0xb844
0xffffff80004b91bd : ret 0xb848
0xffffff800037c904 : ret 0xb883
0xffffff8000694d22 : ret 0xb8e8
0xffffff800054a803 : ret 0xb8fd
0xffffff80004e4fb6 : ret 0xb8ff
0xffffff8000264990 : ret 0xb9
0xffffff8000261933 : ret 0xb901
0xffffff800066cfe9 : ret 0xb904
0xffffff800057d281 : ret 0xb908
0xffffff8000457142 : ret 0xb940
0xffffff80003ea0e1 : ret 0xb941
0xffffff80003a5a26 : ret 0xb948
0xffffff8000738454 : ret 0xb966
0xffffff80006f44ea : ret 0xb99c
0xffffff800073bf5a : ret 0xb9c9
0xffffff8000354fd1 : ret 0xb9e8
0xffffff80007f417a : ret 0xb9ee
0xffffff8000362c74 : ret 0xba
0xffffff8000587753 : ret 0xba02
0xffffff80006d3320 : ret 0xba08
0xffffff80006d2161 : ret 0xba20
0xffffff800066da3b : ret 0xba41
0xffffff8000b491b7 : ret 0xba48
0xffffff80007025dc : ret 0xba66
0xffffff800072c5ea : ret 0xba76
0xffffff8000803ada : ret 0xba7d
0xffffff80007649b5 : ret 0xbaff
0xffffff80002608ad : ret 0xbb
0xffffff8000311e76 : ret 0xbb41
0xffffff8000b45474 : ret 0xbb49
0xffffff80007dc47a : ret 0xbb65
0xffffff80002a9987 : ret 0xbb83
0xffffff800055367a : ret 0xbbaa
0xffffff80006d2eea : ret 0xbbb2
0xffffff80002888df : ret 0xbbe8
0xffffff800066b233 : ret 0xbbff
0xffffff800074cb74 : ret 0xbc41
0xffffff800038bef9 : ret 0xbc49
0xffffff80006d0b7a : ret 0xbc6f
0xffffff80006bcaea : ret 0xbd16
0xffffff8000542edc : ret 0xbd41
0xffffff80004dd1e0 : ret 0xbd72
0xffffff8000440e45 : ret 0xbd83
0xffffff80004d325b : ret 0xbdc0
0xffffff80002806dd : ret 0xbde8
0xffffff8000301147 : ret 0xbdeb
0xffffff8000533cb4 : ret 0xbe
0xffffff80004a67d8 : ret 0xbe01
0xffffff8000393680 : ret 0xbe03
0xffffff800039b350 : ret 0xbe08
0xffffff800029e2c2 : ret 0xbe0f
0xffffff8000b40098 : ret 0xbe25
0xffffff80006aaeea : ret 0xbe32
0xffffff8000259e6d : ret 0xbe41
0xffffff800061f1a6 : ret 0xbe48
0xffffff8000b3e826 : ret 0xbe49
0xffffff8000497b34 : ret 0xbe72
0xffffff80003a0bd5 : ret 0xbe9
0xffffff800026c297 : ret 0xbeb
0xffffff8000503d76 : ret 0xbee0
0xffffff80003e6cdc : ret 0xbee8
0xffffff800059aab0 : ret 0xbeec
0xffffff80004e6463 : ret 0xbeff
0xffffff80005b6204 : ret 0xbf
0xffffff80003b07b6 : ret 0xbf02
0xffffff80005ccf4e : ret 0xbf0f
0xffffff800079f97a : ret 0xbf30
0xffffff800079ed7a : ret 0xbf3c
0xffffff800033524f : ret 0xbf41
0xffffff800079d1ba : ret 0xbf99
0xffffff800059ed1b : ret 0xbfe8
0xffffff80006051c6 : ret 0xbfff
0xffffff80002fdb29 : ret 0xc
0xffffff8000612a7d : ret 0xc0
0xffffff80003ea177 : ret 0xc001
0xffffff800067ca97 : ret 0xc00f
0xffffff80005849ca : ret 0xc018
0xffffff8000579da1 : ret 0xc019
0xffffff80002a9992 : ret 0xc031
0xffffff80005b0074 : ret 0xc069
0xffffff8000388e1d : ret 0xc084
0xffffff80002a37fb : ret 0xc085
0xffffff8000302ee6 : ret 0xc089
0xffffff800078747a : ret 0xc0bb
0xffffff8000282595 : ret 0xc0ff
0xffffff800038b895 : ret 0xc108
0xffffff800033e693 : ret 0xc109
0xffffff80003b7bbb : ret 0xc11f
0xffffff8000312683 : ret 0xc120
0xffffff8000256249 : ret 0xc129
0xffffff8000b3c331 : ret 0xc131
0xffffff800077f37a : ret 0xc136
0xffffff8000413a04 : ret 0xc139
0xffffff8000483634 : ret 0xc141
0xffffff80002d6f66 : ret 0xc148
0xffffff80002bf60c : ret 0xc149
0xffffff800068928a : ret 0xc155
0xffffff800043b9e0 : ret 0xc166
0xffffff8000b3d821 : ret 0xc17e
0xffffff8000510afd : ret 0xc181
0xffffff800069bcde : ret 0xc184
0xffffff800029d63f : ret 0xc188
0xffffff800027665c : ret 0xc189
0xffffff8000387d13 : ret 0xc1f6
0xffffff8000307929 : ret 0xc1f7
0xffffff8000835af2 : ret 0xc1ff
0xffffff80007c9ee7 : ret 0xc208
0xffffff800077157a : ret 0xc214
0xffffff800036ecbc : ret 0xc220
0xffffff80006221c8 : ret 0xc229
0xffffff80002ff976 : ret 0xc231
0xffffff80004bf178 : ret 0xc239
0xffffff8000604baa : ret 0xc269
0xffffff8000b40354 : ret 0xc26b
0xffffff800076b77a : ret 0xc272
0xffffff8000252948 : ret 0xc280
0xffffff8000570272 : ret 0xc283
0xffffff8000665aea : ret 0xc286
0xffffff8000289ae8 : ret 0xc289
0xffffff800076977a : ret 0xc292
0xffffff8000767b7a : ret 0xc2ae
0xffffff800036f789 : ret 0xc2c1
0xffffff8000763d1a : ret 0xc2e6
0xffffff80004e4cc8 : ret 0xc2e8
0xffffff8000311db5 : ret 0xc2e9
0xffffff8000314af6 : ret 0xc2f6
0xffffff80003b0822 : ret 0xc2ff
0xffffff800044bbea : ret 0xc320
0xffffff800029f447 : ret 0xc35d
0xffffff800075b97a : ret 0xc376
0xffffff80006567da : ret 0xc37c
0xffffff800066ef1f : ret 0xc383
0xffffff800050a7a8 : ret 0xc389
0xffffff800039a7eb : ret 0xc3c9
0xffffff80006198b7 : ret 0xc3e8
0xffffff8000494966 : ret 0xc3ff
0xffffff8000517539 : ret 0xc475
0xffffff8000737749 : ret 0xc47c
0xffffff80006455ea : ret 0xc48b
0xffffff80006434ea : ret 0xc4ac
0xffffff8000678416 : ret 0xc4e8
0xffffff800034ce9f : ret 0xc4f6
0xffffff800063e0da : ret 0xc503
0xffffff80007485fa : ret 0xc512
0xffffff80002547c8 : ret 0xc572
0xffffff800074253a : ret 0xc581
0xffffff8000646f3d : ret 0xc5e9
0xffffff8000491275 : ret 0xc600
0xffffff800029a975 : ret 0xc602
0xffffff80005841db : ret 0xc629
0xffffff80003e19c8 : ret 0xc639
0xffffff800067c369 : ret 0xc641
0xffffff800052879a : ret 0xc689
0xffffff800084f18c : ret 0xc6f6
0xffffff80005cb473 : ret 0xc6ff
0xffffff80006bf433 : ret 0xc700
0xffffff800031cb38 : ret 0xc72
0xffffff8000b4ae1b : ret 0xc72f
0xffffff800054e762 : ret 0xc73
0xffffff80007128ff : ret 0xc732
0xffffff80003b1f67 : ret 0xc74
0xffffff8000259fc3 : ret 0xc748
0xffffff80002d3e99 : ret 0xc749
0xffffff800026937a : ret 0xc75
0xffffff80006182ea : ret 0xc75e
0xffffff80006d8b52 : ret 0xc76
0xffffff800074690a : ret 0xc78
0xffffff800064e969 : ret 0xc789
0xffffff80008be61d : ret 0xc7b8
0xffffff8000473fc3 : ret 0xc7e
0xffffff800041d5d3 : ret 0xc7e8
0xffffff8000719355 : ret 0xc7f
0xffffff80004ef359 : ret 0xc7f6
0xffffff80004df7cf : ret 0xc7ff
0xffffff80003656d8 : ret 0xc8
0xffffff8000476290 : ret 0xc801
0xffffff8000833e72 : ret 0xc807
0xffffff80004ef35f : ret 0xc809
0xffffff8000b3d25e : ret 0xc820
0xffffff80002d8eb9 : ret 0xc821
0xffffff80002f8a88 : ret 0xc839
0xffffff800031e836 : ret 0xc889
0xffffff80004296ba : ret 0xc89
0xffffff8000483a7a : ret 0xc8a6
0xffffff8000b3d90a : ret 0xc8b4
0xffffff80005fffea : ret 0xc8e1
0xffffff800027c5b2 : ret 0xc8ff
0xffffff80004f6700 : ret 0xc90f
0xffffff8000262366 : ret 0xc931
0xffffff8000706c3a : ret 0xc93a
0xffffff800039a7be : ret 0xc95f
0xffffff800048403c : ret 0xc984
0xffffff80003cac95 : ret 0xc985
0xffffff8000b40ad4 : ret 0xc9a7
0xffffff80005fb07a : ret 0xc9ca
0xffffff8000391cb1 : ret 0xc9e8
0xffffff80004873f7 : ret 0xc9ff
0xffffff8000289b76 : ret 0xca00
0xffffff8000349f8b : ret 0xca01
0xffffff80005f737a : ret 0xca07
0xffffff8000260b25 : ret 0xca08
0xffffff80003b2230 : ret 0xca09
0xffffff80003d29d3 : ret 0xca0f
0xffffff80004127a8 : ret 0xca20
0xffffff8000b3c077 : ret 0xca21
0xffffff800029f2f5 : ret 0xca29
0xffffff8000b3c9eb : ret 0xca30
0xffffff800037025f : ret 0xca31
0xffffff800039427c : ret 0xca39
0xffffff80005f9a8a : ret 0xca4d
0xffffff80005292e3 : ret 0xca75
0xffffff8000491383 : ret 0xca80
0xffffff80002e2c68 : ret 0xca81
0xffffff8000275bd3 : ret 0xca83
0xffffff800025ef6b : ret 0xca84
0xffffff80004bc50b : ret 0xca89
0xffffff80005e35ea : ret 0xcaab
0xffffff800056af80 : ret 0xcae8
0xffffff8000796fb0 : ret 0xcae9
0xffffff80007a6725 : ret 0xcafe
0xffffff80005012e6 : ret 0xcaff
0xffffff80005c0c6d : ret 0xcb01
0xffffff800032206b : ret 0xcb20
0xffffff80005ae1d0 : ret 0xcb29
0xffffff80002cbb3a : ret 0xcb6
0xffffff800084cbf2 : ret 0xcb72
0xffffff8000441529 : ret 0xcb8
0xffffff80005d21ea : ret 0xcbbf
0xffffff80005cffea : ret 0xcbe1
0xffffff80002887cf : ret 0xcbe8
0xffffff8000577b2a : ret 0xcbe9
0xffffff80005cf3ea : ret 0xcbed
0xffffff800058c016 : ret 0xcbff
0xffffff80005c77ea : ret 0xcc69
0xffffff80007895e3 : ret 0xcc8
0xffffff8000b3a20a : ret 0xcd4a
0xffffff80006c243a : ret 0xcd82
0xffffff80006b4fda : ret 0xcdd8
0xffffff8000586b4d : ret 0xcde8
0xffffff80003ea170 : ret 0xce09
0xffffff80005bc78a : ret 0xce20
0xffffff80006d8854 : ret 0xce39
0xffffff80005b2f7a : ret 0xce4b
0xffffff8000b40941 : ret 0xce61
0xffffff80005b708a : ret 0xce77
0xffffff8000394479 : ret 0xce89
0xffffff800030f5d8 : ret 0xceb
0xffffff80006a627a : ret 0xcec7
0xffffff80006a607a : ret 0xcecf
0xffffff80004168cc : ret 0xcee8
0xffffff800085095b : ret 0xceff
0xffffff800074fd6a : ret 0xcf0f
0xffffff800069c6da : ret 0xcf61
0xffffff800069beda : ret 0xcf69
0xffffff8000497ae5 : ret 0xcf72
0xffffff80004b62fe : ret 0xcf7c
0xffffff800069b07a : ret 0xcf7f
0xffffff80003727ad : ret 0xcf89
0xffffff800069977a : ret 0xcf98
0xffffff80003e9eaa : ret 0xcff
0xffffff8000860efb : ret 0xd
0xffffff80007c6d5a : ret 0xd0
0xffffff80008ec130 : ret 0xd008
0xffffff8000b3a22a : ret 0xd010
0xffffff80006e1456 : ret 0xd029
0xffffff80007d7931 : ret 0xd039
0xffffff8000b3c420 : ret 0xd088
0xffffff800025c5bd : ret 0xd089
0xffffff80003b1f01 : ret 0xd0f7
0xffffff8000371153 : ret 0xd101
0xffffff800072d758 : ret 0xd109
0xffffff800057d3da : ret 0xd110
0xffffff8000370374 : ret 0xd11e
0xffffff800026c152 : ret 0xd120
0xffffff800065c1ca : ret 0xd129
0xffffff8000394a79 : ret 0xd139
0xffffff800062ebcb : ret 0xd141
0xffffff800036cc26 : ret 0xd148
0xffffff80003c2ef9 : ret 0xd184
0xffffff8000b3d2ff : ret 0xd188
0xffffff8000528cd1 : ret 0xd189
0xffffff800057d57a : ret 0xd1a5
0xffffff800058398a : ret 0xd1ae
0xffffff80007c92c3 : ret 0xd1ff
0xffffff8000b3c79d : ret 0xd200
0xffffff8000b4567e : ret 0xd201
0xffffff80002f872c : ret 0xd231
0xffffff80002a392b : ret 0xd269
0xffffff80007b08ea : ret 0xd272
0xffffff800038de5c : ret 0xd284
0xffffff8000325f17 : ret 0xd285
0xffffff80002822ad : ret 0xd2f7
0xffffff8000280d8a : ret 0xd3
0xffffff800056de8a : ret 0xd309
0xffffff800062407e : ret 0xd339
0xffffff80003d92ba : ret 0xd34d
0xffffff800065d9da : ret 0xd34e
0xffffff800025c85c : ret 0xd389
0xffffff80007fa357 : ret 0xd3e8
0xffffff800046067a : ret 0xd4
0xffffff80003c52ba : ret 0xd48d
0xffffff8000648f7a : ret 0xd4a0
0xffffff8000525c5a : ret 0xd5
0xffffff80005363ea : ret 0xd57d
0xffffff80002b5ac5 : ret 0xd5e8
0xffffff8000630d72 : ret 0xd601
0xffffff80004be2db : ret 0xd609
0xffffff80005287e3 : ret 0xd629
0xffffff80006307ee : ret 0xd639
0xffffff80008a56b7 : ret 0xd672
0xffffff800048c19b : ret 0xd689
0xffffff8000629f7a : ret 0xd68a
0xffffff800072d624 : ret 0xd6e8
0xffffff8000372842 : ret 0xd701
0xffffff80008cbc6b : ret 0xd73
0xffffff8000345e11 : ret 0xd74
0xffffff800034a917 : ret 0xd75
0xffffff80007850f3 : ret 0xd76
0xffffff8000517aea : ret 0xd766
0xffffff800028a4a2 : ret 0xd77
0xffffff800075820a : ret 0xd777
0xffffff800029f43a : ret 0xd78
0xffffff800028faf3 : ret 0xd789
0xffffff800055ff03 : ret 0xd7e8
0xffffff80006d993c : ret 0xd7e9
0xffffff800057c4e8 : ret 0xd8
0xffffff8000b3d26a : ret 0xd820
0xffffff80003c5775 : ret 0xd86b
0xffffff80002faebd : ret 0xd889
0xffffff8000792dd6 : ret 0xd89
0xffffff800054e55a : ret 0xd8a3
0xffffff8000262c42 : ret 0xd8b
0xffffff8000502bea : ret 0xd8b5
0xffffff800054bd5a : ret 0xd8cb
0xffffff80003e7915 : ret 0xd8de
0xffffff80003ea2ed : ret 0xd8e5
0xffffff8000743902 : ret 0xd8e8
0xffffff800050777a : ret 0xd903
0xffffff80005ffb7a : ret 0xd934
0xffffff80003b5339 : ret 0xd989
0xffffff800086380a : ret 0xd99
0xffffff8000b3d4ff : ret 0xd996
0xffffff8000700d01 : ret 0xd9e8
0xffffff80005f407a : ret 0xd9e9
0xffffff800036ed8a : ret 0xd9f2
0xffffff8000b3cc2a : ret 0xda01
0xffffff80004c9381 : ret 0xda08
0xffffff80003b2149 : ret 0xda09
0xffffff8000252eae : ret 0xda20
0xffffff800072942b : ret 0xda29
0xffffff80002d6fb1 : ret 0xda39
0xffffff8000369f7a : ret 0xda41
0xffffff80005ed8aa : ret 0xda4d
0xffffff800051f57a : ret 0xda52
0xffffff8000426bd9 : ret 0xda89
0xffffff800080c875 : ret 0xdaeb
0xffffff80003ad0d4 : ret 0xdaf7
0xffffff800029a18b : ret 0xdb31
0xffffff80005dddea : ret 0xdb51
0xffffff80002a69c2 : ret 0xdb7e
0xffffff800026458c : ret 0xdb84
0xffffff8000385ed5 : ret 0xdb85
0xffffff8000829c31 : ret 0xdc72
0xffffff800089da7e : ret 0xdce8
0xffffff80006c6d0a : ret 0xdd
0xffffff80005c203a : ret 0xdd05
0xffffff8000729c0a : ret 0xddd1
0xffffff80006eab3f : ret 0xde39
0xffffff800076cdb4 : ret 0xde7c
0xffffff800057063d : ret 0xde8
0xffffff800074bf07 : ret 0xde83
0xffffff8000423a9a : ret 0xdeb
0xffffff800072550c : ret 0xdee8
0xffffff800059fb7a : ret 0xdf34
0xffffff80004e17b7 : ret 0xdf75
0xffffff8000854abd : ret 0xdf89
0xffffff80002b261a : ret 0xdfd
0xffffff80002ad00f : ret 0xe
0xffffff80004ed687 : ret 0xe0
0xffffff80003c2557 : ret 0xe00
0xffffff80008448fd : ret 0xe074
0xffffff800058c152 : ret 0xe083
0xffffff8000316474 : ret 0xe0c1
0xffffff8000500a6a : ret 0xe0e8
0xffffff8000838b44 : ret 0xe100
0xffffff800063c0bc : ret 0xe175
0xffffff80003006ec : ret 0xe181
0xffffff800045892c : ret 0xe183
0xffffff80004617ea : ret 0xe1c1
0xffffff800056e5f9 : ret 0xe1e8
0xffffff8000407b52 : ret 0xe1e9
0xffffff8000b3e2d4 : ret 0xe206
0xffffff800029c25b : ret 0xe272
0xffffff800038a1e4 : ret 0xe280
0xffffff8000288e75 : ret 0xe281
0xffffff8000256255 : ret 0xe283
0xffffff80002bb88e : ret 0xe2c1
0xffffff80002542cf : ret 0xe2d3
0xffffff80004600ea : ret 0xe2e0
0xffffff8000272c27 : ret 0xe2ff
0xffffff80004a165a : ret 0xe372
0xffffff800028b1fa : ret 0xe375
0xffffff8000b3c567 : ret 0xe381
0xffffff80004bc960 : ret 0xe383
0xffffff80002d4b7a : ret 0xe395
0xffffff8000453aea : ret 0xe3a6
0xffffff8000487752 : ret 0xe4
0xffffff800045ce8a : ret 0xe419
0xffffff80005506da : ret 0xe421
0xffffff8000540ce9 : ret 0xe475
0xffffff800054787a : ret 0xe4b1
0xffffff800044877a : ret 0xe4f3
0xffffff8000844b5a : ret 0xe51
0xffffff80004ed52a : ret 0xe51f
0xffffff8000761aea : ret 0xe52
0xffffff8000771728 : ret 0xe572
0xffffff80005cc128 : ret 0xe575
0xffffff800041ec1a : ret 0xe58d
0xffffff800053800a : ret 0xe5a4
0xffffff8000536a6a : ret 0xe5be
0xffffff8000536a7a : ret 0xe5c5
0xffffff80008b8015 : ret 0xe5e8
0xffffff800052a327 : ret 0xe675
0xffffff80004cf7e0 : ret 0xe683
0xffffff800044c850 : ret 0xe72
0xffffff80006d4b5c : ret 0xe75
0xffffff8000576f86 : ret 0xe775
0xffffff8000b3d761 : ret 0xe781
0xffffff800029348a : ret 0xe7ab
0xffffff800071935c : ret 0xe7c
0xffffff80006cc493 : ret 0xe7e8
0xffffff800071933a : ret 0xe7f
0xffffff800040efea : ret 0xe7f1
0xffffff80008358f2 : ret 0xe7ff
0xffffff80007418da : ret 0xe8
0xffffff800071a3be : ret 0xe802
0xffffff8000271bcb : ret 0xe824
0xffffff80002aeb3a : ret 0xe86
0xffffff800050be7a : ret 0xe871
0xffffff80003c9c42 : ret 0xe875
0xffffff80005d1765 : ret 0xe87c
0xffffff8000492004 : ret 0xe88
0xffffff8000552eb5 : ret 0xe8a
0xffffff80002bc8ee : ret 0xe8c1
0xffffff8000505dca : ret 0xe8c9
0xffffff800069c2aa : ret 0xe8d8
0xffffff80006e6032 : ret 0xe8e8
0xffffff80003fedea : ret 0xe8f3
0xffffff800065ee43 : ret 0xe8ff
0xffffff800072d42a : ret 0xe9
0xffffff800065a8eb : ret 0xe908
0xffffff80004e1ac8 : ret 0xe924
0xffffff800040b88a : ret 0xe92f
0xffffff800090a898 : ret 0xe95b
0xffffff800025d67e : ret 0xe95d
0xffffff80007717e4 : ret 0xe972
0xffffff80004dca64 : ret 0xe975
0xffffff80007b1e0a : ret 0xe976
0xffffff800043d166 : ret 0xe9c1
0xffffff80004d9f0b : ret 0xe9e9
0xffffff8000843c74 : ret 0xe9f3
0xffffff8000662746 : ret 0xe9ff
0xffffff8000b3ed8f : ret 0xea31
0xffffff80004ec17a : ret 0xea6e
0xffffff8000486943 : ret 0xea72
0xffffff800085f963 : ret 0xea75
0xffffff8000265aba : ret 0xea85
0xffffff80006735dd : ret 0xeac0
0xffffff8000264fba : ret 0xeac1
0xffffff8000257f33 : ret 0xead1
0xffffff8000254048 : ret 0xead3
0xffffff800056aab0 : ret 0xeae8
0xffffff80006c679d : ret 0xeb
0xffffff800025d96e : ret 0xeb02
0xffffff800025d974 : ret 0xeb03
0xffffff800038badb : ret 0xeb04
0xffffff8000832fae : ret 0xeb08
0xffffff800061b9b6 : ret 0xeb09
0xffffff80004aca12 : ret 0xeb10
0xffffff800026b8eb : ret 0xeb18
0xffffff80002ae5fa : ret 0xeb2
0xffffff8000414269 : ret 0xeb20
0xffffff80005a313c : ret 0xeb38
0xffffff80007051b3 : ret 0xeb50
0xffffff8000259fa7 : ret 0xeb75
0xffffff80008508fc : ret 0xeb83
0xffffff8000843c01 : ret 0xebf3
0xffffff8000843e16 : ret 0xebf4
0xffffff8000843d02 : ret 0xebf5
0xffffff80004eb766 : ret 0xebff
0xffffff80004cbf7a : ret 0xec6a
0xffffff80003a5f51 : ret 0xec75
0xffffff800038f591 : ret 0xec7c
0xffffff8000262150 : ret 0xed72
0xffffff8000260928 : ret 0xed75
0xffffff80004b9d7a : ret 0xed92
0xffffff80009098dd : ret 0xede8
0xffffff80002a3ffa : ret 0xee4
0xffffff800066a02a : ret 0xee70
0xffffff800083b6df : ret 0xee72
0xffffff80002638df : ret 0xee75
0xffffff8000b3ed1a : ret 0xee79
0xffffff8000569cde : ret 0xee7c
0xffffff8000847eb5 : ret 0xeeb
0xffffff80007bf472 : ret 0xeec1
0xffffff8000b3decc : ret 0xef1c
0xffffff80004a5c1e : ret 0xef72
0xffffff80008bbc6e : ret 0xef75
0xffffff800082007e : ret 0xef77
0xffffff80003b1d73 : ret 0xefe9
0xffffff8000266cf5 : ret 0xefff
0xffffff80002960e9 : ret 0xf
0xffffff800040bc12 : ret 0xf0
0xffffff800030fad5 : ret 0xf000
0xffffff80004a4275 : ret 0xf001
0xffffff80002a283e : ret 0xf01
0xffffff800029d769 : ret 0xf02
0xffffff800080e059 : ret 0xf021
0xffffff80002bcfc2 : ret 0xf03
0xffffff80003b1f23 : ret 0xf031
0xffffff80007590bc : ret 0xf039
0xffffff800027285b : ret 0xf04
0xffffff800048c07a : ret 0xf069
0xffffff800049278a : ret 0xf071
0xffffff800088b82d : ret 0xf073
0xffffff800062d3fa : ret 0xf074
0xffffff800074daed : ret 0xf075
0xffffff800038f82d : ret 0xf07c
0xffffff800048b27a : ret 0xf07d
0xffffff8000708e25 : ret 0xf07f
0xffffff800048b943 : ret 0xf08
0xffffff8000b49e32 : ret 0xf083
0xffffff8000385c8a : ret 0xf084
0xffffff800036f764 : ret 0xf089
0xffffff80004b4be8 : ret 0xf0c
0xffffff80004b4917 : ret 0xf0d
0xffffff8000609605 : ret 0xf0f
0xffffff80006600e4 : ret 0xf0ff
0xffffff80003d8c55 : ret 0xf10
0xffffff800065b6e0 : ret 0xf11
0xffffff80005981f7 : ret 0xf129
0xffffff800048299a : ret 0xf15b
0xffffff80004ab0ac : ret 0xf172
0xffffff80002762dc : ret 0xf175
0xffffff8000569c72 : ret 0xf17c
0xffffff8000b4a530 : ret 0xf180
0xffffff8000632d0e : ret 0xf19
0xffffff800047857a : ret 0xf1aa
0xffffff8000634d5a : ret 0xf1e6
0xffffff80003d5481 : ret 0xf20
0xffffff8000264c97 : ret 0xf201
0xffffff800036c98a : ret 0xf217
0xffffff800080e0ab : ret 0xf221
0xffffff800032606e : ret 0xf225
0xffffff80004c2284 : ret 0xf229
0xffffff80003702f4 : ret 0xf231
0xffffff80002d6f2b : ret 0xf239
0xffffff80008b176b : ret 0xf272
0xffffff800028811b : ret 0xf275
0xffffff8000444c7b : ret 0xf27c
0xffffff8000265ce1 : ret 0xf280
0xffffff80004bb4c1 : ret 0xf281
0xffffff800083d400 : ret 0xf283
0xffffff800062482a : ret 0xf2c8
0xffffff80002a443a : ret 0xf2d
0xffffff80004a1610 : ret 0xf2eb
0xffffff80004db2d9 : ret 0xf30
0xffffff800084cdbc : ret 0xf38
0xffffff800035538a : ret 0xf38d
0xffffff800035368a : ret 0xf3aa
0xffffff8000456f7a : ret 0xf3ba
0xffffff80005fb9e7 : ret 0xf3e8
0xffffff80002aadd6 : ret 0xf40
0xffffff800029e176 : ret 0xf41
0xffffff800034b78a : ret 0xf429
0xffffff80002c6d3a : ret 0xf44
0xffffff800044e66a : ret 0xf442
0xffffff800044e67a : ret 0xf449
0xffffff800034aa6f : ret 0xf45
0xffffff80003038fb : ret 0xf48
0xffffff80006ba195 : ret 0xf49
0xffffff8000302eeb : ret 0xf4c
0xffffff800035218a : ret 0xf4c6
0xffffff800079cdb6 : ret 0xf4e8
0xffffff800044257a : ret 0xf50a
0xffffff8000717358 : ret 0xf575
0xffffff80008d868a : ret 0xf5a6
0xffffff80003777ea : ret 0xf5c4
0xffffff80008b362a : ret 0xf5dd
0xffffff800067bca5 : ret 0xf5e8
0xffffff80004c4b53 : ret 0xf604
0xffffff80004a0c90 : ret 0xf631
0xffffff80002bd0f4 : ret 0xf641
0xffffff8000358389 : ret 0xf66
0xffffff800059e787 : ret 0xf672
0xffffff800059ec47 : ret 0xf675
0xffffff8000288a54 : ret 0xf685
0xffffff800033301a : ret 0xf68c
0xffffff8000321dea : ret 0xf6c3
0xffffff8000289ef4 : ret 0xf6e8
0xffffff80007674f2 : ret 0xf6ff
0xffffff800033311a : ret 0xf707
0xffffff800040c572 : ret 0xf73
0xffffff80005900d7 : ret 0xf739
0xffffff80008032ef : ret 0xf74
0xffffff800035dc7b : ret 0xf748
0xffffff80003c6051 : ret 0xf75
0xffffff800089be2a : ret 0xf755
0xffffff800089bd2a : ret 0xf756
0xffffff80007e506e : ret 0xf76
0xffffff8000320bb6 : ret 0xf766
0xffffff8000348856 : ret 0xf772
0xffffff8000623016 : ret 0xf775
0xffffff800074f93e : ret 0xf789
0xffffff800031288a : ret 0xf7b8
0xffffff8000b3c971 : ret 0xf7c8
0xffffff8000255e62 : ret 0xf7d
0xffffff800055afd3 : ret 0xf7e8
0xffffff8000588267 : ret 0xf8
0xffffff8000627ed0 : ret 0xf80
0xffffff800080ddf0 : ret 0xf801
0xffffff800040e70f : ret 0xf82
0xffffff80006cfe3d : ret 0xf83d
0xffffff800040c77a : ret 0xf868
0xffffff800040bb7a : ret 0xf86e
0xffffff80008d0ec1 : ret 0xf875
0xffffff8000260233 : ret 0xf883
0xffffff80002affe2 : ret 0xf8e8
0xffffff8000399b9a : ret 0xf9
0xffffff80004c09fe : ret 0xf90
0xffffff80006dc068 : ret 0xf939
0xffffff800030d10a : ret 0xf975
0xffffff80004b302e : ret 0xf981
0xffffff800045acb4 : ret 0xf983
0xffffff800030b80a : ret 0xf98e
0xffffff80003f587a : ret 0xf9d1
0xffffff80002ae431 : ret 0xf9e8
0xffffff80003a0be7 : ret 0xf9e9
0xffffff800083375f : ret 0xf9f
0xffffff80003f027a : ret 0xfa2d
0xffffff800036f7c7 : ret 0xfa31
0xffffff800084d901 : ret 0xfa39
0xffffff80002f212a : ret 0xfa3c
0xffffff8000858433 : ret 0xfa75
0xffffff800034a9b7 : ret 0xfa81
0xffffff8000285a05 : ret 0xfa83
0xffffff800032e55a : ret 0xfaa3
0xffffff80002fb3aa : ret 0xfaa4
0xffffff80003b41ee : ret 0xfac1
0xffffff800074a87d : ret 0xfad1
0xffffff80007fbfe0 : ret 0xfae8
0xffffff80007f975a : ret 0xfb0
0xffffff800048e1c3 : ret 0xfb00
0xffffff80002e55da : ret 0xfb09
0xffffff8000503cea : ret 0xfb11
0xffffff8000597f59 : ret 0xfb29
0xffffff80002d67ea : ret 0xfb79
0xffffff800042555a : ret 0xfb81
0xffffff80008507b2 : ret 0xfb83
0xffffff80004ee7c1 : ret 0xfb89
0xffffff800085c77a : ret 0xfb8b
0xffffff800028d13f : ret 0xfb98
0xffffff800053384f : ret 0xfbe8
0xffffff800036680a : ret 0xfbf
0xffffff80003b429e : ret 0xfc00
0xffffff8000464f0f : ret 0xfc01
0xffffff80002fac47 : ret 0xfc18
0xffffff800083f157 : ret 0xfcb8
0xffffff80007c128a : ret 0xfcbf
0xffffff8000369c2e : ret 0xfce8
0xffffff80005fe80a : ret 0xfcf
0xffffff8000863a8a : ret 0xfcf2
0xffffff80002bcd7e : ret 0xfcff
0xffffff800025284f : ret 0xfd0
0xffffff8000489d71 : ret 0xfd6
0xffffff80007a75ba : ret 0xfd78
0xffffff80002c78da : ret 0xfd85
0xffffff80005ab8da : ret 0xfd8d
0xffffff80003c01fa : ret 0xfd96
0xffffff8000b4a897 : ret 0xfdac
0xffffff800029b9fa : ret 0xfde
0xffffff80007acf53 : ret 0xfde9
0xffffff80008ec7d7 : ret 0xfdfb
0xffffff8000779ae9 : ret 0xfe
0xffffff80004e8069 : ret 0xfe00
0xffffff80004ec30a : ret 0xfe0c
0xffffff8000393f8a : ret 0xfe2b
0xffffff800059f43a : ret 0xfe36
0xffffff800066a069 : ret 0xfe3d
0xffffff80002b37ca : ret 0xfe4e
0xffffff8000291fea : ret 0xfe58
0xffffff800056c1da : ret 0xfe69
0xffffff80003aae1a : ret 0xfe75
0xffffff8000460eea : ret 0xfe78
0xffffff80006df96b : ret 0xfe8
0xffffff80003b17fa : ret 0xfe80
0xffffff8000411764 : ret 0xfe83
0xffffff80006ec00a : ret 0xfe8a
0xffffff80004ce52a : ret 0xfea8
0xffffff8000316440 : ret 0xfeb
0xffffff80003e180a : ret 0xfeba
0xffffff80005121a3 : ret 0xfec5
0xffffff80004e020a : ret 0xfecb
0xffffff80004081fa : ret 0xfed8
0xffffff800051f5fc : ret 0xfee8
0xffffff80007ae411 : ret 0xff
0xffffff80003934a5 : ret 0xff0
0xffffff80002765f7 : ret 0xff00
0xffffff80003a5f33 : ret 0xff01
0xffffff8000601d0a : ret 0xff04
0xffffff8000621fe2 : ret 0xff08
0xffffff80003685f8 : ret 0xff0c
0xffffff8000283ce8 : ret 0xff10
0xffffff80003dba0a : ret 0xff18
0xffffff80007db07a : ret 0xff1d
0xffffff80005d7922 : ret 0xff25
0xffffff80003c57f5 : ret 0xff28
0xffffff80005404da : ret 0xff2d
0xffffff80008d2e00 : ret 0xff3
0xffffff800029b08a : ret 0xff30
0xffffff800035c482 : ret 0xff31
0xffffff800029ab8a : ret 0xff35
0xffffff800048e77f : ret 0xff3d
0xffffff8000397b78 : ret 0xff41
0xffffff80006c5a48 : ret 0xff48
0xffffff8000452afa : ret 0xff49
0xffffff800029968a : ret 0xff4a
0xffffff8000811320 : ret 0xff5d
0xffffff80006cafb6 : ret 0xff66
0xffffff80004c121a : ret 0xff67
0xffffff800079db34 : ret 0xff7
0xffffff80003626fe : ret 0xff7f
0xffffff800071c3ad : ret 0xff81
0xffffff800045508a : ret 0xff84
0xffffff80002bb4e3 : ret 0xff85
0xffffff8000871da1 : ret 0xff89
0xffffff8000861d81 : ret 0xff8a
0xffffff8000703eea : ret 0xff8e
0xffffff800087b50a : ret 0xff8f
0xffffff8000801e84 : ret 0xff90
0xffffff8000540d9a : ret 0xff92
0xffffff80007c1e80 : ret 0xff94
0xffffff80008642ba : ret 0xff95
0xffffff80008e1f42 : ret 0xff9a
0xffffff80008c1ecf : ret 0xff9c
0xffffff8000711e59 : ret 0xff9f
0xffffff800044f3da : ret 0xffa0
0xffffff8000831f09 : ret 0xffa5
0xffffff80006a1f05 : ret 0xffa6
0xffffff80007f1e7e : ret 0xffa9
0xffffff8000661e7d : ret 0xffaa
0xffffff80007db8ce : ret 0xffab
0xffffff8000641edb : ret 0xffac
0xffffff80007b1ec7 : ret 0xffad
0xffffff80008a6823 : ret 0xffae
0xffffff8000601ebd : ret 0xffb0
0xffffff8000799440 : ret 0xffb1
0xffffff8000866787 : ret 0xffb2
0xffffff8000751ed8 : ret 0xffb3
0xffffff8000591ed1 : ret 0xffb7
0xffffff800028638f : ret 0xffb8
0xffffff8000571e57 : ret 0xffb9
0xffffff800072c6e8 : ret 0xffba
0xffffff80006e263b : ret 0xffbb
0xffffff80005fbc2e : ret 0xffbe
0xffffff8000691f63 : ret 0xffbf
0xffffff80006cc681 : ret 0xffc0
0xffffff80006825e8 : ret 0xffc1
0xffffff80004d1e4d : ret 0xffc3
0xffffff8000641f1d : ret 0xffc4
0xffffff80004b1dfc : ret 0xffc5
0xffffff8000621f7f : ret 0xffc6
0xffffff8000706d6c : ret 0xffc8
0xffffff800043a8ba : ret 0xffc9
0xffffff80002d23ca : ret 0xffca
0xffffff80005d1efa : ret 0xffcb
0xffffff80005c1ee9 : ret 0xffcc
0xffffff80006b67df : ret 0xffcd
0xffffff8000421e98 : ret 0xffce
0xffffff8000591f44 : ret 0xffcf
0xffffff800068c387 : ret 0xffd0
0xffffff8000571f46 : ret 0xffd1
0xffffff8000666d45 : ret 0xffd2
0xffffff8000552262 : ret 0xffd3
0xffffff8000541ed8 : ret 0xffd4
0xffffff8000531f59 : ret 0xffd5
0xffffff8000511e6c : ret 0xffd7
0xffffff80005025ab : ret 0xffd9
0xffffff80005e6745 : ret 0xffda
0xffffff80003523d8 : ret 0xffdb
0xffffff8000508c48 : ret 0xffdc
0xffffff80005ba8b3 : ret 0xffdd
0xffffff80003d11fb : ret 0xffde
0xffffff80004b2876 : ret 0xffdf
0xffffff8000577fd5 : ret 0xffe
0xffffff800058681a : ret 0xffe0
0xffffff8000566239 : ret 0xffe2
0xffffff8000451f99 : ret 0xffe3
0xffffff8000546da7 : ret 0xffe4
0xffffff8000448451 : ret 0xffe5
0xffffff8000487674 : ret 0xffe6
0xffffff8000411ec9 : ret 0xffe7
0xffffff800050e475 : ret 0xffe8
0xffffff80004e6654 : ret 0xffea
0xffffff80004d670b : ret 0xffeb
0xffffff80003c1e58 : ret 0xffec
0xffffff80004b6699 : ret 0xffed
0xffffff80002b06ea : ret 0xffee
0xffffff8000391f46 : ret 0xffef
0xffffff800030f418 : ret 0xfff
0xffffff800026403a : ret 0xfff0
0xffffff8000476dc0 : ret 0xfff1
0xffffff80007c19fa : ret 0xfff2
0xffffff8000351e82 : ret 0xfff3
0xffffff8000341f0c : ret 0xfff4
0xffffff800027cef5 : ret 0xfff5
0xffffff8000321eb4 : ret 0xfff6
0xffffff80002821ea : ret 0xfff7
0xffffff8000301f14 : ret 0xfff8
0xffffff800028f6ea : ret 0xfff9
0xffffff800030beec : ret 0xfffa
0xffffff80002d1e6d : ret 0xfffb
0xffffff80002c1f4e : ret 0xfffc
0xffffff800031b99a : ret 0xfffd
0xffffff800027357c : ret 0xfffe
0xffffff800025f599 : ret 0xffff
0xffffff8000419fae : ret 1
0xffffff80002667fa : ret 2
0xffffff8000251eb1 : ret 3
0xffffff80002a3242 : ret 4
0xffffff800033004d : ret 5
0xffffff800038ba21 : ret 6
0xffffff80008c0f63 : ret 7
0xffffff80003063a6 : ret 8
0xffffff80003be65a : ret 9
0xffffff8000859b1a : retf 0x2d ; test rax, rax ; je 0xffffff8000859b2c ; call rax
0xffffff800065f596 : retf 0x34 ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff800055e90b : retf 0x3fe8 ; call rbx
0xffffff800028a906 : retf 0x415d ; jmp rax
0xffffff80005fa3d0 : retf 0x41ff ; mov edx, eax ; jmp 0xffffff80005fa3de
0xffffff80005fa3cf : retf 0x41ff ; mov edx, eax ; jmp 0xffffff80005fa3df
0xffffff800083f2b1 : retf 0x634a ; or al, 0xaa ; add rcx, rdx ; jmp rcx
0xffffff800064de1c : retf 0x6772 ; jmp 0xffffff800064de88
0xffffff80002632b7 : retf 0x83 ; test rax, rax ; je 0xffffff8000263318 ; call rax
0xffffff80002632b6 : retf 0x83 ; test rax, rax ; je 0xffffff8000263319 ; call rax
0xffffff80006fc413 : retf 0x8941 ; push rsp ; sysenter
0xffffff800049fa45 : retf 0x894c ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80008b2d65 : retf 0x894c ; ror dword ptr [rbp - 0x77], 0xc8 ; pop rbp ; jmp rax
0xffffff80008bd0ba : retf 0x894d ; stc ; call r14
0xffffff8000b439dd : retf 0xbe48 ; fdivp st(7) ; jmp rbx
0xffffff8000b44947 : retf 0xc148 ; jmp qword ptr [rax]
0xffffff800051f8c7 : retf 0xc189 ; jmp rdx
0xffffff8000892909 : retf 0xc189 ; pop rbp ; jmp r8
0xffffff800039d5bc : retf 0xe281 ; jmp qword ptr [rbx]
0xffffff8000672396 : retf 0xeb75 ; jmp 0xffffff80006723c5
0xffffff800055e858 : retf 0xf2e8 ; call rbx
0xffffff800061d9ad : retf 0xf983 ; add esi, dword ptr [rsp + rdx + 0x4c] ; mov edi, ebp ; call rax
0xffffff80002961b2 : retf 0xfd2 ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e9
0xffffff80007401e8 : retf 0xfff6 ; call qword ptr [rbx]
0xffffff8000740264 : retf 0xfff6 ; jmp rax
0xffffff80007cd788 : retf 0xfffe ; call rcx
0xffffff80006b0c80 : retf 0xfffe ; jmp rsp
0xffffff80005847ac : retf 0xffff ; call rbx
0xffffff80007f0b8c : retf 0xffff ; call rdi
0xffffff8000311ead : retf ; call 0xffffff800028e153
0xffffff800070257c : retf ; call 0xffffff800029e853
0xffffff8000766358 : retf ; call 0xffffff80003923e4
0xffffff800087730b : retf ; call qword ptr [rax + 0x28]
0xffffff800054ddba : retf ; call r15
0xffffff800052bcfb : retf ; call rax
0xffffff800038946d : retf ; call rdi
0xffffff80008f2ee0 : retf ; jb 0xffffff80008f2e39 ; call 0xffffff80008ef1d9
0xffffff8000617c83 : retf ; je 0xffffff8000617c97 ; mov rdi, rbx ; mov rsi, r12 ; call rax
0xffffff80005c086b : retf ; jmp rbx
0xffffff80005fbe46 : retf ; mov dword ptr [rbp - 0x130], ecx ; call 0xffffff80007b8129
0xffffff80004cfe00 : retf ; mov r8, qword ptr [rbp + 0x18] ; call 0xffffff80004fc027
0xffffff80005931b8 : retf ; mov rcx, rbx ; call rax
0xffffff80007662d1 : retf ; mov rdi, r15 ; call 0xffffff80003923e7
0xffffff80003991ec : rol bl, 0x48 ; mov eax, 1 ; ret
0xffffff800039920a : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff80003934cd : rol bl, 1 ; nop ; lock and dword ptr [rdi], esi ; ret
0xffffff80003934ad : rol bl, 1 ; nop ; lock or dword ptr [rdi], esi ; ret
0xffffff8000371636 : rol bl, cl ; pop rbp ; ret
0xffffff80008f3f34 : rol byte ptr [r11 + rcx*4 + 0x45], 0xcc ; call rbx
0xffffff80008f3d20 : rol byte ptr [r11 + rcx*4 + 0x4d], 0xc4 ; call rbx
0xffffff80003c30eb : rol byte ptr [r13 - 0x6af0be25], 1 ; ret 0x8b4c
0xffffff80005445d6 : rol byte ptr [r15 + rcx - 0x4a], 1 ; stosd dword ptr [rdi], eax ; ret
0xffffff800049126c : rol byte ptr [r8], 0xc6 ; rol dword ptr [r8], 0xc6 ; ret 0xc600
0xffffff80008186f9 : rol byte ptr [r8], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80006ca604 : rol byte ptr [r8], 1 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x39], ah ; ret 0
0xffffff80004a5f30 : rol byte ptr [rax + 0x20], 0xf0 ; movzx eax, al ; pop rbp ; ret
0xffffff800057d541 : rol byte ptr [rax + rax*8 + 0x3d832574], 0x6f ; ret 0x4e
0xffffff800072eb16 : rol byte ptr [rax + rax], 0 ; or byte ptr [rdi + 0x35], 0x20 ; pop rbp ; ret
0xffffff8000413ee6 : rol byte ptr [rax + rcx*2], 0x29 ; ret
0xffffff80004e17f9 : rol byte ptr [rax + rcx*2], 0x81 ; ret 0xa0
0xffffff80008bd136 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0xffffff800027f118 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x8360
0xffffff80005f49d5 : rol byte ptr [rax + rcx*4 - 0x16], 0xf6 ; shl byte ptr [rax], cl ; ret 0xb60f
0xffffff8000b3d30e : rol byte ptr [rax - 0x3e], 0 ; rol byte ptr [rax], cl ; ret 0xf280
0xffffff8000276341 : rol byte ptr [rax - 0x7d], 0xc6 ; clc ; jne 0xffffff8000276308 ; pop rbp ; ret
0xffffff80002d945f : rol byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x2948
0xffffff8000895d97 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002caf82 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800073c48e : rol byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000285069 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x31], al ; push rsi ; ret
0xffffff80008790b4 : rol byte ptr [rax], 0 ; add byte ptr [rbp - 0x17], bl ; ret 5
0xffffff80003b87b1 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000803ad1 : rol byte ptr [rax], 0 ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or al, ch ; ret 0xba7d
0xffffff80006ab88d : rol byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x1b75
0xffffff80006af161 : rol byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x2775
0xffffff800083d3ca : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc809
0xffffff8000877f63 : rol byte ptr [rax], 0 ; add dh, dh ; ret
0xffffff8000541360 : rol byte ptr [rax], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007aa386 : rol byte ptr [rax], 0 ; or byte ptr [rax + 0xf], cl ; div edi ; ret 0x20
0xffffff800049126d : rol byte ptr [rax], 0xc6 ; rol dword ptr [r8], 0xc6 ; ret 0xc600
0xffffff800066e931 : rol byte ptr [rax], 0xd2 ; jns 0xffffff800066e936 ; pop rbp ; ret
0xffffff800070df9c : rol byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff80008186fa : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80008dfcec : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xb8 ; ret 2
0xffffff800070a9a2 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000707f36 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff80006ca605 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x39], ah ; ret 0
0xffffff80007f055e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80004c40c7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; call 0xffffff8000510376
0xffffff80002a9a2d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff8000389db1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, rsi ; pop rbp ; ret
0xffffff800072d9d6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; or byte ptr [rdi + 0x30], 8 ; pop rbp ; ret
0xffffff8000326ae6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000899c57 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800056411d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800058da03 : rol byte ptr [rax], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0xffffff800058dad6 : rol byte ptr [rax], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x858b
0xffffff80006d648f : rol byte ptr [rax], 1 ; pop rbp ; ret
0xffffff8000621731 : rol byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000b3c9d2 : rol byte ptr [rax], cl ; ret 0x5bb1
0xffffff8000b3d313 : rol byte ptr [rax], cl ; ret 0xf280
0xffffff80005ba8ad : rol byte ptr [rbp + 0x31], 0xc9 ; call 0xffffff8000396b86
0xffffff800076b931 : rol byte ptr [rbp + 0x31], 0xc9 ; call 0xffffff8000396b87
0xffffff80004a1d14 : rol byte ptr [rbp + 0x31], 0xc9 ; call rax
0xffffff80007a4989 : rol byte ptr [rbp + 0x31], 0xc9 ; mov rdx, rax ; pop rbp ; jmp r11
0xffffff80007fa928 : rol byte ptr [rbp + 0x31], 0xc9 ; mov rsi, r13 ; call 0xffffff8000396b89
0xffffff800049c8d3 : rol byte ptr [rbp + 0x31], 0xc9 ; pop rbp ; jmp rax
0xffffff80008336ea : rol byte ptr [rbp + 0x481174f6], 0xff ; ret
0xffffff8000788951 : rol byte ptr [rbp + 0xf0574d2], 0xbc ; ret 0xc0ff
0xffffff80003743da : rol byte ptr [rbp + 1], cl ; ret 0x8d47
0xffffff800044bbe2 : rol byte ptr [rbp - 0x3c6bf037], 0xf ; xchg eax, ebp ; ret 0xc320
0xffffff80003c30ec : rol byte ptr [rbp - 0x6af0be25], 1 ; ret 0x8b4c
0xffffff8000311712 : rol byte ptr [rbp - 0x77], 1 ; ret 0xc141
0xffffff80006a1980 : rol byte ptr [rbp - 0x7b], 1 ; ror byte ptr [rdi], 0x95 ; ret
0xffffff8000366828 : rol byte ptr [rbp - 0x7c], 0xc0 ; jne 0xffffff80003667e7 ; pop rbp ; ret
0xffffff80007c0072 : rol byte ptr [rbx + 0x1d7401f8], 0xb9 ; ret 8
0xffffff80004aab04 : rol byte ptr [rbx + 0x2941fce0], 1 ; ret 0x8d45
0xffffff800062282a : rol byte ptr [rbx + 0x415b01e0], 0x5e ; pop rbp ; ret
0xffffff80002a6aed : rol byte ptr [rbx + 0x440f00f9], 0xc2 ; jmp 0xffffff80002a6b03
0xffffff80002bacb9 : rol byte ptr [rbx + 0x450f07e1], 0xc2 ; pop rbp ; ret
0xffffff8000608772 : rol byte ptr [rbx + 0x6c7215fa], 0x83 ; ret 0x48ec
0xffffff8000720da1 : rol byte ptr [rbx + 0x87202f8], 0x89 ; ret 0xe95d
0xffffff80003c2ef2 : rol byte ptr [rbx + 0xf00d07d], 0x95 ; ret 0xd184
0xffffff800074d49f : rol byte ptr [rbx + 0xf00d47d], 0x94 ; ret
0xffffff800090925c : rol byte ptr [rbx + rcx*4 + 0x45], 0xc4 ; mov r9, qword ptr [rbp - 0x38] ; call rbx
0xffffff80008f3f35 : rol byte ptr [rbx + rcx*4 + 0x45], 0xcc ; call rbx
0xffffff80008f3d21 : rol byte ptr [rbx + rcx*4 + 0x4d], 0xc4 ; call rbx
0xffffff80004c09ee : rol byte ptr [rbx - 0x1f3edf20], 1 ; adc byte ptr [rcx], cl ; ret
0xffffff80003e1520 : rol byte ptr [rbx - 0x247af740], 0xf ; ret
0xffffff8000831ce6 : rol byte ptr [rbx - 0x3076fc01], 0x77 ; pop rbp ; ret
0xffffff8000505033 : rol byte ptr [rbx - 0x37fefe10], 0x5d ; ret
0xffffff80007a6768 : rol byte ptr [rbx - 0x6bf0fa06], 1 ; ret 0xb60f
0xffffff8000834502 : rol byte ptr [rbx - 0x6df0f501], 1 ; ret
0xffffff800085eb9c : rol byte ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000528ea8 : rol byte ptr [rbx], 0x5d ; ret
0xffffff8000b41274 : rol byte ptr [rcx + 0x100e2], cl ; add byte ptr [rcx], al ; ret 0xc283
0xffffff8000b3c2ca : rol byte ptr [rcx + 0x20], cl ; ret 0xc220
0xffffff8000b49e83 : rol byte ptr [rcx + 0x30], cl ; ret 0xc220
0xffffff800083c5d3 : rol byte ptr [rcx + 0x33], 0x9c ; ret 0x800
0xffffff8000312661 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0xffffff80006ddd08 : rol byte ptr [rcx + 0xf], 0x96 ; ret
0xffffff8000635b10 : rol byte ptr [rcx + 0xf], 0xb6 ; sar byte ptr [rcx], cl ; ret 0x850f
0xffffff8000589fdb : rol byte ptr [rcx + 0xf], 0xb7 ; fiadd dword ptr [rcx] ; ret
0xffffff800058437f : rol byte ptr [rcx + 0xf], 0xb7 ; fild word ptr [rcx] ; ret
0xffffff800058a03e : rol byte ptr [rcx + 0xf], 0xb7 ; fld dword ptr [rcx] ; ret
0xffffff800059c4b9 : rol byte ptr [rcx + 0xf], 0xb7 ; rol byte ptr [rcx], cl ; ret 0xb70f
0xffffff80005845c8 : rol byte ptr [rcx + 0xf], 0xb7 ; rol byte ptr [rcx], cl ; ret 0xd789
0xffffff800058451b : rol byte ptr [rcx + 0xf], 0xb7 ; rol dword ptr [rcx], cl ; ret 0xd789
0xffffff80003c5744 : rol byte ptr [rcx + 0xf], 1 ; ret 0x8b4c
0xffffff80003af431 : rol byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x144
0xffffff80005fc214 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ror byte ptr [rdi], 0x95 ; ret
0xffffff8000840f28 : rol byte ptr [rcx + 3], 1 ; cmp byte ptr [r9], dil ; ret 0xc76
0xffffff8000b49aaa : rol byte ptr [rcx + 8], cl ; ret 0xe280
0xffffff80005844c8 : rol byte ptr [rcx + rax - 0x10], 0x89 ; ret 0xeac1
0xffffff800081fd62 : rol byte ptr [rcx + rax - 0x20], 0xff ; ret
0xffffff8000584575 : rol byte ptr [rcx + rax - 0x28], 0x89 ; ret 0xeac1
0xffffff8000584602 : rol byte ptr [rcx + rax - 0x30], 0x89 ; ret 0xeac1
0xffffff800083c08a : rol byte ptr [rcx + rax*2], 0x83 ; ret 0x75fc
0xffffff8000842ac3 : rol byte ptr [rcx + rax*2], 0x83 ; ret 0x75fe
0xffffff800072da6b : rol byte ptr [rcx + rax*2], 0xff ; ret 0xee75
0xffffff800038ba2b : rol byte ptr [rcx + rcx*2], 0x89 ; ret
0xffffff800040c49c : rol byte ptr [rcx + rcx*4 + 0x47], 0x70 ; pop rbp ; ret
0xffffff80004a0171 : rol byte ptr [rcx + rcx*4 + 7], 1 ; add eax, esi ; pop rbp ; ret
0xffffff800072d766 : rol byte ptr [rcx + rcx*4 - 0x11], 0x89 ; ret 0xd989
0xffffff80006064b0 : rol byte ptr [rcx + rcx*4 - 0x12], 1 ; call rbx
0xffffff8000606422 : rol byte ptr [rcx + rcx*4 - 0x16], 1 ; mov ecx, r15d ; call r8
0xffffff8000546a84 : rol byte ptr [rcx + rcx*4 - 0x17], 0xe8 ; ret
0xffffff80008ef169 : rol byte ptr [rcx + rcx*4 - 0x17], 1 ; mov r8d, r14d ; call rbx
0xffffff8000656c23 : rol byte ptr [rcx + rcx*4 - 0x1f], 0xe8 ; je 0xffffff8000656ca9 ; ret
0xffffff800065027e : rol byte ptr [rcx + rcx*4 - 0x2e], 0xe8 ; sbb edx, esp ; ret
0xffffff80006d061f : rol byte ptr [rcx + rcx*4 - 0x40], 1 ; pop rbp ; ret
0xffffff8000388228 : rol byte ptr [rcx + rcx*4 - 0xa], 0x41 ; call rdi
0xffffff8000567584 : rol byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; ret
0xffffff80003668a8 : rol byte ptr [rcx + rcx*8 - 0x76b70c8b], 0xf8 ; pop rbp ; ret
0xffffff8000839867 : rol byte ptr [rcx + rdi - 0x17], 0xf ; lahf ; ret
0xffffff80006ddea5 : rol byte ptr [rcx + rdi - 0x36], 0xf ; xchg eax, edi ; ret 0xf41
0xffffff80006dd061 : rol byte ptr [rcx + rdi - 0x37], 0xf ; xchg eax, edi ; ror dword ptr [rdi], 0x96 ; ret 0x3944
0xffffff8000371e32 : rol byte ptr [rcx + rsi - 0xe], 0xd1 ; ret 0x5589
0xffffff80003724a9 : rol byte ptr [rcx - 0x2f], 1 ; ret 0x8944
0xffffff800061d03d : rol byte ptr [rcx - 0x75], 1 ; xchg dword ptr [rax + 0x39000000], edx ; ret
0xffffff800066dc8a : rol byte ptr [rcx - 0x77], 0xd8 ; call 0xffffff800028e4a7
0xffffff80007e5948 : rol byte ptr [rcx - 0x77], 1 ; ret 0x1b8
0xffffff8000495672 : rol byte ptr [rcx - 0x77], 1 ; ret 0x6349
0xffffff8000b3c123 : rol byte ptr [rcx - 0x77], cl ; ret
0xffffff8000b49eaf : rol byte ptr [rcx - 0x78], 1 ; ret 0x8041
0xffffff8000b49e8d : rol byte ptr [rcx - 0x78], cl ; rol byte ptr [rcx + 0x30], cl ; ret 0xc220
0xffffff8000495421 : rol byte ptr [rcx - 0x7d], 0xc1 ; ret 0xb841
0xffffff800059eabe : rol byte ptr [rcx - 0x7d], 0xfc ; and byte ptr [rdi], cl ; lahf ; ret
0xffffff80005720ca : rol byte ptr [rcx - 0x7d], 0xff ; add dword ptr [rdi], ecx ; ret 0x518d
0xffffff8000442739 : rol byte ptr [rcx - 0x7d], 1 ; call qword ptr [rsi]
0xffffff8000843c7e : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4503
0xffffff800061b9b3 : rol byte ptr [rcx - 0x7d], 1 ; ret 0xeb09
0xffffff800058633e : rol byte ptr [rcx - 0x7d], cl ; cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff80003d65fe : rol byte ptr [rcx - 0x7f], 1 ; loopne 0xffffff80003d660c ; add byte ptr [rax], dl ; add bh, dh ; ret 0
0xffffff8000b4a016 : rol byte ptr [rcx - 0x7f], cl ; loop 0xffffff8000b4a06e ; and al, 0x89 ; ret 0xe281
0xffffff80008b6008 : rol byte ptr [rcx - 0x80], 0x7c ; and al, 0x40 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff8000b4a1d8 : rol byte ptr [rcx - 0x80], cl ; ret 0x41bf
0xffffff8000796147 : rol byte ptr [rcx - 0xa], 0xc1 ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff80003b667e : rol byte ptr [rcx - 0xa], 0xc4 ; add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x3941
0xffffff8000755388 : rol byte ptr [rcx - 0xa], cl ; ret
0xffffff80007e263e : rol byte ptr [rcx - 0xa], cl ; ret 0x7403
0xffffff80003b03b9 : rol byte ptr [rcx - 1], 1 ; ret 0x3941
0xffffff80003c9b5c : rol byte ptr [rcx - 1], 1 ; ret 0x8d4f
0xffffff80004aa57d : rol byte ptr [rcx - 1], cl ; ret
0xffffff80005d878c : rol byte ptr [rcx - 9], cl ; idiv bh ; ret 0x5389
0xffffff80005d74ea : rol byte ptr [rcx - 9], cl ; idiv edi ; ret 0x8941
0xffffff8000257f17 : rol byte ptr [rcx - 9], cl ; inc dword ptr [rbp - 0x76e08b40] ; ret 0xe283
0xffffff8000820adb : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005ddd43 : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000392d6e : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0xffffff800081235d : rol byte ptr [rcx], 0 ; add byte ptr [rbx - 0x76b7df89], cl ; ret 0xff5d
0xffffff80006d499d : rol byte ptr [rcx], 0xc0 ; pop rbp ; ret
0xffffff800082778c : rol byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003cb1f6 : rol byte ptr [rcx], 1 ; ret 0x8b41
0xffffff80006198b5 : rol byte ptr [rcx], 1 ; ret 0xc3e8
0xffffff8000708afb : rol byte ptr [rcx], cl ; ret 0x513b
0xffffff800059c4bd : rol byte ptr [rcx], cl ; ret 0xb70f
0xffffff8000b4a1d1 : rol byte ptr [rcx], cl ; ret 0xc220
0xffffff80002a3929 : rol byte ptr [rcx], cl ; ret 0xd269
0xffffff80005845cc : rol byte ptr [rcx], cl ; ret 0xd789
0xffffff80007236e0 : rol byte ptr [rcx], cl ; ror byte ptr [rcx], cl ; ret 0xd389
0xffffff800062ebc7 : rol byte ptr [rdi + rcx + 0x46], 1 ; ret 0xd141
0xffffff80005445d7 : rol byte ptr [rdi + rcx - 0x4a], 1 ; stosd dword ptr [rdi], eax ; ret
0xffffff80008c0c2c : rol byte ptr [rdi], 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a8871 : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff800036cffc : rol byte ptr [rdx + 0x6e], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800052ee9d : rol byte ptr [rdx + rcx + 0x7d], 1 ; ret
0xffffff8000366ae9 : rol byte ptr [rdx + rdx*8 - 0x76b70d8b], 0xf8 ; pop rbp ; ret
0xffffff8000468c37 : rol byte ptr [rdx], 0 ; add bl, ch ; ret
0xffffff800072dd72 : rol byte ptr [rdx], 0 ; add byte ptr [rax + 0x5d10344f], al ; ret
0xffffff80004baf15 : rol byte ptr [rdx], 0x83 ; ret 0x75fe
0xffffff800071c3aa : rol byte ptr [rdx], 0xff ; ret 0xff81
0xffffff80008e826e : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff8000468757 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; jmp 0xffffff8000468725
0xffffff80008f3186 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002db717 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000807e38 : rol byte ptr [rip + 0x415b0000], 1 ; pop rsi ; pop rbp ; ret
0xffffff800036f701 : rol byte ptr [rip + 0x41ea0145], 1 ; ret 0xd089
0xffffff800025839e : rol byte ptr [rip + 0x48ed3145], 0x39 ; ret
0xffffff8000311711 : rol byte ptr gs:[rbp - 0x77], 1 ; ret 0xc141
0xffffff80002b760c : rol cl, 0xe0 ; add al, 0x5d ; ret
0xffffff8000314f0c : rol cl, 0xe0 ; sbb byte ptr [rcx], cl ; ret
0xffffff8000672036 : rol cl, 0xe9 ; adc byte ptr [rbp - 0xc], dh ; pop rbp ; ret
0xffffff80005ac6ec : rol cl, 0xeb ; add eax, dword ptr [rcx] ; ret
0xffffff800041075e : rol cl, cl ; cli ; or al, 0xeb ; add bh, bh ; ret 0xf239
0xffffff8000373e46 : rol cl, cl ; ret 0x105
0xffffff8000374489 : rol cl, cl ; ret 0x4105
0xffffff80003719d7 : rol cl, cl ; ret 0x8d05
0xffffff80006bf430 : rol dh, 0x45 ; ret 0xc700
0xffffff8000b412a2 : rol dh, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x958b
0xffffff8000765386 : rol dl, 1 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0xffffff8000393049
0xffffff8000860efa : rol dl, cl ; or eax, 0x158d4800 ; xchg eax, ebp ; ret
0xffffff8000491270 : rol dword ptr [r8], 0xc6 ; ret 0xc600
0xffffff800080e04b : rol dword ptr [rax + 0x27501e1], 0x88 ; ret 0xc984
0xffffff8000586b1c : rol dword ptr [rax + 0xf], 0x85 ; mov ebp, 0xf6000000 ; ret 0x7510
0xffffff800066cf30 : rol dword ptr [rax + 0xf], 0x85 ; xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff8000383f11 : rol dword ptr [rax + rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x6348
0xffffff80003c2553 : rol dword ptr [rax + rcx*2], 0x81 ; ret 0xe00
0xffffff800089707c : rol dword ptr [rax + rsi*4], 1 ; pop rbp ; ret
0xffffff800058bc42 : rol dword ptr [rax - 0x49f0fe1d], cl ; fild dword ptr [rcx] ; ret
0xffffff800058477e : rol dword ptr [rax - 0x49f0fe1f], 0xc1 ; pop rbp ; ret
0xffffff8000b4a22b : rol dword ptr [rax - 0x77beeb1f], 1 ; ret
0xffffff80002d3a91 : rol dword ptr [rax - 0x7d], 0xc6 ; clc ; jne 0xffffff80002d3a58 ; pop rbp ; ret
0xffffff8000535a69 : rol dword ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0xffffff800060bbd7 : rol dword ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0xffffff8000725a6b : rol dword ptr [rax], 0 ; add byte ptr [rax], 0xf ; xchg eax, esp ; ret
0xffffff80006286ea : rol dword ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0xffffff80006c6711 : rol dword ptr [rax], 0 ; add byte ptr [rdi + rcx], al ; ret 0x8b41
0xffffff80003bc0a5 : rol dword ptr [rax], 0 ; add byte ptr [rdi], cl ; xor bh, bh ; ret
0xffffff8000491271 : rol dword ptr [rax], 0xc6 ; ret 0xc600
0xffffff800058d9ba : rol dword ptr [rax], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0xffffff800067f1e9 : rol dword ptr [rbp + 0x31], 0xff ; jmp rcx
0xffffff8000373760 : rol dword ptr [rbp + 0x31], cl ; ret
0xffffff80003794ec : rol dword ptr [rbp + 0x480e75c9], 0x81 ; ret
0xffffff80005716d9 : rol dword ptr [rbp + 0x482d75c9], 0x83 ; ret
0xffffff8000655185 : rol dword ptr [rbp + rsi], 0x31 ; shr al, 0x10 ; xchg eax, ebx ; ret
0xffffff80004486a2 : rol dword ptr [rbp - 0x14268b40], 0xb7 ; pop rbp ; ret
0xffffff8000716661 : rol dword ptr [rbp - 0x2ebbf037], 1 ; add eax, edx ; pop rbp ; ret
0xffffff8000854373 : rol dword ptr [rbp - 0x3c6af040], 0xf ; xchg eax, esp ; ret 0xbd83
0xffffff800089891b : rol dword ptr [rbp - 0x77], 0xc8 ; call r10
0xffffff8000340ebf : rol dword ptr [rbp - 0x77], 1 ; enter 0xf44, 0x42 ; ret 0x8944
0xffffff800057333b : rol dword ptr [rbp - 0x77], 1 ; ret 0x8941
0xffffff8000397cb9 : rol dword ptr [rbx + 0x117501f9], 0x5d ; ret
0xffffff8000397cfa : rol dword ptr [rbx + 0x27501f9], 0x5d ; ret
0xffffff8000397d2a : rol dword ptr [rbx + 0x27502f9], 0x5d ; ret
0xffffff800039d5d4 : rol dword ptr [rbx - 0x3776fe1f], 1 ; pop rbp ; ret
0xffffff80002fa81e : rol dword ptr [rbx - 0x48f0fc3a], cl ; ret
0xffffff800039925f : rol dword ptr [rbx - 0x5b0cf81f], 1 ; xor eax, eax ; ret
0xffffff800050c700 : rol dword ptr [rbx - 0x73], 0xc ; mov dword ptr [rax - 1], ecx ; ret
0xffffff8000b3c501 : rol dword ptr [rbx - 0x76befd1f], 1 ; ret 0x2141
0xffffff80007c77a3 : rol dword ptr [rcx + 0x10000f9], 1 ; add byte ptr [rdi], cl ; pushfq ; ret 0x550a
0xffffff80007badac : rol dword ptr [rcx + 0x100e3], cl ; add byte ptr [rcx], cl ; ret
0xffffff8000b49a8d : rol dword ptr [rcx + 0x20], cl ; ret
0xffffff8000b4a3d9 : rol dword ptr [rcx + 0x31], 1 ; ret 0x8d41
0xffffff80004bff28 : rol dword ptr [rcx + 0xf], 0x4c ; ret 0x8d44
0xffffff8000874642 : rol dword ptr [rcx + 0xf], 0xb6 ; ret
0xffffff80003667c2 : rol dword ptr [rcx + 0xf], 0xbe ; enter -0x37d7, 0x5d ; ret
0xffffff800059a17e : rol dword ptr [rcx + rax - 0x18], 0x89 ; ret 0xeac1
0xffffff800059a1d9 : rol dword ptr [rcx + rax - 0x30], 0x89 ; ret 0xeac1
0xffffff800059a123 : rol dword ptr [rcx + rax - 8], 0x89 ; ret 0xeac1
0xffffff8000597f02 : rol dword ptr [rcx + rbp - 0x27], 0x89 ; ret 0xeac1
0xffffff80004a012d : rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; ret 0x374
0xffffff80006357f6 : rol dword ptr [rcx + rdi - 0x10], 0xf ; lahf ; ret 0xca20
0xffffff800084e1e7 : rol dword ptr [rcx + rdi - 0x27], 0x72 ; ret
0xffffff8000683c86 : rol dword ptr [rcx + rdi - 0x32], 0xf ; lahf ; ret 0xca08
0xffffff80006359c9 : rol dword ptr [rcx + rdi - 8], 0xf ; lahf ; ret 0xca20
0xffffff8000370249 : rol dword ptr [rcx - 0x2f], cl ; ret
0xffffff800048362d : rol dword ptr [rcx - 0x3f], 0xe9 ; or byte ptr [rbp - 0x77], al ; ret 0xc141
0xffffff8000b3e8d8 : rol dword ptr [rcx - 0x3f], cl ; jmp 0xffffff8000b3e8e8
0xffffff80003742d9 : rol dword ptr [rcx - 0x3f], cl ; ret
0xffffff80003c9b27 : rol dword ptr [rcx - 0x46], 2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0xffffff800029c292 : rol dword ptr [rcx - 0x73], cl ; add dword ptr [r9 - 0x77], eax ; ret
0xffffff800034daa9 : rol dword ptr [rcx - 0x76b70008], cl ; ret
0xffffff800055e332 : rol dword ptr [rcx - 0x77], 0x4e ; sub al, 0xff ; ret 0xfa81
0xffffff80004b4442 : rol dword ptr [rcx - 0x77], 0xd9 ; call 0xffffff80004c06f6
0xffffff800039ef4b : rol dword ptr [rcx - 0x77], 0xe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000b4a094 : rol dword ptr [rcx - 0x77], 1 ; ret 0x8141
0xffffff80008448c2 : rol dword ptr [rcx - 0x77], cl ; ret 0x6348
0xffffff800080e0c2 : rol dword ptr [rcx - 0x7b], 0xc0 ; sete al ; pop rbp ; ret
0xffffff80005560cd : rol dword ptr [rcx - 0x7d], 0xfc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff8000b3e40c : rol dword ptr [rcx - 2], cl ; ret
0xffffff8000272d7b : rol dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004e1e4b : rol dword ptr [rcx], 0x89 ; ret
0xffffff80006d4b59 : rol dword ptr [rcx], 0x89 ; ret 0xe75
0xffffff8000716666 : rol dword ptr [rcx], 1 ; rcr byte ptr [rbp - 0x3d], 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff80002af952 : rol dword ptr [rcx], 1 ; ret 0x1589
0xffffff80002af7a9 : rol dword ptr [rcx], 1 ; ret 0x58b
0xffffff8000641521 : rol dword ptr [rcx], 1 ; ret 0x6666
0xffffff80002bb603 : rol dword ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c0bb6 : rol dword ptr [rcx], cl ; enter -0x26d7, -0x77 ; fcmovb st(0), st(1) ; ret 0x3108
0xffffff800059a05c : rol dword ptr [rcx], cl ; ret
0xffffff800058451f : rol dword ptr [rcx], cl ; ret 0xd789
0xffffff8000554f2d : rol dword ptr [rdi + rcx - 0x4a], cl ; ret
0xffffff800064a00d : rol dword ptr [rdi + rcx], 0x44 ; ret 0x8941
0xffffff800048b92d : rol dword ptr [rdi + rcx], 0x94 ; ret
0xffffff800081d789 : rol dword ptr [rdi - 1], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080df8b : rol dword ptr [rdi], 0x5d ; ret
0xffffff800080e15b : rol dword ptr [rdi], 0x98 ; pop rbp ; ret
0xffffff8000772269 : rol dword ptr [rdi], cl ; ret 0xc7ff
0xffffff80002c14c0 : rol dword ptr [rdx + 0x158d4800], 6 ; ret
0xffffff80007ea769 : rol dword ptr [rdx - 0x7cb60046], cl ; jmp qword ptr [rax]
0xffffff80004800f6 : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008d505d : rol dword ptr [rdx], 0 ; loopne 0xffffff80008d50c5 ; pop r14 ; pop rbp ; ret
0xffffff80008d644d : rol dword ptr [rdx], 0 ; loopne 0xffffff80008d63e0 ; sal byte ptr [rbp + 0x78], 0xbb ; ret 2
0xffffff800071ead2 : rol dword ptr [rdx], 0x48 ; add ecx, eax ; mov eax, dword ptr [rsi + rcx] ; pop rbp ; ret
0xffffff80005e0089 : rol dword ptr [rdx], 0x4c ; mov eax, ecx ; pop rbp ; ret
0xffffff8000267ef3 : rol dword ptr [rdx], 0x89 ; or cl, byte ptr [rax - 0x7d] ; ret 0x3930
0xffffff800070ad93 : rol dword ptr [rdx], 0xb8 ; or eax, 0xf000000 ; ret 0x8348
0xffffff8000b4a49d : rol dword ptr [rdx], 0xc4 ; xchg eax, edx ; push rax ; push rcx ; ret 0x8a41
0xffffff8000318a1e : rol dword ptr [rdx], 0xf ; ret 0x4389
0xffffff8000316bce : rol dword ptr [rdx], 0xf ; ret 0x4689
0xffffff80006c6751 : rol dword ptr [rdx], 0xf ; ret 0x508d
0xffffff80007a0e02 : rol dword ptr [rdx], 0xf ; ret 0x57eb
0xffffff80007cde63 : rol dword ptr [rdx], 0xf ; ret 0xe181
0xffffff800032606a : rol dword ptr [rdx], 0xf ; ret 0xf225
0xffffff80007818eb : rol dword ptr [rdx], 1 ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003743d6 : rol dword ptr [rip + 0x45d20141], 1 ; ret 0x8d47
0xffffff800027552b : rol dword ptr [rip + 0x872b3f], 0x5d ; ret
0xffffff8000326d4c : rol eax, 1 ; lodsd eax, dword ptr [rsi] ; mov edx, 0x83483374 ; ret
0xffffff8000785711 : rol eax, cl ; dec dword ptr [rax + 0x63] ; ret
0xffffff800074bf21 : rol ecx, 0xe8 ; add edi, edi ; ret
0xffffff80005980c4 : rol ecx, 0xe9 ; add esi, dword ptr [rcx] ; fldcw word ptr [rcx] ; ret 0xca29
0xffffff800073db67 : rol ecx, 0xeb ; adc dword ptr [rcx], esi ; ret
0xffffff800048981b : rol ecx, 1 ; add byte ptr fs:[rax - 1], cl ; ret
0xffffff80004ee158 : rol ecx, cl ; jmp 0xffffff80004ee16b
0xffffff8000b47e17 : rol ecx, cl ; jmp 0xffffff8000b47e38
0xffffff8000b4ba59 : rol ecx, cl ; jmp 0xffffff8000b4ba67
0xffffff800036f9c9 : rol ecx, cl ; ret
0xffffff80003b447f : rol ecx, cl ; sti ; adc byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; fadd dword ptr [rcx] ; ret
0xffffff80007719c8 : rol esi, 0x45 ; ret 0x4800
0xffffff8000756969 : rol esi, cl ; ret
0xffffff80002af951 : rol qword ptr [rcx], 1 ; ret 0x1589
0xffffff80002af7a8 : rol qword ptr [rcx], 1 ; ret 0x58b
0xffffff80006bf42f : rol r14b, 0x45 ; ret 0xc700
0xffffff80007719c7 : rol r14d, 0x45 ; ret 0x4800
0xffffff80007c1c0c : ror bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000252848 : ror byte ptr [r10 - 0x7f3577f1], 1 ; ret 0xfd0
0xffffff800038f068 : ror byte ptr [r11 + rcx*4 + 0x2c], 1 ; ret
0xffffff8000890830 : ror byte ptr [r11 + rcx*4 + 0x45], 0xc8 ; call rbx
0xffffff80008f88ba : ror byte ptr [r11 + rcx*4 + 0x4d], 0xc8 ; call rbx
0xffffff800025f3b0 : ror byte ptr [r11 - 0x778703e3], 1 ; add bh, dh ; ret
0xffffff8000728ce0 : ror byte ptr [r13 - 0x77], 1 ; ret 0x758b
0xffffff8000728dea : ror byte ptr [r13 - 0x77], 1 ; ret 0x8b44
0xffffff8000648ee9 : ror byte ptr [r15], 1 ; xchg eax, esp ; ret
0xffffff80007ed591 : ror byte ptr [r8 + 0x39], 0x4e ; and byte ptr [rbx + rbx - 0x77], dh ; ret 0xc2ff
0xffffff800064aad3 : ror byte ptr [r8 + 0x39], 1 ; ret
0xffffff80002ed060 : ror byte ptr [r8 + 0x39], 1 ; ret 0x674
0xffffff8000384ab6 : ror byte ptr [r8 + 0x39], 1 ; ret 0x894d
0xffffff800089fd7e : ror byte ptr [r8 + 1], 1 ; ret
0xffffff800075913c : ror byte ptr [r8 - 0x77], 1 ; fucomip st(0) ; cli ; cwde ; ret
0xffffff8000324b69 : ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff800089dfab : ror byte ptr [r8 - 0x77], 1 ; ret 0x8d48
0xffffff800089e918 : ror byte ptr [r8 - 0x7d], 1 ; ret
0xffffff8000904511 : ror byte ptr [r9 + rcx*4 - 9], 1 ; mov rsi, r15 ; call rbx
0xffffff80004aa665 : ror byte ptr [rax + 0x1e280ca], 0x30 ; ret 0x840f
0xffffff80004aa62a : ror byte ptr [rax + 0x1e280ca], 0x30 ; ret 0x850f
0xffffff80003c827e : ror byte ptr [rax + 0x21], 1 ; ret 0xb48
0xffffff800030f540 : ror byte ptr [rax + 0x21], cl ; ret 0x1b9
0xffffff800033d939 : ror byte ptr [rax + 0x21], cl ; ret 0x3145
0xffffff8000358ced : ror byte ptr [rax + 0x21], cl ; ret 0x8944
0xffffff8000317e9b : ror byte ptr [rax + 0x21], cl ; ret 0x894c
0xffffff800030f7b8 : ror byte ptr [rax + 0x21], cl ; ret 0x8b48
0xffffff800035aeee : ror byte ptr [rax + 0x21], cl ; ret 0x8b4c
0xffffff8000285460 : ror byte ptr [rax + 0x21], cl ; ret 0xc748
0xffffff8000283b17 : ror byte ptr [rax + 0x21], cl ; ret 0xc931
0xffffff800035c47f : ror byte ptr [rax + 0x21], cl ; ret 0xff31
0xffffff80003b6667 : ror byte ptr [rax + 0x29], 1 ; ret 0x8348
0xffffff8000499e06 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0xffffff80008508f9 : ror byte ptr [rax + 0x29], cl ; ret 0xeb83
0xffffff80007ed592 : ror byte ptr [rax + 0x39], 0x4e ; and byte ptr [rbx + rbx - 0x77], dh ; ret 0xc2ff
0xffffff80007ad449 : ror byte ptr [rax + 0x39], 0xc8 ; jl 0xffffff80007ad447 ; pop rbp ; ret
0xffffff80002daf55 : ror byte ptr [rax + 0x39], 0xcf ; cmovne rax, rcx ; pop rbp ; ret
0xffffff800083bb8d : ror byte ptr [rax + 0x39], 0xd1 ; cmovb rax, rsi ; pop rbp ; ret
0xffffff80002ca3eb : ror byte ptr [rax + 0x39], 1 ; ret
0xffffff80002ed061 : ror byte ptr [rax + 0x39], 1 ; ret 0x674
0xffffff800031804e : ror byte ptr [rax + 0x39], 1 ; ret 0x840f
0xffffff8000384ab7 : ror byte ptr [rax + 0x39], 1 ; ret 0x894d
0xffffff80008e885d : ror byte ptr [rax + 0x39], 1 ; ret 0xf48
0xffffff8000485891 : ror byte ptr [rax + 0x63], 0x1c ; ror dword ptr [rax - 0x73], 5 ; ret
0xffffff8000572a15 : ror byte ptr [rax + 0x63], 1 ; adc al, 0x88 ; add rdx, rax ; jmp rdx
0xffffff80004f98c4 : ror byte ptr [rax + 0x63], 1 ; ret 0x8948
0xffffff800048570b : ror byte ptr [rax + 0x63], 4 ; ret 0x894c
0xffffff8000802f8c : ror byte ptr [rax + 0x63], 4 ; ret 0x8b48
0xffffff800048f4b6 : ror byte ptr [rax + 0x63], 4 ; ror dword ptr [rax + 0xf], 0xaf ; ret
0xffffff8000678501 : ror byte ptr [rax + 0x69], 1 ; ret
0xffffff8000338764 : ror byte ptr [rax + 0x69], 1 ; ret 0x851f
0xffffff80007f62d8 : ror byte ptr [rax + 0x69], 1 ; ret 0xca00
0xffffff8000880500 : ror byte ptr [rax + 0x6b], cl ; ret 0x4938
0xffffff80003a96d3 : ror byte ptr [rax + 0xf], 0x44 ; clc ; call rcx
0xffffff8000385610 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0xffffff80007b395d : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0xffffff80008d937a : ror byte ptr [rax + 0xf], 0x45 ; ret
0xffffff8000727327 : ror byte ptr [rax + 0xf], 0xaf ; ret 0x8948
0xffffff8000410298 : ror byte ptr [rax + 0xf], 1 ; ret 0x8548
0xffffff80002caeda : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0xffffff800063ab5a : ror byte ptr [rax + 0xf], 1 ; ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff800026799f : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0xffffff80007b03f0 : ror byte ptr [rax + 1], 0xf8 ; pop rbp ; ret
0xffffff800071ea94 : ror byte ptr [rax + 1], 1 ; enter 0x148, -0x10 ; pop rbp ; ret
0xffffff800089fd7f : ror byte ptr [rax + 1], 1 ; ret
0xffffff800077c1b7 : ror byte ptr [rax + 1], cl ; fimul dword ptr [rax + 0x21] ; ret 0x1b9
0xffffff8000359677 : ror byte ptr [rax + 1], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8545
0xffffff80007df646 : ror byte ptr [rax + 1], cl ; fimul dword ptr [rax + 0x21] ; ret 0xc931
0xffffff8000262f9b : ror byte ptr [rax + 1], cl ; ret 0x149
0xffffff80002623f4 : ror byte ptr [rax + 1], cl ; ret 0x2148
0xffffff800026fdb9 : ror byte ptr [rax + 1], cl ; ret 0x214c
0xffffff8000410780 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0xffffff800028b16b : ror byte ptr [rax + 1], cl ; ret 0x8d48
0xffffff8000259e6a : ror byte ptr [rax + 1], cl ; ret 0xbe41
0xffffff80003b1d70 : ror byte ptr [rax + 1], cl ; ret 0xefe9
0xffffff800028638c : ror byte ptr [rax + 1], cl ; ret 0xffb8
0xffffff80003c2c63 : ror byte ptr [rax + 9], 0xc8 ; pop rbp ; ret
0xffffff80003a8340 : ror byte ptr [rax + 9], 0xd0 ; pop rbp ; ret
0xffffff80003277e0 : ror byte ptr [rax + 9], cl ; ret 0x8948
0xffffff8000661639 : ror byte ptr [rax + rcx*2], 0x89 ; ret
0xffffff8000841034 : ror byte ptr [rax - 0x3800b7f1], 0xff ; ret 0xf275
0xffffff80003ba727 : ror byte ptr [rax - 0x3f], 0xe0 ; or al, 0x5d ; ret
0xffffff80002c72f5 : ror byte ptr [rax - 0x3f], 0xea ; or ah, byte ptr [rax] ; ret 0xb60f
0xffffff80003c575f : ror byte ptr [rax - 0x3f], 0xea ; sbb byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8b48
0xffffff80002caf05 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffff7fc3e6f716
0xffffff800074a780 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffff7fc42cf091
0xffffff800077c07d : ror byte ptr [rax - 0x3f], cl ; cli ; and byte ptr [rax + 0x21], cl ; ret 0x148
0xffffff80004954fd : ror byte ptr [rax - 0x68], 0x4c ; add dword ptr [rdi + rax*8 + 8], eax ; pop rbp ; ret
0xffffff80003f93b6 : ror byte ptr [rax - 0x73], 0x35 ; cdq ; ret
0xffffff8000582a88 : ror byte ptr [rax - 0x73], 0x35 ; ret
0xffffff8000308fe0 : ror byte ptr [rax - 0x73], 0x3d ; add al, ch ; ret
0xffffff80003fede1 : ror byte ptr [rax - 0x73], 0x3d ; add eax, 0xe80056c5 ; ret 0xe8f3
0xffffff80003233ad : ror byte ptr [rax - 0x73], 0x3d ; cli ; ret 0x62
0xffffff800079ad56 : ror byte ptr [rax - 0x73], 0x3d ; jmp qword ptr [rbx]
0xffffff800066072a : ror byte ptr [rax - 0x73], 0x3d ; push rdi ; ret
0xffffff800074d5e1 : ror byte ptr [rax - 0x73], 0x3d ; rcr byte ptr [rcx + 0x28], cl ; add al, ch ; ret 0xb40b
0xffffff80002d0f23 : ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff80007e3da0 : ror byte ptr [rax - 0x73], 0x3d ; ret 0x2015
0xffffff80006bc559 : ror byte ptr [rax - 0x73], 0x3d ; ret 0x322a
0xffffff80006bb2c2 : ror byte ptr [rax - 0x73], 0x3d ; ret 0x3234
0xffffff800048453b : ror byte ptr [rax - 0x73], 0x3d ; ret 0x4ee4
0xffffff800039008a : ror byte ptr [rax - 0x73], 0x3d ; ret 0x5d18
0xffffff8000351b33 : ror byte ptr [rax - 0x73], 0x3d ; ret 0x6073
0xffffff80007c97e0 : ror byte ptr [rax - 0x73], 0x3d ; scasd eax, dword ptr [rdi] ; xchg dword ptr [rcx], esp ; add al, ch ; ret
0xffffff8000454447 : ror byte ptr [rax - 0x73], 0x3d ; xchg eax, ebp ; ret 0x51
0xffffff800079ad0b : ror byte ptr [rax - 0x73], 0x3d ; xchg eax, ecx ; jmp qword ptr [rbx]
0xffffff80002fc805 : ror byte ptr [rax - 0x73], 0x44 ; ret
0xffffff8000485724 : ror byte ptr [rax - 0x73], 0x44 ; ret 0x4818
0xffffff80003b9908 : ror byte ptr [rax - 0x73], 0x75 ; ror byte ptr [rax - 0x77], 1 ; ret 0x2be8
0xffffff80003dd196 : ror byte ptr [rax - 0x73], 0x7d ; ret
0xffffff8000b490a5 : ror byte ptr [rax - 0x73], 0xc ; add byte ptr [rcx - 0x77], cl ; ret 0x8349
0xffffff80004290c7 : ror byte ptr [rax - 0x73], 0xc ; ret 0x894c
0xffffff80005edadb : ror byte ptr [rax - 0x73], 0xc ; ret 0x8b48
0xffffff80006763c0 : ror byte ptr [rax - 0x75], 0x55 ; or byte ptr [rdi], 0x85 ; ret 0
0xffffff800026c443 : ror byte ptr [rax - 0x75], 0x5a ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff8000803662 : ror byte ptr [rax - 0x75], 0x5c ; ret 0xeb20
0xffffff80007bb13e : ror byte ptr [rax - 0x75], 0x7c ; ret
0xffffff800041a543 : ror byte ptr [rax - 0x75], 1 ; pop rbp ; ror byte ptr [rax - 1], 1 ; ret
0xffffff800053c7c3 : ror byte ptr [rax - 0x75], 1 ; push rbp ; ror byte ptr [rax - 1], 1 ; ret 0x8348
0xffffff80007fe240 : ror byte ptr [rax - 0x75], 1 ; xor eax, 0x2e5ee0 ; call r14
0xffffff80007fe21f : ror byte ptr [rax - 0x75], 1 ; xor eax, 0x2e5f01 ; call r12
0xffffff8000799c39 : ror byte ptr [rax - 0x75], cl ; jne 0xffffff8000799bdb ; call rcx
0xffffff8000799c68 : ror byte ptr [rax - 0x75], cl ; jne 0xffffff8000799c0a ; call rax
0xffffff800049ee9e : ror byte ptr [rax - 0x77], 0x1c ; ret 0x4865
0xffffff800049f481 : ror byte ptr [rax - 0x77], 0x3c ; ret 0x4865
0xffffff800049fc1a : ror byte ptr [rax - 0x77], 0x3c ; ret 0xc031
0xffffff80002a63e0 : ror byte ptr [rax - 0x77], 0x45 ; cwde ; mov r10, rax ; jmp 0xffffff80002a6413
0xffffff80004e9ce5 : ror byte ptr [rax - 0x77], 0x85 ; mov eax, 0x1fffffe ; ret
0xffffff80008d5c6c : ror byte ptr [rax - 0x77], 0x87 ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008d5c2c : ror byte ptr [rax - 0x77], 0x87 ; test al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800029b702 : ror byte ptr [rax - 0x77], 0x9c ; ret 0x98
0xffffff8000669da9 : ror byte ptr [rax - 0x77], 0xca ; call 0xffffff800028e4a7
0xffffff8000691f5d : ror byte ptr [rax - 0x77], 0xda ; call 0xffffff800028e1b6
0xffffff8000662b41 : ror byte ptr [rax - 0x77], 0xda ; call 0xffffff800028e1b7
0xffffff8000301f27 : ror byte ptr [rax - 0x77], 0xde ; call 0xffffff800028e1b6
0xffffff8000662ace : ror byte ptr [rax - 0x77], 0xde ; call 0xffffff800028e1b7
0xffffff8000829d2e : ror byte ptr [rax - 0x77], 0xde ; call r15
0xffffff800087e8df : ror byte ptr [rax - 0x77], 0xde ; mov rdx, r13 ; call rax
0xffffff80007b4590 : ror byte ptr [rax - 0x77], 0xdf ; call 0xffffff80007907d6
0xffffff80003518b9 : ror byte ptr [rax - 0x77], 0xdf ; call 0xffffff80008edb16
0xffffff80003518e4 : ror byte ptr [rax - 0x77], 0xdf ; mov esi, r15d ; call 0xffffff80008edb19
0xffffff80003bb056 : ror byte ptr [rax - 0x77], 1 ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80008b19fa : ror byte ptr [rax - 0x77], 1 ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80003c9b51 : ror byte ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret
0xffffff800075913d : ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; cli ; cwde ; ret
0xffffff8000321434 : ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret
0xffffff800025d075 : ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret 0x1359
0xffffff80002ae89a : ror byte ptr [rax - 0x77], 1 ; ret
0xffffff800036cc2f : ror byte ptr [rax - 0x77], 1 ; ret 0x214c
0xffffff80003b990c : ror byte ptr [rax - 0x77], 1 ; ret 0x2be8
0xffffff800089dfac : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0xffffff8000b412f3 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0xffffff80002c8850 : ror byte ptr [rax - 0x77], 1 ; ret 0xe95d
0xffffff80004ab111 : ror byte ptr [rax - 0x77], 7 ; mov rax, r9 ; pop rbp ; ret
0xffffff80006b7014 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; add ebx, dword ptr [rcx] ; ret 0x48ff
0xffffff800069b4f5 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; and dl, ah ; ret
0xffffff80006cc67b : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; pushfq ; ret 0xffc0
0xffffff8000409204 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0xffffff80007a3205 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xb014
0xffffff800054bd55 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xd8cb
0xffffff8000781cb5 : ror byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffc9
0xffffff800027cb80 : ror byte ptr [rax - 0x77], cl ; ret
0xffffff80002a69bf : ror byte ptr [rax - 0x77], cl ; ret 0xdb7e
0xffffff80007b3953 : ror byte ptr [rax - 0x77], cl ; ret 0xf48
0xffffff80004b443f : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rcx - 0x77], 0xd9 ; call 0xffffff80004c06f9
0xffffff80008c45a9 : ror byte ptr [rax - 0x7b], 0xc9 ; je 0xffffff80008c45ba ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff8000869bdd : ror byte ptr [rax - 0x7b], 0xf6 ; je 0xffffff8000869bee ; mov al, cl ; pop rbp ; ret
0xffffff80002837d2 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006ef35a : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800050d5c0 : ror byte ptr [rax - 0x7d], 0xc4 ; js 0xffffff800050d628 ; pop rbp ; ret
0xffffff800050d64f : ror byte ptr [rax - 0x7d], 0xc4 ; js 0xffffff800050d6b7 ; pop rbp ; ret
0xffffff800082a288 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; jmp r8
0xffffff8000252a84 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800029eb63 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0xffffff80004a2f5e : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0xffffff800029e8da : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000252c37 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800036ca3e : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002dbd56 : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000820077 : ror byte ptr [rax - 0x7d], 0xc6 ; sbb byte ptr [rax + 0x39], cl ; ret 0xef77
0xffffff8000391336 : ror byte ptr [rax - 0x7d], 0xc8 ; or byte ptr [rdi], cl ; and al, al ; pop rbp ; ret
0xffffff80007cdf5e : ror byte ptr [rax - 0x7d], 0xe0 ; add ecx, dword ptr [rbx + rcx*4 - 0x7c] ; ret
0xffffff800083b170 : ror byte ptr [rax - 0x7d], 0xf9 ; adc byte ptr [rbp - 0x17], dh ; pop rbp ; ret
0xffffff800052881a : ror byte ptr [rax - 0x7d], 1 ; inc byte ptr [rip - 0xb7f281] ; ret 0xb60f
0xffffff80003c90a7 : ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff8000661f76 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0xffffff8000682b19 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4810
0xffffff8000661fcb : ror byte ptr [rax - 0x7d], 1 ; ret 0x4814
0xffffff8000b48ea0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x481b
0xffffff800060501b : ror byte ptr [rax - 0x7d], 1 ; ret 0x890b
0xffffff80006d280b : ror byte ptr [rax - 0x7d], 1 ; ret 0xeb02
0xffffff800053f610 : ror byte ptr [rax - 0x7d], cl ; ret
0xffffff8000633bf2 : ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0xffffff800058770d : ror byte ptr [rax - 0x7d], cl ; ret 0x4828
0xffffff80005853a8 : ror byte ptr [rax - 0x7d], cl ; ret 0x8928
0xffffff80005a71cf : ror byte ptr [rax - 0x7f], 1 ; ret 0x410
0xffffff80002ca0e4 : ror byte ptr [rax - 0xa], 0xc1 ; or byte ptr [rax + 0xf], 0x45 ; ret 0x8b48
0xffffff800058ac25 : ror byte ptr [rax - 1], 0x84 ; ret
0xffffff8000588263 : ror byte ptr [rax - 1], 0x84 ; ret 0xf8
0xffffff800041a547 : ror byte ptr [rax - 1], 1 ; ret
0xffffff800053c7c7 : ror byte ptr [rax - 1], 1 ; ret 0x8348
0xffffff8000539797 : ror byte ptr [rax - 1], 1 ; ret 0x8b48
0xffffff80008350f0 : ror byte ptr [rax - 1], 1 ; ret 0xc0ff
0xffffff8000394476 : ror byte ptr [rax - 1], 1 ; ret 0xce89
0xffffff80002a3a83 : ror byte ptr [rax - 1], 1 ; ror dword ptr [rdi], 0xbe ; rol byte ptr [rcx], cl ; ret 0xd269
0xffffff800072289b : ror byte ptr [rax - 1], cl ; ret 0x9eb
0xffffff800029dab1 : ror byte ptr [rax - 9], 1 ; fmul dword ptr [rax + 0xf] ; ret 0x8548
0xffffff800084b73b : ror byte ptr [rax - 9], cl ; int1 ; mov eax, edx ; pop rbp ; ret
0xffffff80008a919f : ror byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; ret
0xffffff8000567445 : ror byte ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000388b2c : ror byte ptr [rax], 0x48 ; cmp eax, 0x40 ; jne 0xffffff8000388b29 ; pop rbp ; ret
0xffffff8000388b64 : ror byte ptr [rax], 0x48 ; cmp eax, 0x40 ; jne 0xffffff8000388b59 ; pop rbp ; ret
0xffffff80004c5f55 : ror byte ptr [rax], 0x48 ; test edx, edx ; jne 0xffffff80004c5f48 ; pop rbp ; ret
0xffffff80008ed99d : ror byte ptr [rax], 0x5d ; ret
0xffffff800044eb29 : ror byte ptr [rax], 0x83 ; ret 0x75f8
0xffffff80003e1522 : ror byte ptr [rax], 0x85 ; fisttp dword ptr [rdi] ; ret
0xffffff80007d4f33 : ror byte ptr [rax], 0xc8 ; movzx eax, al ; pop rbp ; ret
0xffffff800051b10d : ror byte ptr [rax], 0xeb ; adc eax, 0xd33d8d48 ; ret 0x4b
0xffffff8000295a69 : ror byte ptr [rax], 0xff ; ret 0xf175
0xffffff8000340f06 : ror byte ptr [rax], 0xff ; sal dword ptr [rbp - 0xc], 0x49 ; inc edx ; jmp 0xffffff8000340f1c
0xffffff80008b079a : ror byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80005ac1d4 : ror byte ptr [rax], 1 ; ret 0xb70f
0xffffff80003c3162 : ror byte ptr [rax], 1 ; ret 0xdb85
0xffffff800069fc8a : ror byte ptr [rbp + 0x11], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f3e81 : ror byte ptr [rbp + 0x415b4004], 0x5e ; pop rbp ; ret
0xffffff80002f6d8d : ror byte ptr [rbp + 0x415b8004], 0x5e ; pop rbp ; ret
0xffffff800041ef1a : ror byte ptr [rbp + rcx*4 + 0x35], 1 ; out dx, al ; ret
0xffffff8000484bb9 : ror byte ptr [rbp + rcx*4 + 0x74], 0xc1 ; sbb dh, dh ; ret
0xffffff8000484ce9 : ror byte ptr [rbp + rcx*4 + 0x7c], 0xc1 ; sbb dh, dh ; ret
0xffffff80006c6782 : ror byte ptr [rbp - 0x3a09f7be], 1 ; add al, 0xf ; ret 0x508d
0xffffff80006c6794 : ror byte ptr [rbp - 0x3a09f7be], 1 ; and byte ptr [rdi], cl ; ret 0xeb
0xffffff80006c66c7 : ror byte ptr [rbp - 0x3a09fbbe], 1 ; or byte ptr [rdi], 0x44 ; ret 0x508d
0xffffff80006949ee : ror byte ptr [rbp - 0x3cd67ffc], 0xff ; ret
0xffffff80006c674c : ror byte ptr [rbp - 0x3e09f7be], 1 ; add cl, byte ptr [rdi] ; ret 0x508d
0xffffff80006c6770 : ror byte ptr [rbp - 0x3e09fbbe], 1 ; and byte ptr [rdi], cl ; ret 0x508d
0xffffff80006c675e : ror byte ptr [rbp - 0x3e09fbbe], 1 ; or byte ptr [rdi], cl ; ret 0x508d
0xffffff8000728ce1 : ror byte ptr [rbp - 0x77], 1 ; ret 0x758b
0xffffff8000728deb : ror byte ptr [rbp - 0x77], 1 ; ret 0x8b44
0xffffff80008bd6d6 : ror byte ptr [rbp - 0x77], 1 ; stc ; call r14
0xffffff8000909925 : ror byte ptr [rbx + 0x22df940d], 1 ; add bl, ch ; ret 0x8348
0xffffff80009098cd : ror byte ptr [rbx + 0x22dff00d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000909845 : ror byte ptr [rbx + 0x22e0740d], 1 ; add bl, ch ; ret 0x8348
0xffffff80009097ed : ror byte ptr [rbx + 0x22e0d00d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009094d0 : ror byte ptr [rbx + 0x22e3e90d], 1 ; add bh, bh ; ret
0xffffff800090946e : ror byte ptr [rbx + 0x22e44f0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009069c2 : ror byte ptr [rbx + 0x230efb0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff800090369f : ror byte ptr [rbx + 0x23421e0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009028af : ror byte ptr [rbx + 0x23500e0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000901696 : ror byte ptr [rbx + 0x2362270d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008fe334 : ror byte ptr [rbx + 0x2395890d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008fe242 : ror byte ptr [rbx + 0x23967b0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008fcb21 : ror byte ptr [rbx + 0x23ad9c0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f6b09 : ror byte ptr [rbx + 0x240db40d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f6a0b : ror byte ptr [rbx + 0x240eb20d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f68c2 : ror byte ptr [rbx + 0x240ffb0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f678b : ror byte ptr [rbx + 0x2411320d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f639f : ror byte ptr [rbx + 0x24151e0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f6058 : ror byte ptr [rbx + 0x2418650d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5f5a : ror byte ptr [rbx + 0x2419630d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5d23 : ror byte ptr [rbx + 0x241b9a0d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5aca : ror byte ptr [rbx + 0x241df30d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5979 : ror byte ptr [rbx + 0x241f440d], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80006560a3 : ror byte ptr [rbx + 0x4e8bc55], 0x81 ; ret
0xffffff80003573fd : ror byte ptr [rbx + 0x6d56580d], 1 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800038f069 : ror byte ptr [rbx + rcx*4 + 0x2c], 1 ; ret
0xffffff800074f12b : ror byte ptr [rbx + rcx*4 + 0x45], 0xb8 ; mov r9, qword ptr [rbp - 0x38] ; call rax
0xffffff8000890831 : ror byte ptr [rbx + rcx*4 + 0x45], 0xc8 ; call rbx
0xffffff80008f3b05 : ror byte ptr [rbx + rcx*4 + 0x45], 0xc8 ; mov r9, qword ptr [rbp - 0x30] ; call rbx
0xffffff800074eff8 : ror byte ptr [rbx + rcx*4 + 0x45], 0xc8 ; mov r9, qword ptr [rbp - 0x48] ; call rax
0xffffff80008f88bb : ror byte ptr [rbx + rcx*4 + 0x4d], 0xc8 ; call rbx
0xffffff800086eb7d : ror byte ptr [rbx - 0x397cb700], 1 ; adc byte ptr [rax + 0x39], cl ; ret
0xffffff800048933b : ror byte ptr [rbx - 0x76dff1bc], 1 ; ret 0xeac1
0xffffff800025f3b1 : ror byte ptr [rbx - 0x778703e3], 1 ; add bh, dh ; ret
0xffffff80004c4f3c : ror byte ptr [rbx - 0x7cb7fbb9], 1 ; ret
0xffffff800084548b : ror byte ptr [rbx], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800059c492 : ror byte ptr [rcx + 0x10eac1c2], 1 ; ret 0x8366
0xffffff80008eb5f3 : ror byte ptr [rcx + 0x1fa46605], 0 ; pop rbp ; ret
0xffffff8000b4582f : ror byte ptr [rcx + 0x21], 1 ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000311db2 : ror byte ptr [rcx + 0x21], cl ; ret 0xc2e9
0xffffff800075704b : ror byte ptr [rcx + 0x38778e05], 0 ; pop rbp ; ret
0xffffff800042360c : ror byte ptr [rcx + 0x39], 1 ; ret
0xffffff80005a6d67 : ror byte ptr [rcx + 0x3b491], cl ; add bh, bh ; ret 0x8b48
0xffffff8000528d56 : ror byte ptr [rcx + 0x3f9c1c1], 0x89 ; ret 0xe283
0xffffff800066f43c : ror byte ptr [rcx + 0x415b1443], 0x5e ; pop rbp ; ret
0xffffff80006f720b : ror byte ptr [rcx + 0x4408ebc1], 0x89 ; ret 0xd285
0xffffff800054d23f : ror byte ptr [rcx + 0x49c889c1], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xc148
0xffffff80003a8c3b : ror byte ptr [rcx + 0x5d300ff0], cl ; ret
0xffffff8000584f1a : ror byte ptr [rcx + 0x5dc35d07], 1 ; ret
0xffffff800079fe75 : ror byte ptr [rcx + 0x63488455], cl ; ret 0xc148
0xffffff800049a319 : ror byte ptr [rcx + 0x63], 1 ; je 0xffffff800049a2dc ; add byte ptr [rcx + rax - 0x12], cl ; jmp rsi
0xffffff800036d24c : ror byte ptr [rcx + 0x78f09505], 0 ; pop rbp ; ret
0xffffff800036a3ab : ror byte ptr [rcx + 0x791e8a05], 0 ; pop rbp ; ret
0xffffff80008d29ec : ror byte ptr [rcx + 0xf], 0x44 ; ret
0xffffff8000494d6d : ror byte ptr [rcx + 0xf], 1 ; ret 0x8949
0xffffff80005cb931 : ror byte ptr [rcx + 1], 0x46 ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003b1d63 : ror byte ptr [rcx + 1], cl ; ret 0xf41
0xffffff80003150c1 : ror byte ptr [rcx + rax - 0x16], 0x48 ; sub edx, eax ; jmp 0xffffff80003150f4
0xffffff80007ff9ec : ror byte ptr [rcx + rcx*4 + 1], 0x5d ; ret
0xffffff80006f01e4 : ror byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0xffffff8000534414 : ror byte ptr [rcx + rcx*4 - 0x11], 1 ; mov rsi, r14 ; call rcx
0xffffff800078dfe4 : ror byte ptr [rcx + rcx*4 - 0x16], 0xe8 ; ret
0xffffff80006636f8 : ror byte ptr [rcx + rcx*4 - 0x16], 0xe8 ; scasd eax, dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0x41ff
0xffffff80008f6522 : ror byte ptr [rcx + rcx*4 - 0x17], 0x4d ; mov ecx, esp ; call rbx
0xffffff80008f8fc9 : ror byte ptr [rcx + rcx*4 - 0x17], 1 ; call rbx
0xffffff8000829e89 : ror byte ptr [rcx + rcx*4 - 0x1a], 0x41 ; call rdi
0xffffff800065afc3 : ror byte ptr [rcx + rcx*4 - 0x1a], 0xe8 ; in al, 0x31 ; ret
0xffffff800065ec7d : ror byte ptr [rcx + rcx*4 - 0x1a], 0xe8 ; sub dh, ch ; ret 0x31ff
0xffffff80008b22d9 : ror byte ptr [rcx + rcx*4 - 0x1a], 1 ; call rax
0xffffff80008f7193 : ror byte ptr [rcx + rcx*4 - 0x1a], 1 ; mov ecx, r14d ; call rbx
0xffffff80008f7f5a : ror byte ptr [rcx + rcx*4 - 0x1a], 1 ; mov rcx, r14 ; call rbx
0xffffff800066b09c : ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; or esi, dword ptr [rcx] ; ret 0x48ff
0xffffff800066a369 : ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; ret 0x48ff
0xffffff800065ecfd : ror byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; stosb byte ptr [rdi], al ; hlt ; ret 0x41ff
0xffffff80008f9b36 : ror byte ptr [rcx + rcx*4 - 0x1e], 1 ; call rbx
0xffffff80005343c0 : ror byte ptr [rcx + rcx*4 - 0x1f], 1 ; call r8
0xffffff80008bcfbf : ror byte ptr [rcx + rcx*4 - 0x27], cl ; call r14
0xffffff80008f841c : ror byte ptr [rcx + rcx*4 - 0xa], 0x41 ; call rdi
0xffffff80008835a0 : ror byte ptr [rcx + rcx*4 - 0xa], 0x48 ; mov edx, ebx ; call rax
0xffffff80008838c3 : ror byte ptr [rcx + rcx*4 - 0xa], 0x4c ; mov edx, esp ; call rax
0xffffff800042c0a1 : ror byte ptr [rcx + rcx*4 - 0xa], 0x4d ; mov eax, edi ; call 0xffffff8000508349
0xffffff800065e995 : ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; add bh, bl ; ret 0x66ff
0xffffff8000301f0e : ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; cdq ; ret 0xfff8
0xffffff8000691e4e : ror byte ptr [rcx + rcx*4 - 0xa], 0xe8 ; pop rcx ; ret
0xffffff80006a249f : ror byte ptr [rcx + rcx*4 - 0xa], cl ; call 0xffffff80002c36c7
0xffffff80005548fe : ror byte ptr [rcx + rcx*4 - 0xa], cl ; call r12
0xffffff8000783ee5 : ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xb0a2
0xffffff80007e1f66 : ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xffaa
0xffffff8000781f5e : ror byte ptr [rcx + rcx*4 - 0xe], 0xe8 ; ret 0xffb0
0xffffff80008fa634 : ror byte ptr [rcx + rcx*4 - 0xf], 0x44 ; mov ecx, dword ptr [rbp - 0x44] ; call r10
0xffffff80008bd239 : ror byte ptr [rcx + rcx*4 - 0xf], cl ; call r15
0xffffff8000456f75 : ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xf3ba
0xffffff800065e910 : ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; xchg eax, edi ; clc ; ret 0x41ff
0xffffff800025c6c1 : ror byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80002d8926
0xffffff800087f091 : ror byte ptr [rcx + rcx*4 - 2], 0x4c ; mov edx, ebp ; call rax
0xffffff80008f5d1b : ror byte ptr [rcx + rcx*4 - 2], 0x4d ; mov ecx, ebp ; call rax
0xffffff800065ab6c : ror byte ptr [rcx + rcx*4 - 2], 0xe8 ; cmp esi, dword ptr [rsi] ; ret
0xffffff800065f1c9 : ror byte ptr [rcx + rcx*4 - 2], 0xe8 ; fsubp st(7) ; ret 0x31ff
0xffffff80008fb8c6 : ror byte ptr [rcx + rcx*4 - 2], 1 ; call rbx
0xffffff80008fb9b5 : ror byte ptr [rcx + rcx*4 - 2], 1 ; mov ecx, r12d ; call rbx
0xffffff800079b8a5 : ror byte ptr [rcx + rcx*4 - 2], cl ; call rcx
0xffffff800065f23d : ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; push -0x11 ; ret 0x41ff
0xffffff8000390a74 : ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; ret
0xffffff80006aaee5 : ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; ret 0xbe32
0xffffff800065b5d5 : ror byte ptr [rcx + rcx*4 - 6], 0xe8 ; shr byte ptr [rbx], cl ; ret
0xffffff800038a9b2 : ror byte ptr [rcx + rcx*4 - 7], 0xe9 ; ret
0xffffff80008bd65b : ror byte ptr [rcx + rcx*4 - 7], cl ; call r14
0xffffff800038826d : ror byte ptr [rcx + rcx*4 - 9], 0x41 ; call rdi
0xffffff80003b6344 : ror byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0xffffff800077a505 : ror byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret 0x162
0xffffff8000904512 : ror byte ptr [rcx + rcx*4 - 9], 1 ; mov rsi, r15 ; call rbx
0xffffff80006b0ee6 : ror byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80002d8927
0xffffff800051eafa : ror byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff80008aa157 : ror byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, rax ; call r12
0xffffff8000682f2f : ror byte ptr [rcx + rdi - 5], 0x72 ; ret 0x854d
0xffffff8000368e72 : ror byte ptr [rcx - 0x3976b709], 0xe8 ; ret
0xffffff8000870ab2 : ror byte ptr [rcx - 0x3d76b72a], 0x5d ; jmp r9
0xffffff8000708e1e : ror byte ptr [rcx - 0x75], 0x57 ; or byte ptr [rax - 9], cl ; ret 0xf07f
0xffffff800065f6b1 : ror byte ptr [rcx - 0x75], cl ; jl 0xffffff800065f6e2 ; adc byte ptr [rcx + 0x39], al ; ret 0x830f
0xffffff80007b6e9e : ror byte ptr [rcx - 0x76080810], cl ; ret
0xffffff80003a7243 : ror byte ptr [rcx - 0xd76bb22], 0xe8 ; ret 0x5468
0xffffff80003952af : ror byte ptr [rcx], 0xc8 ; pop rbp ; ret
0xffffff80004f9047 : ror byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003b26d4 : ror byte ptr [rcx], cl ; ret 0x5789
0xffffff80007ffb1b : ror byte ptr [rcx], cl ; ret 0x8349
0xffffff80003b25f1 : ror byte ptr [rcx], cl ; ret 0x8545
0xffffff80005841ea : ror byte ptr [rcx], cl ; ret 0xc984
0xffffff80007236e2 : ror byte ptr [rcx], cl ; ret 0xd389
0xffffff80003b1f6e : ror byte ptr [rcx], cl ; ret 0xdb85
0xffffff80004a0130 : ror byte ptr [rdi], 0x44 ; ret 0x374
0xffffff80003669db : ror byte ptr [rdi], 0x44 ; ret 0xc35d
0xffffff80004b15ef : ror byte ptr [rdi], 0x45 ; fdecstp ; ret
0xffffff8000457a37 : ror byte ptr [rdi], 0x48 ; ret
0xffffff8000846aac : ror byte ptr [rdi], 0x83 ; loopne 0xffffff8000846aa7 ; pop rbp ; ret
0xffffff8000846adc : ror byte ptr [rdi], 0x83 ; loopne 0xffffff8000846ad7 ; pop rbp ; ret
0xffffff80004ee1c8 : ror byte ptr [rdi], 0x83 ; ret
0xffffff80003a1b3c : ror byte ptr [rdi], 0x84 ; add qword ptr [rax], r8 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800027da9f : ror byte ptr [rdi], 0x84 ; mov byte ptr [rip - 0x7cbf0000], al ; call qword ptr [rdx]
0xffffff800026ef4f : ror byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff80005daf5b : ror byte ptr [rdi], 0x84 ; out dx, al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000880332 : ror byte ptr [rdi], 0x84 ; pop rsi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; ret 2
0xffffff80005ac4e8 : ror byte ptr [rdi], 0x84 ; pop rsp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002c8d81 : ror byte ptr [rdi], 0x84 ; ret
0xffffff800027f5d3 : ror byte ptr [rdi], 0x84 ; ret 0
0xffffff80005fbe57 : ror byte ptr [rdi], 0x84 ; ret 0x21
0xffffff8000851543 : ror byte ptr [rdi], 0x84 ; ret 0xb
0xffffff8000618875 : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0xffffff8000298719 : ror byte ptr [rdi], 0x84 ; ret 1
0xffffff800027c59e : ror byte ptr [rdi], 0x84 ; ret 2
0xffffff800068e229 : ror byte ptr [rdi], 0x84 ; ret 3
0xffffff8000321301 : ror byte ptr [rdi], 0x84 ; ret 4
0xffffff80008042b5 : ror byte ptr [rdi], 0x84 ; ret 7
0xffffff80004a3cb3 : ror byte ptr [rdi], 0x84 ; std ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005593db : ror byte ptr [rdi], 0x84 ; wait ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000827a5c : ror byte ptr [rdi], 0x85 ; add dword ptr [rax], eax ; add bh, bh ; ret
0xffffff800063d321 : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0xffffff80008261fc : ror byte ptr [rdi], 0x85 ; cli ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000575693 : ror byte ptr [rdi], 0x85 ; imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x63], cl ; ret
0xffffff800082748c : ror byte ptr [rdi], 0x85 ; lahf ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80004be723 : ror byte ptr [rdi], 0x85 ; lodsd eax, dword ptr [rsi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff8000827adc : ror byte ptr [rdi], 0x85 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000826c0d : ror byte ptr [rdi], 0x85 ; nop ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80007dfe6c : ror byte ptr [rdi], 0x85 ; push rcx ; add eax, 0x89440000 ; ret
0xffffff800026e8aa : ror byte ptr [rdi], 0x85 ; ret
0xffffff8000258519 : ror byte ptr [rdi], 0x85 ; ret 0
0xffffff80003a0b0c : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0xffffff8000765873 : ror byte ptr [rdi], 0x85 ; ret 2
0xffffff80004a0d7a : ror byte ptr [rdi], 0x85 ; ret 3
0xffffff80004bedc2 : ror byte ptr [rdi], 0x85 ; ret 7
0xffffff80008522b5 : ror byte ptr [rdi], 0x85 ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800082649d : ror byte ptr [rdi], 0x85 ; xchg eax, ebp ; add al, 0 ; add bh, bh ; ret
0xffffff800062aa3f : ror byte ptr [rdi], 0x88 ; ret
0xffffff800060bbd4 : ror byte ptr [rdi], 0x88 ; rol dword ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0xffffff8000298e32 : ror byte ptr [rdi], 0x8e ; add dword ptr [rax], 0x39480000 ; ret 0x8e0f
0xffffff8000329378 : ror byte ptr [rdi], 0x8e ; ret
0xffffff80004ce704 : ror byte ptr [rdi], 0x8e ; ret 0
0xffffff8000622ac3 : ror byte ptr [rdi], 0x8f ; ret
0xffffff800030bee9 : ror byte ptr [rdi], 0x8f ; ret 0xfffa
0xffffff8000891c69 : ror byte ptr [rdi], 0x94 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002d35a2 : ror byte ptr [rdi], 0x94 ; ret
0xffffff800040a049 : ror byte ptr [rdi], 0x94 ; ret 0x1c74
0xffffff8000441132 : ror byte ptr [rdi], 0x94 ; ret 0x23eb
0xffffff80005a9460 : ror byte ptr [rdi], 0x94 ; ret 0x394c
0xffffff8000440208 : ror byte ptr [rdi], 0x94 ; ret 0x4b8d
0xffffff80008dd519 : ror byte ptr [rdi], 0x94 ; ret 0x8548
0xffffff8000317147 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0xffffff800034c770 : ror byte ptr [rdi], 0x94 ; ret 0xa9
0xffffff800047b911 : ror byte ptr [rdi], 0x94 ; ret 0xc985
0xffffff80007c73e1 : ror byte ptr [rdi], 0x94 ; ret 0xca20
0xffffff80004a012a : ror byte ptr [rdi], 0x94 ; rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; ret 0x374
0xffffff8000683c83 : ror byte ptr [rdi], 0x94 ; rol dword ptr [rcx + rdi - 0x32], 0xf ; lahf ; ret 0xca08
0xffffff8000839738 : ror byte ptr [rdi], 0x94 ; ror dword ptr [rdi], 0x95 ; ret 0x8948
0xffffff800031267d : ror byte ptr [rdi], 0x94 ; ror dword ptr [rdi], 0x95 ; ret 0xc120
0xffffff800082fa2a : ror byte ptr [rdi], 0x95 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800044c080 : ror byte ptr [rdi], 0x95 ; ret
0xffffff80008cbc49 : ror byte ptr [rdi], 0x95 ; ret 0x3174
0xffffff800066debc : ror byte ptr [rdi], 0x95 ; ret 0x394c
0xffffff8000419ddf : ror byte ptr [rdi], 0x95 ; ret 0x450f
0xffffff80004fdefa : ror byte ptr [rdi], 0x95 ; ret 0x854d
0xffffff800044f0c6 : ror byte ptr [rdi], 0x95 ; ret 0x8d49
0xffffff800047da96 : ror byte ptr [rdi], 0x95 ; ret 0x8d8b
0xffffff80004cd8bc : ror byte ptr [rdi], 0x95 ; ret 0xc220
0xffffff80008dd279 : ror byte ptr [rdi], 0x95 ; ret 0xda20
0xffffff80003ccc43 : ror byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff800045acb1 : ror byte ptr [rdi], 0x95 ; ret 0xf983
0xffffff80006dcf33 : ror byte ptr [rdi], 0x96 ; ret 0x3944
0xffffff80002a9984 : ror byte ptr [rdi], 0x9d ; ret 0xbb83
0xffffff80006357f3 : ror byte ptr [rdi], 0x9f ; rol dword ptr [rcx + rdi - 0x10], 0xf ; lahf ; ret 0xca20
0xffffff80006359c6 : ror byte ptr [rdi], 0x9f ; rol dword ptr [rcx + rdi - 8], 0xf ; lahf ; ret 0xca20
0xffffff80007adc6a : ror byte ptr [rdi], 0x9f ; sal dh, 0x83 ; ret 0
0xffffff8000306095 : ror byte ptr [rdi], 0xb6 ; fdivr st(7) ; ret
0xffffff800034b926 : ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003c55c3 : ror byte ptr [rdi], 0xb6 ; ret
0xffffff800038c53b : ror byte ptr [rdi], 0xb6 ; ret 0x589
0xffffff80006d499a : ror byte ptr [rdi], 0xb6 ; rol byte ptr [rcx], 0xc0 ; pop rbp ; ret
0xffffff80002b7609 : ror byte ptr [rdi], 0xb6 ; rol cl, 0xe0 ; add al, 0x5d ; ret
0xffffff8000605018 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x890b
0xffffff800058ac22 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 1], 0x84 ; ret
0xffffff8000588260 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 1], 0x84 ; ret 0xf8
0xffffff800058ae45 : ror byte ptr [rdi], 0xb6 ; sar bh, 1 ; ret 0xdeb
0xffffff80005b6232 : ror byte ptr [rdi], 0xb6 ; sar byte ptr [rcx], cl ; ret 0x2674
0xffffff8000692fcf : ror byte ptr [rdi], 0xb6 ; sar byte ptr [rcx], cl ; ret 0x850f
0xffffff80005be094 : ror byte ptr [rdi], 0xb6 ; sar dword ptr [rcx], cl ; ret 0x1475
0xffffff80005be0a0 : ror byte ptr [rdi], 0xb6 ; sar dword ptr [rcx], cl ; ret 0x7874
0xffffff800084543d : ror byte ptr [rdi], 0xb7 ; fstp xword ptr [rcx] ; ret
0xffffff8000600325 : ror byte ptr [rdi], 0xb7 ; push rdx ; or bh, byte ptr [rcx] ; ret 0x2275
0xffffff8000802f9b : ror byte ptr [rdi], 0xb7 ; push rsp ; ret 0xb818
0xffffff800049f49a : ror byte ptr [rdi], 0xb7 ; ret 0x8318
0xffffff8000784dee : ror byte ptr [rdi], 0xbe ; xchg dh, cl ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0xffffff8000584f7f : ror byte ptr [rdi], 0xc8 ; mov dword ptr [rdi + 4], eax ; pop rbp ; ret
0xffffff8000584f65 : ror byte ptr [rdi], 0xc8 ; mov dword ptr [rdi + 8], eax ; pop rbp ; ret
0xffffff8000584f93 : ror byte ptr [rdi], 0xc8 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800071e1d5 : ror byte ptr [rdi], 1 ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff80005841f2 : ror byte ptr [rdi], 1 ; mov bh, 0xc2 ; pop rbp ; ret
0xffffff80007555ef : ror byte ptr [rdi], 1 ; ret 0x189
0xffffff800061b29f : ror byte ptr [rdi], 1 ; ret 0x3944
0xffffff80006240c2 : ror byte ptr [rdi], 1 ; ret 0x4189
0xffffff80007d1869 : ror byte ptr [rdi], 1 ; ret 0x4389
0xffffff80007cb8a7 : ror byte ptr [rdi], 1 ; ret 0x4689
0xffffff800062de97 : ror byte ptr [rdi], 1 ; ret 0x8189
0xffffff800061873e : ror byte ptr [rdi], 1 ; ret 0x8389
0xffffff80004d711c : ror byte ptr [rdi], 1 ; ret 0x8589
0xffffff8000343670 : ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff80003c5758 : ror byte ptr [rdi], 1 ; ret 0x8b48
0xffffff80006306ac : ror byte ptr [rdi], 1 ; ret 0xb78b
0xffffff800076ac95 : ror byte ptr [rdi], 1 ; ret 0xc085
0xffffff800050fc67 : ror byte ptr [rdi], 1 ; ret 0xc35d
0xffffff80003c5772 : ror byte ptr [rdi], 1 ; ret 0xd86b
0xffffff80007590b9 : ror byte ptr [rdi], 1 ; ret 0xf039
0xffffff80003b1d6a : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0xefe9
0xffffff8000319b47 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret 0xb60f
0xffffff800058a5ce : ror byte ptr [rdi], 1 ; xchg eax, esi ; ret 0xb70f
0xffffff8000648eea : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0xffffff800034ce9c : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xc4f6
0xffffff80002961b3 : ror byte ptr [rdi], cl ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff80003923e8
0xffffff800084c75f : ror byte ptr [rdi], cl ; mov byte ptr [rdx - 0x9000000], cl ; ret
0xffffff80003b1ef7 : ror byte ptr [rdi], cl ; ret
0xffffff8000472db6 : ror byte ptr [rdi], cl ; ret 0x11eb
0xffffff80002bccc6 : ror byte ptr [rdi], cl ; ret 0x4389
0xffffff80003b35cb : ror byte ptr [rdi], cl ; ret 0x589
0xffffff8000646187 : ror byte ptr [rdi], cl ; ret 0x8348
0xffffff8000643768 : ror byte ptr [rdi], cl ; ret 0x8789
0xffffff8000325f19 : ror byte ptr [rdi], cl ; ret 0xf641
0xffffff8000591b5a : ror byte ptr [rdi], cl ; sahf ; ret
0xffffff8000495a62 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002822a5 : ror byte ptr [rdi], cl ; test byte ptr [rbx - 0x77000000], dl ; ret 0xd2f7
0xffffff800083221b : ror byte ptr [rdi], cl ; test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80008478f2 : ror byte ptr [rdi], cl ; test dword ptr [rbx - 0xffffd9], edi ; ret
0xffffff800045adcb : ror byte ptr [rdi], cl ; test dword ptr [rdx + 0x29000000], esp ; ret
0xffffff80008486ab : ror byte ptr [rdi], cl ; test ecx, edi ; or al, byte ptr [rax] ; add bh, bh ; ret
0xffffff8000335a5b : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0xffffff80006c8aa5 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x394d
0xffffff800070a3b7 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0xffffff80005ec739 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0xffffff8000388e09 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xda20
0xffffff800061582f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf983
0xffffff800031643d : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xfeb
0xffffff80004a0750 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80002d3586 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff80007f1112 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3bb
0xffffff80003814c9 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff8000388e1a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc084
0xffffff800034aa66 : ror byte ptr [rdx - 0x1e7f81b8], 1 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf45
0xffffff8000252849 : ror byte ptr [rdx - 0x7f3577f1], 1 ; ret 0xfd0
0xffffff800029d639 : ror byte ptr [rdx - 0xb7febe], 1 ; ret 0xc188
0xffffff80006296c7 : ror byte ptr [rdx], 0xf ; ret
0xffffff80003e7a5c : ror byte ptr [rsi], 0xef ; dec dword ptr [rax - 0x77] ; ret
0xffffff800048933a : ror byte ptr gs:[rbx - 0x76dff1bc], 1 ; ret 0xeac1
0xffffff80004b06f5 : ror dword ptr [r15], 0x95 ; ret 0xb60f
0xffffff80004ad33d : ror dword ptr [r15], 1 ; xchg eax, ebp ; ret 0xb60f
0xffffff8000386899 : ror dword ptr [r8 - 0x7b], 1 ; ret 0x3874
0xffffff80004517b6 : ror dword ptr [r8 - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800040c864 : ror dword ptr [r8 - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800079d960 : ror dword ptr [rax + 0x63], 0x53 ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0xffffff8000486578 : ror dword ptr [rax + 0x63], 4 ; cdq ; add rax, rcx ; jmp rax
0xffffff80003b1d6d : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0xefe9
0xffffff80003b5cf6 : ror dword ptr [rax + 0x731ffb0d], 0 ; pop rbp ; ret
0xffffff800048f4ba : ror dword ptr [rax + 0xf], 0xaf ; ret
0xffffff8000348e88 : ror dword ptr [rax + 0xf], 1 ; ret
0xffffff800026dc4d : ror dword ptr [rax + 0xf], 1 ; ret 0x415b
0xffffff800046f3c7 : ror dword ptr [rax + 1], 1 ; ret 0x3b48
0xffffff80007044b6 : ror dword ptr [rax + 1], 1 ; ret 0x8548
0xffffff80005d12c4 : ror dword ptr [rax + 1], 1 ; ret 0x8949
0xffffff80007bf41b : ror dword ptr [rax + 1], 1 ; ret 0xe9c1
0xffffff80008359cc : ror dword ptr [rax + 1], 1 ; ret 0xfa83
0xffffff8000320d95 : ror dword ptr [rax + 1], cl ; ret
0xffffff8000b4b26b : ror dword ptr [rax + 3], 0x4d ; test al, 0x89 ; ret 0xe281
0xffffff8000271063 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0xffffff80003c1128 : ror dword ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax - 0x46] ; ret
0xffffff80003038ff : ror dword ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax - 0x47] ; ret
0xffffff800036b54f : ror dword ptr [rax - 0x3f], 0xeb ; add cl, byte ptr [rax + 0x21] ; ret
0xffffff80002fac89 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80002faca0
0xffffff80004d3182 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80004d3199
0xffffff80005089d0 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005089e7
0xffffff8000548099 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005480b0
0xffffff800054869b : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005486b2
0xffffff8000548c41 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff8000548c58
0xffffff800054900e : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff8000549025
0xffffff80005490b1 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005490c8
0xffffff800054959f : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005495b6
0xffffff80005498cf : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005498e6
0xffffff80005ae696 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80005ae6ad
0xffffff800062431e : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff8000624335
0xffffff8000651239 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff8000651250
0xffffff80006ff9b3 : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff80006ff9ca
0xffffff8000775bba : ror dword ptr [rax - 0x3f], cl ; jmp 0xffffff8000775bd1
0xffffff80007ea420 : ror dword ptr [rax - 0x3f], cl ; sti ; and byte ptr [rax + 0x21], cl ; ret
0xffffff80007bf625 : ror dword ptr [rax - 0x73], 0x15 ; ret
0xffffff80008226fd : ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cb4
0xffffff800081cd14 : ror dword ptr [rax - 0x73], 0x15 ; ret 0x1cfc
0xffffff80008e1045 : ror dword ptr [rax - 0x73], 0x3d ; xchg eax, esp ; ret 0x11
0xffffff800049ee9a : ror dword ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x77], 0x1c ; ret 0x4865
0xffffff800049f47d : ror dword ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x77], 0x3c ; ret 0x4865
0xffffff800049fc16 : ror dword ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x77], 0x3c ; ret 0xc031
0xffffff800049f496 : ror dword ptr [rax - 0x73], 4 ; ror byte ptr [rdi], 0xb7 ; ret 0x8318
0xffffff8000485895 : ror dword ptr [rax - 0x73], 5 ; ret
0xffffff80004be5db : ror dword ptr [rax - 0x74b7ff9f], 0x15 ; ret 0x6188
0xffffff8000854c4c : ror dword ptr [rax - 0x75], 0x42 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff80004803c5 : ror dword ptr [rax - 0x75], 0x43 ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800038c0a1 : ror dword ptr [rax - 0x75], 0x80 ; loopne 0xffffff800038c0b1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a2d81 : ror dword ptr [rax - 0x75], 0x80 ; loopne 0xffffff80003a2d91 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000799f38 : ror dword ptr [rax - 0x75], 1 ; jne 0xffffff8000799eda ; call rax
0xffffff8000743e13 : ror dword ptr [rax - 0x75], 1 ; sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff80004a23e4 : ror dword ptr [rax - 0x75], 4 ; ret 0x4865
0xffffff800078c722 : ror dword ptr [rax - 0x75], 7 ; mov rax, qword ptr [rax + 8] ; pop rbp ; ret
0xffffff800078c982 : ror dword ptr [rax - 0x75], 7 ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff8000766b79 : ror dword ptr [rax - 0x77], 0x47 ; jo 0xffffff8000766b97 ; mov dh, 0xc1 ; pop rbp ; ret
0xffffff800057f22a : ror dword ptr [rax - 0x77], 0x4f ; js 0xffffff800057f293 ; ret
0xffffff80005815ba : ror dword ptr [rax - 0x77], 0x4f ; pop rbp ; ret
0xffffff800039f1ef : ror dword ptr [rax - 0x77], 0xa ; pop rbp ; ret
0xffffff800067a808 : ror dword ptr [rax - 0x77], 0xc8 ; pop rbp ; ret
0xffffff80005fdb3b : ror dword ptr [rax - 0x77], 0xd ; in eax, dx ; ret
0xffffff8000807edc : ror dword ptr [rax - 0x77], 0xf ; pop rbp ; ret
0xffffff80005197be : ror dword ptr [rax - 0x77], 0xf3 ; xor r14d, r14d ; jmp rcx
0xffffff8000399749 : ror dword ptr [rax - 0x77], 1 ; enter 0xf48, 0x47 ; ret 0x470f
0xffffff8000698a3c : ror dword ptr [rax - 0x77], 1 ; push rbx ; xor byte ptr [rax + 0x39], cl ; ret 0x1676
0xffffff8000769fd4 : ror dword ptr [rax - 0x77], 1 ; ret
0xffffff8000b4acee : ror dword ptr [rax - 0x77], 1 ; ret 0x8148
0xffffff8000452adf : ror dword ptr [rax - 0x77], 1 ; ret 0xb60f
0xffffff80002638dc : ror dword ptr [rax - 0x77], 1 ; ret 0xee75
0xffffff80004e7588 : ror dword ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8d4c
0xffffff800044c6b8 : ror dword ptr [rax - 0x77], cl ; ret 0x1f0f
0xffffff80003c9c3f : ror dword ptr [rax - 0x77], cl ; ret 0xe875
0xffffff800038689a : ror dword ptr [rax - 0x7b], 1 ; ret 0x3874
0xffffff80007b395a : ror dword ptr [rax - 0x7b], 1 ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0xffffff8000795cce : ror dword ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800050e96c : ror dword ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; jmp r8
0xffffff80004517b7 : ror dword ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800040c865 : ror dword ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800080d8cb : ror dword ptr [rax - 0x7d], 0xc6 ; adc dh, dh ; ret
0xffffff800080d8ed : ror dword ptr [rax - 0x7d], 0xc6 ; add al, 0xf6 ; ret
0xffffff800080d8fc : ror dword ptr [rax - 0x7d], 0xc6 ; add dh, dh ; ret
0xffffff800080d8df : ror dword ptr [rax - 0x7d], 0xc6 ; or dh, dh ; ret
0xffffff8000821d66 : ror dword ptr [rax - 0x7d], 0xf9 ; adc byte ptr [rbp - 0x1d], dh ; pop rbp ; ret
0xffffff80004f3ce8 : ror dword ptr [rax - 0x7d], 0xf9 ; adc dword ptr [rbp - 0x1f], esi ; pop rbp ; ret
0xffffff80007a159b : ror dword ptr [rax - 0x7d], 0xfe ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0xffffff800054d2a4 : ror dword ptr [rax - 0x7d], 1 ; ret 0x31fe
0xffffff800038bac6 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4104
0xffffff80006c7f4e : ror dword ptr [rax - 0x7d], cl ; ret
0xffffff800036bb3b : ror dword ptr [rax - 1], 1 ; ret
0xffffff80005d1753 : ror dword ptr [rax - 1], 1 ; ret 0x854d
0xffffff8000378fee : ror dword ptr [rax - 1], 1 ; ret 0xc089
0xffffff800039f733 : ror dword ptr [rax], 0x48 ; cmp eax, edx ; jb 0xffffff800039f718 ; pop rbp ; ret
0xffffff80007f4bb7 : ror dword ptr [rax], 0x48 ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff8000485ca2 : ror dword ptr [rax], 0x83 ; ret
0xffffff800066b5a9 : ror dword ptr [rax], 0x83 ; ret 0x83f8
0xffffff800059d6ef : ror dword ptr [rax], 0xc1 ; movzx eax, cl ; pop rbp ; ret
0xffffff80003d73aa : ror dword ptr [rax], 0xf ; ret
0xffffff80006c6763 : ror dword ptr [rax], 0xf ; ret 0x508d
0xffffff80002762d9 : ror dword ptr [rax], 0xff ; ret 0xf175
0xffffff8000873e43 : ror dword ptr [rax], cl ; ret
0xffffff8000b48c02 : ror dword ptr [rbp + 0x21], cl ; ret
0xffffff8000604f1d : ror dword ptr [rbp + 0x62], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000b49e20 : ror dword ptr [rbp - 0x3576aef4], 0x21 ; ret 0xc131
0xffffff80008b2d68 : ror dword ptr [rbp - 0x77], 0xc8 ; pop rbp ; jmp rax
0xffffff80008bd695 : ror dword ptr [rbp - 0x77], 1 ; clc ; call r14
0xffffff800090a724 : ror dword ptr [rbx + 0x22d19905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000907c64 : ror dword ptr [rbx + 0x22fc5905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000907b9b : ror dword ptr [rbx + 0x22fd2205], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000907ad4 : ror dword ptr [rbx + 0x22fde905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000905b9e : ror dword ptr [rbx + 0x231d1f05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000905a87 : ror dword ptr [rbx + 0x231e3605], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000905994 : ror dword ptr [rbx + 0x231f2905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009058b4 : ror dword ptr [rbx + 0x23200905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009034b4 : ror dword ptr [rbx + 0x23440905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009033f4 : ror dword ptr [rbx + 0x2344c905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009027c4 : ror dword ptr [rbx + 0x2350f905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000902704 : ror dword ptr [rbx + 0x2351b905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009018f8 : ror dword ptr [rbx + 0x235fc505], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000901835 : ror dword ptr [rbx + 0x23608805], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff800090176e : ror dword ptr [rbx + 0x23614f05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009015b4 : ror dword ptr [rbx + 0x23630905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009014b4 : ror dword ptr [rbx + 0x23640905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900be5 : ror dword ptr [rbx + 0x236cd805], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900b1b : ror dword ptr [rbx + 0x236da205], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900a44 : ror dword ptr [rbx + 0x236e7905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900984 : ror dword ptr [rbx + 0x236f3905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009002b5 : ror dword ptr [rbx + 0x23760805], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80009001eb : ror dword ptr [rbx + 0x2376d205], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900114 : ror dword ptr [rbx + 0x2377a905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff8000900054 : ror dword ptr [rbx + 0x23786905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008fcf9e : ror dword ptr [rbx + 0x23a91f05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5ca5 : ror dword ptr [rbx + 0x241c1805], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5887 : ror dword ptr [rbx + 0x24203605], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5714 : ror dword ptr [rbx + 0x2421a905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5677 : ror dword ptr [rbx + 0x24224605], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f55a4 : ror dword ptr [rbx + 0x24231905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f54d4 : ror dword ptr [rbx + 0x2423e905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f53f4 : ror dword ptr [rbx + 0x2424c905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5328 : ror dword ptr [rbx + 0x24259505], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5214 : ror dword ptr [rbx + 0x2426a905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5124 : ror dword ptr [rbx + 0x24279905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f5024 : ror dword ptr [rbx + 0x24289905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2d77 : ror dword ptr [rbx + 0x244b4605], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2b24 : ror dword ptr [rbx + 0x244d9905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2a71 : ror dword ptr [rbx + 0x244e4c05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f29c1 : ror dword ptr [rbx + 0x244efc05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2904 : ror dword ptr [rbx + 0x244fb905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2741 : ror dword ptr [rbx + 0x24517c05], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80008f2664 : ror dword ptr [rbx + 0x24525905], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff800038c0e1 : ror dword ptr [rbx + 0xa83880], 0 ; pop rbp ; ret
0xffffff800038c101 : ror dword ptr [rbx + 0xa83c80], 0 ; pop rbp ; ret
0xffffff800038c121 : ror dword ptr [rbx + 0xa84080], 0 ; pop rbp ; ret
0xffffff80003a31a1 : ror dword ptr [rbx + 0xa84c80], 0 ; pop rbp ; ret
0xffffff80005bfd4b : ror dword ptr [rbx - 0x76b7002f], 1 ; ret
0xffffff8000667579 : ror dword ptr [rbx - 0xbf4b], 0xff ; jmp rcx
0xffffff800085790b : ror dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800025c20d : ror dword ptr [rcx + 0x1d8d48ca], 0x59 ; ret
0xffffff800062eaef : ror dword ptr [rcx + 0x21497], 1 ; add bh, dh ; ret 0
0xffffff80007ce12b : ror dword ptr [rcx + 0x24887], 0 ; pop rbp ; ret
0xffffff8000b496e6 : ror dword ptr [rcx + 0x29], cl ; ret
0xffffff80007ce156 : ror dword ptr [rcx + 0x3ac87], 0 ; pop rbp ; ret
0xffffff80008323ae : ror dword ptr [rcx + 0x4111ebd0], 0xff ; ret
0xffffff800072bf3c : ror dword ptr [rcx + 0x5bbf72f0], 0x5d ; ret
0xffffff8000845483 : ror dword ptr [rcx + 0x63], cl ; ret
0xffffff80003bc07e : ror dword ptr [rcx + 0xfd989c6], 1 ; xor eax, dword ptr [rcx - 0x77] ; ret
0xffffff80007e27f2 : ror dword ptr [rcx + rax*2], 0x83 ; ret 0x75fe
0xffffff800090a5fe : ror dword ptr [rcx + rcx*4 - 0x19], 1 ; mov esi, r13d ; call rcx
0xffffff800089285b : ror dword ptr [rcx + rcx*4 - 0x37], 0x5d ; jmp rax
0xffffff8000635c44 : ror dword ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xffffff8000635c5e
0xffffff8000302374 : ror dword ptr [rcx + rcx*4 - 1], 0x48 ; mov edx, dword ptr [rbp - 0x30] ; jmp rcx
0xffffff80008a07da : ror dword ptr [rcx + rdi + 0xd], 0x26 ; ret 0x18
0xffffff800038b1c7 : ror dword ptr [rcx + rdi - 0x2f], 1 ; je 0xffffff800038b1d8 ; xor eax, eax ; pop rbp ; ret
0xffffff800078efb1 : ror dword ptr [rcx - 0x3b7cb738], 0x10 ; pop rbp ; ret
0xffffff80007a7fa3 : ror dword ptr [rcx - 0x3b7cb738], 8 ; pop rbx ; pop rbp ; ret
0xffffff80004cf137 : ror dword ptr [rcx - 0x3fcea3b1], 0x5d ; ret
0xffffff8000570943 : ror dword ptr [rcx - 0x3fcebbb9], 0x5d ; ret
0xffffff8000897079 : ror dword ptr [rcx - 0x4ffb3eac], 1 ; pop rbp ; ret
0xffffff800060e54e : ror dword ptr [rcx - 0x72b367bb], 0x35 ; push rdi ; ret
0xffffff800062609b : ror dword ptr [rcx - 0x76b7fffd], 1 ; ret
0xffffff80007259fe : ror dword ptr [rcx - 0x76be4bab], 1 ; ret
0xffffff80007f186a : ror dword ptr [rcx - 0x77], 0xd6 ; jmp rcx
0xffffff80006e17a2 : ror dword ptr [rcx - 0x77], 1 ; ret 0x8b41
0xffffff8000b490d4 : ror dword ptr [rcx - 0x77], cl ; ret 0x8149
0xffffff8000793f1d : ror dword ptr [rcx - 0x7cb7ebad], 1 ; ret
0xffffff80007d8528 : ror dword ptr [rcx - 0x7d], 0xc7 ; and byte ptr [rax - 0x7d], cl ; ret
0xffffff800076fa78 : ror dword ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000373d52 : ror dword ptr [rcx], cl ; ret
0xffffff800039a7e8 : ror dword ptr [rdi], 0x44 ; ret 0xc3c9
0xffffff800039a7bb : ror dword ptr [rdi], 0x44 ; ret 0xc95f
0xffffff800083ebd7 : ror dword ptr [rdi], 0x47 ; enter -0x3777, 0x5b ; pop rbp ; ret
0xffffff80005d867a : ror dword ptr [rdi], 0x47 ; rcr dword ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800065c395 : ror dword ptr [rdi], 0x83 ; loope 0xffffff800065c392 ; add eax, ecx ; pop rbp ; ret
0xffffff80007d87ba : ror dword ptr [rdi], 0x83 ; ret 0xfffe
0xffffff80002d2693 : ror dword ptr [rdi], 0x84 ; ret
0xffffff8000576673 : ror dword ptr [rdi], 0x84 ; ret 0
0xffffff800037d06e : ror dword ptr [rdi], 0x84 ; ret 2
0xffffff8000317141 : ror dword ptr [rdi], 0x93 ; ret
0xffffff8000561d9d : ror dword ptr [rdi], 0x94 ; ret
0xffffff800069bcdb : ror dword ptr [rdi], 0x94 ; ret 0xc184
0xffffff800083973b : ror dword ptr [rdi], 0x95 ; ret 0x8948
0xffffff80004b06f6 : ror dword ptr [rdi], 0x95 ; ret 0xb60f
0xffffff8000312680 : ror dword ptr [rdi], 0x95 ; ret 0xc120
0xffffff80006dcefb : ror dword ptr [rdi], 0x96 ; ret 0x3944
0xffffff800084458e : ror dword ptr [rdi], 0x9d ; ret 0xb60f
0xffffff8000437b20 : ror dword ptr [rdi], 0xb6 ; fidivr dword ptr [rcx] ; ret
0xffffff8000366d20 : ror dword ptr [rdi], 0xb6 ; fstp xword ptr [rcx] ; ret
0xffffff80008ec0d5 : ror dword ptr [rdi], 0xb6 ; ret
0xffffff8000799f35 : ror dword ptr [rdi], 0xb6 ; ror dword ptr [rax - 0x75], 1 ; jne 0xffffff8000799edd ; call rax
0xffffff8000588ae0 : ror dword ptr [rdi], 0xb7 ; ret 0xf883
0xffffff80002a3926 : ror dword ptr [rdi], 0xbe ; rol byte ptr [rcx], cl ; ret 0xd269
0xffffff8000841932 : ror dword ptr [rdi], 1 ; ret
0xffffff80007d0d41 : ror dword ptr [rdi], 1 ; ret 0xf41
0xffffff80006598b0 : ror dword ptr [rdi], 1 ; test ebp, esp ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004ad33e : ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0xb60f
0xffffff80006ddcff : ror dword ptr [rdi], 1 ; xchg eax, ebx ; ret 0x3944
0xffffff800058ec22 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0xffffff80006f7622 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0x9589
0xffffff80002960e1 : ror dword ptr [rdi], cl ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xffffff80003923e8
0xffffff80004c1dca : ror dword ptr [rdi], cl ; fmul dword ptr [rax + 0xf] ; ret 0x8948
0xffffff800071a3aa : ror dword ptr [rdi], cl ; mov dh, 0x17 ; inc rdx ; jmp 0xffffff800071a3c6
0xffffff8000385f90 : ror dword ptr [rdx], 0x4d ; ret
0xffffff80004531a5 : ror dword ptr [rdx], 0x89 ; ret
0xffffff80003571b5 : ror dword ptr [rsi], 0x29 ; ret
0xffffff800066d076 : ror dword ptr [rsi], 1 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff800076fa77 : ror dword ptr gs:[rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039a658 : ror edx, cl ; xor edx, eax ; mov dword ptr [rsi], edx ; pop rbp ; ret
0xffffff80006986c9 : ror esp, cl ; ret 0x48ff
0xffffff800084458d : ror qword ptr [rdi], 0x9d ; ret 0xb60f
0xffffff8000742a56 : sahf ; adc dword ptr [rdx], edi ; add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff800086ed5e : sahf ; adc eax, dword ptr [rcx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80008dec98 : sahf ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800026e193 : sahf ; add byte ptr [rax], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002d359c : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80006bd825 : sahf ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0xffffff80005df5da : sahf ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0xffffff80004f0f89 : sahf ; add byte ptr [rbp - 0x77], cl ; jmp 0xffffff802a11cc83
0xffffff80004c87c7 : sahf ; add byte ptr [rcx], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000884dfd : sahf ; add ebp, dword ptr [rbx] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a09f9 : sahf ; add rax, rsi ; jmp rax
0xffffff8000597d57 : sahf ; add rbx, rsi ; jmp rbx
0xffffff800089ee4e : sahf ; and eax, 0x8948fff7 ; ret
0xffffff80008e54fd : sahf ; cld ; and al, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000625369 : sahf ; cld ; dec dword ptr [rax + 0x63] ; ret
0xffffff800086ca39 : sahf ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030c73e : sahf ; cmc ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007fd01e : sahf ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800074b7f6 : sahf ; cmp dword ptr cs:[rax], eax ; pop rbp ; ret
0xffffff80008f2470 : sahf ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081090e : sahf ; fsub dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff80003b845f : sahf ; imul eax, dword ptr [rax], 0xc889ec75 ; pop rbp ; ret
0xffffff80007668a1 : sahf ; inc dword ptr [rbx] ; mov rdi, r15 ; call 0xffffff80003923e9
0xffffff80003950c0 : sahf ; jbe 0xffffff80003950c7 ; pop rbp ; ret
0xffffff8000676cbe : sahf ; jbe 0xffffff8000676cc6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065fcae : sahf ; jmp 0xffffff800065fc76
0xffffff8000720dad : sahf ; jmp qword ptr [rsi - 0x39]
0xffffff8000700d6b : sahf ; loope 0xffffff8000700d73 ; xor eax, eax ; pop rbp ; ret
0xffffff800042e7ae : sahf ; mov ebx, 0x89480034 ; ret
0xffffff8000700cdb : sahf ; mov ecx, 0x58948ff ; ret
0xffffff80008b59fd : sahf ; mul dword ptr [rdi] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003eab51 : sahf ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000369729 : sahf ; nop ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003696fd : sahf ; nop ; add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff8000291a97 : sahf ; nop ; or byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005b20a1 : sahf ; pop rbp ; ret
0xffffff80007cc64b : sahf ; pop rdi ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ret
0xffffff800061a83e : sahf ; push rcx ; add byte ptr [rcx], dh ; leave ; movzx eax, cl ; pop rbp ; ret
0xffffff800037ae5e : sahf ; ret
0xffffff800088a81e : sahf ; ret 0x18
0xffffff800069797f : sahf ; ret 0x31
0xffffff8000722fb6 : sahf ; ret 0x40
0xffffff80007691be : sahf ; ret 0x4aff
0xffffff800050b356 : sahf ; ret 0x5c
0xffffff80002efc5e : sahf ; ret 0x73
0xffffff80007c9ee6 : sahf ; ret 0xc208
0xffffff80002d46c0 : sahf ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003b845e : sahf ; sahf ; imul eax, dword ptr [rax], 0xc889ec75 ; pop rbp ; ret
0xffffff8000291b1e : sahf ; sbb byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008637fd : sahf ; sbb dword ptr [rip + 0x415b1000], ebp ; pop rsi ; pop rbp ; ret
0xffffff80008d2c0b : sahf ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089cfe8 : sahf ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff80007b3ff6 : sahf ; test byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082ebfd : sahf ; xor byte ptr gs:[rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007484d1 : sahf ; xor eax, dword ptr [rax] ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff800067ff6c : sal ah, 0xff ; call rsi
0xffffff80008c4367 : sal ah, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000382e0d : sal al, 0xf ; mov cl, 0xd ; ret 0x77ae
0xffffff80003669d6 : sal bh, 1 ; fadd dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x44 ; ret 0xc35d
0xffffff800027c39a : sal bh, 1 ; ret 0
0xffffff800046baa9 : sal bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002fa1aa : sal bh, cl ; fimul dword ptr [rax + 0x63] ; ret
0xffffff80002fd259 : sal bh, cl ; idiv byte ptr [rcx] ; ret
0xffffff80004c50d2 : sal bh, cl ; idiv edi ; ret
0xffffff800084b722 : sal bh, cl ; ja 0xffffff800084b751 ; mov eax, edx ; pop rbp ; ret
0xffffff80007ffb19 : sal bh, cl ; ror byte ptr [rcx], cl ; ret 0x8349
0xffffff80008435bd : sal bl, 0x66 ; mov edx, r8d ; jmp 0xffffff80008435cd
0xffffff8000547557 : sal byte ptr [rax + 0x48], 0x83 ; ret
0xffffff80008b4092 : sal byte ptr [rax + 0x48], 0xff ; ret
0xffffff8000369db9 : sal byte ptr [rax + 0x48], cl ; mov dword ptr [rsi + rdx + 0x60], ecx ; pop rbp ; ret
0xffffff80003c8ddc : sal byte ptr [rax + 0x49], 0xff ; ret 0x8944
0xffffff800088d8af : sal byte ptr [rax + 0x5e415bff], 0x5d ; ret
0xffffff80004838bf : sal byte ptr [rax + rax*2 + 0x48], 0xff ; ret
0xffffff800065eb55 : sal byte ptr [rax + rax], cl ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80003e20f1 : sal byte ptr [rax + rbp + 0x48], 0xff ; ret 0x8348
0xffffff80007d57cc : sal byte ptr [rax + rbx*2 + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff80007aafad : sal byte ptr [rax + rcx + 0x44], 0x89 ; out 0x4c, eax ; mov esi, ebp ; call rax
0xffffff800061b684 : sal byte ptr [rax + rcx + 0x48], 0x89 ; fild word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff800075deb6 : sal byte ptr [rax + rcx + 0x48], 0x89 ; fisttp word ptr [rcx + rcx*4 - 0x12] ; call rax
0xffffff80005225cb : sal byte ptr [rax + rcx + 0x48], 0x89 ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff80003d0578 : sal byte ptr [rax + rcx + 0x48], 0x89 ; ret
0xffffff800048fcdf : sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0xffffff80002810b7 : sal byte ptr [rax + rcx - 0x75], 0x40 ; xor byte ptr [rax + 0x39], cl ; ret
0xffffff80007d3f82 : sal byte ptr [rax + rcx*2 + 0x31], 0xf6 ; mov rdi, r12 ; call rax
0xffffff8000613c1f : sal byte ptr [rax + rcx*2 + 0x48], 0x89 ; ret
0xffffff80002ead67 : sal byte ptr [rax + rdi + 0x48], 0xff ; ret 0x8148
0xffffff80006f29a2 : sal byte ptr [rax + rdx + 0x48], 0x89 ; ret
0xffffff8000812759 : sal byte ptr [rax + rdx + 0x48], 0xff ; ret
0xffffff80008cf4c3 : sal byte ptr [rax + rdx + 0x4c], 0x39 ; xor byte ptr [rbp + rdi - 1], dh ; ret
0xffffff800087776e : sal byte ptr [rax + rsi + 0x48], 0x81 ; ret 0x238
0xffffff80002f2fba : sal byte ptr [rax], cl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008275ac : sal byte ptr [rbp + 0x15], 0xff ; ret
0xffffff800082750c : sal byte ptr [rbp + 0x23], 0xff ; ret
0xffffff800055edfc : sal byte ptr [rbp + 0x25], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004056b0 : sal byte ptr [rbp + 0x27], 0x8b ; test esp, ebp ; idiv edi ; call rcx
0xffffff80008273ac : sal byte ptr [rbp + 0x27], 0xff ; ret
0xffffff800082816d : sal byte ptr [rbp + 0x28], 0xff ; ret
0xffffff80003ac3eb : sal byte ptr [rbp + 0x2f], 0x4c ; mov edi, esi ; mov rsi, r13 ; call rbx
0xffffff80003c5da8 : sal byte ptr [rbp + 0x2f], 0x5d ; ret
0xffffff80008266cc : sal byte ptr [rbp + 0x31], 0xff ; ret
0xffffff80008265bc : sal byte ptr [rbp + 0x37], 0xff ; ret
0xffffff800082679c : sal byte ptr [rbp + 0x43], 0xff ; ret
0xffffff80007191da : sal byte ptr [rbp + 0x48], 0x89 ; ret 0xc748
0xffffff80008262cb : sal byte ptr [rbp + 0x54], 0xff ; ret
0xffffff800082782c : sal byte ptr [rbp + 0x5a], 0xff ; ret
0xffffff80007fd799 : sal byte ptr [rbp + 0x6d], 0xe9 ; ret 1
0xffffff80008d6452 : sal byte ptr [rbp + 0x78], 0xbb ; ret 2
0xffffff800082793c : sal byte ptr [rbp + 0x78], 0xff ; ret
0xffffff800082aecd : sal byte ptr [rbp + 0xa], 0xff ; ret
0xffffff80002fef81 : sal byte ptr [rbp + 0xc], 0xff ; ret
0xffffff8000323279 : sal byte ptr [rbp + 0xe], 0x31 ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff800059d820 : sal byte ptr [rbp + 0xf], cl ; xor eax, eax ; pop rbp ; ret
0xffffff800036636d : sal byte ptr [rbp + 2], 0x5d ; ret
0xffffff8000897361 : sal byte ptr [rbp + 4], 0x48 ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80004ed67c : sal byte ptr [rbp + 4], cl ; xor eax, eax ; pop rbp ; ret
0xffffff80003999f8 : sal byte ptr [rbp + 6], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000765cee : sal byte ptr [rbp + 7], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000392350 : sal byte ptr [rbp + 7], 0xf0 ; cmpxchg byte ptr [rdi], cl ; jne 0xffffff8000392363 ; ret
0xffffff80003e6dbd : sal byte ptr [rbp + 8], 0x4c ; mov edi, esp ; call 0xffffff8000393048
0xffffff8000722896 : sal byte ptr [rbp + 8], 0xf ; mov dh, 0xd2 ; inc rdx ; jmp 0xffffff80007228b2
0xffffff80005e2ed4 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0xffffff800027fe57 : sal byte ptr [rbp + rax + 0x5b], 0x41 ; pop rsi ; pop rbp ; ret
0xffffff80007f30ba : sal byte ptr [rbp + rax - 0x75], cl ; insb byte ptr [rdi], dx ; mov dword ptr [rdx], eax ; pop rbp ; ret
0xffffff8000365d5c : sal byte ptr [rbp + rbx + 0x41], 0x89 ; sub cl, r13b ; ret
0xffffff800077a230 : sal byte ptr [rbp + rbx + 0x4c], 0x89 ; sub byte ptr [rax - 0x77], cl ; ret
0xffffff8000327626 : sal byte ptr [rbp + rcx + 0x48], 0x8b ; push rax ; adc dh, dh ; ret 0xf01
0xffffff80005be956 : sal byte ptr [rbp + rcx + 0x48], 0x8b ; push rax ; and dh, dh ; ret 0xf01
0xffffff800057f2f6 : sal byte ptr [rbp + rcx + 0x48], 0x8b ; push rax ; js 0xffffff800057f2fc ; ret 0xf01
0xffffff80005b1246 : sal byte ptr [rbp + rcx + 0x48], 0x8b ; push rax ; sub dh, dh ; ret 0xf01
0xffffff80005c3d48 : sal byte ptr [rbp + rcx*2 + 0x31], 0xf6 ; mov rdi, r12 ; call rax
0xffffff80005c3218 : sal byte ptr [rbp + rdx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff800084e01a : sal byte ptr [rbp + rsi + 0x48], 0xff ; ret 0xee75
0xffffff800059f75d : sal byte ptr [rbp - 0x10], 0xeb ; add edi, edi ; push rsp ; pop rbp ; ret
0xffffff80002a1d31 : sal byte ptr [rbp - 0x14], cl ; jmp 0xffffff80002a1d6e
0xffffff8000811bd4 : sal byte ptr [rbp - 0x17], 0x5d ; ret
0xffffff8000269f95 : sal byte ptr [rbp - 0x18], 1 ; pop rbp ; ret
0xffffff800082e729 : sal byte ptr [rbp - 0x1c], 0x24 ; add dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff80004c5f59 : sal byte ptr [rbp - 0x1c], cl ; pop rbp ; ret
0xffffff80008331c4 : sal byte ptr [rbp - 0x27], 0x5d ; ret
0xffffff80004b3587 : sal byte ptr [rbp - 0x2a], cl ; pop rbp ; ret
0xffffff80006d061d : sal byte ptr [rbp - 0x30], cl ; mov eax, r8d ; pop rbp ; ret
0xffffff800072bfd7 : sal byte ptr [rbp - 0x3a], cl ; mov eax, r8d ; pop rbp ; ret
0xffffff8000511b8e : sal byte ptr [rbp - 0x3e], 0x5d ; ret
0xffffff80008323ac : sal byte ptr [rbp - 0x3f], 0x89 ; shr bl, 1 ; adc dword ptr [rcx - 1], eax ; ret
0xffffff8000687eff : sal byte ptr [rbp - 0x42], 0x5d ; ret
0xffffff800076e9c1 : sal byte ptr [rbp - 0x44], 0x4c ; mov edi, esi ; call 0xffffff8000392a49
0xffffff800049ca53 : sal byte ptr [rbp - 0x46], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005bf775 : sal byte ptr [rbp - 0x48], 0x5d ; ret
0xffffff800036682b : sal byte ptr [rbp - 0x4e], 0x5d ; ret
0xffffff80004acaaf : sal byte ptr [rbp - 0x52], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b1079 : sal byte ptr [rbp - 0x5c], 0x5d ; ret
0xffffff80005b209f : sal byte ptr [rbp - 0x62], 0x5d ; ret
0xffffff80005e4d63 : sal byte ptr [rbp - 0x66], 0xc6 ; adc dword ptr [r9], r8d ; pop rbp ; ret
0xffffff800057d543 : sal byte ptr [rbp - 0x7d], 0x3d ; outsd dx, dword ptr [rsi] ; ret 0x4e
0xffffff80006e1868 : sal byte ptr [rbp - 0xb], cl ; mov qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff80005f57ea : sal byte ptr [rbp - 0xd], 0x5d ; ret
0xffffff80005bc45a : sal byte ptr [rbp - 0xd], 0xb8 ; sub eax, 0x5d000000 ; ret
0xffffff80007b88ea : sal byte ptr [rbp - 0xd], 0xeb ; add ecx, dword ptr [rax - 0x77] ; ret
0xffffff80008babbb : sal byte ptr [rbp - 0xe], 0xb8 ; ret 2
0xffffff80008aadfb : sal byte ptr [rbp - 0xe], 0xbb ; ret 2
0xffffff80008bf3bb : sal byte ptr [rbp - 0xe], 0xe9 ; ret
0xffffff800081b49c : sal byte ptr [rbp - 0xe], 0xe9 ; ret 0
0xffffff80008b711c : sal byte ptr [rbp - 0xe], 0xeb ; ret
0xffffff8000366aeb : sal byte ptr [rbp - 0xe], cl ; mov rax, rdi ; pop rbp ; ret
0xffffff800044ebdc : sal byte ptr [rbp - 0xf], 0x5d ; ret
0xffffff800035c82c : sal byte ptr [rbx + 7], 1 ; mov eax, 4 ; pop rbp ; ret
0xffffff800075e496 : sal byte ptr [rbx + rax + 0x48], cl ; mov dword ptr [rdx], ecx ; pop rbp ; ret
0xffffff80003a21d6 : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff80003a2241 ; ret
0xffffff80003a2652 : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff80003a26bd ; ret
0xffffff80003a28f9 : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff80003a2964 ; ret
0xffffff80003a2929 : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff80003a2994 ; ret
0xffffff80003a2d52 : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff80003a2dbd ; ret
0xffffff800049d09d : sal byte ptr [rbx + rax + 0x5d], 0xff ; loopne 0xffffff800049d108 ; ret
0xffffff80005cb46b : sal byte ptr [rbx + rax - 0x3a], 2 ; add dword ptr [rax - 1], ecx ; ret 0xc6ff
0xffffff80003a3ddc : sal byte ptr [rbx + rax - 0x77], 0x78 ; pop rbp ; ret
0xffffff80003a41bc : sal byte ptr [rbx + rax - 0x77], 0x78 ; sub al, 0x5d ; ret
0xffffff8000307219 : sal byte ptr [rbx + rbp - 0x77], cl ; ret 0xe281
0xffffff80006c0e12 : sal byte ptr [rbx + rbx + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff800070dff0 : sal byte ptr [rbx + rbx + 0x48], 0x89 ; ret
0xffffff800079d42f : sal byte ptr [rbx + rbx*2 + 0x41], 0x8b ; pop rdi ; sbb bh, dh ; ret
0xffffff80002d11cf : sal byte ptr [rbx + rbx*2 + 0x48], 0xc7 ; ret 0
0xffffff80003d97e6 : sal byte ptr [rbx + rcx + 0x41], 0xb0 ; add dword ptr [rcx - 0x77], eax ; ret
0xffffff80003e5114 : sal byte ptr [rbx + rcx + 0x41], 0xb0 ; add dword ptr [rcx - 0x77], eax ; ret 0xaee9
0xffffff80003cfbb8 : sal byte ptr [rbx + rcx + 0x48], 0x89 ; ret
0xffffff80008431f2 : sal byte ptr [rbx + rcx - 0x73], 0x48 ; jmp qword ptr [rcx]
0xffffff80002667cf : sal byte ptr [rbx + rdx + 0x31], 0xc0 ; pop rbp ; ret
0xffffff80005c2cea : sal byte ptr [rbx + rdx + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff80008791ef : sal byte ptr [rbx + rdx + 0x48], 0x81 ; ret 0x238
0xffffff80004a0f49 : sal byte ptr [rbx + rdx + 0x48], 0xff ; ret
0xffffff800082dc2a : sal byte ptr [rbx + rdx + 0x4d], 0x89 ; iretd ; call rax
0xffffff80005b4212 : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0xffffff8000897827 : sal byte ptr [rbx + rsi*2 + 0x4c], 0x89 ; and bh, bh ; ret
0xffffff80003952aa : sal byte ptr [rbx + rsi*8 + 0xf], 0xbc ; ror byte ptr [rcx], 0xc8 ; pop rbp ; ret
0xffffff80006111d7 : sal byte ptr [rcx + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff8000529ba5 : sal byte ptr [rcx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff800034e82c : sal byte ptr [rcx + 0x48], 0x89 ; ret 0xc889
0xffffff8000483235 : sal byte ptr [rcx + 0x48], 0xff ; ret
0xffffff80003a541b : sal byte ptr [rcx + rax - 0x14], cl ; pop rbp ; ret
0xffffff800026f31d : sal byte ptr [rcx + rax*2 + 0x48], 0x39 ; ret 0x3c74
0xffffff80003b7a79 : sal byte ptr [rcx + rbp + 0x44], 0x89 ; ret 0x8d48
0xffffff8000746e26 : sal byte ptr [rcx + rbp + 0x48], 0xff ; ret
0xffffff8000356c1a : sal byte ptr [rcx + rbp*2 + 0x48], 0x89 ; ret
0xffffff800052b344 : sal byte ptr [rcx + rbx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff80008ae374 : sal byte ptr [rcx + rbx + 0x48], 0xff ; ret
0xffffff8000885073 : sal byte ptr [rcx + rbx + 0x49], 0x8b ; adc byte ptr [rax - 0x77], r9b ; ret 0x1f0f
0xffffff80004486a4 : sal byte ptr [rcx + rbx*8 - 0x15], 0xb7 ; pop rbp ; ret
0xffffff800054f9e4 : sal byte ptr [rcx + rcx + 0x31], 0xf6 ; call rax
0xffffff8000683dba : sal byte ptr [rcx + rcx + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff80005a1e6c : sal byte ptr [rcx + rdi + 0x48], 0x83 ; ret
0xffffff80003cfcbb : sal byte ptr [rcx + rdi + 0x48], 0x89 ; ret
0xffffff80007f6199 : sal byte ptr [rcx + rdi + 0xf], 0x1f ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0xffffff80008640d6 : sal byte ptr [rcx + rdi*2 + 0x5b], 0x41 ; pop rsi ; pop rbp ; ret
0xffffff80007d39ac : sal byte ptr [rcx + rdx + 0x31], 0xf6 ; mov rdi, r15 ; call rax
0xffffff80005c2ada : sal byte ptr [rcx + rdx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff800038bac4 : sal byte ptr [rcx + rdx*8 + 0x48], 0x83 ; ret 0x4104
0xffffff80004d2d8e : sal byte ptr [rcx + rsi + 0x48], 0xff ; ret
0xffffff8000506eac : sal byte ptr [rcx - 0x40], 1 ; inc dword ptr [rcx - 0x75] ; push rsi ; add al, 0xff ; ret 0x8941
0xffffff80006fbbbf : sal byte ptr [rcx - 0x7f], cl ; ret 0xb080
0xffffff80003a8bb7 : sal byte ptr [rcx], 0xd2 ; wrmsr ; pop rbp ; ret
0xffffff800029d8bf : sal byte ptr [rcx], 0xf6 ; xor r8d, r8d ; jmp rcx
0xffffff80008180ee : sal byte ptr [rcx], 1 ; add byte ptr [rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007a6a33 : sal byte ptr [rcx], 1 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800038888f : sal byte ptr [rcx], cl ; leave ; call 0xffffff8000384b45
0xffffff800033967e : sal byte ptr [rcx], cl ; leave ; call 0xffffff80003858e5
0xffffff800026715b : sal byte ptr [rcx], cl ; leave ; call rbx
0xffffff80003a0b01 : sal byte ptr [rcx], cl ; leave ; mov edi, ebx ; mov rsi, r12 ; call rax
0xffffff80003aefcf : sal byte ptr [rcx], cl ; leave ; pop rbp ; jmp rax
0xffffff80002be9aa : sal byte ptr [rcx], cl ; leave ; xor r8d, r8d ; call 0xffffff800074ac48
0xffffff80004a1d0f : sal byte ptr [rcx], cl ; leave ; xor r8d, r8d ; xor r9d, r9d ; call rax
0xffffff8000b3c97b : sal byte ptr [rcx], cl ; ret 0x8d46
0xffffff80004d8286 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0xffffff8000849a83 : sal byte ptr [rdi + 0x48], 0xff ; ret 0xff48
0xffffff80003b633a : sal byte ptr [rdi + 0x53], cl ; add dh, dh ; ret
0xffffff800053491c : sal byte ptr [rdi + rax + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff8000705faa : sal byte ptr [rdi + rax + 0x48], 0x39 ; ret
0xffffff80008caa4a : sal byte ptr [rdi + rax + 0x48], 0x89 ; ret
0xffffff8000892ab3 : sal byte ptr [rdi + rax + 0x48], 0x8b ; jle 0xffffff8000892ada ; pop rbp ; jmp rax
0xffffff80008ed85c : sal byte ptr [rdi + rax + 0x48], 0x8d ; jge 0xffffff80008ed85b ; call r8
0xffffff80005284de : sal byte ptr [rdi + rbp*8 - 9], cl ; ret
0xffffff80002c034f : sal byte ptr [rdi + rbx*2 + 0x48], 0x89 ; ret
0xffffff80008d36f2 : sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; fucomip st(0) ; ret
0xffffff8000844962 : sal byte ptr [rdi + rdx + 0x41], 0x39 ; ret 0x950f
0xffffff8000383815 : sal byte ptr [rdi + rdx + 0x48], 0x89 ; ret
0xffffff80003589ae : sal byte ptr [rdi + rdx - 0xa], cl ; ret
0xffffff8000462652 : sal byte ptr [rdi + rdx*2 + 0x48], 0x89 ; ret
0xffffff80002ccf7c : sal byte ptr [rdi + rdx*2 + 0x49], 0x8b ; push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0x3175
0xffffff80002b303b : sal byte ptr [rdi + rsi + 0x48], 0x89 ; ret 0x6666
0xffffff8000531058 : sal byte ptr [rdi + rsi + 0x48], 0xff ; ret 0x8348
0xffffff8000628256 : sal byte ptr [rdx + 0x4c], 0x89 ; out dx, eax ; call rax
0xffffff800043795a : sal byte ptr [rdx + 3], 1 ; mov dword ptr [rdi + 0x48], esi ; pop rbp ; ret
0xffffff8000751dd1 : sal byte ptr [rdx + rax + 0x31], 0xc0 ; pop rbp ; ret
0xffffff80002a16fc : sal byte ptr [rdx + rax - 0x78], cl ; enter -0x49f1, -0x40 ; pop rbp ; ret
0xffffff80004d478d : sal byte ptr [rdx + rax*2 + 0x48], 0xff ; ret
0xffffff80005c6253 : sal byte ptr [rdx + rbx + 0x31], 0xf6 ; mov rdi, r14 ; call rax
0xffffff80007ff648 : sal byte ptr [rdx + rbx + 0xf], 0xb6 ; ret
0xffffff800058909c : sal byte ptr [rdx + rcx + 0x29], 0xc8 ; jne 0xffffff80005890b2 ; call rcx
0xffffff800058925f : sal byte ptr [rdx + rcx + 0x29], 0xc8 ; jne 0xffffff8000589275 ; call rcx
0xffffff8000821a8a : sal byte ptr [rdx + rcx + 0x48], 0x8b ; jnp 0xffffff8000821ae0 ; call rax
0xffffff80003a6278 : sal byte ptr [rdx + rcx*2 + 0x48], 0x83 ; ret
0xffffff80005c32ab : sal byte ptr [rdx + rdx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff800050dd08 : sal byte ptr [rdx + rdx - 0x75], 0x7d ; lodsb al, byte ptr [rsi] ; call rax
0xffffff80003ad8cd : sal byte ptr [rdx + rsi + 0x31], 0xff ; call rax
0xffffff80005b237d : sal byte ptr [rdx + rsi + 0x48], 0xff ; ret
0xffffff800084837f : sal byte ptr [rdx + rsi*2 - 0x46], 5 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800039f737 : sal byte ptr [rdx - 0x2a], 1 ; pop rbp ; ret
0xffffff8000b4a519 : sal byte ptr [rdx - 0x4d1d0903], 1 ; loopne 0xffffff8000b4a551 ; ret 0x8840
0xffffff80009001ee : sal byte ptr [rsi + 0x23], cl ; add byte ptr [rax - 1], cl ; ret
0xffffff80008034c3 : sal byte ptr [rsi + 0x44], 0xff ; ret 0xf239
0xffffff8000514d8a : sal byte ptr [rsi + 0x48], 0x89 ; ret
0xffffff80004ac8ee : sal byte ptr [rsi + rax + 0x48], 0x83 ; ret
0xffffff80004aca0d : sal byte ptr [rsi + rax + 0x48], 0x83 ; ret 0xeb10
0xffffff8000288df3 : sal byte ptr [rsi + rax + 0x48], 0x8b ; jnp 0xffffff8000288e21 ; call rax
0xffffff80008ed8f3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0xffffff80008ed8f1 ; call rax
0xffffff80003c8279 : sal byte ptr [rsi + rax + 0x48], 0xf7 ; ror byte ptr [rax + 0x21], 1 ; ret 0xb48
0xffffff80004b24a2 : sal byte ptr [rsi + rax + 0x49], 0x83 ; ret
0xffffff8000288c23 : sal byte ptr [rsi + rax + 0x49], 0x8b ; jg 0xffffff8000288c51 ; call rax
0xffffff80005028f2 : sal byte ptr [rsi + rax + 0x49], 0x8b ; jle 0xffffff8000502960 ; call rax
0xffffff80005061e6 : sal byte ptr [rsi + rax + 0x49], 0x8b ; jle 0xffffff8000506254 ; call rax
0xffffff8000525504 : sal byte ptr [rsi + rax + 0x4c], 1 ; fmul dword ptr [rcx - 0x77] ; ret 0xf641
0xffffff800047ce70 : sal byte ptr [rsi + rax - 0x75], cl ; pop rax ; cmp al, 0x83 ; ret
0xffffff800068e024 : sal byte ptr [rsi + rax*2 + 0x31], 0xf6 ; mov rdx, r15 ; call rax
0xffffff80006f3571 : sal byte ptr [rsi + rbx*2 + 0x48], 0x89 ; ret
0xffffff800062407a : sal byte ptr [rsi + rbx*2 + 1], cl ; ret 0xd339
0xffffff8000393d59 : sal byte ptr [rsi + rcx + 0x3b], 5 ; ret 0x6994
0xffffff8000375e3f : sal byte ptr [rsi + rcx + 0x48], 0x8b ; jnp 0xffffff8000375e5d ; call rax
0xffffff800048e07e : sal byte ptr [rsi + rcx + 0x48], 0xff ; ret
0xffffff8000376485 : sal byte ptr [rsi + rcx + 0x49], 0x8b ; jg 0xffffff80003764a3 ; call rax
0xffffff800037653d : sal byte ptr [rsi + rcx + 0x49], 0x8b ; jg 0xffffff800037655b ; call rax
0xffffff80003768b5 : sal byte ptr [rsi + rcx + 0x49], 0x8b ; jge 0xffffff80003768d3 ; call rax
0xffffff8000375d4d : sal byte ptr [rsi + rcx + 0x49], 0x8b ; jle 0xffffff8000375d6b ; call rax
0xffffff8000757a24 : sal byte ptr [rsi + rcx - 0x47], cl ; sub eax, 0x39000000 ; ret 0xb74
0xffffff80003cbdc6 : sal byte ptr [rsi + rcx*2 + 0x39], cl ; ret 0x3976
0xffffff80005c65ef : sal byte ptr [rsi + rdi + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff8000328ab8 : sal byte ptr [rsi + rdi + 0x48], 0x39 ; ret
0xffffff800048f09f : sal byte ptr [rsi + rdx + 0x48], 0xff ; ret
0xffffff80008b19d0 : sal byte ptr [rsi + rdx + 0x48], 0xff ; ret 0xff48
0xffffff8000884fe6 : sal byte ptr [rsi + rdx + 0x49], 0x8b ; adc byte ptr [r8 - 0x77], r9b ; ret 0x3948
0xffffff80008cf950 : sal byte ptr [rsi + rdx + 0x4c], 0x39 ; xor byte ptr [rcx + rdi - 1], dh ; ret
0xffffff80006519f8 : sal byte ptr [rsi + rdx + 0x4c], 1 ; ret
0xffffff8000565b29 : sal byte ptr [rsi + rsi + 0x48], 0xff ; ret 0x8348
0xffffff8000569962 : sal byte ptr [rsi + rsi*2 + 0x41], 0x8b ; jle 0xffffff80005699f0 ; xor esi, esi ; call rax
0xffffff80002d6111 : sal byte ptr [rsi - 0x24], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d6063 : sal byte ptr [rsi - 0x26], 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000265599 : sal byte ptr [rsp + rax + 0x31], 0xff ; call rax
0xffffff80007b408e : sal byte ptr [rsp + rax + 0x5b], 0x5d ; jmp rax
0xffffff800025d06f : sal byte ptr [rsp + rax - 0x77], 0xdf ; call rax
0xffffff800087a0d6 : sal byte ptr [rsp + rbp + 0x48], 0x81 ; ret 0x238
0xffffff8000573dfc : sal byte ptr [rsp + rbp*2 + 0x48], 0xff ; ret
0xffffff80006d7bf5 : sal byte ptr [rsp + rbx + 0x48], 0x89 ; ret
0xffffff80007d611c : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rbx, rdi ; call rax
0xffffff80005c27df : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rdi, r12 ; call rax
0xffffff80005c2652 : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rdi, r13 ; call rax
0xffffff800054cee9 : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rdi, r14 ; call rax
0xffffff800054f8eb : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rdi, r15 ; call rax
0xffffff800054fc08 : sal byte ptr [rsp + rcx + 0x31], 0xf6 ; mov rdi, rbx ; call rax
0xffffff8000664ca4 : sal byte ptr [rsp + rcx + 0x39], 5 ; ret
0xffffff8000566fca : sal byte ptr [rsp + rcx + 0x48], 0x89 ; fild word ptr [rcx + rcx*4 - 0xa] ; call rax
0xffffff80005c78bf : sal byte ptr [rsp + rdx + 0x31], 0xf6 ; mov rdi, r14 ; call rax
0xffffff80005ea489 : sal byte ptr [rsp + rdx + 0xf], 0x1f ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000276038 : sal byte ptr [rsp + rdx*2 + 0x48], 0x89 ; fucomip st(0) ; popfq ; ret
0xffffff8000709fc9 : sal byte ptr [rsp + rdx*2 + 0x48], 0xc7 ; ret 0xffff
0xffffff80007aa55d : sal byte ptr [rsp + rsi*2 - 0x42], 0 ; ret 1
0xffffff80007adc6d : sal dh, 0x83 ; ret 0
0xffffff8000796198 : sal dh, 0xc1 ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff80002fd36c : sal dh, 1 ; ret
0xffffff8000820736 : sal dh, 1 ; ret 0x4c01
0xffffff8000768974 : sal dh, 1 ; ret 0x7404
0xffffff8000727782 : sal dh, 1 ; ret 0x7504
0xffffff80003f0abf : sal dh, 1 ; ret 0x7530
0xffffff800048bb29 : sal dh, 1 ; ret 0xf04
0xffffff8000b488fb : sal dh, cl ; loop 0xffffff8000b4888b ; ret 0x8841
0xffffff800033db82 : sal dh, cl ; ret
0xffffff800046baa8 : sal dil, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800081bbf9 : sal dword ptr [rax + 1], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065ee3b : sal dword ptr [rax + rax], 1 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800065e8b8 : sal dword ptr [rax + rax], cl ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80003876d5 : sal dword ptr [rax + rcx - 1], cl ; ret
0xffffff800074367b : sal dword ptr [rax - 0x72b7ffc7], 0x3d ; ret 0x39b0
0xffffff80006777db : sal dword ptr [rax - 0x74b7002f], 0x3d ; ret 0x3f14
0xffffff8000676187 : sal dword ptr [rax], 0x75 ; sbb al, 0x20 ; ret 0x1874
0xffffff80003a7fdf : sal dword ptr [rbp + 2], 0x5d ; ret
0xffffff80003667b7 : sal dword ptr [rbp + 6], 0x84 ; leave ; jne 0xffffff80003667a8 ; pop rbp ; ret
0xffffff8000338cfb : sal dword ptr [rbp + rax - 0x48], 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800059f46d : sal dword ptr [rbp - 0x10], 0xff ; push r12 ; je 0xffffff800059f480 ; pop rbp ; ret
0xffffff800072db1f : sal dword ptr [rbp - 0x12], 1 ; or byte ptr [rdi + 0x32], 8 ; pop rbp ; ret
0xffffff800028e84f : sal dword ptr [rbp - 0x12], 1 ; pop rbp ; ret
0xffffff80008f0282 : sal dword ptr [rbp - 0x15], 0xeb ; or ecx, dword ptr [rax - 0x77] ; ret
0xffffff8000340f09 : sal dword ptr [rbp - 0xc], 0x49 ; inc edx ; jmp 0xffffff8000340f19
0xffffff800025002a : sal dword ptr [rbp - 0xd], 1 ; pop rbp ; ret
0xffffff80005d08e4 : sal dword ptr [rbx + 0x48], 0xf6 ; ret 0x7501
0xffffff8000366c9a : sal dword ptr [rbx + 0x5d], 1 ; ret
0xffffff8000875865 : sal dword ptr [rbx + 7], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004f2b52 : sal dword ptr [rbx + rdx + 0x41], 0xff ; ret 0x3945
0xffffff800072c17e : sal dword ptr [rbx - 0x31], 1 ; pop rbp ; ret
0xffffff800041eeda : sal dword ptr [rbx - 0x42], 0x48 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80002e83b7 : sal dword ptr [rcx], 0x48 ; mov eax, dword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000749d83 : sal dword ptr [rcx], 0xc0 ; jmp rcx
0xffffff80002a055b : sal dword ptr [rcx], 0xc0 ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff800080d2bf : sal dword ptr [rcx], 0xc0 ; pop rbp ; ret
0xffffff80006c575b : sal dword ptr [rcx], 0xc1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002e7057 : sal dword ptr [rcx], 1 ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff8000b4a4dd : sal dword ptr [rcx], 1 ; ret 0x48d
0xffffff8000b3c259 : sal dword ptr [rcx], 1 ; ret 0x8d46
0xffffff8000796196 : sal dword ptr [rcx], 1 ; sal dh, 0xc1 ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff800036fce6 : sal dword ptr [rcx], cl ; ret
0xffffff80006d4f9c : sal dword ptr [rdi + rbp + 0x48], 0x83 ; ret
0xffffff80006d6880 : sal dword ptr [rdi + rcx + 0x4c], 0x39 ; ret 0x1b74
0xffffff80006a1ece : sal dword ptr [rdi], cl ; xor dword ptr [rax], eax ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80007fe326 : sal dword ptr [rsi + 0x2e0c1ff], cl ; pop rbp ; ret
0xffffff80007fe2e6 : sal dword ptr [rsi + 0x3e0c1ff], cl ; pop rbp ; ret
0xffffff800055402b : sal dword ptr [rsp + rax + 0x4c], 0x8b ; and byte ptr [r8 - 0x7f], cl ; ret
0xffffff80003924eb : sal eax, 0xf ; mov cl, 0xf ; jne 0xffffff8000392532 ; ret
0xffffff800029892f : sal eax, 1 ; or dword ptr [rcx], 1 ; pop rbp ; ret
0xffffff800069082b : sal ebp, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008d40bf : sal ebp, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800078346b : sal edi, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b461b7 : sal edx, 1 ; call rbx
0xffffff8000784c7c : sal esi, 0xff ; jmp rbx
0xffffff800044d56f : sal esp, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800088c489 : sal esp, cl ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000727781 : sal r14b, 1 ; ret 0x7504
0xffffff800083e30e : sar ah, 0x83 ; ret 0x75fe
0xffffff800085e8f7 : sar ah, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082d621 : sar al, 0x5d ; ret
0xffffff80005b2daa : sar al, cl ; push rsi ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800078c1f2 : sar bh, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006881ca : sar bh, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800078d93b : sar bh, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff8000788a33 : sar bh, 0x89 ; ret
0xffffff8000791ab8 : sar bh, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000858431 : sar bh, 0xc2 ; jne 0xffffff8000858439 ; and edi, 0xfffffff8 ; mov edx, eax ; jmp 0xffffff800085844d
0xffffff80005fe5db : sar bh, 0xff ; ljmp [rcx] ; ret 0x1501
0xffffff8000491c0d : sar bh, 1 ; call qword ptr [rcx]
0xffffff800080c549 : sar bh, 1 ; call rcx
0xffffff80007c1b2b : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000566829 : sar bh, 1 ; ret
0xffffff80008761d8 : sar bh, 1 ; ret 0x394c
0xffffff80003b0724 : sar bh, 1 ; ret 0x8844
0xffffff800058ae48 : sar bh, 1 ; ret 0xdeb
0xffffff800056ac2e : sar bh, cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000678499 : sar bh, cl ; call 0xffffff800029aac5
0xffffff8000593585 : sar bh, cl ; call qword ptr [rdx + rdx*8]
0xffffff8000755fac : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000666d46 : sar bh, cl ; jmp 0xffffff8000666d5b
0xffffff8000593589 : sar bh, cl ; jmp qword ptr [rbx]
0xffffff800078ef4b : sar bh, cl ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007a85c7 : sar bh, cl ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800066e818 : sar bh, cl ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000358c92 : sar bl, 0xff ; pop rbp ; ret
0xffffff800061cc70 : sar byte ptr [r10 + 1], 0xf ; ret 0xf641
0xffffff8000282170 : sar byte ptr [r9], 1 ; ret 0x420f
0xffffff80007eaf6c : sar byte ptr [rax + 0x11], 0x4c ; mov edi, edi ; mov rsi, r14 ; call rbx
0xffffff80005826bc : sar byte ptr [rax + 0x11], 0x7e ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff80005d749a : sar byte ptr [rax + 0xb], 1 ; ret
0xffffff80007ff98d : sar byte ptr [rax + 0xe], 0xf ; ret
0xffffff800025a1f3 : sar byte ptr [rax + 1], 1 ; pop rbp ; ret
0xffffff800058e5fe : sar byte ptr [rax + 4], 0x7f ; fucomip st(3) ; or dword ptr [rax - 0x7d], ecx ; ret
0xffffff80004eff6a : sar byte ptr [rax + 5], 0xf ; ret
0xffffff8000898923 : sar byte ptr [rax - 0x1ffffd1f], 0xf ; ret
0xffffff8000682fff : sar byte ptr [rax - 6], cl ; jmp 0xffffff800068300d
0xffffff8000651694 : sar byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; adc ebx, ecx ; ret
0xffffff8000880530 : sar byte ptr [rax], cl ; jg 0xffffff8000880519 ; pop rbp ; ret
0xffffff80008805a0 : sar byte ptr [rax], cl ; jg 0xffffff8000880589 ; pop rbp ; ret
0xffffff80008806a0 : sar byte ptr [rax], cl ; jg 0xffffff8000880689 ; pop rbp ; ret
0xffffff80004439b2 : sar byte ptr [rbx], cl ; jl 0xffffff8000443954 ; mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000579e0e : sar byte ptr [rcx + 0x41], 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006ba7c8 : sar byte ptr [rcx + 0x47], 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800066e933 : sar byte ptr [rcx - 6], cl ; pop rbp ; ret
0xffffff80002db48d : sar byte ptr [rcx], 0x51 ; adc al, 0x7e ; and byte ptr [rax + 0x63], cl ; ret 0x8b48
0xffffff80002d6061 : sar byte ptr [rcx], 0xd0 ; jbe 0xffffff80002d6049 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d610f : sar byte ptr [rcx], 0xd0 ; jbe 0xffffff80002d60f9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000366c98 : sar byte ptr [rcx], 0xd1 ; je 0xffffff8000366c86 ; pop rbp ; ret
0xffffff80002d5fae : sar byte ptr [rcx], 0xf2 ; jbe 0xffffff80002d5f89 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049f747 : sar byte ptr [rcx], 0xf9 ; cmovge eax, edx ; pop rbp ; ret
0xffffff8000570ac2 : sar byte ptr [rcx], 1 ; fmul dword ptr [rdi] ; ret
0xffffff800028f018 : sar byte ptr [rcx], 1 ; pop rbp ; jmp rax
0xffffff800028f006 : sar byte ptr [rcx], 1 ; pop rbp ; ret
0xffffff8000282171 : sar byte ptr [rcx], 1 ; ret 0x420f
0xffffff80005907b1 : sar byte ptr [rcx], 1 ; ret 0xc018
0xffffff80005b6235 : sar byte ptr [rcx], cl ; ret 0x2674
0xffffff80006012e2 : sar byte ptr [rcx], cl ; ret 0x375
0xffffff80005affa6 : sar byte ptr [rcx], cl ; ret 0x850f
0xffffff80005b67b1 : sar byte ptr [rcx], cl ; ret 0xba
0xffffff80005849c8 : sar byte ptr [rcx], cl ; ret 0xc018
0xffffff80002a1d61 : sar byte ptr [rcx], cl ; ret 0xc75
0xffffff800058fea4 : sar byte ptr [rcx], cl ; setae dl ; jmp 0xffffff800058fee0
0xffffff800058fe88 : sar byte ptr [rcx], cl ; setbe dl ; jmp 0xffffff800058fee0
0xffffff800058fe64 : sar byte ptr [rcx], cl ; sete dl ; jmp 0xffffff800058fee0
0xffffff800058fe71 : sar byte ptr [rcx], cl ; setne dl ; jmp 0xffffff800058fee0
0xffffff80007eaf55 : sar byte ptr [rdi + 0x28], 0x4c ; mov edi, edi ; mov rsi, r14 ; call rbx
0xffffff80007e3d9c : sar byte ptr [rdi + 0xe], 0x31 ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x2015
0xffffff800059df1b : sar byte ptr [rdi - 0x53], 0xeb ; or dword ptr [rax - 0x7d], ecx ; ret
0xffffff800035dc73 : sar byte ptr [rdi - 1], 0xff ; dec dword ptr [rax + 0xf] ; ret 0xf748
0xffffff80002d4ac3 : sar byte ptr [rdx + 0x10], 0xe8 ; ret 0x6175
0xffffff8000746e56 : sar byte ptr [rdx + 1], 0xf ; ret 0x8943
0xffffff800061cc71 : sar byte ptr [rdx + 1], 0xf ; ret 0xf641
0xffffff800034d92e : sar byte ptr [rdx], 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0xffffff80005651b6 : sar byte ptr [rdx], 1 ; add byte ptr [rax + 1], cl ; ret
0xffffff800074bec5 : sar byte ptr [rip + 0x1fff], 0xf ; xchg eax, edi ; ret 0xbe
0xffffff80007b664c : sar byte ptr [rip - 0x76b70002], 1 ; ret
0xffffff80004c657a : sar byte ptr [rip - 0x76b7ffd5], cl ; ret
0xffffff80005b43ee : sar byte ptr [rsi + 0x17], 0x89 ; ret 0x6666
0xffffff80004b947e : sar byte ptr [rsi + 0x7e], 0x89 ; ret 0xd2f7
0xffffff80007c7dbd : sar byte ptr [rsi + 1], 0x4c ; mov edi, ebp ; call rcx
0xffffff8000624117 : sar byte ptr [rsi + 5], 0x39 ; ret
0xffffff8000347e5d : sar byte ptr [rsi + 7], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007a67f3 : sar byte ptr [rsi - 0x76b301], 0xe8 ; ret 0xffbe
0xffffff800080df37 : sar byte ptr [rsi], 0x40 ; movsx eax, bh ; pop rbp ; ret
0xffffff8000495493 : sar ch, 0x48 ; cmp eax, 0x3f ; jl 0xffffff8000495459 ; pop rbp ; ret
0xffffff800060cc63 : sar ch, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007bd126 : sar ch, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000371072 : sar dh, 0x48 ; cmp eax, 1 ; jg 0xffffff8000371049 ; pop rbp ; ret
0xffffff80002ad00a : sar dh, 0xff ; call 0xffffff800039923f
0xffffff800065ff0b : sar dh, 0xff ; call qword ptr [rax]
0xffffff80002d859b : sar dh, 0xff ; call rcx
0xffffff80006b2441 : sar dh, 0xff ; dec dword ptr [rdi] ; mov bh, 0x85 ; ret 0xfffe
0xffffff80006ddd39 : sar dh, 0xff ; dec dword ptr [rdi] ; xchg eax, ebx ; ret 0x3944
0xffffff80007da6dc : sar dl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800036deb8 : sar dl, 0xff ; call qword ptr [rbx]
0xffffff80004b20a2 : sar dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x3b48
0xffffff80004b1a6a : sar dl, 0xff ; inc dword ptr [rax - 0x51b73] ; call qword ptr [rax]
0xffffff80004b1ad4 : sar dl, 0xff ; inc dword ptr [rax - 0x51b73] ; jmp qword ptr [rax]
0xffffff80004b1668 : sar dl, 0xff ; inc dword ptr [rax - 0x51d73] ; jmp qword ptr [rax]
0xffffff80004b0fa4 : sar dl, 0xff ; inc dword ptr [rax - 0x51e73] ; call qword ptr [rax]
0xffffff80004b107c : sar dl, 0xff ; inc dword ptr [rax - 0x51e73] ; jmp qword ptr [rax]
0xffffff80002eb96d : sar dl, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800086418d : sar dl, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002bbbee : sar dl, cl ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000b49ce1 : sar dword ptr [rax + 0x4b34d128], 0x88 ; ret 0xe280
0xffffff80007b0249 : sar dword ptr [rax + 0x4b8ff], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000762ccf : sar dword ptr [rax + rax], 1 ; call 0xffffff80003922f6
0xffffff800083b991 : sar dword ptr [rax], 0x72 ; lodsd eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff800083baf1 : sar dword ptr [rax], 0x72 ; mov bh, 0x5d ; ret
0xffffff8000651eb0 : sar dword ptr [rax], 1 ; add byte ptr [rcx + rcx*4 - 0x16], cl ; call 0xffffff800028e1b8
0xffffff80006d8b50 : sar dword ptr [rcx], 1 ; ret 0xc76
0xffffff800083ea37 : sar dword ptr [rcx], cl ; ret
0xffffff80005be097 : sar dword ptr [rcx], cl ; ret 0x1475
0xffffff80005be0a3 : sar dword ptr [rcx], cl ; ret 0x7874
0xffffff80008c265b : sar dword ptr [rcx], cl ; ret 0xf41
0xffffff8000711beb : sar dword ptr [rdi + rdi*8 - 1], 0x89 ; ret
0xffffff800059714b : sar dword ptr [rdi - 0x76b30002], 0xef ; call 0xffffff80005833e9
0xffffff8000b43177 : sar dword ptr [rdx + 0x3f], 0x29 ; ret 0xfa83
0xffffff8000b42aa4 : sar dword ptr [rdx + 0x40], 0x29 ; ret 0xfa83
0xffffff800081e99f : sar dword ptr [rsi + 2], 1 ; xor eax, eax ; pop rbp ; ret
0xffffff80002994a9 : sar dword ptr [rsi + 3], 0x48 ; mov dword ptr [rdx], ecx ; pop rbx ; pop rbp ; ret
0xffffff80007192ae : sar dword ptr [rsi + 5], 1 ; mov eax, 5 ; pop rbp ; ret
0xffffff800080df67 : sar dword ptr [rsi], 0x48 ; mov eax, edi ; pop rbp ; ret
0xffffff800080df56 : sar dword ptr [rsi], 0x89 ; clc ; pop rbp ; ret
0xffffff8000354a5b : sar dword ptr [rsi], 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000762cce : sar dword ptr cs:[rax + rax], 1 ; call 0xffffff80003922f7
0xffffff800049eaf5 : sar eax, 0x1f ; xor eax, esi ; pop rbp ; ret
0xffffff80004954bd : sar eax, 0x20 ; add qword ptr [rdi + rax*8], rdx ; pop rbp ; ret
0xffffff8000655fbc : sar eax, 0x45 ; mov edi, dword ptr [rsi + 0x2c] ; mov rdi, r14 ; call qword ptr [rax]
0xffffff80006594e3 : sar eax, 0x48 ; mov edi, dword ptr [rbp - 0x1a8] ; call qword ptr [rax]
0xffffff80003a0e0c : sar ebp, 0xff ; call rbx
0xffffff8000358c32 : sar ebx, 0xff ; pop rbp ; ret
0xffffff800059bbb7 : sar ecx, 0x3f ; mov eax, ecx ; pop rbp ; ret
0xffffff800087735e : sar ecx, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002b029f : sar ecx, 1 ; mov dword ptr [rip + 0x83d229], ecx ; pop rbp ; ret
0xffffff8000328f49 : sar ecx, cl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800077d793 : sar edi, 0x31 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800077cce4 : sar edi, 0x44 ; mov eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077575d : sar edi, 0x44 ; mov edi, esp ; call 0xffffff80003998c8
0xffffff80006806df : sar edi, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800077cfa9 : sar edi, 0x48 ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077e248 : sar edi, 0x4c ; mov eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000685adb : sar edi, 0x5d ; ret
0xffffff8000781b17 : sar edi, 0x89 ; ret
0xffffff80003924e9 : sar edi, 0xc1 ; lock cmpxchg dword ptr [rdi], ecx ; jne 0xffffff8000392534 ; ret
0xffffff800086dc6c : sar edi, 0xe1 ; mov eax, 5 ; pop rbp ; ret
0xffffff8000b3b7b0 : sar edi, 0xff ; mov qword ptr [rcx], rax ; pop rbp ; ret
0xffffff800035fdac : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000593575 : sar edi, 1 ; jmp rbx
0xffffff8000589e13 : sar edi, 1 ; mov eax, 1 ; pop rbp ; ret
0xffffff80007f6dc6 : sar edi, 1 ; pop rbp ; ret
0xffffff80002b6d5a : sar edi, 1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800055bfc4 : sar edi, cl ; jmp 0xffffff800055bf8d
0xffffff8000561e21 : sar edi, cl ; mov eax, 0x10 ; pop rbp ; ret
0xffffff8000569768 : sar edi, cl ; mov eax, 0xffffffff ; pop rbp ; ret
0xffffff8000565ca9 : sar edi, cl ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000568cb0 : sar edi, cl ; mov ebx, 0x16 ; jmp 0xffffff8000568c83
0xffffff80005650c5 : sar edi, cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006268a1 : sar edi, cl ; ret
0xffffff8000567ab4 : sar edi, cl ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b844a : sar edx, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008db019 : sar esi, 0x75 ; ret
0xffffff800086c910 : sar esi, 0xff ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000659e35 : sar esp, 0x35 ; add byte ptr [rcx], dh ; shr al, 0x70 ; ret
0xffffff800086593c : sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000358c31 : sar r11, 0xff ; pop rbp ; ret
0xffffff800077e2ec : sar r15, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004954bc : sar rax, 0x20 ; add qword ptr [rdi + rax*8], rdx ; pop rbp ; ret
0xffffff800059bbb6 : sar rcx, 0x3f ; mov eax, ecx ; pop rbp ; ret
0xffffff8000589e12 : sar rdi, 1 ; mov eax, 1 ; pop rbp ; ret
0xffffff80006ac0e1 : sbb ah, bh ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff800044a294 : sbb ah, bh ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005cfa7e : sbb ah, byte ptr [rdi + rdi] ; pop rbp ; ret
0xffffff80008c36ae : sbb ah, byte ptr [rdi] ; add byte ptr [rax], ah ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000606468 : sbb ah, byte ptr [rsi - 0x75] ; push rcx ; add ah, byte ptr [rsi - 0x3f] ; ret 0x4408
0xffffff8000397033 : sbb ah, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000605054 : sbb ah, dl ; xor byte ptr [rax], al ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80005b8221 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x77] ; ret
0xffffff80005e7152 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003abdc6 : sbb al, 0 ; add byte ptr [rax], al ; and edx, ebx ; call rax
0xffffff8000661e77 : sbb al, 0 ; add byte ptr [rax], al ; call 0xffffff800010e146
0xffffff80003a7fda : sbb al, 0 ; add byte ptr [rax], al ; cmp ecx, eax ; jne 0xffffff80003a7fed ; pop rbp ; ret
0xffffff8000366e18 : sbb al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80005d102c : sbb al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000845612 : sbb al, 0 ; mov rax, qword ptr [rcx + rax*8] ; pop rbp ; ret
0xffffff80008270a6 : sbb al, 0 ; mov rdi, r13 ; call rbx
0xffffff800081f948 : sbb al, 0 ; mov rdi, rbx ; mov rdx, r14 ; call r12
0xffffff80008299ba : sbb al, 0 ; mov rdi, rbx ; mov rdx, rax ; call r15
0xffffff8000829e57 : sbb al, 0 ; mov rdx, r12 ; mov rcx, r13 ; call r15
0xffffff800082a220 : sbb al, 0 ; xor eax, eax ; mov rbx, r10 ; call rbx
0xffffff8000829e86 : sbb al, 0 ; xor eax, eax ; mov rsi, r12 ; call r15
0xffffff8000829e75 : sbb al, 0 ; xor eax, eax ; mov rsi, rbx ; call r15
0xffffff800067618a : sbb al, 0x20 ; ret 0x1874
0xffffff80008f5ca9 : sbb al, 0x24 ; add byte ptr [rax - 1], cl ; ret
0xffffff80007c1f28 : sbb al, 0x24 ; mov rdi, r12 ; call 0xffffff800010e147
0xffffff80005363d4 : sbb al, 0x29 ; add byte ptr [r8 - 0x77], r9b ; ret
0xffffff800075c270 : sbb al, 0x30 ; cmp eax, 0x6dc7e800 ; ret
0xffffff80007e2a4b : sbb al, 0x35 ; add byte ptr [rax - 0x7d], cl ; ret 0x3118
0xffffff8000293c25 : sbb al, 0x44 ; mov edi, esi ; mov rdx, r12 ; call r15
0xffffff80003feb20 : sbb al, 0x45 ; stc ; push rsi ; ret
0xffffff8000751e1d : sbb al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000656895 : sbb al, 0x4c ; mov edi, ebp ; call rax
0xffffff8000766a3f : sbb al, 0x4c ; mov edi, edi ; call 0xffffff80003923e7
0xffffff8000659780 : sbb al, 0x4d ; ret
0xffffff8000653880 : sbb al, 0x4e ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call qword ptr [rax]
0xffffff800029bd3a : sbb al, 0x5d ; ret
0xffffff80007b9995 : sbb al, 0x66 ; mov dword ptr [rdi + 0x1c], esi ; pop rbp ; ret
0xffffff80003527b5 : sbb al, 0x81 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008ec125 : sbb al, 0x83 ; jmp qword ptr [rax]
0xffffff800028bbb1 : sbb al, 0x83 ; loopne 0xffffff800028bbbb ; pop rbp ; ret
0xffffff800028bbb0 : sbb al, 0x83 ; loopne 0xffffff800028bbbc ; pop rbp ; ret
0xffffff80004fa549 : sbb al, 0x83 ; loopne 0xffffff80004fa553 ; pop rbp ; ret
0xffffff8000786d70 : sbb al, 0x85 ; cmp al, byte ptr [rax] ; call 0xffffff8000393046
0xffffff8000655a0a : sbb al, 0x85 ; test byte ptr [rdi], 0x84 ; ret
0xffffff800039eff8 : sbb al, 0x89 ; push rcx ; sbb al, 0x5d ; ret
0xffffff8000489328 : sbb al, 0x89 ; ret 0xeac1
0xffffff800039d4c2 : sbb al, 0x89 ; sbb al, 0x5d ; ret
0xffffff8000590a28 : sbb al, 0x8f ; add rbx, rdi ; jmp rbx
0xffffff80005c0867 : sbb al, 0x99 ; add rbx, rcx ; jmp rbx
0xffffff800058fa98 : sbb al, 0x9a ; add rbx, rdx ; jmp rbx
0xffffff8000597d56 : sbb al, 0x9e ; add rbx, rsi ; jmp rbx
0xffffff8000843544 : sbb al, 0xa ; jne 0xffffff8000843526 ; pop rbx ; pop rbp ; ret
0xffffff8000b45312 : sbb al, 0xab ; int 0xc2
0xffffff800074208b : sbb al, 0xb9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000766ac0 : sbb al, 0xb9 ; ret 0x45ff
0xffffff80008be433 : sbb al, 0xbb ; ret 2
0xffffff80006a990c : sbb al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff80006a94e8 : sbb al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0xffffff8000770d82 : sbb al, 0xc2 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80007417ad : sbb al, 0xc5 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000676c2a : sbb al, 0xc6 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d3160 : sbb al, 0xc7 ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006f13c0 : sbb al, 0xca ; push rsi ; ret
0xffffff80007d6d78 : sbb al, 0xd2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005f0c3c : sbb al, 0xda ; jmp qword ptr [rsi - 0x75]
0xffffff8000354b20 : sbb al, 0xe5 ; add eax, dword ptr [rax] ; jmp 0xffffff8000354b73
0xffffff80007f94d5 : sbb al, 0xe8 ; in eax, 0x86 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008aff7c : sbb al, 0xea ; dec dword ptr [rax - 0x77] ; ret
0xffffff800055fe07 : sbb al, 0xf0 ; add qword ptr [rdi + 0x30], rsi ; pop rbp ; ret
0xffffff8000852353 : sbb al, 0xf6 ; sbb dword ptr [rax], eax ; jmp 0xffffff800085238c
0xffffff80004d06eb : sbb al, 0xf7 ; ret 0
0xffffff80008c4f10 : sbb al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030bdc0 : sbb al, 0xff ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800049a5cb : sbb al, 0xff ; ret
0xffffff8000878e5e : sbb al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80007d03ec : sbb al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002db3e4 : sbb al, 1 ; add byte ptr [rax], al ; shl rax, 0xc ; pop rbp ; ret
0xffffff80007bcfd3 : sbb al, 1 ; ret 0x8b4d
0xffffff80008a0f7b : sbb al, 1 ; xor eax, eax ; jmp 0xffffff80008a0fab
0xffffff80008a0f7a : sbb al, 1 ; xor eax, eax ; jmp 0xffffff80008a0fac
0xffffff800076064c : sbb al, 2 ; jne 0xffffff800076065d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076064b : sbb al, 2 ; jne 0xffffff800076065e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b07b9 : sbb al, 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000802b6d : sbb al, 8 ; jmp 0xffffff8000802b79
0xffffff800076076c : sbb al, 8 ; jne 0xffffff800076077d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076076b : sbb al, 8 ; jne 0xffffff800076077e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004f9476 : sbb al, 9 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003a426c : sbb al, al ; and al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff80007615d1 : sbb al, bl ; dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0xffffff800062e58e : sbb al, byte ptr [rax + rax + 0x5d] ; ret
0xffffff80004ba072 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006c3246 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800069deca : sbb al, byte ptr [rax] ; int 0xf6
0xffffff80008626c0 : sbb al, byte ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80008455e9 : sbb al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000630813 : sbb al, byte ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80004ba915 : sbb al, byte ptr [rbp + 0x31] ; in al, 0xf7 ; ret
0xffffff80004b2535 : sbb al, byte ptr [rbp - 0x7b] ; sal byte ptr [rsi + rax + 0x49], 0x83 ; ret
0xffffff800041477c : sbb al, byte ptr [rbx + rbx*8 - 0xb7dd8c] ; ret 0x6666
0xffffff8000560fb0 : sbb al, byte ptr [rcx - 0x76] ; cmp byte ptr [rcx - 1], cl ; ret 0xff49
0xffffff800067e7ee : sbb al, byte ptr [rcx - 0x7d] ; call qword ptr [rcx]
0xffffff8000762322 : sbb al, byte ptr [rdi] ; ret
0xffffff800079dbbb : sbb al, byte ptr [rsi*2 + 0x14478b03] ; pop rbp ; ret
0xffffff80006932d2 : sbb al, ch ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80008059db : sbb al, ch ; outsd dx, dword ptr [rsi] ; push rdi ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049d6c7 : sbb al, ch ; sbb edx, -0x1d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000763a3f : sbb al, ch ; sti ; cmc ; ret 0x48ff
0xffffff80008066b6 : sbb al, ch ; xchg eax, esp ; lodsq rax, qword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065fd9f : sbb al, ch ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80008e8324 : sbb al, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039cdfd : sbb al, cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000652092 : sbb al, cl ; ret
0xffffff8000698e24 : sbb al, dl ; dec dword ptr [rax + 1] ; ret
0xffffff800039cdfc : sbb al, r9b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077bd8c : sbb ax, word ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80006abf57 : sbb bh, ah ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff800081f0b5 : sbb bh, bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065f861 : sbb bh, bh ; ret
0xffffff800038d5c0 : sbb bh, bh ; ret 0x1589
0xffffff8000394a77 : sbb bh, bh ; ret 0xd139
0xffffff8000505a0a : sbb bh, bh ; ret 0xf175
0xffffff80007dac02 : sbb bh, byte ptr [rcx] ; fmul dword ptr [rdi] ; ret
0xffffff800075f622 : sbb bh, byte ptr [rdx] ; ret
0xffffff80005c3092 : sbb bh, byte ptr [rip + 0x158d4800] ; ret
0xffffff800079d435 : sbb bh, dh ; ret
0xffffff80004d0a43 : sbb bh, dh ; ret 0
0xffffff80002f4665 : sbb bh, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000446744 : sbb bl, ah ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff8000251836 : sbb bl, byte ptr [rax - 0x77] ; add byte ptr [rax - 0x3f], cl ; loopne 0xffffff8000251859 ; pop rbp ; ret
0xffffff8000672202 : sbb bl, byte ptr [rdi + 0x14] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000663e3b : sbb bl, ch ; adc al, byte ptr [rcx - 0x7f] ; call qword ptr [rax]
0xffffff8000447157 : sbb bl, ch ; or al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80007d2592 : sbb bl, ch ; or ecx, dword ptr [rax - 0x77] ; ret
0xffffff80004b5bfb : sbb bl, ch ; ret 0x8a41
0xffffff8000753d24 : sbb bl, dh ; ret
0xffffff80007d2591 : sbb bl, r13b ; or ecx, dword ptr [rax - 0x77] ; ret
0xffffff800089114f : sbb byte ptr [eax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800065c1c3 : sbb byte ptr [r11 + 0x1441857], r9b ; ret 0xd129
0xffffff8000399f41 : sbb byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003ed6c8 : sbb byte ptr [r11 + rcx*4 + 0x45], r9b ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff800065c195 : sbb byte ptr [r11 - 0x3dfee7a9], r9b ; jmp 0xffffff800065c1d1
0xffffff8000284dcb : sbb byte ptr [r11 - 0x76b7fbbf], r9b ; ret 0x8348
0xffffff80007d77b5 : sbb byte ptr [r11 - 0x78f0f708], al ; ret 1
0xffffff80004f66ee : sbb byte ptr [r14 - 0x77], spl ; ret 0xc166
0xffffff80005aff1c : sbb byte ptr [r15], r9b ; mov dh, 0x51 ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff8000324cbb : sbb byte ptr [r8 + 0x39], cl ; ret 0x3372
0xffffff8000559217 : sbb byte ptr [r8 + 0x39], r9b ; fmul dword ptr [rax + 0xf] ; ret
0xffffff800060fe10 : sbb byte ptr [r8 + 0x39], r9b ; ret
0xffffff8000881ea3 : sbb byte ptr [r8 + 0x39], r9b ; ret 0x674
0xffffff80008127ef : sbb byte ptr [r8 - 0x75], r9b ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000812811 : sbb byte ptr [r8 - 0x75], r9b ; add al, 0xc8 ; pop rbp ; ret
0xffffff800076b614 : sbb byte ptr [r8 - 0x75], r9b ; pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800062510d : sbb byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800087079b : sbb byte ptr [r8 - 0x77], cl ; ret 0xff41
0xffffff800064ed15 : sbb byte ptr [r8 - 0x77], r9b ; add edi, edi ; ret
0xffffff800054fb8a : sbb byte ptr [r8 - 0x77], r9b ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff8000595b9b : sbb byte ptr [r8 - 0x77], r9b ; ret
0xffffff80003150a6 : sbb byte ptr [r8 - 0x77], r9b ; ret 0x294c
0xffffff800025d06b : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rax - 0x77], 0xdf ; call rax
0xffffff80004803c8 : sbb byte ptr [r8 - 0x7d], cl ; ret
0xffffff80007ec8e4 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0xffffff80006def0a : sbb byte ptr [r8 - 1], r9b ; ret
0xffffff8000893daf : sbb byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007d796b : sbb byte ptr [r9 + r9*4 - 0x11], r9b ; mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff80003498d9 : sbb byte ptr [r9 - 0x8992bbb], r9b ; ret
0xffffff8000448d2b : sbb byte ptr [r9], bpl ; ret 0x5389
0xffffff80004b316d : sbb byte ptr [rax + 0x29], cl ; ret 0x820f
0xffffff800031b2b6 : sbb byte ptr [rax + 0x29], cl ; ret 0x8949
0xffffff8000523fa4 : sbb byte ptr [rax + 0x29], cl ; ret 0x894c
0xffffff8000503655 : sbb byte ptr [rax + 0x29], cl ; ret 0x8d48
0xffffff80002db4ad : sbb byte ptr [rax + 0x2b], cl ; adc dword ptr [rax], r12d ; pop rbp ; ret
0xffffff8000559218 : sbb byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0xffffff800060fe11 : sbb byte ptr [rax + 0x39], cl ; ret
0xffffff8000324cbc : sbb byte ptr [rax + 0x39], cl ; ret 0x3372
0xffffff8000881ea4 : sbb byte ptr [rax + 0x39], cl ; ret 0x674
0xffffff8000287fe3 : sbb byte ptr [rax + 0x39], cl ; ret 0x974
0xffffff80008576e1 : sbb byte ptr [rax + 0x39], cl ; ret 0xe972
0xffffff800082007b : sbb byte ptr [rax + 0x39], cl ; ret 0xef77
0xffffff8000494de0 : sbb byte ptr [rax + 0x39], cl ; ret 0xf48
0xffffff80005c2bed : sbb byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x39], cl ; ret
0xffffff800051fa89 : sbb byte ptr [rax + 0x63], cl ; fimul dword ptr [rax + 0x39] ; ret
0xffffff8000540cf4 : sbb byte ptr [rax + 0x63], cl ; ret 0x148
0xffffff800066be72 : sbb byte ptr [rax + 0x66000000], 0x89 ; ret 0xc166
0xffffff800050ed85 : sbb byte ptr [rax + 0x6b], cl ; ret 0x4838
0xffffff80007b94c5 : sbb byte ptr [rax + 1], cl ; ret
0xffffff80004460a5 : sbb byte ptr [rax + 1], cl ; ret 0x2948
0xffffff80007b8e76 : sbb byte ptr [rax + 1], cl ; ret 0x3948
0xffffff800043ac26 : sbb byte ptr [rax + 1], cl ; ret 0xf748
0xffffff80007b94c4 : sbb byte ptr [rax + 1], r9b ; ret
0xffffff8000680784 : sbb byte ptr [rax + rax], cl ; add al, ch ; ret
0xffffff800089137c : sbb byte ptr [rax - 0x3b7cb7ff], dh ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007cebb8 : sbb byte ptr [rax - 0x46de8bff], ch ; ret 0x1a
0xffffff80007cebb7 : sbb byte ptr [rax - 0x46de8bff], r13b ; ret 0x1a
0xffffff80008127f0 : sbb byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff8000812812 : sbb byte ptr [rax - 0x75], cl ; add al, 0xc8 ; pop rbp ; ret
0xffffff80002a14d4 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0xffffff800054bfbb : sbb byte ptr [rax - 0x75], cl ; jae 0xffffff800054bfe9 ; mov rdx, qword ptr [rbx + 0x28] ; call rax
0xffffff80004c38d8 : sbb byte ptr [rax - 0x75], cl ; jne 0xffffff80004c38b2 ; call rbx
0xffffff800053a011 : sbb byte ptr [rax - 0x75], cl ; jnp 0xffffff800053a043 ; call rax
0xffffff8000323d5d : sbb byte ptr [rax - 0x75], cl ; mov byte ptr [r8 + 0x39], r9b ; ret 0xf48
0xffffff800076b615 : sbb byte ptr [rax - 0x75], cl ; pop rax ; adc byte ptr [rax - 0x7d], cl ; ret
0xffffff800059d0e9 : sbb byte ptr [rax - 0x75], cl ; push rcx ; and dh, dh ; ret 0xf01
0xffffff8000462e5f : sbb byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x76000002], esp ; ret 0x8d48
0xffffff80007ae375 : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800064ed16 : sbb byte ptr [rax - 0x77], cl ; add edi, edi ; ret
0xffffff80005cba78 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800078ce92 : sbb byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x3148
0xffffff800054fb8b : sbb byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xa] ; call rcx
0xffffff80003c9c2c : sbb byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret 0xc602
0xffffff800076d1af : sbb byte ptr [rax - 0x77], cl ; fucomip st(0) ; js 0xffffff800076d214 ; ret 0x48ff
0xffffff800076d18b : sbb byte ptr [rax - 0x77], cl ; fucomip st(0) ; pushfq ; push rdi ; ret 0x48ff
0xffffff800082ee02 : sbb byte ptr [rax - 0x77], cl ; iretd ; pop rbp ; jmp rax
0xffffff80006b8e99 : sbb byte ptr [rax - 0x77], cl ; or byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000328997 : sbb byte ptr [rax - 0x77], cl ; ret
0xffffff80003150a7 : sbb byte ptr [rax - 0x77], cl ; ret 0x294c
0xffffff800087079c : sbb byte ptr [rax - 0x77], cl ; ret 0xff41
0xffffff80003c90a4 : sbb byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0xffffff80005cba77 : sbb byte ptr [rax - 0x77], r9b ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800078ce91 : sbb byte ptr [rax - 0x77], r9b ; fimul dword ptr [rax - 0x7d] ; ret 0x3148
0xffffff80006ded04 : sbb byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rax + 0x31] ; imul al ; jmp rsi
0xffffff800025d06c : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax - 0x77], 0xdf ; call rax
0xffffff800031e15e : sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800051f048 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4114
0xffffff8000266a36 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0xffffff800026c447 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0xffffff80002701f8 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4824
0xffffff800054c705 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4920
0xffffff8000524c83 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4cf2
0xffffff800026b8e8 : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb18
0xffffff8000444859 : sbb byte ptr [rax - 0x7f], cl ; ret
0xffffff80006def0b : sbb byte ptr [rax - 1], cl ; ret
0xffffff8000558116 : sbb byte ptr [rax - 1], cl ; ret 0x3145
0xffffff80004cbd11 : sbb byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80005cde44 : sbb byte ptr [rax - 1], cl ; ret 0x8949
0xffffff8000891d59 : sbb byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff800031eaff : sbb byte ptr [rax], 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008aa845 : sbb byte ptr [rax], 9 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008034fb : sbb byte ptr [rax], ah ; xor eax, eax ; pop rbp ; ret
0xffffff8000802ba2 : sbb byte ptr [rax], ah ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007baf14 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005cc6e7 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003001cb : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002b4f89 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000420668 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff800078c8c6
0xffffff80008ea846 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff8000856ad6
0xffffff8000366e78 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007543e9 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; rep movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff80003933e4 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0xffffff80002ce60c : sbb byte ptr [rax], al ; add byte ptr [rbx + 0x440f01f8], al ; ret
0xffffff800050f0d2 : sbb byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000375e30 : sbb byte ptr [rax], al ; je 0xffffff8000375e41 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000815828 : sbb byte ptr [rax], al ; je 0xffffff8000815839 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff8000885f00 : sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000635fdd : sbb byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005f4dc5 : sbb byte ptr [rax], al ; pop rbp ; ret
0xffffff80006c0d7d : sbb byte ptr [rax], bl ; add eax, 0x83000f00 ; ret
0xffffff80006c0d7c : sbb byte ptr [rax], r11b ; add eax, 0x83000f00 ; ret
0xffffff8000893dcf : sbb byte ptr [rax], r8b ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80007bd036 : sbb byte ptr [rbp + 0x5d8948db], al ; or byte ptr [rdi], 0x95 ; ret 0x9589
0xffffff80005474ef : sbb byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0xffffff800039a730 : sbb byte ptr [rbp - 0x33], dh ; ret
0xffffff8000746d74 : sbb byte ptr [rbp - 0x3c17ffc2], al ; ret 0xffc4
0xffffff800055fe1a : sbb byte ptr [rbp - 0x3d], bl ; lock add qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff80006a9324 : sbb byte ptr [rbp - 0x7cb70032], bl ; ret
0xffffff8000892ab9 : sbb byte ptr [rbp - 1], bl ; loopne 0xffffff8000892b20 ; ret
0xffffff800065c1c4 : sbb byte ptr [rbx + 0x1441857], cl ; ret 0xd129
0xffffff80002f6d90 : sbb byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002504e8 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff8000399f42 : sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005cb934 : sbb byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff800039d4bf : sbb byte ptr [rbx + 0x46891c47], cl ; sbb al, 0x5d ; ret
0xffffff800039d4be : sbb byte ptr [rbx + 0x46891c47], r9b ; sbb al, 0x5d ; ret
0xffffff8000498b89 : sbb byte ptr [rbx + 0x5c3d2835], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x3110
0xffffff8000252c3b : sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff80002c863d : sbb byte ptr [rbx + r15 + 0x2d], cl ; ret 0x7f66
0xffffff80003cb243 : sbb byte ptr [rbx + rbx*8 - 0xb7de8c], al ; ret 0xff48
0xffffff80003ed6c9 : sbb byte ptr [rbx + rcx*4 + 0x45], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80002c863e : sbb byte ptr [rbx + rdi + 0x2d], cl ; ret 0x7f66
0xffffff8000680e44 : sbb byte ptr [rbx + rdx], bh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000468371 : sbb byte ptr [rbx - 0x10b43], al ; call qword ptr [rcx]
0xffffff800048d680 : sbb byte ptr [rbx - 0x38b6efb9], cl ; ret
0xffffff8000b4a60e : sbb byte ptr [rbx - 0x3af7b], al ; call qword ptr [rsi]
0xffffff800065c196 : sbb byte ptr [rbx - 0x3dfee7a9], cl ; jmp 0xffffff800065c1d0
0xffffff8000676010 : sbb byte ptr [rbx - 0x3fceffcd], cl ; call 0xffffff800029e859
0xffffff800055dbca : sbb byte ptr [rbx - 0x74b6f7b7], cl ; je 0xffffff800055dba7 ; call rax
0xffffff800055e715 : sbb byte ptr [rbx - 0x74b6f7b7], cl ; je 0xffffff800055e6f5 ; call rax
0xffffff8000284dcc : sbb byte ptr [rbx - 0x76b7fbbf], cl ; ret 0x8348
0xffffff80007d77b6 : sbb byte ptr [rbx - 0x78f0f708], al ; ret 1
0xffffff800026de57 : sbb byte ptr [rbx - 0x7cb7df8e], cl ; ret 0x4824
0xffffff800026a43b : sbb byte ptr [rbx - 0x7cb7fbb0], cl ; ret 0x4803
0xffffff80008ae772 : sbb byte ptr [rbx - 1], al ; push rsp ; add dword ptr [rax], ebp ; xor eax, eax ; pop rbp ; ret
0xffffff80002b4c26 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0xffffff80002daeb7 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000746b23 : sbb byte ptr [rbx], al ; push -0xf176bf ; ret
0xffffff8000b3d365 : sbb byte ptr [rbx], bh ; adc eax, 0xf781f731 ; ret
0xffffff800065d984 : sbb byte ptr [rbx], cl ; ret
0xffffff80007543e7 : sbb byte ptr [rcx + 0x18], bh ; rep movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; ret
0xffffff8000b48716 : sbb byte ptr [rcx + 0x21], al ; ret
0xffffff80007d4cc5 : sbb byte ptr [rcx + 0x415b6043], cl ; pop rsi ; pop rbp ; ret
0xffffff80007d4cc4 : sbb byte ptr [rcx + 0x415b6043], r9b ; pop rsi ; pop rbp ; ret
0xffffff80007d4edb : sbb byte ptr [rcx + 0x415b6843], cl ; pop rsi ; pop rbp ; ret
0xffffff80007d4eda : sbb byte ptr [rcx + 0x415b6843], r9b ; pop rsi ; pop rbp ; ret
0xffffff80008be3e5 : sbb byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff8000b3edc9 : sbb byte ptr [rcx + 0xe7], al ; mov bl, 0x89 ; ret
0xffffff800078a893 : sbb byte ptr [rcx + rax], 0 ; add bh, dh ; shl byte ptr [rcx], 1 ; ret 0x8b41
0xffffff80008597a4 : sbb byte ptr [rcx + rax], dh ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005c0e5f : sbb byte ptr [rcx + rbp - 0x28], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d796c : sbb byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, qword ptr [rbp - 0x70] ; call rbx
0xffffff800089426e : sbb byte ptr [rcx + rcx*4 - 0x12], cl ; call r15
0xffffff80005398b4 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov rdx, r14 ; call rax
0xffffff80007a73a2 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, r15 ; call rcx
0xffffff80004cff26 : sbb byte ptr [rcx + rcx*4 - 0x3d], cl ; call 0xffffff80004fc1e6
0xffffff800076d8d2 : sbb byte ptr [rcx + rcx*4 - 1], cl ; call 0xffffff8000392937
0xffffff8000901bcb : sbb byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, r15 ; call rcx
0xffffff80003464d6 : sbb byte ptr [rcx + rsi], cl ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80004b410e : sbb byte ptr [rcx - 0x3fceafb9], cl ; pop rbp ; ret
0xffffff800055eeb3 : sbb byte ptr [rcx - 0x73], cl ; jbe 0xffffff800055eed5 ; mov rdx, qword ptr [rbp - 0x50] ; call rcx
0xffffff800055fc50 : sbb byte ptr [rcx - 0x73], cl ; jbe 0xffffff800055fc72 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff80007914e1 : sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r8 + 0x29], r9b ; ret
0xffffff8000326c59 : sbb byte ptr [rcx - 0x75], cl ; pop rsi ; and byte ptr [rax + 0x39], cl ; ret
0xffffff80007107b4 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; and al, ch ; ret 0x9fd8
0xffffff80007d258e : sbb byte ptr [rcx - 0x75], cl ; sbb bl, r13b ; or ecx, dword ptr [rax - 0x77] ; ret
0xffffff8000326c58 : sbb byte ptr [rcx - 0x75], r9b ; pop rsi ; and byte ptr [rax + 0x39], cl ; ret
0xffffff8000641fa4 : sbb byte ptr [rcx - 0x77], cl ; pop rsi ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007e26b3 : sbb byte ptr [rcx - 0x7d], al ; ret 0x75fc
0xffffff80003498da : sbb byte ptr [rcx - 0x8992bbb], cl ; ret
0xffffff80002da3b1 : sbb byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff800048cc1d : sbb byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800062e47b : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000891d5a : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov rsi, rdx ; pop rbp ; jmp rax
0xffffff80008af337 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002db384 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; shl rax, 0xc ; pop rbp ; ret
0xffffff8000795f38 : sbb byte ptr [rcx], al ; int1 ; mov dword ptr [rdi], ecx ; xor eax, eax ; pop rbp ; ret
0xffffff800065c199 : sbb byte ptr [rcx], al ; ret 0x2deb
0xffffff80007bd47d : sbb byte ptr [rcx], bh ; ret
0xffffff80005aff21 : sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff80006569b3 : sbb byte ptr [rcx], bh ; ret 0x872
0xffffff80003c5763 : sbb byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x8b48
0xffffff80003c5770 : sbb byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xd86b
0xffffff8000448d2c : sbb byte ptr [rcx], ch ; ret 0x5389
0xffffff80005be173 : sbb byte ptr [rcx], ch ; ret 0x894c
0xffffff80008aa846 : sbb byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff8000291b1f : sbb byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000271259 : sbb byte ptr [rcx], cl ; ret
0xffffff8000657834 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800083211f : sbb byte ptr [rcx], dh ; ret 0x8a41
0xffffff800083239f : sbb byte ptr [rcx], dh ; ret 0x8a42
0xffffff80002d0f21 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret
0xffffff8000252ca8 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0xffffff800033db80 : sbb byte ptr [rcx], dh ; sal dh, cl ; ret
0xffffff80005c17a0 : sbb byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call rcx
0xffffff80006569b2 : sbb byte ptr [rcx], dil ; ret 0x872
0xffffff80007bd47c : sbb byte ptr [rcx], r15b ; ret
0xffffff80003a8d6c : sbb byte ptr [rdi + 0xd], bh ; call rax
0xffffff8000858a3a : sbb byte ptr [rdi + rax + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007c32e6 : sbb byte ptr [rdi], cl ; mov bh, 0x53 ; adc cl, byte ptr [rax - 0x7d] ; ret
0xffffff80005aff1d : sbb byte ptr [rdi], cl ; mov dh, 0x51 ; sbb byte ptr [rcx], bh ; ret 0x850f
0xffffff8000793f1a : sbb byte ptr [rdi], cl ; ror dword ptr [rcx - 0x7cb7ebad], 1 ; ret
0xffffff8000792dd3 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd89
0xffffff800084424d : sbb byte ptr [rdi], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000566d57 : sbb byte ptr [rdi], dl ; call 0xffffff8000393045
0xffffff8000614019 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000538d89 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80008176a1 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a24a4 : sbb byte ptr [rdx], dl ; ret 0x48ff
0xffffff8000780ea4 : sbb byte ptr [rip - 0x76b70003], cl ; ret
0xffffff80006c0d7e : sbb byte ptr [rip - 0x7cfff100], al ; ret
0xffffff80006687b4 : sbb byte ptr [rsi + 0x4c], cl ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xffffff80007b4a69
0xffffff800063b444 : sbb byte ptr [rsi - 0x76b7ffe9], dl ; ret
0xffffff80006c83a2 : sbb byte ptr [rsi - 0x77], ah ; jo 0xffffff80006c83d7 ; xor eax, eax ; pop rbp ; ret
0xffffff80004f66ef : sbb byte ptr [rsi - 0x77], ah ; ret 0xc166
0xffffff80004f67b0 : sbb byte ptr [rsi - 0x77], r12b ; ret 0xc166
0xffffff80006c83a1 : sbb byte ptr [rsi - 0x77], spl ; jo 0xffffff80006c83d8 ; xor eax, eax ; pop rbp ; ret
0xffffff8000311354 : sbb byte ptr [rsi - 9], ah ; ret
0xffffff80007fcaac : sbb byte ptr [rsi], 0x29 ; add byte ptr [rbp - 0x12], dh ; xor eax, eax ; pop rbp ; ret
0xffffff8000543b67 : sbb byte ptr [rsi], cl ; mov rdi, r12 ; mov rsi, rbx ; call r14
0xffffff8000757af8 : sbb byte ptr [rsp + rax + 0x40], ah ; mov rsi, rbx ; call r15
0xffffff80008be414 : sbb byte ptr [rsp + rdi*8 + 0x5dc031ff], cl ; ret
0xffffff80008f5ca8 : sbb byte ptr [rsp], bl ; add byte ptr [rax - 1], cl ; ret
0xffffff8000770d7c : sbb ch, ah ; cmp eax, dword ptr [rax] ; call 0xffffff8000392a47
0xffffff800033cdc2 : sbb ch, bh ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800078034a : sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002bc8b6 : sbb ch, bh ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff800065fd32 : sbb ch, bl ; ret
0xffffff80008b0162 : sbb ch, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005be734 : sbb cl, bh ; mov ah, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003ad750 : sbb cl, byte ptr [rax + 0x29] ; ret
0xffffff800031823b : sbb cl, byte ptr [rax + 0x31] ; ret 0x8548
0xffffff80003cb241 : sbb cl, byte ptr [rax + 0x74db8418] ; and dword ptr [rax - 1], ecx ; ret 0xff48
0xffffff80007ebed7 : sbb cl, byte ptr [rax + 1] ; ret 0x148
0xffffff8000289b6c : sbb cl, byte ptr [rax + 1] ; ret 0x8949
0xffffff8000414252 : sbb cl, byte ptr [rax - 0x73] ; mov byte ptr [rax], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0xffffff80008dad55 : sbb cl, byte ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret
0xffffff800057d27b : sbb cl, byte ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0xb908
0xffffff800076423b : sbb cl, byte ptr [rax - 0x77] ; ret 0x4890
0xffffff8000414263 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8348
0xffffff800029d0ea : sbb cl, byte ptr [rax - 0x7d] ; ret
0xffffff800083250d : sbb cl, byte ptr [rax - 0x7d] ; ret 0x8404
0xffffff80007726dc : sbb cl, byte ptr [rax - 0x7f] ; ret
0xffffff80002ea4a4 : sbb cl, byte ptr [rax - 1] ; ret
0xffffff800057486d : sbb cl, byte ptr [rax - 1] ; ret 0x274
0xffffff80007ad0db : sbb cl, byte ptr [rax - 1] ; ret 0x8348
0xffffff80004f8ff5 : sbb cl, byte ptr [rax - 1] ; ret 0x8349
0xffffff80008ec5a8 : sbb cl, byte ptr [rax - 1] ; ret 0x894c
0xffffff8000529307 : sbb cl, byte ptr [rax - 1] ; ret 0xb60f
0xffffff8000264589 : sbb cl, byte ptr [rax - 1] ; ret 0xdb84
0xffffff800041df46 : sbb cl, byte ptr [rax - 1] ; ret 0xff48
0xffffff8000284cdc : sbb cl, byte ptr [rbx + 0x1043154] ; ret 0x8b48
0xffffff800058cf07 : sbb cl, byte ptr [rbx - 0x14373] ; call rbx
0xffffff8000507772 : sbb cl, byte ptr [rbx - 0x193eb7cd] ; add al, 0xe8 ; ret 0xd903
0xffffff80008bb6d8 : sbb cl, byte ptr [rcx + 0x3d8d48c3] ; ret
0xffffff80004a0c8a : sbb cl, byte ptr [rcx + 0x67] ; add byte ptr [rax - 0x77], cl ; ret 0xf631
0xffffff80005784a5 : sbb cl, byte ptr [rcx - 1] ; ret
0xffffff800081dff2 : sbb cl, byte ptr [rsi - 0xd] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006539bb : sbb cl, byte ptr [rsi] ; mov rdi, rbx ; mov rsi, r15 ; call qword ptr [rax]
0xffffff80007d3235 : sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004a2402 : sbb dh, bh ; pop rbp ; ret
0xffffff80004ba4da : sbb dh, bh ; ret
0xffffff80002a08e2 : sbb dh, byte ptr [rbp - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039a0a8 : sbb dh, byte ptr [rbp] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006b25a6 : sbb dh, byte ptr [rcx] ; imul al ; ret 0xe775
0xffffff80005f4467 : sbb dh, byte ptr [rcx] ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, edi ; call rax
0xffffff80007f5ed2 : sbb dh, byte ptr [rdx - 8] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000484bbe : sbb dh, dh ; ret
0xffffff800059e7d7 : sbb dh, dh ; ret 0x7480
0xffffff8000621849 : sbb dh, dh ; ret 0x7520
0xffffff80005c29a7 : sbb dh, dh ; ret 0xf01
0xffffff8000807d42 : sbb dl, bh ; pop rbp ; ret
0xffffff800060627a : sbb dl, bh ; push rcx ; add byte ptr [rax - 0x77], cl ; ret 0x5ae8
0xffffff800056cd90 : sbb dl, bl ; dec dword ptr [rbx - 0x7cb7078d] ; ret
0xffffff800065ea10 : sbb dl, bl ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff8000356232 : sbb dl, byte ptr [rbp - 0x76be0004] ; ret 0x8545
0xffffff80003c7f02 : sbb dl, byte ptr [rbx + 0x66] ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000643602 : sbb dl, byte ptr [rbx - 0x37] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002a2b95 : sbb dword ptr [rax + 0x39], ecx ; ret
0xffffff80002ff6d6 : sbb dword ptr [rax + 0x39], ecx ; ret 0x6a74
0xffffff80004a5679 : sbb dword ptr [rax + 0x48000000], -0x7f ; ret
0xffffff80007047e5 : sbb dword ptr [rax + 5], 0 ; add byte ptr [rcx + 0x39], al ; ret 0xf44
0xffffff80002a6dd9 : sbb dword ptr [rax - 0x3ca30000], eax ; pop rbp ; ret
0xffffff8000738946 : sbb dword ptr [rax - 0x77], ecx ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007a99b9 : sbb dword ptr [rax - 0x77], ecx ; ret 0x8348
0xffffff800054748c : sbb dword ptr [rax - 0x7d], ecx ; ret
0xffffff80002c2252 : sbb dword ptr [rax - 0x7f], ecx ; ret
0xffffff80004d1b77 : sbb dword ptr [rax - 1], ecx ; ret
0xffffff800073abf1 : sbb dword ptr [rax - 1], ecx ; ret 0x4eb
0xffffff800082db72 : sbb dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff80006e4bea : sbb dword ptr [rax - 1], ecx ; ret 0xff48
0xffffff80002daf04 : sbb dword ptr [rax], 0x5d000003 ; ret
0xffffff8000398dd2 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800048ffe9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005a4891 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000766735 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007c1dde : sbb dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0xc8 ; ret
0xffffff80005244da : sbb dword ptr [rax], eax ; add cl, ch ; ret 0xf
0xffffff8000631e82 : sbb dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800085263a : sbb dword ptr [rax], eax ; call qword ptr [rax + 0x2a0]
0xffffff8000852355 : sbb dword ptr [rax], eax ; jmp 0xffffff800085238a
0xffffff8000793d31 : sbb dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000881240 : sbb dword ptr [rax], eax ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000859b87 : sbb dword ptr [rax], eax ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff8000859ba0 : sbb dword ptr [rax], eax ; pop rbp ; jmp rax
0xffffff800090ab85 : sbb dword ptr [rax], eax ; ret
0xffffff800066d483 : sbb dword ptr [rax], edx ; ret 0x83ff
0xffffff80004c6361 : sbb dword ptr [rbx + 0x6538d81d], ecx ; add bh, bh ; ret
0xffffff80007e0ef9 : sbb dword ptr [rbx + rdi*4 - 1], -0x77 ; ret
0xffffff8000373bd1 : sbb dword ptr [rcx - 0x3e912615], esp ; ret
0xffffff800044c847 : sbb dword ptr [rcx - 0x75], eax ; xchg al, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xe72
0xffffff8000885075 : sbb dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax - 0x77], r9b ; ret 0x1f0f
0xffffff80002851fe : sbb dword ptr [rcx - 0x7f], eax ; in eax, 0xff ; jmp rax
0xffffff8000b3d811 : sbb dword ptr [rcx - 0x7f], eax ; ret 0xa0d1
0xffffff80008af9d6 : sbb dword ptr [rcx - 1], ecx ; ret 0x8348
0xffffff800048cb93 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000635c3e : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; mov bl, r10b ; mov rdx, r8 ; jmp 0xffffff8000635c64
0xffffff80003c84ab : sbb dword ptr [rcx], ebp ; jmp 0xffffff80003c98b3
0xffffff800074a3de : sbb dword ptr [rcx], ecx ; ret 0x1488
0xffffff8000662dd5 : sbb dword ptr [rcx], edi ; ret
0xffffff800052b346 : sbb dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff80006784d3 : sbb dword ptr [rdi + 0x4b], eax ; add byte ptr [rax - 0x77], cl ; ret 0x1e8
0xffffff80005720fe : sbb dword ptr [rdi + rcx - 0x4a], eax ; ret
0xffffff800052f761 : sbb dword ptr [rdx], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000772623 : sbb dword ptr [rdx], ecx ; ret 0xe8ff
0xffffff80008637fe : sbb dword ptr [rip + 0x415b1000], ebp ; pop rsi ; pop rbp ; ret
0xffffff8000658a2c : sbb dword ptr [rip - 0x173fcf00], esi ; push 0x5a ; ret
0xffffff8000653b28 : sbb dword ptr [rsi], ecx ; mov rdi, r14 ; mov rsi, rbx ; call qword ptr [rax]
0xffffff800090ab84 : sbb dword ptr ds:[rax], eax ; ret
0xffffff8000491b44 : sbb eax, 0x2bffffc3 ; ret
0xffffff8000743e09 : sbb eax, 0x34aa32 ; nop ; mov edi, dword ptr [rbx] ; call rcx
0xffffff80007f9a12 : sbb eax, 0x358d4800 ; ret
0xffffff80007d40ed : sbb eax, 0x3605be ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d24a2 : sbb eax, 0x362209 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076eab8 : sbb eax, 0x36fdd7 ; call 0xffffff8000393048
0xffffff8000618548 : sbb eax, 0x3d830000 ; ret 0x50c4
0xffffff8000875937 : sbb eax, 0x415b0000 ; pop rsi ; pop rbp ; ret
0xffffff8000852c22 : sbb eax, 0x415b0029 ; pop rsi ; pop rbp ; ret
0xffffff80002592ed : sbb eax, 0x4388fb24 ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff8000258fb5 : sbb eax, 0x4388fd24 ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff80005f4050 : sbb eax, 0x478b4100 ; and byte ptr [rax - 1], cl ; ret
0xffffff8000738194 : sbb eax, 0x4b70f00 ; pop r13 ; ret
0xffffff800059dec4 : sbb eax, 0x53b2c7 ; jmp 0xffffff800059dee9
0xffffff800058e5db : sbb eax, 0x5936e8 ; jmp 0xffffff800058e5f2
0xffffff800058e599 : sbb eax, 0x593732 ; jmp 0xffffff800058e5b3
0xffffff800038aba8 : sbb eax, 0x5a75b5 ; pop rbp ; ret
0xffffff800039aacf : sbb eax, 0x5d000003 ; ret
0xffffff80008d1827 : sbb eax, 0x5d00265c ; ret
0xffffff8000895127 : sbb eax, 0x5d002a1c ; ret
0xffffff8000885ff7 : sbb eax, 0x5d002b0b ; ret
0xffffff8000863167 : sbb eax, 0x5d002d36 ; ret
0xffffff800085d027 : sbb eax, 0x5d002d96 ; ret
0xffffff800028f017 : sbb eax, 0x5d0079d0 ; jmp rax
0xffffff80004f9219 : sbb eax, 0x5d01e083 ; ret
0xffffff8000857ab8 : sbb eax, 0x5d5e415b ; ret
0xffffff80005f6167 : sbb eax, 0x5dc03100 ; ret
0xffffff80005f02ff : sbb eax, 0x5e415b00 ; pop rbp ; ret
0xffffff800050fa0f : sbb eax, 0x5e415bff ; pop rbp ; ret
0xffffff800045435b : sbb eax, 0x606200 ; call qword ptr [rbx + rax*8]
0xffffff8000264da3 : sbb eax, 0x6d1663 ; je 0xffffff8000264df7 ; call rax
0xffffff80006773cb : sbb eax, 0x74d28566 ; sub esp, dword ptr [rsi - 0x3f] ; ret 0x4108
0xffffff8000832810 : sbb eax, 0x7894800 ; pop rbp ; ret
0xffffff8000511203 : sbb eax, 0x81c6ff49 ; ret 0xbdc0
0xffffff80002a6a0f : sbb eax, 0x89000000 ; ret
0xffffff800043188f : sbb eax, 0x89000147 ; ret
0xffffff800040a55f : sbb eax, 0x89000630 ; ret
0xffffff800049c73e : sbb eax, 0x89480000 ; ret
0xffffff8000666365 : sbb eax, 0x89480015 ; ret
0xffffff800066143f : sbb eax, 0x89480016 ; ret
0xffffff8000634d14 : sbb eax, 0x8948f631 ; ret
0xffffff8000605ab7 : sbb eax, 0x8948ffc9 ; ret
0xffffff80007e6c5b : sbb eax, 0x8948ffd1 ; ret
0xffffff80008095ba : sbb eax, 0x894c0000 ; ret
0xffffff80006aea2f : sbb eax, 0x89ffea5a ; ret
0xffffff80008012af : sbb eax, 0x89fff8f5 ; ret
0xffffff80004d898f : sbb eax, 0x89fffdce ; ret
0xffffff80007af3ff : sbb eax, 0x8b00168b ; add al, 0x81 ; pop rbp ; ret
0xffffff80005e9b38 : sbb eax, 0x940ffa39 ; ret
0xffffff80003ab990 : sbb eax, 0xae3d8d48 ; ret
0xffffff80002bad91 : sbb eax, 0xb07c518b ; add esi, esi ; ret 0x7504
0xffffff80005cedba : sbb eax, 0xb9003c84 ; ret 0
0xffffff800062e258 : sbb eax, 0xc0310044 ; pop rbp ; ret
0xffffff80006c8593 : sbb eax, 0xc4834801 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80008dbd78 : sbb eax, 0xd8890001 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008cc315 : sbb eax, 0xd8d4800 ; push rdx ; ret 0x1d
0xffffff80008d17a5 : sbb eax, 0xd8d4800 ; ret 0x1d6d
0xffffff80005ef2e2 : sbb eax, 0xdf894800 ; mov esi, r15d ; call r14
0xffffff8000812507 : sbb eax, 0xe8c03100 ; push rax ; ret 0xffff
0xffffff80007fcbdd : sbb eax, 0xee750029 ; pop rbp ; ret
0xffffff80007fcb5d : sbb eax, 0xee750029 ; xor eax, eax ; pop rbp ; ret
0xffffff80008dac1f : sbb eax, 0xf6ffab84 ; ret
0xffffff80003ea41f : sbb eax, 0xf6fffa8c ; ret
0xffffff8000813668 : sbb eax, 0xf7894800 ; mov rsi, rax ; call rcx
0xffffff8000905ba2 : sbb eax, 0xff480023 ; ret
0xffffff80008f5ace : sbb eax, 0xff480024 ; ret
0xffffff8000b48025 : sbb eax, dword ptr [rax + 0x4436e3] ; jrcxz 0xffffff8000b47fb5 ; ret
0xffffff800072107f : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x5d5e415b], bl ; ret
0xffffff80004b9eb2 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005d6b11 : sbb eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0xffffff800077bd8d : sbb eax, dword ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000858da0 : sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80005f57e6 : sbb eax, dword ptr [rax] ; test rax, rax ; jne 0xffffff80005f57e8 ; pop rbp ; ret
0xffffff80005f57e5 : sbb eax, dword ptr [rax] ; test rax, rax ; jne 0xffffff80005f57e9 ; pop rbp ; ret
0xffffff8000612a03 : sbb eax, dword ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff80007be75e : sbb eax, dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret
0xffffff80008bf865 : sbb eax, dword ptr [rcx - 0x42] ; ret 2
0xffffff80004438c2 : sbb eax, dword ptr [rcx - 0x75] ; xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff800052db61 : sbb eax, dword ptr [rip - 0x7eb70042] ; ret
0xffffff800049e467 : sbb eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002a62bb : sbb eax, eax ; and eax, 1 ; pop rbp ; ret
0xffffff8000622829 : sbb eax, eax ; and eax, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d6fdc : sbb eax, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006531c8 : sbb eax, eax ; or eax, 0x10 ; pop rbp ; ret
0xffffff80006536b8 : sbb eax, eax ; or eax, 0x18 ; pop rbp ; ret
0xffffff8000653be8 : sbb eax, eax ; or eax, 0x20 ; pop rbp ; ret
0xffffff80003c2c62 : sbb eax, eax ; or rax, rcx ; pop rbp ; ret
0xffffff800049f1a4 : sbb eax, eax ; pop rbp ; ret
0xffffff800088504b : sbb eax, ebp ; push qword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004af516 : sbb eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0xffffff8000698d73 : sbb eax, edx ; dec dword ptr [rax + 1] ; ret
0xffffff80004d8821 : sbb ebp, dword ptr [rax + 0x415bffeb] ; pop rsi ; pop rbp ; ret
0xffffff8000852e49 : sbb ebp, dword ptr [rcx] ; add bh, al ; test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rax]
0xffffff8000807b21 : sbb ebp, dword ptr [rdi + 0x6348ffb8] ; ret
0xffffff8000377059 : sbb ebp, dword ptr [rdi + 0x78] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80008635ee : sbb ebp, dword ptr [rip + 0x415b3000] ; pop rsi ; pop rbp ; ret
0xffffff8000558a07 : sbb ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000436d6a : sbb ebp, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000448623 : sbb ebp, esi ; in al, 0xff ; pop rbp ; ret
0xffffff8000760a31 : sbb ebx, dword ptr [rcx - 0x76b7ffff] ; ret
0xffffff80005aeed1 : sbb ebx, dword ptr [rdi - 0x76b70001] ; ret
0xffffff800053648e : sbb ebx, dword ptr [rdx] ; call 0xffffff8000392795
0xffffff80005a202d : sbb ebx, ebp ; add ecx, dword ptr [rax - 1] ; ret
0xffffff80008d8df3 : sbb ebx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000837891 : sbb ebx, edx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039a45b : sbb ecx, dword ptr [rax + 0x29] ; ret
0xffffff8000250a37 : sbb ecx, dword ptr [rax + 0x39] ; ret
0xffffff800049c995 : sbb ecx, dword ptr [rax + 0x63] ; ret
0xffffff8000517e47 : sbb ecx, dword ptr [rax + 1] ; ret 0x8948
0xffffff8000500b50 : sbb ecx, dword ptr [rax - 0x75] ; push rax ; or byte ptr [rsi - 9], ah ; ret 0x1ff
0xffffff800073949c : sbb ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800076e544 : sbb ecx, dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0x45ff
0xffffff800070dff2 : sbb ecx, dword ptr [rax - 0x77] ; ret
0xffffff800071fd8e : sbb ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80008321a5 : sbb ecx, dword ptr [rax - 1] ; ret 0xff49
0xffffff800077264d : sbb ecx, dword ptr [rbx - 0x7eb7efad] ; ret
0xffffff8000b4b83d : sbb ecx, dword ptr [rcx + 0x6bc729df] ; ret 0x8d2e
0xffffff80006ee7c2 : sbb ecx, dword ptr [rcx + 1] ; fisttp qword ptr [rax - 1] ; ret 0x8d48
0xffffff800066d8bc : sbb ecx, dword ptr [rcx] ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800032281f : sbb ecx, eax ; call 0xffffff7fe4c7b336
0xffffff80007b0195 : sbb edi, dword ptr [rax + 0x4b8ff] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002d5fa6 : sbb edi, dword ptr [rcx] ; fbstp tbyte ptr [rax + rcx - 1] ; ret 0xc031
0xffffff800075f121 : sbb edi, dword ptr [rdi] ; ret
0xffffff80007bb621 : sbb edi, dword ptr [rdx - 0x43] ; dec dword ptr [rax - 1] ; ret
0xffffff8000786e11 : sbb edi, dword ptr [rsi - 0x76b70004] ; ret
0xffffff80008670f2 : sbb edi, edi ; dec dword ptr [rax + 0x5e415bd8] ; pop rbp ; ret
0xffffff800078b3ca : sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800033c6bd : sbb edi, edi ; ret
0xffffff80008c2446 : sbb edi, edi ; ret 0xc749
0xffffff8000366f20 : sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049d6c9 : sbb edx, -0x1d ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000329071 : sbb edx, dword ptr [rdi + 0x415b0006] ; pop rsi ; pop rbp ; ret
0xffffff80006b701a : sbb edx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000650283 : sbb edx, esp ; ret
0xffffff800042b911 : sbb esi, dword ptr [rax - 0xa] ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff80003506a1 : sbb esi, dword ptr [rbx - 0x76b70001] ; ret
0xffffff80005c0af3 : sbb esi, dword ptr [rcx] ; ret 0xf231
0xffffff80007dc013 : sbb esi, dword ptr [rcx] ; test byte ptr [rcx + rcx*4 - 1], 0x48 ; mov edx, ebx ; call rax
0xffffff80006b8dad : sbb esi, ecx ; dec dword ptr [rax + 1] ; ret
0xffffff800037441d : sbb esi, edx ; shl dword ptr [rdx - 0x36], 0xc1 ; ret
0xffffff80003f0a1c : sbb esi, esi ; ret
0xffffff8000762cd3 : sbb esi, esi ; ret 0x49ff
0xffffff8000660191 : sbb esp, eax ; ret 0x48ff
0xffffff800065fd91 : sbb esp, esp ; ret 0x49ff
0xffffff8000738945 : sbb qword ptr [rax - 0x77], rcx ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000447156 : sbb r11b, r13b ; or al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800044a293 : sbb r12b, dil ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085cf2f : sbb r8, qword ptr [r8] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800079dbba : sbb r8b, byte ptr [r14*2 + 0x14478b03] ; pop rbp ; ret
0xffffff80006d6fdb : sbb r8d, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005f02fe : sbb rax, 0x5e415b00 ; pop rbp ; ret
0xffffff800085cccf : sbb rax, qword ptr [r8] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff800085ccef : sbb rax, qword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff80003c2c61 : sbb rax, rax ; or rax, rcx ; pop rbp ; ret
0xffffff800073949b : sbb rcx, qword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000498dfe : scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add bh, bh ; ret
0xffffff8000682a52 : scasb al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800059311b : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800082182b : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0xffffff800043e7d6 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add dh, bh ; ret 0xb60f
0xffffff8000802a75 : scasb al, byte ptr [rdi] ; clc ; pop rbp ; ret
0xffffff80008d17ed : scasb al, byte ptr [rdi] ; cmp dword ptr [rsi], esp ; add byte ptr [rax], bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ad5ce : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x39] ; ret
0xffffff80007ad194 : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a97d6 : scasb al, byte ptr [rdi] ; dec dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007420ae : scasb al, byte ptr [rdi] ; fdivr st(7) ; call 0xffffff80007fe356
0xffffff80008e6ced : scasb al, byte ptr [rdi] ; in al, 0x24 ; add byte ptr [rax + 0x5b], ah ; pop r14 ; pop rbp ; ret
0xffffff80006bcdae : scasb al, byte ptr [rdi] ; jl 0xffffff80006bcdc6 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006024f0 : scasb al, byte ptr [rdi] ; jmp 0xffffff80006024b7
0xffffff800060311d : scasb al, byte ptr [rdi] ; jmp 0xffffff80006030e4
0xffffff80003c364e : scasb al, byte ptr [rdi] ; jo 0xffffff80003c3654 ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80007bc526 : scasb al, byte ptr [rdi] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80003cc59e : scasb al, byte ptr [rdi] ; mov dword ptr [rdi], 0x89c08500 ; ret
0xffffff800081741e : scasb al, byte ptr [rdi] ; mov eax, 0x89480001 ; ret
0xffffff80002cd49e : scasb al, byte ptr [rdi] ; or al, 0xfc ; inc dword ptr [rbx + 0x35] ; ret
0xffffff800065f1fe : scasb al, byte ptr [rdi] ; out dx, eax ; ret 0xebff
0xffffff800088e2ed : scasb al, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004acab1 : scasb al, byte ptr [rdi] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007f3014 : scasb al, byte ptr [rdi] ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007336de : scasb al, byte ptr [rdi] ; push rbp ; add byte ptr [rax], al ; jmp 0xffffff800072f9ad
0xffffff8000391319 : scasb al, byte ptr [rdi] ; push rbp ; clc ; add rsp, 8 ; pop rbp ; ret
0xffffff80002a2213 : scasb al, byte ptr [rdi] ; ret
0xffffff80007b8326 : scasb al, byte ptr [rdi] ; ret 0x37
0xffffff80005a65ee : scasb al, byte ptr [rdi] ; ret 0xffde
0xffffff80008180ed : scasb al, byte ptr [rdi] ; sal byte ptr [rcx], 1 ; add byte ptr [rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008635ed : scasb al, byte ptr [rdi] ; sbb ebp, dword ptr [rip + 0x415b3000] ; pop rsi ; pop rbp ; ret
0xffffff800077df7e : scasb al, byte ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bc4af : scasb al, byte ptr [rdi] ; str word ptr [rax - 0x77] ; ret
0xffffff800089bf6e : scasb al, byte ptr [rdi] ; sub dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000860eed : scasb al, byte ptr [rdi] ; sub eax, 0x415b5000 ; pop rsi ; pop rbp ; ret
0xffffff800066241c : scasb al, byte ptr [rdi] ; sub eax, 0xbd2ce800 ; ret 0xebff
0xffffff800082a551 : scasb al, byte ptr [rdi] ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff80003606ed : scasd eax, dword ptr [rdi] ; adc dword ptr [rbp], -0x77 ; ret
0xffffff8000629039 : scasd eax, dword ptr [rdi] ; add byte ptr [r8 + 0x9417501], r13b ; ret 0xc2f6
0xffffff80005f9729 : scasd eax, dword ptr [rdi] ; add dword ptr [rcx], edi ; ret
0xffffff8000366eec : scasd eax, dword ptr [rdi] ; add eax, 0x6c5b16 ; pop rbp ; ret
0xffffff8000366ecc : scasd eax, dword ptr [rdi] ; add eax, 0x6c5b36 ; pop rbp ; ret
0xffffff8000843186 : scasd eax, dword ptr [rdi] ; add eax, 0x970f0000 ; ret 0x9d8b
0xffffff80007cf22b : scasd eax, dword ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000762e2d : scasd eax, dword ptr [rdi] ; cmc ; ret 0x31ff
0xffffff8000506a9d : scasd eax, dword ptr [rdi] ; cmp byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800089fd7a : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ror byte ptr [r8 + 1], 1 ; ret
0xffffff80007dc7a5 : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000349996 : scasd eax, dword ptr [rdi] ; enter -0x3eb8, -0x15 ; or al, 0x31 ; ret
0xffffff800039f17a : scasd eax, dword ptr [rdi] ; enter -0x76b8, 0xa ; pop rbp ; ret
0xffffff80003b4485 : scasd eax, dword ptr [rdi] ; fadd dword ptr [rcx] ; ret
0xffffff80003b42d3 : scasd eax, dword ptr [rdi] ; fiadd dword ptr [rcx - 0x7f] ; ret
0xffffff800036bc30 : scasd eax, dword ptr [rdi] ; fmul dword ptr [rax - 0x3f] ; jmp 0xffffff800036bc77
0xffffff80003c3c4c : scasd eax, dword ptr [rdi] ; fmul dword ptr [rax - 0x3f] ; jmp 0xffffff80003c3c61
0xffffff800039458c : scasd eax, dword ptr [rdi] ; fmul dword ptr [rax - 1] ; ret
0xffffff80008d0ebe : scasd eax, dword ptr [rdi] ; idiv edi ; ret 0xf875
0xffffff80006127bd : scasd eax, dword ptr [rdi] ; jae 0xffffff80006127b9 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000603117 : scasd eax, dword ptr [rdi] ; mov al, 0xff ; lea r14, [r14 + r13*4] ; jmp 0xffffff80006030ea
0xffffff80003b2bd3 : scasd eax, dword ptr [rdi] ; mov byte ptr [rcx + rax - 0x18], 0xeb ; sub al, 0x89 ; ret
0xffffff80003b2e1a : scasd eax, dword ptr [rdi] ; mov cl, 0xe0 ; add cl, byte ptr [rax + 1] ; ret 0x8d4c
0xffffff80005c679d : scasd eax, dword ptr [rdi] ; or ch, 0xff ; jmp 0xffffff80005c67e2
0xffffff800076162d : scasd eax, dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; ret
0xffffff800053d121 : scasd eax, dword ptr [rdi] ; pop rcx ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800079a1b3 : scasd eax, dword ptr [rdi] ; push rsi ; ret
0xffffff800028602d : scasd eax, dword ptr [rdi] ; ret
0xffffff80003af434 : scasd eax, dword ptr [rdi] ; ret 0x144
0xffffff800040e7b0 : scasd eax, dword ptr [rdi] ; ret 0x148
0xffffff8000b483e0 : scasd eax, dword ptr [rdi] ; ret 0x14c
0xffffff800089ab0d : scasd eax, dword ptr [rdi] ; ret 0x29
0xffffff80002d9465 : scasd eax, dword ptr [rdi] ; ret 0x2948
0xffffff8000302e2d : scasd eax, dword ptr [rdi] ; ret 0x3145
0xffffff800074114d : scasd eax, dword ptr [rdi] ; ret 0x39
0xffffff80003b479d : scasd eax, dword ptr [rdi] ; ret 0x41f6
0xffffff80007eae7a : scasd eax, dword ptr [rdi] ; ret 0x6348
0xffffff800076bbc4 : scasd eax, dword ptr [rdi] ; ret 0x85ff
0xffffff8000716756 : scasd eax, dword ptr [rdi] ; ret 0x8948
0xffffff80006f0997 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0xffffff8000b412a5 : scasd eax, dword ptr [rdi] ; ret 0x958b
0xffffff80002d667d : scasd eax, dword ptr [rdi] ; ret 0xb
0xffffff8000810887 : scasd eax, dword ptr [rdi] ; ret 0xc031
0xffffff800062b51d : scasd eax, dword ptr [rdi] ; ret 0xc085
0xffffff800054d246 : scasd eax, dword ptr [rdi] ; ret 0xc148
0xffffff8000494965 : scasd eax, dword ptr [rdi] ; ret 0xc3ff
0xffffff80006634e4 : scasd eax, dword ptr [rdi] ; ret 0xf0ff
0xffffff800056667d : scasd eax, dword ptr [rdi] ; ret 0xffe2
0xffffff80004f98c3 : scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 0x63], 1 ; ret 0x8948
0xffffff8000394475 : scasd eax, dword ptr [rdi] ; ror byte ptr [rax - 1], 1 ; ret 0xce89
0xffffff80003b1d6c : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0xefe9
0xffffff80007044b5 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], 1 ; ret 0x8548
0xffffff80005d12c3 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], 1 ; ret 0x8949
0xffffff80003c1127 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax - 0x46] ; ret
0xffffff80003038fe : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax - 0x47] ; ret
0xffffff8000378fed : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 1], 1 ; ret 0xc089
0xffffff80002d46bf : scasd eax, dword ptr [rdi] ; sahf ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80004aabc7 : scasd eax, dword ptr [rdi] ; sbb al, 0x5d ; ret
0xffffff800062e58d : scasd eax, dword ptr [rdi] ; sbb al, byte ptr [rax + rax + 0x5d] ; ret
0xffffff80005f6166 : scasd eax, dword ptr [rdi] ; sbb eax, 0x5dc03100 ; ret
0xffffff80005f02fd : scasd eax, dword ptr [rdi] ; sbb rax, 0x5e415b00 ; pop rbp ; ret
0xffffff8000692a23 : scasd eax, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80006636fd : scasd eax, dword ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0x41ff
0xffffff800072e06d : scasd eax, dword ptr [rdi] ; test al, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007c97e4 : scasd eax, dword ptr [rdi] ; xchg dword ptr [rcx], esp ; add al, ch ; ret
0xffffff8000603116 : scasw ax, word ptr [rdi] ; mov al, 0xff ; lea r14, [r14 + r13*4] ; jmp 0xffffff80006030eb
0xffffff800030fd7d : seta al ; movzx eax, al ; pop rbp ; ret
0xffffff80005849e3 : setae al ; and al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff800031ebf8 : setae al ; movzx eax, al ; pop rbp ; ret
0xffffff800058478e : setae cl ; and cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff800058fea7 : setae dl ; jmp 0xffffff800058fedd
0xffffff800058fea6 : setae dl ; jmp 0xffffff800058fede
0xffffff8000338283 : setb al ; movzx eax, al ; pop rbp ; ret
0xffffff800082cbb0 : setb al ; pop rbp ; ret
0xffffff80003ab795 : setb dl ; movzx eax, dl ; pop rbp ; ret
0xffffff800034b9b0 : setbe al ; movzx eax, al ; pop rbp ; ret
0xffffff800058fe8b : setbe dl ; jmp 0xffffff800058fedd
0xffffff800058fe8a : setbe dl ; jmp 0xffffff800058fede
0xffffff8000882a04 : sete al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000888fca : sete al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800039999e : sete al ; movzx eax, al ; mov dword ptr [rsi], eax ; pop rbp ; ret
0xffffff8000269848 : sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800058ae43 : sete al ; movzx edx, al ; inc edx ; jmp 0xffffff800058ae61
0xffffff80007d4f31 : sete al ; or al, cl ; movzx eax, al ; pop rbp ; ret
0xffffff8000717098 : sete al ; pop rbp ; ret
0xffffff8000891c6a : sete al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059d6ed : sete cl ; or cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff8000316469 : sete dl ; jmp 0xffffff8000316474
0xffffff8000318ce3 : sete dl ; jmp 0xffffff8000318d43
0xffffff8000318ce2 : sete dl ; jmp 0xffffff8000318d44
0xffffff800031978c : sete dl ; jmp 0xffffff8000319795
0xffffff800031978b : sete dl ; jmp 0xffffff8000319796
0xffffff8000319af0 : sete dl ; jmp 0xffffff8000319af9
0xffffff8000319aef : sete dl ; jmp 0xffffff8000319afa
0xffffff8000441133 : sete dl ; jmp 0xffffff800044115d
0xffffff800058fe67 : sete dl ; jmp 0xffffff800058fedd
0xffffff800058fe66 : sete dl ; jmp 0xffffff800058fede
0xffffff80008d7301 : sete dl ; movzx eax, dl ; ret
0xffffff800066f1c1 : sete r8b ; movzx eax, al ; pop rbp ; ret
0xffffff80002b72ef : setg al ; movzx eax, al ; pop rbp ; ret
0xffffff800081e970 : setg al ; pop rbp ; ret
0xffffff80005f49a8 : setg dl ; jmp 0xffffff80005f49b6
0xffffff8000260202 : setl dl ; jmp 0xffffff8000260226
0xffffff8000260201 : setl dl ; jmp 0xffffff8000260227
0xffffff800068f40d : setne ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083022d : setne al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006d4998 : setne al ; movzx eax, al ; add eax, eax ; pop rbp ; ret
0xffffff800026626c : setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80008176f4 : setne al ; pop rbp ; ret
0xffffff800081a227 : setne al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008aad60 : setne bl ; mov al, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000445fa3 : setne cl ; and cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff800031643e : setne dl ; jmp 0xffffff8000316454
0xffffff800058fe74 : setne dl ; jmp 0xffffff800058fedd
0xffffff800058fe73 : setne dl ; jmp 0xffffff800058fede
0xffffff80008982e3 : setne dl ; jmp 0xffffff80008982ec
0xffffff800079b8a0 : setne dl ; movzx edx, dl ; mov rsi, r15 ; call rcx
0xffffff800085c31e : seto bh ; ret
0xffffff80002a14be : seto byte ptr [rax - 0x75] ; jnp 0xffffff80002a14d2 ; call qword ptr [rbx]
0xffffff8000802a74 : sfence ; pop rbp ; ret
0xffffff800074db30 : shl al, 0x83 ; ret
0xffffff80007164c0 : shl byte ptr [r14 - 0x39], 1 ; ret 0xe
0xffffff800070c99e : shl byte ptr [r14 - 0x75], 1 ; xor byte ptr [rsi - 0x77], spl ; ret 0x8b41
0xffffff8000311774 : shl byte ptr [rax + 0x44], 0x89 ; ret 0x1174
0xffffff80005fd8c7 : shl byte ptr [rax + rcx*2], 0x89 ; ret
0xffffff80003c9fdf : shl byte ptr [rax], 0x83 ; ret
0xffffff8000276414 : shl byte ptr [rax], 0x83 ; ret 0x75fc
0xffffff80002a5d11 : shl byte ptr [rax], 0x8b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8504
0xffffff80003a426d : shl byte ptr [rax], 0xc8 ; movzx eax, al ; pop rbp ; ret
0xffffff800039a6cf : shl byte ptr [rax], 1 ; ret
0xffffff80004402e7 : shl byte ptr [rax], cl ; ret 0x8545
0xffffff80005f49da : shl byte ptr [rax], cl ; ret 0xb60f
0xffffff80007d1864 : shl byte ptr [rbx + rbp + 0xfd03900], 1 ; ret 0x4389
0xffffff80002c02fb : shl byte ptr [rcx + rax], 1 ; movzx eax, al ; pop rbp ; ret
0xffffff80005d1570 : shl byte ptr [rcx], 1 ; ret 0x8941
0xffffff800078a899 : shl byte ptr [rcx], 1 ; ret 0x8b41
0xffffff80003736a3 : shl byte ptr [rcx], cl ; ret 0x3144
0xffffff8000411762 : shl byte ptr [rcx], cl ; ret 0xfe83
0xffffff8000858e57 : shl byte ptr [rdi + 0x2d83f0ff], 0x3e ; ret
0xffffff80008b8227 : shl byte ptr [rdi], 1 ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff800050ffd1 : shl byte ptr [rdi], cl ; add bh, bh ; ret
0xffffff80003c315f : shl byte ptr [rdx], 1 ; push rbp ; ror byte ptr [rax], 1 ; ret 0xdb85
0xffffff800071ea25 : shl byte ptr [rsi + 0x41], 1 ; mov dword ptr [rcx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000720f3f : shl byte ptr [rsi + 0xf], 0x45 ; ret 0x4898
0xffffff80007164c1 : shl byte ptr [rsi - 0x39], 1 ; ret 0xe
0xffffff800071c6e8 : shl byte ptr [rsi - 0x3f], cl ; ret 0x6608
0xffffff800070c99f : shl byte ptr [rsi - 0x75], 1 ; xor byte ptr [rsi - 0x77], spl ; ret 0x8b41
0xffffff800081ac6c : shl byte ptr [rsi - 0x76b70001], 1 ; ret
0xffffff8000766d7a : shl byte ptr [rsi - 0x77], 0x45 ; ret 0x7589
0xffffff80004ed8af : shl byte ptr [rsi - 0x77], 0x4d ; ret 0x8b44
0xffffff80004ee4a6 : shl byte ptr [rsi - 0x77], 0x4d ; ret 0x8b4c
0xffffff80004edb08 : shl byte ptr [rsi - 0x77], 0x7d ; ret 0xa74
0xffffff800059a7c6 : shl byte ptr [rsi - 0x77], 1 ; ret 0xf66
0xffffff800080354e : shl byte ptr [rsi - 0x7d], 0x4c ; ret 0x118
0xffffff800049ebdb : shl byte ptr [rsi - 0x7d], 0x4c ; ret 0x418
0xffffff8000589a62 : shl byte ptr [rsi - 0x7d], 0xe1 ; add cl, byte ptr [rax + 0xf] ; ret 0x8566
0xffffff80008cb319 : shl byte ptr [rsi], 0 ; js 0xffffff80008cb380 ; ret
0xffffff8000547995 : shl byte ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000547805 : shl byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005666b3 : shl dl, 0xff ; jmp 0xffffff8000566721
0xffffff8000566f68 : shl dl, 0xff ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800048981c : shl dword ptr [rax + rax + 0x48], 0xff ; ret
0xffffff80002ee1a0 : shl dword ptr [rax], 0x83 ; ret 0x75fe
0xffffff80004b3584 : shl dword ptr [rax], 0x85 ; sal byte ptr [rbp - 0x2a], cl ; pop rbp ; ret
0xffffff8000445fa5 : shl dword ptr [rax], 0xc1 ; movzx eax, cl ; pop rbp ; ret
0xffffff80006c6775 : shl dword ptr [rax], 0xf ; ret 0x508d
0xffffff8000b3c445 : shl dword ptr [rax], 1 ; ret 0x8841
0xffffff8000b3c79b : shl dword ptr [rax], 1 ; ret 0xd200
0xffffff80007f05f7 : shl dword ptr [rbx], 0 ; pop rbp ; ret
0xffffff80008fa6d7 : shl dword ptr [rbx], 1 ; add byte ptr [rcx], bh ; ret
0xffffff800090a80b : shl dword ptr [rbx], 1 ; lock dec dword ptr [rax - 0x77] ; ret
0xffffff80008bf629 : shl dword ptr [rcx - 6], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000813dd0 : shl dword ptr [rcx], 0xd6 ; or esi, ecx ; mov dword ptr [rdi + 0x10], esi ; pop rbp ; ret
0xffffff800036fdeb : shl dword ptr [rcx], cl ; ret
0xffffff800037441f : shl dword ptr [rdx - 0x36], 0xc1 ; ret
0xffffff80003725e3 : shl dword ptr [rdx - 0x36], 0xc1 ; ret 0x441e
0xffffff800090a728 : shl dword ptr [rdx], 1 ; add byte ptr [rax - 1], cl ; ret
0xffffff80007748ab : shl dword ptr [rdx], 1 ; ret 0x41ff
0xffffff80007ba188 : shl dword ptr [rsi + 0xf], 1 ; ret 0x5676
0xffffff80003b7bad : shl dword ptr [rsi - 0x70], 0x8b ; adc bh, bh ; ret 0x502b
0xffffff800049d30d : shl dword ptr [rsi - 0x70], cl ; push rbp ; mov rbp, rsp ; pop rbp ; ret
0xffffff8000389238 : shl dword ptr [rsi - 0x72], cl ; ret
0xffffff800081ed36 : shl dword ptr [rsi - 0x77], 0x4f ; jo 0xffffff800081ed9f ; ret
0xffffff8000720f3c : shl dword ptr [rsi - 0x7b], 1 ; shl byte ptr [rsi + 0xf], 0x45 ; ret 0x4898
0xffffff800089ed2b : shl dword ptr [rsi], 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005478e5 : shl dword ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f05f6 : shl dword ptr cs:[rbx], 0 ; pop rbp ; ret
0xffffff800083c1cf : shl eax, 0x10 ; or rax, rdx ; pop rbp ; ret
0xffffff800025182b : shl eax, 0x12 ; pop rbp ; ret
0xffffff800049eaf2 : shl eax, 0x1f ; sar eax, 0x1f ; xor eax, esi ; pop rbp ; ret
0xffffff8000262b12 : shl eax, 0x20 ; or rax, rcx ; pop rbp ; ret
0xffffff80002db389 : shl eax, 0xc ; pop rbp ; ret
0xffffff800089a426 : shl eax, 0xc ; xor esi, esi ; xor edx, edx ; pop rbp ; jmp r9
0xffffff800074c32e : shl eax, 0xd ; add eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff80008cb137 : shl eax, 2 ; lea eax, [rax + rax*2] ; pop rbp ; ret
0xffffff80002909ab : shl eax, 2 ; mov qword ptr [rdx], rdi ; pop rbp ; ret
0xffffff80002bdce7 : shl eax, 2 ; pop rbp ; ret
0xffffff80002b7ad3 : shl eax, 2 ; test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff80007fe2a9 : shl eax, 3 ; pop rbp ; ret
0xffffff80008172e3 : shl eax, 4 ; mov rax, qword ptr [r8 + rax + 8] ; pop rbp ; ret
0xffffff80002b760d : shl eax, 4 ; pop rbp ; ret
0xffffff80008cb03c : shl eax, 5 ; pop rbp ; ret
0xffffff8000858450 : shl eax, 8 ; add edi, -8 ; jne 0xffffff8000858459 ; pop rbp ; ret
0xffffff80008e5706 : shl eax, 8 ; or rax, rdx ; pop rbp ; ret
0xffffff8000395273 : shl eax, cl ; and eax, dword ptr [rsi + rdx*4] ; pop rbp ; ret
0xffffff800030f5d0 : shl eax, cl ; dec eax ; cdqe ; add rdx, rax ; jmp 0xffffff800030f5ef
0xffffff8000315b9d : shl eax, cl ; dec eax ; cdqe ; add rdx, rax ; jmp 0xffffff8000315bbc
0xffffff800031f276 : shl eax, cl ; dec eax ; cdqe ; pop rbp ; ret
0xffffff80003baee7 : shl eax, cl ; dec rax ; pop rbp ; ret
0xffffff800031f256 : shl eax, cl ; pop rbp ; ret
0xffffff8000387d2f : shl ecx, 4 ; or eax, ecx ; pop rbp ; ret
0xffffff800049e4a4 : shl edi, 0x18 ; or edi, esi ; mov eax, edi ; pop rbp ; ret
0xffffff80003d3d6f : shl edi, 3 ; or edi, eax ; mov eax, edi ; pop rbp ; ret
0xffffff80003a8dab : shl edi, 4 ; mov dword ptr [rax + rdi], esi ; pop rbp ; ret
0xffffff80003a8d8b : shl edi, 4 ; mov eax, dword ptr [rax + rdi] ; pop rbp ; ret
0xffffff80003a833c : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; pop rbp ; ret
0xffffff800039a6b9 : shl edx, 0x20 ; or rax, rdx ; ret
0xffffff8000861d7c : shl edx, 3 ; call 0xffffff800010e085
0xffffff80003a8d6a : shl esi, 0x18 ; mov edi, 0xd ; call rax
0xffffff8000641ed3 : shl esi, 5 ; mov rdi, rbx ; call 0xffffff800010e148
0xffffff800083c1ce : shl rax, 0x10 ; or rax, rdx ; pop rbp ; ret
0xffffff800025182a : shl rax, 0x12 ; pop rbp ; ret
0xffffff8000262b11 : shl rax, 0x20 ; or rax, rcx ; pop rbp ; ret
0xffffff80002db388 : shl rax, 0xc ; pop rbp ; ret
0xffffff80008e5705 : shl rax, 8 ; or rax, rdx ; pop rbp ; ret
0xffffff80003baee6 : shl rax, cl ; dec rax ; pop rbp ; ret
0xffffff800039a6b8 : shl rdx, 0x20 ; or rax, rdx ; ret
0xffffff8000861d7b : shl rdx, 3 ; call 0xffffff800010e086
0xffffff8000641ed2 : shl rsi, 5 ; mov rdi, rbx ; call 0xffffff800010e149
0xffffff80004b84da : shr al, 0 ; in al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065f59a : shr al, 0x10 ; in al, dx ; ret 0x48ff
0xffffff800065518a : shr al, 0x10 ; xchg eax, ebx ; ret
0xffffff8000653498 : shr al, 0x12 ; lodsd eax, dword ptr [rsi] ; ret
0xffffff80006e2638 : shr al, 0x12 ; ret 0xffbb
0xffffff800081c608 : shr al, 0x12 ; ret 0xffff
0xffffff8000657a96 : shr al, 0x14 ; ret
0xffffff80008af565 : shr al, 0x15 ; add edi, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000653792 : shr al, 0x18 ; stosb byte ptr [rdi], al ; ret
0xffffff800065fd30 : shr al, 0x1a ; jmp 0xffffff800065fcfc
0xffffff800067432b : shr al, 0x1f ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe9ff
0xffffff8000668a8a : shr al, 0x20 ; push rdi ; ret 0xebff
0xffffff8000531f85 : shr al, 0x25 ; ret 0xffd5
0xffffff800064e874 : shr al, 0x26 ; cld ; ret
0xffffff80002dea11 : shr al, 0x29 ; ret 0x46
0xffffff8000669d71 : shr al, 0x29 ; ret 0xe9ff
0xffffff8000641f80 : shr al, 0x2a ; ret 0xffc4
0xffffff8000654670 : shr al, 0x2a ; sahf ; ret
0xffffff8000591f7d : shr al, 0x2d ; ret 0xffcf
0xffffff8000621f7c : shr al, 0x2e ; ret 0xffc6
0xffffff800075990c : shr al, 0x2e ; xchg eax, edi ; ret
0xffffff8000671e7b : shr al, 0x2f ; ret
0xffffff800027fc07 : shr al, 0x33 ; mov al, 0x4c ; add cl, ch ; ret
0xffffff8000654e66 : shr al, 0x34 ; xchg eax, esi ; ret
0xffffff8000256805 : shr al, 0x35 ; ret 0x13
0xffffff80005c1f74 : shr al, 0x36 ; ret 0xffcc
0xffffff8000653373 : shr al, 0x37 ; scasb al, byte ptr [rdi] ; ret
0xffffff800086eb71 : shr al, 0x39 ; adc al, byte ptr [rcx] ; add byte ptr [rax - 1], cl ; ret
0xffffff80005d2861 : shr al, 0x39 ; mov esp, 0x3d83ffcb ; ret 0x5503
0xffffff80008517d0 : shr al, 0x3a ; ret
0xffffff800055225f : shr al, 0x3b ; ret 0xffd3
0xffffff8000363bfd : shr al, 0x3d ; jo 0xffffff8000363c47 ; add cl, ch ; ret
0xffffff800065f052 : shr al, 0x48 ; hlt ; ret 0xe8ff
0xffffff800065f360 : shr al, 0x4a ; out dx, al ; ret 0x41ff
0xffffff800065924e : shr al, 0x4c ; push rdx ; ret
0xffffff800066ab5e : shr al, 0x4c ; ret 0x4cff
0xffffff8000663a5b : shr al, 0x4f ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x41ff
0xffffff800057224a : shr al, 0x50 ; ret 0xffd1
0xffffff800081250a : shr al, 0x50 ; ret 0xffff
0xffffff8000531f56 : shr al, 0x54 ; ret 0xffd5
0xffffff8000658955 : shr al, 0x55 ; pop rax ; ret
0xffffff800065f654 : shr al, 0x56 ; jmp 0xffffff800065f61f
0xffffff800065e854 : shr al, 0x56 ; stc ; ret 0x44ff
0xffffff8000653743 : shr al, 0x57 ; lodsd eax, dword ptr [rsi] ; ret
0xffffff8000671e52 : shr al, 0x58 ; ret
0xffffff80005cbd51 : shr al, 0x59 ; and al, 0xcc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000721e4f : shr al, 0x5b ; ret
0xffffff80005bd44e : shr al, 0x5c ; or eax, 0xc031ffcd ; pop rbp ; ret
0xffffff80005c1f4d : shr al, 0x5d ; ret 0xffcc
0xffffff800081c4bc : shr al, 0x5e ; ret
0xffffff8000668a3b : shr al, 0x5f ; pop rdx ; ret 0xe9ff
0xffffff8000541f4b : shr al, 0x5f ; ret 0xffd4
0xffffff80002c1f4b : shr al, 0x5f ; ret 0xfffc
0xffffff80005924ea : shr al, 0x60 ; ret
0xffffff8000653a49 : shr al, 0x61 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff8000659439 : shr al, 0x61 ; push rax ; ret
0xffffff8000668c48 : shr al, 0x62 ; push rbp ; ret 0x8bff
0xffffff800065e547 : shr al, 0x63 ; cld ; ret 0x45ff
0xffffff800064e546 : shr al, 0x64 ; cld ; ret
0xffffff80002e6ad3 : shr al, 0x67 ; add cl, r13b ; ret 0xfffe
0xffffff800077a443 : shr al, 0x67 ; cmp eax, 0x6348ffb1 ; ret
0xffffff8000690943 : shr al, 0x67 ; fdivr dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff8000571f43 : shr al, 0x67 ; ret 0xffd1
0xffffff8000654532 : shr al, 0x68 ; lahf ; ret
0xffffff8000591f41 : shr al, 0x69 ; ret 0xffcf
0xffffff8000658a30 : shr al, 0x6a ; pop rdx ; ret
0xffffff800025dedf : shr al, 0x6b ; or dword ptr [rax + rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff8000673ddf : shr al, 0x6b ; stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80006c1e3e : shr al, 0x6c ; ret
0xffffff800065982d : shr al, 0x6d ; ret
0xffffff800060783a : shr al, 0x70 ; imul ecx, eax, 0x605ffff ; ret 0x51
0xffffff8000659e3a : shr al, 0x70 ; ret
0xffffff80008123e9 : shr al, 0x71 ; ret
0xffffff8000655229 : shr al, 0x71 ; xchg eax, edx ; ret
0xffffff8000663828 : shr al, 0x72 ; lodsb al, byte ptr [rsi] ; ret 0x49ff
0xffffff8000654e26 : shr al, 0x74 ; xchg eax, esi ; ret
0xffffff8000663434 : shr al, 0x76 ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0xffffff8000721e32 : shr al, 0x78 ; ret
0xffffff8000541f32 : shr al, 0x78 ; ret 0xffd4
0xffffff8000657d1d : shr al, 0x7d ; ret
0xffffff800081092c : shr al, 0x7e ; fsub dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff800066b32c : shr al, 0x7e ; ret 0x49ff
0xffffff800066462b : shr al, 0x7f ; wait ; ret 0x8bff
0xffffff80004225ca : shr al, 0x80 ; ret 0xffe7
0xffffff8000653529 : shr al, 0x81 ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000671e27 : shr al, 0x83 ; ret
0xffffff800064e917 : shr al, 0x83 ; sti ; ret
0xffffff800065a016 : shr al, 0x84 ; ret
0xffffff8000674bc2 : shr al, 0x88 ; pushfq ; ret 0xfff
0xffffff8000572112 : shr al, 0x88 ; ret
0xffffff80005dd821 : shr al, 0x89 ; or ebx, ecx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007599b0 : shr al, 0x8a ; nop ; ret
0xffffff80004833f0 : shr al, 0x8a ; sysenter
0xffffff8000651b0f : shr al, 0x8b ; leave ; ret
0xffffff80002be9af : shr al, 0x8b ; ret 0x48
0xffffff80005d1f1f : shr al, 0x8b ; ret 0xffcb
0xffffff8000653b1e : shr al, 0x8c ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff800065370e : shr al, 0x8c ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800065971d : shr al, 0x8d ; ret
0xffffff800051e8bc : shr al, 0x8e ; call rdi
0xffffff8000641f1a : shr al, 0x90 ; ret 0xffc4
0xffffff80006a2108 : shr al, 0x92 ; ret
0xffffff800065e714 : shr al, 0x96 ; cli ; ret 0x44ff
0xffffff8000b3b433 : shr al, 0x97 ; cmp ch, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c1f0d : shr al, 0x9d ; ret 0xffcc
0xffffff800081090c : shr al, 0x9e ; fsub dword ptr [rdi + 0x5dc031ff] ; ret
0xffffff800065fcac : shr al, 0x9e ; jmp 0xffffff800065fc78
0xffffff800028712b : shr al, 0x9f ; int 0xfe
0xffffff8000658bfb : shr al, 0x9f ; pop rax ; ret
0xffffff80006535a0 : shr al, 0xa ; lodsb al, byte ptr [rsi] ; ret
0xffffff80005520fa : shr al, 0xa0 ; ret
0xffffff8000657cf8 : shr al, 0xa2 ; ret
0xffffff80002ee998 : shr al, 0xa2 ; ret 0x45
0xffffff80006591f7 : shr al, 0xa3 ; push rdx ; ret
0xffffff8000651af6 : shr al, 0xa4 ; leave ; ret
0xffffff8000658804 : shr al, 0xa6 ; pop rcx ; ret
0xffffff800064f203 : shr al, 0xa7 ; out dx, eax ; ret
0xffffff8000659af2 : shr al, 0xa8 ; ret
0xffffff800058e8a1 : shr al, 0xa9 ; call rax
0xffffff8000654df0 : shr al, 0xaa ; xchg eax, esi ; ret
0xffffff80008ab5fe : shr al, 0xac ; sub ebx, dword ptr [rsi + 0x5dc031ff] ; ret
0xffffff80005d1ef7 : shr al, 0xb3 ; ret 0xffcb
0xffffff80008a40d6 : shr al, 0xb4 ; sub bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006535f5 : shr al, 0xb5 ; stosd dword ptr [rdi], eax ; ret
0xffffff80006609f5 : shr al, 0xb5 ; xlatb ; ret 0x8bff
0xffffff80003f2493 : shr al, 0xb7 ; ret
0xffffff80007621c1 : shr al, 0xb9 ; ret
0xffffff80006634e1 : shr al, 0xb9 ; scasd eax, dword ptr [rdi] ; ret 0xf0ff
0xffffff80002d4ff1 : shr al, 0xb9 ; xchg eax, ecx ; sti ; dec dword ptr [rbx + rdi + 0x3d] ; ret 0x818e
0xffffff8000541ef0 : shr al, 0xba ; ret 0xffd4
0xffffff80006552e0 : shr al, 0xba ; xchg eax, ecx ; ret
0xffffff80006689ef : shr al, 0xbb ; push rdi ; ret 0x41ff
0xffffff80002ee87f : shr al, 0xbb ; ret
0xffffff800065988e : shr al, 0xc ; ret
0xffffff8000541dea : shr al, 0xc0 ; ret
0xffffff800035e879 : shr al, 0xc1 ; ret
0xffffff80006672e7 : shr al, 0xc3 ; outsb dx, byte ptr [rsi] ; ret 0x4cff
0xffffff80005c1ee6 : shr al, 0xc4 ; ret 0xffcc
0xffffff80006b20d5 : shr al, 0xc5 ; ret
0xffffff80003c13f4 : shr al, 0xc6 ; xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x14c
0xffffff80006644e3 : shr al, 0xc7 ; pushfq ; ret 0x48ff
0xffffff8000452483 : shr al, 0xc7 ; ret
0xffffff80007c1de2 : shr al, 0xc8 ; ret
0xffffff8000663dce : shr al, 0xcc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x49ff
0xffffff8000674c7e : shr al, 0xcc ; wait ; ret 0xe9ff
0xffffff800035e96c : shr al, 0xce ; ret 0x3e
0xffffff8000657ec7 : shr al, 0xd3 ; ret
0xffffff80005721c5 : shr al, 0xd5 ; ret 0xffd1
0xffffff8000541ed5 : shr al, 0xd5 ; ret 0xffd4
0xffffff80006a1ed3 : shr al, 0xd7 ; ret 0xffbe
0xffffff80008b8202 : shr al, 0xd8 ; loope 0xffffff80008b8206 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800045be3c : shr al, 0xe ; sysenter
0xffffff80006bdd8a : shr al, 0xe0 ; xchg eax, ebp ; str word ptr [rax - 0x77] ; ret
0xffffff8000321ec7 : shr al, 0xe3 ; ret 0xfff6
0xffffff800064e3c6 : shr al, 0xe4 ; std ; ret
0xffffff80007b1ec4 : shr al, 0xe6 ; ret 0xffad
0xffffff8000369953 : shr al, 0xe7 ; adc bh, byte ptr [rsi] ; add cl, ch ; ret 0xfffe
0xffffff80002ef853 : shr al, 0xe7 ; mov bl, 0x45 ; add cl, ch ; ret
0xffffff8000653cc2 : shr al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff80002ee852 : shr al, 0xe8 ; ret
0xffffff80005dd8c1 : shr al, 0xe9 ; or bl, cl ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000653ac0 : shr al, 0xea ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff800065e8bc : shr al, 0xee ; clc ; ret 0x49ff
0xffffff8000741db8 : shr al, 0xf2 ; ret
0xffffff800065f4b5 : shr al, 0xf5 ; in al, dx ; ret 0x48ff
0xffffff80006582b4 : shr al, 0xf6 ; pop rsi ; ret
0xffffff80006539b1 : shr al, 0xf9 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff80006545a0 : shr al, 0xfa ; sahf ; ret
0xffffff8000657e9f : shr al, 0xfb ; ret
0xffffff800065959d : shr al, 0xfd ; ret
0xffffff8000663d9b : shr al, 0xff ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xf0ff
0xffffff800048347b : shr al, 0xff ; ret
0xffffff800065e5ab : shr al, 0xff ; sti ; ret 0x89ff
0xffffff80008dbf7b : shr al, 1 ; call rax
0xffffff80007637f7 : shr al, 1 ; clc ; ret 0x41ff
0xffffff80007fea45 : shr al, 1 ; jne 0xffffff80007fea82 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800043c35e : shr al, 1 ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000676f6b : shr al, 1 ; mov edi, 0x89fffffb ; ret
0xffffff8000763595 : shr al, 1 ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; ret 0x41ff
0xffffff80007a7f3a : shr al, 1 ; movzx eax, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000763932 : shr al, 1 ; or bh, dh ; ret 0x48ff
0xffffff800081ed09 : shr al, 1 ; pop rbp ; ret
0xffffff800085c87f : shr al, 1 ; pop rbx ; push rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007637e3 : shr al, 1 ; push rdi ; clc ; ret 0x41ff
0xffffff80002b6d04 : shr al, 1 ; ret
0xffffff80006b3ff8 : shr al, 1 ; ret 0x103e
0xffffff8000436418 : shr al, 1 ; ret 0x3b62
0xffffff80008ccc18 : shr al, 1 ; ret 0xac57
0xffffff800079c6a9 : shr al, 1 ; xor dword ptr [rip - 0x76b7fff9], eax ; ret
0xffffff80004f88fe : shr al, 2 ; movzx eax, al ; pop rbp ; ret
0xffffff800081eb79 : shr al, 3 ; pop rbp ; ret
0xffffff8000658097 : shr al, 3 ; ret
0xffffff8000653da6 : shr al, 4 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff800049d378 : shr al, 4 ; movzx eax, al ; pop rbp ; ret
0xffffff800081eb99 : shr al, 4 ; pop rbp ; ret
0xffffff80008e3231 : shr al, 5 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007d07ae : shr al, 5 ; movzx eax, al ; pop rbp ; ret
0xffffff800081ece9 : shr al, 5 ; pop rbp ; ret
0xffffff800081ecf9 : shr al, 6 ; pop rbp ; ret
0xffffff80006614a2 : shr al, 8 ; int 0xc2
0xffffff80006532a2 : shr al, 8 ; scasd eax, dword ptr [rdi] ; ret
0xffffff8000654e92 : shr al, 8 ; xchg eax, esi ; ret
0xffffff8000872806 : shr al, cl ; adc al, 0x61 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004576cf : shr al, cl ; adc bpl, r8b ; dec dword ptr [rax - 0x77] ; ret
0xffffff800087260a : shr al, cl ; adc byte ptr [rbx - 0x5a], ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005dd299 : shr al, cl ; adc dword ptr [rdx - 0x31], ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007dbc66 : shr al, cl ; add al, 0x23 ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80006a1ea8 : shr al, cl ; add bl, byte ptr [rsi] ; ret
0xffffff80005d375f : shr al, cl ; add rax, -0x76b70030 ; ret
0xffffff800063bb17 : shr al, cl ; and esi, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005fbd7b : shr al, cl ; call rdx
0xffffff800032e2df : shr al, cl ; cmp esp, dword ptr [rsi - 0x76b70006] ; ret
0xffffff800063ddf4 : shr al, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0xffffff8000498d03 : shr al, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; add bh, bh ; ret
0xffffff8000866233 : shr al, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0x8948fffa ; ret
0xffffff80006a72ab : shr al, cl ; dec ecx ; ret 0x48ff
0xffffff80006a5742 : shr al, cl ; fdiv dword ptr [rcx] ; ret
0xffffff8000379642 : shr al, cl ; fdiv st(2) ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800045cb41 : shr al, cl ; fnstcw word ptr [rbp - 0x76b70019] ; ret
0xffffff80008f253d : shr al, cl ; frstor dword ptr [rbx - 0x62] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ce73d : shr al, cl ; frstor dword ptr [rcx - 0x76b70050] ; ret
0xffffff800050f126 : shr al, cl ; imul r15d, edx, -1 ; xor eax, eax ; pop rbp ; ret
0xffffff800046742e : shr al, cl ; in al, dx ; adc al, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c102d : shr al, cl ; in eax, dx ; js 0xffffff80005c100b ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070607d : shr al, cl ; int 0x42
0xffffff80006809cd : shr al, cl ; jg 0xffffff800068099f ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039169e : shr al, cl ; jl 0xffffff800039171c ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000863e9e : shr al, cl ; jl 0xffffff8000863ef4 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d402f : shr al, cl ; jmp 0xffffff80008d4083
0xffffff80007dc7a1 : shr al, cl ; jns 0xffffff80007dc76e ; scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004bbe34 : shr al, cl ; jrcxz 0xffffff80004bbe6c ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800038838d : shr al, cl ; lea eax, [rip - 0x76b7000b] ; ret
0xffffff800061136d : shr al, cl ; lodsd eax, dword ptr [rsi] ; jne 0xffffff8000611346 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000457666 : shr al, cl ; mov ah, 0x12 ; call 0xffffff7fc3cebf76
0xffffff8000414865 : shr al, cl ; mov ch, 0x40 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800026d7e4 : shr al, cl ; mov cl, 6 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006a7320 : shr al, cl ; mov cl, cl ; ret 0x48ff
0xffffff80007de474 : shr al, cl ; mov ebp, 0x8948fff9 ; ret
0xffffff800063f051 : shr al, cl ; mov r9b, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800087278e : shr al, cl ; mov word ptr [rcx - 0x5a], fs ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a5275 : shr al, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0xffffff80007e7d40 : shr al, cl ; or ah, byte ptr [rsi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a5f11 : shr al, cl ; or dword ptr [rdx], ebp ; ret
0xffffff800054bd97 : shr al, cl ; or ebx, 0xffffffd8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a449f : shr al, cl ; or edi, eax ; ret 0x48ff
0xffffff80005c0f3b : shr al, cl ; outsd dx, dword ptr [rsi] ; sub eax, 0x8948ffd1 ; ret
0xffffff8000641ebd : shr al, cl ; pop rbp ; push -0x37 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049affd : shr al, cl ; pop rbp ; xor eax, 0x89480000 ; ret
0xffffff800029ccbb : shr al, cl ; pop rdi ; mov esp, 0x89480003 ; ret
0xffffff8000866280 : shr al, cl ; pop rdx ; mov ebp, 0x8948fffa ; ret
0xffffff80006a47c0 : shr al, cl ; pop rdx ; ret
0xffffff800052f84a : shr al, cl ; push rax ; test eax, 0x89480024 ; ret
0xffffff80006250c7 : shr al, cl ; push rbx ; cmp bl, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007615f8 : shr al, cl ; push rdx ; lea eax, [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002ec57e : shr al, cl ; pushfq ; ret
0xffffff80005e304a : shr al, cl ; rcr byte ptr [rax - 0x31], 1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002d6e07 : shr al, cl ; ret
0xffffff80004e6a88 : shr al, cl ; ret 0x2938
0xffffff80008d8958 : shr al, cl ; ret 0x9fff
0xffffff800030d108 : shr al, cl ; ret 0xf975
0xffffff800032e558 : shr al, cl ; ret 0xfaa3
0xffffff80002fb3a8 : shr al, cl ; ret 0xfaa4
0xffffff80005bfd49 : shr al, cl ; ror dword ptr [rbx - 0x76b7002f], 1 ; ret
0xffffff800042e7ac : shr al, cl ; sahf ; mov ebx, 0x89480034 ; ret
0xffffff80004c6578 : shr al, cl ; sar byte ptr [rip - 0x76b7ffd5], cl ; ret
0xffffff8000354a59 : shr al, cl ; sar dword ptr [rsi], 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000328f47 : shr al, cl ; sar ecx, cl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000643600 : shr al, cl ; sbb dl, byte ptr [rbx - 0x37] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000760a2f : shr al, cl ; sbb ebx, dword ptr [rcx - 0x76b7ffff] ; ret
0xffffff8000650281 : shr al, cl ; sbb edx, esp ; ret
0xffffff8000506a9b : shr al, cl ; scasd eax, dword ptr [rdi] ; cmp byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800038831d : shr al, cl ; std ; add eax, 0x8948fff5 ; ret
0xffffff8000277e1d : shr al, cl ; std ; or al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000366f1d : shr al, cl ; std ; sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800049e01d : shr al, cl ; std ; test al, 0xe3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cc2af : shr al, cl ; sti ; jns 0xffffff80005cc28c ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bccd0 : shr al, cl ; stosb byte ptr [rdi], al ; ret
0xffffff800068a46f : shr al, cl ; stosd dword ptr [rdi], eax ; in al, 0xc4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005313b8 : shr al, cl ; sub dl, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c9981 : shr al, cl ; sub dword ptr [rbx - 0x76b70030], esp ; ret
0xffffff80006a7381 : shr al, cl ; sub ecx, ecx ; ret 0x48ff
0xffffff80005cc37f : shr al, cl ; sub edi, dword ptr [rcx - 0x30] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075401f : shr al, cl ; sub esp, dword ptr [rbx + 2] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000894695 : shr al, cl ; test dword ptr [rdx - 0x5c], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070f9fc : shr al, cl ; test rax, -0x76b7fffa ; ret
0xffffff80007c42c4 : shr al, cl ; xchg byte ptr [rax - 5], ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff800069c3a7 : shr al, cl ; xchg eax, ebx ; jno 0xffffff800069c39f ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cc317 : shr al, cl ; xchg eax, ebx ; jns 0xffffff80005cc2f4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000717007 : shr al, cl ; xchg eax, ebx ; xor dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000823983 : shr al, cl ; xchg eax, edi ; stosq qword ptr [rdi], rax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d02d3 : shr al, cl ; xlatb ; cmp eax, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004237e9 : shr al, cl ; xor dword ptr [rcx - 0x15], edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027f1e7 : shr al, cl ; xor edx, dword ptr [rdi - 0x76b7fffb] ; ret
0xffffff800083879b : shr bh, 0xff ; jmp qword ptr [rax]
0xffffff800071dcb1 : shr bl, 0x15 ; mov eax, 0xffffffce ; pop rbp ; ret
0xffffff80008323b0 : shr bl, 1 ; adc dword ptr [rcx - 1], eax ; ret
0xffffff800053a8a9 : shr bl, 1 ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0xffffff80004bab83 : shr bl, 1 ; add ecx, dword ptr [rax - 0x77] ; ret 0x894c
0xffffff80008b1ca3 : shr bl, 1 ; sub ecx, dword ptr [rax - 0x77] ; ret
0xffffff80002cb0fe : shr bl, 2 ; xor eax, eax ; movzx eax, al ; pop rbp ; ret
0xffffff80004ce952 : shr bl, 2 ; xor eax, eax ; pop rbp ; ret
0xffffff80005baa54 : shr bl, 2 ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b79fb : shr bl, cl ; add eax, 0x950fc985 ; ret 0x6348
0xffffff80004836dd : shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8548
0xffffff8000616de9 : shr bl, cl ; cmp byte ptr [rbp - 0x77], cl ; imul ecx ; ret
0xffffff80006915f6 : shr bl, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002765e9 : shr bl, cl ; jae 0xffffff800027657a ; ret 0xeac1
0xffffff80004a1e50 : shr bl, cl ; pop rbp ; ret
0xffffff8000326d4d : shr byte ptr [rbp + 0x483374ba], 0x83 ; ret
0xffffff800074c1ac : shr byte ptr [rbx + rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000254c74 : shr byte ptr [rbx], 0x89 ; add al, ch ; ret
0xffffff800065b5da : shr byte ptr [rbx], cl ; ret
0xffffff80004dd100 : shr byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800084192c : shr byte ptr [rcx], 1 ; enter -0x26ff, 0x39 ; ror dword ptr [rdi], 1 ; ret
0xffffff800082c8d2 : shr cl, 0xec ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800026f1fb : shr cl, 0xec ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff800034d937 : shr cl, 1 ; ret
0xffffff80005ba04b : shr cl, cl ; ret 0
0xffffff8000572245 : shr dl, 0x41 ; add byte ptr [rcx], dh ; shr al, 0x50 ; ret 0xffd1
0xffffff8000627be4 : shr dword ptr [r9 - 0x40], 0xff ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff800025a1eb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800025a202 ; call rax
0xffffff800025a1ea : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800025a203 ; call rax
0xffffff80002dc27b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dc292 ; call rax
0xffffff80002dc27a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dc293 ; call rax
0xffffff80002dcf78 : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dcf8f ; call rax
0xffffff80002dcf77 : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dcf90 ; call rax
0xffffff80002dd3fb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dd412 ; call rax
0xffffff80002dd3fa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dd413 ; call rax
0xffffff80002dfeab : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dfec2 ; call rax
0xffffff80002dfeaa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002dfec3 ; call rax
0xffffff80002e08b8 : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e08cf ; call rax
0xffffff80002e08b7 : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e08d0 ; call rax
0xffffff80002e0cfb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e0d12 ; call rax
0xffffff80002e0cfa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e0d13 ; call rax
0xffffff80002e303b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e3052 ; call rax
0xffffff80002e303a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e3053 ; call rax
0xffffff80002e572b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e5742 ; call rax
0xffffff80002e572a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e5743 ; call rax
0xffffff80002e70bb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e70d2 ; call rax
0xffffff80002e70ba : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e70d3 ; call rax
0xffffff80002e7afb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e7b12 ; call rax
0xffffff80002e7afa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e7b13 ; call rax
0xffffff80002e841b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e8432 ; call rax
0xffffff80002e841a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e8433 ; call rax
0xffffff80002e911b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e9132 ; call rax
0xffffff80002e911a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002e9133 ; call rax
0xffffff80002ee4ab : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002ee4c2 ; call rax
0xffffff80002ee4aa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002ee4c3 ; call rax
0xffffff80002eecab : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002eecc2 ; call rax
0xffffff80002eecaa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002eecc3 ; call rax
0xffffff80002ef8eb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002ef902 ; call rax
0xffffff80002ef8ea : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002ef903 ; call rax
0xffffff80002f28fb : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002f2912 ; call rax
0xffffff80002f28fa : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002f2913 ; call rax
0xffffff80002f4a8b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002f4aa2 ; call rax
0xffffff80002f4a8a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff80002f4aa3 ; call rax
0xffffff800035da9b : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800035dab2 ; call rax
0xffffff800035da9a : shr dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800035dab3 ; call rax
0xffffff800025a18d : shr dword ptr [rax], 0x5d ; ret
0xffffff8000490f74 : shr dword ptr [rax], cl ; ret
0xffffff8000818dcd : shr dword ptr [rbx + 0x2d81f0ff], 0xc5 ; ret
0xffffff80005f310b : shr dword ptr [rbx - 0x76b7000b], 1 ; ret
0xffffff8000627be5 : shr dword ptr [rcx - 0x40], 0xff ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff80002579e0 : shr dword ptr [rcx], 1 ; enter -0x27c7, 0xf ; ret
0xffffff80003717e7 : shr dword ptr [rcx], 1 ; ret 0x8d48
0xffffff80005c0bad : shr dword ptr [rcx], 1 ; ret 0xc389
0xffffff8000570ac0 : shr dword ptr [rcx], 1 ; sar byte ptr [rcx], 1 ; fmul dword ptr [rdi] ; ret
0xffffff80004be7fc : shr dword ptr [rcx], cl ; ret
0xffffff800089c323 : shr dword ptr [rdx - 0x74b7ffd7], 5 ; ret 0x29aa
0xffffff800038dcc3 : shr dword ptr [rdx - 0x76b3ffa2], 1 ; ret 0xf48
0xffffff80004b36c7 : shr eax, 0x10 ; and eax, 1 ; pop rbp ; ret
0xffffff800080dd4a : shr eax, 0x10 ; jne 0xffffff800080dd49 ; movzx eax, si ; pop rbp ; ret
0xffffff80005c0b14 : shr eax, 0x10 ; xor eax, ecx ; pop rbp ; ret
0xffffff80004dcad9 : shr eax, 0x11 ; ret
0xffffff800030366f : shr eax, 0x12 ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9157 : shr eax, 0x12 ; movzx eax, al ; pop rbp ; ret
0xffffff80002c9ba4 : shr eax, 0x12 ; pop rbp ; ret
0xffffff8000504ae7 : shr eax, 0x14 ; and eax, 1 ; pop rbp ; ret
0xffffff80004e0d19 : shr eax, 0x14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004fa407 : shr eax, 0x16 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa227 : shr eax, 0x17 ; and eax, 1 ; pop rbp ; ret
0xffffff80002bac8a : shr eax, 0x17 ; and eax, 7 ; pop rbp ; ret
0xffffff80004fa4f7 : shr eax, 0x1b ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa547 : shr eax, 0x1c ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9217 : shr eax, 0x1d ; and eax, 1 ; pop rbp ; ret
0xffffff80004f9227 : shr eax, 0x1e ; and eax, 1 ; pop rbp ; ret
0xffffff80003c74ba : shr eax, 0x1f ; xor eax, 1 ; pop rbp ; ret
0xffffff80002d3af1 : shr eax, 0x1f ; xor rax, rdx ; pop rbp ; ret
0xffffff800036b76a : shr eax, 0x38 ; pop rbp ; ret
0xffffff800074d7fe : shr eax, 0x3c ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003888fc : shr eax, 0x3e ; ret 0xffff
0xffffff800038e14a : shr eax, 0x3f ; pop rbp ; ret
0xffffff80004dd0fd : shr eax, 0x9d ; shr byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800034279c : shr eax, 0xa ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa237 : shr eax, 0xb ; and eax, 1 ; pop rbp ; ret
0xffffff800049d3ca : shr eax, 0xb ; not eax ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3b06 : shr eax, 0xc ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa217 : shr eax, 0xd ; and eax, 1 ; pop rbp ; ret
0xffffff80004b3ac7 : shr eax, 0xf ; and eax, 1 ; pop rbp ; ret
0xffffff800084e73d : shr eax, 0xf ; mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff80004dc9f1 : shr eax, 0xf9 ; ret
0xffffff800029aa8a : shr eax, 1 ; and eax, 1 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80002b93c5 : shr eax, 1 ; and eax, 1 ; pop rbp ; ret
0xffffff80002bbbbe : shr eax, 1 ; mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff8000342744 : shr eax, 1 ; not eax ; and eax, 1 ; pop rbp ; ret
0xffffff8000486825 : shr eax, 1 ; test dword ptr [rax], esi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800026968e : shr eax, 2 ; and eax, 1 ; pop rbp ; ret
0xffffff8000798482 : shr eax, 3 ; add byte ptr [rax], al ; add rax, rdx ; pop rbp ; ret
0xffffff800026966e : shr eax, 3 ; and eax, 1 ; pop rbp ; ret
0xffffff800082ba9a : shr eax, 3 ; pop rbp ; ret
0xffffff80002b768a : shr eax, 4 ; and eax, 1 ; pop rbp ; ret
0xffffff8000388836 : shr eax, 4 ; and eax, 2 ; or eax, ecx ; pop rbp ; ret
0xffffff800084e6f0 : shr eax, 4 ; mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff8000342704 : shr eax, 5 ; and eax, 1 ; pop rbp ; ret
0xffffff800084e698 : shr eax, 5 ; mov cl, al ; movzx eax, cl ; pop rbp ; ret
0xffffff80004b3b26 : shr eax, 6 ; and eax, 1 ; pop rbp ; ret
0xffffff80003670f7 : shr eax, 7 ; and eax, 1 ; pop rbp ; ret
0xffffff80007b0487 : shr eax, 7 ; movzx eax, al ; pop rbp ; ret
0xffffff80004b3a46 : shr eax, 8 ; and eax, 0xf ; pop rbp ; ret
0xffffff80004f891b : shr eax, 8 ; and eax, 1 ; pop rbp ; ret
0xffffff80002a6b1a : shr eax, 9 ; and eax, 1 ; pop rbp ; ret
0xffffff80002a812a : shr eax, 9 ; movzx eax, al ; pop rbp ; ret
0xffffff80002a67e7 : shr eax, cl ; ret
0xffffff8000312888 : shr eax, cl ; ret 0xf7b8
0xffffff8000268ec8 : shr ebx, 2 ; xor ecx, ecx ; movzx eax, cl ; pop rbp ; ret
0xffffff800084547e : shr ebx, cl ; add eax, dword ptr [rcx - 0x77] ; ror dword ptr [rcx + 0x63], cl ; ret
0xffffff800086551b : shr ebx, cl ; ret 0x8b49
0xffffff8000672037 : shr ecx, 0x10 ; jne 0xffffff8000672036 ; pop rbp ; ret
0xffffff800080ddaa : shr ecx, 0x10 ; jne 0xffffff800080dda9 ; movzx eax, ax ; pop rbp ; ret
0xffffff800080de0a : shr ecx, 0x10 ; jne 0xffffff800080de09 ; movzx eax, ax ; pop rbp ; ret
0xffffff8000389763 : shr ecx, 0x20 ; call qword ptr [rax]
0xffffff80007cde6e : shr ecx, 0xc ; or ecx, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff80002d37b4 : shr ecx, 1 ; and ecx, 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000387f52 : shr ecx, 2 ; and ecx, 1 ; mov eax, ecx ; pop rbp ; ret
0xffffff8000395251 : shr ecx, 5 ; and dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff800039522f : shr ecx, 5 ; or dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff8000603406 : shr edi, 0x10 ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0xffffff800084c6a0 : shr edi, 0x18 ; and edi, 0xf ; mov r12, r8 ; call rax
0xffffff800049e424 : shr edi, 0x18 ; mov eax, edi ; pop rbp ; ret
0xffffff800084c67f : shr edi, 0x1c ; call rax
0xffffff80004d26c5 : shr edi, 0x20 ; mov eax, edi ; pop rbp ; ret
0xffffff800083c2cf : shr edi, 0xe ; lea rax, [rdi + rax + 0xb] ; pop rbp ; ret
0xffffff80004d26d4 : shr edi, 4 ; mov eax, edi ; pop rbp ; ret
0xffffff800084c94f : shr edi, 6 ; and edi, 0xf ; mov rbx, r8 ; call qword ptr [rbx]
0xffffff80003b7514 : shr edx, 0x20 ; wrmsr ; xor eax, eax ; pop rbp ; ret
0xffffff8000582b82 : shr edx, 0xb ; mov rax, rdx ; pop rbp ; ret
0xffffff80008331c0 : shr edx, 1 ; mov eax, r8d ; jne 0xffffff80008331a8 ; pop rbp ; ret
0xffffff800039f1d1 : shr edx, 4 ; mov dword ptr [rcx], edx ; pop rbp ; ret
0xffffff800066b755 : shr edx, cl ; mov byte ptr [rbx + rax], dl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072685f : shr edx, cl ; or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726893
0xffffff8000726baf : shr edx, cl ; or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726be9
0xffffff800038971e : shr esi, 0x20 ; call qword ptr [rax]
0xffffff800038973c : shr esi, 0x20 ; mov edx, dword ptr [r12 + 8] ; call qword ptr [rax]
0xffffff8000399225 : shr esi, 0x20 ; mov edx, esi ; wrmsr ; xor eax, eax ; ret
0xffffff80003ba531 : shr esi, 7 ; and esi, 1 ; mov eax, esi ; pop rbp ; ret
0xffffff800075436b : shr esp, 1 ; ret
0xffffff800053a8a8 : shr r11b, 1 ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0xffffff80008b8201 : shr r8b, 0xd8 ; loope 0xffffff80008b8207 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800044e956 : shr r8b, 1 ; ret
0xffffff80006b3ff7 : shr r8b, 1 ; ret 0x103e
0xffffff8000436417 : shr r8b, 1 ; ret 0x3b62
0xffffff80008ccc17 : shr r8b, 1 ; ret 0xac57
0xffffff80004fa246 : shr rax, 0x12 ; and eax, 1 ; pop rbp ; ret
0xffffff80002c9ba3 : shr rax, 0x12 ; pop rbp ; ret
0xffffff80004e0d18 : shr rax, 0x14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004fa406 : shr rax, 0x16 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa226 : shr rax, 0x17 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa4f6 : shr rax, 0x1b ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa546 : shr rax, 0x1c ; and eax, 1 ; pop rbp ; ret
0xffffff80002d3af0 : shr rax, 0x1f ; xor rax, rdx ; pop rbp ; ret
0xffffff800036b769 : shr rax, 0x38 ; pop rbp ; ret
0xffffff800038e149 : shr rax, 0x3f ; pop rbp ; ret
0xffffff80004fa206 : shr rax, 0xa ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa236 : shr rax, 0xb ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa216 : shr rax, 0xd ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa416 : shr rax, 0xf ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa0e6 : shr rax, 2 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa106 : shr rax, 3 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa156 : shr rax, 4 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fa116 : shr rax, 7 ; and eax, 1 ; pop rbp ; ret
0xffffff80004fbb06 : shr rax, 9 ; and eax, 1 ; pop rbp ; ret
0xffffff8000389762 : shr rcx, 0x20 ; call qword ptr [rax]
0xffffff8000395250 : shr rcx, 5 ; and dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff800039522e : shr rcx, 5 ; or dword ptr [rsi + rcx*4], eax ; pop rbp ; ret
0xffffff80004d26c4 : shr rdi, 0x20 ; mov eax, edi ; pop rbp ; ret
0xffffff80003b7513 : shr rdx, 0x20 ; wrmsr ; xor eax, eax ; pop rbp ; ret
0xffffff8000582b81 : shr rdx, 0xb ; mov rax, rdx ; pop rbp ; ret
0xffffff800039f1d0 : shr rdx, 4 ; mov dword ptr [rcx], edx ; pop rbp ; ret
0xffffff800072685e : shr rdx, cl ; or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726894
0xffffff8000726bae : shr rdx, cl ; or rdx, rax ; bsr rax, rdx ; jmp 0xffffff8000726bea
0xffffff800038971d : shr rsi, 0x20 ; call qword ptr [rax]
0xffffff800038973b : shr rsi, 0x20 ; mov edx, dword ptr [r12 + 8] ; call qword ptr [rax]
0xffffff800039a6cd : shrd eax, edx, 0x20 ; ret
0xffffff800039a6cc : shrd rax, rdx, 0x20 ; ret
0xffffff800071c3f3 : sldt word ptr [rax] ; add dh, dh ; ret 0xf80
0xffffff8000392412 : sldt word ptr [rax] ; popfq ; ret
0xffffff80003924b1 : sldt word ptr [rax] ; popfq ; xor eax, eax ; ret
0xffffff800066cec5 : sldt word ptr [rax] ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff800083b173 : stc ; adc byte ptr [rbp - 0x17], dh ; pop rbp ; ret
0xffffff800083b2e6 : stc ; adc byte ptr [rbp - 0x1a], dh ; pop rbp ; ret
0xffffff8000821d69 : stc ; adc byte ptr [rbp - 0x1d], dh ; pop rbp ; ret
0xffffff80004eb9eb : stc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xda08
0xffffff80004f3ceb : stc ; adc dword ptr [rbp - 0x1f], esi ; pop rbp ; ret
0xffffff8000765063 : stc ; add al, 0 ; mov rdi, rbx ; call 0xffffff8000393049
0xffffff8000455a4b : stc ; add al, 0x7c ; jge 0xffffff8000455a4c ; ret
0xffffff8000680321 : stc ; add bh, byte ptr [rax + 0x16] ; cmove eax, edx ; jmp 0xffffff80006802d9
0xffffff80006fbf26 : stc ; add byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b66
0xffffff8000661fc5 : stc ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4814
0xffffff80007eb873 : stc ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80005788d3 : stc ; add byte ptr [rcx], 0 ; add byte ptr [rdi], cl ; ret 0x8941
0xffffff80006c59cf : stc ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0xffffff80006c59a8 ; pop rbp ; ret
0xffffff80002a6aef : stc ; add byte ptr [rdi], cl ; ret 0x7eb
0xffffff80007e59dd : stc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff8000545095 : stc ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000533596 : stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0xffffff8000614310 : stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xf883
0xffffff8000397d2c : stc ; add dh, byte ptr [rbp + 2] ; pop rbp ; ret
0xffffff8000706d20 : stc ; add dh, byte ptr [rbp + 5] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003c2c5f : stc ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax + 9], 0xc8 ; pop rbp ; ret
0xffffff80004a762c : stc ; add dword ptr [rax], eax ; add byte ptr [rax + rbx - 0x78], bh ; ret 0xf280
0xffffff8000397cbb : stc ; add dword ptr [rbp + 0x11], esi ; pop rbp ; ret
0xffffff8000389824 : stc ; add dword ptr [rbp + 0x39], esi ; mov rdi, qword ptr [rbx + 0x10] ; call qword ptr [rax]
0xffffff8000397cfc : stc ; add dword ptr [rbp + 2], esi ; pop rbp ; ret
0xffffff80003b3e13 : stc ; add dword ptr [rbx + 0xf41c845], ecx ; ret 0x4589
0xffffff800075e44a : stc ; add dword ptr [rdi - 0x2e], edi ; xor eax, eax ; pop rbp ; ret
0xffffff80006f1b72 : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80004709ae : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf44
0xffffff8000776b31 : stc ; add esi, dword ptr [rbp - 0x3e] ; jmp 0xffffff8000776b56
0xffffff800061d9af : stc ; add esi, dword ptr [rsp + rdx + 0x4c] ; mov edi, ebp ; call rax
0xffffff8000516a47 : stc ; and cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xc220
0xffffff8000835273 : stc ; and eax, 0x8948ffa6 ; ret
0xffffff80006450c8 : stc ; call 0xffffff800028e1b8
0xffffff800064de22 : stc ; call qword ptr [rax]
0xffffff8000281b68 : stc ; call qword ptr [rdi]
0xffffff8000757625 : stc ; call r12
0xffffff80008bd0bd : stc ; call r14
0xffffff8000606428 : stc ; call r8
0xffffff80003acdea : stc ; call rax
0xffffff80008a6b63 : stc ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ba1f0 : stc ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003bbaa0 : stc ; cli ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800049f749 : stc ; cmovge eax, edx ; pop rbp ; ret
0xffffff8000b4579b : stc ; cmovns esp, dword ptr [rcx] ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff8000658132 : stc ; cmp al, byte ptr [rax] ; mov rax, qword ptr [rcx + rax*8 - 8] ; call qword ptr [rax]
0xffffff80006539b3 : stc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0xffffff80002f7889 : stc ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002f8beb : stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002fe075 : stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800030639f : stc ; dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xffffff8000392607
0xffffff80004b302a : stc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf981
0xffffff800063f558 : stc ; fdiv st(7), st(0) ; call qword ptr [rsi]
0xffffff8000347ef5 : stc ; hlt ; dec dword ptr [rax - 0x77] ; ror byte ptr [r8 - 0x77], 1 ; ret
0xffffff800065ecb3 : stc ; hlt ; ret 0xebff
0xffffff8000642e73 : stc ; idiv edi ; push rsi ; ret
0xffffff80003f6bc6 : stc ; inc dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0xffffff80003fb3e8 : stc ; inc dword ptr [rcx - 0x75] ; pop rbp ; sub al, 0xf6 ; ret
0xffffff80003f5a51 : stc ; inc dword ptr [rcx - 0x75] ; pop rdi ; sub al, 0xf6 ; ret
0xffffff800047c06f : stc ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rbx]
0xffffff80002cb138 : stc ; ja 0xffffff80002cb143 ; xor eax, eax ; pop rbp ; ret
0xffffff80003918f8 : stc ; jae 0xffffff80003918ff ; pop rbp ; ret
0xffffff80003e71d1 : stc ; jb 0xffffff80003e71dc ; xor eax, eax ; pop rbp ; ret
0xffffff80003e7221 : stc ; jb 0xffffff80003e722c ; xor eax, eax ; pop rbp ; ret
0xffffff80007a1223 : stc ; jbe 0xffffff80007a11df ; dec dword ptr [rax - 0x77] ; ret
0xffffff800029f31d : stc ; jle 0xffffff800029f39c ; or byte ptr [rcx], al ; ret 0x9389
0xffffff800079db82 : stc ; jmp qword ptr [rbx]
0xffffff800026df26 : stc ; jmp rcx
0xffffff80006240f5 : stc ; ljmp [rcx] ; ret
0xffffff800080dfb3 : stc ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfb8 ; pop rbp ; ret
0xffffff800080dfd3 : stc ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dfd8 ; pop rbp ; ret
0xffffff800080dff3 : stc ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dff8 ; pop rbp ; ret
0xffffff80005be735 : stc ; mov ah, 0xff ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000784633 : stc ; mov bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003742d3 : stc ; mov cl, 0x75 ; add byte ptr [rbp - 0x77], al ; rol dword ptr [rcx - 0x3f], cl ; ret
0xffffff800079d517 : stc ; mov dword ptr [rdi + 0x14], 0 ; pop rbp ; ret
0xffffff80002b02a0 : stc ; mov dword ptr [rip + 0x83d229], ecx ; pop rbp ; ret
0xffffff800083ba81 : stc ; mov eax, 0 ; jb 0xffffff800083ba79 ; pop rbp ; ret
0xffffff800048240d : stc ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002a122e : stc ; mov r10d, eax ; jmp 0xffffff80002a123e
0xffffff800067e6a7 : stc ; mov r12, r10 ; call 0xffffff800029e857
0xffffff80008f6ccf : stc ; mov r8, qword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; call rbx
0xffffff80008bd031 : stc ; mov r8, r10 ; mov r9, r11 ; call r14
0xffffff80008f6786 : stc ; mov r9, r14 ; call rax
0xffffff80002a9a98 : stc ; mov rax, qword ptr [rdi + 0x820] ; pop rbp ; ret
0xffffff80004eb9f3 : stc ; or al, 0xf ; xchg eax, esp ; ret
0xffffff80008486ae : stc ; or al, byte ptr [rax] ; add bh, bh ; ret
0xffffff80007bd8b3 : stc ; or byte ptr [rbp - 0x40f0b701], ch ; ret
0xffffff800061c556 : stc ; or eax, 0x8c3940f ; ret
0xffffff80003a27d0 : stc ; pop rbp ; jmp rax
0xffffff80008be588 : stc ; push qword ptr [rax + rdx - 0x48] ; ret 2
0xffffff800079db4d : stc ; push qword ptr [rbp - 0x21] ; pop rbp ; ret
0xffffff80007a965b : stc ; push qword ptr [rbp - 0xf] ; pop rbp ; ret
0xffffff80008035d3 : stc ; push qword ptr [rdx + rax + 0x5d] ; ret
0xffffff80003f5a7d : stc ; push rsi ; ret
0xffffff8000758c33 : stc ; pushfq ; ret
0xffffff80003c41a4 : stc ; ret
0xffffff8000679f51 : stc ; ret 0
0xffffff80006dae33 : stc ; ret 0x3f
0xffffff800065e857 : stc ; ret 0x44ff
0xffffff8000763108 : stc ; ret 0x48ff
0xffffff8000447d0b : stc ; ret 0x6c
0xffffff8000763093 : stc ; ret 0xc7ff
0xffffff800066f1c0 : stc ; sete r8b ; movzx eax, al ; pop rbp ; ret
0xffffff8000831cbb : stc ; shl eax, cl ; dec eax ; cdqe ; pop rbp ; ret
0xffffff80008b7073 : stc ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006240f3 : stc ; stc ; ljmp [rcx] ; ret
0xffffff8000659cfd : stc ; std ; xor eax, 0xe8c03100 ; test al, 0x44 ; ret
0xffffff80008ecab1 : stc ; sub al, 0x74 ; adc eax, dword ptr [rbx - 0x76b2a007] ; ret
0xffffff80008a765e : stc ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff8000740333 : stc ; sub byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003f0443 : stc ; sub edi, edx ; push rsi ; ret
0xffffff8000558fd5 : stc ; xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006f2bf3 : stc ; xor byte ptr [rax - 0x70f00001], al ; ret
0xffffff800084eebb : stc ; xor dword ptr [rbp - 0x77], ecx ; ret 0x894c
0xffffff8000550667 : std ; adc dword ptr [rbp], ebx ; pop rbp ; ret
0xffffff80004a3cb6 : std ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800076eaba : std ; add al, ch ; jle 0xffffff800076eb0b ; ret 0x83ff
0xffffff800061e348 : std ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0xffffff80004571c2 : std ; add cl, byte ptr [rdi] ; ret 0x19eb
0xffffff8000864ce5 : std ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xca84
0xffffff800038831f : std ; add eax, 0x8948fff5 ; ret
0xffffff80008dc982 : std ; add rsp, 0x40 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003000e6 : std ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000b48463 : std ; and byte ptr [rcx - 0x44], cl ; sti ; jle 0xffffff8000b484a7 ; call rdi
0xffffff8000b48863 : std ; and byte ptr [rcx - 0x7f], cl ; cmc ; ret 0x7fe3
0xffffff80002ba21f : std ; clc ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002fe467 : std ; clc ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80007f1de5 : std ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000495494 : std ; cmp rax, 0x3f ; jl 0xffffff8000495458 ; pop rbp ; ret
0xffffff800078327d : std ; dec dword ptr [rax + 0x39] ; ret
0xffffff80002bbb08 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0xffffff800060a273 : std ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff80002931e1 : std ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c13f8 : std ; dec dword ptr [rax - 0x77] ; ret 0x14c
0xffffff80005a9c80 : std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0xffffff8000692ff9 : std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000694069 : std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80007c112d : std ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff8000692a24 : std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff80002cc060 : std ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002bc8b7 : std ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80003c2ca0 : std ; dec dword ptr [rcx - 0x77] ; ret 0x3d83
0xffffff80003c3650 : std ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff80007f63b2 : std ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0xffffff80006ff4b1 : std ; inc dword ptr [rbp - 0x76f88b40] ; ret
0xffffff8000304542 : std ; jmp qword ptr [rcx]
0xffffff80007a32d8 : std ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80007bf7a8 : std ; ljmp [rcx] ; ret
0xffffff80003e27a9 : std ; mov dword ptr [rbp - 0x4c], esi ; jmp 0xffffff80003e27bf
0xffffff800076b7c2 : std ; mov dword ptr [rbx], eax ; mov rdi, r14 ; call 0xffffff8000393049
0xffffff8000b45727 : std ; mov edi, 0x2149bffd ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff800080319f : std ; mov esi, 0x8948ffc9 ; ret
0xffffff8000277e1f : std ; or al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800082483d : std ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006b40b9 : std ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006a86cf : std ; push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80007a76d6 : std ; push rsi ; ret
0xffffff80003705ad : std ; ret
0xffffff8000762d38 : std ; ret 0x41ff
0xffffff8000768830 : std ; ret 0x48ff
0xffffff800060bc9f : std ; ret 0x4c
0xffffff8000766da9 : std ; ret 0x85ff
0xffffff800079943f : std ; ret 0xffb1
0xffffff80002c14bf : std ; rol dword ptr [rdx + 0x158d4800], 6 ; ret
0xffffff8000366f1f : std ; sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a7178 : std ; sub byte ptr [rax], al ; pop rbp ; ret
0xffffff800049e01f : std ; test al, 0xe3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800029bdbc : std ; test byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003d011f : std ; xchg eax, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007b3eab : std ; xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff8000491830 : std ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff8000659cfe : std ; xor eax, 0xe8c03100 ; test al, 0x44 ; ret
0xffffff80006b43c5 : std ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003b4481 : sti ; adc byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; fadd dword ptr [rcx] ; ret
0xffffff800061d6c3 : sti ; adc eax, 0x3d8b4800 ; ret
0xffffff8000660c8c : sti ; add al, 0x74 ; or dword ptr [rbx - 0x7af0d605], eax ; ret 0
0xffffff8000284e22 : sti ; add al, 0xf ; xchg eax, ebp ; ret 0xb60f
0xffffff8000382d23 : sti ; add al, byte ptr [rdi + rcx + 0x45] ; loopne 0xffffff8000382d27 ; ret 0x4402
0xffffff80007a959a : sti ; add byte ptr [rbp - 0x39], dh ; test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0xffffff80006ec829 : sti ; add cl, byte ptr [rdi] ; ret
0xffffff800067346d : sti ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0xffffff8000388e15 : sti ; add dword ptr [rax + rcx*2 - 0x7b], esi ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc084
0xffffff80004869e1 : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80005fc23a : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2044
0xffffff80002703ce : sti ; add eax, 0x63481077 ; ret
0xffffff8000572a8f : sti ; add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x2041
0xffffff8000284e1d : sti ; add esi, dword ptr [rax + rdx - 0x7d] ; sti ; add al, 0xf ; xchg eax, ebp ; ret 0xb60f
0xffffff80006307e8 : sti ; add r11b, dl ; loop 0xffffff80006307f5 ; ret 0xd639
0xffffff80008aa73d : sti ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0xffffff8000568c09 : sti ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80005ec03a : sti ; and al, byte ptr [rcx] ; ret
0xffffff800025983d : sti ; and byte ptr [rax + 0x21], cl ; ret
0xffffff8000360559 : sti ; and byte ptr [rax + 1], cl ; ret
0xffffff80006325cc : sti ; and ecx, dword ptr [rdi] ; ret
0xffffff80004e2f53 : sti ; call 0xffffff800010e144
0xffffff800064bc08 : sti ; call qword ptr [rax]
0xffffff8000b44a17 : sti ; call qword ptr [rdx]
0xffffff80007d6123 : sti ; call rax
0xffffff80002bbc5a : sti ; cli ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000763a41 : sti ; cmc ; ret 0x48ff
0xffffff80007a4736 : sti ; dec byte ptr [rdi] ; ret
0xffffff8000271d1b : sti ; dec dword ptr [rax - 0x39] ; ret 0xffff
0xffffff80004acc33 : sti ; dec dword ptr [rax - 0x77] ; or dil, r14b ; ret 0x80
0xffffff80002b94db : sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b1b61 : sti ; dec dword ptr [rax - 0x77] ; ret 0x4b8b
0xffffff80006ae100 : sti ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80007cdb58 : sti ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80002d4ff5 : sti ; dec dword ptr [rbx + rdi + 0x3d] ; ret 0x818e
0xffffff800044cffc : sti ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xb60f
0xffffff80004b4ba5 : sti ; fdivp st(7) ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800058ae9c : sti ; idiv bh ; dec dword ptr [rax] ; idiv edi ; call qword ptr [rdi]
0xffffff800089d2fd : sti ; inc dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800089f934 : sti ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff8000422671 : sti ; ja 0xffffff8000422683 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000451731 : sti ; je 0xffffff80004516e7 ; jmp 0xffffff8000451741
0xffffff8000339d47 : sti ; jg 0xffffff8000339d4c ; jmp qword ptr [rcx]
0xffffff8000b48467 : sti ; jle 0xffffff8000b484a3 ; call rdi
0xffffff80002cefad : sti ; jmp qword ptr [rbx]
0xffffff8000590a2c : sti ; jmp rbx
0xffffff80005ca479 : sti ; jmp rcx
0xffffff80005cc2b1 : sti ; jns 0xffffff80005cc28a ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002b95da : sti ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800038813e : sti ; lock bts dword ptr [rax], edi ; jb 0xffffff8000388142 ; pop rbp ; ret
0xffffff800033a636 : sti ; mov edi, dword ptr [r15 + 0x38] ; call 0xffffff8000396867
0xffffff800033a635 : sti ; mov edi, dword ptr [r15 + 0x38] ; call 0xffffff8000396868
0xffffff800033a634 : sti ; mov edi, dword ptr [r15 + 0x38] ; call 0xffffff8000396869
0xffffff800039ebf8 : sti ; mov rax, qword ptr [rip + 0x6b2480] ; call qword ptr [rax]
0xffffff80006a6e06 : sti ; mov rdi, r12 ; call 0xffffff8000393046
0xffffff80008a1d4e : sti ; or al, byte ptr [rax] ; add al, ch ; stc ; ret
0xffffff8000839169 : sti ; or ecx, dword ptr [rax + 1] ; ret
0xffffff80005f001a : sti ; pop rbp ; ret
0xffffff80004b8dc2 : sti ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80003a24d4 : sti ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002baa4b : sti ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800036a2b6 : sti ; push qword ptr [rsp + rax + 0x39] ; ret
0xffffff800080dbfd : sti ; push rdi ; ror byte ptr [rdi], 1 ; mov bh, 0xc0 ; pop rbp ; ret
0xffffff800064791c : sti ; push rsi ; jmp qword ptr [rcx]
0xffffff800050e034 : sti ; push rsi ; ret
0xffffff8000263fab : sti ; ret
0xffffff8000762e89 : sti ; ret 0x48ff
0xffffff800065e99b : sti ; ret 0x66ff
0xffffff800065e5ae : sti ; ret 0x89ff
0xffffff8000565441 : sti ; sar edi, cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000885eff : sti ; sbb byte ptr [rax], al ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000843185 : sti ; scasd eax, dword ptr [rdi] ; add eax, 0x970f0000 ; ret 0x9d8b
0xffffff800089eaf1 : sti ; sub bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002928a6 : sti ; sub dword ptr [rcx], eax ; ret
0xffffff80008b3b94 : sti ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000742536 : stosb byte ptr [rdi], al ; add al, ch ; ret 0xc581
0xffffff8000662d77 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004aaa65 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x45fc
0xffffff80004dd887 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff8000266519 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0xffffff800083f2b5 : stosb byte ptr [rdi], al ; add rcx, rdx ; jmp rcx
0xffffff8000b46ad1 : stosb byte ptr [rdi], al ; call rdi
0xffffff800034928b : stosb byte ptr [rdi], al ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a2f6b : stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80007f0c33 : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065ed02 : stosb byte ptr [rdi], al ; hlt ; ret 0x41ff
0xffffff800038dadc : stosb byte ptr [rdi], al ; idiv edi ; jmp rax
0xffffff800075bd92 : stosb byte ptr [rdi], al ; insb byte ptr [rdi], dx ; ret
0xffffff800035d329 : stosb byte ptr [rdi], al ; int1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b7fad : stosb byte ptr [rdi], al ; jno 0xffffff80003b7fb8 ; jne 0xffffff80003b7fa8 ; xor eax, eax ; pop rbp ; ret
0xffffff80004822c2 : stosb byte ptr [rdi], al ; jnp 0xffffff80004822ce ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008cc0f2 : stosb byte ptr [rdi], al ; mov dl, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800053c812 : stosb byte ptr [rdi], al ; mov eax, 0x39480059 ; ret
0xffffff80006668e2 : stosb byte ptr [rdi], al ; mov edx, 0x89480015 ; ret
0xffffff80004a325a : stosb byte ptr [rdi], al ; movsxd rax, dword ptr es:[rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000291a52 : stosb byte ptr [rdi], al ; movsxd rdi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008422c8 : stosb byte ptr [rdi], al ; out 0xff, eax ; inc esi ; out 0xff, eax ; call qword ptr [rax]
0xffffff8000767f92 : stosb byte ptr [rdi], al ; push -0x5a17ffc9 ; stosb byte ptr [rdi], al ; ret 0x8bff
0xffffff80006bf6b2 : stosb byte ptr [rdi], al ; push rbx ; str word ptr [rax - 0x77] ; ret
0xffffff8000482cb2 : stosb byte ptr [rdi], al ; ret
0xffffff80008ba3c2 : stosb byte ptr [rdi], al ; ret 0x27
0xffffff80006636fe : stosb byte ptr [rdi], al ; ret 0x41ff
0xffffff8000767f98 : stosb byte ptr [rdi], al ; ret 0x8bff
0xffffff8000673de2 : stosb byte ptr [rdi], al ; ret 0xe9ff
0xffffff80007a67f2 : stosb byte ptr [rdi], al ; sar byte ptr [rsi - 0x76b301], 0xe8 ; ret 0xffbe
0xffffff8000692a22 : stosb byte ptr [rdi], al ; scasd eax, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff8000763092 : stosb byte ptr [rdi], al ; stc ; ret 0xc7ff
0xffffff80007a32d7 : stosb byte ptr [rdi], al ; std ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800064e86f : stosb byte ptr [rdi], al ; xchg eax, edx ; xor eax, 0xe8c03100 ; cld ; ret
0xffffff8000654df2 : stosb byte ptr [rdi], al ; xchg eax, esi ; ret
0xffffff8000743e0b : stosb byte ptr [rdi], al ; xor al, 0 ; nop ; mov edi, dword ptr [rbx] ; call rcx
0xffffff800052b27d : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c2436 : stosd dword ptr [rdi], eax ; add al, ch ; ret 0xcd82
0xffffff800050cda7 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc dword ptr [rax + 1], ecx ; ret 0x834a
0xffffff80002adb76 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80004dd7aa : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007c99e7 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800037ad34 : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; add al, ch ; ret
0xffffff80002ea435 : stosd dword ptr [rdi], eax ; and esi, dword ptr [rax + rax + 0x5d] ; ret
0xffffff8000788092 : stosd dword ptr [rdi], eax ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005f310c : stosd dword ptr [rdi], eax ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800043846a : stosd dword ptr [rdi], eax ; cmc ; push rsi ; ret
0xffffff8000388141 : stosd dword ptr [rdi], eax ; cmp byte ptr [rdx - 0xb], dh ; pop rbp ; ret
0xffffff8000654371 : stosd dword ptr [rdi], eax ; cmp eax, 0x89480016 ; ret
0xffffff80007dae23 : stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x63] ; ret
0xffffff8000819d71 : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d6cbc : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007dbd2d : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800068a471 : stosd dword ptr [rdi], eax ; in al, 0xc4 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b45313 : stosd dword ptr [rdi], eax ; int 0xc2
0xffffff800065d5a1 : stosd dword ptr [rdi], eax ; jbe 0xffffff800065d5af ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000365ad1 : stosd dword ptr [rdi], eax ; je 0xffffff8000365ad9 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006af5c1 : stosd dword ptr [rdi], eax ; jmp 0xffffff7fc3f3f5d8
0xffffff800050fb31 : stosd dword ptr [rdi], eax ; mov eax, 0x1480060 ; ret
0xffffff800056c841 : stosd dword ptr [rdi], eax ; mov edx, 0x8948ffd2 ; ret
0xffffff800053d5bc : stosd dword ptr [rdi], eax ; pop rcx ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800075ca81 : stosd dword ptr [rdi], eax ; pop rsi ; ret
0xffffff80004ebf11 : stosd dword ptr [rdi], eax ; pop rsp ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff80003acfd1 : stosd dword ptr [rdi], eax ; push 0 ; call qword ptr [rax]
0xffffff80008dac21 : stosd dword ptr [rdi], eax ; push rsi ; ret
0xffffff80002ba8c6 : stosd dword ptr [rdi], eax ; ret
0xffffff8000663672 : stosd dword ptr [rdi], eax ; ret 0x31ff
0xffffff80004e35e7 : stosd dword ptr [rdi], eax ; ret 0x41ff
0xffffff8000767a20 : stosd dword ptr [rdi], eax ; ret 0x48ff
0xffffff8000767d47 : stosd dword ptr [rdi], eax ; ret 0x49ff
0xffffff80006636a1 : stosd dword ptr [rdi], eax ; ret 0xebff
0xffffff80007370c4 : stosd dword ptr [rdi], eax ; ret 0xffff
0xffffff80008455e8 : stosd dword ptr [rdi], eax ; sbb al, byte ptr [rax] ; pop rbp ; ret
0xffffff80002a6dd8 : stosd dword ptr [rdi], eax ; sbb dword ptr [rax - 0x3ca30000], eax ; pop rbp ; ret
0xffffff80008a8468 : stosd dword ptr [rdi], eax ; scasb al, byte ptr [rdi] ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000392411 : stosd dword ptr [rdi], eax ; sldt word ptr [rax] ; popfq ; ret
0xffffff8000692dd1 : stosd dword ptr [rdi], eax ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff800088bfdc : stosd dword ptr [rdi], eax ; sub al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000863a91 : stosd dword ptr [rdi], eax ; sub eax, 0x3d8d4800 ; ret 0x18f5
0xffffff800066273e : stosd dword ptr [rdi], eax ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800066273d : stosd dword ptr [rdi], eax ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff80006567d3 : stosd dword ptr [rdi], eax ; xor esi, dword ptr [rip - 0x173fcf00] ; ret 0xc37c
0xffffff8000823986 : stosq qword ptr [rdi], rax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006c0465 : str word ptr [r8 - 0x77] ; ret
0xffffff80002665e7 : str word ptr [rax + 0x21] ; ret
0xffffff8000299618 : str word ptr [rax + 0x63] ; ret
0xffffff800038007c : str word ptr [rax - 0x39] ; ret 0xffff
0xffffff8000293eec : str word ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002a90bf : str word ptr [rax - 0x77] ; ret
0xffffff8000510c98 : str word ptr [rcx + 0x69] ; ret 0x3e8
0xffffff80002961b4 : str word ptr [rcx + rcx*4 - 1] ; call 0xffffff80003923e7
0xffffff80002960e2 : str word ptr [rcx + rcx*4 - 9] ; call 0xffffff80003923e7
0xffffff80006c4a89 : str word ptr ss:[rax - 0x77] ; ret
0xffffff8000852b36 : sub ah, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000589a47 : sub ah, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000542035 : sub ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800086b6ef : sub ah, byte ptr [rdx + 0x2c7b8ff] ; add al, ah ; pop rbp ; ret
0xffffff800081ac12 : sub ah, byte ptr [rsi + 1] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0xffffff80002cd537 : sub al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006ff916 : sub al, 0 ; jmp 0xffffff80006ff94e
0xffffff80008383e1 : sub al, 0 ; mov rax, qword ptr [rax] ; pop rbp ; ret
0xffffff800086df76 : sub al, 0 ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff8000866983 : sub al, 0 ; pop rbp ; jmp rax
0xffffff8000717096 : sub al, 0 ; sete al ; pop rbp ; ret
0xffffff8000702577 : sub al, 0 ; xor eax, eax ; mov ebx, ecx ; call 0xffffff800029e858
0xffffff80004ecfb2 : sub al, 0 ; xor eax, eax ; pop rbp ; ret
0xffffff80006554b4 : sub al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000611de5 : sub al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008e258e : sub al, 0x25 ; add byte ptr [rax + 0x5b], dl ; pop r14 ; pop rbp ; ret
0xffffff80008a45b8 : sub al, 0x29 ; sub dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007dd55d : sub al, 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, esi ; call rax
0xffffff80002fe35d : sub al, 0x39 ; ret
0xffffff8000651555 : sub al, 0x41 ; call qword ptr [rdi]
0xffffff80006a2f83 : sub al, 0x47 ; stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000448603 : sub al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000655fc1 : sub al, 0x4c ; mov edi, esi ; call qword ptr [rax]
0xffffff800043efb0 : sub al, 0x50 ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0xffffff8000287784 : sub al, 0x5d ; ret
0xffffff800027efc0 : sub al, 0x5f ; add eax, 0x5e415b00 ; pop rbp ; ret
0xffffff80006a2f68 : sub al, 0x62 ; stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80008ecab2 : sub al, 0x74 ; adc eax, dword ptr [rbx - 0x76b2a007] ; ret
0xffffff80003acbb8 : sub al, 0x75 ; add byte ptr [rax], al ; je 0xffffff80003acbc7 ; pop rbp ; ret
0xffffff800052b510 : sub al, 0x7b ; out 0xff, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800030ab1c : sub al, 0x7e ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007972b5 : sub al, 0x81 ; call qword ptr [rax]
0xffffff80003637dd : sub al, 0x83 ; ret
0xffffff80003b2bd9 : sub al, 0x89 ; ret
0xffffff80005702ac : sub al, 0x89 ; ret 0xc283
0xffffff8000b457da : sub al, 0x89 ; ret 0xeac1
0xffffff80002dc496 : sub al, 0x8b ; jnp 0xffffff80002dc4ca ; lea rsi, [r14 + 0x30] ; call rax
0xffffff800056a4aa : sub al, 0x8b ; jnp 0xffffff800056a532 ; xor esi, esi ; call rax
0xffffff80004d0fbb : sub al, 0x8b ; sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff80002f5989 : sub al, 0x8b ; xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff80008d3bf0 : sub al, 0x8d ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000767f10 : sub al, 0xb1 ; ret 0x44ff
0xffffff80006a2312 : sub al, 0xb8 ; mov dh, 0xfc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff8000662420 : sub al, 0xbd ; ret 0xebff
0xffffff800065fe7d : sub al, 0xc5 ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80003636ac : sub al, 0xc7 ; test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff800064fc70 : sub al, 0xe8 ; ret
0xffffff80003e78bc : sub al, 0xf6 ; ret
0xffffff80006ae3a0 : sub al, 0xf6 ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000888c77 : sub al, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0xffffff800036c9cc : sub al, 0xff ; dec dword ptr [rax - 0x77] ; loopne 0xffffff800036c9d4 ; ret
0xffffff800064d69b : sub al, 0xff ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000259138 : sub al, 0xff ; ret 0x5389
0xffffff800055e336 : sub al, 0xff ; ret 0xfa81
0xffffff800088fb45 : sub al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008300ad : sub al, 1 ; add byte ptr [rax], al ; xor esi, esi ; pop rbp ; jmp rax
0xffffff800044854d : sub al, 1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003be30b : sub al, 2 ; add byte ptr [rax], al ; jmp rdx
0xffffff800074c1ad : sub al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800069e3f0 : sub al, 4 ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006a20c5 : sub al, 5 ; mov ecx, 0x8948fffc ; ret 0x8b48
0xffffff8000892b4e : sub al, byte ptr [r8] ; pop rbp ; ret
0xffffff80007534af : sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007e2b65 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0xffffff8000567b70 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rcx
0xffffff800056cfe8 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rsi
0xffffff80005ca473 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, r15 ; jmp rcx
0xffffff80005684b1 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800088bfdd : sub al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000889c8f : sub al, byte ptr [rax] ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800088a8bf : sub al, byte ptr [rax] ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000893042 : sub al, byte ptr [rax] ; js 0xffffff80008930a8 ; pop r14 ; pop rbp ; ret
0xffffff8000892f45 : sub al, byte ptr [rax] ; mov ecx, 0x78 ; call 0xffffff800080f1a9
0xffffff8000894d29 : sub al, byte ptr [rax] ; mov rdi, qword ptr [rax + 0x10] ; call 0xffffff80008c0f88
0xffffff800088793f : sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800088cb3f : sub al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088ee0f : sub al, byte ptr [rax] ; push 0x5d5e415b ; ret
0xffffff800089008f : sub al, byte ptr [rax] ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088a41f : sub al, byte ptr [rax] ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000885fbf : sub al, byte ptr [rax] ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000b3a7a2 : sub al, byte ptr [rbp - 0x33] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003386d9 : sub al, byte ptr [rbp - 0x7eb98b01] ; ret 0x380
0xffffff8000843d05 : sub al, byte ptr [rcx - 0x7d] ; ret 0x4503
0xffffff8000893ea8 : sub al, byte ptr cs:[rax] ; pop rbp ; ret
0xffffff80007d7611 : sub al, ch ; sub dword ptr [rip - 0x7cb70054], eax ; ret
0xffffff8000780036 : sub al, cl ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000881c39 : sub bh, bh ; cmp bl, r13b ; loope 0xffffff8000881ca4 ; ret
0xffffff800085e9e8 : sub bh, bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004a54aa : sub bh, bh ; ret
0xffffff800026aee9 : sub bh, bh ; ret 0x1189
0xffffff8000372ded : sub bh, bh ; ret 0x8941
0xffffff80006e4227 : sub bh, bh ; ret 0x8b48
0xffffff80007e06f2 : sub bh, byte ptr [rdi - 0xb7ffd6] ; ret
0xffffff80006ac407 : sub bh, byte ptr [rsi + 1] ; mov rdi, r15 ; call rax
0xffffff8000309275 : sub bh, cl ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800089eaf2 : sub bh, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000420792 : sub bh, dh ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff80003f0553 : sub bh, dl ; push rsi ; ret
0xffffff80005d0612 : sub bl, ah ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800065fe84 : sub bl, ah ; ret 0x49ff
0xffffff80004b4ba4 : sub bl, bh ; fdivp st(7) ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008bb6f0 : sub bl, byte ptr [rbp - 0x76277601] ; ret
0xffffff800074b6c9 : sub bl, byte ptr [rdi + rdi*8 - 0x70000048] ; jmp qword ptr [rbx]
0xffffff800065b032 : sub bl, byte ptr [rdx - 0x76b7ffeb] ; ret
0xffffff80006d4f3f : sub bl, ch ; and esi, esi ; ret 0x7502
0xffffff80006d6c68 : sub bl, ch ; sub esi, dword ptr [rcx] ; fcomi st(6) ; ret 0x7502
0xffffff800053120d : sub bl, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d4f3e : sub bl, r13b ; and esi, esi ; ret 0x7502
0xffffff80006d6c67 : sub bl, r13b ; sub esi, dword ptr [rcx] ; fcomi st(6) ; ret 0x7502
0xffffff8000528e08 : sub byte ptr [r10 + 0xf], r8b ; mov dh, 0x14 ; and dword ptr [rcx], ecx ; ret 0x8842
0xffffff800073db63 : sub byte ptr [r11 - 0x3d], r13b ; rol ecx, 0xeb ; adc dword ptr [rcx], esi ; ret
0xffffff80005ac075 : sub byte ptr [r13 + 0x2928115c], r9b ; ret
0xffffff80007890fe : sub byte ptr [r13 + 0x31], al ; dec dword ptr [rax - 0x77] ; ret 0xc148
0xffffff800031cb34 : sub byte ptr [r8 + 0x39], r9b ; ret 0xc72
0xffffff800088e5ec : sub byte ptr [r8 + r9*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004af488 : sub byte ptr [r8 - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff8000897ea2 : sub byte ptr [r8 - 0x77], cl ; ret 0x2948
0xffffff8000763a3b : sub byte ptr [r8 - 0x77], cl ; sbb al, ch ; sti ; cmc ; ret 0x48ff
0xffffff800053664d : sub byte ptr [r8 - 0x77], r9b ; ret
0xffffff80007e7323 : sub byte ptr [r8 - 0x77], r9b ; ret 0x428a
0xffffff80007e6912 : sub byte ptr [r8 - 0x77], r9b ; ret 0x428b
0xffffff800084de7e : sub byte ptr [r8 - 0x7b], cl ; leave ; mov edx, r8d ; jmp 0xffffff800084de99
0xffffff80004d455b : sub byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rsp + rax + 0x31], 0xff ; call rax
0xffffff80002e93c3 : sub byte ptr [r8 - 0x7d], cl ; ret
0xffffff800088f4a7 : sub byte ptr [r8], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008b2d9e : sub byte ptr [r8], al ; pop rbp ; ret
0xffffff800088e875 : sub byte ptr [r8], r8b ; pop rbp ; ret
0xffffff80007817a5 : sub byte ptr [r9 + 0x5dc03102], r9b ; ret
0xffffff800026a898 : sub byte ptr [r9 - 0x75], r8b ; je 0xffffff800026a82f ; ret 0x2b41
0xffffff800049a5c6 : sub byte ptr [r9 - 0x75], r8b ; sbb al, 0xff ; ret
0xffffff8000311770 : sub byte ptr [r9 - 0xa], r8b ; shl byte ptr [rax + 0x44], 0x89 ; ret 0x1174
0xffffff800088f467 : sub byte ptr [r9], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002eba8b : sub byte ptr [rax + 0x39], cl ; ret
0xffffff800031cb35 : sub byte ptr [rax + 0x39], cl ; ret 0xc72
0xffffff800075f387 : sub byte ptr [rax + 0x39], r9b ; ret
0xffffff800044854a : sub byte ptr [rax + 0x5b012c4b], al ; pop r14 ; pop rbp ; ret
0xffffff8000824bad : sub byte ptr [rax + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff8000479db3 : sub byte ptr [rax + 0x63], cl ; push rbx ; xor al, ch ; ret
0xffffff80008be3b1 : sub byte ptr [rax + 1], bh ; pop rbp ; ret
0xffffff800026d484 : sub byte ptr [rax + 6], ch ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000337b29 : sub byte ptr [rax + rax + 0x5d], bh ; ret
0xffffff800085dece : sub byte ptr [rax + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082ca40 : sub byte ptr [rax - 0x75], cl ; cmp al, 0xd8 ; mov rsi, r14 ; call rcx
0xffffff800086b31a : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000775741 : sub byte ptr [rax - 0x77], cl ; fucomip st(0) ; mov dh, 0x1a ; ret 0xbeff
0xffffff8000536a75 : sub byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xe5c5
0xffffff8000429657 : sub byte ptr [rax - 0x77], cl ; jb 0xffffff8000429692 ; jmp 0xffffff8000429626
0xffffff80004af489 : sub byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff800053664e : sub byte ptr [rax - 0x77], cl ; ret
0xffffff80008c7753 : sub byte ptr [rax - 0x77], cl ; ret 0x1874
0xffffff80005b1fc6 : sub byte ptr [rax - 0x77], cl ; ret 0x1974
0xffffff8000897ea3 : sub byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff80007e7324 : sub byte ptr [rax - 0x77], cl ; ret 0x428a
0xffffff80007e6913 : sub byte ptr [rax - 0x77], cl ; ret 0x428b
0xffffff80005bd5d8 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000763a3c : sub byte ptr [rax - 0x77], cl ; sbb al, ch ; sti ; cmc ; ret 0x48ff
0xffffff8000278a48 : sub byte ptr [rax - 0x77], cl ; xchg dword ptr [rax + 0x5d000000], ecx ; ret
0xffffff80008c7752 : sub byte ptr [rax - 0x77], r9b ; ret 0x1874
0xffffff80005b1fc5 : sub byte ptr [rax - 0x77], r9b ; ret 0x1974
0xffffff800084de7f : sub byte ptr [rax - 0x7b], cl ; leave ; mov edx, r8d ; jmp 0xffffff800084de98
0xffffff8000628793 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0xffffff800050dd05 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rdx - 0x75], 0x7d ; lodsb al, byte ptr [rsi] ; call rax
0xffffff80004d455c : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x31], 0xff ; call rax
0xffffff80005d1444 : sub byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x9f ; ret
0xffffff80002e27b3 : sub byte ptr [rax - 0x7d], cl ; ret
0xffffff80008a6bf1 : sub byte ptr [rax - 0x7d], cl ; ret 0x3108
0xffffff80008ec00f : sub byte ptr [rax - 0x7d], cl ; ret 0x4803
0xffffff80006af566 : sub byte ptr [rax - 0x7d], cl ; ret 0x4922
0xffffff80006b8767 : sub byte ptr [rax - 0x7f], cl ; ret
0xffffff8000800b29 : sub byte ptr [rax - 0x7f], r9b ; ret
0xffffff80005933db : sub byte ptr [rax - 1], cl ; ret
0xffffff80003e20f3 : sub byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800085d311 : sub byte ptr [rax], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800085d348 : sub byte ptr [rax], 0 ; pop rbp ; ret
0xffffff8000342685 : sub byte ptr [rax], al ; add al, ch ; ret
0xffffff80002a5a62 : sub byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000437809 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008b5145 : sub byte ptr [rax], al ; add byte ptr [rax], al ; call 0xffffff80008113f6
0xffffff80002671d4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0xffffff800053ec1e : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rcx ; pop rbp ; jmp rax
0xffffff8000571f3e : sub byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000549627 : sub byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000638298 : sub byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff800061ec5d : sub byte ptr [rax], al ; add dh, dh ; ret 0x7510
0xffffff800085d312 : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008a6e0a : sub byte ptr [rax], al ; call 0xffffff8000393044
0xffffff80008a52b2 : sub byte ptr [rax], al ; jo 0xffffff80008a5318 ; pop r14 ; pop rbp ; ret
0xffffff80008a7142 : sub byte ptr [rax], al ; jo 0xffffff80008a71a8 ; pop r14 ; pop rbp ; ret
0xffffff800080cafa : sub byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800085d349 : sub byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ab6ec : sub byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000859126 : sub byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff80008b50bf : sub byte ptr [rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000855ba4 : sub byte ptr [rax], al ; test dil, 2 ; jne 0xffffff8000855bb7 ; pop rbp ; ret
0xffffff80008a623f : sub byte ptr [rax], al ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000751ecf : sub byte ptr [rax], al ; xor eax, eax ; mov rdx, rbx ; call 0xffffff800028e1b9
0xffffff800054ccd6 : sub byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a5fee : sub byte ptr [rax], cl ; add byte ptr [rax], al ; jmp 0xffffff80002a5fba
0xffffff80008328ce : sub byte ptr [rax], dh ; add byte ptr [rax], ch ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061ec5c : sub byte ptr [rax], r8b ; add dh, dh ; ret 0x7510
0xffffff80008b24be : sub byte ptr [rax], r8b ; pop rbp ; ret
0xffffff800065f534 : sub byte ptr [rbp + 0x15], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005ac076 : sub byte ptr [rbp + 0x2928115c], cl ; ret
0xffffff80007890ff : sub byte ptr [rbp + 0x31], al ; dec dword ptr [rax - 0x77] ; ret 0xc148
0xffffff80005d616c : sub byte ptr [rbp + 0x49], dh ; add al, ch ; pop rbx ; ret
0xffffff80008511f4 : sub byte ptr [rbp - 0x60], ch ; add rsp, 0x60 ; leave ; ret
0xffffff800062d394 : sub byte ptr [rbp - 0x76b70001], cl ; ret
0xffffff800025cd9e : sub byte ptr [rbp - 0x76fd8a25], al ; ret
0xffffff800064fb10 : sub byte ptr [rbp - 0x77], al ; ret 0x8948
0xffffff800036ea10 : sub byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff80008bb218 : sub byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx - 0x44] ; ret 2
0xffffff800033d85e : sub byte ptr [rbp - 0x7b], cl ; push qword ptr [rsp + rdx - 1] ; ret 0x8b41
0xffffff800081adde : sub byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0xffffff800026a7ce : sub byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 1
0xffffff8000262aca : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff80006d4f64 : sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800029a885 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80002f5986 : sub byte ptr [rbx + 0x4b8b2c53], cl ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff80002c6b36 : sub byte ptr [rbx + 0x5d], bl ; ret
0xffffff80004950da : sub byte ptr [rbx + 0x5d], r11b ; ret
0xffffff80003115c7 : sub byte ptr [rbx + rbp + 0x73], cl ; and byte ptr [rsi - 9], ah ; ret 0xfff
0xffffff8000711697 : sub byte ptr [rbx + rbx*8 - 0xb7c98c], al ; ret 0x8148
0xffffff800031a749 : sub byte ptr [rbx - 0x10343], al ; call qword ptr [rcx]
0xffffff800073db64 : sub byte ptr [rbx - 0x3d], ch ; rol ecx, 0xeb ; adc dword ptr [rcx], esi ; ret
0xffffff80007e59d8 : sub byte ptr [rbx - 0x67ccfb7], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf44
0xffffff80002e39ef : sub byte ptr [rbx - 0x7cb7d3ad], cl ; ret
0xffffff8000453734 : sub byte ptr [rbx], dl ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff80008785f3 : sub byte ptr [rcx + 0x39], cl ; ret 0x6d73
0xffffff800039eff5 : sub byte ptr [rcx + 0x51891c50], cl ; sbb al, 0x5d ; ret
0xffffff80007817a6 : sub byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff80008bc09e : sub byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0x4d ; mov ecx, ebx ; call r10
0xffffff8000837ecc : sub byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008173bf : sub byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000421143 : sub byte ptr [rcx + rcx*4 - 0x32], cl ; call rcx
0xffffff80007eaf57 : sub byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, r14 ; call rbx
0xffffff8000b3c0e6 : sub byte ptr [rcx + rcx*4], dl ; ret 0xca21
0xffffff8000371f89 : sub byte ptr [rcx - 0x3e912615], ah ; ret 0x441e
0xffffff800086db59 : sub byte ptr [rcx - 0x42], al ; ret 2
0xffffff80008909c0 : sub byte ptr [rcx - 0x44], al ; ret 2
0xffffff80002dc499 : sub byte ptr [rcx - 0x73], cl ; jbe 0xffffff80002dc4d3 ; call rax
0xffffff80002f135c : sub byte ptr [rcx - 0x73], cl ; push rsi ; xor byte ptr [rax - 0x7d], cl ; ret
0xffffff800026a899 : sub byte ptr [rcx - 0x75], al ; je 0xffffff800026a82e ; ret 0x2b41
0xffffff800026aee5 : sub byte ptr [rcx - 0x75], al ; push rbp ; sub bh, bh ; ret 0x1189
0xffffff800026ae4b : sub byte ptr [rcx - 0x75], al ; push rbp ; sub byte ptr [rcx], al ; ret 0x8941
0xffffff800049a5c7 : sub byte ptr [rcx - 0x75], al ; sbb al, 0xff ; ret
0xffffff8000311771 : sub byte ptr [rcx - 0xa], al ; shl byte ptr [rax + 0x44], 0x89 ; ret 0x1174
0xffffff800085ed14 : sub byte ptr [rcx - 3], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008b9774 : sub byte ptr [rcx - 9], dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002da451 : sub byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1b2
0xffffff8000740334 : sub byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800077e005 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000393294 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; popfq ; ret
0xffffff8000662473 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80006e1754 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff800088f468 : sub byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800056852c : sub byte ptr [rcx], al ; push rdi ; add al, ch ; call r10
0xffffff800026ae4f : sub byte ptr [rcx], al ; ret 0x8941
0xffffff800052d8a5 : sub byte ptr [rcx], bh ; ret
0xffffff80005931e6 : sub byte ptr [rcx], bh ; ret 0x87d
0xffffff8000269378 : sub byte ptr [rcx], bh ; ret 0xc75
0xffffff80007e506c : sub byte ptr [rcx], bh ; ret 0xf76
0xffffff800036b15f : sub byte ptr [rcx], ch ; ret
0xffffff80004f960c : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002cb5aa : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008e57ce : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800082cc33 : sub byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc7 ; pop rbp ; jmp rcx
0xffffff80007cf05c : sub byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xd7 ; mov rdx, r13 ; call rax
0xffffff80002cb5a9 : sub byte ptr [rcx], r14b ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800031ebe1 : sub byte ptr [rdi + 5], dh ; mov eax, 0x100 ; pop rbp ; ret
0xffffff8000528e09 : sub byte ptr [rdx + 0xf], al ; mov dh, 0x14 ; and dword ptr [rcx], ecx ; ret 0x8842
0xffffff80005def74 : sub byte ptr [rdx - 0x76b7000c], ah ; ret
0xffffff800039a302 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 2 ; pop rbp ; ret
0xffffff80002f4664 : sub byte ptr [rdx], bl ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030b2b4 : sub byte ptr [rdx], cl ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800080d33c : sub byte ptr [rdx], dh ; add byte ptr [rcx + 0x5dc03102], cl ; ret
0xffffff80002e0c97 : sub byte ptr [rdx], dh ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80007c2534 : sub byte ptr [rip - 0x76b70001], ah ; ret
0xffffff8000498b8c : sub byte ptr [rip - 0x7cb7ffa4], bh ; ret 0x3110
0xffffff8000529aff : sub byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rax
0xffffff800052bdf7 : sub byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rax
0xffffff800073988f : sub byte ptr [rsi - 0x3f], ah ; ret
0xffffff800085e814 : sub byte ptr [rsi - 3], al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005d9cc1 : sub byte ptr [rsi], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008b32c8 : sub byte ptr ds:[rax], al ; pop rbp ; ret
0xffffff80003a258a : sub ch, ah ; push 0 ; pop rbp ; ret
0xffffff80007b8708 : sub ch, byte ptr [rip + 0xfc33900] ; ret
0xffffff80003b4e42 : sub ch, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004c1ab9 : sub cl, byte ptr [rax + 0x29] ; ret
0xffffff800033c6a5 : sub cl, byte ptr [rax + 0x63] ; ret
0xffffff80008578a2 : sub cl, byte ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004142b4 : sub cl, byte ptr [rax - 0x73] ; mov byte ptr [rax], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0xffffff8000365d62 : sub cl, ch ; ret
0xffffff80005c13f5 : sub cl, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000365d61 : sub cl, r13b ; ret
0xffffff800071ea73 : sub cx, word ptr [rax + rsi - 2] ; movzx eax, cx ; pop rbp ; ret
0xffffff80006d564c : sub dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x854d
0xffffff80007d21d5 : sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800066b22b : sub dh, byte ptr [rax + rax] ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff80003a9df2 : sub dh, byte ptr [rax + rbp*2] ; add bh, bh ; ret
0xffffff80007ea892 : sub dh, byte ptr [rbx - 0xa] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007fcfc9 : sub dh, byte ptr [rcx + 0x2e] ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80006a4c2a : sub dh, byte ptr [rcx] ; test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; sti ; ret
0xffffff8000441f75 : sub dh, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000630af2 : sub dh, byte ptr [rsi + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800065ec82 : sub dh, ch ; ret 0x31ff
0xffffff80007b0013 : sub dh, dh ; ret
0xffffff800065eb84 : sub dh, dh ; ret 0x66ff
0xffffff800057ac17 : sub dh, dh ; ret 0x7401
0xffffff80005b124c : sub dh, dh ; ret 0xf01
0xffffff800089ebac : sub dil, sil ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035dd3b : sub dl, al ; add al, byte ptr [rax] ; loopne 0xffffff800035dcff ; ret 2
0xffffff80003602cd : sub dl, al ; add al, byte ptr [rax] ; loopne 0xffffff8000360291 ; ret 2
0xffffff800036053d : sub dl, al ; add al, byte ptr [rax] ; loopne 0xffffff8000360536 ; xor al, 0xb9 ; ret 2
0xffffff80005313bb : sub dl, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005650c4 : sub dl, bl ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002505a6 : sub dl, byte ptr [rax + rax] ; pop rbp ; ret
0xffffff800049e412 : sub dl, byte ptr [rdi - 0x3fce0021] ; pop rbp ; ret
0xffffff8000547834 : sub dl, dl ; add byte ptr es:[rax - 0x77], cl ; ret
0xffffff8000677cd2 : sub dl, dl ; dec dword ptr [rax + 1] ; ret
0xffffff800035dd3a : sub dl, r8b ; add al, byte ptr [rax] ; loopne 0xffffff800035dd00 ; ret 2
0xffffff80003602cc : sub dl, r8b ; add al, byte ptr [rax] ; loopne 0xffffff8000360292 ; ret 2
0xffffff800072b64f : sub dword ptr [rax + 0x39], ecx ; ret 0x2477
0xffffff800062c23e : sub dword ptr [rax + 0x4c000002], -0x77 ; lodsb al, byte ptr [rsi] ; ret
0xffffff80005ed3eb : sub dword ptr [rax + 0x4c000002], -0x77 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0xffffff800077d413 : sub dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800077da5e : sub dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff800030a1ea : sub dword ptr [rax + rax - 0x42], esp ; ret
0xffffff800030a1cd : sub dword ptr [rax + rax - 0x42], esp ; ret 0x18
0xffffff80008ad79e : sub dword ptr [rax - 0x76e7bc75], edx ; ret 0xdaf7
0xffffff8000746e28 : sub dword ptr [rax - 1], ecx ; ret
0xffffff800076ea76 : sub dword ptr [rax - 1], ecx ; ret 0x3948
0xffffff800083247d : sub dword ptr [rax - 1], ecx ; ret 0xff48
0xffffff800077e004 : sub dword ptr [rax], 0x5d000001 ; ret
0xffffff8000845b60 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80006129bf : sub dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, ecx ; pop rbp ; ret
0xffffff8000725ffe : sub dword ptr [rax], eax ; add byte ptr [rsi - 0x77], ah ; ret
0xffffff80004ba218 : sub dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007fcaae : sub dword ptr [rax], eax ; jne 0xffffff80007fcaa7 ; xor eax, eax ; pop rbp ; ret
0xffffff80007fcb5e : sub dword ptr [rax], eax ; jne 0xffffff80007fcb57 ; xor eax, eax ; pop rbp ; ret
0xffffff80007fcbde : sub dword ptr [rax], eax ; jne 0xffffff80007fcbd5 ; pop rbp ; ret
0xffffff8000896712 : sub dword ptr [rax], eax ; js 0xffffff8000896778 ; pop r14 ; pop rbp ; ret
0xffffff80007fef96 : sub dword ptr [rax], eax ; mov dword ptr [rcx + rax*4], esi ; xor eax, eax ; pop rbp ; ret
0xffffff80008a681c : sub dword ptr [rax], eax ; mov r14, rsi ; call 0xffffff8000392a47
0xffffff80007ff10a : sub dword ptr [rax], eax ; mov rax, qword ptr [r8 + rax + 0x40] ; pop rbp ; jmp rax
0xffffff80007ff00a : sub dword ptr [rax], eax ; mov rax, qword ptr [r8 + rax + 8] ; pop rbp ; jmp rax
0xffffff80007fefca : sub dword ptr [rax], eax ; mov rax, qword ptr [r8 + rax] ; pop rbp ; jmp rax
0xffffff80007ff0ca : sub dword ptr [rax], eax ; mov rax, qword ptr [r9 + rax + 0x20] ; pop rbp ; jmp rax
0xffffff80007ff04a : sub dword ptr [rax], eax ; mov rax, qword ptr [rax + rcx + 0x10] ; pop rbp ; jmp rax
0xffffff80007ff08a : sub dword ptr [rax], eax ; mov rax, qword ptr [rax + rcx + 0x18] ; pop rbp ; jmp rax
0xffffff80008989ff : sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff8000852c23 : sub dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fcb89 : sub dword ptr [rax], eax ; test rax, rax ; je 0xffffff80007fcb9b ; pop rbp ; jmp rax
0xffffff800089b01f : sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800078fceb : sub dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000392b15 : sub dword ptr [rax], edi ; leave ; ret
0xffffff80008a2a18 : sub dword ptr [rax], r8d ; pop rbp ; ret
0xffffff80005feb4b : sub dword ptr [rbx + 0x29446047], ecx ; loopne 0xffffff80005feb6b ; ret 0x4389
0xffffff8000769513 : sub dword ptr [rbx + 0x37], edx ; add al, ch ; and al, 0x9b ; ret 0x49ff
0xffffff800029feff : sub dword ptr [rbx + 0x41], ebx ; pop rsi ; pop rbp ; ret
0xffffff80008df4df : sub dword ptr [rbx + 0x41], ebx ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff80005c9983 : sub dword ptr [rbx - 0x76b70030], esp ; ret
0xffffff80008eb8dd : sub dword ptr [rbx - 0x7cb7dfae], ecx ; ret 0x4c03
0xffffff80007cf003 : sub dword ptr [rcx + 0x4c000002], -0x77 ; lodsb al, byte ptr [rsi] ; ret
0xffffff8000b3d11c : sub dword ptr [rcx + rcx*4], ecx ; ret 0xca21
0xffffff80002d52d6 : sub dword ptr [rcx + rdi + 0x35], ecx ; ret 0x818b
0xffffff800089cfae : sub dword ptr [rcx], 0x415b6000 ; pop rsi ; pop rbp ; ret
0xffffff80002928a7 : sub dword ptr [rcx], eax ; ret
0xffffff80008a45b9 : sub dword ptr [rcx], ebp ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003093b3 : sub dword ptr [rcx], ebp ; stc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800076259c : sub dword ptr [rcx], ecx ; ret 0x8842
0xffffff80002f2897 : sub dword ptr [rcx], esi ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80003c05ca : sub dword ptr [rdi + 0x74], edx ; add byte ptr [rax], al ; jne 0xffffff80003c05db ; pop rbp ; ret
0xffffff8000808a3d : sub dword ptr [rdx + 4], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0xffffff80003a8e9c : sub dword ptr [rdx], -0x7d ; ret 0x480e
0xffffff80007d7613 : sub dword ptr [rip - 0x7cb70054], eax ; ret
0xffffff80006aa72e : sub dword ptr [rsi + 1], edi ; mov rdi, r14 ; call rax
0xffffff800076b4a5 : sub dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007fbf12 : sub eax, 0 ; add al, ch ; ret
0xffffff8000862f25 : sub eax, 0x10b900 ; add byte ptr [rax], al ; call 0xffffff800080f1a9
0xffffff80002751c1 : sub eax, 0x1be0087 ; add byte ptr [rax], al ; add al, ch ; ret 0x11e2
0xffffff80007fd8f8 : sub eax, 0x200 ; add al, ch ; pop rbp ; ret
0xffffff80004789f4 : sub eax, 0x2b8 ; add cl, ch ; ret
0xffffff8000757a28 : sub eax, 0x39000000 ; ret 0xb74
0xffffff8000863c0e : sub eax, 0x3d8d4800 ; ret
0xffffff80008639e8 : sub eax, 0x3d8d4800 ; ret 0x18f5
0xffffff8000862ecf : sub eax, 0x415b1000 ; pop rsi ; pop rbp ; ret
0xffffff800086312f : sub eax, 0x415b2000 ; pop rsi ; pop rbp ; ret
0xffffff800085cd8f : sub eax, 0x415b2800 ; pop rsi ; pop rbp ; ret
0xffffff8000858e5f : sub eax, 0x415b3000 ; pop rsi ; pop rbp ; ret
0xffffff800085cfef : sub eax, 0x415b4000 ; pop rsi ; pop rbp ; ret
0xffffff8000860eef : sub eax, 0x415b5000 ; pop rsi ; pop rbp ; ret
0xffffff8000862a0f : sub eax, 0x415b6000 ; pop rsi ; pop rbp ; ret
0xffffff80007b595d : sub eax, 0x440f4800 ; ret 0x8b48
0xffffff80004f89e9 : sub eax, 0x48000000 ; add esp, 8 ; pop rbp ; ret
0xffffff800049e123 : sub eax, 0x4894a00 ; sub ecx, dword ptr [rax - 0x7d] ; ret
0xffffff8000861c85 : sub eax, 0x58b4800 ; ret 0x2d49
0xffffff80003bba05 : sub eax, 0x5d000000 ; ret
0xffffff80008ad367 : sub eax, 0x5d00289d ; ret
0xffffff800089d187 : sub eax, 0x5d00299d ; ret
0xffffff800055ac27 : sub eax, 0x5d0057d9 ; ret
0xffffff80008350a3 : sub eax, 0x63481475 ; ret 0x8d48
0xffffff800084e6b7 : sub eax, 0x8302e8c1 ; loopne 0xffffff800084e6c7 ; pop rbp ; ret
0xffffff800084e6b6 : sub eax, 0x8302e8c1 ; loopne 0xffffff800084e6c8 ; pop rbp ; ret
0xffffff800084e667 : sub eax, 0x8303e8c1 ; loopne 0xffffff800084e677 ; pop rbp ; ret
0xffffff800084e666 : sub eax, 0x8303e8c1 ; loopne 0xffffff800084e678 ; pop rbp ; ret
0xffffff800084e707 : sub eax, 0x8309e8c1 ; loopne 0xffffff800084e717 ; pop rbp ; ret
0xffffff800084e706 : sub eax, 0x8309e8c1 ; loopne 0xffffff800084e718 ; pop rbp ; ret
0xffffff800084e717 : sub eax, 0x830ce8c1 ; loopne 0xffffff800084e727 ; pop rbp ; ret
0xffffff800084e716 : sub eax, 0x830ce8c1 ; loopne 0xffffff800084e728 ; pop rbp ; ret
0xffffff800031f6f2 : sub eax, 0x83480007 ; ret
0xffffff800079bc03 : sub eax, 0x83480034 ; ret
0xffffff80004e90af : sub eax, 0x89000120 ; ret
0xffffff80004b929f : sub eax, 0x8900013b ; ret
0xffffff800075fd9f : sub eax, 0x89001a92 ; ret
0xffffff800043b9ff : sub eax, 0x89003894 ; ret 0xd285
0xffffff80005e76b2 : sub eax, 0x89480000 ; fucomip st(0) ; ret
0xffffff800055080d : sub eax, 0x89480000 ; ret
0xffffff8000659d7c : sub eax, 0x89480016 ; ret
0xffffff8000631c95 : sub eax, 0x89480018 ; ret
0xffffff8000611c95 : sub eax, 0x8948001a ; ret
0xffffff800057741d : sub eax, 0x89480020 ; ret
0xffffff80005c0f3e : sub eax, 0x8948ffd1 ; ret
0xffffff80004a5b93 : sub eax, 0x8948ffe3 ; ret
0xffffff8000888be7 : sub eax, 0x8948fffa ; ret
0xffffff80007d1d05 : sub eax, 0x8948fffe ; ret
0xffffff800078b412 : sub eax, 0x8948ffff ; ret
0xffffff80002a4433 : sub eax, 0x894c000f ; out 0xe8, eax ; ret 0xf2d
0xffffff80007644f3 : sub eax, 0x894cffc3 ; out dx, eax ; call 0xffffff8000393049
0xffffff80006eeb82 : sub eax, 0x89c03100 ; fsubp st(0) ; ret
0xffffff80007f144f : sub eax, 0x89ffba57 ; ret
0xffffff80004515ad : sub eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff80003926d6 : sub eax, 0xb8c90078 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff800066241d : sub eax, 0xbd2ce800 ; ret 0xebff
0xffffff800065f35c : sub eax, 0xc0310034 ; call 0xffffff800028e1b8
0xffffff800078031c : sub eax, 0xc031ffc1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039b367 : sub eax, 0xc031ffd7 ; pop rbp ; ret
0xffffff8000859b1b : sub eax, 0xc0854800 ; je 0xffffff8000859b2b ; call rax
0xffffff8000861b2a : sub eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff800085a106 : sub eax, 0xdf894800 ; mov rsi, rax ; call r15
0xffffff8000760455 : sub eax, 0xe8ff894c ; loop 0xffffff800076048e ; ret
0xffffff80008b015f : sub eax, 0xea1a5be8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ef764 : sub eax, 0xf6000000 ; ret
0xffffff80007b8709 : sub eax, 0xfc33900 ; ret
0xffffff8000497b2c : sub eax, 0xff482d74 ; ret 0x3948
0xffffff80003fb896 : sub eax, dword ptr [rax + rax] ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff8000882af0 : sub eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000884dff : sub eax, dword ptr [rax] ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000772ac5 : sub eax, dword ptr [rax] ; call 0xffffff800039a705
0xffffff80008846bf : sub eax, dword ptr [rax] ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800055096c : sub eax, dword ptr [rax] ; mov eax, dword ptr [rbx + 0x70] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000775b74 : sub eax, dword ptr [rax] ; mov rdi, rbx ; call 0xffffff800039a708
0xffffff800088203f : sub eax, dword ptr [rax] ; pop rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000881339 : sub eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80007d5254 : sub eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800082a1d6 : sub eax, dword ptr [rax] ; xor eax, eax ; mov rbx, r10 ; call rbx
0xffffff800050d838 : sub eax, dword ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d14a2 : sub eax, dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, ebp ; ret 0xf981
0xffffff80002e9a87 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008e04d1 : sub eax, dword ptr [rbx - 0x76b7fd20] ; ret 0xc148
0xffffff8000508295 : sub eax, dword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80002db4af : sub eax, dword ptr [rcx + rdx + 0x20] ; pop rbp ; ret
0xffffff80006d888f : sub eax, dword ptr [rcx - 0x75] ; push rdi ; add al, 0x39 ; ret 0x3373
0xffffff80002c0a33 : sub eax, dword ptr [rcx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005e046c : sub eax, dword ptr [rdi + 0x18] ; cmovs eax, ecx ; pop rbp ; ret
0xffffff800028e147 : sub eax, dword ptr [rdi + 4] ; pop rbp ; ret
0xffffff800028e0ff : sub eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800044863d : sub eax, dword ptr [rdi] ; mov dword ptr [rdi + 0xc], eax ; pop rbp ; ret
0xffffff80004486bf : sub eax, dword ptr [rdi] ; pop rbp ; ret
0xffffff8000448f85 : sub eax, dword ptr [rdx + 0x10] ; pop rbp ; ret
0xffffff800085cc79 : sub eax, dword ptr [rdx + rdi*4] ; pop rbp ; ret
0xffffff800028e137 : sub eax, dword ptr [rsi + 4] ; pop rbp ; ret
0xffffff800028e117 : sub eax, dword ptr [rsi + 8] ; pop rbp ; ret
0xffffff80002c808c : sub eax, dword ptr [rsi] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff80004a54f6 : sub eax, dword ptr [rsi] ; pop rbp ; ret
0xffffff800040c49b : sub eax, eax ; mov dword ptr [rdi + 0x70], r8d ; pop rbp ; ret
0xffffff800051be7b : sub eax, eax ; pop rbx ; add byte ptr [rcx], bh ; ret
0xffffff80005c0e61 : sub eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a37c : sub eax, ecx ; add rsp, 8 ; pop rbp ; ret
0xffffff80007953c4 : sub eax, ecx ; cdqe ; pop rbp ; ret
0xffffff800058909f : sub eax, ecx ; jne 0xffffff80005890af ; call rcx
0xffffff8000589262 : sub eax, ecx ; jne 0xffffff8000589272 ; call rcx
0xffffff80004191fb : sub eax, ecx ; mov edx, eax ; jmp 0xffffff8000419221
0xffffff800041b0c1 : sub eax, ecx ; mov edx, eax ; jmp 0xffffff800041b0e7
0xffffff80008b1735 : sub eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff80002fac53 : sub eax, ecx ; pop rbp ; ret
0xffffff800064a1e8 : sub eax, ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800090a92c : sub eax, ecx ; ret
0xffffff8000251851 : sub eax, ecx ; shl rax, 0x12 ; pop rbp ; ret
0xffffff800071e1d2 : sub eax, ecx ; sub eax, edx ; movzx eax, ax ; pop rbp ; ret
0xffffff8000795d52 : sub eax, edi ; cdqe ; pop rbp ; ret
0xffffff8000366a19 : sub eax, edi ; pop rbp ; ret
0xffffff80004d46ea : sub eax, edi ; sub esi, ecx ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0xffffff800071ea93 : sub eax, edx ; add rax, rcx ; add rax, rsi ; pop rbp ; ret
0xffffff800071ea24 : sub eax, edx ; mov word ptr [r9], ax ; xor eax, eax ; pop rbp ; ret
0xffffff800071e1d4 : sub eax, edx ; movzx eax, ax ; pop rbp ; ret
0xffffff80004ab0af : sub eax, edx ; pop rbp ; ret
0xffffff80007b8106 : sub eax, esi ; add dword ptr [rdi + 0x30], eax ; pop rbp ; ret
0xffffff8000366b8e : sub eax, esi ; add rax, r8 ; pop rbp ; ret
0xffffff80005f49a3 : sub eax, esi ; cmp eax, 2 ; setg dl ; jmp 0xffffff80005f49bb
0xffffff80004486e6 : sub eax, esi ; mov qword ptr [rdi + 0x18], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80004ab076 : sub eax, esi ; pop rbp ; ret
0xffffff800039f11e : sub eax, esi ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c0e60 : sub eax, r11d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000770711 : sub ebp, dword ptr [rcx] ; ret 0xebff
0xffffff80003b4e41 : sub ebp, dword ptr [rdx] ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003ae6c6 : sub ebp, dword ptr [rdx] ; pop rbp ; ret
0xffffff800034d548 : sub ebp, dword ptr [rsi - 0x76b3ffa0] ; ret
0xffffff80004bf327 : sub ebp, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d9054 : sub ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000639944 : sub ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008ab601 : sub ebx, dword ptr [rsi + 0x5dc031ff] ; ret
0xffffff80006609f0 : sub ebx, eax ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80005311a5 : sub ebx, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008df6d9 : sub ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000765211 : sub ebx, esi ; ret 0x41ff
0xffffff80003a423e : sub ecx, -0x80 ; lock cmpxchg qword ptr [rcx], rdi ; pop rbp ; ret
0xffffff8000519f9b : sub ecx, 0x8948ffdb ; ret
0xffffff800071ea74 : sub ecx, dword ptr [rax + rsi - 2] ; movzx eax, cx ; pop rbp ; ret
0xffffff800081b804 : sub ecx, dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff8000342e6d : sub ecx, dword ptr [rax - 0x77] ; ret
0xffffff800049e128 : sub ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800025d94c : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4805
0xffffff800078fc30 : sub ecx, dword ptr [rax - 0x7f] ; ret
0xffffff80007097fd : sub ecx, dword ptr [rax - 1] ; ret 0x8148
0xffffff8000389673 : sub ecx, dword ptr [rax] ; test r15, r15 ; jne 0xffffff80003896b8 ; call qword ptr [rax]
0xffffff80006a04c1 : sub ecx, dword ptr [rbp + 0x11] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80004d9c81 : sub ecx, dword ptr [rbx - 0x3fce001a] ; pop rbp ; ret
0xffffff80008dc661 : sub ecx, dword ptr [rsi - 0x4917ffe0] ; ret
0xffffff800039ef4a : sub ecx, eax ; mov dword ptr [r14], ecx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000545f40 : sub ecx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a7383 : sub ecx, ecx ; ret 0x48ff
0xffffff80003093b4 : sub ecx, edi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80005c1394 : sub ecx, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff800035265e : sub ecx, edx ; mov eax, ecx ; pop rbp ; ret
0xffffff800039299f : sub edi, dword ptr [rax] ; leave ; ret
0xffffff80005cc381 : sub edi, dword ptr [rcx - 0x30] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065582b : sub edi, dword ptr [rdi] ; xor eax, 0xe8c03100 ; jp 0xffffff80006557c6 ; ret
0xffffff800052ea96 : sub edi, dword ptr [rsi + 1] ; mov rdi, r13 ; call rax
0xffffff80006273c8 : sub edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff80007c27f3 : sub edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x42f6
0xffffff80003f0444 : sub edi, edx ; push rsi ; ret
0xffffff80006273c6 : sub edi, edx ; sub edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff800082e8b1 : sub edi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a9d50 : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002db45e : sub edx, dword ptr [rcx + rsi + 0x20] ; mov rax, rdx ; pop rbp ; ret
0xffffff8000793fdf : sub edx, eax ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003150c6 : sub edx, eax ; jmp 0xffffff80003150ef
0xffffff80005312dd : sub edx, ebx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000791dbb : sub edx, ebx ; mov rdi, r14 ; mov rsi, rbx ; call rax
0xffffff80004e6429 : sub edx, ebx ; xor esi, esi ; call 0xffffff800010e0d7
0xffffff800041b0e2 : sub edx, ecx ; mov dword ptr [rdi + 0x18], edx ; pop rbp ; ret
0xffffff8000651783 : sub edx, ecx ; ret
0xffffff80002b02a3 : sub edx, edx ; add dword ptr [rax], 0x5d ; ret
0xffffff800080078b : sub edx, esi ; inc rdx ; jmp 0xffffff80008007a8
0xffffff800080084b : sub edx, esi ; inc rdx ; jmp 0xffffff8000800869
0xffffff8000800bdb : sub edx, esi ; inc rdx ; jmp 0xffffff8000800bf8
0xffffff8000800c9b : sub edx, esi ; inc rdx ; jmp 0xffffff8000800cb8
0xffffff8000800d5b : sub edx, esi ; inc rdx ; jmp 0xffffff8000800d78
0xffffff8000800e1b : sub edx, esi ; inc rdx ; jmp 0xffffff8000800e38
0xffffff80007923cb : sub edx, esi ; inc rdx ; mov rdi, r14 ; call rax
0xffffff80008ea332 : sub edx, esi ; inc rdx ; mov rdi, r15 ; call rax
0xffffff800078eeb2 : sub edx, esi ; inc rdx ; mov rdi, rbx ; call rax
0xffffff80006087e0 : sub edx, esi ; jg 0xffffff80006087d5 ; pop rbp ; ret
0xffffff8000791ceb : sub edx, esi ; mov rdi, r14 ; call rax
0xffffff80007ff471 : sub esi, dword ptr [rcx + rdi*4] ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff80006d6c6a : sub esi, dword ptr [rcx] ; fcomi st(6) ; ret 0x7502
0xffffff800031aed1 : sub esi, dword ptr [rdi + 7] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002c80c5 : sub esi, dword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80008126e4 : sub esi, dword ptr [rdx] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; jmp rax
0xffffff80002e0857 : sub esi, dword ptr [rdx] ; mov rax, qword ptr [rcx + rax*8 + 0x28] ; pop rbp ; ret
0xffffff80005351f1 : sub esi, dword ptr [rip - 0x76b7ffbb] ; ret
0xffffff80003992de : sub esi, dword ptr [rsp] ; mov qword ptr [rcx], rsi ; pop rdi ; ret
0xffffff8000337b24 : sub esi, eax ; mov dword ptr [rip + 0x7c2824], esi ; pop rbp ; ret
0xffffff80004d46ec : sub esi, ecx ; add esi, eax ; mov eax, esi ; pop rbp ; ret
0xffffff80004954da : sub esi, ecx ; jge 0xffffff80004954ed ; add qword ptr [rdi + 8], r8 ; pop rbp ; ret
0xffffff80002674e7 : sub esi, edi ; add qword ptr [rdx + 8], rsi ; xor eax, eax ; pop rbp ; ret
0xffffff80007b7a60 : sub esi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005df5e2 : sub esi, esi ; ret 0x7508
0xffffff80002f8be9 : sub esp, -7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800070ec5c : sub esp, 0x39000004 ; ret 0x840f
0xffffff8000754021 : sub esp, dword ptr [rbx + 2] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003a39e1 : sub esp, dword ptr [rbx - 0x76b70002] ; ret
0xffffff80007a6801 : sub esp, dword ptr [rdi - 3] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006773d0 : sub esp, dword ptr [rsi - 0x3f] ; ret 0x4108
0xffffff8000391389 : sub esp, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800036053c : sub r10b, r8b ; add al, byte ptr [rax] ; loopne 0xffffff8000360537 ; xor al, 0xb9 ; ret 2
0xffffff8000881a68 : sub r8, qword ptr [r8] ; pop rbp ; ret
0xffffff8000891f5e : sub r8b, byte ptr [r8] ; pop rbp ; ret
0xffffff80008823f8 : sub r8d, dword ptr [rax] ; pop rbp ; ret
0xffffff800040c49a : sub r8d, eax ; mov dword ptr [rdi + 0x70], r8d ; pop rbp ; ret
0xffffff8000861b29 : sub rax, -0x3b7cb800 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000861c84 : sub rax, 0x58b4800 ; ret 0x2d49
0xffffff8000882078 : sub rax, qword ptr [r8] ; pop rbp ; ret
0xffffff80002db4ae : sub rax, qword ptr [rcx + rdx + 0x20] ; pop rbp ; ret
0xffffff80002c0a32 : sub rax, qword ptr [rcx] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c808b : sub rax, qword ptr [rsi] ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800039f11d : sub rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800090a92b : sub rax, r9 ; ret
0xffffff800039a37b : sub rax, rcx ; add rsp, 8 ; pop rbp ; ret
0xffffff80007953c3 : sub rax, rcx ; cdqe ; pop rbp ; ret
0xffffff80002fac52 : sub rax, rcx ; pop rbp ; ret
0xffffff8000251850 : sub rax, rcx ; shl rax, 0x12 ; pop rbp ; ret
0xffffff8000795d51 : sub rax, rdi ; cdqe ; pop rbp ; ret
0xffffff8000366a18 : sub rax, rdi ; pop rbp ; ret
0xffffff8000366b8d : sub rax, rsi ; add rax, r8 ; pop rbp ; ret
0xffffff80002db45d : sub rdx, qword ptr [rcx + rsi + 0x20] ; mov rax, rdx ; pop rbp ; ret
0xffffff80003150c5 : sub rdx, rax ; jmp 0xffffff80003150f0
0xffffff8000791dba : sub rdx, rbx ; mov rdi, r14 ; mov rsi, rbx ; call rax
0xffffff80004e6428 : sub rdx, rbx ; xor esi, esi ; call 0xffffff800010e0d8
0xffffff800080078a : sub rdx, rsi ; inc rdx ; jmp 0xffffff80008007a9
0xffffff800080084a : sub rdx, rsi ; inc rdx ; jmp 0xffffff800080086a
0xffffff8000800bda : sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800bf9
0xffffff8000800c9a : sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800cb9
0xffffff8000800d5a : sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800d79
0xffffff8000800e1a : sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800e39
0xffffff80007923ca : sub rdx, rsi ; inc rdx ; mov rdi, r14 ; call rax
0xffffff80008ea331 : sub rdx, rsi ; inc rdx ; mov rdi, r15 ; call rax
0xffffff800078eeb1 : sub rdx, rsi ; inc rdx ; mov rdi, rbx ; call rax
0xffffff8000791cea : sub rdx, rsi ; mov rdi, r14 ; call rax
0xffffff80002c80c4 : sub rsi, qword ptr [rdi] ; add qword ptr [rdi + 8], rsi ; pop rbp ; ret
0xffffff80003992dd : sub rsi, qword ptr [rsp] ; mov qword ptr [rcx], rsi ; pop rdi ; ret
0xffffff80005cf5ad : syscall ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003a498b : syscall ; pop r11 ; pop rcx ; pop rax ; ret
0xffffff80004833f3 : sysenter
0xffffff8000422ee0 : test ah, 0x20 ; jne 0xffffff8000422ef3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000316466 : test ah, 0x80 ; sete dl ; jmp 0xffffff8000316477
0xffffff8000492a28 : test ah, ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff800060efa5 : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x7ee8
0xffffff8000336d3c : test ah, al ; add eax, 0x894c0000 ; and cl, ch ; ret
0xffffff8000495a64 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000439ce9 : test ah, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0xffffff80004a1055 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0xffffff800066568f : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003851a7 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2148
0xffffff800078ff1d : test al, 0 ; add bh, dh ; ret
0xffffff80003ba3f3 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800037a088 : test al, 0 ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000392565 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0xffffff800089860c : test al, 0 ; add byte ptr [rax], al ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff80007951f2 : test al, 0 ; add byte ptr [rax], al ; mov rax, rdi ; pop rbp ; ret
0xffffff8000563a9d : test al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ceb07 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b7069 : test al, 0 ; add byte ptr [rax], al ; sub eax, edi ; pop rbp ; ret
0xffffff80007952c8 : test al, 0 ; add byte ptr [rax], al ; sub rax, rdi ; pop rbp ; ret
0xffffff8000737bd3 : test al, 0 ; add byte ptr [rcx], dh ; imul al ; ret
0xffffff80008ba30a : test al, 0x20 ; add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x25], cl ; pop rdx ; ret
0xffffff800088a8be : test al, 0x2a ; add byte ptr [rax], bh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007c09d6 : test al, 0x2c ; add bh, bh ; ret 0xd139
0xffffff80004d6d44 : test al, 0x2f ; add al, ch ; ret 0xffeb
0xffffff800044d442 : test al, 0x30 ; push rdx ; add byte ptr [rax + 0x450f4c01], ch ; ret
0xffffff80005f673c : test al, 0x35 ; add byte ptr [rax - 0x77], r9b ; ret 0x98e8
0xffffff8000b3b4d9 : test al, 0x39 ; ret
0xffffff800075ee84 : test al, 0x3a ; ret
0xffffff80002ace03 : test al, 0x44 ; mov rdx, r14 ; call 0xffffff8000299027
0xffffff8000659d04 : test al, 0x44 ; ret
0xffffff80006c03b4 : test al, 0x46 ; str word ptr [rax - 0x77] ; ret
0xffffff8000295742 : test al, 0x48 ; add ecx, eax ; jmp rcx
0xffffff800076520c : test al, 0x48 ; mov ebx, eax ; call 0xffffff8000393047
0xffffff80008f708e : test al, 0x48 ; mov ecx, dword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; call rbx
0xffffff800081cdbe : test al, 0x48 ; mov edi, dword ptr [rbp - 0x50] ; call rcx
0xffffff80002d6677 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call 0xffffff8000392937
0xffffff8000659af4 : test al, 0x49 ; ret
0xffffff800065c192 : test al, 0x4c ; lea ecx, [rdi + 0x18] ; mov edx, dword ptr [rdi + 0x18] ; add edx, eax ; jmp 0xffffff800065c1d4
0xffffff80008f6e63 : test al, 0x4c ; mov ecx, dword ptr [rbp - 0x50] ; call r12
0xffffff80008f6cd3 : test al, 0x4c ; mov ecx, dword ptr [rbp - 0x50] ; call rbx
0xffffff80003164b6 : test al, 0x4c ; mov edi, ebp ; call 0xffffff8000392796
0xffffff800076515f : test al, 0x4c ; mov edi, esi ; call 0xffffff8000392a47
0xffffff800087e620 : test al, 0x4c ; mov esi, edi ; mov rdx, r14 ; call rax
0xffffff8000252e27 : test al, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80002e8cbc : test al, 0x65 ; jge 0xffffff80002e8cc8 ; xor esi, esi ; call 0xffffff80002d4ef8
0xffffff80007382bf : test al, 0x66 ; cmove eax, ecx ; movzx eax, ax ; pop rbp ; ret
0xffffff8000737fa4 : test al, 0x66 ; cmove ecx, eax ; movzx eax, cx ; pop rbp ; ret
0xffffff80003bf594 : test al, 0x69 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800034f899 : test al, 0x7a ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006cef25 : test al, 0x81 ; ret 0x7fcf
0xffffff80007bc524 : test al, 0x81 ; scasb al, byte ptr [rdi] ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000432731 : test al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003513a5 : test al, 0x89 ; ret
0xffffff80002da242 : test al, 0x89 ; ret 0xc148
0xffffff8000b4b26f : test al, 0x89 ; ret 0xe281
0xffffff800037f3d1 : test al, 0x89 ; ror byte ptr [rax + 0x39], 1 ; ret
0xffffff800082de44 : test al, 0x8b ; add al, ch ; ret
0xffffff800066a594 : test al, 0x8f ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f6dc4 : test al, 0x8f ; sar edi, 1 ; pop rbp ; ret
0xffffff80008827b4 : test al, 0x91 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008825b4 : test al, 0x93 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006299bc : test al, 0xa1 ; add byte ptr [r11 + 0x440f0ac0], r8b ; ret
0xffffff8000866c44 : test al, 0xa7 ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076d0ea : test al, 0xb0 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80007f9b72 : test al, 0xb5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072e06e : test al, 0xba ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000262af3 : test al, 0xd2 ; add dword ptr [rax], 0x5d ; ret
0xffffff800063fe32 : test al, 0xd5 ; dec dword ptr [rax + 1] ; ret
0xffffff80005cfe0d : test al, 0xdc ; dec dword ptr [rax - 0x77] ; ret 0x2b48
0xffffff8000660504 : test al, 0xdc ; ret 0x49ff
0xffffff800049e020 : test al, 0xe3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800064fcf4 : test al, 0xe7 ; ret
0xffffff8000693ca6 : test al, 0xe8 ; and al, 0x9d ; std ; dec dword ptr [rax - 0x77] ; ret 0xc931
0xffffff8000517371 : test al, 0xe8 ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075dfe6 : test al, 0xe8 ; push rsp ; push rax ; ret
0xffffff80007feb68 : test al, 0xe8 ; ret 0x274
0xffffff80004d8822 : test al, 0xeb ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000737c9e : test al, 0xf ; mov bh, 0xc1 ; pop rbp ; ret
0xffffff80003851e9 : test al, 0xf ; mov dh, 0x14 ; xor dword ptr [rcx], ecx ; ret 0x1488
0xffffff80003b2e18 : test al, 0xf ; scasd eax, dword ptr [rdi] ; mov cl, 0xe0 ; add cl, byte ptr [rax + 1] ; ret 0x8d4c
0xffffff800062f3ef : test al, 0xf ; xchg eax, esp ; ret 0xca08
0xffffff80008d6be1 : test al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800057ac8f : test al, 0xf6 ; ret
0xffffff80006ef4d5 : test al, 0xf6 ; ret 0x4c20
0xffffff8000611e61 : test al, 0xf6 ; ret 0x7420
0xffffff8000896b6b : test al, 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085aa51 : test al, 0xfb ; dec dword ptr [rax - 0x77] ; ret
0xffffff800030bd34 : test al, 0xff ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800080ee92 : test al, 0xff ; pop rbp ; ret
0xffffff80003b3165 : test al, 0xff ; ret 0x8948
0xffffff800062de01 : test al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004cfbd8 : test al, 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0xffffff8000269846 : test al, 1 ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800086435f : test al, 2 ; add byte ptr [rax], al ; mov rdi, rax ; call 0xffffff8000870649
0xffffff8000316462 : test al, 2 ; jne 0xffffff8000316479 ; test ah, 0x80 ; sete dl ; jmp 0xffffff800031647b
0xffffff800040eeec : test al, 2 ; jne 0xffffff800040eef7 ; pop rbp ; ret
0xffffff80003bab26 : test al, 3 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80003ba810 : test al, 3 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800072e5a7 : test al, 4 ; add byte ptr [rax], al ; or byte ptr [rdi + 0x34], 2 ; pop rbp ; ret
0xffffff8000863899 : test al, 5 ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff80008ba3ba : test al, 8 ; add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x25], cl ; stosb byte ptr [rdi], al ; ret 0x27
0xffffff80004b37ad : test al, 8 ; jne 0xffffff80004b37be ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008dad94 : test al, ah ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0xffffff800088db94 : test al, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x41], al ; ret 2
0xffffff80002667ce : test al, al ; je 0xffffff80002667ec ; xor eax, eax ; pop rbp ; ret
0xffffff80006116fa : test al, al ; je 0xffffff8000611705 ; pop rbp ; ret
0xffffff800063085a : test al, al ; je 0xffffff8000630865 ; pop rbp ; ret
0xffffff80006660af : test al, al ; je 0xffffff80006660ba ; pop rbp ; ret
0xffffff800036682a : test al, al ; jne 0xffffff80003667e5 ; pop rbp ; ret
0xffffff80008be34a : test al, al ; jne 0xffffff80008be313 ; jmp 0xffffff80008be365
0xffffff8000380941 : test al, bh ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80008f1d6d : test al, ch ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083fe16 : test al, dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xb820
0xffffff80005d049d : test al, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000855ba7 : test bh, 2 ; jne 0xffffff8000855bb4 ; pop rbp ; ret
0xffffff80008323db : test bh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0xffffff8000364b5b : test bh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff800074987d : test bh, bh ; ret
0xffffff8000584685 : test bh, bh ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff80005a488f : test bh, bl ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000693a65 : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0xf08
0xffffff80003e7db0 : test bl, 2 ; jne 0xffffff80003e7dc3 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800087bde5 : test bl, 2 ; jne 0xffffff800087bdf8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003eab84 : test bl, 4 ; jne 0xffffff80003eab97 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000663570 : test bl, bl ; add eax, 0x89480000 ; ret
0xffffff80005a4067 : test bl, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006eb5d9 : test bl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000518833 : test byte ptr [r8 + 0x29], r9b ; ret
0xffffff800049efb0 : test byte ptr [r8 - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000800789 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff80008007aa
0xffffff8000800849 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff800080086b
0xffffff8000800bd9 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff8000800bfa
0xffffff8000800c99 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff8000800cba
0xffffff8000800d59 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff8000800d7a
0xffffff8000800e19 : test byte ptr [rax + 0x29], 0xf2 ; inc rdx ; jmp 0xffffff8000800e3a
0xffffff8000791ce9 : test byte ptr [rax + 0x29], 0xf2 ; mov rdi, r14 ; call rax
0xffffff80003965e9 : test byte ptr [rax + 0x29], 0xf8 ; pop rbp ; ret
0xffffff8000518834 : test byte ptr [rax + 0x29], cl ; ret
0xffffff8000613a35 : test byte ptr [rax + 0x31000000], bl ; ror byte ptr [rax - 0x77], cl ; ret
0xffffff80003a85b1 : test byte ptr [rax + 0x48000001], ah ; mov edi, esi ; call rax
0xffffff800079fe78 : test byte ptr [rax + 0x63], cl ; ret 0xc148
0xffffff800054f601 : test byte ptr [rax + 0xe], 1 ; jne 0xffffff800054f610 ; pop rbp ; ret
0xffffff80004b85ce : test byte ptr [rax + 0xf], 0x44 ; ret
0xffffff80008e063d : test byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0xffffff800030f410 : test byte ptr [rax + 1], 0xf2 ; jmp 0xffffff800030f42a
0xffffff80003adceb : test byte ptr [rax + rax + 0x5f60000], dh ; ret 0x7246
0xffffff80007b0839 : test byte ptr [rax + rax - 0x62180000], dh ; ret
0xffffff80008ef405 : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008ef3f8 : test byte ptr [rax + rax], ah ; test rax, rax ; je 0xffffff80008ef40a ; call rax
0xffffff800072e556 : test byte ptr [rax + rax], al ; add byte ptr [rax + 0x5d40334f], al ; ret
0xffffff80008877ca : test byte ptr [rax + rax], bh ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x2ada
0xffffff8000558dac : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800061ec5b : test byte ptr [rax + rbp], al ; add dh, dh ; ret 0x7510
0xffffff8000558ddf : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800080ff30 : test byte ptr [rax + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80008df253 : test byte ptr [rax + rdx], ah ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff8000705ef4 : test byte ptr [rax + rsi*4], ah ; add eax, 0x39480000 ; ret
0xffffff8000558dce : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80003ac599 : test byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0x8b48
0xffffff8000824cd5 : test byte ptr [rax - 0x73], 0x15 ; ret
0xffffff80008587c6 : test byte ptr [rax - 0x73], 0x3d ; ret 0x28cb
0xffffff8000794026 : test byte ptr [rax - 0x73], 0x3d ; ret 0x34a8
0xffffff800089dfa8 : test byte ptr [rax - 0x73], 0x45 ; ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0xffffff8000260789 : test byte ptr [rax - 0x73], 5 ; call qword ptr [rdi]
0xffffff80004b2566 : test byte ptr [rax - 0x75000000], bl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0xffffff80007c13e6 : test byte ptr [rax - 0x75], 0x45 ; mov al, 0x89 ; ret 0x2944
0xffffff80007e690f : test byte ptr [rax - 0x75], 0x45 ; sub byte ptr [rax - 0x77], cl ; ret 0x428b
0xffffff80005343bc : test byte ptr [rax - 0x75], 0x55 ; ror byte ptr [rcx + rcx*4 - 0x1f], 1 ; call r8
0xffffff800068e28c : test byte ptr [rax - 0x75], 0x7d ; or byte ptr [rax - 0x77], 0xda ; call rax
0xffffff8000867511 : test byte ptr [rax - 0x75], 0x7d ; shr al, 0xc5 ; ret
0xffffff800082c9e2 : test byte ptr [rax - 0x77], 0xc2 ; pop rbp ; jmp rcx
0xffffff8000766e84 : test byte ptr [rax - 0x77], 0xc2 ; pop rbx ; pop r14 ; pop rbp ; jmp rcx
0xffffff800082cc35 : test byte ptr [rax - 0x77], 0xc7 ; pop rbp ; jmp rcx
0xffffff80008b4476 : test byte ptr [rax - 0x77], 0xca ; pop rbp ; jmp rax
0xffffff800066d8ce : test byte ptr [rax - 0x77], 0xd7 ; call 0xffffff8000529b76
0xffffff80007cf05e : test byte ptr [rax - 0x77], 0xd7 ; mov rdx, r13 ; call rax
0xffffff80007dd23a : test byte ptr [rax - 0x77], 0xd7 ; mov rdx, r14 ; call rax
0xffffff8000267100 : test byte ptr [rax - 0x77], 0xda ; call r15
0xffffff80008835a3 : test byte ptr [rax - 0x77], 0xda ; call rax
0xffffff800054bf9a : test byte ptr [rax - 0x77], 0xdf ; call r15
0xffffff8000529ba9 : test byte ptr [rax - 0x77], 0xdf ; call rax
0xffffff80005c17a2 : test byte ptr [rax - 0x77], 0xdf ; call rcx
0xffffff80007cf5fd : test byte ptr [rax - 0x77], 0xdf ; mov rdx, qword ptr [rbp - 0x48] ; call rax
0xffffff800064723f : test byte ptr [rax - 0x77], 0xdf ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0xffffff80005ed3d1 : test byte ptr [rax - 0x77], 0xdf ; mov rdx, r12 ; call rax
0xffffff800062c224 : test byte ptr [rax - 0x77], 0xdf ; mov rdx, r13 ; call rax
0xffffff80007cefee : test byte ptr [rax - 0x77], 0xdf ; mov rdx, r13 ; call rcx
0xffffff800054c7a3 : test byte ptr [rax - 0x77], 0xdf ; mov rdx, r14 ; call rax
0xffffff800052b074 : test byte ptr [rax - 0x77], 0xdf ; mov rdx, r15 ; call rax
0xffffff80007d6120 : test byte ptr [rax - 0x77], 0xfb ; call rax
0xffffff80002b2048 : test byte ptr [rax - 0x7b], 0xc0 ; je 0xffffff80002b2059 ; call rax
0xffffff80002b2693 : test byte ptr [rax - 0x7b], 0xc0 ; je 0xffffff80002b26a4 ; call rax
0xffffff800087058f : test byte ptr [rax - 0x7b], 0xc9 ; je 0xffffff80008705a1 ; mov rsi, qword ptr [rcx] ; call rax
0xffffff800087ae98 : test byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0xffffff800049efb1 : test byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000747b2d : test byte ptr [rax - 0x7d], cl ; ret 0x45f8
0xffffff80007479eb : test byte ptr [rax - 0x7d], cl ; ret 0x4830
0xffffff8000558d8a : test byte ptr [rax], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80007a77a7 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x10b9
0xffffff8000495cda : test byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003922fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; ret
0xffffff8000744e2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; call rcx
0xffffff8000793b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xffffff8000793bc5
0xffffff80004f9387 : test byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800029bdbd : test byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002a5b19 : test byte ptr [rax], al ; mov eax, dword ptr [rax] ; pop rbp ; ret
0xffffff80002a0aac : test byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002a09ce : test byte ptr [rax], al ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002afd09 : test byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff80002afd29 : test byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff800029d489 : test byte ptr [rax], al ; pop rbp ; ret
0xffffff80002a1f6d : test byte ptr [rax], al ; push rax ; ret
0xffffff800054ff4c : test byte ptr [rax], bl ; pop rbp ; ret
0xffffff800027c8e1 : test byte ptr [rax], cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008a098f : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003ca8e2 : test byte ptr [rax], dh ; pop rbp ; ret
0xffffff800029d8c1 : test byte ptr [rbp + 0x31], 0xc0 ; jmp rcx
0xffffff80003f343d : test byte ptr [rbp + 0x39000001], ah ; ret 0x860f
0xffffff800084b396 : test byte ptr [rbp - 0x1000000], al ; ret
0xffffff8000355c49 : test byte ptr [rbp - 0x76ffffff], ah ; ret
0xffffff800042c0a4 : test byte ptr [rbp - 0x77], 0xf8 ; call 0xffffff8000508346
0xffffff80004f6a9a : test byte ptr [rbp - 0xa000000], dl ; ret
0xffffff80003a6f37 : test byte ptr [rbp], dh ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff8000769cb8 : test byte ptr [rbx + 0x37], cl ; add al, ch ; jg 0xffffff8000769c53 ; ret 0x48ff
0xffffff800036a2b4 : test byte ptr [rbx + 0x474fffb], 0x39 ; ret
0xffffff80007c8770 : test byte ptr [rbx + 0x48000000], bl ; mov edi, ebx ; call rax
0xffffff80006b6eec : test byte ptr [rbx + 0x48000000], cl ; mov esi, dword ptr [rbp - 0x40] ; call rax
0xffffff8000793532 : test byte ptr [rbx + 0x5744c50], 0xf6 ; ret 0x7504
0xffffff8000865516 : test byte ptr [rbx + 0x58], 1 ; je 0xffffff80008654f6 ; jmp 0xffffff80008654e7
0xffffff800036d4b8 : test byte ptr [rbx + 2], bl ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80005ac4ea : test byte ptr [rbx + rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000570af0 : test byte ptr [rbx + rbx*2], cl ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; pop rbp ; ret
0xffffff80007e2c81 : test byte ptr [rbx - 0x1000000], bl ; ret 0x8348
0xffffff8000545714 : test byte ptr [rbx - 0x3dc6b7af], 0xf ; ret 0x798b
0xffffff8000b3edbf : test byte ptr [rbx - 0x76], bh ; ret 0x438f
0xffffff80008c0dd8 : test byte ptr [rbx - 0x76b7000a], ch ; ret
0xffffff800059f598 : test byte ptr [rbx - 0x76b7002d], dl ; ret
0xffffff80002822a7 : test byte ptr [rbx - 0x77000000], dl ; ret 0xd2f7
0xffffff8000398598 : test byte ptr [rbx], al ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008db48f : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003fb895 : test byte ptr [rbx], ch ; add al, 0 ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff80007336c5 : test byte ptr [rbx], cl ; ret
0xffffff8000549512 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002d2d1e : test byte ptr [rcx + 0x38], 4 ; cmovne rax, rcx ; pop rbp ; ret
0xffffff80003c653d : test byte ptr [rcx + 0x39000000], bl ; ret
0xffffff80004fa73d : test byte ptr [rcx + 0x41], 1 ; jne 0xffffff80004fa74e ; xor eax, eax ; pop rbp ; ret
0xffffff80007a8010 : test byte ptr [rcx + 0x48000000], cl ; mov edi, ebx ; call rdx
0xffffff8000635720 : test byte ptr [rcx + 0x4a], dl ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff80008ee6c3 : test byte ptr [rcx + 0x4c000000], al ; mov edi, esi ; call rcx
0xffffff80004cd156 : test byte ptr [rcx + 0x71], 0x10 ; jne 0xffffff80004cd167 ; xor eax, eax ; pop rbp ; ret
0xffffff800069ba8f : test byte ptr [rcx + 0xf], 0x95 ; ret 0x2041
0xffffff8000839ff2 : test byte ptr [rcx + 0xf], 0xb6 ; ret
0xffffff800069ba98 : test byte ptr [rcx + 0xf], 0xb6 ; ret 0xf883
0xffffff80006a01e3 : test byte ptr [rcx + 0xf], 0xb6 ; xchg eax, edi ; ret
0xffffff8000684de4 : test byte ptr [rcx + 1], ch ; add byte ptr [rax], al ; xor esi, esi ; call 0xffffff8000551039
0xffffff800026ef51 : test byte ptr [rcx + rax + 0x39480000], ah ; ret 0x840f
0xffffff80002715ef : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0xffffff800074e10d : test byte ptr [rcx + rax], ch ; add dh, dh ; ret 0xf04
0xffffff80007397f9 : test byte ptr [rcx + rbp - 0xd], 0xff ; ret
0xffffff8000535406 : test byte ptr [rcx + rcx*4 + 0x25], 0x62 ; ret
0xffffff80004cdd59 : test byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff800076a5f5 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov dword ptr [rbp - 0x50], edx ; call rax
0xffffff800076b296 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, dword ptr [rbp - 0x40] ; call rax
0xffffff800076a717 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, dword ptr [rbp - 0x50] ; call rax
0xffffff80008cd7b8 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, eax ; call r15
0xffffff800062bb69 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rax
0xffffff80007d0fe0 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rcx
0xffffff80007c92bd : test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, eax ; call rcx
0xffffff8000646445 : test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, edi ; call rax
0xffffff80006423a6 : test byte ptr [rcx + rcx*4 - 0x11], 0x4c ; mov edx, esp ; call rax
0xffffff8000557b3d : test byte ptr [rcx + rcx*4 - 0x11], 0x89 ; fimul dword ptr [rax - 0x77] ; ret
0xffffff8000304804 : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret
0xffffff80006a4c2c : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; sti ; ret
0xffffff8000483d3a : test byte ptr [rcx + rcx*4 - 0x16], 0xe8 ; ret
0xffffff80008da9f9 : test byte ptr [rcx + rcx*4 - 0x16], 0xff ; push rax ; cmp bh, bh ; ret
0xffffff80004e4602 : test byte ptr [rcx + rcx*4 - 0x19], 0x48 ; mov edx, dword ptr [rbp + 0x28] ; call rax
0xffffff80005dca11 : test byte ptr [rcx + rcx*4 - 0x19], 0x48 ; mov edx, ebx ; call rax
0xffffff800064ab67 : test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, ebp ; call rax
0xffffff80007c569a : test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, ebp ; call rcx
0xffffff8000621aaa : test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, edi ; call rax
0xffffff800076ac38 : test byte ptr [rcx + rcx*4 - 0x19], 0x4c ; mov edx, esi ; call rax
0xffffff800069d004 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0xffffff8000708cd6 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; xchg eax, ecx ; ret 0xfffc
0xffffff80007d3f86 : test byte ptr [rcx + rcx*4 - 0x19], 0xff ; ror byte ptr [rax - 0x77], 1 ; ret
0xffffff8000905d79 : test byte ptr [rcx + rcx*4 - 0x1e], 0x41 ; call rax
0xffffff8000646f38 : test byte ptr [rcx + rcx*4 - 0xd], 0x75 ; ret 0xc5e9
0xffffff800054c15a : test byte ptr [rcx + rcx*4 - 1], 0x48 ; mov edx, ebx ; call rax
0xffffff80006052ab : test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, ebp ; call rax
0xffffff800064cfc9 : test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, esi ; call rax
0xffffff800054d41b : test byte ptr [rcx + rcx*4 - 1], 0x4c ; mov edx, esp ; call rax
0xffffff80007d39b0 : test byte ptr [rcx + rcx*4 - 1], 0xff ; ror byte ptr [rax - 0x77], 1 ; ret
0xffffff80003888f6 : test byte ptr [rcx + rcx*4 - 6], 0x48 ; mov ecx, eax ; call 0xffffff8000384b49
0xffffff8000776373 : test byte ptr [rcx + rcx*4 - 6], 0xe8 ; add al, 8 ; ret 0x48ff
0xffffff80005ee517 : test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov dword ptr [rbp - 0x40], edx ; call rax
0xffffff80005ee5f3 : test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov edx, dword ptr [rbp - 0x40] ; call rax
0xffffff800054cdd1 : test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov edx, ebx ; call rax
0xffffff800076a11e : test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, ebp ; call rax
0xffffff800054d703 : test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, edi ; call rax
0xffffff8000557bf5 : test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, esp ; call rax
0xffffff8000546bb2 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0xffffff8000554dd0 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; push rdi ; ret 0xffff
0xffffff8000656890 : test byte ptr [rcx + rdi - 6], 0x73 ; sbb al, 0x4c ; mov edi, ebp ; call rax
0xffffff80003c5fd0 : test byte ptr [rcx - 0x48], 6 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff80005129c9 : test byte ptr [rcx - 0x75], 0x4d ; push 0x29e28944 ; ret 0x448d
0xffffff80007acb21 : test byte ptr [rcx - 0x77], 0xd7 ; call rax
0xffffff8000267793 : test byte ptr [rcx - 0x77], 0xff ; mov edi, 0xfffffffa ; call rbx
0xffffff8000b49a8a : test byte ptr [rcx - 0x78], al ; rol dword ptr [rcx + 0x20], cl ; ret
0xffffff80002bd253 : test byte ptr [rcx - 0x7d], 0xce ; adc dh, dh ; ret 0x4cc0
0xffffff800059e76a : test byte ptr [rcx - 0xa000000], al ; ret 0x7480
0xffffff8000553d6a : test byte ptr [rcx - 1], 0x56 ; xor byte ptr [rax - 0x77], cl ; ret
0xffffff8000b3d6a3 : test byte ptr [rcx], 0x9c ; ret
0xffffff800072dd56 : test byte ptr [rcx], al ; add byte ptr [rax], al ; or byte ptr [rdi + 0x32], 4 ; pop rbp ; ret
0xffffff80005709a6 : test byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007b3ff7 : test byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003f9744 : test byte ptr [rcx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x860f
0xffffff80005494f4 : test byte ptr [rcx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000767578 : test byte ptr [rcx], dh ; ret
0xffffff80003ba787 : test byte ptr [rcx], dh ; test rax, rax ; je 0xffffff80003ba7bb ; pop rbp ; ret
0xffffff800078cbc9 : test byte ptr [rdi + 0x30], 2 ; jne 0xffffff800078cbd8 ; pop rbp ; ret
0xffffff8000756aae : test byte ptr [rdi + 0x70], 1 ; jne 0xffffff8000756abf ; xor eax, eax ; pop rbp ; ret
0xffffff8000319ae9 : test byte ptr [rdi + 0xe8], 0x40 ; sete dl ; jmp 0xffffff8000319b00
0xffffff800054f995 : test byte ptr [rdi + 0xe], 0x80 ; jne 0xffffff800054f9a4 ; pop rbp ; ret
0xffffff80003ab90a : test byte ptr [rdi + 1], bh ; add byte ptr [rax], al ; call rcx
0xffffff800076e2f4 : test byte ptr [rdi + 2], ah ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0xffffff80007a7305 : test byte ptr [rdi + 6], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0xffffff80008237ae : test byte ptr [rdi + rdi*8 - 1], ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000878c41 : test byte ptr [rdi - 0x48000000], dl ; ret 2
0xffffff8000529796 : test byte ptr [rdi - 0x72b7001a], 0x3d ; jmp rdi
0xffffff8000896c68 : test byte ptr [rdi - 0x76b70009], ah ; ret
0xffffff80007fc0e8 : test byte ptr [rdi - 0x76b70057], dh ; ret
0xffffff8000602134 : test byte ptr [rdi - 0x9000000], bl ; ret
0xffffff8000387d1f : test byte ptr [rdi], 0x44 ; enter -0x3777, 0x5d ; ret
0xffffff80003e0f02 : test byte ptr [rdi], 0x44 ; ret
0xffffff8000387d10 : test byte ptr [rdi], 0x44 ; ret 0xc1f6
0xffffff8000325f14 : test byte ptr [rdi], 0x44 ; ret 0xd285
0xffffff8000602132 : test byte ptr [rdi], 0x84 ; lahf ; add byte ptr [rax], al ; add bh, dh ; ret
0xffffff80008af6bf : test byte ptr [rdi], 0x84 ; pop rsi ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800056723a : test byte ptr [rdi], 0x84 ; ret
0xffffff800042cfad : test byte ptr [rdi], 0x84 ; ret 0
0xffffff8000460d83 : test byte ptr [rdi], 0x84 ; ret 0xfff4
0xffffff800026a7d1 : test byte ptr [rdi], 0x84 ; ret 1
0xffffff800042f1f6 : test byte ptr [rdi], 0x84 ; ret 2
0xffffff800033004a : test byte ptr [rdi], 0x84 ; ret 5
0xffffff800068a8f3 : test byte ptr [rdi], 0x85 ; ret
0xffffff80006e448e : test byte ptr [rdi], 0x85 ; ret 0
0xffffff8000322dc7 : test byte ptr [rdi], 0x94 ; ret
0xffffff80004711cd : test byte ptr [rdi], 0x94 ; ret 0x2044
0xffffff80002bd0f1 : test byte ptr [rdi], 0x94 ; ret 0xf641
0xffffff800081a226 : test byte ptr [rdi], 0x95 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800069bfc7 : test byte ptr [rdi], 0x95 ; ret
0xffffff800031179c : test byte ptr [rdi], 0x95 ; ret 0x854d
0xffffff80006c0218 : test byte ptr [rdi], 0x95 ; ret 0x894c
0xffffff80007c752c : test byte ptr [rdi], 0x95 ; ret 0x8b48
0xffffff800044cf93 : test byte ptr [rdi], 0x95 ; ret 0x940f
0xffffff80002696cb : test byte ptr [rdi], 0x95 ; ret 0xb60f
0xffffff800036ecb9 : test byte ptr [rdi], 0x95 ; ret 0xc220
0xffffff800026c14f : test byte ptr [rdi], 0x95 ; ret 0xd120
0xffffff800064e962 : test byte ptr [rdi], 0x95 ; ret 0xf41
0xffffff80008779c6 : test byte ptr [rdi], 0x95 ; ret 0xf44
0xffffff80005779b5 : test byte ptr [rdi], 0x95 ; ret 0xf883
0xffffff80004eb9e0 : test byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0x94 ; ret
0xffffff80005d1447 : test byte ptr [rdi], 0x9f ; ret
0xffffff800058fea1 : test byte ptr [rdi], 0xb7 ; sar byte ptr [rcx], cl ; setae dl ; jmp 0xffffff800058fee3
0xffffff800058fe85 : test byte ptr [rdi], 0xb7 ; sar byte ptr [rcx], cl ; setbe dl ; jmp 0xffffff800058fee3
0xffffff800058fe61 : test byte ptr [rdi], 0xb7 ; sar byte ptr [rcx], cl ; sete dl ; jmp 0xffffff800058fee3
0xffffff800058fe6e : test byte ptr [rdi], 0xb7 ; sar byte ptr [rcx], cl ; setne dl ; jmp 0xffffff800058fee3
0xffffff8000769351 : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800049d098 : test byte ptr [rdi], ah ; test rax, rax ; je 0xffffff800049d0ac ; pop rbp ; jmp rax
0xffffff80002fb5bd : test byte ptr [rdi], bh ; pop rbp ; ret
0xffffff80004c6848 : test byte ptr [rdi], bl ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000511c14 : test byte ptr [rdi], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff8000733699 : test byte ptr [rdi], dh ; ret
0xffffff800076b6b6 : test byte ptr [rdi], dl ; add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0xffffff8000b496e0 : test byte ptr [rdx + 0x14d0112], ah ; ror dword ptr [rcx + 0x29], cl ; ret
0xffffff8000b496ad : test byte ptr [rdx + 0x22], cl ; push rcx ; push rsp ; or r9b, byte ptr [rax + 1] ; ret 0x294c
0xffffff8000318cdc : test byte ptr [rdx + 0xe8], 0x40 ; sete dl ; jmp 0xffffff8000318d4a
0xffffff80003a85f5 : test byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; mov rdi, rsi ; call rcx
0xffffff80007aa5a7 : test byte ptr [rdx + rax + 0xbe0000], cl ; ret 1
0xffffff8000380a97 : test byte ptr [rdx - 0xa000000], ah ; ret
0xffffff80007984a8 : test byte ptr [rdx - 2], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072cd42 : test byte ptr [rdx], 0 ; add byte ptr [rbx - 0x72f0fd08], al ; ret
0xffffff800025e8f9 : test byte ptr [rdx], al ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff8000532483 : test byte ptr [rdx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800089e2bc : test byte ptr [rdx], al ; add eax, 0xbf410000 ; ret 2
0xffffff80007fcca8 : test byte ptr [rdx], al ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008d8ff8 : test byte ptr [rdx], bh ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085cd8e : test byte ptr [rip + 0x415b2800], ch ; pop rsi ; pop rbp ; ret
0xffffff800025dc1f : test byte ptr [rip + 0x58b6600], dl ; ret
0xffffff80006b82b7 : test byte ptr [rip + 0x8000003], al ; ret
0xffffff8000757819 : test byte ptr [rip - 0x74b7ffcb], 0x1c ; ret
0xffffff80004cd29e : test byte ptr [rip - 0x9ffffff], ah ; ret 0x7534
0xffffff800066cf1e : test byte ptr [rip - 0x9ffffff], cl ; ret 0x7402
0xffffff80004185cb : test byte ptr [rsi + 0x29000002], dl ; ret
0xffffff80004065e4 : test byte ptr [rsi + 0x29fffffd], ch ; ret 0x8b48
0xffffff80007691b8 : test byte ptr [rsi + 0x37], dl ; add al, ch ; jg 0xffffff8000769164 ; ret 0x4aff
0xffffff80006bd824 : test byte ptr [rsi + 0x4c000000], bl ; mov esi, esp ; call rax
0xffffff8000319785 : test byte ptr [rsi + 0xe8], 0x40 ; sete dl ; jmp 0xffffff800031979c
0xffffff800033010f : test byte ptr [rsi - 0x75000000], ch ; push rbx ; cmp al, 0xf6 ; ret 0x7501
0xffffff800058bfe8 : test byte ptr [rsi - 0x7d000000], dl ; ret
0xffffff800057ac94 : test byte ptr [rsi - 0x9000003], ch ; ret
0xffffff8000610bdc : test byte ptr [rsi - 0x9fffffd], dl ; ret
0xffffff800057aa4b : test byte ptr [rsi - 0x9fffffe], bh ; ret
0xffffff80008cad66 : test byte ptr [rsi], 0 ; add byte ptr [rcx], al ; ret
0xffffff800052e6f9 : test byte ptr [rsi], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800032abb3 : test byte ptr [rsi], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000509682 : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b49
0xffffff80005e55cf : test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008def75 : test byte ptr [rsp + rax], ah ; add al, byte ptr [rax] ; add bh, dh ; ret
0xffffff8000469792 : test byte ptr [rsp + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff8000497d37 : test byte ptr [rsp + rax], bl ; add byte ptr [rax - 1], cl ; ret
0xffffff80004696ec : test byte ptr [rsp + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff8000558dbd : test byte ptr [rsp + rbp*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000558eb4 : test byte ptr [rsp + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0xffffff8000696986 : test byte ptr [rsp + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff8000558df0 : test byte ptr [rsp + rdx*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000558d9b : test byte ptr [rsp], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80006c6798 : test ch, 0x20 ; cmove eax, edx ; jmp 0xffffff80006c67a5
0xffffff80004c859a : test ch, 4 ; jne 0xffffff80004c85a7 ; pop rbp ; ret
0xffffff80002c9cda : test ch, ah ; add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0xffffff80003f9768 : test ch, al ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret 0x8b48
0xffffff80006601a2 : test ch, al ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80004a3cb5 : test ch, bh ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000854dba : test ch, bl ; or dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0xffffff80003555e6 : test ch, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007f97b2 : test ch, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008defb2 : test cl, 0x11 ; add byte ptr [rcx], dh ; imul al ; ret
0xffffff80007a0e01 : test cl, 2 ; cmove eax, edx ; jmp 0xffffff80007a0e65
0xffffff800077d283 : test cl, 2 ; jne 0xffffff800077d29f ; pop rbp ; ret
0xffffff8000796149 : test cl, 2 ; jne 0xffffff8000796156 ; pop rbp ; ret
0xffffff8000796199 : test cl, 2 ; jne 0xffffff80007961a6 ; pop rbp ; ret
0xffffff80006286e9 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0xffffff80007571f8 : test cl, bh ; ret
0xffffff8000548829 : test cl, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80005841ed : test cl, cl ; cmove dx, ax ; movzx eax, dx ; pop rbp ; ret
0xffffff80008b9623 : test cl, cl ; cmovne rax, rdx ; jmp 0xffffff80008b9692
0xffffff80005841c9 : test cl, cl ; je 0xffffff80005841d8 ; xor eax, eax ; pop rbp ; ret
0xffffff8000366772 : test cl, cl ; jne 0xffffff8000366765 ; pop rbp ; ret
0xffffff80003667ba : test cl, cl ; jne 0xffffff80003667a5 ; pop rbp ; ret
0xffffff80003668a9 : test cl, cl ; jne 0xffffff80003668a8 ; mov rax, rdi ; pop rbp ; ret
0xffffff8000800786 : test cl, cl ; jne 0xffffff8000800789 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff80008007ad
0xffffff8000800846 : test cl, cl ; jne 0xffffff8000800849 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff800080086e
0xffffff8000800bd6 : test cl, cl ; jne 0xffffff8000800bd9 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800bfd
0xffffff8000800c96 : test cl, cl ; jne 0xffffff8000800c99 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800cbd
0xffffff8000800d56 : test cl, cl ; jne 0xffffff8000800d59 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800d7d
0xffffff8000800e16 : test cl, cl ; jne 0xffffff8000800e19 ; sub rdx, rsi ; inc rdx ; jmp 0xffffff8000800e3d
0xffffff800084b775 : test cl, cl ; jne 0xffffff800084b765 ; pop rbp ; ret
0xffffff80008d2a2a : test cl, cl ; jne 0xffffff80008d2a25 ; pop rbp ; ret
0xffffff800069d2e5 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x81 ; ret
0xffffff80008df2b0 : test cl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff80004b7b31 : test dh, 2 ; jne 0xffffff80004b7b44 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002d6f25 : test dh, ah ; add byte ptr [rax], al ; add bh, bh ; ret 0xf239
0xffffff800046af4a : test dh, ah ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x137d
0xffffff800083221d : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80005daf5d : test dh, ch ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff80004a160b : test dh, dh ; je 0xffffff80004a1625 ; inc edx ; jmp 0xffffff80004a160a
0xffffff8000879928 : test dh, dh ; jne 0xffffff8000879939 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006c5e45 : test dh, dh ; ret 0x7402
0xffffff8000618546 : test dh, dh ; sbb eax, 0x3d830000 ; ret 0x50c4
0xffffff800081a225 : test dh, dh ; setne al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000855ba6 : test dil, 2 ; jne 0xffffff8000855bb5 ; pop rbp ; ret
0xffffff80007587c2 : test dl, 0x10 ; jne 0xffffff80007587cf ; pop rbp ; ret
0xffffff800049eac9 : test dl, 1 ; cmove rax, rcx ; pop rbp ; ret
0xffffff8000558e46 : test dl, bh ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0xffffff8000880175 : test dl, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; ret 2
0xffffff8000408415 : test dl, bh ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0xffffff800031a845 : test dl, bh ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0xffffff80003eab81 : test dl, bh ; push rsi ; ret
0xffffff80004083f0 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0xffffff80003534d2 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fucomi st(1) ; ret 1
0xffffff8000672f49 : test dl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff8000439b30 : test dl, dh ; idiv bh ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0xffffff80002a1d30 : test dl, dl ; jne 0xffffff80002a1d29 ; jmp 0xffffff80002a1d6f
0xffffff8000366aea : test dl, dl ; jne 0xffffff8000366ae8 ; mov rax, rdi ; pop rbp ; ret
0xffffff80004ed67b : test dl, dl ; jne 0xffffff80004ed68a ; xor eax, eax ; pop rbp ; ret
0xffffff80004ed6db : test dl, dl ; jne 0xffffff80004ed6ea ; xor eax, eax ; pop rbp ; ret
0xffffff80006d061c : test dl, dl ; jne 0xffffff80006d05f8 ; mov eax, r8d ; pop rbp ; ret
0xffffff800072bfd6 : test dl, dl ; jne 0xffffff800072bfa8 ; mov eax, r8d ; pop rbp ; ret
0xffffff800049eece : test dword ptr [r8 - 0x7d], 0x5d5b08c4 ; ret
0xffffff80004e9ce8 : test dword ptr [rax + 0x1fffffe], edi ; ret
0xffffff8000751a69 : test dword ptr [rax + 0x21fffffe], ebp ; ret
0xffffff80004be86f : test dword ptr [rax + 0x29fffffe], eax ; ret
0xffffff800065378d : test dword ptr [rax + 0x35], edx ; add byte ptr [rcx], dh ; shr al, 0x18 ; stosb byte ptr [rdi], al ; ret
0xffffff8000848e8a : test dword ptr [rax + 0x39fffffa], edi ; ret
0xffffff80008eccd1 : test dword ptr [rax + 0xf], 0x820ff1a3 ; ret
0xffffff80006a17e9 : test dword ptr [rax + 0xffffffe], ebp ; mov dh, 0x80 ; ret
0xffffff80006a1a34 : test dword ptr [rax + 0xffffffe], ebp ; mov dh, 0x90 ; ret
0xffffff80005e1dfa : test dword ptr [rax + 0xffffffe], ecx ; mov dh, 0x80 ; ret
0xffffff8000648c80 : test dword ptr [rax + 2], ecx ; add byte ptr [rax], al ; add al, 0xf ; xchg eax, esp ; ret
0xffffff80002e77db : test dword ptr [rax + rax + 0xb90000], eax ; add bh, bh ; jmp qword ptr [rbx]
0xffffff80002e63af : test dword ptr [rax + rax + 0xb90000], ebp ; add bh, bh ; jmp qword ptr [rbx]
0xffffff80002f06aa : test dword ptr [rax + rax + 0xb90000], ecx ; add bh, bh ; jmp qword ptr [rbx]
0xffffff80002de5fe : test dword ptr [rax + rax + 0xb90000], edi ; add bh, bh ; jmp qword ptr [rbx]
0xffffff8000640fc7 : test dword ptr [rax + rax - 0x48f10000], edi ; ret
0xffffff800042b26e : test dword ptr [rax + rax], 0x89d98948 ; ret
0xffffff8000656a7e : test dword ptr [rax + rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000652356 : test dword ptr [rax + rax], ecx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000826c0f : test dword ptr [rax - 0x1000000], edx ; ret
0xffffff8000520153 : test dword ptr [rax - 0x17000000], ebp ; ret 0
0xffffff800076f493 : test dword ptr [rax - 0x17000003], edi ; jrcxz 0xffffff800076f519 ; ret 0x41ff
0xffffff800076f2c0 : test dword ptr [rax - 0x17000003], edi ; mov dh, 0x78 ; ret 0x41ff
0xffffff80004081f4 : test dword ptr [rax - 0x17000008], eax ; ret 0xfed8
0xffffff800043c39f : test dword ptr [rax - 0x75], 0x67e8d055 ; ret
0xffffff800043c35a : test dword ptr [rax - 0x75], 0xace8d055 ; ret
0xffffff800030c173 : test dword ptr [rax - 0x76000002], eax ; ret
0xffffff8000480e01 : test dword ptr [rax - 0x76000002], esi ; ret
0xffffff8000462e62 : test dword ptr [rax - 0x76000002], esp ; ret 0x8d48
0xffffff80003f3387 : test dword ptr [rax - 0x76000008], eax ; ret 0x8948
0xffffff80006bed9e : test dword ptr [rax - 0x77000002], esp ; ret 0x858b
0xffffff800081366c : test dword ptr [rax - 0x77], 0x5dd1ffc6 ; ret
0xffffff80004f9022 : test dword ptr [rax - 0x77], 0x5de875ce ; ret
0xffffff8000800b39 : test dword ptr [rax - 0x77], 0x5e415bde ; pop rbp ; jmp rax
0xffffff800059f962 : test dword ptr [rax - 0x77], 0x8944b85d ; ret
0xffffff8000263c82 : test dword ptr [rax - 0x77], 0xc6e875c6 ; ret
0xffffff800028a900 : test dword ptr [rax - 0x77], 0xca8948d6 ; pop rbp ; jmp r8
0xffffff8000819c78 : test dword ptr [rax - 0x77], 0xe2894cc6 ; call r15
0xffffff80004bedbc : test dword ptr [rax - 0x7a000002], esi ; ror byte ptr [rdi], 0x85 ; ret 7
0xffffff800049eecf : test dword ptr [rax - 0x7d], 0x5d5b08c4 ; ret
0xffffff800074e0fb : test dword ptr [rax - 0xa000000], esp ; ret 0xf02
0xffffff80006b799a : test dword ptr [rax - 2], ecx ; ret 0x4ae9
0xffffff8000462897 : test dword ptr [rax - 2], esp ; dec dword ptr [rax - 1] ; ret
0xffffff8000714022 : test dword ptr [rax*2 - 0xb703d7], eax ; ret
0xffffff80005b9d85 : test dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000375208 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0xffffff800028e192 : test dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000291ba3 : test dword ptr [rax], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800028f96b : test dword ptr [rax], eax ; pop rbp ; ret
0xffffff8000290708 : test dword ptr [rax], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80007092e3 : test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0xffffff80006ccc2a : test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; jmp qword ptr [rcx]
0xffffff800054fe55 : test dword ptr [rax], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800083d3e5 : test dword ptr [rax], edx ; or byte ptr [rax - 0x3f], cl ; jmp 0xffffff802a465d19
0xffffff8000486827 : test dword ptr [rax], esi ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000571c35 : test dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000375207 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0xffffff800058fbf7 : test dword ptr [rbp + rdi*8 - 0x76990001], ebp ; ret 0x72e9
0xffffff800058e9c4 : test dword ptr [rbp + rdi*8 - 0x76990001], ebp ; ret 0x894d
0xffffff80006cfe05 : test dword ptr [rbp + rdi*8 - 0x7cb70001], ecx ; ret
0xffffff800048ab4d : test dword ptr [rbp + rdi*8 - 1], eax ; call qword ptr [rsi]
0xffffff800044fc79 : test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rax]
0xffffff8000750e4b : test dword ptr [rbp + rdi*8 - 1], esp ; call qword ptr [rcx]
0xffffff8000827ade : test dword ptr [rbp - 0x1000000], ebp ; ret
0xffffff800052a87a : test dword ptr [rbp - 0x17000000], ebp ; ret 5
0xffffff800086d5a2 : test dword ptr [rbp - 0x44ffffff], edi ; ret 2
0xffffff800074fd3d : test dword ptr [rbp - 0x77000000], esp ; ret 0xca0f
0xffffff80007eaeb7 : test dword ptr [rbp - 0x77], 0xf6894ce6 ; call rbx
0xffffff8000406237 : test dword ptr [rbp - 0x7cffffef], esp ; ret
0xffffff800025ed1c : test dword ptr [rbp - 0xa000000], ecx ; ret
0xffffff8000586b1f : test dword ptr [rbp - 0xa000000], edi ; ret 0x7510
0xffffff800082649f : test dword ptr [rbp - 0xfffffc], edx ; ret
0xffffff80003355cd : test dword ptr [rbx + rdx], ecx ; add byte ptr [rbp + 0x31], al ; push rdi ; ret 0xfff7
0xffffff800066da22 : test dword ptr [rbx - 0x17000000], edi ; ret 0
0xffffff800028313d : test dword ptr [rbx - 0x7d000000], ebp ; ret
0xffffff800028360c : test dword ptr [rbx - 0x7d000000], esi ; ret
0xffffff80008478f4 : test dword ptr [rbx - 0xffffd9], edi ; ret
0xffffff80005b0000 : test dword ptr [rbx], ebx ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800077ba49 : test dword ptr [rbx], edi ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800083fe25 : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf40
0xffffff80004f691a : test dword ptr [rcx + 0x39000000], esp ; ret 0xbb
0xffffff800065aedc : test dword ptr [rcx + 0xf], 0x6348d6af ; ret 0x14c
0xffffff80008afe9e : test dword ptr [rcx + rcx*4 - 0x12], 0x883050ff ; ret
0xffffff8000602bb6 : test dword ptr [rcx + rcx*4 - 0x15], 0xf7c58949 ; ret
0xffffff80008fcff1 : test dword ptr [rcx + rcx*4 - 2], 0x58bd1ff ; ret
0xffffff80008779c0 : test dword ptr [rcx + rcx*4 - 7], 0xff6854d ; xchg eax, ebp ; ret 0xf44
0xffffff800036fd30 : test dword ptr [rcx - 0x39], 0x944f389 ; ret
0xffffff80003343ef : test dword ptr [rcx - 0x78], 0x83482146 ; ret
0xffffff800025e8b4 : test dword ptr [rcx - 0x9ffffff], esp ; ret
0xffffff800066cf48 : test dword ptr [rcx - 0xa000000], edx ; ret 0x7520
0xffffff800057ac5a : test dword ptr [rcx - 0xa000000], esp ; ret
0xffffff80008598b7 : test dword ptr [rcx - 3], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006a0cea : test dword ptr [rcx], 0x83480000 ; ret
0xffffff80002adf02 : test dword ptr [rcx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005897b4 : test dword ptr [rcx], ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005b0009 : test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80007c36e6 : test dword ptr [rdi + 0x31000000], esp ; fucomi st(1) ; ret
0xffffff800055d7fd : test dword ptr [rdi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff8000553bf8 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rdx]
0xffffff80004bfa88 : test dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a959f : test dword ptr [rdi + rdi*8 - 1], ebx ; call qword ptr [rsi]
0xffffff80003636ae : test dword ptr [rdi + rdi*8 - 1], ecx ; call qword ptr [rax]
0xffffff800037d8ea : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rcx]
0xffffff80006015e9 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0xffffff8000557b91 : test dword ptr [rdi + rdi*8 - 1], edx ; call qword ptr [rsi]
0xffffff80005639d2 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rbx]
0xffffff8000563d41 : test dword ptr [rdi + rdi*8 - 1], esp ; call qword ptr [rcx]
0xffffff800043be0c : test dword ptr [rdi + rdi*8 - 1], esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006d3877 : test dword ptr [rdi + rdi*8 - 1], esp ; dec dword ptr [rax - 1] ; ret
0xffffff800082748e : test dword ptr [rdi - 0x1000000], ebx ; ret
0xffffff8000551017 : test dword ptr [rdi - 0x16000002], edx ; ret
0xffffff8000333794 : test dword ptr [rdi - 0x75000000], ebx ; push rbx ; jl 0xffffff800033379d ; ret 0
0xffffff8000348a86 : test dword ptr [rdi - 0x77], 0xff48ec3c ; ret
0xffffff8000441d4e : test dword ptr [rdi - 0x7d000000], ebx ; ret
0xffffff80007a61ed : test dword ptr [rdi - 0x9000006], eax ; ret 0xf80
0xffffff80003f3828 : test dword ptr [rdi], 0x27c85 ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80004f1fdd : test dword ptr [rdi], 0x3ee85 ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff8000497ad5 : test dword ptr [rdi], 0x8083 ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff8000524801 : test dword ptr [rdi], 0x8d85 ; add byte ptr [rax - 1], cl ; ret
0xffffff800054038a : test dword ptr [rdi], 0x9085 ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff80007b15d6 : test dword ptr [rdi], 0xffff0d82 ; dec dword ptr [rax + 1] ; ret
0xffffff8000743339 : test dword ptr [rdi], eax ; add byte ptr [rdi + rcx + 0x42], cl ; ret 0x894d
0xffffff80006ba37a : test dword ptr [rdi], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800074e104 : test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf0c
0xffffff800031f7a3 : test dword ptr [rdi], esp ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; ret
0xffffff800045adcd : test dword ptr [rdx + 0x29000000], esp ; ret
0xffffff80003f382a : test dword ptr [rdx + rax], edi ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800061e502 : test dword ptr [rdx + rax], edx ; add byte ptr [rax], al ; and byte ptr [rdi], cl ; ret 0x28b9
0xffffff800082625e : test dword ptr [rdx - 0x1000000], ebx ; ret
0xffffff80006620fc : test dword ptr [rdx - 0x3fceffcc], esi ; call 0xffffff800028e1b9
0xffffff8000894697 : test dword ptr [rdx - 0x5c], eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000729e2d : test dword ptr [rdx - 0x9fffffe], edx ; ret
0xffffff800066cf33 : test dword ptr [rdx - 0xa000000], edx ; ret 0x7408
0xffffff8000449316 : test dword ptr [rdx - 0xa000000], esp ; ret 0xf02
0xffffff80006a1969 : test dword ptr [rdx], eax ; add al, 0 ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800058467b : test dword ptr [rdx], ecx ; je 0xffffff8000584697 ; movzx eax, al ; pop rbp ; ret
0xffffff800044fbec : test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff800061eb15 : test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1f7d
0xffffff80007c29d6 : test dword ptr [rip - 0x16000001], esi ; ret
0xffffff80004eba05 : test dword ptr [rsi + 0x8000005], esi ; ret
0xffffff80006bc957 : test dword ptr [rsi + rdi*8 + 0x4588ffff], eax ; ret 0x858b
0xffffff80006be08c : test dword ptr [rsi + rdi*8 + 0x4588ffff], ebx ; ret 0x858b
0xffffff80004b22ed : test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rax]
0xffffff80004ac5e8 : test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rcx]
0xffffff80004e06d8 : test dword ptr [rsi + rdi*8 - 1], eax ; call qword ptr [rdi]
0xffffff80003e6b45 : test dword ptr [rsi + rdi*8 - 1], eax ; dec dword ptr [rax - 0x77] ; ret 0x4ee8
0xffffff80004ddbf1 : test dword ptr [rsi + rdi*8 - 1], ecx ; call qword ptr [rcx]
0xffffff8000486dbd : test dword ptr [rsi + rdi*8 - 1], ecx ; jmp qword ptr [rax]
0xffffff800045ddea : test dword ptr [rsi + rdi*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004977a4 : test dword ptr [rsi - 0xfffff9], edx ; ret
0xffffff8000346095 : test dword ptr [rsi], 0x894c0000 ; ret
0xffffff8000769db3 : test dword ptr [rsi], eax ; add dh, dh ; ret
0xffffff800064da4f : test dword ptr [rsi], ebx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0xffffff8000314b09 : test dword ptr [rsi], ebx ; add al, byte ptr [rax] ; add byte ptr [rsi - 9], ah ; ret 0xfff0
0xffffff8000746d75 : test dword ptr [rsi], edi ; add al, ch ; ret
0xffffff80006fabd8 : test dword ptr [rsi], esi ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0xffffff800031643b : test dx, dx ; setne dl ; jmp 0xffffff8000316457
0xffffff80003ae129 : test eax, 0x10000 ; jne 0xffffff80003ae13a ; pop rbp ; ret
0xffffff80003925e7 : test eax, 0x1000000 ; je 0xffffff80003925d9 ; xor eax, eax ; ret
0xffffff80008ec35a : test eax, 0x1f0f32eb ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xffffff80008ec39a
0xffffff80008e3707 : test eax, 0x45c6ff82 ; ret
0xffffff800040fc15 : test eax, 0x5740402 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007fe36d : test eax, 0x58948ff ; ret 0x2e5d
0xffffff80008455f5 : test eax, 0x5d000000 ; ret
0xffffff80006c5593 : test eax, 0x5dffbd25 ; ret
0xffffff800075da84 : test eax, 0x71ffffcf ; ret
0xffffff8000865b1f : test eax, 0x800027fa ; add esi, esi ; ret 0x7501
0xffffff8000778b0b : test eax, 0x8348ffc1 ; ret
0xffffff80008ecd76 : test eax, 0x834920eb ; call qword ptr [rax]
0xffffff80004bc973 : test eax, 0x850f0fff ; ret
0xffffff80004e92d3 : test eax, 0x89000030 ; ret
0xffffff80003d6873 : test eax, 0x8900072e ; ret 0x35eb
0xffffff80003e6203 : test eax, 0x89003af8 ; ret
0xffffff8000437e73 : test eax, 0x89003b3d ; ret
0xffffff800070f9ff : test eax, 0x89480006 ; ret
0xffffff800052f807 : test eax, 0x89480024 ; ret
0xffffff80008cfd28 : test eax, 0x8948ffac ; ret 0x8041
0xffffff800076df35 : test eax, 0x8948ffb6 ; ret
0xffffff8000896a21 : test eax, 0x8948fff7 ; ret
0xffffff8000692ff8 : test eax, 0x8948fffd ; ret 0x8b48
0xffffff8000816a51 : test eax, 0x8948ffff ; ret
0xffffff80005a7332 : test eax, 0x894c0057 ; out 0xe8, al ; ret
0xffffff80007a1f53 : test eax, 0x89ffaf7f ; ret
0xffffff80007f22b3 : test eax, 0x89fffa0d ; ret
0xffffff80004bf029 : test eax, 0x940f0fff ; ret 0xca20
0xffffff8000308d8f : test eax, 0x940f8002 ; ret 0xb60f
0xffffff800046adcb : test eax, 0x950f0202 ; ret 0xb60f
0xffffff80002aa984 : test eax, 0xe8000001 ; ret
0xffffff8000769093 : test eax, 0xe8003757 ; movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; ret 0x48ff
0xffffff800075f223 : test eax, 0xe8003d0b ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; ret
0xffffff80003feb93 : test eax, 0xf6fff944 ; ret
0xffffff80008fcfa2 : test eax, 0xff480023 ; ret
0xffffff80008522b7 : test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80003669da : test eax, eax ; cmove eax, edx ; pop rbp ; ret
0xffffff80003a96d2 : test eax, eax ; cmove rdi, rax ; call rcx
0xffffff80005b249e : test eax, eax ; cmovne rax, rcx ; pop rbp ; ret
0xffffff8000696272 : test eax, eax ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff800025a1ee : test eax, eax ; je 0xffffff800025a1ff ; call rax
0xffffff800025ce63 : test eax, eax ; je 0xffffff800025ce74 ; call rax
0xffffff800025d06e : test eax, eax ; je 0xffffff800025d07c ; mov edi, ebx ; call rax
0xffffff80002632bb : test eax, eax ; je 0xffffff8000263314 ; call rax
0xffffff80002649eb : test eax, eax ; je 0xffffff80002649ff ; mov edi, 1 ; call rax
0xffffff800026537b : test eax, eax ; je 0xffffff80002653f4 ; call rax
0xffffff8000265598 : test eax, eax ; je 0xffffff80002655a6 ; xor edi, edi ; call rax
0xffffff80002656c1 : test eax, eax ; je 0xffffff8000265717 ; call rax
0xffffff8000265a23 : test eax, eax ; je 0xffffff8000265a6f ; call rax
0xffffff8000265c53 : test eax, eax ; je 0xffffff8000265ca4 ; call rax
0xffffff8000266136 : test eax, eax ; je 0xffffff8000266187 ; call rax
0xffffff80002661c1 : test eax, eax ; je 0xffffff8000266217 ; call rax
0xffffff800027fe56 : test eax, eax ; je 0xffffff800027fe67 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800027fecb : test eax, eax ; je 0xffffff800027fedc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000288455 : test eax, eax ; je 0xffffff8000288465 ; mov rdi, r15 ; call rax
0xffffff8000288c22 : test eax, eax ; je 0xffffff8000288c34 ; mov rdi, qword ptr [r15 + 0x20] ; call rax
0xffffff8000288df2 : test eax, eax ; je 0xffffff8000288e04 ; mov rdi, qword ptr [rbx + 0x20] ; call rax
0xffffff800028a6fc : test eax, eax ; je 0xffffff800028a714 ; call rax
0xffffff800028ef02 : test eax, eax ; je 0xffffff800028ef16 ; mov esi, 1 ; call rax
0xffffff800029aea8 : test eax, eax ; je 0xffffff800029aeb9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800029d44c : test eax, eax ; je 0xffffff800029d458 ; pop rbp ; jmp rax
0xffffff800029e978 : test eax, eax ; je 0xffffff800029e983 ; pop rbp ; ret
0xffffff80002ae895 : test eax, eax ; je 0xffffff80002ae8a2 ; call rax
0xffffff80002b05b6 : test eax, eax ; je 0xffffff80002b05c0 ; call rax
0xffffff80002b0c1d : test eax, eax ; je 0xffffff80002b0c2e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b204a : test eax, eax ; je 0xffffff80002b2057 ; call rax
0xffffff80002b25b9 : test eax, eax ; je 0xffffff80002b2631 ; call rax
0xffffff80002b2695 : test eax, eax ; je 0xffffff80002b26a2 ; call rax
0xffffff80002be725 : test eax, eax ; je 0xffffff80002be730 ; pop rbp ; ret
0xffffff80002dc27e : test eax, eax ; je 0xffffff80002dc28f ; call rax
0xffffff80002dc753 : test eax, eax ; je 0xffffff80002dc764 ; call rax
0xffffff80002dcf7b : test eax, eax ; je 0xffffff80002dcf8c ; call rax
0xffffff80002dd3fe : test eax, eax ; je 0xffffff80002dd40f ; call rax
0xffffff80002dfa43 : test eax, eax ; je 0xffffff80002dfa54 ; call rax
0xffffff80002dfeae : test eax, eax ; je 0xffffff80002dfebf ; call rax
0xffffff80002e08bb : test eax, eax ; je 0xffffff80002e08cc ; call rax
0xffffff80002e0cfe : test eax, eax ; je 0xffffff80002e0d0f ; call rax
0xffffff80002e303e : test eax, eax ; je 0xffffff80002e304f ; call rax
0xffffff80002e572e : test eax, eax ; je 0xffffff80002e573f ; call rax
0xffffff80002e70be : test eax, eax ; je 0xffffff80002e70cf ; call rax
0xffffff80002e7773 : test eax, eax ; je 0xffffff80002e7784 ; call rax
0xffffff80002e7afe : test eax, eax ; je 0xffffff80002e7b0f ; call rax
0xffffff80002e841e : test eax, eax ; je 0xffffff80002e842f ; call rax
0xffffff80002e911e : test eax, eax ; je 0xffffff80002e912f ; call rax
0xffffff80002ee00b : test eax, eax ; je 0xffffff80002ee01c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002ee4ae : test eax, eax ; je 0xffffff80002ee4bf ; call rax
0xffffff80002eecae : test eax, eax ; je 0xffffff80002eecbf ; call rax
0xffffff80002ef8ee : test eax, eax ; je 0xffffff80002ef8ff ; call rax
0xffffff80002f28fe : test eax, eax ; je 0xffffff80002f290f ; call rax
0xffffff80002f4a8e : test eax, eax ; je 0xffffff80002f4a9f ; call rax
0xffffff80002ffd95 : test eax, eax ; je 0xffffff80002ffda6 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003037fd : test eax, eax ; je 0xffffff8000303809 ; pop rbp ; jmp rax
0xffffff800035242b : test eax, eax ; je 0xffffff8000352415 ; jmp 0xffffff80003523f9
0xffffff800035da9e : test eax, eax ; je 0xffffff800035daaf ; call rax
0xffffff800036762e : test eax, eax ; je 0xffffff800036763e ; mov rdi, rbx ; call rax
0xffffff800036afee : test eax, eax ; je 0xffffff800036affe ; xor edi, 1 ; call rax
0xffffff8000375d4c : test eax, eax ; je 0xffffff8000375d66 ; mov rdi, qword ptr [r14 + 0x10] ; call rax
0xffffff8000375e3e : test eax, eax ; je 0xffffff8000375e58 ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0xffffff8000376484 : test eax, eax ; je 0xffffff800037649e ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff800037653c : test eax, eax ; je 0xffffff8000376556 ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff8000376864 : test eax, eax ; je 0xffffff8000376881 ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0xffffff80003768b4 : test eax, eax ; je 0xffffff80003768ce ; mov rdi, qword ptr [r13 + 0x10] ; call rax
0xffffff80003769a0 : test eax, eax ; je 0xffffff80003769bd ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0xffffff80003903be : test eax, eax ; je 0xffffff80003903ca ; call rax
0xffffff800039096b : test eax, eax ; je 0xffffff800039097b ; mov rdi, rbx ; call rax
0xffffff8000393ebb : test eax, eax ; je 0xffffff8000393ec5 ; call rax
0xffffff8000397188 : test eax, eax ; je 0xffffff8000397199 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000397626 : test eax, eax ; je 0xffffff8000397637 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a21d5 : test eax, eax ; je 0xffffff80003a21e1 ; pop rbp ; jmp rax
0xffffff80003a25e8 : test eax, eax ; je 0xffffff80003a260b ; call rax
0xffffff80003a2651 : test eax, eax ; je 0xffffff80003a265d ; pop rbp ; jmp rax
0xffffff80003a2844 : test eax, eax ; je 0xffffff80003a2850 ; pop rbp ; jmp rax
0xffffff80003a28c5 : test eax, eax ; je 0xffffff80003a28d1 ; pop rbp ; jmp rax
0xffffff80003a28f8 : test eax, eax ; je 0xffffff80003a2904 ; pop rbp ; jmp rax
0xffffff80003a2928 : test eax, eax ; je 0xffffff80003a2934 ; pop rbp ; jmp rax
0xffffff80003a29c5 : test eax, eax ; je 0xffffff80003a29d1 ; pop rbp ; jmp rax
0xffffff80003a29f1 : test eax, eax ; je 0xffffff80003a29fd ; pop rbp ; jmp rax
0xffffff80003a2a15 : test eax, eax ; je 0xffffff80003a2a21 ; pop rbp ; jmp rax
0xffffff80003a2a78 : test eax, eax ; je 0xffffff80003a2a84 ; pop rbp ; jmp rax
0xffffff80003a2d51 : test eax, eax ; je 0xffffff80003a2d5d ; pop rbp ; jmp rax
0xffffff80003a2f5d : test eax, eax ; je 0xffffff80003a2f75 ; call rax
0xffffff80003a3050 : test eax, eax ; je 0xffffff80003a3061 ; call rax
0xffffff80003a3ddb : test eax, eax ; je 0xffffff80003a3dea ; mov dword ptr [rax + 0x48], edi ; pop rbp ; ret
0xffffff80003a41bb : test eax, eax ; je 0xffffff80003a41ca ; mov dword ptr [rax + 0x2c], edi ; pop rbp ; ret
0xffffff80003a5725 : test eax, eax ; je 0xffffff80003a5739 ; mov edi, 1 ; call rax
0xffffff80003a8711 : test eax, eax ; je 0xffffff80003a8773 ; mov rdi, rsi ; call rax
0xffffff80003a91f7 : test eax, eax ; je 0xffffff80003a9219 ; mov esi, 2 ; call rax
0xffffff80003ab3a9 : test eax, eax ; je 0xffffff80003ab3bd ; mov esi, 2 ; call rax
0xffffff80003ab72e : test eax, eax ; je 0xffffff80003ab742 ; mov esi, 1 ; call rax
0xffffff80003abb3e : test eax, eax ; je 0xffffff80003abb59 ; mov esi, 2 ; call rax
0xffffff80003abca8 : test eax, eax ; je 0xffffff80003abcbc ; mov esi, 2 ; call rax
0xffffff80003abea3 : test eax, eax ; je 0xffffff80003abeb7 ; mov esi, 1 ; call rax
0xffffff80003ace3b : test eax, eax ; je 0xffffff80003ace45 ; call rax
0xffffff80003acf8c : test eax, eax ; je 0xffffff80003acf96 ; call rax
0xffffff80003ad1bc : test eax, eax ; je 0xffffff80003ad1c6 ; call rax
0xffffff80003ad8cc : test eax, eax ; je 0xffffff80003ad908 ; xor edi, edi ; call rax
0xffffff80003b619a : test eax, eax ; je 0xffffff80003b61ae ; mov edi, 1 ; call rax
0xffffff80003ba030 : test eax, eax ; je 0xffffff80003ba05c ; pop rbp ; ret
0xffffff80003ba030 : test eax, eax ; je 0xffffff80003ba060 ; pop rbp ; ret
0xffffff80003ba78b : test eax, eax ; je 0xffffff80003ba7b7 ; pop rbp ; ret
0xffffff800048c384 : test eax, eax ; je 0xffffff800048c3a0 ; add rsp, 0x10 ; pop rbp ; ret
0xffffff800049d09c : test eax, eax ; je 0xffffff800049d0a8 ; pop rbp ; jmp rax
0xffffff80004cbdc6 : test eax, eax ; je 0xffffff80004cbdd8 ; call rax
0xffffff80004d455e : test eax, eax ; je 0xffffff80004d456c ; xor edi, edi ; call rax
0xffffff80004f8946 : test eax, eax ; je 0xffffff80004f8952 ; pop rbp ; jmp rax
0xffffff80004f8976 : test eax, eax ; je 0xffffff80004f8982 ; pop rbp ; jmp rax
0xffffff80004f8b06 : test eax, eax ; je 0xffffff80004f8b12 ; pop rbp ; jmp rax
0xffffff80005028f1 : test eax, eax ; je 0xffffff8000502903 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff80005061e5 : test eax, eax ; je 0xffffff80005061f7 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff800050733d : test eax, eax ; je 0xffffff800050734d ; mov rdi, r14 ; call rax
0xffffff800050dd07 : test eax, eax ; je 0xffffff800050dd24 ; mov edi, dword ptr [rbp - 0x54] ; call rax
0xffffff800050f00e : test eax, eax ; je 0xffffff800050f036 ; mov edi, r14d ; call rax
0xffffff8000512a8a : test eax, eax ; je 0xffffff8000512a9b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000529ba4 : test eax, eax ; je 0xffffff8000529bd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800052b343 : test eax, eax ; je 0xffffff800052b369 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800053491b : test eax, eax ; je 0xffffff800053492f ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800053c685 : test eax, eax ; je 0xffffff800053c68f ; call rax
0xffffff800054cee8 : test eax, eax ; je 0xffffff800054cf01 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054f009 : test eax, eax ; je 0xffffff800054f023 ; pop rbp ; ret
0xffffff800054f50a : test eax, eax ; je 0xffffff800054f523 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054f8ea : test eax, eax ; je 0xffffff800054f903 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800054f93a : test eax, eax ; je 0xffffff800054f953 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800054f9e3 : test eax, eax ; je 0xffffff800054f9f6 ; xor esi, esi ; call rax
0xffffff800054fb0f : test eax, eax ; je 0xffffff800054fb28 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff800054fc07 : test eax, eax ; je 0xffffff800054fc20 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005526d9 : test eax, eax ; je 0xffffff80005526ea ; call rax
0xffffff80005538f8 : test eax, eax ; je 0xffffff8000553908 ; mov rdi, rbx ; call rax
0xffffff80005539aa : test eax, eax ; je 0xffffff80005539b6 ; call rax
0xffffff8000558b7b : test eax, eax ; je 0xffffff8000558b8b ; mov rdi, r12 ; call rax
0xffffff80005664e1 : test eax, eax ; je 0xffffff80005664f1 ; mov rdi, rbx ; call rax
0xffffff800056a3e3 : test eax, eax ; je 0xffffff800056a448 ; mov rsi, rbx ; call rax
0xffffff800056a4a7 : test eax, eax ; je 0xffffff800056a4e0 ; mov edi, dword ptr [rbx + 0x7e] ; xor esi, esi ; call rax
0xffffff800058909b : test eax, eax ; je 0xffffff80005890b1 ; sub eax, ecx ; jne 0xffffff80005890b3 ; call rcx
0xffffff800058925e : test eax, eax ; je 0xffffff8000589274 ; sub eax, ecx ; jne 0xffffff8000589276 ; call rcx
0xffffff80005bbe23 : test eax, eax ; je 0xffffff80005bbe34 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005c169d : test eax, eax ; je 0xffffff80005c16b6 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c1bf7 : test eax, eax ; je 0xffffff80005c1c10 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c2651 : test eax, eax ; je 0xffffff80005c266a ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c27de : test eax, eax ; je 0xffffff80005c27f7 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c2915 : test eax, eax ; je 0xffffff80005c292e ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c2ad9 : test eax, eax ; je 0xffffff80005c2af7 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c2baa : test eax, eax ; je 0xffffff80005c2bc3 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c2c9a : test eax, eax ; je 0xffffff80005c2cb3 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c2ce9 : test eax, eax ; je 0xffffff80005c2d09 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c31c5 : test eax, eax ; je 0xffffff80005c31de ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c3217 : test eax, eax ; je 0xffffff80005c3239 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c32aa : test eax, eax ; je 0xffffff80005c32c9 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c3442 : test eax, eax ; je 0xffffff80005c345b ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c3508 : test eax, eax ; je 0xffffff80005c3521 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c3d47 : test eax, eax ; je 0xffffff80005c3da1 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c4703 : test eax, eax ; je 0xffffff80005c471c ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c47f7 : test eax, eax ; je 0xffffff80005c4810 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c506f : test eax, eax ; je 0xffffff80005c5088 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c5de3 : test eax, eax ; je 0xffffff80005c5dfc ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c6252 : test eax, eax ; je 0xffffff80005c6279 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c646d : test eax, eax ; je 0xffffff80005c6486 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c65ee : test eax, eax ; je 0xffffff80005c6639 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005c68cf : test eax, eax ; je 0xffffff80005c68e8 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c6ad0 : test eax, eax ; je 0xffffff80005c6ae9 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c6bdc : test eax, eax ; je 0xffffff80005c6bf5 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80005c737c : test eax, eax ; je 0xffffff80005c7395 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c76a6 : test eax, eax ; je 0xffffff80005c76bf ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c78be : test eax, eax ; je 0xffffff80005c78df ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005c7b0a : test eax, eax ; je 0xffffff80005c7b23 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c8a5c : test eax, eax ; je 0xffffff80005c8a75 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80005c9163 : test eax, eax ; je 0xffffff80005c917c ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80005e20fb : test eax, eax ; je 0xffffff80005e210b ; mov rdi, r14 ; call rax
0xffffff80005e2ed3 : test eax, eax ; je 0xffffff80005e2ee3 ; mov rdi, r13 ; call rax
0xffffff80005e330f : test eax, eax ; je 0xffffff80005e331f ; mov rdi, r13 ; call rax
0xffffff80005e3655 : test eax, eax ; je 0xffffff80005e365f ; call rax
0xffffff80005e51bb : test eax, eax ; je 0xffffff80005e51e9 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005f02af : test eax, eax ; je 0xffffff80005f02bf ; mov rdi, rbx ; call rax
0xffffff80005f0a98 : test eax, eax ; je 0xffffff80005f0aba ; mov rdi, rbx ; call rax
0xffffff80006111d6 : test eax, eax ; je 0xffffff8000611204 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff800061a474 : test eax, eax ; je 0xffffff800061a484 ; mov rdi, rbx ; call rax
0xffffff800061b3b5 : test eax, eax ; je 0xffffff800061b3c5 ; mov rdi, r14 ; call rax
0xffffff800061b65b : test eax, eax ; je 0xffffff800061b66b ; mov rdi, rbx ; call rax
0xffffff800061b6e9 : test eax, eax ; je 0xffffff800061b6f9 ; mov rdi, rbx ; call rax
0xffffff800061b742 : test eax, eax ; je 0xffffff800061b752 ; mov rdi, rbx ; call rax
0xffffff800061b811 : test eax, eax ; je 0xffffff800061b821 ; mov rdi, rbx ; call rax
0xffffff800061ce52 : test eax, eax ; je 0xffffff800061ce62 ; mov rdi, r14 ; call rax
0xffffff800061d035 : test eax, eax ; je 0xffffff800061d045 ; mov rdi, r15 ; call rax
0xffffff8000624242 : test eax, eax ; je 0xffffff8000624252 ; mov rdi, rbx ; call rax
0xffffff8000624aaa : test eax, eax ; je 0xffffff8000624aba ; mov rdi, r13 ; call rax
0xffffff8000625545 : test eax, eax ; je 0xffffff8000625555 ; mov rdi, r14 ; call rax
0xffffff8000627802 : test eax, eax ; je 0xffffff8000627812 ; mov rdi, rbx ; call rax
0xffffff8000628255 : test eax, eax ; je 0xffffff8000628282 ; mov rdi, r13 ; call rax
0xffffff8000628795 : test eax, eax ; je 0xffffff80006287a5 ; mov rdi, r13 ; call rax
0xffffff8000628871 : test eax, eax ; je 0xffffff800062889e ; mov rdi, r13 ; call rax
0xffffff800063fd45 : test eax, eax ; je 0xffffff800063fd58 ; mov rdi, rbx ; call rax
0xffffff8000680836 : test eax, eax ; je 0xffffff8000680864 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff8000683db9 : test eax, eax ; je 0xffffff8000683dcf ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80006896cb : test eax, eax ; je 0xffffff80006896f9 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff800068e023 : test eax, eax ; je 0xffffff800068e076 ; xor esi, esi ; mov rdx, r15 ; call rax
0xffffff800069a3ba : test eax, eax ; je 0xffffff800069a3ca ; mov rdi, rbx ; call rax
0xffffff800069a5a6 : test eax, eax ; je 0xffffff800069a5b6 ; mov rdi, rbx ; call rax
0xffffff800069e37e : test eax, eax ; je 0xffffff800069e388 ; call rax
0xffffff80006a123c : test eax, eax ; je 0xffffff80006a124c ; mov rdi, r12 ; call rax
0xffffff80006a9bb4 : test eax, eax ; je 0xffffff80006a9be2 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80006ac8d7 : test eax, eax ; je 0xffffff80006ac905 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80006be8a6 : test eax, eax ; je 0xffffff80006be8c2 ; mov rdi, rbx ; call rax
0xffffff80006be94a : test eax, eax ; je 0xffffff80006be9af ; mov rdi, rbx ; call rax
0xffffff80006c0e11 : test eax, eax ; je 0xffffff80006c0e39 ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff8000740422 : test eax, eax ; je 0xffffff8000740433 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007447a4 : test eax, eax ; je 0xffffff80007447ae ; call rax
0xffffff8000751dd0 : test eax, eax ; je 0xffffff8000751ddd ; xor eax, eax ; pop rbp ; ret
0xffffff800076d314 : test eax, eax ; je 0xffffff800076d324 ; mov rdi, r15 ; call rax
0xffffff800076d9de : test eax, eax ; je 0xffffff800076d9ee ; mov rdi, r14 ; call rax
0xffffff80007713f6 : test eax, eax ; je 0xffffff8000771406 ; mov rdi, rbx ; call rax
0xffffff800077141c : test eax, eax ; je 0xffffff800077142c ; mov rdi, rbx ; call rax
0xffffff80007733fa : test eax, eax ; je 0xffffff800077340a ; mov rdi, r13 ; call rax
0xffffff80007792a3 : test eax, eax ; je 0xffffff80007792b3 ; mov rdi, r12 ; call rax
0xffffff800078749d : test eax, eax ; je 0xffffff80007874a7 ; call rax
0xffffff80007a5984 : test eax, eax ; je 0xffffff80007a5994 ; mov rdi, rbx ; call rax
0xffffff80007a6564 : test eax, eax ; je 0xffffff80007a6574 ; mov rdi, r12 ; call rax
0xffffff80007a666a : test eax, eax ; je 0xffffff80007a667a ; mov rdi, r15 ; call rax
0xffffff80007a6a2b : test eax, eax ; je 0xffffff80007a6a3b ; mov rdi, rbx ; call rax
0xffffff80007a86f2 : test eax, eax ; je 0xffffff80007a874c ; mov rdi, r15 ; call rax
0xffffff80007a8db7 : test eax, eax ; je 0xffffff80007a8dc7 ; mov rdi, rbx ; call rax
0xffffff80007a8fa6 : test eax, eax ; je 0xffffff80007a8fb6 ; mov rdi, r12 ; call rax
0xffffff80007a93b8 : test eax, eax ; je 0xffffff80007a93c8 ; mov rdi, r15 ; call rax
0xffffff80007a9404 : test eax, eax ; je 0xffffff80007a9414 ; mov rdi, r15 ; call rax
0xffffff80007a96d2 : test eax, eax ; je 0xffffff80007a96e2 ; mov rdi, rbx ; call rax
0xffffff80007b03c9 : test eax, eax ; je 0xffffff80007b03dc ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007b408d : test eax, eax ; je 0xffffff80007b409b ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b410c : test eax, eax ; je 0xffffff80007b411c ; mov rdi, rbx ; call rax
0xffffff80007b438d : test eax, eax ; je 0xffffff80007b439b ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b447d : test eax, eax ; je 0xffffff80007b4474 ; call rax
0xffffff80007c5277 : test eax, eax ; je 0xffffff80007c5287 ; mov rdi, r15 ; call rax
0xffffff80007c52c3 : test eax, eax ; je 0xffffff80007c52dc ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c55d5 : test eax, eax ; je 0xffffff80007c55ee ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c577d : test eax, eax ; je 0xffffff80007c5796 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c58b9 : test eax, eax ; je 0xffffff80007c58d2 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007c5a3d : test eax, eax ; je 0xffffff80007c5a56 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007c5c15 : test eax, eax ; je 0xffffff80007c5c2e ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007c5cc2 : test eax, eax ; je 0xffffff80007c5cdb ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007d0d03 : test eax, eax ; je 0xffffff80007d0d1c ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80007d13cf : test eax, eax ; je 0xffffff80007d13e8 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007d39ab : test eax, eax ; je 0xffffff80007d39c9 ; xor esi, esi ; mov rdi, r15 ; call rax
0xffffff80007d3f81 : test eax, eax ; je 0xffffff80007d3fd6 ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007d57cb : test eax, eax ; je 0xffffff80007d5830 ; xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80007d611b : test eax, eax ; je 0xffffff80007d6134 ; xor esi, esi ; mov rbx, rdi ; call rax
0xffffff80007d6844 : test eax, eax ; je 0xffffff80007d685d ; xor esi, esi ; mov rdi, r13 ; call rax
0xffffff80007dbf0f : test eax, eax ; je 0xffffff80007dbf28 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007ebd54 : test eax, eax ; je 0xffffff80007ebd6d ; xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80007ebef0 : test eax, eax ; je 0xffffff80007ebf09 ; xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80007f00a3 : test eax, eax ; je 0xffffff80007f00af ; pop rbp ; jmp rax
0xffffff80007f8599 : test eax, eax ; je 0xffffff80007f85ac ; mov rax, qword ptr [rax + 0x68] ; pop rbp ; ret
0xffffff80007fcb8c : test eax, eax ; je 0xffffff80007fcb98 ; pop rbp ; jmp rax
0xffffff80007ffc4f : test eax, eax ; je 0xffffff80007ffc5f ; mov rdi, rbx ; call rax
0xffffff8000803833 : test eax, eax ; je 0xffffff800080384b ; mov rdi, r15 ; call rax
0xffffff8000803902 : test eax, eax ; je 0xffffff8000803912 ; mov rdi, r15 ; call rax
0xffffff8000820160 : test eax, eax ; je 0xffffff800082016a ; call rax
0xffffff8000821a89 : test eax, eax ; je 0xffffff8000821a9f ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0xffffff800082d745 : test eax, eax ; je 0xffffff800082d754 ; call rax
0xffffff800082dc29 : test eax, eax ; je 0xffffff800082dc47 ; mov r15, r9 ; call rax
0xffffff8000858678 : test eax, eax ; je 0xffffff8000858683 ; pop rbp ; ret
0xffffff8000859b1e : test eax, eax ; je 0xffffff8000859b28 ; call rax
0xffffff80008640d5 : test eax, eax ; je 0xffffff800086415a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000892ab2 : test eax, eax ; je 0xffffff8000892ac6 ; mov rdi, qword ptr [rsi + 0x18] ; pop rbp ; jmp rax
0xffffff80008b69ca : test eax, eax ; je 0xffffff80008b69d5 ; pop rbp ; ret
0xffffff80008ed85b : test eax, eax ; je 0xffffff80008ed86f ; lea rdi, [rbp - 0x10] ; call r8
0xffffff80008ed8f2 : test eax, eax ; je 0xffffff80008ed904 ; lea rdi, [rbp - 0x10] ; call rax
0xffffff80008ef3fc : test eax, eax ; je 0xffffff80008ef406 ; call rax
0xffffff80008ef4be : test eax, eax ; je 0xffffff80008ef4c8 ; call rax
0xffffff80008efee0 : test eax, eax ; je 0xffffff80008efef0 ; mov rdi, r12 ; call rax
0xffffff80008f009f : test eax, eax ; je 0xffffff80008f00af ; mov rdi, r15 ; call rax
0xffffff800059df1a : test eax, eax ; jg 0xffffff800059ded3 ; jmp 0xffffff800059df31
0xffffff800036636c : test eax, eax ; jne 0xffffff8000366377 ; pop rbp ; ret
0xffffff80003999f7 : test eax, eax ; jne 0xffffff8000399a0a ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80003c5da7 : test eax, eax ; jne 0xffffff80003c5ddf ; pop rbp ; ret
0xffffff80003e6dbc : test eax, eax ; jne 0xffffff80003e6dd1 ; mov rdi, r12 ; call 0xffffff8000393049
0xffffff800044ebdb : test eax, eax ; jne 0xffffff800044ebd5 ; pop rbp ; ret
0xffffff8000511b8d : test eax, eax ; jne 0xffffff8000511b56 ; pop rbp ; ret
0xffffff8000511b8d : test eax, eax ; jne 0xffffff8000511b58 ; pop rbp ; ret
0xffffff800053e629 : test eax, eax ; jne 0xffffff800053e627 ; xor eax, eax ; pop rbp ; ret
0xffffff800056cf19 : test eax, eax ; jne 0xffffff800056cf17 ; xor eax, eax ; pop rbp ; ret
0xffffff80005890a5 : test eax, eax ; jne 0xffffff80005890b2 ; xor eax, eax ; pop rbp ; ret
0xffffff8000589268 : test eax, eax ; jne 0xffffff8000589275 ; xor eax, eax ; pop rbp ; ret
0xffffff80005b1078 : test eax, eax ; jne 0xffffff80005b1025 ; pop rbp ; ret
0xffffff80005b209e : test eax, eax ; jne 0xffffff80005b2045 ; pop rbp ; ret
0xffffff80005bf774 : test eax, eax ; jne 0xffffff80005bf735 ; pop rbp ; ret
0xffffff80005e4d62 : test eax, eax ; jne 0xffffff80005e4d09 ; mov byte ptr [rdi + 0x11], 1 ; pop rbp ; ret
0xffffff80005e5542 : test eax, eax ; jne 0xffffff80005e54d8 ; jmp 0xffffff80005e5557
0xffffff80005ebe14 : test eax, eax ; jne 0xffffff80005ebdd5 ; pop rbp ; ret
0xffffff80005f57e9 : test eax, eax ; jne 0xffffff80005f57e5 ; pop rbp ; ret
0xffffff8000637a24 : test eax, eax ; jne 0xffffff80006379e5 ; pop rbp ; ret
0xffffff8000687efe : test eax, eax ; jne 0xffffff8000687ec5 ; pop rbp ; ret
0xffffff8000688192 : test eax, eax ; jne 0xffffff8000688128 ; jmp 0xffffff80006881a7
0xffffff8000688392 : test eax, eax ; jne 0xffffff8000688339 ; mov byte ptr [rdi + 0x11], 1 ; pop rbp ; ret
0xffffff80006a435e : test eax, eax ; jne 0xffffff80006a4325 ; pop rbp ; ret
0xffffff8000722895 : test eax, eax ; jne 0xffffff80007228aa ; movzx edx, dl ; inc rdx ; jmp 0xffffff80007228b3
0xffffff8000795cf9 : test eax, eax ; jne 0xffffff8000795cf5 ; pop rbp ; ret
0xffffff80007b6f49 : test eax, eax ; jne 0xffffff80007b6f45 ; pop rbp ; ret
0xffffff80007d30a9 : test eax, eax ; jne 0xffffff80007d30a7 ; xor eax, eax ; pop rbp ; ret
0xffffff8000811bd3 : test eax, eax ; jne 0xffffff8000811bc5 ; pop rbp ; ret
0xffffff8000811c13 : test eax, eax ; jne 0xffffff8000811c05 ; pop rbp ; ret
0xffffff8000813363 : test eax, eax ; jne 0xffffff8000813355 ; pop rbp ; ret
0xffffff80008133a3 : test eax, eax ; jne 0xffffff8000813395 ; pop rbp ; ret
0xffffff8000814443 : test eax, eax ; jne 0xffffff8000814435 ; pop rbp ; ret
0xffffff8000814483 : test eax, eax ; jne 0xffffff8000814475 ; pop rbp ; ret
0xffffff8000814e43 : test eax, eax ; jne 0xffffff8000814e35 ; pop rbp ; ret
0xffffff8000814e83 : test eax, eax ; jne 0xffffff8000814e75 ; pop rbp ; ret
0xffffff80008163a3 : test eax, eax ; jne 0xffffff8000816395 ; pop rbp ; ret
0xffffff80008163e3 : test eax, eax ; jne 0xffffff80008163d5 ; pop rbp ; ret
0xffffff8000818ed3 : test eax, eax ; jne 0xffffff8000818ec5 ; pop rbp ; ret
0xffffff8000818f13 : test eax, eax ; jne 0xffffff8000818f05 ; pop rbp ; ret
0xffffff800082b6c3 : test eax, eax ; jne 0xffffff800082b6b5 ; pop rbp ; ret
0xffffff800082b703 : test eax, eax ; jne 0xffffff800082b6f5 ; pop rbp ; ret
0xffffff800082c2e3 : test eax, eax ; jne 0xffffff800082c2d5 ; pop rbp ; ret
0xffffff800082c323 : test eax, eax ; jne 0xffffff800082c315 ; pop rbp ; ret
0xffffff800082e1c3 : test eax, eax ; jne 0xffffff800082e1b5 ; pop rbp ; ret
0xffffff800082e203 : test eax, eax ; jne 0xffffff800082e1f5 ; pop rbp ; ret
0xffffff800082ed03 : test eax, eax ; jne 0xffffff800082ecf5 ; pop rbp ; ret
0xffffff800082ed43 : test eax, eax ; jne 0xffffff800082ed35 ; pop rbp ; ret
0xffffff800082f813 : test eax, eax ; jne 0xffffff800082f805 ; pop rbp ; ret
0xffffff800082f853 : test eax, eax ; jne 0xffffff800082f845 ; pop rbp ; ret
0xffffff8000830b53 : test eax, eax ; jne 0xffffff8000830b45 ; pop rbp ; ret
0xffffff8000830b93 : test eax, eax ; jne 0xffffff8000830b85 ; pop rbp ; ret
0xffffff8000832ad3 : test eax, eax ; jne 0xffffff8000832ac5 ; pop rbp ; ret
0xffffff8000832b13 : test eax, eax ; jne 0xffffff8000832b05 ; pop rbp ; ret
0xffffff8000858f63 : test eax, eax ; jne 0xffffff8000858f55 ; pop rbp ; ret
0xffffff8000858fa3 : test eax, eax ; jne 0xffffff8000858f95 ; pop rbp ; ret
0xffffff800085ce93 : test eax, eax ; jne 0xffffff800085ce85 ; pop rbp ; ret
0xffffff800085ced3 : test eax, eax ; jne 0xffffff800085cec5 ; pop rbp ; ret
0xffffff800085d0f3 : test eax, eax ; jne 0xffffff800085d0e5 ; pop rbp ; ret
0xffffff800085d133 : test eax, eax ; jne 0xffffff800085d125 ; pop rbp ; ret
0xffffff8000860ff3 : test eax, eax ; jne 0xffffff8000860fe5 ; pop rbp ; ret
0xffffff8000861033 : test eax, eax ; jne 0xffffff8000861025 ; pop rbp ; ret
0xffffff8000862883 : test eax, eax ; jne 0xffffff8000862875 ; pop rbp ; ret
0xffffff80008628c3 : test eax, eax ; jne 0xffffff80008628b5 ; pop rbp ; ret
0xffffff8000862b13 : test eax, eax ; jne 0xffffff8000862b05 ; pop rbp ; ret
0xffffff8000862b53 : test eax, eax ; jne 0xffffff8000862b45 ; pop rbp ; ret
0xffffff8000862d73 : test eax, eax ; jne 0xffffff8000862d65 ; pop rbp ; ret
0xffffff8000862db3 : test eax, eax ; jne 0xffffff8000862da5 ; pop rbp ; ret
0xffffff8000862fd3 : test eax, eax ; jne 0xffffff8000862fc5 ; pop rbp ; ret
0xffffff8000863013 : test eax, eax ; jne 0xffffff8000863005 ; pop rbp ; ret
0xffffff8000863233 : test eax, eax ; jne 0xffffff8000863225 ; pop rbp ; ret
0xffffff8000863273 : test eax, eax ; jne 0xffffff8000863265 ; pop rbp ; ret
0xffffff8000863493 : test eax, eax ; jne 0xffffff8000863485 ; pop rbp ; ret
0xffffff80008634d3 : test eax, eax ; jne 0xffffff80008634c5 ; pop rbp ; ret
0xffffff80008636f3 : test eax, eax ; jne 0xffffff80008636e5 ; pop rbp ; ret
0xffffff8000863733 : test eax, eax ; jne 0xffffff8000863725 ; pop rbp ; ret
0xffffff8000873eb3 : test eax, eax ; jne 0xffffff8000873ea5 ; pop rbp ; ret
0xffffff8000881403 : test eax, eax ; jne 0xffffff80008813f5 ; pop rbp ; ret
0xffffff8000881443 : test eax, eax ; jne 0xffffff8000881435 ; pop rbp ; ret
0xffffff8000881723 : test eax, eax ; jne 0xffffff8000881715 ; pop rbp ; ret
0xffffff8000881763 : test eax, eax ; jne 0xffffff8000881755 ; pop rbp ; ret
0xffffff8000881b33 : test eax, eax ; jne 0xffffff8000881b25 ; pop rbp ; ret
0xffffff8000881b73 : test eax, eax ; jne 0xffffff8000881b65 ; pop rbp ; ret
0xffffff8000882143 : test eax, eax ; jne 0xffffff8000882135 ; pop rbp ; ret
0xffffff8000882183 : test eax, eax ; jne 0xffffff8000882175 ; pop rbp ; ret
0xffffff80008824c3 : test eax, eax ; jne 0xffffff80008824b5 ; pop rbp ; ret
0xffffff80008847c3 : test eax, eax ; jne 0xffffff80008847b5 ; pop rbp ; ret
0xffffff8000884803 : test eax, eax ; jne 0xffffff80008847f5 ; pop rbp ; ret
0xffffff8000884f03 : test eax, eax ; jne 0xffffff8000884ef5 ; pop rbp ; ret
0xffffff8000884f43 : test eax, eax ; jne 0xffffff8000884f35 ; pop rbp ; ret
0xffffff8000885833 : test eax, eax ; jne 0xffffff8000885825 ; pop rbp ; ret
0xffffff8000885873 : test eax, eax ; jne 0xffffff8000885865 ; pop rbp ; ret
0xffffff80008860c3 : test eax, eax ; jne 0xffffff80008860b5 ; pop rbp ; ret
0xffffff8000886103 : test eax, eax ; jne 0xffffff80008860f5 ; pop rbp ; ret
0xffffff8000887f33 : test eax, eax ; jne 0xffffff8000887f25 ; pop rbp ; ret
0xffffff8000887f73 : test eax, eax ; jne 0xffffff8000887f65 ; pop rbp ; ret
0xffffff8000889d93 : test eax, eax ; jne 0xffffff8000889d85 ; pop rbp ; ret
0xffffff8000889dd3 : test eax, eax ; jne 0xffffff8000889dc5 ; pop rbp ; ret
0xffffff800088a9c3 : test eax, eax ; jne 0xffffff800088a9b5 ; pop rbp ; ret
0xffffff800088aa03 : test eax, eax ; jne 0xffffff800088a9f5 ; pop rbp ; ret
0xffffff800088cc43 : test eax, eax ; jne 0xffffff800088cc35 ; pop rbp ; ret
0xffffff800088cc83 : test eax, eax ; jne 0xffffff800088cc75 ; pop rbp ; ret
0xffffff800088ef13 : test eax, eax ; jne 0xffffff800088ef05 ; pop rbp ; ret
0xffffff800088ef53 : test eax, eax ; jne 0xffffff800088ef45 ; pop rbp ; ret
0xffffff8000890193 : test eax, eax ; jne 0xffffff8000890185 ; pop rbp ; ret
0xffffff80008901d3 : test eax, eax ; jne 0xffffff80008901c5 ; pop rbp ; ret
0xffffff80008912f3 : test eax, eax ; jne 0xffffff80008912e5 ; pop rbp ; ret
0xffffff8000891333 : test eax, eax ; jne 0xffffff8000891325 ; pop rbp ; ret
0xffffff80008919b3 : test eax, eax ; jne 0xffffff80008919a5 ; pop rbp ; ret
0xffffff80008919f3 : test eax, eax ; jne 0xffffff80008919e5 ; pop rbp ; ret
0xffffff8000892553 : test eax, eax ; jne 0xffffff8000892545 ; pop rbp ; ret
0xffffff8000892593 : test eax, eax ; jne 0xffffff8000892585 ; pop rbp ; ret
0xffffff8000893143 : test eax, eax ; jne 0xffffff8000893135 ; pop rbp ; ret
0xffffff8000893183 : test eax, eax ; jne 0xffffff8000893175 ; pop rbp ; ret
0xffffff8000893f73 : test eax, eax ; jne 0xffffff8000893f65 ; pop rbp ; ret
0xffffff8000893fb3 : test eax, eax ; jne 0xffffff8000893fa5 ; pop rbp ; ret
0xffffff80008951f3 : test eax, eax ; jne 0xffffff80008951e5 ; pop rbp ; ret
0xffffff8000895233 : test eax, eax ; jne 0xffffff8000895225 ; pop rbp ; ret
0xffffff8000896813 : test eax, eax ; jne 0xffffff8000896805 ; pop rbp ; ret
0xffffff8000896853 : test eax, eax ; jne 0xffffff8000896845 ; pop rbp ; ret
0xffffff8000897360 : test eax, eax ; jne 0xffffff8000897371 ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff80008990e3 : test eax, eax ; jne 0xffffff80008990d5 ; pop rbp ; ret
0xffffff8000899123 : test eax, eax ; jne 0xffffff8000899115 ; pop rbp ; ret
0xffffff800089b123 : test eax, eax ; jne 0xffffff800089b115 ; pop rbp ; ret
0xffffff800089b163 : test eax, eax ; jne 0xffffff800089b155 ; pop rbp ; ret
0xffffff800089b743 : test eax, eax ; jne 0xffffff800089b735 ; pop rbp ; ret
0xffffff800089b783 : test eax, eax ; jne 0xffffff800089b775 ; pop rbp ; ret
0xffffff800089ba73 : test eax, eax ; jne 0xffffff800089ba65 ; pop rbp ; ret
0xffffff800089bab3 : test eax, eax ; jne 0xffffff800089baa5 ; pop rbp ; ret
0xffffff800089bda3 : test eax, eax ; jne 0xffffff800089bd95 ; pop rbp ; ret
0xffffff800089bde3 : test eax, eax ; jne 0xffffff800089bdd5 ; pop rbp ; ret
0xffffff800089d253 : test eax, eax ; jne 0xffffff800089d245 ; pop rbp ; ret
0xffffff800089d293 : test eax, eax ; jne 0xffffff800089d285 ; pop rbp ; ret
0xffffff80008a2ae3 : test eax, eax ; jne 0xffffff80008a2ad5 ; pop rbp ; ret
0xffffff80008a2b23 : test eax, eax ; jne 0xffffff80008a2b15 ; pop rbp ; ret
0xffffff80008a53b3 : test eax, eax ; jne 0xffffff80008a53a5 ; pop rbp ; ret
0xffffff80008a53f3 : test eax, eax ; jne 0xffffff80008a53e5 ; pop rbp ; ret
0xffffff80008a6343 : test eax, eax ; jne 0xffffff80008a6335 ; pop rbp ; ret
0xffffff80008a6383 : test eax, eax ; jne 0xffffff80008a6375 ; pop rbp ; ret
0xffffff80008a7243 : test eax, eax ; jne 0xffffff80008a7235 ; pop rbp ; ret
0xffffff80008a7283 : test eax, eax ; jne 0xffffff80008a7275 ; pop rbp ; ret
0xffffff80008a7c53 : test eax, eax ; jne 0xffffff80008a7c45 ; pop rbp ; ret
0xffffff80008a7c93 : test eax, eax ; jne 0xffffff80008a7c85 ; pop rbp ; ret
0xffffff80008a81f3 : test eax, eax ; jne 0xffffff80008a81e5 ; pop rbp ; ret
0xffffff80008aa8aa : test eax, eax ; jne 0xffffff80008aa8b7 ; xor eax, eax ; pop rbp ; ret
0xffffff80008aabe3 : test eax, eax ; jne 0xffffff80008aabd5 ; pop rbp ; ret
0xffffff80008aac23 : test eax, eax ; jne 0xffffff80008aac15 ; pop rbp ; ret
0xffffff80008ab223 : test eax, eax ; jne 0xffffff80008ab215 ; pop rbp ; ret
0xffffff80008ab583 : test eax, eax ; jne 0xffffff80008ab575 ; pop rbp ; ret
0xffffff80008ab5c3 : test eax, eax ; jne 0xffffff80008ab5b5 ; pop rbp ; ret
0xffffff80008ae123 : test eax, eax ; jne 0xffffff80008ae115 ; pop rbp ; ret
0xffffff80008ae163 : test eax, eax ; jne 0xffffff80008ae155 ; pop rbp ; ret
0xffffff80008af433 : test eax, eax ; jne 0xffffff80008af425 ; pop rbp ; ret
0xffffff80008af473 : test eax, eax ; jne 0xffffff80008af465 ; pop rbp ; ret
0xffffff80008b3913 : test eax, eax ; jne 0xffffff80008b3905 ; pop rbp ; ret
0xffffff80008b3e83 : test eax, eax ; jne 0xffffff80008b3e75 ; pop rbp ; ret
0xffffff80008b51c3 : test eax, eax ; jne 0xffffff80008b51b5 ; pop rbp ; ret
0xffffff80008b5203 : test eax, eax ; jne 0xffffff80008b51f5 ; pop rbp ; ret
0xffffff80008b5db3 : test eax, eax ; jne 0xffffff80008b5da5 ; pop rbp ; ret
0xffffff80008b5df3 : test eax, eax ; jne 0xffffff80008b5de5 ; pop rbp ; ret
0xffffff80008b6403 : test eax, eax ; jne 0xffffff80008b63f5 ; pop rbp ; ret
0xffffff80008b6443 : test eax, eax ; jne 0xffffff80008b6435 ; pop rbp ; ret
0xffffff80008b711b : test eax, eax ; jne 0xffffff80008b7116 ; jmp 0xffffff80008b70e9
0xffffff80008b7f8f : test eax, eax ; jne 0xffffff80008b7f87 ; jmp 0xffffff80008b7fbb
0xffffff80008b810f : test eax, eax ; jne 0xffffff80008b8107 ; jmp 0xffffff80008b8155
0xffffff80008b823a : test eax, eax ; jne 0xffffff80008b8238 ; jmp 0xffffff80008b828c
0xffffff80008b835f : test eax, eax ; jne 0xffffff80008b8357 ; jmp 0xffffff80008b83a5
0xffffff80008b841f : test eax, eax ; jne 0xffffff80008b8417 ; jmp 0xffffff80008b8473
0xffffff80008b965a : test eax, eax ; jne 0xffffff80008b9658 ; jmp 0xffffff80008b96b5
0xffffff80008bab8a : test eax, eax ; jne 0xffffff80008bab87 ; jmp 0xffffff80008baba5
0xffffff80008bdfb3 : test eax, eax ; jne 0xffffff80008bdfa8 ; jmp 0xffffff80008bdf5f
0xffffff80008bf54f : test eax, eax ; jne 0xffffff80008bf547 ; jmp 0xffffff80008bf57b
0xffffff80008bf5ff : test eax, eax ; jne 0xffffff80008bf5f7 ; jmp 0xffffff80008bf653
0xffffff80008c0bd3 : test eax, eax ; jne 0xffffff80008c0bc5 ; pop rbp ; ret
0xffffff80008c0c13 : test eax, eax ; jne 0xffffff80008c0c05 ; pop rbp ; ret
0xffffff80008c2b23 : test eax, eax ; jne 0xffffff80008c2b15 ; pop rbp ; ret
0xffffff80008c2b63 : test eax, eax ; jne 0xffffff80008c2b55 ; pop rbp ; ret
0xffffff80008c37b3 : test eax, eax ; jne 0xffffff80008c37a5 ; pop rbp ; ret
0xffffff80008c37f3 : test eax, eax ; jne 0xffffff80008c37e5 ; pop rbp ; ret
0xffffff80008c4283 : test eax, eax ; jne 0xffffff80008c4275 ; pop rbp ; ret
0xffffff80008c42c3 : test eax, eax ; jne 0xffffff80008c42b5 ; pop rbp ; ret
0xffffff80008cc463 : test eax, eax ; jne 0xffffff80008cc455 ; pop rbp ; ret
0xffffff80008cc4a3 : test eax, eax ; jne 0xffffff80008cc495 ; pop rbp ; ret
0xffffff80008ce263 : test eax, eax ; jne 0xffffff80008ce255 ; pop rbp ; ret
0xffffff80008ce2a3 : test eax, eax ; jne 0xffffff80008ce295 ; pop rbp ; ret
0xffffff80008cec03 : test eax, eax ; jne 0xffffff80008cebf5 ; pop rbp ; ret
0xffffff80008cec43 : test eax, eax ; jne 0xffffff80008cec35 ; pop rbp ; ret
0xffffff80008d0833 : test eax, eax ; jne 0xffffff80008d0825 ; pop rbp ; ret
0xffffff80008d0873 : test eax, eax ; jne 0xffffff80008d0865 ; pop rbp ; ret
0xffffff80008d18f3 : test eax, eax ; jne 0xffffff80008d18e5 ; pop rbp ; ret
0xffffff80008d1933 : test eax, eax ; jne 0xffffff80008d1925 ; pop rbp ; ret
0xffffff80008d4b93 : test eax, eax ; jne 0xffffff80008d4b85 ; pop rbp ; ret
0xffffff80008d4bd3 : test eax, eax ; jne 0xffffff80008d4bc5 ; pop rbp ; ret
0xffffff80008d5b93 : test eax, eax ; jne 0xffffff80008d5b85 ; pop rbp ; ret
0xffffff80008d5bd3 : test eax, eax ; jne 0xffffff80008d5bc5 ; pop rbp ; ret
0xffffff80008d6b83 : test eax, eax ; jne 0xffffff80008d6b75 ; pop rbp ; ret
0xffffff80008d6bc3 : test eax, eax ; jne 0xffffff80008d6bb5 ; pop rbp ; ret
0xffffff80008d7523 : test eax, eax ; jne 0xffffff80008d7515 ; pop rbp ; ret
0xffffff80008d7563 : test eax, eax ; jne 0xffffff80008d7555 ; pop rbp ; ret
0xffffff80008d7793 : test eax, eax ; jne 0xffffff80008d7785 ; pop rbp ; ret
0xffffff80008d77d3 : test eax, eax ; jne 0xffffff80008d77c5 ; pop rbp ; ret
0xffffff80008d7a03 : test eax, eax ; jne 0xffffff80008d79f5 ; pop rbp ; ret
0xffffff80008d7a43 : test eax, eax ; jne 0xffffff80008d7a35 ; pop rbp ; ret
0xffffff80008d9873 : test eax, eax ; jne 0xffffff80008d9865 ; pop rbp ; ret
0xffffff80008e2693 : test eax, eax ; jne 0xffffff80008e2685 ; pop rbp ; ret
0xffffff80008e26d3 : test eax, eax ; jne 0xffffff80008e26c5 ; pop rbp ; ret
0xffffff80008e5603 : test eax, eax ; jne 0xffffff80008e55f5 ; pop rbp ; ret
0xffffff80008e5643 : test eax, eax ; jne 0xffffff80008e5635 ; pop rbp ; ret
0xffffff80008e6b33 : test eax, eax ; jne 0xffffff80008e6b25 ; pop rbp ; ret
0xffffff80008e6b73 : test eax, eax ; jne 0xffffff80008e6b65 ; pop rbp ; ret
0xffffff80008e6df3 : test eax, eax ; jne 0xffffff80008e6de5 ; pop rbp ; ret
0xffffff80008e6e33 : test eax, eax ; jne 0xffffff80008e6e25 ; pop rbp ; ret
0xffffff80008e7683 : test eax, eax ; jne 0xffffff80008e7675 ; pop rbp ; ret
0xffffff80004519db : test eax, eax ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800080e0c4 : test eax, eax ; sete al ; pop rbp ; ret
0xffffff8000891c68 : test eax, eax ; sete al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000441131 : test eax, eax ; sete dl ; jmp 0xffffff800044115f
0xffffff800081e96e : test eax, eax ; setg al ; pop rbp ; ret
0xffffff80002c6ac0 : test eax, eax ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800081e9c5 : test eax, eax ; setne al ; pop rbp ; ret
0xffffff800082fa29 : test eax, eax ; setne al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800033ab28 : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret
0xffffff80008e4a9a : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x42], al ; ret 2
0xffffff80002aebbb : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x69], cl ; ret
0xffffff8000505c2c : test eax, ebx ; dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; ret 0x428b
0xffffff80005b50a6 : test eax, ecx ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff8000627a44 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x476
0xffffff80006f7375 : test eax, edx ; idiv edi ; jmp qword ptr [rax]
0xffffff800064e475 : test eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0xffffff800042cc73 : test eax, esp ; idiv edi ; call qword ptr [rax]
0xffffff80006187c9 : test ebp, ebp ; je 0xffffff80006187eb ; mov rdi, r13 ; call 0xffffff80007b4a69
0xffffff800069676e : test ebp, ebp ; je 0xffffff80006967ad ; mov rdi, r13 ; call 0xffffff8000392a49
0xffffff8000476c73 : test ebp, ebp ; jne 0xffffff8000476c88 ; mov rdi, r14 ; call 0xffffff8000422eb9
0xffffff800060599c : test ebp, ebp ; jne 0xffffff8000605995 ; jmp 0xffffff8000605969
0xffffff80007a5c1c : test ebp, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0xffffff800050b727 : test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008263ee : test ebp, esp ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff80006598b2 : test ebp, esp ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0xffffff80004225c5 : test ebx, eax ; push rsp ; add byte ptr [rcx], dh ; shr al, 0x80 ; ret 0xffe7
0xffffff8000399911 : test ebx, ebx ; je 0xffffff800039991f ; cli ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003aa147 : test ebx, ebx ; je 0xffffff80003aa157 ; mov rdi, r14 ; call rbx
0xffffff80004e664b : test ebx, ebx ; je 0xffffff80004e6670 ; mov rdi, rbx ; call 0xffffff8000392939
0xffffff800026dcff : test ebx, ebx ; jne 0xffffff800026dce8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800026ddaf : test ebx, ebx ; jne 0xffffff800026dd98 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049cf37 : test ebx, ebx ; jne 0xffffff800049cf28 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000547487 : test ebx, ebx ; jne 0xffffff800054745c ; jmp 0xffffff80005474ae
0xffffff8000600a6a : test ebx, ebx ; jne 0xffffff8000600a33 ; jmp 0xffffff8000600a7f
0xffffff800063500e : test ebx, ebx ; jne 0xffffff8000635007 ; jmp 0xffffff8000634fdb
0xffffff80006783d4 : test ebx, ebx ; jne 0xffffff8000678397 ; call 0xffffff800029aac7
0xffffff800088d34c : test ebx, ebx ; jne 0xffffff800088d338 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d440 : test ebx, ebx ; jne 0xffffff800088d3f8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d4c0 : test ebx, ebx ; jne 0xffffff800088d478 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006159a7 : test ebx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000314b5c : test ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff80008d8edb : test ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004800f5 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007d85b5 : test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff80005aff52 : test ecx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800066a610 : test ecx, ecx ; cmove eax, edx ; jmp 0xffffff800066a621
0xffffff8000716662 : test ecx, ecx ; cmove edx, ecx ; add eax, edx ; pop rbp ; ret
0xffffff8000328487 : test ecx, ecx ; cmove rax, rcx ; pop rbp ; ret
0xffffff80003acde5 : test ecx, ecx ; cmove rdi, rcx ; call rax
0xffffff80003a27cb : test ecx, ecx ; cmove rdi, rcx ; pop rbp ; jmp rax
0xffffff800028777e : test ecx, ecx ; je 0xffffff800028778d ; mov eax, dword ptr [rcx + 0x2c] ; pop rbp ; ret
0xffffff8000288fed : test ecx, ecx ; je 0xffffff8000288ffd ; call rcx
0xffffff800028a76d : test ecx, ecx ; je 0xffffff800028a77d ; call rcx
0xffffff80002b009d : test ecx, ecx ; je 0xffffff80002b00ad ; call rcx
0xffffff80002b034d : test ecx, ecx ; je 0xffffff80002b035d ; call rcx
0xffffff80002c0986 : test ecx, ecx ; je 0xffffff80002c0995 ; mov eax, dword ptr [rcx + 0x4c] ; pop rbp ; ret
0xffffff80002cd19b : test ecx, ecx ; je 0xffffff80002cd1ac ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80002edaf1 : test ecx, ecx ; je 0xffffff80002edb00 ; mov dword ptr [rcx + 0x48], edi ; pop rbp ; ret
0xffffff80003907a7 : test ecx, ecx ; je 0xffffff80003907b6 ; mov eax, dword ptr [rcx + 0x1c] ; pop rbp ; ret
0xffffff80003907e7 : test ecx, ecx ; je 0xffffff80003907f8 ; movzx eax, byte ptr [rcx + 0x11] ; pop rbp ; ret
0xffffff80003a2970 : test ecx, ecx ; je 0xffffff80003a297a ; call rcx
0xffffff80003a29a0 : test ecx, ecx ; je 0xffffff80003a29aa ; call rcx
0xffffff80003a2ad6 : test ecx, ecx ; je 0xffffff80003a2aff ; mov esi, eax ; call rcx
0xffffff80003a41f5 : test ecx, ecx ; je 0xffffff80003a4204 ; mov dword ptr [rcx + 0x30], eax ; pop rbp ; ret
0xffffff80003ab86d : test ecx, ecx ; je 0xffffff80003ab87d ; call rcx
0xffffff80003ab907 : test ecx, ecx ; je 0xffffff80003aba96 ; call rcx
0xffffff80004f9d4e : test ecx, ecx ; je 0xffffff80004f9d5f ; mov rax, qword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff80005c132c : test ecx, ecx ; je 0xffffff80005c133d ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80005c179d : test ecx, ecx ; je 0xffffff80005c17c2 ; xor esi, esi ; mov rdi, rbx ; call rcx
0xffffff800063fd5e : test ecx, ecx ; je 0xffffff800063fd71 ; mov rdi, rbx ; call rcx
0xffffff80006456eb : test ecx, ecx ; je 0xffffff80006456fa ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff8000756bb3 : test ecx, ecx ; je 0xffffff8000756bc4 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff8000756be1 : test ecx, ecx ; je 0xffffff8000756bf2 ; mov rax, qword ptr [rcx + 0x68] ; pop rbp ; ret
0xffffff80007af84d : test ecx, ecx ; je 0xffffff80007af85e ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007af87d : test ecx, ecx ; je 0xffffff80007af88e ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80007af9fd : test ecx, ecx ; je 0xffffff80007afa0e ; mov rax, qword ptr [rcx + 8] ; pop rbp ; ret
0xffffff80007b11dd : test ecx, ecx ; je 0xffffff80007b11ee ; mov rax, qword ptr [rcx + 0x50] ; pop rbp ; ret
0xffffff80007f6fbd : test ecx, ecx ; je 0xffffff80007f6fce ; mov rax, qword ptr [rcx + 0x20] ; pop rbp ; ret
0xffffff80007fcc96 : test ecx, ecx ; je 0xffffff80007fcca5 ; mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff8000840411 : test ecx, ecx ; je 0xffffff800084042d ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800086072b : test ecx, ecx ; je 0xffffff800086073a ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff800086dfb0 : test ecx, ecx ; je 0xffffff800086dfba ; call rcx
0xffffff8000870591 : test ecx, ecx ; je 0xffffff800087059f ; mov rsi, qword ptr [rcx] ; call rax
0xffffff80008802b1 : test ecx, ecx ; je 0xffffff80008802be ; inc dword ptr [rdx] ; pop rbp ; ret
0xffffff80008a004e : test ecx, ecx ; je 0xffffff80008a005f ; mov rax, qword ptr [rcx + 0x18] ; pop rbp ; ret
0xffffff80008c45ab : test ecx, ecx ; je 0xffffff80008c45b8 ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff80008ee798 : test ecx, ecx ; je 0xffffff80008ee777 ; mov rdi, r14 ; call rcx
0xffffff80008eeb48 : test ecx, ecx ; je 0xffffff80008eeb27 ; mov rdi, r14 ; call rcx
0xffffff80008f265c : test ecx, ecx ; je 0xffffff80008f2672 ; mov rdi, r14 ; call rcx
0xffffff80008f26b4 : test ecx, ecx ; je 0xffffff80008f2697 ; mov rdi, r14 ; call rcx
0xffffff80008f2739 : test ecx, ecx ; je 0xffffff80008f274f ; mov rdi, r14 ; call rcx
0xffffff80008f2791 : test ecx, ecx ; je 0xffffff80008f2777 ; mov rdi, r14 ; call rcx
0xffffff80008f29b9 : test ecx, ecx ; je 0xffffff80008f29cf ; mov rdi, r14 ; call rcx
0xffffff80008f2a11 : test ecx, ecx ; je 0xffffff80008f29f7 ; mov rdi, r14 ; call rcx
0xffffff80008f2a69 : test ecx, ecx ; je 0xffffff80008f2a7f ; mov rdi, r14 ; call rcx
0xffffff80008f2ac1 : test ecx, ecx ; je 0xffffff80008f2aa7 ; mov rdi, r14 ; call rcx
0xffffff80008f41d8 : test ecx, ecx ; je 0xffffff80008f41b7 ; mov rdi, r14 ; call rcx
0xffffff80008f4d08 : test ecx, ecx ; je 0xffffff80008f4ce7 ; mov rdi, r14 ; call rcx
0xffffff80008f501c : test ecx, ecx ; je 0xffffff80008f5032 ; mov rdi, r15 ; call rcx
0xffffff80008f5074 : test ecx, ecx ; je 0xffffff80008f5057 ; mov rdi, r15 ; call rcx
0xffffff80008f511c : test ecx, ecx ; je 0xffffff80008f5132 ; mov rdi, r15 ; call rcx
0xffffff80008f5174 : test ecx, ecx ; je 0xffffff80008f5157 ; mov rdi, r15 ; call rcx
0xffffff80008f520c : test ecx, ecx ; je 0xffffff80008f5222 ; mov rdi, r14 ; call rcx
0xffffff80008f5264 : test ecx, ecx ; je 0xffffff80008f5247 ; mov rdi, r14 ; call rcx
0xffffff80008f53ec : test ecx, ecx ; je 0xffffff80008f5402 ; mov rdi, r15 ; call rcx
0xffffff80008f5444 : test ecx, ecx ; je 0xffffff80008f5427 ; mov rdi, r15 ; call rcx
0xffffff80008f54cc : test ecx, ecx ; je 0xffffff80008f54e2 ; mov rdi, r15 ; call rcx
0xffffff80008f5524 : test ecx, ecx ; je 0xffffff80008f5507 ; mov rdi, r15 ; call rcx
0xffffff80008f559c : test ecx, ecx ; je 0xffffff80008f55b2 ; mov rdi, r14 ; call rcx
0xffffff80008f55f4 : test ecx, ecx ; je 0xffffff80008f55d7 ; mov rdi, r14 ; call rcx
0xffffff80008f570c : test ecx, ecx ; je 0xffffff80008f5722 ; mov rdi, r14 ; call rcx
0xffffff80008f5764 : test ecx, ecx ; je 0xffffff80008f5747 ; mov rdi, r14 ; call rcx
0xffffff80008feee8 : test ecx, ecx ; je 0xffffff80008feec7 ; mov rdi, r14 ; call rcx
0xffffff80008ff0a8 : test ecx, ecx ; je 0xffffff80008ff087 ; mov rdi, r14 ; call rcx
0xffffff80008ff428 : test ecx, ecx ; je 0xffffff80008ff407 ; mov rdi, r14 ; call rcx
0xffffff80008ff7a8 : test ecx, ecx ; je 0xffffff80008ff787 ; mov rdi, r14 ; call rcx
0xffffff800090004c : test ecx, ecx ; je 0xffffff8000900062 ; mov rdi, r15 ; call rcx
0xffffff80009000a4 : test ecx, ecx ; je 0xffffff8000900087 ; mov rdi, r15 ; call rcx
0xffffff800090010c : test ecx, ecx ; je 0xffffff8000900122 ; mov rdi, r15 ; call rcx
0xffffff8000900164 : test ecx, ecx ; je 0xffffff8000900147 ; mov rdi, r15 ; call rcx
0xffffff80009002ac : test ecx, ecx ; je 0xffffff80009002c4 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff8000900304 : test ecx, ecx ; je 0xffffff80009002e8 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff800090097c : test ecx, ecx ; je 0xffffff8000900992 ; mov rdi, r15 ; call rcx
0xffffff80009009d4 : test ecx, ecx ; je 0xffffff80009009b7 ; mov rdi, r15 ; call rcx
0xffffff8000900a3c : test ecx, ecx ; je 0xffffff8000900a52 ; mov rdi, r15 ; call rcx
0xffffff8000900a94 : test ecx, ecx ; je 0xffffff8000900a77 ; mov rdi, r15 ; call rcx
0xffffff8000900bdc : test ecx, ecx ; je 0xffffff8000900bf4 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff8000900c34 : test ecx, ecx ; je 0xffffff8000900c18 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff80009014ac : test ecx, ecx ; je 0xffffff80009014c2 ; mov rdi, r15 ; call rcx
0xffffff8000901504 : test ecx, ecx ; je 0xffffff80009014e7 ; mov rdi, r15 ; call rcx
0xffffff80009015ac : test ecx, ecx ; je 0xffffff80009015c2 ; mov rdi, r15 ; call rcx
0xffffff8000901604 : test ecx, ecx ; je 0xffffff80009015e7 ; mov rdi, r15 ; call rcx
0xffffff800090182c : test ecx, ecx ; je 0xffffff8000901844 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff8000901884 : test ecx, ecx ; je 0xffffff8000901868 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff80009026fc : test ecx, ecx ; je 0xffffff8000902712 ; mov rdi, r15 ; call rcx
0xffffff8000902754 : test ecx, ecx ; je 0xffffff8000902737 ; mov rdi, r15 ; call rcx
0xffffff80009027bc : test ecx, ecx ; je 0xffffff80009027d2 ; mov rdi, r15 ; call rcx
0xffffff8000902814 : test ecx, ecx ; je 0xffffff80009027f7 ; mov rdi, r15 ; call rcx
0xffffff80009033ec : test ecx, ecx ; je 0xffffff8000903402 ; mov rdi, r15 ; call rcx
0xffffff8000903444 : test ecx, ecx ; je 0xffffff8000903427 ; mov rdi, r15 ; call rcx
0xffffff80009034ac : test ecx, ecx ; je 0xffffff80009034c2 ; mov rdi, r15 ; call rcx
0xffffff8000903504 : test ecx, ecx ; je 0xffffff80009034e7 ; mov rdi, r15 ; call rcx
0xffffff80009058ac : test ecx, ecx ; je 0xffffff80009058c2 ; mov rdi, r14 ; call rcx
0xffffff8000905904 : test ecx, ecx ; je 0xffffff80009058e7 ; mov rdi, r14 ; call rcx
0xffffff800090598c : test ecx, ecx ; je 0xffffff80009059a2 ; mov rdi, r14 ; call rcx
0xffffff80009059e4 : test ecx, ecx ; je 0xffffff80009059c7 ; mov rdi, r14 ; call rcx
0xffffff8000907458 : test ecx, ecx ; je 0xffffff8000907437 ; mov rdi, r14 ; call rcx
0xffffff8000907acc : test ecx, ecx ; je 0xffffff8000907ae2 ; mov rdi, r15 ; call rcx
0xffffff8000907b24 : test ecx, ecx ; je 0xffffff8000907b07 ; mov rdi, r15 ; call rcx
0xffffff8000907c5c : test ecx, ecx ; je 0xffffff8000907c72 ; mov rdi, r15 ; call rcx
0xffffff8000907cb4 : test ecx, ecx ; je 0xffffff8000907c97 ; mov rdi, r15 ; call rcx
0xffffff8000907e08 : test ecx, ecx ; je 0xffffff8000907de7 ; mov rdi, r14 ; call rcx
0xffffff8000909de8 : test ecx, ecx ; je 0xffffff8000909dc7 ; mov rdi, r14 ; call rcx
0xffffff800090a71c : test ecx, ecx ; je 0xffffff800090a732 ; mov rdi, r14 ; call rcx
0xffffff800090a774 : test ecx, ecx ; je 0xffffff800090a757 ; mov rdi, r14 ; call rcx
0xffffff80005bfad2 : test ecx, ecx ; jg 0xffffff80005bfaa8 ; jmp 0xffffff80005bfae9
0xffffff80005bfc7d : test ecx, ecx ; jg 0xffffff80005bfc45 ; jmp 0xffffff80005bfc91
0xffffff80002e9bd5 : test ecx, ecx ; jne 0xffffff80002e9be2 ; xor eax, eax ; pop rbp ; ret
0xffffff8000328414 : test ecx, ecx ; jne 0xffffff8000328405 ; pop rbp ; ret
0xffffff80003284b1 : test ecx, ecx ; jne 0xffffff80003284a5 ; pop rbp ; ret
0xffffff8000389861 : test ecx, ecx ; jne 0xffffff8000389876 ; call qword ptr [rax]
0xffffff800040c044 : test ecx, ecx ; jne 0xffffff800040c025 ; pop rbp ; ret
0xffffff800041ecec : test ecx, ecx ; jne 0xffffff800041ece5 ; pop rbp ; ret
0xffffff800041ee14 : test ecx, ecx ; jne 0xffffff800041eda5 ; pop rbp ; ret
0xffffff8000437774 : test ecx, ecx ; jne 0xffffff8000437783 ; xor eax, eax ; pop rbp ; ret
0xffffff8000448f7c : test ecx, ecx ; jne 0xffffff8000448f75 ; pop rbp ; ret
0xffffff8000530ed3 : test ecx, ecx ; jne 0xffffff8000530ec5 ; pop rbp ; ret
0xffffff8000530f71 : test ecx, ecx ; jne 0xffffff8000530f65 ; pop rbp ; ret
0xffffff800057f1d1 : test ecx, ecx ; jne 0xffffff800057f1c5 ; pop rbp ; ret
0xffffff80005801b5 : test ecx, ecx ; jne 0xffffff80005801a5 ; pop rbp ; ret
0xffffff8000581568 : test ecx, ecx ; jne 0xffffff8000581555 ; pop rbp ; ret
0xffffff8000582490 : test ecx, ecx ; jne 0xffffff8000582475 ; pop rbp ; ret
0xffffff8000582535 : test ecx, ecx ; jne 0xffffff8000582525 ; pop rbp ; ret
0xffffff80005825b0 : test ecx, ecx ; jne 0xffffff8000582595 ; pop rbp ; ret
0xffffff80005a8ece : test ecx, ecx ; jne 0xffffff80005a8e19 ; pop rbp ; ret
0xffffff80005a8f81 : test ecx, ecx ; jne 0xffffff80005a8f75 ; pop rbp ; ret
0xffffff80005b1121 : test ecx, ecx ; jne 0xffffff80005b1115 ; pop rbp ; ret
0xffffff80005b2155 : test ecx, ecx ; jne 0xffffff80005b2145 ; pop rbp ; ret
0xffffff80005bf825 : test ecx, ecx ; jne 0xffffff80005bf815 ; pop rbp ; ret
0xffffff80005e47bf : test ecx, ecx ; jne 0xffffff80005e47b5 ; pop rbp ; ret
0xffffff80005e4861 : test ecx, ecx ; jne 0xffffff80005e4855 ; pop rbp ; ret
0xffffff80005ebec5 : test ecx, ecx ; jne 0xffffff80005ebeb5 ; pop rbp ; ret
0xffffff8000626482 : test ecx, ecx ; jne 0xffffff8000626475 ; pop rbp ; ret
0xffffff80006264c9 : test ecx, ecx ; jne 0xffffff80006264b5 ; pop rbp ; ret
0xffffff800062653e : test ecx, ecx ; jne 0xffffff8000626535 ; pop rbp ; ret
0xffffff8000637ad5 : test ecx, ecx ; jne 0xffffff8000637ac5 ; pop rbp ; ret
0xffffff8000687fa1 : test ecx, ecx ; jne 0xffffff8000687f95 ; pop rbp ; ret
0xffffff80006a4401 : test ecx, ecx ; jne 0xffffff80006a43f5 ; pop rbp ; ret
0xffffff80006c97fe : test ecx, ecx ; jne 0xffffff80006c97f7 ; xor eax, eax ; pop rbp ; ret
0xffffff800077d0cd : test ecx, ecx ; jne 0xffffff800077d0c5 ; pop rbp ; ret
0xffffff800077e299 : test ecx, ecx ; jne 0xffffff800077e295 ; pop rbp ; ret
0xffffff800077e3ad : test ecx, ecx ; jne 0xffffff800077e3a5 ; pop rbp ; ret
0xffffff80007f5a45 : test ecx, ecx ; jne 0xffffff80007f5a35 ; pop rbp ; ret
0xffffff8000811b93 : test ecx, ecx ; jne 0xffffff8000811b85 ; pop rbp ; ret
0xffffff8000813323 : test ecx, ecx ; jne 0xffffff8000813315 ; pop rbp ; ret
0xffffff8000814403 : test ecx, ecx ; jne 0xffffff80008143f5 ; pop rbp ; ret
0xffffff8000814e03 : test ecx, ecx ; jne 0xffffff8000814df5 ; pop rbp ; ret
0xffffff8000816363 : test ecx, ecx ; jne 0xffffff8000816355 ; pop rbp ; ret
0xffffff8000818e93 : test ecx, ecx ; jne 0xffffff8000818e85 ; pop rbp ; ret
0xffffff800082b683 : test ecx, ecx ; jne 0xffffff800082b675 ; pop rbp ; ret
0xffffff800082c2a3 : test ecx, ecx ; jne 0xffffff800082c295 ; pop rbp ; ret
0xffffff800082e183 : test ecx, ecx ; jne 0xffffff800082e175 ; pop rbp ; ret
0xffffff800082ecc3 : test ecx, ecx ; jne 0xffffff800082ecb5 ; pop rbp ; ret
0xffffff800082f7d3 : test ecx, ecx ; jne 0xffffff800082f7c5 ; pop rbp ; ret
0xffffff8000830b13 : test ecx, ecx ; jne 0xffffff8000830b05 ; pop rbp ; ret
0xffffff8000832a93 : test ecx, ecx ; jne 0xffffff8000832a85 ; pop rbp ; ret
0xffffff800084cc1c : test ecx, ecx ; jne 0xffffff800084cc15 ; pop rbp ; ret
0xffffff800084fc4c : test ecx, ecx ; jne 0xffffff800084fc45 ; pop rbp ; ret
0xffffff8000858f23 : test ecx, ecx ; jne 0xffffff8000858f15 ; pop rbp ; ret
0xffffff800085ce53 : test ecx, ecx ; jne 0xffffff800085ce45 ; pop rbp ; ret
0xffffff800085d0b3 : test ecx, ecx ; jne 0xffffff800085d0a5 ; pop rbp ; ret
0xffffff8000860fb3 : test ecx, ecx ; jne 0xffffff8000860fa5 ; pop rbp ; ret
0xffffff8000862843 : test ecx, ecx ; jne 0xffffff8000862835 ; pop rbp ; ret
0xffffff8000862ad3 : test ecx, ecx ; jne 0xffffff8000862ac5 ; pop rbp ; ret
0xffffff8000862d33 : test ecx, ecx ; jne 0xffffff8000862d25 ; pop rbp ; ret
0xffffff8000862f93 : test ecx, ecx ; jne 0xffffff8000862f85 ; pop rbp ; ret
0xffffff80008631f3 : test ecx, ecx ; jne 0xffffff80008631e5 ; pop rbp ; ret
0xffffff8000863453 : test ecx, ecx ; jne 0xffffff8000863445 ; pop rbp ; ret
0xffffff80008636b3 : test ecx, ecx ; jne 0xffffff80008636a5 ; pop rbp ; ret
0xffffff80008813c3 : test ecx, ecx ; jne 0xffffff80008813b5 ; pop rbp ; ret
0xffffff80008816e3 : test ecx, ecx ; jne 0xffffff80008816d5 ; pop rbp ; ret
0xffffff8000881af3 : test ecx, ecx ; jne 0xffffff8000881ae5 ; pop rbp ; ret
0xffffff8000882103 : test ecx, ecx ; jne 0xffffff80008820f5 ; pop rbp ; ret
0xffffff8000882483 : test ecx, ecx ; jne 0xffffff8000882475 ; pop rbp ; ret
0xffffff8000884783 : test ecx, ecx ; jne 0xffffff8000884775 ; pop rbp ; ret
0xffffff8000884ec3 : test ecx, ecx ; jne 0xffffff8000884eb5 ; pop rbp ; ret
0xffffff80008851bb : test ecx, ecx ; jne 0xffffff80008851b5 ; pop rbp ; ret
0xffffff80008857f3 : test ecx, ecx ; jne 0xffffff80008857e5 ; pop rbp ; ret
0xffffff8000886083 : test ecx, ecx ; jne 0xffffff8000886075 ; pop rbp ; ret
0xffffff8000887ef3 : test ecx, ecx ; jne 0xffffff8000887ee5 ; pop rbp ; ret
0xffffff8000889d53 : test ecx, ecx ; jne 0xffffff8000889d45 ; pop rbp ; ret
0xffffff800088a983 : test ecx, ecx ; jne 0xffffff800088a975 ; pop rbp ; ret
0xffffff800088cc03 : test ecx, ecx ; jne 0xffffff800088cbf5 ; pop rbp ; ret
0xffffff800088eed3 : test ecx, ecx ; jne 0xffffff800088eec5 ; pop rbp ; ret
0xffffff8000890153 : test ecx, ecx ; jne 0xffffff8000890145 ; pop rbp ; ret
0xffffff80008912b3 : test ecx, ecx ; jne 0xffffff80008912a5 ; pop rbp ; ret
0xffffff8000891973 : test ecx, ecx ; jne 0xffffff8000891965 ; pop rbp ; ret
0xffffff8000892513 : test ecx, ecx ; jne 0xffffff8000892505 ; pop rbp ; ret
0xffffff8000893103 : test ecx, ecx ; jne 0xffffff80008930f5 ; pop rbp ; ret
0xffffff8000893f33 : test ecx, ecx ; jne 0xffffff8000893f25 ; pop rbp ; ret
0xffffff80008951b3 : test ecx, ecx ; jne 0xffffff80008951a5 ; pop rbp ; ret
0xffffff80008967d3 : test ecx, ecx ; jne 0xffffff80008967c5 ; pop rbp ; ret
0xffffff80008990a3 : test ecx, ecx ; jne 0xffffff8000899095 ; pop rbp ; ret
0xffffff800089b0e3 : test ecx, ecx ; jne 0xffffff800089b0d5 ; pop rbp ; ret
0xffffff800089b703 : test ecx, ecx ; jne 0xffffff800089b6f5 ; pop rbp ; ret
0xffffff800089ba33 : test ecx, ecx ; jne 0xffffff800089ba25 ; pop rbp ; ret
0xffffff800089bd63 : test ecx, ecx ; jne 0xffffff800089bd55 ; pop rbp ; ret
0xffffff800089d213 : test ecx, ecx ; jne 0xffffff800089d205 ; pop rbp ; ret
0xffffff80008a2aa3 : test ecx, ecx ; jne 0xffffff80008a2a95 ; pop rbp ; ret
0xffffff80008a5373 : test ecx, ecx ; jne 0xffffff80008a5365 ; pop rbp ; ret
0xffffff80008a6303 : test ecx, ecx ; jne 0xffffff80008a62f5 ; pop rbp ; ret
0xffffff80008a7203 : test ecx, ecx ; jne 0xffffff80008a71f5 ; pop rbp ; ret
0xffffff80008a7c13 : test ecx, ecx ; jne 0xffffff80008a7c05 ; pop rbp ; ret
0xffffff80008aaba3 : test ecx, ecx ; jne 0xffffff80008aab95 ; pop rbp ; ret
0xffffff80008ab1e3 : test ecx, ecx ; jne 0xffffff80008ab1d5 ; pop rbp ; ret
0xffffff80008ab543 : test ecx, ecx ; jne 0xffffff80008ab535 ; pop rbp ; ret
0xffffff80008ae0e3 : test ecx, ecx ; jne 0xffffff80008ae0d5 ; pop rbp ; ret
0xffffff80008af3f3 : test ecx, ecx ; jne 0xffffff80008af3e5 ; pop rbp ; ret
0xffffff80008b3e43 : test ecx, ecx ; jne 0xffffff80008b3e35 ; pop rbp ; ret
0xffffff80008b5183 : test ecx, ecx ; jne 0xffffff80008b5175 ; pop rbp ; ret
0xffffff80008b5d73 : test ecx, ecx ; jne 0xffffff80008b5d65 ; pop rbp ; ret
0xffffff80008b63c3 : test ecx, ecx ; jne 0xffffff80008b63b5 ; pop rbp ; ret
0xffffff80008c0b93 : test ecx, ecx ; jne 0xffffff80008c0b85 ; pop rbp ; ret
0xffffff80008c2ae3 : test ecx, ecx ; jne 0xffffff80008c2ad5 ; pop rbp ; ret
0xffffff80008c3773 : test ecx, ecx ; jne 0xffffff80008c3765 ; pop rbp ; ret
0xffffff80008c4243 : test ecx, ecx ; jne 0xffffff80008c4235 ; pop rbp ; ret
0xffffff80008c6810 : test ecx, ecx ; jne 0xffffff80008c6805 ; pop rbp ; ret
0xffffff80008c68b1 : test ecx, ecx ; jne 0xffffff80008c68a5 ; pop rbp ; ret
0xffffff80008c77fa : test ecx, ecx ; jne 0xffffff80008c77e5 ; pop rbp ; ret
0xffffff80008c78a5 : test ecx, ecx ; jne 0xffffff80008c7895 ; pop rbp ; ret
0xffffff80008c87b0 : test ecx, ecx ; jne 0xffffff80008c87a5 ; pop rbp ; ret
0xffffff80008c8851 : test ecx, ecx ; jne 0xffffff80008c8845 ; pop rbp ; ret
0xffffff80008c975f : test ecx, ecx ; jne 0xffffff80008c9755 ; pop rbp ; ret
0xffffff80008c9801 : test ecx, ecx ; jne 0xffffff80008c97f5 ; pop rbp ; ret
0xffffff80008cc423 : test ecx, ecx ; jne 0xffffff80008cc415 ; pop rbp ; ret
0xffffff80008ce223 : test ecx, ecx ; jne 0xffffff80008ce215 ; pop rbp ; ret
0xffffff80008cebc3 : test ecx, ecx ; jne 0xffffff80008cebb5 ; pop rbp ; ret
0xffffff80008d07f3 : test ecx, ecx ; jne 0xffffff80008d07e5 ; pop rbp ; ret
0xffffff80008d18b3 : test ecx, ecx ; jne 0xffffff80008d18a5 ; pop rbp ; ret
0xffffff80008d4b53 : test ecx, ecx ; jne 0xffffff80008d4b45 ; pop rbp ; ret
0xffffff80008d5b53 : test ecx, ecx ; jne 0xffffff80008d5b45 ; pop rbp ; ret
0xffffff80008d6b43 : test ecx, ecx ; jne 0xffffff80008d6b35 ; pop rbp ; ret
0xffffff80008d74e3 : test ecx, ecx ; jne 0xffffff80008d74d5 ; pop rbp ; ret
0xffffff80008d7753 : test ecx, ecx ; jne 0xffffff80008d7745 ; pop rbp ; ret
0xffffff80008d79c3 : test ecx, ecx ; jne 0xffffff80008d79b5 ; pop rbp ; ret
0xffffff80008e2653 : test ecx, ecx ; jne 0xffffff80008e2645 ; pop rbp ; ret
0xffffff80008e55c3 : test ecx, ecx ; jne 0xffffff80008e55b5 ; pop rbp ; ret
0xffffff80008e6af3 : test ecx, ecx ; jne 0xffffff80008e6ae5 ; pop rbp ; ret
0xffffff80008e6db3 : test ecx, ecx ; jne 0xffffff80008e6da5 ; pop rbp ; ret
0xffffff80008e7643 : test ecx, ecx ; jne 0xffffff80008e7635 ; pop rbp ; ret
0xffffff800084de81 : test ecx, ecx ; mov edx, r8d ; jmp 0xffffff800084de96
0xffffff80006e3bf7 : test ecx, ecx ; mov rdi, rcx ; jne 0xffffff80006e3be8 ; pop rbp ; ret
0xffffff80008176f2 : test ecx, ecx ; setne al ; pop rbp ; ret
0xffffff80008486ad : test ecx, edi ; or al, byte ptr [rax] ; add bh, bh ; ret
0xffffff800058ff81 : test ecx, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0xffffff800033f15c : test edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000757036 : test edi, ecx ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff80003b0c17 : test edi, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0xffffff80002ec8a8 : test edi, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0xc031
0xffffff80002b7ad6 : test edi, edi ; cmove eax, edi ; pop rbp ; ret
0xffffff80002bf87a : test edi, edi ; cmove edx, esi ; mov dword ptr [rcx + 0x38], edx ; pop rbp ; ret
0xffffff80008f016e : test edi, edi ; cmovne esi, edi ; mov eax, esi ; pop rbp ; ret
0xffffff8000273b86 : test edi, edi ; je 0xffffff8000273b95 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff8000298c6a : test edi, edi ; je 0xffffff8000298c79 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80002c09d7 : test edi, edi ; je 0xffffff80002c09e8 ; mov rax, qword ptr [rdi + 0x60] ; pop rbp ; ret
0xffffff800031f22a : test edi, edi ; je 0xffffff800031f239 ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000359275 : test edi, edi ; je 0xffffff800035928a ; xor ecx, ecx ; pop rbp ; jmp 0xffffff8000315579
0xffffff8000359295 : test edi, edi ; je 0xffffff80003592aa ; xor ecx, ecx ; pop rbp ; jmp 0xffffff8000315579
0xffffff80003a2fc8 : test edi, edi ; je 0xffffff80003a2fd9 ; lock inc dword ptr [rcx] ; pop rbp ; ret
0xffffff80003aa151 : test edi, edi ; je 0xffffff80003aa163 ; mov rdi, r14 ; call r15
0xffffff80005630d7 : test edi, edi ; je 0xffffff80005630e8 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff80005630f7 : test edi, edi ; je 0xffffff8000563108 ; mov rax, qword ptr [rdi + 0x18] ; pop rbp ; ret
0xffffff8000565847 : test edi, edi ; je 0xffffff8000565858 ; mov rax, qword ptr [rdi + 0x30] ; pop rbp ; ret
0xffffff80005659f7 : test edi, edi ; je 0xffffff8000565a08 ; mov rax, qword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000634d6f : test edi, edi ; je 0xffffff8000634dbc ; xor esi, esi ; call 0xffffff8000551038
0xffffff8000705dda : test edi, edi ; je 0xffffff8000705dfc ; movzx eax, word ptr [rsi + 0x28] ; pop rbp ; ret
0xffffff8000756ac7 : test edi, edi ; je 0xffffff8000756ad6 ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff80007742f4 : test edi, edi ; je 0xffffff8000774303 ; mov eax, edi ; pop rbp ; ret
0xffffff80007749b4 : test edi, edi ; je 0xffffff80007749c3 ; mov eax, edi ; pop rbp ; ret
0xffffff800077d8aa : test edi, edi ; je 0xffffff800077d8b9 ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800077d8ca : test edi, edi ; je 0xffffff800077d8d9 ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff80007837da : test edi, edi ; je 0xffffff80007837e9 ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff800078c5a7 : test edi, edi ; je 0xffffff800078c5b8 ; mov rax, qword ptr [rdi + 0x20] ; pop rbp ; ret
0xffffff800078c955 : test edi, edi ; je 0xffffff800078c966 ; mov qword ptr [rdi + 0x20], rsi ; pop rbp ; ret
0xffffff800078c997 : test edi, edi ; je 0xffffff800078c9a6 ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800078c9a7 : test edi, edi ; je 0xffffff800078c9b8 ; mov rax, qword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800078c9c5 : test edi, edi ; je 0xffffff800078c9d6 ; mov qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff800078c9da : test edi, edi ; je 0xffffff800078c9e9 ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80007b1e7d : test edi, edi ; je 0xffffff80007b1e8c ; xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff8000389676 : test edi, edi ; jne 0xffffff80003896b5 ; call qword ptr [rax]
0xffffff80004692fa : test edi, edi ; jne 0xffffff80004692f5 ; jmp 0xffffff80004692c8
0xffffff80007b8807 : test edi, edi ; jne 0xffffff80007b8805 ; pop rbp ; ret
0xffffff80007b9527 : test edi, edi ; jne 0xffffff80007b9525 ; pop rbp ; ret
0xffffff800080fe63 : test edi, edi ; jne 0xffffff800080fe55 ; pop rbp ; ret
0xffffff80002c3821 : test edi, edx ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x15], cl ; ret
0xffffff800031f215 : test edi, esi ; sete al ; movzx eax, al ; pop rbp ; ret
0xffffff800069ed5f : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0xffffff80003d73a2 : test edx, 0x450f0402 ; ret
0xffffff80004c13cf : test edx, 0x940f0fff ; ret 0x8b48
0xffffff800027c483 : test edx, ebx ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff80005f2131 : test edx, ecx ; add byte ptr [rax], al ; add bh, bh ; ret 0xc985
0xffffff80008261fe : test edx, edi ; add byte ptr [rax], al ; add bh, bh ; ret
0xffffff800026799e : test edx, edx ; cmove rax, rdx ; jmp 0xffffff80002679ad
0xffffff8000472db5 : test edx, edx ; cmovne eax, edx ; jmp 0xffffff8000472dd1
0xffffff80003a541a : test edx, edx ; je 0xffffff80003a5425 ; in al, dx ; pop rbp ; ret
0xffffff800075e495 : test edx, edx ; je 0xffffff800075e4a4 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800049ca52 : test edx, edx ; jne 0xffffff800049ca18 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004acaae : test edx, edx ; jne 0xffffff80004aca68 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004b3586 : test edx, edx ; jne 0xffffff80004b3565 ; pop rbp ; ret
0xffffff80004c5f58 : test edx, edx ; jne 0xffffff80004c5f45 ; pop rbp ; ret
0xffffff800059d81f : test edx, edx ; jne 0xffffff800059d839 ; xor eax, eax ; pop rbp ; ret
0xffffff80006e1867 : test edx, edx ; jne 0xffffff80006e1869 ; mov qword ptr [rdi + 0x30], rax ; pop rbp ; ret
0xffffff80002a69be : test edx, edx ; mov rdx, rax ; jle 0xffffff80002a69a8 ; pop rbp ; ret
0xffffff800031643c : test edx, edx ; setne dl ; jmp 0xffffff8000316456
0xffffff80008a888c : test esi, eax ; setne al ; pop rbp ; ret
0xffffff8000288336 : test esi, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff80004f1fdf : test esi, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xff48
0xffffff800057b9db : test esi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000524b0d : test esi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0xffffff800072548f : test esi, edi ; sete al ; pop rbp ; ret
0xffffff800034219f : test esi, esi ; cmove eax, ecx ; mov dword ptr [rdi + 0x18], eax ; pop rbp ; ret
0xffffff8000387d1e : test esi, esi ; cmove ecx, eax ; mov eax, ecx ; pop rbp ; ret
0xffffff80002b3cc8 : test esi, esi ; je 0xffffff80002b3cd9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c0bd8 : test esi, esi ; je 0xffffff80002c0be9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003403c5 : test esi, esi ; je 0xffffff80003403d0 ; pop rbp ; ret
0xffffff80004cb974 : test esi, esi ; je 0xffffff80004cb985 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d1d99 : test esi, esi ; je 0xffffff80004d1daa ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005163ad : test esi, esi ; je 0xffffff80005163db ; call 0xffffff8000392676
0xffffff800052905c : test esi, esi ; je 0xffffff800052906d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800052b2ec : test esi, esi ; je 0xffffff800052b2fd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005bff27 : test esi, esi ; je 0xffffff80005bff38 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005d5797 : test esi, esi ; je 0xffffff80005d57a8 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005e8d1f : test esi, esi ; je 0xffffff80005e8d30 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061118c : test esi, esi ; je 0xffffff800061119d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000643947 : test esi, esi ; je 0xffffff8000643958 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006807ec : test esi, esi ; je 0xffffff80006807fd ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800068c5bf : test esi, esi ; je 0xffffff800068c5d0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000691f67 : test esi, esi ; je 0xffffff8000691f78 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a9d5c : test esi, esi ; je 0xffffff80006a9d6d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006ab99f : test esi, esi ; je 0xffffff80006ab9b0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006b5b0b : test esi, esi ; je 0xffffff80006b5b1c ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077ffc3 : test esi, esi ; je 0xffffff800077ffd4 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b87c1 : test esi, esi ; je 0xffffff80007b87db ; mov rdi, r14 ; call 0xffffff80007b4a69
0xffffff80007b95b8 : test esi, esi ; je 0xffffff80007b95c7 ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff8000815565 : test esi, esi ; je 0xffffff800081556f ; call rax
0xffffff8000869bdf : test esi, esi ; je 0xffffff8000869bec ; mov al, cl ; pop rbp ; ret
0xffffff80008850b7 : test esi, esi ; je 0xffffff80008850c8 ; mov rax, qword ptr [rsi + 0x20] ; pop rbp ; ret
0xffffff8000451823 : test esi, esi ; jne 0xffffff8000451815 ; pop rbp ; ret
0xffffff80005dcf9a : test esi, esi ; jne 0xffffff80005dcf63 ; jmp 0xffffff80005dcfb6
0xffffff800067a01c : test esi, esi ; jne 0xffffff800067a017 ; jmp 0xffffff800067a064
0xffffff800062278d : test esi, esi ; js 0xffffff800062279c ; mov dword ptr [rdi + 0x64], eax ; pop rbp ; ret
0xffffff80004d6a7d : test esi, esi ; setne al ; movzx eax, al ; pop rbp ; ret
0xffffff800081a436 : test esi, esi ; setne al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000866145 : test esp, 0x8948fffc ; ret
0xffffff80004056b4 : test esp, ebp ; idiv edi ; call rcx
0xffffff8000269126 : test esp, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800053e57f : test esp, esp ; je 0xffffff800053e591 ; mov rdi, r13 ; call r12
0xffffff8000566675 : test esp, esp ; je 0xffffff80005666ef ; mov rdi, r12 ; call 0xffffff8000392939
0xffffff800063644f : test esp, esp ; je 0xffffff8000636461 ; mov rdi, r14 ; call r12
0xffffff80005897b3 : test qword ptr [r9], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800054fe54 : test qword ptr [rax], rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006d061b : test r10b, r10b ; jne 0xffffff80006d05f9 ; mov eax, r8d ; pop rbp ; ret
0xffffff800072bfd5 : test r10b, r10b ; jne 0xffffff800072bfa9 ; mov eax, r8d ; pop rbp ; ret
0xffffff800053e57e : test r12, r12 ; je 0xffffff800053e592 ; mov rdi, r13 ; call r12
0xffffff800063644e : test r12, r12 ; je 0xffffff8000636462 ; mov rdi, r14 ; call r12
0xffffff800060599b : test r13, r13 ; jne 0xffffff8000605996 ; jmp 0xffffff800060596a
0xffffff80005dcf99 : test r14, r14 ; jne 0xffffff80005dcf64 ; jmp 0xffffff80005dcfb7
0xffffff80005dcf98 : test r14, r14 ; jne 0xffffff80005dcf65 ; jmp 0xffffff80005dcfb8
0xffffff800067a01b : test r14, r14 ; jne 0xffffff800067a018 ; jmp 0xffffff800067a065
0xffffff8000879927 : test r14b, r14b ; jne 0xffffff800087993a ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002b3cc7 : test r14d, r14d ; je 0xffffff80002b3cda ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002c0bd7 : test r14d, r14d ; je 0xffffff80002c0bea ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cb973 : test r14d, r14d ; je 0xffffff80004cb986 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004d1d98 : test r14d, r14d ; je 0xffffff80004d1dab ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800052905b : test r14d, r14d ; je 0xffffff800052906e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800052b2eb : test r14d, r14d ; je 0xffffff800052b2fe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005bff26 : test r14d, r14d ; je 0xffffff80005bff39 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005d5796 : test r14d, r14d ; je 0xffffff80005d57a9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005e8d1e : test r14d, r14d ; je 0xffffff80005e8d31 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800061118b : test r14d, r14d ; je 0xffffff800061119e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000643946 : test r14d, r14d ; je 0xffffff8000643959 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006807eb : test r14d, r14d ; je 0xffffff80006807fe ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800068c5be : test r14d, r14d ; je 0xffffff800068c5d1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000691f66 : test r14d, r14d ; je 0xffffff8000691f79 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a9d5b : test r14d, r14d ; je 0xffffff80006a9d6e ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006ab99e : test r14d, r14d ; je 0xffffff80006ab9b1 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006b5b0a : test r14d, r14d ; je 0xffffff80006b5b1d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800077ffc2 : test r14d, r14d ; je 0xffffff800077ffd5 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003aa150 : test r15, r15 ; je 0xffffff80003aa164 ; mov rdi, r14 ; call r15
0xffffff8000389675 : test r15, r15 ; jne 0xffffff80003896b6 ; call qword ptr [rax]
0xffffff80004692f9 : test r15d, r15d ; jne 0xffffff80004692f6 ; jmp 0xffffff80004692c9
0xffffff8000511b8c : test r8, r8 ; jne 0xffffff8000511b57 ; pop rbp ; ret
0xffffff8000511b8c : test r8, r8 ; jne 0xffffff8000511b59 ; pop rbp ; ret
0xffffff80005b1077 : test r8, r8 ; jne 0xffffff80005b1026 ; pop rbp ; ret
0xffffff80005b209d : test r8, r8 ; jne 0xffffff80005b2046 ; pop rbp ; ret
0xffffff80005bf773 : test r8, r8 ; jne 0xffffff80005bf736 ; pop rbp ; ret
0xffffff80005ebe13 : test r8, r8 ; jne 0xffffff80005ebdd6 ; pop rbp ; ret
0xffffff8000637a23 : test r8, r8 ; jne 0xffffff80006379e6 ; pop rbp ; ret
0xffffff8000687efd : test r8, r8 ; jne 0xffffff8000687ec6 ; pop rbp ; ret
0xffffff80006a435d : test r8, r8 ; jne 0xffffff80006a4326 ; pop rbp ; ret
0xffffff8000366829 : test r8b, r8b ; jne 0xffffff80003667e6 ; pop rbp ; ret
0xffffff800080e0c3 : test r8d, eax ; sete al ; pop rbp ; ret
0xffffff80003669d9 : test r8d, r8d ; cmove eax, edx ; pop rbp ; ret
0xffffff8000751dcf : test r8d, r8d ; je 0xffffff8000751dde ; xor eax, eax ; pop rbp ; ret
0xffffff80008158ba : test r8d, r8d ; sete al ; pop rbp ; ret
0xffffff800041ee13 : test r9, r9 ; jne 0xffffff800041eda6 ; pop rbp ; ret
0xffffff8000796148 : test r9b, 2 ; jne 0xffffff8000796157 ; pop rbp ; ret
0xffffff800070f9fe : test rax, -0x76b7fffa ; ret
0xffffff80003a96d1 : test rax, rax ; cmove rdi, rax ; call rcx
0xffffff80005b249d : test rax, rax ; cmovne rax, rcx ; pop rbp ; ret
0xffffff800025a1ed : test rax, rax ; je 0xffffff800025a200 ; call rax
0xffffff800025ce62 : test rax, rax ; je 0xffffff800025ce75 ; call rax
0xffffff800025d06d : test rax, rax ; je 0xffffff800025d07d ; mov edi, ebx ; call rax
0xffffff80002632ba : test rax, rax ; je 0xffffff8000263315 ; call rax
0xffffff800026537a : test rax, rax ; je 0xffffff80002653f5 ; call rax
0xffffff8000265597 : test rax, rax ; je 0xffffff80002655a7 ; xor edi, edi ; call rax
0xffffff80002656c0 : test rax, rax ; je 0xffffff8000265718 ; call rax
0xffffff8000265a22 : test rax, rax ; je 0xffffff8000265a70 ; call rax
0xffffff8000265c52 : test rax, rax ; je 0xffffff8000265ca5 ; call rax
0xffffff8000266135 : test rax, rax ; je 0xffffff8000266188 ; call rax
0xffffff80002661c0 : test rax, rax ; je 0xffffff8000266218 ; call rax
0xffffff8000288454 : test rax, rax ; je 0xffffff8000288466 ; mov rdi, r15 ; call rax
0xffffff8000288c21 : test rax, rax ; je 0xffffff8000288c35 ; mov rdi, qword ptr [r15 + 0x20] ; call rax
0xffffff8000288df1 : test rax, rax ; je 0xffffff8000288e05 ; mov rdi, qword ptr [rbx + 0x20] ; call rax
0xffffff800028a6fb : test rax, rax ; je 0xffffff800028a715 ; call rax
0xffffff800029d44b : test rax, rax ; je 0xffffff800029d459 ; pop rbp ; jmp rax
0xffffff80002ae894 : test rax, rax ; je 0xffffff80002ae8a3 ; call rax
0xffffff80002b05b5 : test rax, rax ; je 0xffffff80002b05c1 ; call rax
0xffffff80002b2049 : test rax, rax ; je 0xffffff80002b2058 ; call rax
0xffffff80002b25b8 : test rax, rax ; je 0xffffff80002b2632 ; call rax
0xffffff80002b2694 : test rax, rax ; je 0xffffff80002b26a3 ; call rax
0xffffff80002dc27d : test rax, rax ; je 0xffffff80002dc290 ; call rax
0xffffff80002dc752 : test rax, rax ; je 0xffffff80002dc765 ; call rax
0xffffff80002dcf7a : test rax, rax ; je 0xffffff80002dcf8d ; call rax
0xffffff80002dd3fd : test rax, rax ; je 0xffffff80002dd410 ; call rax
0xffffff80002dfa42 : test rax, rax ; je 0xffffff80002dfa55 ; call rax
0xffffff80002dfead : test rax, rax ; je 0xffffff80002dfec0 ; call rax
0xffffff80002e08ba : test rax, rax ; je 0xffffff80002e08cd ; call rax
0xffffff80002e0cfd : test rax, rax ; je 0xffffff80002e0d10 ; call rax
0xffffff80002e303d : test rax, rax ; je 0xffffff80002e3050 ; call rax
0xffffff80002e572d : test rax, rax ; je 0xffffff80002e5740 ; call rax
0xffffff80002e70bd : test rax, rax ; je 0xffffff80002e70d0 ; call rax
0xffffff80002e7772 : test rax, rax ; je 0xffffff80002e7785 ; call rax
0xffffff80002e7afd : test rax, rax ; je 0xffffff80002e7b10 ; call rax
0xffffff80002e841d : test rax, rax ; je 0xffffff80002e8430 ; call rax
0xffffff80002e911d : test rax, rax ; je 0xffffff80002e9130 ; call rax
0xffffff80002ee4ad : test rax, rax ; je 0xffffff80002ee4c0 ; call rax
0xffffff80002eecad : test rax, rax ; je 0xffffff80002eecc0 ; call rax
0xffffff80002ef8ed : test rax, rax ; je 0xffffff80002ef900 ; call rax
0xffffff80002f28fd : test rax, rax ; je 0xffffff80002f2910 ; call rax
0xffffff80002f4a8d : test rax, rax ; je 0xffffff80002f4aa0 ; call rax
0xffffff80003037fc : test rax, rax ; je 0xffffff800030380a ; pop rbp ; jmp rax
0xffffff800035da9d : test rax, rax ; je 0xffffff800035dab0 ; call rax
0xffffff800036762d : test rax, rax ; je 0xffffff800036763f ; mov rdi, rbx ; call rax
0xffffff800036afed : test rax, rax ; je 0xffffff800036afff ; xor edi, 1 ; call rax
0xffffff8000375d4b : test rax, rax ; je 0xffffff8000375d67 ; mov rdi, qword ptr [r14 + 0x10] ; call rax
0xffffff8000375e3d : test rax, rax ; je 0xffffff8000375e59 ; mov rdi, qword ptr [rbx + 0x10] ; call rax
0xffffff8000376483 : test rax, rax ; je 0xffffff800037649f ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff800037653b : test rax, rax ; je 0xffffff8000376557 ; mov rdi, qword ptr [r15 + 0x10] ; call rax
0xffffff80003768b3 : test rax, rax ; je 0xffffff80003768cf ; mov rdi, qword ptr [r13 + 0x10] ; call rax
0xffffff80003903bd : test rax, rax ; je 0xffffff80003903cb ; call rax
0xffffff800039096a : test rax, rax ; je 0xffffff800039097c ; mov rdi, rbx ; call rax
0xffffff8000393eba : test rax, rax ; je 0xffffff8000393ec6 ; call rax
0xffffff80003a21d4 : test rax, rax ; je 0xffffff80003a21e2 ; pop rbp ; jmp rax
0xffffff80003a25e7 : test rax, rax ; je 0xffffff80003a260c ; call rax
0xffffff80003a25e6 : test rax, rax ; je 0xffffff80003a260d ; call rax
0xffffff80003a25e5 : test rax, rax ; je 0xffffff80003a260e ; call rax
0xffffff80003a2650 : test rax, rax ; je 0xffffff80003a265e ; pop rbp ; jmp rax
0xffffff80003a2843 : test rax, rax ; je 0xffffff80003a2851 ; pop rbp ; jmp rax
0xffffff80003a28c4 : test rax, rax ; je 0xffffff80003a28d2 ; pop rbp ; jmp rax
0xffffff80003a28c3 : test rax, rax ; je 0xffffff80003a28d3 ; pop rbp ; jmp rax
0xffffff80003a28c2 : test rax, rax ; je 0xffffff80003a28d4 ; pop rbp ; jmp rax
0xffffff80003a28f7 : test rax, rax ; je 0xffffff80003a2905 ; pop rbp ; jmp rax
0xffffff80003a2927 : test rax, rax ; je 0xffffff80003a2935 ; pop rbp ; jmp rax
0xffffff80003a29c4 : test rax, rax ; je 0xffffff80003a29d2 ; pop rbp ; jmp rax
0xffffff80003a29f0 : test rax, rax ; je 0xffffff80003a29fe ; pop rbp ; jmp rax
0xffffff80003a2a14 : test rax, rax ; je 0xffffff80003a2a22 ; pop rbp ; jmp rax
0xffffff80003a2a77 : test rax, rax ; je 0xffffff80003a2a85 ; pop rbp ; jmp rax
0xffffff80003a2d50 : test rax, rax ; je 0xffffff80003a2d5e ; pop rbp ; jmp rax
0xffffff80003a2f5c : test rax, rax ; je 0xffffff80003a2f76 ; call rax
0xffffff80003a304f : test rax, rax ; je 0xffffff80003a3062 ; call rax
0xffffff80003a3dda : test rax, rax ; je 0xffffff80003a3deb ; mov dword ptr [rax + 0x48], edi ; pop rbp ; ret
0xffffff80003a41ba : test rax, rax ; je 0xffffff80003a41cb ; mov dword ptr [rax + 0x2c], edi ; pop rbp ; ret
0xffffff80003a8710 : test rax, rax ; je 0xffffff80003a8774 ; mov rdi, rsi ; call rax
0xffffff80003ace3a : test rax, rax ; je 0xffffff80003ace46 ; call rax
0xffffff80003acf8b : test rax, rax ; je 0xffffff80003acf97 ; call rax
0xffffff80003ad1bb : test rax, rax ; je 0xffffff80003ad1c7 ; call rax
0xffffff80003ad8cb : test rax, rax ; je 0xffffff80003ad909 ; xor edi, edi ; call rax
0xffffff80003ba02f : test rax, rax ; je 0xffffff80003ba05d ; pop rbp ; ret
0xffffff80003ba78a : test rax, rax ; je 0xffffff80003ba7b8 ; pop rbp ; ret
0xffffff800049d09b : test rax, rax ; je 0xffffff800049d0a9 ; pop rbp ; jmp rax
0xffffff80004cbdc5 : test rax, rax ; je 0xffffff80004cbdd9 ; call rax
0xffffff80004d455d : test rax, rax ; je 0xffffff80004d456d ; xor edi, edi ; call rax
0xffffff80004f8945 : test rax, rax ; je 0xffffff80004f8953 ; pop rbp ; jmp rax
0xffffff80004f8975 : test rax, rax ; je 0xffffff80004f8983 ; pop rbp ; jmp rax
0xffffff80004f8b05 : test rax, rax ; je 0xffffff80004f8b13 ; pop rbp ; jmp rax
0xffffff80005028f0 : test rax, rax ; je 0xffffff8000502904 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff80005061e4 : test rax, rax ; je 0xffffff80005061f8 ; mov rdi, qword ptr [r14 + 0x60] ; call rax
0xffffff800050733c : test rax, rax ; je 0xffffff800050734e ; mov rdi, r14 ; call rax
0xffffff800050dd06 : test rax, rax ; je 0xffffff800050dd25 ; mov edi, dword ptr [rbp - 0x54] ; call rax
0xffffff800050f00d : test rax, rax ; je 0xffffff800050f037 ; mov edi, r14d ; call rax
0xffffff800053c684 : test rax, rax ; je 0xffffff800053c690 ; call rax
0xffffff800054f9e2 : test rax, rax ; je 0xffffff800054f9f7 ; xor esi, esi ; call rax
0xffffff80005526d8 : test rax, rax ; je 0xffffff80005526eb ; call rax
0xffffff80005538f7 : test rax, rax ; je 0xffffff8000553909 ; mov rdi, rbx ; call rax
0xffffff80005539a9 : test rax, rax ; je 0xffffff80005539b7 ; call rax
0xffffff8000558b7a : test rax, rax ; je 0xffffff8000558b8c ; mov rdi, r12 ; call rax
0xffffff80005664e0 : test rax, rax ; je 0xffffff80005664f2 ; mov rdi, rbx ; call rax
0xffffff800056a3e2 : test rax, rax ; je 0xffffff800056a449 ; mov rsi, rbx ; call rax
0xffffff800058909a : test rax, rax ; je 0xffffff80005890b2 ; sub eax, ecx ; jne 0xffffff80005890b4 ; call rcx
0xffffff800058925d : test rax, rax ; je 0xffffff8000589275 ; sub eax, ecx ; jne 0xffffff8000589277 ; call rcx
0xffffff80005e20fa : test rax, rax ; je 0xffffff80005e210c ; mov rdi, r14 ; call rax
0xffffff80005e2ed2 : test rax, rax ; je 0xffffff80005e2ee4 ; mov rdi, r13 ; call rax
0xffffff80005e330e : test rax, rax ; je 0xffffff80005e3320 ; mov rdi, r13 ; call rax
0xffffff80005e3654 : test rax, rax ; je 0xffffff80005e3660 ; call rax
0xffffff80005f02ae : test rax, rax ; je 0xffffff80005f02c0 ; mov rdi, rbx ; call rax
0xffffff80005f02ad : test rax, rax ; je 0xffffff80005f02c1 ; mov rdi, rbx ; call rax
0xffffff80005f0a97 : test rax, rax ; je 0xffffff80005f0abb ; mov rdi, rbx ; call rax
0xffffff800061a473 : test rax, rax ; je 0xffffff800061a485 ; mov rdi, rbx ; call rax
0xffffff800061a472 : test rax, rax ; je 0xffffff800061a486 ; mov rdi, rbx ; call rax
0xffffff800061b3b4 : test rax, rax ; je 0xffffff800061b3c6 ; mov rdi, r14 ; call rax
0xffffff800061b65a : test rax, rax ; je 0xffffff800061b66c ; mov rdi, rbx ; call rax
0xffffff800061b6e8 : test rax, rax ; je 0xffffff800061b6fa ; mov rdi, rbx ; call rax
0xffffff800061b741 : test rax, rax ; je 0xffffff800061b753 ; mov rdi, rbx ; call rax
0xffffff800061b810 : test rax, rax ; je 0xffffff800061b822 ; mov rdi, rbx ; call rax
0xffffff800061b80f : test rax, rax ; je 0xffffff800061b823 ; mov rdi, rbx ; call rax
0xffffff800061ce51 : test rax, rax ; je 0xffffff800061ce63 ; mov rdi, r14 ; call rax
0xffffff800061ce50 : test rax, rax ; je 0xffffff800061ce64 ; mov rdi, r14 ; call rax
0xffffff800061d034 : test rax, rax ; je 0xffffff800061d046 ; mov rdi, r15 ; call rax
0xffffff8000624241 : test rax, rax ; je 0xffffff8000624253 ; mov rdi, rbx ; call rax
0xffffff8000624aa9 : test rax, rax ; je 0xffffff8000624abb ; mov rdi, r13 ; call rax
0xffffff8000625544 : test rax, rax ; je 0xffffff8000625556 ; mov rdi, r14 ; call rax
0xffffff8000627801 : test rax, rax ; je 0xffffff8000627813 ; mov rdi, rbx ; call rax
0xffffff8000628254 : test rax, rax ; je 0xffffff8000628283 ; mov rdi, r13 ; call rax
0xffffff8000628253 : test rax, rax ; je 0xffffff8000628284 ; mov rdi, r13 ; call rax
0xffffff8000628794 : test rax, rax ; je 0xffffff80006287a6 ; mov rdi, r13 ; call rax
0xffffff8000628870 : test rax, rax ; je 0xffffff800062889f ; mov rdi, r13 ; call rax
0xffffff800063fd44 : test rax, rax ; je 0xffffff800063fd59 ; mov rdi, rbx ; call rax
0xffffff800069a3b9 : test rax, rax ; je 0xffffff800069a3cb ; mov rdi, rbx ; call rax
0xffffff800069a5a5 : test rax, rax ; je 0xffffff800069a5b7 ; mov rdi, rbx ; call rax
0xffffff800069e37d : test rax, rax ; je 0xffffff800069e389 ; call rax
0xffffff80006a123b : test rax, rax ; je 0xffffff80006a124d ; mov rdi, r12 ; call rax
0xffffff80006be8a5 : test rax, rax ; je 0xffffff80006be8c3 ; mov rdi, rbx ; call rax
0xffffff80006be949 : test rax, rax ; je 0xffffff80006be9b0 ; mov rdi, rbx ; call rax
0xffffff80007447a3 : test rax, rax ; je 0xffffff80007447af ; call rax
0xffffff800076d313 : test rax, rax ; je 0xffffff800076d325 ; mov rdi, r15 ; call rax
0xffffff800076d9dd : test rax, rax ; je 0xffffff800076d9ef ; mov rdi, r14 ; call rax
0xffffff80007713f5 : test rax, rax ; je 0xffffff8000771407 ; mov rdi, rbx ; call rax
0xffffff800077141b : test rax, rax ; je 0xffffff800077142d ; mov rdi, rbx ; call rax
0xffffff80007733f9 : test rax, rax ; je 0xffffff800077340b ; mov rdi, r13 ; call rax
0xffffff80007792a2 : test rax, rax ; je 0xffffff80007792b4 ; mov rdi, r12 ; call rax
0xffffff800078749c : test rax, rax ; je 0xffffff80007874a8 ; call rax
0xffffff80007a5983 : test rax, rax ; je 0xffffff80007a5995 ; mov rdi, rbx ; call rax
0xffffff80007a6563 : test rax, rax ; je 0xffffff80007a6575 ; mov rdi, r12 ; call rax
0xffffff80007a6669 : test rax, rax ; je 0xffffff80007a667b ; mov rdi, r15 ; call rax
0xffffff80007a6a2a : test rax, rax ; je 0xffffff80007a6a3c ; mov rdi, rbx ; call rax
0xffffff80007a86f1 : test rax, rax ; je 0xffffff80007a874d ; mov rdi, r15 ; call rax
0xffffff80007a8db6 : test rax, rax ; je 0xffffff80007a8dc8 ; mov rdi, rbx ; call rax
0xffffff80007a8fa5 : test rax, rax ; je 0xffffff80007a8fb7 ; mov rdi, r12 ; call rax
0xffffff80007a93b7 : test rax, rax ; je 0xffffff80007a93c9 ; mov rdi, r15 ; call rax
0xffffff80007a9403 : test rax, rax ; je 0xffffff80007a9415 ; mov rdi, r15 ; call rax
0xffffff80007a96d1 : test rax, rax ; je 0xffffff80007a96e3 ; mov rdi, rbx ; call rax
0xffffff80007b408c : test rax, rax ; je 0xffffff80007b409c ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b410b : test rax, rax ; je 0xffffff80007b411d ; mov rdi, rbx ; call rax
0xffffff80007b410a : test rax, rax ; je 0xffffff80007b411e ; mov rdi, rbx ; call rax
0xffffff80007b438c : test rax, rax ; je 0xffffff80007b439c ; pop rbx ; pop rbp ; jmp rax
0xffffff80007b447c : test rax, rax ; je 0xffffff80007b4475 ; call rax
0xffffff80007c5276 : test rax, rax ; je 0xffffff80007c5288 ; mov rdi, r15 ; call rax
0xffffff80007f00a2 : test rax, rax ; je 0xffffff80007f00b0 ; pop rbp ; jmp rax
0xffffff80007fcb8b : test rax, rax ; je 0xffffff80007fcb99 ; pop rbp ; jmp rax
0xffffff80007ffc4e : test rax, rax ; je 0xffffff80007ffc60 ; mov rdi, rbx ; call rax
0xffffff8000803832 : test rax, rax ; je 0xffffff800080384c ; mov rdi, r15 ; call rax
0xffffff8000803901 : test rax, rax ; je 0xffffff8000803913 ; mov rdi, r15 ; call rax
0xffffff800082015f : test rax, rax ; je 0xffffff800082016b ; call rax
0xffffff8000821a88 : test rax, rax ; je 0xffffff8000821aa0 ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0xffffff800082d744 : test rax, rax ; je 0xffffff800082d755 ; call rax
0xffffff800082dc28 : test rax, rax ; je 0xffffff800082dc48 ; mov r15, r9 ; call rax
0xffffff8000859b1d : test rax, rax ; je 0xffffff8000859b29 ; call rax
0xffffff80008640d4 : test rax, rax ; je 0xffffff800086415b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008b69c9 : test rax, rax ; je 0xffffff80008b69d6 ; pop rbp ; ret
0xffffff80008ed8f1 : test rax, rax ; je 0xffffff80008ed905 ; lea rdi, [rbp - 0x10] ; call rax
0xffffff80008ef3fb : test rax, rax ; je 0xffffff80008ef407 ; call rax
0xffffff80008ef4bd : test rax, rax ; je 0xffffff80008ef4c9 ; call rax
0xffffff80008efedf : test rax, rax ; je 0xffffff80008efef1 ; mov rdi, r12 ; call rax
0xffffff80008f009e : test rax, rax ; je 0xffffff80008f00b0 ; mov rdi, r15 ; call rax
0xffffff800044ebda : test rax, rax ; jne 0xffffff800044ebd6 ; pop rbp ; ret
0xffffff800053e628 : test rax, rax ; jne 0xffffff800053e628 ; xor eax, eax ; pop rbp ; ret
0xffffff800056cf18 : test rax, rax ; jne 0xffffff800056cf18 ; xor eax, eax ; pop rbp ; ret
0xffffff80005e5541 : test rax, rax ; jne 0xffffff80005e54d9 ; jmp 0xffffff80005e5558
0xffffff80005f57e8 : test rax, rax ; jne 0xffffff80005f57e6 ; pop rbp ; ret
0xffffff8000688191 : test rax, rax ; jne 0xffffff8000688129 ; jmp 0xffffff80006881a8
0xffffff8000795cf8 : test rax, rax ; jne 0xffffff8000795cf6 ; pop rbp ; ret
0xffffff80007b6f48 : test rax, rax ; jne 0xffffff80007b6f46 ; pop rbp ; ret
0xffffff80007d30a8 : test rax, rax ; jne 0xffffff80007d30a8 ; xor eax, eax ; pop rbp ; ret
0xffffff8000811bd2 : test rax, rax ; jne 0xffffff8000811bc6 ; pop rbp ; ret
0xffffff8000811c12 : test rax, rax ; jne 0xffffff8000811c06 ; pop rbp ; ret
0xffffff8000813362 : test rax, rax ; jne 0xffffff8000813356 ; pop rbp ; ret
0xffffff80008133a2 : test rax, rax ; jne 0xffffff8000813396 ; pop rbp ; ret
0xffffff8000814442 : test rax, rax ; jne 0xffffff8000814436 ; pop rbp ; ret
0xffffff8000814482 : test rax, rax ; jne 0xffffff8000814476 ; pop rbp ; ret
0xffffff8000814e42 : test rax, rax ; jne 0xffffff8000814e36 ; pop rbp ; ret
0xffffff8000814e82 : test rax, rax ; jne 0xffffff8000814e76 ; pop rbp ; ret
0xffffff80008163a2 : test rax, rax ; jne 0xffffff8000816396 ; pop rbp ; ret
0xffffff80008163e2 : test rax, rax ; jne 0xffffff80008163d6 ; pop rbp ; ret
0xffffff8000818ed2 : test rax, rax ; jne 0xffffff8000818ec6 ; pop rbp ; ret
0xffffff8000818f12 : test rax, rax ; jne 0xffffff8000818f06 ; pop rbp ; ret
0xffffff800082b6c2 : test rax, rax ; jne 0xffffff800082b6b6 ; pop rbp ; ret
0xffffff800082b702 : test rax, rax ; jne 0xffffff800082b6f6 ; pop rbp ; ret
0xffffff800082c2e2 : test rax, rax ; jne 0xffffff800082c2d6 ; pop rbp ; ret
0xffffff800082c322 : test rax, rax ; jne 0xffffff800082c316 ; pop rbp ; ret
0xffffff800082e1c2 : test rax, rax ; jne 0xffffff800082e1b6 ; pop rbp ; ret
0xffffff800082e202 : test rax, rax ; jne 0xffffff800082e1f6 ; pop rbp ; ret
0xffffff800082ed02 : test rax, rax ; jne 0xffffff800082ecf6 ; pop rbp ; ret
0xffffff800082ed42 : test rax, rax ; jne 0xffffff800082ed36 ; pop rbp ; ret
0xffffff800082f812 : test rax, rax ; jne 0xffffff800082f806 ; pop rbp ; ret
0xffffff800082f852 : test rax, rax ; jne 0xffffff800082f846 ; pop rbp ; ret
0xffffff8000830b52 : test rax, rax ; jne 0xffffff8000830b46 ; pop rbp ; ret
0xffffff8000830b92 : test rax, rax ; jne 0xffffff8000830b86 ; pop rbp ; ret
0xffffff8000832ad2 : test rax, rax ; jne 0xffffff8000832ac6 ; pop rbp ; ret
0xffffff8000832b12 : test rax, rax ; jne 0xffffff8000832b06 ; pop rbp ; ret
0xffffff8000858f62 : test rax, rax ; jne 0xffffff8000858f56 ; pop rbp ; ret
0xffffff8000858fa2 : test rax, rax ; jne 0xffffff8000858f96 ; pop rbp ; ret
0xffffff800085ce92 : test rax, rax ; jne 0xffffff800085ce86 ; pop rbp ; ret
0xffffff800085ced2 : test rax, rax ; jne 0xffffff800085cec6 ; pop rbp ; ret
0xffffff800085d0f2 : test rax, rax ; jne 0xffffff800085d0e6 ; pop rbp ; ret
0xffffff800085d132 : test rax, rax ; jne 0xffffff800085d126 ; pop rbp ; ret
0xffffff8000860ff2 : test rax, rax ; jne 0xffffff8000860fe6 ; pop rbp ; ret
0xffffff8000861032 : test rax, rax ; jne 0xffffff8000861026 ; pop rbp ; ret
0xffffff8000862882 : test rax, rax ; jne 0xffffff8000862876 ; pop rbp ; ret
0xffffff80008628c2 : test rax, rax ; jne 0xffffff80008628b6 ; pop rbp ; ret
0xffffff8000862b12 : test rax, rax ; jne 0xffffff8000862b06 ; pop rbp ; ret
0xffffff8000862b52 : test rax, rax ; jne 0xffffff8000862b46 ; pop rbp ; ret
0xffffff8000862d72 : test rax, rax ; jne 0xffffff8000862d66 ; pop rbp ; ret
0xffffff8000862db2 : test rax, rax ; jne 0xffffff8000862da6 ; pop rbp ; ret
0xffffff8000862fd2 : test rax, rax ; jne 0xffffff8000862fc6 ; pop rbp ; ret
0xffffff8000863012 : test rax, rax ; jne 0xffffff8000863006 ; pop rbp ; ret
0xffffff8000863232 : test rax, rax ; jne 0xffffff8000863226 ; pop rbp ; ret
0xffffff8000863272 : test rax, rax ; jne 0xffffff8000863266 ; pop rbp ; ret
0xffffff8000863492 : test rax, rax ; jne 0xffffff8000863486 ; pop rbp ; ret
0xffffff80008634d2 : test rax, rax ; jne 0xffffff80008634c6 ; pop rbp ; ret
0xffffff80008636f2 : test rax, rax ; jne 0xffffff80008636e6 ; pop rbp ; ret
0xffffff8000863732 : test rax, rax ; jne 0xffffff8000863726 ; pop rbp ; ret
0xffffff8000873eb2 : test rax, rax ; jne 0xffffff8000873ea6 ; pop rbp ; ret
0xffffff8000881402 : test rax, rax ; jne 0xffffff80008813f6 ; pop rbp ; ret
0xffffff8000881442 : test rax, rax ; jne 0xffffff8000881436 ; pop rbp ; ret
0xffffff8000881722 : test rax, rax ; jne 0xffffff8000881716 ; pop rbp ; ret
0xffffff8000881762 : test rax, rax ; jne 0xffffff8000881756 ; pop rbp ; ret
0xffffff8000881b32 : test rax, rax ; jne 0xffffff8000881b26 ; pop rbp ; ret
0xffffff8000881b72 : test rax, rax ; jne 0xffffff8000881b66 ; pop rbp ; ret
0xffffff8000882142 : test rax, rax ; jne 0xffffff8000882136 ; pop rbp ; ret
0xffffff8000882182 : test rax, rax ; jne 0xffffff8000882176 ; pop rbp ; ret
0xffffff80008824c2 : test rax, rax ; jne 0xffffff80008824b6 ; pop rbp ; ret
0xffffff80008847c2 : test rax, rax ; jne 0xffffff80008847b6 ; pop rbp ; ret
0xffffff8000884802 : test rax, rax ; jne 0xffffff80008847f6 ; pop rbp ; ret
0xffffff8000884f02 : test rax, rax ; jne 0xffffff8000884ef6 ; pop rbp ; ret
0xffffff8000884f42 : test rax, rax ; jne 0xffffff8000884f36 ; pop rbp ; ret
0xffffff8000885832 : test rax, rax ; jne 0xffffff8000885826 ; pop rbp ; ret
0xffffff8000885872 : test rax, rax ; jne 0xffffff8000885866 ; pop rbp ; ret
0xffffff80008860c2 : test rax, rax ; jne 0xffffff80008860b6 ; pop rbp ; ret
0xffffff8000886102 : test rax, rax ; jne 0xffffff80008860f6 ; pop rbp ; ret
0xffffff8000887f32 : test rax, rax ; jne 0xffffff8000887f26 ; pop rbp ; ret
0xffffff8000887f72 : test rax, rax ; jne 0xffffff8000887f66 ; pop rbp ; ret
0xffffff8000889d92 : test rax, rax ; jne 0xffffff8000889d86 ; pop rbp ; ret
0xffffff8000889dd2 : test rax, rax ; jne 0xffffff8000889dc6 ; pop rbp ; ret
0xffffff800088a9c2 : test rax, rax ; jne 0xffffff800088a9b6 ; pop rbp ; ret
0xffffff800088aa02 : test rax, rax ; jne 0xffffff800088a9f6 ; pop rbp ; ret
0xffffff800088cc42 : test rax, rax ; jne 0xffffff800088cc36 ; pop rbp ; ret
0xffffff800088cc82 : test rax, rax ; jne 0xffffff800088cc76 ; pop rbp ; ret
0xffffff800088ef12 : test rax, rax ; jne 0xffffff800088ef06 ; pop rbp ; ret
0xffffff800088ef52 : test rax, rax ; jne 0xffffff800088ef46 ; pop rbp ; ret
0xffffff8000890192 : test rax, rax ; jne 0xffffff8000890186 ; pop rbp ; ret
0xffffff80008901d2 : test rax, rax ; jne 0xffffff80008901c6 ; pop rbp ; ret
0xffffff80008912f2 : test rax, rax ; jne 0xffffff80008912e6 ; pop rbp ; ret
0xffffff8000891332 : test rax, rax ; jne 0xffffff8000891326 ; pop rbp ; ret
0xffffff80008919b2 : test rax, rax ; jne 0xffffff80008919a6 ; pop rbp ; ret
0xffffff80008919f2 : test rax, rax ; jne 0xffffff80008919e6 ; pop rbp ; ret
0xffffff8000892552 : test rax, rax ; jne 0xffffff8000892546 ; pop rbp ; ret
0xffffff8000892592 : test rax, rax ; jne 0xffffff8000892586 ; pop rbp ; ret
0xffffff8000893142 : test rax, rax ; jne 0xffffff8000893136 ; pop rbp ; ret
0xffffff8000893182 : test rax, rax ; jne 0xffffff8000893176 ; pop rbp ; ret
0xffffff8000893f72 : test rax, rax ; jne 0xffffff8000893f66 ; pop rbp ; ret
0xffffff8000893fb2 : test rax, rax ; jne 0xffffff8000893fa6 ; pop rbp ; ret
0xffffff80008951f2 : test rax, rax ; jne 0xffffff80008951e6 ; pop rbp ; ret
0xffffff8000895232 : test rax, rax ; jne 0xffffff8000895226 ; pop rbp ; ret
0xffffff8000896812 : test rax, rax ; jne 0xffffff8000896806 ; pop rbp ; ret
0xffffff8000896852 : test rax, rax ; jne 0xffffff8000896846 ; pop rbp ; ret
0xffffff80008990e2 : test rax, rax ; jne 0xffffff80008990d6 ; pop rbp ; ret
0xffffff8000899122 : test rax, rax ; jne 0xffffff8000899116 ; pop rbp ; ret
0xffffff800089b122 : test rax, rax ; jne 0xffffff800089b116 ; pop rbp ; ret
0xffffff800089b162 : test rax, rax ; jne 0xffffff800089b156 ; pop rbp ; ret
0xffffff800089b742 : test rax, rax ; jne 0xffffff800089b736 ; pop rbp ; ret
0xffffff800089b782 : test rax, rax ; jne 0xffffff800089b776 ; pop rbp ; ret
0xffffff800089ba72 : test rax, rax ; jne 0xffffff800089ba66 ; pop rbp ; ret
0xffffff800089bab2 : test rax, rax ; jne 0xffffff800089baa6 ; pop rbp ; ret
0xffffff800089bda2 : test rax, rax ; jne 0xffffff800089bd96 ; pop rbp ; ret
0xffffff800089bde2 : test rax, rax ; jne 0xffffff800089bdd6 ; pop rbp ; ret
0xffffff800089d252 : test rax, rax ; jne 0xffffff800089d246 ; pop rbp ; ret
0xffffff800089d292 : test rax, rax ; jne 0xffffff800089d286 ; pop rbp ; ret
0xffffff80008a2ae2 : test rax, rax ; jne 0xffffff80008a2ad6 ; pop rbp ; ret
0xffffff80008a2b22 : test rax, rax ; jne 0xffffff80008a2b16 ; pop rbp ; ret
0xffffff80008a53b2 : test rax, rax ; jne 0xffffff80008a53a6 ; pop rbp ; ret
0xffffff80008a53f2 : test rax, rax ; jne 0xffffff80008a53e6 ; pop rbp ; ret
0xffffff80008a6342 : test rax, rax ; jne 0xffffff80008a6336 ; pop rbp ; ret
0xffffff80008a6382 : test rax, rax ; jne 0xffffff80008a6376 ; pop rbp ; ret
0xffffff80008a7242 : test rax, rax ; jne 0xffffff80008a7236 ; pop rbp ; ret
0xffffff80008a7282 : test rax, rax ; jne 0xffffff80008a7276 ; pop rbp ; ret
0xffffff80008a7c52 : test rax, rax ; jne 0xffffff80008a7c46 ; pop rbp ; ret
0xffffff80008a7c92 : test rax, rax ; jne 0xffffff80008a7c86 ; pop rbp ; ret
0xffffff80008a81f2 : test rax, rax ; jne 0xffffff80008a81e6 ; pop rbp ; ret
0xffffff80008aa8a9 : test rax, rax ; jne 0xffffff80008aa8b8 ; xor eax, eax ; pop rbp ; ret
0xffffff80008aabe2 : test rax, rax ; jne 0xffffff80008aabd6 ; pop rbp ; ret
0xffffff80008aac22 : test rax, rax ; jne 0xffffff80008aac16 ; pop rbp ; ret
0xffffff80008ab222 : test rax, rax ; jne 0xffffff80008ab216 ; pop rbp ; ret
0xffffff80008ab582 : test rax, rax ; jne 0xffffff80008ab576 ; pop rbp ; ret
0xffffff80008ab5c2 : test rax, rax ; jne 0xffffff80008ab5b6 ; pop rbp ; ret
0xffffff80008ae122 : test rax, rax ; jne 0xffffff80008ae116 ; pop rbp ; ret
0xffffff80008ae162 : test rax, rax ; jne 0xffffff80008ae156 ; pop rbp ; ret
0xffffff80008af432 : test rax, rax ; jne 0xffffff80008af426 ; pop rbp ; ret
0xffffff80008af472 : test rax, rax ; jne 0xffffff80008af466 ; pop rbp ; ret
0xffffff80008b3912 : test rax, rax ; jne 0xffffff80008b3906 ; pop rbp ; ret
0xffffff80008b3e82 : test rax, rax ; jne 0xffffff80008b3e76 ; pop rbp ; ret
0xffffff80008b51c2 : test rax, rax ; jne 0xffffff80008b51b6 ; pop rbp ; ret
0xffffff80008b5202 : test rax, rax ; jne 0xffffff80008b51f6 ; pop rbp ; ret
0xffffff80008b5db2 : test rax, rax ; jne 0xffffff80008b5da6 ; pop rbp ; ret
0xffffff80008b5df2 : test rax, rax ; jne 0xffffff80008b5de6 ; pop rbp ; ret
0xffffff80008b6402 : test rax, rax ; jne 0xffffff80008b63f6 ; pop rbp ; ret
0xffffff80008b6442 : test rax, rax ; jne 0xffffff80008b6436 ; pop rbp ; ret
0xffffff80008b711a : test rax, rax ; jne 0xffffff80008b7117 ; jmp 0xffffff80008b70ea
0xffffff80008b7f8e : test rax, rax ; jne 0xffffff80008b7f88 ; jmp 0xffffff80008b7fbc
0xffffff80008b810e : test rax, rax ; jne 0xffffff80008b8108 ; jmp 0xffffff80008b8156
0xffffff80008b8239 : test rax, rax ; jne 0xffffff80008b8239 ; jmp 0xffffff80008b828d
0xffffff80008b835e : test rax, rax ; jne 0xffffff80008b8358 ; jmp 0xffffff80008b83a6
0xffffff80008b841e : test rax, rax ; jne 0xffffff80008b8418 ; jmp 0xffffff80008b8474
0xffffff80008b9659 : test rax, rax ; jne 0xffffff80008b9659 ; jmp 0xffffff80008b96b6
0xffffff80008bab89 : test rax, rax ; jne 0xffffff80008bab88 ; jmp 0xffffff80008baba6
0xffffff80008bdfb2 : test rax, rax ; jne 0xffffff80008bdfa9 ; jmp 0xffffff80008bdf60
0xffffff80008bf54e : test rax, rax ; jne 0xffffff80008bf548 ; jmp 0xffffff80008bf57c
0xffffff80008bf5fe : test rax, rax ; jne 0xffffff80008bf5f8 ; jmp 0xffffff80008bf654
0xffffff80008c0bd2 : test rax, rax ; jne 0xffffff80008c0bc6 ; pop rbp ; ret
0xffffff80008c0c12 : test rax, rax ; jne 0xffffff80008c0c06 ; pop rbp ; ret
0xffffff80008c2b22 : test rax, rax ; jne 0xffffff80008c2b16 ; pop rbp ; ret
0xffffff80008c2b62 : test rax, rax ; jne 0xffffff80008c2b56 ; pop rbp ; ret
0xffffff80008c37b2 : test rax, rax ; jne 0xffffff80008c37a6 ; pop rbp ; ret
0xffffff80008c37f2 : test rax, rax ; jne 0xffffff80008c37e6 ; pop rbp ; ret
0xffffff80008c4282 : test rax, rax ; jne 0xffffff80008c4276 ; pop rbp ; ret
0xffffff80008c42c2 : test rax, rax ; jne 0xffffff80008c42b6 ; pop rbp ; ret
0xffffff80008cc462 : test rax, rax ; jne 0xffffff80008cc456 ; pop rbp ; ret
0xffffff80008cc4a2 : test rax, rax ; jne 0xffffff80008cc496 ; pop rbp ; ret
0xffffff80008ce262 : test rax, rax ; jne 0xffffff80008ce256 ; pop rbp ; ret
0xffffff80008ce2a2 : test rax, rax ; jne 0xffffff80008ce296 ; pop rbp ; ret
0xffffff80008cec02 : test rax, rax ; jne 0xffffff80008cebf6 ; pop rbp ; ret
0xffffff80008cec42 : test rax, rax ; jne 0xffffff80008cec36 ; pop rbp ; ret
0xffffff80008d0832 : test rax, rax ; jne 0xffffff80008d0826 ; pop rbp ; ret
0xffffff80008d0872 : test rax, rax ; jne 0xffffff80008d0866 ; pop rbp ; ret
0xffffff80008d18f2 : test rax, rax ; jne 0xffffff80008d18e6 ; pop rbp ; ret
0xffffff80008d1932 : test rax, rax ; jne 0xffffff80008d1926 ; pop rbp ; ret
0xffffff80008d4b92 : test rax, rax ; jne 0xffffff80008d4b86 ; pop rbp ; ret
0xffffff80008d4bd2 : test rax, rax ; jne 0xffffff80008d4bc6 ; pop rbp ; ret
0xffffff80008d5b92 : test rax, rax ; jne 0xffffff80008d5b86 ; pop rbp ; ret
0xffffff80008d5bd2 : test rax, rax ; jne 0xffffff80008d5bc6 ; pop rbp ; ret
0xffffff80008d6b82 : test rax, rax ; jne 0xffffff80008d6b76 ; pop rbp ; ret
0xffffff80008d6bc2 : test rax, rax ; jne 0xffffff80008d6bb6 ; pop rbp ; ret
0xffffff80008d7522 : test rax, rax ; jne 0xffffff80008d7516 ; pop rbp ; ret
0xffffff80008d7562 : test rax, rax ; jne 0xffffff80008d7556 ; pop rbp ; ret
0xffffff80008d7792 : test rax, rax ; jne 0xffffff80008d7786 ; pop rbp ; ret
0xffffff80008d77d2 : test rax, rax ; jne 0xffffff80008d77c6 ; pop rbp ; ret
0xffffff80008d7a02 : test rax, rax ; jne 0xffffff80008d79f6 ; pop rbp ; ret
0xffffff80008d7a42 : test rax, rax ; jne 0xffffff80008d7a36 ; pop rbp ; ret
0xffffff80008d9872 : test rax, rax ; jne 0xffffff80008d9866 ; pop rbp ; ret
0xffffff80008e2692 : test rax, rax ; jne 0xffffff80008e2686 ; pop rbp ; ret
0xffffff80008e26d2 : test rax, rax ; jne 0xffffff80008e26c6 ; pop rbp ; ret
0xffffff80008e5602 : test rax, rax ; jne 0xffffff80008e55f6 ; pop rbp ; ret
0xffffff80008e5642 : test rax, rax ; jne 0xffffff80008e5636 ; pop rbp ; ret
0xffffff80008e6b32 : test rax, rax ; jne 0xffffff80008e6b26 ; pop rbp ; ret
0xffffff80008e6b72 : test rax, rax ; jne 0xffffff80008e6b66 ; pop rbp ; ret
0xffffff80008e6df2 : test rax, rax ; jne 0xffffff80008e6de6 ; pop rbp ; ret
0xffffff80008e6e32 : test rax, rax ; jne 0xffffff80008e6e26 ; pop rbp ; ret
0xffffff80008e7682 : test rax, rax ; jne 0xffffff80008e7676 ; pop rbp ; ret
0xffffff800081e96d : test rax, rax ; setg al ; pop rbp ; ret
0xffffff800081e9c4 : test rax, rax ; setne al ; pop rbp ; ret
0xffffff80003aa146 : test rbx, rbx ; je 0xffffff80003aa158 ; mov rdi, r14 ; call rbx
0xffffff800026dcfe : test rbx, rbx ; jne 0xffffff800026dce9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800026ddae : test rbx, rbx ; jne 0xffffff800026dd99 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800049cf36 : test rbx, rbx ; jne 0xffffff800049cf29 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000547486 : test rbx, rbx ; jne 0xffffff800054745d ; jmp 0xffffff80005474af
0xffffff8000600a69 : test rbx, rbx ; jne 0xffffff8000600a34 ; jmp 0xffffff8000600a80
0xffffff800063500d : test rbx, rbx ; jne 0xffffff8000635008 ; jmp 0xffffff8000634fdc
0xffffff80006783d3 : test rbx, rbx ; jne 0xffffff8000678398 ; call 0xffffff800029aac8
0xffffff800088d34b : test rbx, rbx ; jne 0xffffff800088d339 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d43f : test rbx, rbx ; jne 0xffffff800088d3f9 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800088d4bf : test rbx, rbx ; jne 0xffffff800088d479 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000328486 : test rcx, rcx ; cmove rax, rcx ; pop rbp ; ret
0xffffff80003acde4 : test rcx, rcx ; cmove rdi, rcx ; call rax
0xffffff80003a27ca : test rcx, rcx ; cmove rdi, rcx ; pop rbp ; jmp rax
0xffffff800028777d : test rcx, rcx ; je 0xffffff800028778e ; mov eax, dword ptr [rcx + 0x2c] ; pop rbp ; ret
0xffffff8000288fec : test rcx, rcx ; je 0xffffff8000288ffe ; call rcx
0xffffff800028a76c : test rcx, rcx ; je 0xffffff800028a77e ; call rcx
0xffffff80002b009c : test rcx, rcx ; je 0xffffff80002b00ae ; call rcx
0xffffff80002b034c : test rcx, rcx ; je 0xffffff80002b035e ; call rcx
0xffffff80002c0985 : test rcx, rcx ; je 0xffffff80002c0996 ; mov eax, dword ptr [rcx + 0x4c] ; pop rbp ; ret
0xffffff80002edaf0 : test rcx, rcx ; je 0xffffff80002edb01 ; mov dword ptr [rcx + 0x48], edi ; pop rbp ; ret
0xffffff80003907a6 : test rcx, rcx ; je 0xffffff80003907b7 ; mov eax, dword ptr [rcx + 0x1c] ; pop rbp ; ret
0xffffff80003a296f : test rcx, rcx ; je 0xffffff80003a297b ; call rcx
0xffffff80003a299f : test rcx, rcx ; je 0xffffff80003a29ab ; call rcx
0xffffff80003a2ad5 : test rcx, rcx ; je 0xffffff80003a2b00 ; mov esi, eax ; call rcx
0xffffff80003a41f4 : test rcx, rcx ; je 0xffffff80003a4205 ; mov dword ptr [rcx + 0x30], eax ; pop rbp ; ret
0xffffff80003ab86c : test rcx, rcx ; je 0xffffff80003ab87e ; call rcx
0xffffff80003ab906 : test rcx, rcx ; je 0xffffff80003aba97 ; call rcx
0xffffff800063fd5d : test rcx, rcx ; je 0xffffff800063fd72 ; mov rdi, rbx ; call rcx
0xffffff80006456ea : test rcx, rcx ; je 0xffffff80006456fb ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff80007fcc95 : test rcx, rcx ; je 0xffffff80007fcca6 ; mov eax, dword ptr [rcx + 0x10] ; pop rbp ; ret
0xffffff8000840410 : test rcx, rcx ; je 0xffffff800084042e ; mov rdi, qword ptr [rbx + 0x50] ; call rcx
0xffffff800086072a : test rcx, rcx ; je 0xffffff800086073b ; mov rax, qword ptr [rcx] ; pop rbp ; ret
0xffffff800086dfaf : test rcx, rcx ; je 0xffffff800086dfbb ; call rcx
0xffffff8000870590 : test rcx, rcx ; je 0xffffff80008705a0 ; mov rsi, qword ptr [rcx] ; call rax
0xffffff80008802b0 : test rcx, rcx ; je 0xffffff80008802bf ; inc dword ptr [rdx] ; pop rbp ; ret
0xffffff80008c45aa : test rcx, rcx ; je 0xffffff80008c45b9 ; mov eax, dword ptr [rcx] ; pop rbp ; ret
0xffffff80008ee797 : test rcx, rcx ; je 0xffffff80008ee778 ; mov rdi, r14 ; call rcx
0xffffff80008eeb47 : test rcx, rcx ; je 0xffffff80008eeb28 ; mov rdi, r14 ; call rcx
0xffffff80008f265b : test rcx, rcx ; je 0xffffff80008f2673 ; mov rdi, r14 ; call rcx
0xffffff80008f26b3 : test rcx, rcx ; je 0xffffff80008f2698 ; mov rdi, r14 ; call rcx
0xffffff80008f2738 : test rcx, rcx ; je 0xffffff80008f2750 ; mov rdi, r14 ; call rcx
0xffffff80008f2790 : test rcx, rcx ; je 0xffffff80008f2778 ; mov rdi, r14 ; call rcx
0xffffff80008f29b8 : test rcx, rcx ; je 0xffffff80008f29d0 ; mov rdi, r14 ; call rcx
0xffffff80008f2a10 : test rcx, rcx ; je 0xffffff80008f29f8 ; mov rdi, r14 ; call rcx
0xffffff80008f2a68 : test rcx, rcx ; je 0xffffff80008f2a80 ; mov rdi, r14 ; call rcx
0xffffff80008f2ac0 : test rcx, rcx ; je 0xffffff80008f2aa8 ; mov rdi, r14 ; call rcx
0xffffff80008f41d7 : test rcx, rcx ; je 0xffffff80008f41b8 ; mov rdi, r14 ; call rcx
0xffffff80008f4d07 : test rcx, rcx ; je 0xffffff80008f4ce8 ; mov rdi, r14 ; call rcx
0xffffff80008f501b : test rcx, rcx ; je 0xffffff80008f5033 ; mov rdi, r15 ; call rcx
0xffffff80008f5073 : test rcx, rcx ; je 0xffffff80008f5058 ; mov rdi, r15 ; call rcx
0xffffff80008f511b : test rcx, rcx ; je 0xffffff80008f5133 ; mov rdi, r15 ; call rcx
0xffffff80008f5173 : test rcx, rcx ; je 0xffffff80008f5158 ; mov rdi, r15 ; call rcx
0xffffff80008f520b : test rcx, rcx ; je 0xffffff80008f5223 ; mov rdi, r14 ; call rcx
0xffffff80008f5263 : test rcx, rcx ; je 0xffffff80008f5248 ; mov rdi, r14 ; call rcx
0xffffff80008f53eb : test rcx, rcx ; je 0xffffff80008f5403 ; mov rdi, r15 ; call rcx
0xffffff80008f5443 : test rcx, rcx ; je 0xffffff80008f5428 ; mov rdi, r15 ; call rcx
0xffffff80008f54cb : test rcx, rcx ; je 0xffffff80008f54e3 ; mov rdi, r15 ; call rcx
0xffffff80008f5523 : test rcx, rcx ; je 0xffffff80008f5508 ; mov rdi, r15 ; call rcx
0xffffff80008f559b : test rcx, rcx ; je 0xffffff80008f55b3 ; mov rdi, r14 ; call rcx
0xffffff80008f55f3 : test rcx, rcx ; je 0xffffff80008f55d8 ; mov rdi, r14 ; call rcx
0xffffff80008f570b : test rcx, rcx ; je 0xffffff80008f5723 ; mov rdi, r14 ; call rcx
0xffffff80008f5763 : test rcx, rcx ; je 0xffffff80008f5748 ; mov rdi, r14 ; call rcx
0xffffff80008feee7 : test rcx, rcx ; je 0xffffff80008feec8 ; mov rdi, r14 ; call rcx
0xffffff80008ff0a7 : test rcx, rcx ; je 0xffffff80008ff088 ; mov rdi, r14 ; call rcx
0xffffff80008ff427 : test rcx, rcx ; je 0xffffff80008ff408 ; mov rdi, r14 ; call rcx
0xffffff80008ff7a7 : test rcx, rcx ; je 0xffffff80008ff788 ; mov rdi, r14 ; call rcx
0xffffff800090004b : test rcx, rcx ; je 0xffffff8000900063 ; mov rdi, r15 ; call rcx
0xffffff80009000a3 : test rcx, rcx ; je 0xffffff8000900088 ; mov rdi, r15 ; call rcx
0xffffff800090010b : test rcx, rcx ; je 0xffffff8000900123 ; mov rdi, r15 ; call rcx
0xffffff8000900163 : test rcx, rcx ; je 0xffffff8000900148 ; mov rdi, r15 ; call rcx
0xffffff80009002ab : test rcx, rcx ; je 0xffffff80009002c5 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff8000900303 : test rcx, rcx ; je 0xffffff80009002e9 ; mov rdi, qword ptr [r14 + 0x58] ; call rcx
0xffffff800090097b : test rcx, rcx ; je 0xffffff8000900993 ; mov rdi, r15 ; call rcx
0xffffff80009009d3 : test rcx, rcx ; je 0xffffff80009009b8 ; mov rdi, r15 ; call rcx
0xffffff8000900a3b : test rcx, rcx ; je 0xffffff8000900a53 ; mov rdi, r15 ; call rcx
0xffffff8000900a93 : test rcx, rcx ; je 0xffffff8000900a78 ; mov rdi, r15 ; call rcx
0xffffff8000900bdb : test rcx, rcx ; je 0xffffff8000900bf5 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff8000900c33 : test rcx, rcx ; je 0xffffff8000900c19 ; mov rdi, qword ptr [r14 + 0x50] ; call rcx
0xffffff80009014ab : test rcx, rcx ; je 0xffffff80009014c3 ; mov rdi, r15 ; call rcx
0xffffff8000901503 : test rcx, rcx ; je 0xffffff80009014e8 ; mov rdi, r15 ; call rcx
0xffffff80009015ab : test rcx, rcx ; je 0xffffff80009015c3 ; mov rdi, r15 ; call rcx
0xffffff8000901603 : test rcx, rcx ; je 0xffffff80009015e8 ; mov rdi, r15 ; call rcx
0xffffff800090182b : test rcx, rcx ; je 0xffffff8000901845 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff8000901883 : test rcx, rcx ; je 0xffffff8000901869 ; mov rdi, qword ptr [r14 + 0x18] ; call rcx
0xffffff80009026fb : test rcx, rcx ; je 0xffffff8000902713 ; mov rdi, r15 ; call rcx
0xffffff8000902753 : test rcx, rcx ; je 0xffffff8000902738 ; mov rdi, r15 ; call rcx
0xffffff80009027bb : test rcx, rcx ; je 0xffffff80009027d3 ; mov rdi, r15 ; call rcx
0xffffff8000902813 : test rcx, rcx ; je 0xffffff80009027f8 ; mov rdi, r15 ; call rcx
0xffffff80009033eb : test rcx, rcx ; je 0xffffff8000903403 ; mov rdi, r15 ; call rcx
0xffffff8000903443 : test rcx, rcx ; je 0xffffff8000903428 ; mov rdi, r15 ; call rcx
0xffffff80009034ab : test rcx, rcx ; je 0xffffff80009034c3 ; mov rdi, r15 ; call rcx
0xffffff8000903503 : test rcx, rcx ; je 0xffffff80009034e8 ; mov rdi, r15 ; call rcx
0xffffff80009058ab : test rcx, rcx ; je 0xffffff80009058c3 ; mov rdi, r14 ; call rcx
0xffffff8000905903 : test rcx, rcx ; je 0xffffff80009058e8 ; mov rdi, r14 ; call rcx
0xffffff800090598b : test rcx, rcx ; je 0xffffff80009059a3 ; mov rdi, r14 ; call rcx
0xffffff80009059e3 : test rcx, rcx ; je 0xffffff80009059c8 ; mov rdi, r14 ; call rcx
0xffffff8000907457 : test rcx, rcx ; je 0xffffff8000907438 ; mov rdi, r14 ; call rcx
0xffffff8000907acb : test rcx, rcx ; je 0xffffff8000907ae3 ; mov rdi, r15 ; call rcx
0xffffff8000907b23 : test rcx, rcx ; je 0xffffff8000907b08 ; mov rdi, r15 ; call rcx
0xffffff8000907c5b : test rcx, rcx ; je 0xffffff8000907c73 ; mov rdi, r15 ; call rcx
0xffffff8000907cb3 : test rcx, rcx ; je 0xffffff8000907c98 ; mov rdi, r15 ; call rcx
0xffffff8000907e07 : test rcx, rcx ; je 0xffffff8000907de8 ; mov rdi, r14 ; call rcx
0xffffff8000909de7 : test rcx, rcx ; je 0xffffff8000909dc8 ; mov rdi, r14 ; call rcx
0xffffff800090a71b : test rcx, rcx ; je 0xffffff800090a733 ; mov rdi, r14 ; call rcx
0xffffff800090a773 : test rcx, rcx ; je 0xffffff800090a758 ; mov rdi, r14 ; call rcx
0xffffff8000328413 : test rcx, rcx ; jne 0xffffff8000328406 ; pop rbp ; ret
0xffffff80003284b0 : test rcx, rcx ; jne 0xffffff80003284a6 ; pop rbp ; ret
0xffffff800040c043 : test rcx, rcx ; jne 0xffffff800040c026 ; pop rbp ; ret
0xffffff800041eceb : test rcx, rcx ; jne 0xffffff800041ece6 ; pop rbp ; ret
0xffffff8000448f7b : test rcx, rcx ; jne 0xffffff8000448f76 ; pop rbp ; ret
0xffffff8000530ed2 : test rcx, rcx ; jne 0xffffff8000530ec6 ; pop rbp ; ret
0xffffff8000530f70 : test rcx, rcx ; jne 0xffffff8000530f66 ; pop rbp ; ret
0xffffff800057f1d0 : test rcx, rcx ; jne 0xffffff800057f1c6 ; pop rbp ; ret
0xffffff80005801b4 : test rcx, rcx ; jne 0xffffff80005801a6 ; pop rbp ; ret
0xffffff8000581567 : test rcx, rcx ; jne 0xffffff8000581556 ; pop rbp ; ret
0xffffff800058248f : test rcx, rcx ; jne 0xffffff8000582476 ; pop rbp ; ret
0xffffff8000582534 : test rcx, rcx ; jne 0xffffff8000582526 ; pop rbp ; ret
0xffffff80005825af : test rcx, rcx ; jne 0xffffff8000582596 ; pop rbp ; ret
0xffffff80005a8f80 : test rcx, rcx ; jne 0xffffff80005a8f76 ; pop rbp ; ret
0xffffff80005b1120 : test rcx, rcx ; jne 0xffffff80005b1116 ; pop rbp ; ret
0xffffff80005b2154 : test rcx, rcx ; jne 0xffffff80005b2146 ; pop rbp ; ret
0xffffff80005bf824 : test rcx, rcx ; jne 0xffffff80005bf816 ; pop rbp ; ret
0xffffff80005e47be : test rcx, rcx ; jne 0xffffff80005e47b6 ; pop rbp ; ret
0xffffff80005e4860 : test rcx, rcx ; jne 0xffffff80005e4856 ; pop rbp ; ret
0xffffff80005ebec4 : test rcx, rcx ; jne 0xffffff80005ebeb6 ; pop rbp ; ret
0xffffff8000626481 : test rcx, rcx ; jne 0xffffff8000626476 ; pop rbp ; ret
0xffffff80006264c8 : test rcx, rcx ; jne 0xffffff80006264b6 ; pop rbp ; ret
0xffffff800062653d : test rcx, rcx ; jne 0xffffff8000626536 ; pop rbp ; ret
0xffffff8000637ad4 : test rcx, rcx ; jne 0xffffff8000637ac6 ; pop rbp ; ret
0xffffff8000687fa0 : test rcx, rcx ; jne 0xffffff8000687f96 ; pop rbp ; ret
0xffffff80006a4400 : test rcx, rcx ; jne 0xffffff80006a43f6 ; pop rbp ; ret
0xffffff80006c97fd : test rcx, rcx ; jne 0xffffff80006c97f8 ; xor eax, eax ; pop rbp ; ret
0xffffff800077d0cc : test rcx, rcx ; jne 0xffffff800077d0c6 ; pop rbp ; ret
0xffffff800077e298 : test rcx, rcx ; jne 0xffffff800077e296 ; pop rbp ; ret
0xffffff800077e3ac : test rcx, rcx ; jne 0xffffff800077e3a6 ; pop rbp ; ret
0xffffff80007f5a44 : test rcx, rcx ; jne 0xffffff80007f5a36 ; pop rbp ; ret
0xffffff8000811b92 : test rcx, rcx ; jne 0xffffff8000811b86 ; pop rbp ; ret
0xffffff8000813322 : test rcx, rcx ; jne 0xffffff8000813316 ; pop rbp ; ret
0xffffff8000814402 : test rcx, rcx ; jne 0xffffff80008143f6 ; pop rbp ; ret
0xffffff8000814e02 : test rcx, rcx ; jne 0xffffff8000814df6 ; pop rbp ; ret
0xffffff8000816362 : test rcx, rcx ; jne 0xffffff8000816356 ; pop rbp ; ret
0xffffff8000818e92 : test rcx, rcx ; jne 0xffffff8000818e86 ; pop rbp ; ret
0xffffff800082b682 : test rcx, rcx ; jne 0xffffff800082b676 ; pop rbp ; ret
0xffffff800082c2a2 : test rcx, rcx ; jne 0xffffff800082c296 ; pop rbp ; ret
0xffffff800082e182 : test rcx, rcx ; jne 0xffffff800082e176 ; pop rbp ; ret
0xffffff800082ecc2 : test rcx, rcx ; jne 0xffffff800082ecb6 ; pop rbp ; ret
0xffffff800082f7d2 : test rcx, rcx ; jne 0xffffff800082f7c6 ; pop rbp ; ret
0xffffff8000830b12 : test rcx, rcx ; jne 0xffffff8000830b06 ; pop rbp ; ret
0xffffff8000832a92 : test rcx, rcx ; jne 0xffffff8000832a86 ; pop rbp ; ret
0xffffff800084cc1b : test rcx, rcx ; jne 0xffffff800084cc16 ; pop rbp ; ret
0xffffff800084fc4b : test rcx, rcx ; jne 0xffffff800084fc46 ; pop rbp ; ret
0xffffff8000858f22 : test rcx, rcx ; jne 0xffffff8000858f16 ; pop rbp ; ret
0xffffff800085ce52 : test rcx, rcx ; jne 0xffffff800085ce46 ; pop rbp ; ret
0xffffff800085d0b2 : test rcx, rcx ; jne 0xffffff800085d0a6 ; pop rbp ; ret
0xffffff8000860fb2 : test rcx, rcx ; jne 0xffffff8000860fa6 ; pop rbp ; ret
0xffffff8000862842 : test rcx, rcx ; jne 0xffffff8000862836 ; pop rbp ; ret
0xffffff8000862ad2 : test rcx, rcx ; jne 0xffffff8000862ac6 ; pop rbp ; ret
0xffffff8000862d32 : test rcx, rcx ; jne 0xffffff8000862d26 ; pop rbp ; ret
0xffffff8000862f92 : test rcx, rcx ; jne 0xffffff8000862f86 ; pop rbp ; ret
0xffffff80008631f2 : test rcx, rcx ; jne 0xffffff80008631e6 ; pop rbp ; ret
0xffffff8000863452 : test rcx, rcx ; jne 0xffffff8000863446 ; pop rbp ; ret
0xffffff80008636b2 : test rcx, rcx ; jne 0xffffff80008636a6 ; pop rbp ; ret
0xffffff80008813c2 : test rcx, rcx ; jne 0xffffff80008813b6 ; pop rbp ; ret
0xffffff80008816e2 : test rcx, rcx ; jne 0xffffff80008816d6 ; pop rbp ; ret
0xffffff8000881af2 : test rcx, rcx ; jne 0xffffff8000881ae6 ; pop rbp ; ret
0xffffff8000882102 : test rcx, rcx ; jne 0xffffff80008820f6 ; pop rbp ; ret
0xffffff8000882482 : test rcx, rcx ; jne 0xffffff8000882476 ; pop rbp ; ret
0xffffff8000884782 : test rcx, rcx ; jne 0xffffff8000884776 ; pop rbp ; ret
0xffffff8000884ec2 : test rcx, rcx ; jne 0xffffff8000884eb6 ; pop rbp ; ret
0xffffff80008851ba : test rcx, rcx ; jne 0xffffff80008851b6 ; pop rbp ; ret
0xffffff80008857f2 : test rcx, rcx ; jne 0xffffff80008857e6 ; pop rbp ; ret
0xffffff8000886082 : test rcx, rcx ; jne 0xffffff8000886076 ; pop rbp ; ret
0xffffff8000887ef2 : test rcx, rcx ; jne 0xffffff8000887ee6 ; pop rbp ; ret
0xffffff8000889d52 : test rcx, rcx ; jne 0xffffff8000889d46 ; pop rbp ; ret
0xffffff800088a982 : test rcx, rcx ; jne 0xffffff800088a976 ; pop rbp ; ret
0xffffff800088cc02 : test rcx, rcx ; jne 0xffffff800088cbf6 ; pop rbp ; ret
0xffffff800088eed2 : test rcx, rcx ; jne 0xffffff800088eec6 ; pop rbp ; ret
0xffffff8000890152 : test rcx, rcx ; jne 0xffffff8000890146 ; pop rbp ; ret
0xffffff80008912b2 : test rcx, rcx ; jne 0xffffff80008912a6 ; pop rbp ; ret
0xffffff8000891972 : test rcx, rcx ; jne 0xffffff8000891966 ; pop rbp ; ret
0xffffff8000892512 : test rcx, rcx ; jne 0xffffff8000892506 ; pop rbp ; ret
0xffffff8000893102 : test rcx, rcx ; jne 0xffffff80008930f6 ; pop rbp ; ret
0xffffff8000893f32 : test rcx, rcx ; jne 0xffffff8000893f26 ; pop rbp ; ret
0xffffff80008951b2 : test rcx, rcx ; jne 0xffffff80008951a6 ; pop rbp ; ret
0xffffff80008967d2 : test rcx, rcx ; jne 0xffffff80008967c6 ; pop rbp ; ret
0xffffff80008990a2 : test rcx, rcx ; jne 0xffffff8000899096 ; pop rbp ; ret
0xffffff800089b0e2 : test rcx, rcx ; jne 0xffffff800089b0d6 ; pop rbp ; ret
0xffffff800089b702 : test rcx, rcx ; jne 0xffffff800089b6f6 ; pop rbp ; ret
0xffffff800089ba32 : test rcx, rcx ; jne 0xffffff800089ba26 ; pop rbp ; ret
0xffffff800089bd62 : test rcx, rcx ; jne 0xffffff800089bd56 ; pop rbp ; ret
0xffffff800089d212 : test rcx, rcx ; jne 0xffffff800089d206 ; pop rbp ; ret
0xffffff80008a2aa2 : test rcx, rcx ; jne 0xffffff80008a2a96 ; pop rbp ; ret
0xffffff80008a5372 : test rcx, rcx ; jne 0xffffff80008a5366 ; pop rbp ; ret
0xffffff80008a6302 : test rcx, rcx ; jne 0xffffff80008a62f6 ; pop rbp ; ret
0xffffff80008a7202 : test rcx, rcx ; jne 0xffffff80008a71f6 ; pop rbp ; ret
0xffffff80008a7c12 : test rcx, rcx ; jne 0xffffff80008a7c06 ; pop rbp ; ret
0xffffff80008aaba2 : test rcx, rcx ; jne 0xffffff80008aab96 ; pop rbp ; ret
0xffffff80008ab1e2 : test rcx, rcx ; jne 0xffffff80008ab1d6 ; pop rbp ; ret
0xffffff80008ab542 : test rcx, rcx ; jne 0xffffff80008ab536 ; pop rbp ; ret
0xffffff80008ae0e2 : test rcx, rcx ; jne 0xffffff80008ae0d6 ; pop rbp ; ret
0xffffff80008af3f2 : test rcx, rcx ; jne 0xffffff80008af3e6 ; pop rbp ; ret
0xffffff80008b3e42 : test rcx, rcx ; jne 0xffffff80008b3e36 ; pop rbp ; ret
0xffffff80008b5182 : test rcx, rcx ; jne 0xffffff80008b5176 ; pop rbp ; ret
0xffffff80008b5d72 : test rcx, rcx ; jne 0xffffff80008b5d66 ; pop rbp ; ret
0xffffff80008b63c2 : test rcx, rcx ; jne 0xffffff80008b63b6 ; pop rbp ; ret
0xffffff80008c0b92 : test rcx, rcx ; jne 0xffffff80008c0b86 ; pop rbp ; ret
0xffffff80008c2ae2 : test rcx, rcx ; jne 0xffffff80008c2ad6 ; pop rbp ; ret
0xffffff80008c3772 : test rcx, rcx ; jne 0xffffff80008c3766 ; pop rbp ; ret
0xffffff80008c4242 : test rcx, rcx ; jne 0xffffff80008c4236 ; pop rbp ; ret
0xffffff80008c680f : test rcx, rcx ; jne 0xffffff80008c6806 ; pop rbp ; ret
0xffffff80008c68b0 : test rcx, rcx ; jne 0xffffff80008c68a6 ; pop rbp ; ret
0xffffff80008c77f9 : test rcx, rcx ; jne 0xffffff80008c77e6 ; pop rbp ; ret
0xffffff80008c78a4 : test rcx, rcx ; jne 0xffffff80008c7896 ; pop rbp ; ret
0xffffff80008c87af : test rcx, rcx ; jne 0xffffff80008c87a6 ; pop rbp ; ret
0xffffff80008c8850 : test rcx, rcx ; jne 0xffffff80008c8846 ; pop rbp ; ret
0xffffff80008c975e : test rcx, rcx ; jne 0xffffff80008c9756 ; pop rbp ; ret
0xffffff80008c9800 : test rcx, rcx ; jne 0xffffff80008c97f6 ; pop rbp ; ret
0xffffff80008cc422 : test rcx, rcx ; jne 0xffffff80008cc416 ; pop rbp ; ret
0xffffff80008ce222 : test rcx, rcx ; jne 0xffffff80008ce216 ; pop rbp ; ret
0xffffff80008cebc2 : test rcx, rcx ; jne 0xffffff80008cebb6 ; pop rbp ; ret
0xffffff80008d07f2 : test rcx, rcx ; jne 0xffffff80008d07e6 ; pop rbp ; ret
0xffffff80008d18b2 : test rcx, rcx ; jne 0xffffff80008d18a6 ; pop rbp ; ret
0xffffff80008d4b52 : test rcx, rcx ; jne 0xffffff80008d4b46 ; pop rbp ; ret
0xffffff80008d5b52 : test rcx, rcx ; jne 0xffffff80008d5b46 ; pop rbp ; ret
0xffffff80008d6b42 : test rcx, rcx ; jne 0xffffff80008d6b36 ; pop rbp ; ret
0xffffff80008d74e2 : test rcx, rcx ; jne 0xffffff80008d74d6 ; pop rbp ; ret
0xffffff80008d7752 : test rcx, rcx ; jne 0xffffff80008d7746 ; pop rbp ; ret
0xffffff80008d79c2 : test rcx, rcx ; jne 0xffffff80008d79b6 ; pop rbp ; ret
0xffffff80008e2652 : test rcx, rcx ; jne 0xffffff80008e2646 ; pop rbp ; ret
0xffffff80008e55c2 : test rcx, rcx ; jne 0xffffff80008e55b6 ; pop rbp ; ret
0xffffff80008e6af2 : test rcx, rcx ; jne 0xffffff80008e6ae6 ; pop rbp ; ret
0xffffff80008e6db2 : test rcx, rcx ; jne 0xffffff80008e6da6 ; pop rbp ; ret
0xffffff80008e7642 : test rcx, rcx ; jne 0xffffff80008e7636 ; pop rbp ; ret
0xffffff800084de80 : test rcx, rcx ; mov edx, r8d ; jmp 0xffffff800084de97
0xffffff80006e3bf6 : test rcx, rcx ; mov rdi, rcx ; jne 0xffffff80006e3be9 ; pop rbp ; ret
0xffffff80008176f1 : test rcx, rcx ; setne al ; pop rbp ; ret
0xffffff8000273b85 : test rdi, rdi ; je 0xffffff8000273b96 ; mov qword ptr [rdi], rsi ; pop rbp ; ret
0xffffff8000298c69 : test rdi, rdi ; je 0xffffff8000298c7a ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800031f229 : test rdi, rdi ; je 0xffffff800031f23a ; mov eax, dword ptr [rdi + 0x48] ; pop rbp ; ret
0xffffff8000634d6e : test rdi, rdi ; je 0xffffff8000634dbd ; xor esi, esi ; call 0xffffff8000551039
0xffffff8000756ac6 : test rdi, rdi ; je 0xffffff8000756ad7 ; mov eax, dword ptr [rdi + 0xc] ; pop rbp ; ret
0xffffff800077d8a9 : test rdi, rdi ; je 0xffffff800077d8ba ; mov eax, dword ptr [rdi + 0x10] ; pop rbp ; ret
0xffffff800077d8c9 : test rdi, rdi ; je 0xffffff800077d8da ; mov eax, dword ptr [rdi + 0x28] ; pop rbp ; ret
0xffffff80007837d9 : test rdi, rdi ; je 0xffffff80007837ea ; mov eax, dword ptr [rdi + 0x14] ; pop rbp ; ret
0xffffff800078c996 : test rdi, rdi ; je 0xffffff800078c9a7 ; mov eax, dword ptr [rdi + 8] ; pop rbp ; ret
0xffffff800078c9d9 : test rdi, rdi ; je 0xffffff800078c9ea ; mov eax, dword ptr [rdi + 0x1c] ; pop rbp ; ret
0xffffff80007b8806 : test rdi, rdi ; jne 0xffffff80007b8806 ; pop rbp ; ret
0xffffff80007b9526 : test rdi, rdi ; jne 0xffffff80007b9526 ; pop rbp ; ret
0xffffff800080fe62 : test rdi, rdi ; jne 0xffffff800080fe56 ; pop rbp ; ret
0xffffff800026799d : test rdx, rdx ; cmove rax, rdx ; jmp 0xffffff80002679ae
0xffffff800075e494 : test rdx, rdx ; je 0xffffff800075e4a5 ; mov qword ptr [rdx], rcx ; pop rbp ; ret
0xffffff800049ca51 : test rdx, rdx ; jne 0xffffff800049ca19 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004c5f57 : test rdx, rdx ; jne 0xffffff80004c5f46 ; pop rbp ; ret
0xffffff80008a888b : test rsi, rax ; setne al ; pop rbp ; ret
0xffffff80003403c4 : test rsi, rsi ; je 0xffffff80003403d1 ; pop rbp ; ret
0xffffff80007b95b7 : test rsi, rsi ; je 0xffffff80007b95c8 ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff8000869bde : test rsi, rsi ; je 0xffffff8000869bed ; mov al, cl ; pop rbp ; ret
0xffffff8000451822 : test rsi, rsi ; jne 0xffffff8000451816 ; pop rbp ; ret
0xffffff80004a160a : test sil, sil ; je 0xffffff80004a1626 ; inc edx ; jmp 0xffffff80004a160b
0xffffff80003952ac : tzcnt eax, eax ; or eax, ecx ; pop rbp ; ret
0xffffff80006353a3 : ud0 ; jmp qword ptr [rbx]
0xffffff800062c888 : ud0 ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000516462 : ud0 ; or byte ptr [r10 + r8 + 0x5d], r14b ; ret
0xffffff80008c2248 : ud0 ; ret 0x8348
0xffffff8000366a16 : ud0 ; sub rax, rdi ; pop rbp ; ret
0xffffff80008b0a8e : unpcklps xmm0, xmmword ptr [rax] ; movzx eax, al ; pop rbp ; ret
0xffffff80008b0a8d : unpcklps xmm8, xmmword ptr [rax] ; movzx eax, al ; pop rbp ; ret
0xffffff80003a95fe : vaddps ymm1, ymm12, ymmword ptr [rax - 0x77] ; ret
0xffffff80004fa77e : verr word ptr [rbx] ; jo 0xffffff80004fa7e7 ; ret
0xffffff8000537ed9 : verw bx ; ret
0xffffff80003a35b4 : verw word ptr [rcx] ; ret
0xffffff800039a7e3 : vmxoff ; cmovb eax, ecx ; cmove eax, edx ; leave ; ret
0xffffff800072d0ea : vpcmpeqb xmm8, xmm15, xmmword ptr [rbx + rcx*4] ; adc esp, dword ptr [rcx] ; ret 0xf641
0xffffff800038e037 : vpcmpeqb xmm8, xmm9, xmmword ptr [rax] ; movzx eax, byte ptr [rax + 0x4c] ; pop rbp ; ret
0xffffff80008ffd22 : vpinsrw xmm9, xmm8, word ptr [r15], 0x87 ; ret 0
0xffffff8000352f58 : vshufpd xmm8, xmm7, xmmword ptr [rdi], 0xff ; jmp 0xffffff8000352f28
0xffffff80007f8926 : wait ; adc eax, dword ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80006ac631 : wait ; adc edi, esp ; dec dword ptr [rax - 0x77] ; ret 0xf41
0xffffff80005593de : wait ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80007e2c82 : wait ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0xffffff80003c820c : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800029bd33 : wait ; add byte ptr [rax], al ; cmp eax, 1 ; jne 0xffffff800029bd60 ; pop rbp ; ret
0xffffff80007d5371 : wait ; add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000266132 : wait ; add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026618b ; call rax
0xffffff80002661bd : wait ; add dword ptr [rax], 0x48 ; test eax, eax ; je 0xffffff800026621b ; call rax
0xffffff800069a790 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000728878 : wait ; add eax, 0x894c0000 ; ret
0xffffff8000256481 : wait ; and al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007746a1 : wait ; call qword ptr [rdi]
0xffffff8000524de1 : wait ; cmp ebp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000751a66 : wait ; dec dword ptr [rbx - 0x1577b] ; jmp qword ptr [rcx]
0xffffff80006cae81 : wait ; fcmovb st(0), st(0) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000514d31 : wait ; fdivr st(7) ; mov eax, 0x16 ; pop rbp ; ret
0xffffff80008d33a1 : wait ; fdivrp st(5) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000373919 : wait ; mov ebx, 0x89450075 ; ret
0xffffff800048bc64 : wait ; out 0xff, eax ; call rcx
0xffffff8000665d34 : wait ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006624a1 : wait ; push rsi ; ret
0xffffff8000708331 : wait ; ret
0xffffff800076e6a1 : wait ; ret 0x45ff
0xffffff800076e761 : wait ; ret 0x48ff
0xffffff8000769519 : wait ; ret 0x49ff
0xffffff800066462e : wait ; ret 0x8bff
0xffffff8000674c81 : wait ; ret 0xe9ff
0xffffff800065f595 : wait ; retf 0x34 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80007e062e : wait ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800077805a : wait ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085a9f2 : wait ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000788091 : wait ; stosd dword ptr [rdi], eax ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000680636 : wait ; str word ptr [rax - 0x77] ; ret
0xffffff800089b63e : wait ; sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007f9b71 : wait ; test al, 0xb5 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082b5be : wait ; xor byte ptr [rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800028ef41 : wbinvd ; hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80007cbd6e : wbinvd ; ret
0xffffff800038b267 : wrmsr ; pop rbp ; ret
0xffffff800076002d : wrmsr ; ret
0xffffff80004f9bcd : wrmsr ; xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff80003b7517 : wrmsr ; xor eax, eax ; pop rbp ; ret
0xffffff800039922a : wrmsr ; xor eax, eax ; ret
0xffffff800054b8f2 : xabort 0x4c ; mov edi, esi ; call 0xffffff8000297b47
0xffffff800067468f : xabort 0x4c ; mov edi, esi ; call 0xffffff8000297b48
0xffffff8000803474 : xabort 0x75 ; mov eax, 0x5d5e415b ; ret
0xffffff800080e0d7 : xadd byte ptr [rdi], al ; movsx eax, al ; pop rbp ; ret
0xffffff800080df36 : xadd byte ptr [rsi], bh ; movsx eax, dil ; pop rbp ; ret
0xffffff800080df35 : xadd byte ptr [rsi], dil ; movsx eax, dil ; pop rbp ; ret
0xffffff8000278837 : xadd dword ptr [rbp], eax ; xor ebx, ebx ; jmp 0xffffff8000278893
0xffffff8000393483 : xadd dword ptr [rdi], eax ; add eax, esi ; ret
0xffffff800080e15a : xadd dword ptr [rdi], eax ; cwde ; pop rbp ; ret
0xffffff800080df8a : xadd dword ptr [rdi], eax ; pop rbp ; ret
0xffffff800027552a : xadd dword ptr [rip + 0x872b3f], eax ; pop rbp ; ret
0xffffff800080df55 : xadd dword ptr [rsi], edi ; mov eax, edi ; pop rbp ; ret
0xffffff800080df66 : xadd dword ptr [rsi], edi ; mov rax, rdi ; pop rbp ; ret
0xffffff800080df46 : xadd dword ptr [rsi], edi ; movsx eax, di ; pop rbp ; ret
0xffffff8000661dd1 : xadd ebx, esp ; add al, byte ptr [rcx - 0x75] ; xor byte ptr [r9], r15b ; ret
0xffffff80003ea2ce : xadd edx, esp ; or byte ptr [rcx], cl ; ret 0xca09
0xffffff800080df65 : xadd qword ptr [rsi], rdi ; mov rax, rdi ; pop rbp ; ret
0xffffff800074fa4f : xbegin 0xffffff7f815ee3bb ; mov ah, 0xff ; pop rbp ; ret
0xffffff80002ba255 : xbegin 0xffffff7f8974a25b ; ret
0xffffff800076d5d4 : xbegin 0xffffff7fb31c3bcb ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80006b91f5 : xbegin 0xffffff7fbe54d6ec ; dec dword ptr [rax - 1] ; ret
0xffffff8000652686 : xbegin 0xffffff7fc4b9da7d ; dec dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff800049e1df : xbegin 0xffffff7fdfe33cd6 ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80004643af : xbegin 0xffffff7fe37dcea6 ; dec dword ptr [rax - 1] ; ret
0xffffff800045cebf : xbegin 0xffffff7fe3f249b6 ; dec dword ptr [rax - 1] ; ret
0xffffff800044861f : xbegin 0xffffff7ff55e6f8b ; in al, 0xff ; pop rbp ; ret
0xffffff8000671b72 : xbegin 0xffffff7ff8daa6c9 ; call 0xffffff8000297b49
0xffffff800067464f : xbegin 0xffffff7ff8ddd1a7 ; call 0xffffff8000297b49
0xffffff80004b397f : xbegin 0xffffff80420522eb ; fdivp st(7) ; pop rbp ; ret
0xffffff800074fd0f : xbegin 0xffffff807e9ee67b ; mov ah, 0xff ; pop rbp ; ret
0xffffff800044c855 : xchg ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x470f
0xffffff8000328c77 : xchg al, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0xffffff80003289a9 : xchg al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002dbdae : xchg al, ah ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800044c818 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4072
0xffffff80005739ea : xchg al, ch ; add byte ptr [rax], al ; add bh, bh ; ret 0x894c
0xffffff8000319786 : xchg al, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x2eb
0xffffff80006db0a8 : xchg al, ch ; ret 0x3ea
0xffffff800044c84a : xchg al, dl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0xe72
0xffffff80008c4366 : xchg al, dl ; hlt ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c1596 : xchg ax, cx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff800073724d : xchg bh, bh ; jmp rsp
0xffffff800062bc9f : xchg bh, bh ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80008a83f9 : xchg bh, bh ; xor eax, eax ; pop rbp ; ret
0xffffff80006784fc : xchg bh, cl ; push qword ptr [rbx] ; pop rbp ; ror byte ptr [rax + 0x69], 1 ; ret
0xffffff80007c4922 : xchg bl, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007ff761 : xchg byte ptr [rax + 0x29000000], cl ; ret
0xffffff8000847144 : xchg byte ptr [rax + 0x39000000], al ; ret
0xffffff80005e2253 : xchg byte ptr [rax + 0x4c000000], bh ; mov edi, esi ; call rax
0xffffff80007b574b : xchg byte ptr [rax + 0x5b000000], ah ; pop r14 ; pop rbp ; ret
0xffffff80003e7937 : xchg byte ptr [rax + 0x5d000000], bl ; ret
0xffffff8000622b88 : xchg byte ptr [rax + 1], bl ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006487f6 : xchg byte ptr [rax + 2], cl ; add byte ptr [rax], al ; add al, 0xf ; xchg eax, esp ; ret
0xffffff8000624d8e : xchg byte ptr [rax + 2], dh ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000591b04 : xchg byte ptr [rax + rax - 0x76b30000], bh ; ret
0xffffff8000281247 : xchg byte ptr [rax + rax - 0x7cb80000], cl ; ret
0xffffff800089e92e : xchg byte ptr [rax - 0x48000000], dl ; ret 2
0xffffff80004ba8b5 : xchg byte ptr [rax - 0x58000000], bl ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xca08
0xffffff80006a97b6 : xchg byte ptr [rax - 0x7cb70032], bl ; ret
0xffffff80007c42c6 : xchg byte ptr [rax - 5], ah ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006f83f2 : xchg byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80002780b4 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800029aaa8 : xchg byte ptr [rax], al ; and eax, 1 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80002afe20 : xchg byte ptr [rax], al ; mov edx, 4 ; call 0xffffff80008ec099
0xffffff8000756138 : xchg byte ptr [rax], bh ; add al, ch ; add bh, cl ; ret
0xffffff8000549626 : xchg byte ptr [rax], ch ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006f8540 : xchg byte ptr [rax], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800052570e : xchg byte ptr [rax], dh ; add byte ptr [r8 - 0x7d], r9b ; ret
0xffffff8000752ce8 : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0xffffff80006f8430 : xchg byte ptr [rax], dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000671ab8 : xchg byte ptr [rax], dl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003680c1 : xchg byte ptr [rax], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0xffffff80006f83b4 : xchg byte ptr [rax], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800029aaa7 : xchg byte ptr [rax], r8b ; and eax, 1 ; mov dword ptr [rdi], eax ; pop rbp ; ret
0xffffff80006f8514 : xchg byte ptr [rbx + rax - 0x7cb80000], al ; ret
0xffffff80006191ae : xchg byte ptr [rbx], ch ; add byte ptr [r9], r15b ; ror byte ptr [rdi], 1 ; ret 0x8941
0xffffff800026feb6 : xchg byte ptr [rbx], cl ; add byte ptr [rax - 1], cl ; ret
0xffffff80005f6df7 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0xffffff80007b3fc0 : xchg byte ptr [rcx + rax - 0x7ab80000], al ; ret
0xffffff80008a129e : xchg byte ptr [rcx - 0x45000000], bl ; ret 2
0xffffff8000862e0e : xchg byte ptr [rcx], al ; sbb eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000558a06 : xchg byte ptr [rcx], bl ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000658a2b : xchg byte ptr [rcx], bl ; xor eax, 0xe8c03100 ; push 0x5a ; ret
0xffffff8000421797 : xchg byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000760116 : xchg byte ptr [rdi], ah ; ret
0xffffff80006bfaba : xchg byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800043c343 : xchg byte ptr [rdx + rax + 0x39480000], bh ; ret 0x8d0f
0xffffff8000645c90 : xchg byte ptr [rdx + rax + 0x415b0000], cl ; pop rsi ; pop rbp ; ret
0xffffff80006ab5b6 : xchg byte ptr [rdx - 0x32], bh ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800088cb3e : xchg byte ptr [rdx], ch ; add byte ptr [rax + 0x5b], cl ; pop r14 ; pop rbp ; ret
0xffffff800080ab49 : xchg byte ptr [rip - 0x76b40000], dl ; ret
0xffffff80005efb5c : xchg byte ptr [rsi + 0x5d000000], cl ; ret
0xffffff80008d785e : xchg byte ptr [rsi], al ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff80008d69be : xchg byte ptr [rsi], cl ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff800066d326 : xchg byte ptr [rsi], cl ; ret 0xe9ff
0xffffff80002ce756 : xchg byte ptr [rsp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80003c206f : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006952da : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80007f94d8 : xchg ch, dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c41aa : xchg ch, dh ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0xffffff80006a0046 : xchg cl, bl ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8d8b
0xffffff8000784df1 : xchg dh, cl ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0xffffff80007487a7 : xchg dl, al ; dec dword ptr [rax + 0x63] ; ret
0xffffff80003ea95b : xchg dl, bh ; push rsi ; ret
0xffffff80008d5c05 : xchg dword ptr [rax + 0x1000000], esp ; pop rbp ; ret
0xffffff800061d040 : xchg dword ptr [rax + 0x39000000], edx ; ret
0xffffff8000630588 : xchg dword ptr [rax + 0x5b000000], edx ; pop rbp ; ret
0xffffff80004b4166 : xchg dword ptr [rax + 0x5d000000], eax ; ret
0xffffff8000563a9c : xchg dword ptr [rax + 0x5d000000], ebp ; ret
0xffffff8000356d66 : xchg dword ptr [rax + 0x5d000000], ebx ; ret
0xffffff8000278a4b : xchg dword ptr [rax + 0x5d000000], ecx ; ret
0xffffff80004b4146 : xchg dword ptr [rax + 0x5d000000], edi ; ret
0xffffff80004b4186 : xchg dword ptr [rax + 0x5d000000], edx ; ret
0xffffff80004b4126 : xchg dword ptr [rax + 0x5d000000], esi ; ret
0xffffff80003b5dcb : xchg dword ptr [rax + 0x5d000000], esp ; ret
0xffffff80002daf35 : xchg dword ptr [rax + 0x5d000001], edi ; ret
0xffffff80002be704 : xchg dword ptr [rax + 0x5d000001], edx ; ret
0xffffff80002db1c6 : xchg dword ptr [rax + 0x5d000002], edx ; ret
0xffffff80002db136 : xchg dword ptr [rax + 0x5d000002], esi ; ret
0xffffff80007f0866 : xchg dword ptr [rax + 0x5d000003], ebp ; ret
0xffffff80007f0695 : xchg dword ptr [rax + 0x5d000003], ebx ; ret
0xffffff80007f0656 : xchg dword ptr [rax + 0x5d000003], ecx ; ret
0xffffff80007f0735 : xchg dword ptr [rax + 0x5d000003], edi ; ret
0xffffff80003676b5 : xchg dword ptr [rax + 0x5d000003], edx ; ret
0xffffff80002bed0d : xchg dword ptr [rax + 0x5d000003], esi ; ret
0xffffff80007f06b6 : xchg dword ptr [rax + 0x5d000003], esp ; ret
0xffffff80002b7186 : xchg dword ptr [rax + 0x5d000004], ecx ; ret
0xffffff8000563e3c : xchg dword ptr [rax + 0x5d000004], edi ; ret
0xffffff800039a6a6 : xchg dword ptr [rax + 0x5d000004], esp ; ret
0xffffff80004f8fb6 : xchg dword ptr [rax + 0x5d000009], ebx ; ret
0xffffff80007f0786 : xchg dword ptr [rax + 0x5d00000d], eax ; ret
0xffffff8000563bb1 : xchg dword ptr [rax + 1], ebp ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800056311c : xchg dword ptr [rax + 1], edi ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008dec65 : xchg dword ptr [rax + 2], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007ce12d : xchg dword ptr [rax + 2], ecx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002c095d : xchg dword ptr [rax + 3], ebp ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002daf26 : xchg dword ptr [rax + 3], edx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80002c099d : xchg dword ptr [rax + 3], esp ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800077e0f6 : xchg dword ptr [rax + 4], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007f0846 : xchg dword ptr [rax + 4], ebx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000389e76 : xchg dword ptr [rax + 4], ecx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007f06d6 : xchg dword ptr [rax + 4], edx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800083dcbb : xchg dword ptr [rax + rax - 0x3fcf0000], edi ; pop rbp ; ret
0xffffff80005df15a : xchg dword ptr [rax + rax - 0x769a0000], ecx ; ret 0x8b41
0xffffff80007b1dda : xchg dword ptr [rax + rax - 0x7cb80000], esp ; ret 0x4818
0xffffff8000663824 : xchg dword ptr [rax + rax], esi ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800027894b : xchg dword ptr [rax - 0x16fffffe], eax ; ret
0xffffff80004148d6 : xchg dword ptr [rax - 0x75000000], eax ; and al, 0x5d ; ret
0xffffff8000671d25 : xchg dword ptr [rax - 0x76b7ffba], esp ; fsubp st(0) ; ret
0xffffff80003bf39e : xchg dword ptr [rax - 0x77000000], ecx ; ret 0xe281
0xffffff800063607f : xchg dword ptr [rax - 0x78000000], ebx ; ret
0xffffff80003675ac : xchg dword ptr [rax - 0x7cfffffd], edx ; loopne 0xffffff80003675be ; pop rbp ; ret
0xffffff80005801e5 : xchg dword ptr [rax - 0x7d000000], edx ; loopne 0xffffff80005801f7 ; pop rbp ; ret
0xffffff80005322ba : xchg dword ptr [rax - 0x80000000], esp ; jne 0xffffff80005322cd ; pop rbp ; ret
0xffffff80005324ac : xchg dword ptr [rax - 0x80000000], esp ; jne 0xffffff80005324bf ; pop rbp ; ret
0xffffff8000532564 : xchg dword ptr [rax - 0x80000000], esp ; jne 0xffffff8000532577 ; pop rbp ; ret
0xffffff800053e64a : xchg dword ptr [rax - 0x80000000], esp ; jne 0xffffff800053e65d ; pop rbp ; ret
0xffffff80002cb4b5 : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000288a4f : xchg dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf685
0xffffff800027552f : xchg dword ptr [rax], eax ; pop rbp ; ret
0xffffff8000415f45 : xchg dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005b3454 : xchg dword ptr [rax], ecx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff80006f1cd6 : xchg dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0xffffff800082caa3 : xchg dword ptr [rax], esi ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0xffffff80007a3d10 : xchg dword ptr [rbp + 1], esp ; add byte ptr [rax], al ; add dword ptr [rax + rcx - 0x18], esi ; ret
0xffffff80003a7043 : xchg dword ptr [rbp], esi ; call qword ptr [rax]
0xffffff80008961bd : xchg dword ptr [rbx], ecx ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800075fcb5 : xchg dword ptr [rbx], esi ; ret
0xffffff80006140c8 : xchg dword ptr [rbx], esp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80008d5d15 : xchg dword ptr [rcx + 0x5d000000], edi ; ret
0xffffff80003d3cee : xchg dword ptr [rcx + rax + 0x46890000], edx ; add al, 0x5d ; ret
0xffffff8000309625 : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0xffffff80007f07a5 : xchg dword ptr [rcx + rax], ebx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800061a92d : xchg dword ptr [rcx + rax], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80004f9475 : xchg dword ptr [rcx + rcx], ebx ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80003e78b5 : xchg dword ptr [rcx - 0x74be0006], esi ; pop rdi ; sub al, 0xf6 ; ret
0xffffff80004ffac5 : xchg dword ptr [rcx], ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff80007c97e5 : xchg dword ptr [rcx], esp ; add al, ch ; ret
0xffffff800027af99 : xchg dword ptr [rdi + 0x39000005], ebp ; ret
0xffffff80007cd796 : xchg dword ptr [rdi + 2], ebx ; add byte ptr [rax], al ; and eax, 0xf ; pop rbp ; ret
0xffffff80006b4954 : xchg dword ptr [rdi + rdi*8], esp ; ret
0xffffff800044f7fa : xchg dword ptr [rdi - 0x76fffffb], esp ; ret 0xeac1
0xffffff800048c655 : xchg dword ptr [rdi - 0x7cb70010], edi ; ret
0xffffff8000392525 : xchg dword ptr [rdi], ebp ; js 0xffffff800039252e ; leave ; ret
0xffffff80005b6acc : xchg dword ptr [rdi], ebx ; add al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000563160 : xchg dword ptr [rdx + 0x5d000000], ebx ; ret
0xffffff80007d4f06 : xchg dword ptr [rdx + 2], ecx ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff800053235e : xchg dword ptr [rdx + 4], esi ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800043d658 : xchg dword ptr [rdx + rax + 0x39480000], edi ; ret 0x8d0f
0xffffff80008de7db : xchg dword ptr [rdx + rax], esp ; add byte ptr [rax], al ; setne al ; pop rbp ; ret
0xffffff800077f5f6 : xchg dword ptr [rdx - 0x7cfffffd], eax ; loopne 0xffffff800077f608 ; pop rbp ; ret
0xffffff8000547875 : xchg dword ptr [rdx], ecx ; pop rcx ; add al, ch ; ret 0xe4b1
0xffffff80007d4ef6 : xchg dword ptr [rsi + 2], ebx ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff80008aeb35 : xchg dword ptr [rsi - 6], edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800077e085 : xchg dword ptr [rsp + rax], esi ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff8000895d96 : xchg eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80006af160 : xchg eax, eax ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x2775
0xffffff800084548a : xchg eax, eax ; or eax, dword ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002d2f84 : xchg eax, ebp ; adc al, byte ptr [rax] ; add al, ch ; ret
0xffffff8000268ea3 : xchg eax, ebp ; adc al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008264a0 : xchg eax, ebp ; add al, 0 ; add bh, bh ; ret
0xffffff8000319aea : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; xchg eax, esp ; ret 0x2eb
0xffffff80004f6a9b : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff800078b6ea : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0xffffff800039a468 : xchg eax, ebp ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0xffffff80008517cb : xchg eax, ebp ; add byte ptr [rdx], bl ; add byte ptr [rcx], dh ; shr al, 0x3a ; ret
0xffffff80002883f8 : xchg eax, ebp ; add r14b, r14b ; ret
0xffffff80008f532b : xchg eax, ebp ; and eax, 0xff480024 ; ret
0xffffff8000744288 : xchg eax, ebp ; call 0xffffff8000744291
0xffffff8000778c42 : xchg eax, ebp ; call 0xffffff8048778c4f
0xffffff80008a9788 : xchg eax, ebp ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000356233 : xchg eax, ebp ; cld ; inc dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff800084a07d : xchg eax, ebp ; cmp dl, 0xff ; dec dword ptr [rax - 0x7f] ; ret 0xfff
0xffffff80007bd670 : xchg eax, ebp ; dec dword ptr [rax + 0x63] ; ret
0xffffff80007b94c0 : xchg eax, ebp ; dec dword ptr [rcx + 0x63] ; sbb byte ptr [rax + 1], r9b ; ret
0xffffff80004020b7 : xchg eax, ebp ; imul eax, dword ptr [rax + rax], -0x77 ; ret
0xffffff80006a5d57 : xchg eax, ebp ; int1 ; ret 0x41ff
0xffffff80003b8526 : xchg eax, ebp ; jno 0xffffff80003b852f ; xor eax, eax ; pop rbp ; ret
0xffffff800031ad67 : xchg eax, ebp ; js 0xffffff800031ad77 ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800058a8c2 : xchg eax, ebp ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0xffffff80004439b5 : xchg eax, ebp ; mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000886e25 : xchg eax, ebp ; mov byte ptr [rax + rcx*4 - 0x10], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80003e62f9 : xchg eax, ebp ; mov eax, 0x83fffffe ; cli ; add al, 0x89 ; ret
0xffffff800065fff3 : xchg eax, ebp ; mov eax, 0xe8fffffe ; ret
0xffffff80005fb866 : xchg eax, ebp ; out 0x4d, al ; add byte ptr [rcx], al ; pop rbp ; ret
0xffffff8000434952 : xchg eax, ebp ; push -0x7c000004 ; ret 0x89f8
0xffffff80007bd897 : xchg eax, ebp ; push 0x29ffffff ; ret 0x8941
0xffffff8000489490 : xchg eax, ebp ; push 0x41ffffff ; call qword ptr [rdi]
0xffffff800075d797 : xchg eax, ebp ; push rcx ; ret
0xffffff800081a228 : xchg eax, ebp ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002528be : xchg eax, ebp ; ret
0xffffff800069ba92 : xchg eax, ebp ; ret 0x2041
0xffffff8000612526 : xchg eax, ebp ; ret 0x2ab8
0xffffff800083d375 : xchg eax, ebp ; ret 0x2b0
0xffffff80008982e4 : xchg eax, ebp ; ret 0x2eb
0xffffff80008cbc4b : xchg eax, ebp ; ret 0x3174
0xffffff80003b6684 : xchg eax, ebp ; ret 0x3941
0xffffff80008e78cf : xchg eax, ebp ; ret 0x3944
0xffffff80004fdf60 : xchg eax, ebp ; ret 0x394c
0xffffff80006c8aa7 : xchg eax, ebp ; ret 0x394d
0xffffff80005ddac4 : xchg eax, ebp ; ret 0x3b
0xffffff8000578009 : xchg eax, ebp ; ret 0x3b4c
0xffffff800065035f : xchg eax, ebp ; ret 0x3d83
0xffffff80004c0991 : xchg eax, ebp ; ret 0x40f6
0xffffff800040ab17 : xchg eax, ebp ; ret 0x43
0xffffff80003e0931 : xchg eax, ebp ; ret 0x450f
0xffffff800076931f : xchg eax, ebp ; ret 0x48ff
0xffffff800045444b : xchg eax, ebp ; ret 0x51
0xffffff80005e7ba8 : xchg eax, ebp ; ret 0x58b
0xffffff800058fe75 : xchg eax, ebp ; ret 0x62eb
0xffffff80003116c4 : xchg eax, ebp ; ret 0x63
0xffffff80002b7a01 : xchg eax, ebp ; ret 0x6348
0xffffff800070a3b9 : xchg eax, ebp ; ret 0x8341
0xffffff8000647686 : xchg eax, ebp ; ret 0x8349
0xffffff80008367ec : xchg eax, ebp ; ret 0x8441
0xffffff80003118d1 : xchg eax, ebp ; ret 0x8545
0xffffff8000607e7b : xchg eax, ebp ; ret 0x8548
0xffffff800031179e : xchg eax, ebp ; ret 0x854d
0xffffff80006d8b31 : xchg eax, ebp ; ret 0x8566
0xffffff80007c6c64 : xchg eax, ebp ; ret 0x888d
0xffffff80004400de : xchg eax, ebp ; ret 0x8941
0xffffff800083973d : xchg eax, ebp ; ret 0x8948
0xffffff80006c021a : xchg eax, ebp ; ret 0x894c
0xffffff8000769a94 : xchg eax, ebp ; ret 0x89ff
0xffffff80006e9bc6 : xchg eax, ebp ; ret 0x8b41
0xffffff800042108c : xchg eax, ebp ; ret 0x8b48
0xffffff80003c30f1 : xchg eax, ebp ; ret 0x8b4c
0xffffff800038d970 : xchg eax, ebp ; ret 0x8d48
0xffffff800044f0c8 : xchg eax, ebp ; ret 0x8d49
0xffffff800045a9d3 : xchg eax, ebp ; ret 0x8d8b
0xffffff800044cf95 : xchg eax, ebp ; ret 0x940f
0xffffff80007bd03e : xchg eax, ebp ; ret 0x9589
0xffffff8000252893 : xchg eax, ebp ; ret 0xb60f
0xffffff800062f3be : xchg eax, ebp ; ret 0xc085
0xffffff8000312682 : xchg eax, ebp ; ret 0xc120
0xffffff800036ecbb : xchg eax, ebp ; ret 0xc220
0xffffff800044bbe9 : xchg eax, ebp ; ret 0xc320
0xffffff800029e90b : xchg eax, ebp ; ret 0xca08
0xffffff80004127a7 : xchg eax, ebp ; ret 0xca20
0xffffff800025ef6a : xchg eax, ebp ; ret 0xca84
0xffffff800032206a : xchg eax, ebp ; ret 0xcb20
0xffffff80006d8853 : xchg eax, ebp ; ret 0xce39
0xffffff80008ec12f : xchg eax, ebp ; ret 0xd008
0xffffff800026c151 : xchg eax, ebp ; ret 0xd120
0xffffff80003c2ef8 : xchg eax, ebp ; ret 0xd184
0xffffff80004c1cac : xchg eax, ebp ; ret 0xd789
0xffffff80004c9380 : xchg eax, ebp ; ret 0xda08
0xffffff8000252ead : xchg eax, ebp ; ret 0xda20
0xffffff8000311414 : xchg eax, ebp ; ret 0xe181
0xffffff800064e964 : xchg eax, ebp ; ret 0xf41
0xffffff80003ccc45 : xchg eax, ebp ; ret 0xf44
0xffffff8000288a53 : xchg eax, ebp ; ret 0xf685
0xffffff80005779b7 : xchg eax, ebp ; ret 0xf883
0xffffff80004b302d : xchg eax, ebp ; ret 0xf981
0xffffff800045acb3 : xchg eax, ebp ; ret 0xf983
0xffffff800031643f : xchg eax, ebp ; ret 0xfeb
0xffffff8000751f17 : xchg eax, ebp ; ret 0xffb3
0xffffff80003c30ea : xchg eax, ebp ; rol byte ptr [r13 - 0x6af0be25], 1 ; ret 0x8b4c
0xffffff800057d540 : xchg eax, ebp ; rol byte ptr [rax + rax*8 + 0x3d832574], 0x6f ; ret 0x4e
0xffffff80003c2ef1 : xchg eax, ebp ; rol byte ptr [rbx + 0xf00d07d], 0x95 ; ret 0xd184
0xffffff80004aa664 : xchg eax, ebp ; ror byte ptr [rax + 0x1e280ca], 0x30 ; ret 0x840f
0xffffff80004aa629 : xchg eax, ebp ; ror byte ptr [rax + 0x1e280ca], 0x30 ; ret 0x850f
0xffffff800083022e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80004a0752 : xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret
0xffffff800047b910 : xchg eax, ebp ; ror byte ptr [rdi], 0x94 ; ret 0xc985
0xffffff8000390850 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80006d4999 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; rol byte ptr [rcx], 0xc0 ; pop rbp ; ret
0xffffff800058825f : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 1], 0x84 ; ret 0xf8
0xffffff800069bcda : xchg eax, ebp ; ror dword ptr [rdi], 0x94 ; ret 0xc184
0xffffff8000799f34 : xchg eax, ebp ; ror dword ptr [rdi], 0xb6 ; ror dword ptr [rax - 0x75], 1 ; jne 0xffffff8000799ede ; call rax
0xffffff80004b20a1 : xchg eax, ebp ; sar dl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x3b48
0xffffff800039a0a7 : xchg eax, ebp ; sbb dh, byte ptr [rbp] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000445fa4 : xchg eax, ebp ; shl dword ptr [rax], 0xc1 ; movzx eax, cl ; pop rbp ; ret
0xffffff80005f3147 : xchg eax, ebp ; stosd dword ptr [rdi], eax ; cmc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006bdd8d : xchg eax, ebp ; str word ptr [rax - 0x77] ; ret
0xffffff8000b3c0e5 : xchg eax, ebp ; sub byte ptr [rcx + rcx*4], dl ; ret 0xca21
0xffffff8000881a67 : xchg eax, ebp ; sub r8, qword ptr [r8] ; pop rbp ; ret
0xffffff80003efba7 : xchg eax, ebp ; xor al, 0xfa ; push rsi ; ret
0xffffff800064e684 : xchg eax, ebp ; xor eax, 0xe8c03100 ; adc bh, dh ; ret
0xffffff8000379579 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800054afb0 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0xffffff800059b832 : xchg eax, ebx ; add rdx, r11 ; jmp rdx
0xffffff80007f3fbd : xchg eax, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007898e9 : xchg eax, ebx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff800088257d : xchg eax, ebx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006aa01c : xchg eax, ebx ; cwde ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff80007d4b0c : xchg eax, ebx ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800081ba39 : xchg eax, ebx ; jb 0xffffff800081ba43 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800069c3a9 : xchg eax, ebx ; jno 0xffffff800069c39d ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005cc319 : xchg eax, ebx ; jns 0xffffff80005cc2f2 ; dec dword ptr [rax - 0x77] ; ret
0xffffff800083e7e2 : xchg eax, ebx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8341
0xffffff800083e192 : xchg eax, ebx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0xffffff800083ee0f : xchg eax, ebx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc931
0xffffff80006024e9 : xchg eax, ebx ; mov ebx, 0x8d4fffb0 ; xor al, 0xae ; jmp 0xffffff80006024be
0xffffff8000617d6e : xchg eax, ebx ; mov esp, 0x29000000 ; ret 0x9389
0xffffff800075d4a9 : xchg eax, ebx ; pop rbx ; ret
0xffffff8000317143 : xchg eax, ebx ; ret
0xffffff800058fea8 : xchg eax, ebx ; ret 0x2feb
0xffffff80006ddd01 : xchg eax, ebx ; ret 0x3944
0xffffff8000769d03 : xchg eax, ebx ; ret 0x45ff
0xffffff800034b2af : xchg eax, ebx ; ret 0x60
0xffffff80003c97f2 : xchg eax, ebx ; ret 0xb60f
0xffffff8000769c8a : xchg eax, ebx ; ret 0xbeff
0xffffff800042c0a9 : xchg eax, ebx ; ret 0xd
0xffffff800058fed7 : xchg eax, ebx ; ret 0xda20
0xffffff80006dc067 : xchg eax, ebx ; ret 0xf939
0xffffff80007b87c9 : xchg eax, ebx ; ret 0xffff
0xffffff80002d945e : xchg eax, ebx ; rol byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x2948
0xffffff80002caf81 : xchg eax, ebx ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff80006ddea4 : xchg eax, ebx ; rol byte ptr [rcx + rdi - 0x36], 0xf ; xchg eax, edi ; ret 0xf41
0xffffff80005932e7 : xchg eax, ebx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800043e7d5 : xchg eax, ebx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add dh, bh ; ret 0xb60f
0xffffff80005849e4 : xchg eax, ebx ; shl byte ptr [rax], 0xc8 ; movzx eax, al ; pop rbp ; ret
0xffffff800058478f : xchg eax, ebx ; shl dword ptr [rax], 0xc1 ; movzx eax, cl ; pop rbp ; ret
0xffffff80008d3521 : xchg eax, ebx ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006945fe : xchg eax, ebx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff8000495cd9 : xchg eax, ebx ; test byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000717009 : xchg eax, ebx ; xor dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007f5f72 : xchg eax, ebx ; xor eax, dword ptr [rax] ; call 0xffffff8000393049
0xffffff8000788e6e : xchg eax, ecx ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80005f09ae : xchg eax, ecx ; add byte ptr [rax + 0x39], r9b ; ret
0xffffff80005bac9c : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b4d
0xffffff800066cf49 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7520
0xffffff8000391140 : xchg eax, ecx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80005964b5 : xchg eax, ecx ; add eax, 0xb60f0000 ; ret 0xb60f
0xffffff80008d3e67 : xchg eax, ecx ; add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800055656d : xchg eax, ecx ; add rax, rcx ; jmp rax
0xffffff800028684f : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0xffffff800067be8d : xchg eax, ecx ; add rsi, rcx ; jmp rsi
0xffffff8000888fc2 : xchg eax, ecx ; clc ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800082ce96 : xchg eax, ecx ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000356595 : xchg eax, ecx ; cld ; inc dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff800088275e : xchg eax, ecx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007760c1 : xchg eax, ecx ; cmp eax, dword ptr [rax] ; call 0xffffff80003987d6
0xffffff8000273abb : xchg eax, ecx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; jmp 0xffffff8000273a89
0xffffff800090189b : xchg eax, ecx ; fsin ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff800079ad0f : xchg eax, ecx ; jmp qword ptr [rbx]
0xffffff80003a61a9 : xchg eax, ecx ; jne 0xffffff80003a61b1 ; call 0xffffff80003923e5
0xffffff80005fe873 : xchg eax, ecx ; mov dh, 0x4d ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003683fb : xchg eax, ecx ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000448d25 : xchg eax, ecx ; mov eax, 0x3000000 ; sbb byte ptr [r9], bpl ; ret 0x5389
0xffffff800073bdc7 : xchg eax, ecx ; mov ecx, 0x3d8d48ff ; call qword ptr [rbx]
0xffffff8000580aa1 : xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff80008a821d : xchg eax, ecx ; nop ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075c99b : xchg eax, ecx ; pop rdi ; ret
0xffffff80005283d3 : xchg eax, ecx ; push 0x5d000001 ; ret
0xffffff80008bf85f : xchg eax, ecx ; push rax ; add dword ptr [rax], eax ; add bl, ch ; sbb eax, dword ptr [rcx - 0x42] ; ret 2
0xffffff800082910f : xchg eax, ecx ; pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1777
0xffffff8000828f6e : xchg eax, ecx ; pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff8000708414 : xchg eax, ecx ; pushfq ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000491b5c : xchg eax, ecx ; ret
0xffffff8000281ebb : xchg eax, ecx ; ret 0
0xffffff80004cbc80 : xchg eax, ecx ; ret 0x4a
0xffffff80007696df : xchg eax, ecx ; ret 0x4cff
0xffffff80004e4fb5 : xchg eax, ecx ; ret 0xb8ff
0xffffff8000708cdb : xchg eax, ecx ; ret 0xfffc
0xffffff8000468c36 : xchg eax, ecx ; rol byte ptr [rdx], 0 ; add bl, ch ; ret
0xffffff8000468756 : xchg eax, ecx ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; jmp 0xffffff8000468726
0xffffff800086593b : xchg eax, ecx ; sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c1597 : xchg eax, ecx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000694801 : xchg eax, ecx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80002d4ff4 : xchg eax, ecx ; sti ; dec dword ptr [rbx + rdi + 0x3d] ; ret 0x818e
0xffffff80004e4eab : xchg eax, ecx ; xchg eax, edx ; ret 0x41ff
0xffffff80003b711b : xchg eax, ecx ; xchg eax, esi ; cld ; inc dword ptr [rbp - 0x76868b40] ; ret
0xffffff8000663dca : xchg eax, ecx ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800082c218 : xchg eax, ecx ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff800025d9a0 : xchg eax, edi ; adc eax, 0x5dc03100 ; ret
0xffffff8000726f15 : xchg eax, edi ; adc eax, 0x8948ffd9 ; ret
0xffffff800062622e : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800036bcc4 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; push rsi ; ret
0xffffff80004438c5 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0xffffff800053d481 : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0xffffff800056ec8d : xchg eax, edi ; add rdx, rdi ; jmp rdx
0xffffff80002ba285 : xchg eax, edi ; clc ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800065e915 : xchg eax, edi ; clc ; ret 0x41ff
0xffffff8000310615 : xchg eax, edi ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ee108 : xchg eax, edi ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000b3b435 : xchg eax, edi ; cmp ch, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006773ec : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rsi - 0x3f], ah ; ret 0x6608
0xffffff800042cc95 : xchg eax, edi ; fisttp qword ptr [rax + rax] ; mov r10d, eax ; jmp 0xffffff800042ccf0
0xffffff800074e0f2 : xchg eax, edi ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0xffffff8000788d26 : xchg eax, edi ; mov bl, 0xff ; pop rbp ; ret
0xffffff8000b44941 : xchg eax, edi ; mov edi, 0x214d37ff ; retf 0xc148 ; jmp qword ptr [rax]
0xffffff800062e9dc : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x420f
0xffffff80006306a6 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xb78b
0xffffff800053205c : xchg eax, edi ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80003f248f : xchg eax, edi ; push rdi ; add byte ptr [rcx], dh ; shr al, 0xb7 ; ret
0xffffff80005720f0 : xchg eax, edi ; ret
0xffffff8000572a3c : xchg eax, edi ; ret 0x2041
0xffffff80004e2d75 : xchg eax, edi ; ret 0x27
0xffffff80006bd05d : xchg eax, edi ; ret 0x2f
0xffffff80003a4af8 : xchg eax, edi ; ret 0x3948
0xffffff80007698c2 : xchg eax, edi ; ret 0x45ff
0xffffff80007690aa : xchg eax, edi ; ret 0x48ff
0xffffff800059cef5 : xchg eax, edi ; ret 0x53
0xffffff80003a2f6d : xchg eax, edi ; ret 0x75
0xffffff80007690d9 : xchg eax, edi ; ret 0x83ff
0xffffff800057298c : xchg eax, edi ; ret 0x8d44
0xffffff800084318b : xchg eax, edi ; ret 0x9d8b
0xffffff8000642528 : xchg eax, edi ; ret 0xb60f
0xffffff800074becc : xchg eax, edi ; ret 0xbe
0xffffff8000577a73 : xchg eax, edi ; ret 0xc8ff
0xffffff80006dc06d : xchg eax, edi ; ret 0xf41
0xffffff80002c6d39 : xchg eax, edi ; ret 0xf44
0xffffff8000885205 : xchg eax, edi ; ret 0xfff8
0xffffff80006ddd07 : xchg eax, edi ; rol byte ptr [rcx + 0xf], 0x96 ; ret
0xffffff80006dcf32 : xchg eax, edi ; ror byte ptr [rdi], 0x96 ; ret 0x3944
0xffffff80006dcefa : xchg eax, edi ; ror dword ptr [rdi], 0x96 ; ret 0x3944
0xffffff800034d92d : xchg eax, edi ; sar byte ptr [rdx], 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0xffffff80006941db : xchg eax, edi ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff8000823985 : xchg eax, edi ; stosq qword ptr [rdi], rax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002505a5 : xchg eax, edi ; sub dl, byte ptr [rax + rax] ; pop rbp ; ret
0xffffff8000759ea5 : xchg eax, edi ; xchg eax, ecx ; ret
0xffffff80006760e4 : xchg eax, edi ; xor eax, dword ptr [rax] ; xor eax, eax ; call 0xffffff800029e858
0xffffff8000679c8a : xchg eax, edx ; adc al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000754f8a : xchg eax, edx ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005e7e6a : xchg eax, edx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007cb8a2 : xchg eax, edx ; add al, 0x2c ; add byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0x4689
0xffffff8000729e2e : xchg eax, edx ; add al, byte ptr [rax] ; add dh, dh ; ret
0xffffff8000549181 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bh ; pop r14 ; pop rbp ; ret
0xffffff800066cf34 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff800026787a : xchg eax, edx ; add dword ptr [rax], 0x5d ; ret
0xffffff80003910ed : xchg eax, edx ; add dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff80002f9346 : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7af0fd05], al ; ret
0xffffff80003d666a : xchg eax, edx ; add edi, esi ; ret 0
0xffffff800059b7c2 : xchg eax, edx ; add rdx, r10 ; jmp rdx
0xffffff80007b1d65 : xchg eax, edx ; and eax, 0x48b4800 ; ret 0xb60f
0xffffff8000356462 : xchg eax, edx ; cld ; inc dword ptr [rcx - 0x77] ; ret 0x8545
0xffffff8000882670 : xchg eax, edx ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003c7f86 : xchg eax, edx ; fnsave dword ptr [rbx] ; pop rbp ; ret
0xffffff800028a47a : xchg eax, edx ; jle 0xffffff800028a404 ; add byte ptr [rax + 0x39], cl ; ret 0x2f77
0xffffff80007bff1e : xchg eax, edx ; jmp qword ptr [rcx]
0xffffff8000366dc6 : xchg eax, edx ; js 0xffffff8000366dcf ; pop rbp ; ret
0xffffff8000273cda : xchg eax, edx ; lock add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff80007682aa : xchg eax, edx ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0xffffff80005f57c1 : xchg eax, edx ; loop 0xffffff80005f581e ; add byte ptr [rax], al ; je 0xffffff80005f57d2 ; pop rbp ; ret
0xffffff8000b3c59c : xchg eax, edx ; or byte ptr [rax + 1], cl ; ret 0x2948
0xffffff800069650a : xchg eax, edx ; out dx, al ; ret 0x48ff
0xffffff8000385c86 : xchg eax, edx ; pop rbp ; add al, ch ; ret 0xf084
0xffffff80003b197d : xchg eax, edx ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800087e542 : xchg eax, edx ; pop rsp ; add byte ptr es:[rcx + rcx*4 - 0x12], al ; call rax
0xffffff8000b4a4a0 : xchg eax, edx ; push rax ; push rcx ; ret 0x8a41
0xffffff8000255e5c : xchg eax, edx ; ret
0xffffff80004a133c : xchg eax, edx ; ret 0x2040
0xffffff800049363c : xchg eax, edx ; ret 0x2949
0xffffff80007e061e : xchg eax, edx ; ret 0x2a
0xffffff80004e4eac : xchg eax, edx ; ret 0x41ff
0xffffff80002f8cd2 : xchg eax, edx ; ret 0x64
0xffffff800026afce : xchg eax, edx ; ret 0x6c
0xffffff80008570d7 : xchg eax, edx ; ret 0x854d
0xffffff8000725a44 : xchg eax, edx ; ret 0x8b4c
0xffffff80003ab796 : xchg eax, edx ; ret 0xb60f
0xffffff8000415828 : xchg eax, edx ; ret 0xbe41
0xffffff80003d33e8 : xchg eax, edx ; ret 0xc085
0xffffff800049212f : xchg eax, edx ; ret 0xd231
0xffffff80008cbc6a : xchg eax, edx ; ret 0xd73
0xffffff8000769d63 : xchg eax, edx ; ret 0xe9ff
0xffffff80002bb4e2 : xchg eax, edx ; ret 0xff85
0xffffff800044bbe1 : xchg eax, edx ; rol byte ptr [rbp - 0x3c6bf037], 0xf ; xchg eax, ebp ; ret 0xc320
0xffffff80005bfa1c : xchg eax, edx ; ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff8000317140 : xchg eax, edx ; ror dword ptr [rdi], 0x93 ; ret
0xffffff800078d93a : xchg eax, edx ; sar bh, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80003c13f7 : xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x14c
0xffffff80007c112c : xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0xffffff8000357a54 : xchg eax, edx ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff800062182b : xchg eax, edx ; xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff8000b3c59a : xchg eax, edx ; xchg eax, esp ; xchg eax, edx ; or byte ptr [rax + 1], cl ; ret 0x2948
0xffffff8000663d97 : xchg eax, edx ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800064e870 : xchg eax, edx ; xor eax, 0xe8c03100 ; cld ; ret
0xffffff80008d172e : xchg eax, esi ; adc eax, 0x7894800 ; pop rbp ; ret
0xffffff80008d068e : xchg eax, esi ; adc rax, 0x7894800 ; pop rbp ; ret
0xffffff80004185cc : xchg eax, esi ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0xffffff80005f2532 : xchg eax, esi ; add byte ptr [r8 - 0x77], r9b ; fsubp st(0) ; ret
0xffffff80005cdde6 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff8000831356 : xchg eax, esi ; add dh, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007aebd6 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000610bdd : xchg eax, esi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0xffffff800078c4a0 : xchg eax, esi ; add rax, rsi ; jmp rax
0xffffff80008358ea : xchg eax, esi ; add rdi, rsi ; mov sil, al ; mov dl, al ; jmp rdi
0xffffff800035a347 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0xffffff80004d6686 : xchg eax, esi ; and ah, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008a9651 : xchg eax, esi ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b711c : xchg eax, esi ; cld ; inc dword ptr [rbp - 0x76868b40] ; ret
0xffffff800065e716 : xchg eax, esi ; cli ; ret 0x44ff
0xffffff80005cd8f6 : xchg eax, esi ; cwde ; add byte ptr [rax + 0xf], cl ; ret 0x81f6
0xffffff80002a228c : xchg eax, esi ; cwde ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80003d0120 : xchg eax, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000374a4c : xchg eax, esi ; fcos ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a6156 : xchg eax, esi ; in eax, dx ; ret 0xebff
0xffffff800025ebca : xchg eax, esi ; mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800034b6e6 : xchg eax, esi ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000395277 : xchg eax, esi ; pop rbp ; ret
0xffffff8000532784 : xchg eax, esi ; push -0x76fffffd ; ret
0xffffff8000586b04 : xchg eax, esi ; push -0x8ffffff ; ret 0
0xffffff80007a56dc : xchg eax, esi ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80004e6ca6 : xchg eax, esi ; ret
0xffffff80006a7ba6 : xchg eax, esi ; ret 0x10
0xffffff8000817ef6 : xchg eax, esi ; ret 0x2c
0xffffff8000697b49 : xchg eax, esi ; ret 0x31
0xffffff80006dcefd : xchg eax, esi ; ret 0x3944
0xffffff80006f7653 : xchg eax, esi ; ret 0x3b48
0xffffff80007699e2 : xchg eax, esi ; ret 0x44ff
0xffffff800058fe8c : xchg eax, esi ; ret 0x4beb
0xffffff80006f74e4 : xchg eax, esi ; ret 0x8d3b
0xffffff800058a5d0 : xchg eax, esi ; ret 0xb70f
0xffffff800030aa00 : xchg eax, esi ; ret 0xf44
0xffffff80005900d6 : xchg eax, esi ; ret 0xf739
0xffffff80007c1f16 : xchg eax, esi ; ret 0xffac
0xffffff8000546da6 : xchg eax, esi ; ret 0xffe4
0xffffff80007b0946 : xchg eax, esi ; ret 5
0xffffff80005df5d9 : xchg eax, esi ; sahf ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0xffffff800085cf4e : xchg eax, esi ; sbb r8, qword ptr [r8] ; mov qword ptr [rdi], rax ; pop rbp ; ret
0xffffff8000858e56 : xchg eax, esi ; shl byte ptr [rdi + 0x2d83f0ff], 0x3e ; ret
0xffffff8000694306 : xchg eax, esi ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80002afd08 : xchg eax, esi ; test byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; pop rbp ; ret
0xffffff80002afd28 : xchg eax, esi ; test byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; pop rbp ; ret
0xffffff80003a6f36 : xchg eax, esi ; test byte ptr [rbp], dh ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff800052f806 : xchg eax, esi ; test eax, 0x89480024 ; ret
0xffffff800054afaf : xchg eax, esi ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0xffffff800082bcee : xchg eax, esi ; xor byte ptr [rax], al ; pop rbp ; ret
0xffffff800048b446 : xchg eax, esi ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000268f33 : xchg eax, esp ; adc al, byte ptr [rax] ; xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000605fd0 : xchg eax, esp ; add byte ptr [r8 - 0x77], r9b ; fisttp word ptr [rax - 0x77] ; ret 0x1e8
0xffffff80005f0016 : xchg eax, esp ; add byte ptr [rax], al ; add bl, bh ; pop rbp ; ret
0xffffff80004a2be4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff8000282bfe : xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; ret
0xffffff8000611e53 : xchg eax, esp ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff800070afa4 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0xffffff80005ed964 : xchg eax, esp ; and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rsi + 0x31], ah ; ret 0xc166
0xffffff80007a6532 : xchg eax, esp ; and al, 0x8c ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x3175
0xffffff8000611e51 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0xffffff800070b936 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0xffffff8000706388 : xchg eax, esp ; and eax, 0x8948ffbd ; ret
0xffffff8000b4b14b : xchg eax, esp ; and qword ptr [rax], rax ; mov dword ptr [rax - 1], ecx ; ret 0x848d
0xffffff8000887f8d : xchg eax, esp ; clc ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000762da8 : xchg eax, esp ; cld ; ret 0x8bff
0xffffff80003e9c13 : xchg eax, esp ; cli ; push rsi ; ret
0xffffff8000762fa8 : xchg eax, esp ; cli ; ret 0x48ff
0xffffff80007c4063 : xchg eax, esp ; dec dword ptr [rax - 0x7f] ; ret
0xffffff80007c32f5 : xchg eax, esp ; dec dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000909928 : xchg eax, esp ; fbld tbyte ptr [rdx] ; add bl, ch ; ret 0x8348
0xffffff80003a853e : xchg eax, esp ; jb 0xffffff80003a8547 ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff80003a853e : xchg eax, esp ; jb 0xffffff80003a8549 ; mov qword ptr [rdx + rax*8], rcx ; pop rbp ; ret
0xffffff80003a8568 : xchg eax, esp ; jb 0xffffff80003a856f ; pop rbp ; ret
0xffffff800087e80f : xchg eax, esp ; je 0xffffff800087e865 ; mov esi, r13d ; mov rdx, r12 ; call rax
0xffffff80002fa86f : xchg eax, esp ; jg 0xffffff80002fa877 ; pop rbx ; pop rbp ; ret
0xffffff8000b4b510 : xchg eax, esp ; jp 0xffffff8000b4b519 ; push qword ptr [rdi + rsi*2 - 1] ; jmp rsi
0xffffff80007c3480 : xchg eax, esp ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80008066b8 : xchg eax, esp ; lodsq rax, qword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff80008399bd : xchg eax, esp ; mov byte ptr [rcx + rdi - 0x16], 0xf ; lahf ; ret
0xffffff800036f625 : xchg eax, esp ; or bl, byte ptr [rcx - 0x3ea57d87] ; ret
0xffffff800062b97c : xchg eax, esp ; or dword ptr [rdi], 0x5d ; ret
0xffffff80002d621b : xchg eax, esp ; pop rbx ; pop r12 ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800049aeeb : xchg eax, esp ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800086cb78 : xchg eax, esp ; popfq ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800076d3a8 : xchg eax, esp ; push rsi ; ret 0xfff
0xffffff8000891c6b : xchg eax, esp ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800026306f : xchg eax, esp ; ret
0xffffff80008e1049 : xchg eax, esp ; ret 0x11
0xffffff800040a04b : xchg eax, esp ; ret 0x1c74
0xffffff800033fbd8 : xchg eax, esp ; ret 0x2040
0xffffff80003c42cc : xchg eax, esp ; ret 0x2044
0xffffff8000718335 : xchg eax, esp ; ret 0x23c
0xffffff8000441134 : xchg eax, esp ; ret 0x23eb
0xffffff800031978d : xchg eax, esp ; ret 0x2eb
0xffffff800048ba63 : xchg eax, esp ; ret 0x30a8
0xffffff80002d508c : xchg eax, esp ; ret 0x3145
0xffffff80008399f2 : xchg eax, esp ; ret 0x3944
0xffffff80005a9462 : xchg eax, esp ; ret 0x394c
0xffffff800067617d : xchg eax, esp ; ret 0x3b4c
0xffffff80007f1114 : xchg eax, esp ; ret 0x3bb
0xffffff80003814cb : xchg eax, esp ; ret 0x3d83
0xffffff800043969e : xchg eax, esp ; ret 0x4566
0xffffff8000769bec : xchg eax, esp ; ret 0x45ff
0xffffff800076944c : xchg eax, esp ; ret 0x48ff
0xffffff800044020a : xchg eax, esp ; ret 0x4b8d
0xffffff800031646a : xchg eax, esp ; ret 0x4eb
0xffffff8000318ce4 : xchg eax, esp ; ret 0x59eb
0xffffff800058fe68 : xchg eax, esp ; ret 0x6feb
0xffffff8000301c85 : xchg eax, esp ; ret 0x738b
0xffffff800043b2d6 : xchg eax, esp ; ret 0x8341
0xffffff8000b40140 : xchg eax, esp ; ret 0x8348
0xffffff8000421823 : xchg eax, esp ; ret 0x844
0xffffff8000745648 : xchg eax, esp ; ret 0x8440
0xffffff8000312664 : xchg eax, esp ; ret 0x8545
0xffffff80008dd51b : xchg eax, esp ; ret 0x8548
0xffffff8000288a83 : xchg eax, esp ; ret 0x854d
0xffffff80005af6c8 : xchg eax, esp ; ret 0x8944
0xffffff800033e561 : xchg eax, esp ; ret 0x8b41
0xffffff80007bd00f : xchg eax, esp ; ret 0x8b44
0xffffff8000325c44 : xchg eax, esp ; ret 0x8b48
0xffffff800033e7ff : xchg eax, esp ; ret 0x8d8b
0xffffff8000317149 : xchg eax, esp ; ret 0x950f
0xffffff80006f7624 : xchg eax, esp ; ret 0x9589
0xffffff800034c772 : xchg eax, esp ; ret 0xa9
0xffffff80008d7302 : xchg eax, esp ; ret 0xb60f
0xffffff80005fc26d : xchg eax, esp ; ret 0xb70f
0xffffff8000474080 : xchg eax, esp ; ret 0xbd83
0xffffff8000704482 : xchg eax, esp ; ret 0xbe
0xffffff80002968f0 : xchg eax, esp ; ret 0xbe41
0xffffff8000791868 : xchg eax, esp ; ret 0xbf41
0xffffff80003d49ba : xchg eax, esp ; ret 0xc031
0xffffff8000388e1c : xchg eax, esp ; ret 0xc084
0xffffff80002a37fa : xchg eax, esp ; ret 0xc085
0xffffff800033e692 : xchg eax, esp ; ret 0xc109
0xffffff800069bcdd : xchg eax, esp ; ret 0xc184
0xffffff800027665b : xchg eax, esp ; ret 0xc189
0xffffff800061edfe : xchg eax, esp ; ret 0xc1f6
0xffffff8000307928 : xchg eax, esp ; ret 0xc1f7
0xffffff80003b1ebd : xchg eax, esp ; ret 0xc220
0xffffff800034ce9e : xchg eax, esp ; ret 0xc4f6
0xffffff800064e968 : xchg eax, esp ; ret 0xc789
0xffffff800047b913 : xchg eax, esp ; ret 0xc985
0xffffff8000260b24 : xchg eax, esp ; ret 0xca08
0xffffff80004bf02d : xchg eax, esp ; ret 0xca20
0xffffff80003ea16f : xchg eax, esp ; ret 0xce09
0xffffff8000792dd5 : xchg eax, esp ; ret 0xd89
0xffffff80004eb9ee : xchg eax, esp ; ret 0xda08
0xffffff800080e0b3 : xchg eax, esp ; ret 0xe280
0xffffff800043d165 : xchg eax, esp ; ret 0xe9c1
0xffffff80004460ef : xchg eax, esp ; ret 0xf40
0xffffff80004709b1 : xchg eax, esp ; ret 0xf44
0xffffff800034aa6e : xchg eax, esp ; ret 0xf45
0xffffff80002bd0f3 : xchg eax, esp ; ret 0xf641
0xffffff80008032ee : xchg eax, esp ; ret 0xf74
0xffffff800056b7e9 : xchg eax, esp ; ret 0xf883
0xffffff8000808410 : xchg eax, esp ; ret 0xfe83
0xffffff80005d7921 : xchg eax, esp ; ret 0xff25
0xffffff8000805448 : xchg eax, esp ; ret 0xff31
0xffffff80004a1f18 : xchg eax, esp ; ret 0xffde
0xffffff8000566238 : xchg eax, esp ; ret 0xffe2
0xffffff80004b6698 : xchg eax, esp ; ret 0xffed
0xffffff80005f49d4 : xchg eax, esp ; rol byte ptr [rax + rcx*4 - 0x16], 0xf6 ; shl byte ptr [rax], cl ; ret 0xb60f
0xffffff800074d49e : xchg eax, esp ; rol byte ptr [rbx + 0xf00d47d], 0x94 ; ret
0xffffff8000839866 : xchg eax, esp ; rol byte ptr [rcx + rdi - 0x17], 0xf ; lahf ; ret
0xffffff800059eabd : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xfc ; and byte ptr [rdi], cl ; lahf ; ret
0xffffff80003b667d : xchg eax, esp ; rol byte ptr [rcx - 0xa], 0xc4 ; add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x3941
0xffffff800080e04a : xchg eax, esp ; rol dword ptr [rax + 0x27501e1], 0x88 ; ret 0xc984
0xffffff8000854372 : xchg eax, esp ; rol dword ptr [rbp - 0x3c6af040], 0xf ; xchg eax, esp ; ret 0xbd83
0xffffff80004a012c : xchg eax, esp ; rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; ret 0x374
0xffffff8000683c85 : xchg eax, esp ; rol dword ptr [rcx + rdi - 0x32], 0xf ; lahf ; ret 0xca08
0xffffff80005560cc : xchg eax, esp ; rol dword ptr [rcx - 0x7d], 0xfc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0xffffff80002c72f4 : xchg eax, esp ; ror byte ptr [rax - 0x3f], 0xea ; or ah, byte ptr [rax] ; ret 0xb60f
0xffffff8000888fcb : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0xffffff80007d4f32 : xchg eax, esp ; ror byte ptr [rax], 0xc8 ; movzx eax, al ; pop rbp ; ret
0xffffff80005fc217 : xchg eax, esp ; ror byte ptr [rdi], 0x95 ; ret
0xffffff8000306094 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; fdivr st(7) ; ret
0xffffff800034b925 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80002b7608 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rol cl, 0xe0 ; add al, 0x5d ; ret
0xffffff800058ac21 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 1], 0x84 ; ret
0xffffff800058ae44 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; sar bh, 1 ; ret 0xdeb
0xffffff80007a159a : xchg eax, esp ; ror dword ptr [rax - 0x7d], 0xfe ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0xffffff800059d6ee : xchg eax, esp ; ror dword ptr [rax], 0xc1 ; movzx eax, cl ; pop rbp ; ret
0xffffff800083973a : xchg eax, esp ; ror dword ptr [rdi], 0x95 ; ret 0x8948
0xffffff800031267f : xchg eax, esp ; ror dword ptr [rdi], 0x95 ; ret 0xc120
0xffffff8000385f8f : xchg eax, esp ; ror dword ptr [rdx], 0x4d ; ret
0xffffff80002da3b0 : xchg eax, esp ; sbb byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3877
0xffffff8000570981 : xchg eax, esp ; shr bl, 2 ; xor eax, eax ; pop rbp ; ret
0xffffff80008d3653 : xchg eax, esp ; stc ; dec dword ptr [rax - 0x77] ; ret
0xffffff800089d53c : xchg eax, esp ; sti ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000299617 : xchg eax, esp ; str word ptr [rax + 0x63] ; ret
0xffffff80006c4a88 : xchg eax, esp ; str word ptr ss:[rax - 0x77] ; ret
0xffffff80002da450 : xchg eax, esp ; sub byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1b2
0xffffff800089bc9e : xchg eax, esp ; sub dword ptr [rax], eax ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80008df6d8 : xchg eax, esp ; sub ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075cfe8 : xchg eax, esp ; wait ; ret
0xffffff8000b3c59b : xchg eax, esp ; xchg eax, edx ; or byte ptr [rax + 1], cl ; ret 0x2948
0xffffff8000663aff : xchg eax, esp ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff80003736e0 : xchg eax, esp ; xor byte ptr [rcx - 0x3ea57d87], bl ; ret
0xffffff80007a560f : xchg eax, esp ; xor eax, dword ptr [rax] ; pop rbp ; ret
0xffffff800078d939 : xchg eax, r10d ; sar bh, 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80006825e4 : xchg eax, r8d ; call 0xffffff800029e854
0xffffff80008bc04c : xchg eax, r8d ; mov qword ptr [rsp], rax ; call r10
0xffffff80008bbffc : xchg eax, r8d ; mov r8, r9 ; mov r9, rax ; call r10
0xffffff8000882815 : xchg eax, r9d ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000300134 : xchg ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007f941d : xchg ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004f6927 : xchg ecx, ebp ; idiv edi ; inc dword ptr [rcx - 0x77] ; ret 0x894d
0xffffff8000855dc5 : xchg edi, ecx ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000505c1b : xchg edx, ecx ; add byte ptr [r8 - 0x77], r9b ; ret
0xffffff8000780155 : xchg edx, ecx ; or byte ptr [rax], al ; mov eax, dword ptr [rax + 0x2c] ; pop rbp ; ret
0xffffff800038b586 : xchg esi, edi ; call rsi
0xffffff8000353536 : xchg esp, esi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff80002a1719 : xchg esp, esp ; add byte ptr [rax], al ; add byte ptr [rbx], al ; pop r12 ; pop rbp ; ret
0xffffff80008d91ee : xchg esp, esp ; add dword ptr [rax], eax ; add byte ptr [rdx], al ; jne 0xffffff80008d9201 ; pop rbp ; ret
0xffffff80006db0a7 : xchg r8b, r13b ; ret 0x3ea
0xffffff80007b94bf : xchg rax, r13 ; dec dword ptr [rcx + 0x63] ; sbb byte ptr [rax + 1], r9b ; ret
0xffffff80005f09ad : xchg rax, r9 ; add byte ptr [rax + 0x39], r9b ; ret
0xffffff8000443a45 : xchg rax, rbp ; mov al, 0x74 ; or byte ptr [rax - 1], cl ; ret 0x3948
0xffffff80006760e3 : xchg rax, rdi ; xor eax, dword ptr [rax] ; xor eax, eax ; call 0xffffff800029e859
0xffffff8000385c85 : xchg rax, rdx ; pop rbp ; add al, ch ; ret 0xf084
0xffffff800038b585 : xchg rsi, rdi ; call rsi
0xffffff800038c535 : xlatb ; adc eax, 0x558b0056 ; ror byte ptr [rdi], 0xb6 ; ret 0x589
0xffffff8000895301 : xlatb ; add al, 0 ; add bh, dh ; ret
0xffffff80002fff48 : xlatb ; add byte ptr [rax], al ; add al, ch ; jmp rcx
0xffffff80002c3822 : xlatb ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x15], cl ; ret
0xffffff8000447299 : xlatb ; add byte ptr ss:[rax - 0x77], cl ; ret
0xffffff8000753a45 : xlatb ; and al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000852741 : xlatb ; and al, 0x29 ; add byte ptr [rcx - 0x73], al ; call rbx
0xffffff80002886be : xlatb ; and dword ptr [rax + 0x58], edi ; pop rbp ; ret
0xffffff80007f57bd : xlatb ; call 0xffffff7f89c757fa
0xffffff80006e12ba : xlatb ; call 0xffffff800030de44
0xffffff800066d8d1 : xlatb ; call 0xffffff8000529b73
0xffffff80007a5bb0 : xlatb ; call rax
0xffffff80003993f2 : xlatb ; call rsi
0xffffff800073d78d : xlatb ; cli ; cmp dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000610d85 : xlatb ; cmp al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000b476ce : xlatb ; cmp eax, 0x21492ffe ; fmul qword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80005d02d5 : xlatb ; cmp eax, edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007a74e5 : xlatb ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000518afa : xlatb ; dec dword ptr [rax + 0x63] ; ret
0xffffff800075d5bd : xlatb ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; jns 0xffffff800075d627 ; ret
0xffffff8000558fd6 : xlatb ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000807658 : xlatb ; idiv bh ; inc edi ; idiv bh ; jmp qword ptr [rcx]
0xffffff800058ae90 : xlatb ; idiv bh ; jmp rsp
0xffffff80007b3cd5 : xlatb ; in eax, 0x15 ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800088793d : xlatb ; int1 ; sub al, byte ptr [rax] ; pop rbp ; ret
0xffffff800046aac5 : xlatb ; jmp 0xffffff7fc3d0aacd
0xffffff800058fac1 : xlatb ; jmp rdi
0xffffff8000392add : xlatb ; jne 0xffffff8000392b1e ; leave ; ret
0xffffff8000393102 : xlatb ; jne 0xffffff8000393143 ; leave ; ret
0xffffff8000706555 : xlatb ; jno 0xffffff800070657e ; add byte ptr [rax + 0x39], cl ; ret
0xffffff800029e906 : xlatb ; js 0xffffff800029e90f ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca08
0xffffff8000525b0e : xlatb ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000709cdd : xlatb ; mov bh, 0x42 ; add byte ptr [rax - 0x75], cl ; or ecx, ebp ; ret
0xffffff80005b76e0 : xlatb ; mov eax, 0x16 ; jmp 0xffffff80005b76c1
0xffffff80004ab009 : xlatb ; mov eax, edi ; pop rbp ; ret
0xffffff8000594768 : xlatb ; mov r9, r11 ; jmp rdi
0xffffff80007aef4c : xlatb ; mov rax, rdi ; pop rbp ; ret
0xffffff800054ddb7 : xlatb ; mov rbx, rcx ; call r15
0xffffff80008f2f28 : xlatb ; mov rdi, r15 ; mov rsi, r14 ; call rcx
0xffffff80007cf061 : xlatb ; mov rdx, r13 ; call rax
0xffffff80007dd23d : xlatb ; mov rdx, r14 ; call rax
0xffffff80003a2a81 : xlatb ; out dx, al ; jb 0xffffff80003a2a8a ; pop rbp ; ret
0xffffff8000564f65 : xlatb ; out dx, al ; pop rbx ; add al, ch ; ret 0x8d2
0xffffff80004cad75 : xlatb ; out dx, eax ; add al, ch ; ret 0xec7c
0xffffff80008a7588 : xlatb ; pop rbp ; jmp rax
0xffffff80006d0568 : xlatb ; pop rbp ; ret
0xffffff80007db658 : xlatb ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800059fb75 : xlatb ; popfq ; add al, r13b ; ret 0xdf34
0xffffff80003919de : xlatb ; push qword ptr [rcx] ; fild dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0xffffff8000526dd0 : xlatb ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800060627b : xlatb ; push rcx ; add byte ptr [rax - 0x77], cl ; ret 0x5ae8
0xffffff80003991e4 : xlatb ; rdmsr ; mov dword ptr [rsi], eax ; mov dword ptr [rdi], edx ; xor eax, eax ; ret
0xffffff800038ae25 : xlatb ; ret
0xffffff8000765042 : xlatb ; ret 0x31ff
0xffffff80007652d3 : xlatb ; ret 0x48ff
0xffffff80006609f8 : xlatb ; ret 0x8bff
0xffffff8000765077 : xlatb ; ret 0xb8ff
0xffffff80006a1ed5 : xlatb ; ret 0xffbe
0xffffff8000789410 : xlatb ; sar bh, 0x89 ; ret
0xffffff8000612a02 : xlatb ; sbb eax, dword ptr [rax] ; xor eax, eax ; pop rbp ; ret
0xffffff800076eab9 : xlatb ; std ; add al, ch ; jle 0xffffff800076eb0c ; ret 0x83ff
0xffffff80006c3f45 : xlatb ; str word ptr [r8 - 0x77] ; ret
0xffffff80003ae6c5 : xlatb ; sub ebp, dword ptr [rdx] ; pop rbp ; ret
0xffffff80006273c7 : xlatb ; sub edi, ecx ; mov eax, edi ; pop rbp ; ret
0xffffff8000888885 : xlatb ; xor dl, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006df738 : xor ah, 0xff ; jmp qword ptr [rdx]
0xffffff80005d7621 : xor ah, bl ; dec dword ptr [rax + 1] ; ret
0xffffff80004e163f : xor ah, bl ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800090178a : xor ah, byte ptr [rcx + 0x23] ; add bl, ch ; add bh, bh ; ret
0xffffff80008c0e6a : xor ah, byte ptr [rdi] ; pop rbp ; ret
0xffffff8000498cd8 : xor ah, byte ptr [rsi - 0x76bbffb7] ; ret 0x8944
0xffffff8000276a80 : xor al, 0 ; add byte ptr [rax], al ; call 0xffffff8000292d76
0xffffff8000772518 : xor al, 0 ; add byte ptr [rax], al ; call 0xffffff8000399241
0xffffff80003a7dce : xor al, 0 ; add byte ptr [rax], al ; mov esi, eax ; call rbx
0xffffff80003a84d9 : xor al, 0 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80003a8506 : xor al, 0 ; add byte ptr [rax], al ; pop rbp ; jmp rcx
0xffffff8000794c86 : xor al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80006603a0 : xor al, 0 ; call 0xffffff800028e1b5
0xffffff80007f0029 : xor al, 0 ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; jmp rax
0xffffff8000743e0c : xor al, 0 ; nop ; mov edi, dword ptr [rbx] ; call rcx
0xffffff80007e7cde : xor al, 0 ; pop rbp ; ret
0xffffff80007f05de : xor al, 0 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800065e253 : xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff8000668a86 : xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff800065ee3c : xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a7
0xffffff80006632cb : xor al, 0 ; xor eax, eax ; mov edx, edi ; call 0xffffff800028e4a9
0xffffff800065e5a6 : xor al, 0 ; xor ebx, ebx ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff800066d0f2 : xor al, 0 ; xor ebx, ebx ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff800065e5e1 : xor al, 0 ; xor ebx, ebx ; xor eax, eax ; jmp 0xffffff800065e5b3
0xffffff800072dd78 : xor al, 0x10 ; pop rbp ; ret
0xffffff8000b4436e : xor al, 0x10 ; ret 0x48a
0xffffff8000679077 : xor al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000654c40 : xor al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800058dcb4 : xor al, 0x21 ; ret 0xd0f7
0xffffff80003992df : xor al, 0x24 ; mov qword ptr [rcx], rsi ; pop rdi ; ret
0xffffff800027c4e0 : xor al, 0x24 ; mov rsi, qword ptr [rbp - 0x40] ; jmp 0xffffff800027c560
0xffffff80007eec0d : xor al, 0x31 ; test byte ptr [rax - 0x77], 0xdf ; mov rdx, r14 ; call rax
0xffffff80007eda79 : xor al, 0x31 ; test byte ptr [rcx + rcx*4 - 9], 0x48 ; mov edx, ebx ; call rax
0xffffff80003a8daf : xor al, 0x38 ; pop rbp ; ret
0xffffff80008478ff : xor al, 0x39 ; ret
0xffffff8000658093 : xor al, 0x48 ; add byte ptr [rcx], dh ; shr al, 3 ; ret
0xffffff800025babf : xor al, 0x48 ; add esp, 0x50 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800072722d : xor al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80003a4240 : xor al, 0x48 ; cmpxchg dword ptr [rcx], edi ; pop rbp ; ret
0xffffff8000668798 : xor al, 0x4e ; add byte ptr [rcx + rcx*4 - 0x19], r9b ; call 0xffffff80007b4a69
0xffffff8000575397 : xor al, 0x56 ; add byte ptr [rbx + rcx*4 + 0xd], cl ; sysenter
0xffffff800082c6d6 : xor al, 0x5d ; ret
0xffffff8000439094 : xor al, 0x60 ; push rbx ; add al, ch ; ret
0xffffff80003a9df3 : xor al, 0x68 ; add bh, bh ; ret
0xffffff80002dfe47 : xor al, 0x72 ; add byte ptr [rax - 0x75], cl ; shr dword ptr [rax], 0x5d ; ret
0xffffff800076b708 : xor al, 0x73 ; ret 0x8bff
0xffffff8000569cd6 : xor al, 0x75 ; and ecx, dword ptr [rax - 1] ; ret 0x3948
0xffffff8000656c68 : xor al, 0x78 ; ret
0xffffff8000827344 : xor al, 0x78 ; sbb al, 0 ; mov rdi, r13 ; call rbx
0xffffff8000346de0 : xor al, 0x7b ; add al, ch ; pop rax ; ret 4
0xffffff8000772ac8 : xor al, 0x7c ; ret 0x49ff
0xffffff800072e602 : xor al, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80004f9fbf : xor al, 0x81 ; mov eax, esi ; pop rbp ; ret
0xffffff80003a6ec3 : xor al, 0x81 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003683bb : xor al, 0x81 ; xor eax, eax ; pop rbp ; ret
0xffffff80005c0cd1 : xor al, 0x82 ; add rsi, rdx ; jmp rsi
0xffffff800026254c : xor al, 0x89 ; cmp r14b, r8b ; cmp al, 1 ; pop rbp ; ret
0xffffff80004ba70d : xor al, 0x89 ; ret 0xca29
0xffffff8000336a6c : xor al, 0x89 ; ret 0xe281
0xffffff800060af71 : xor al, 0x89 ; ret 0xff25
0xffffff80002e2c63 : xor al, 0x8b ; push rbx ; cmp al, 0x21 ; ret 0xca81
0xffffff8000325d4c : xor al, 0x8b ; push rbx ; jl 0xffffff8000325d4d ; ret 0
0xffffff800067be8c : xor al, 0x91 ; add rsi, rcx ; jmp rsi
0xffffff8000654e68 : xor al, 0x96 ; ret
0xffffff80007f1790 : xor al, 0xa3 ; add rsi, rbx ; jmp rsi
0xffffff8000455342 : xor al, 0xa9 ; add rsi, rcx ; jmp rsi
0xffffff8000653878 : xor al, 0xa9 ; ret
0xffffff800075bf48 : xor al, 0xac ; ret
0xffffff80006024ef : xor al, 0xae ; jmp 0xffffff80006024b8
0xffffff800060311c : xor al, 0xae ; jmp 0xffffff80006030e5
0xffffff80008ba248 : xor al, 0xb0 ; movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rcx - 0x43] ; ret 2
0xffffff800057a03c : xor al, 0xb1 ; add rsi, rcx ; jmp rsi
0xffffff800060106b : xor al, 0xb2 ; add rsi, rdx ; jmp rsi
0xffffff800048da69 : xor al, 0xb6 ; add rsi, r14 ; jmp rsi
0xffffff80002a0a08 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0xffffff80007ff472 : xor al, 0xb9 ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0xffffff8000360543 : xor al, 0xb9 ; ret 2
0xffffff80007c375d : xor al, 0xbb ; and byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0xffffff80007c37be
0xffffff80007668a8 : xor al, 0xbb ; ret 0x48ff
0xffffff8000499d42 : xor al, 0xbf ; add rsi, r15 ; xor edi, edi ; jmp rsi
0xffffff80006c5513 : xor al, 0xc1 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000897078 : xor al, 0xc1 ; mov dword ptr [rcx + rax*8 + 4], edx ; mov al, 1 ; pop rbp ; ret
0xffffff80004196ff : xor al, 0xc2 ; jmp 0xffffff8000419715
0xffffff800081289d : xor al, 0xc8 ; mov al, 1 ; mov qword ptr [rdx], rsi ; pop rbp ; ret
0xffffff800049fa44 : xor al, 0xca ; mov rdx, r14 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff800066fc3c : xor al, 0xd2 ; dec dword ptr [rax - 0x7f] ; ret
0xffffff8000780347 : xor al, 0xe8 ; jae 0xffffff800078036b ; std ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000603867 : xor al, 0xe9 ; ret
0xffffff800030af08 : xor al, 0xe9 ; ret 0
0xffffff800080043c : xor al, 0xe9 ; ret 1
0xffffff80007e9fe8 : xor al, 0xe9 ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800056d6b4 : xor al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005aff5b : xor al, 0xf ; mov bh, 0x71 ; adc dh, dh ; ret
0xffffff800033c19e : xor al, 0xf6 ; ret
0xffffff80004713c2 : xor al, 0xf6 ; ret 0xf01
0xffffff8000316432 : xor al, 0xf7 ; ret 0
0xffffff80003efba8 : xor al, 0xfa ; push rsi ; ret
0xffffff8000294425 : xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085976f : xor al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80008a753d : xor al, 1 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff800072e59c : xor al, 1 ; pop rbp ; ret
0xffffff80002b0867 : xor al, 2 ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072e5ad : xor al, 2 ; pop rbp ; ret
0xffffff800077e086 : xor al, 4 ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800072dacc : xor al, 4 ; pop rbp ; ret
0xffffff80008aa765 : xor al, 8 ; add byte ptr [rax], al ; pop rbp ; jmp rax
0xffffff80008970d5 : xor al, 8 ; mov dword ptr [rdi + rcx], edx ; mov al, 1 ; pop rbp ; ret
0xffffff8000625400 : xor al, 8 ; mov rdi, r12 ; call r14
0xffffff800072e54c : xor al, 8 ; pop rbp ; ret
0xffffff80006600db : xor al, ah ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e4a9
0xffffff8000810dae : xor al, byte ptr [r8] ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000810e0d : xor al, byte ptr [r8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000810e28 : xor al, byte ptr [r8] ; pop rbp ; ret
0xffffff80008ec040 : xor al, byte ptr [rax + rcx*2 - 0x7d] ; ret 0x4803
0xffffff8000810daf : xor al, byte ptr [rax] ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000325cd1 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800039f402 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, eax ; call rbx
0xffffff8000548c8f : xor al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000810acb : xor al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000811acf : xor al, byte ptr [rax] ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800068981e : xor al, byte ptr [rax] ; jmp 0xffffff80006897e7
0xffffff8000811511 : xor al, byte ptr [rax] ; jne 0xffffff8000811524 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006825e0 : xor al, byte ptr [rax] ; lea r8, [rbp - 0x70] ; call 0xffffff800029e858
0xffffff800080d33d : xor al, byte ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff800080d2ba : xor al, byte ptr [rax] ; mov qword ptr [rcx + r8*8], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800081142f : xor al, byte ptr [rax] ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800080cc62 : xor al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007b3d90 : xor al, byte ptr [rax] ; pop rbp ; ret
0xffffff80008126e5 : xor al, byte ptr [rax] ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff8000813b7f : xor al, byte ptr [rax] ; sbb byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800081433f : xor al, byte ptr [rax] ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000814d3f : xor al, byte ptr [rax] ; xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000691f5a : xor al, byte ptr [rax] ; xor eax, eax ; mov rdx, rbx ; call 0xffffff800028e1b9
0xffffff800044c815 : xor al, byte ptr [rcx - 0x75] ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4072
0xffffff80004872f4 : xor al, byte ptr [rcx - 0x80] ; cmp al, 0x34 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0xffffff800072d97d : xor al, byte ptr [rcx] ; pop rbp ; ret
0xffffff80005446ea : xor al, byte ptr [rdx - 0x27] ; dec dword ptr [rax - 0x77] ; ret
0xffffff800072db8c : xor al, byte ptr [rdx] ; pop rbp ; ret
0xffffff8000811ace : xor al, byte ptr ss:[rax] ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000811b08 : xor al, byte ptr ss:[rax] ; pop rbp ; ret
0xffffff80006e8ba7 : xor al, ch ; adc edx, dword ptr [rax - 0x76b7fffa] ; ret
0xffffff80006e84a7 : xor al, ch ; adc edx, dword ptr [rdi - 0x76b7fffa] ; ret
0xffffff8000694065 : xor al, ch ; cdq ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800069714d : xor al, ch ; jge 0xffffff80006971c1 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff8000694a50 : xor al, ch ; jp 0xffffff80006949eb ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff800037340e : xor al, ch ; mov word ptr [rbx], ss ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80006960c0 : xor al, ch ; or bh, byte ptr [rcx - 3] ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff8000783cb1 : xor al, ch ; or edi, ebx ; cld ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005115ad : xor al, ch ; popfq ; ret 0xffdb
0xffffff8000784365 : xor al, ch ; push rbp ; fdivr st(4) ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000479db7 : xor al, ch ; ret
0xffffff80003e7c38 : xor al, ch ; ret 0xfffa
0xffffff80006952d7 : xor al, ch ; xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0xffffff80006941d8 : xor al, ch ; xchg eax, edi ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b49
0xffffff80006c5642 : xor al, cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800075490c : xor bh, ah ; ret
0xffffff80008d36be : xor bh, al ; dec dword ptr [rax - 0x77] ; ret
0xffffff800085eb38 : xor bh, bh ; nop ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80003bc0aa : xor bh, bh ; ret
0xffffff8000486e33 : xor bh, bh ; ret 0x1e8a
0xffffff8000603deb : xor bh, bh ; ret 0x8348
0xffffff800085e0ff : xor bh, bl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800074a261 : xor bh, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80006d56d0 : xor bh, byte ptr [rcx] ; ret
0xffffff80006a9125 : xor bh, byte ptr [rsi + 1] ; mov rdi, r14 ; call rax
0xffffff80003efd5b : xor bh, dl ; push rsi ; ret
0xffffff8000631840 : xor bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000726558 : xor bl, byte ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000700d6a : xor bl, byte ptr [rsi - 0x3fce001f] ; pop rbp ; ret
0xffffff800042965b : xor bl, ch ; ret 0x8348
0xffffff8000535678 : xor bl, dl ; dec dword ptr [rax - 0x77] ; ret
0xffffff800082ec38 : xor byte ptr [eax], al ; pop rbp ; ret
0xffffff800078cbca : xor byte ptr [r10], r8b ; jne 0xffffff800078cbd7 ; pop rbp ; ret
0xffffff800072da0b : xor byte ptr [r10], r8b ; pop rbp ; ret
0xffffff800072db6a : xor byte ptr [r11 + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80002d79a6 : xor byte ptr [r11 - 0x1377b], r9b ; call rcx
0xffffff80007e59da : xor byte ptr [r11 - 0x6af0ff07], al ; ret 0xf44
0xffffff80005d3e83 : xor byte ptr [r13 + rsi*2 - 9], sil ; ret 0
0xffffff8000634bbf : xor byte ptr [r14 - 0x7d], spl ; rcl byte ptr [rsi], 0x89 ; ret 0x8844
0xffffff800057ac57 : xor byte ptr [r15], r9b ; test dword ptr [rcx - 0xa000000], esp ; ret
0xffffff80005080bf : xor byte ptr [r8 + 0x39], cl ; ret 0x840f
0xffffff800075f9b0 : xor byte ptr [r8 + 0x39], r9b ; ret
0xffffff800072dbf2 : xor byte ptr [r8 + 0x5d000002], r8b ; ret
0xffffff800072dc0b : xor byte ptr [r8 + 0x5d], r8b ; ret
0xffffff8000494ddb : xor byte ptr [r8 - 0x75], r9b ; push rcx ; sbb byte ptr [rax + 0x39], cl ; ret 0xf48
0xffffff8000420a61 : xor byte ptr [r8 - 0x77], r9b ; ret 0xff48
0xffffff80007f5a42 : xor byte ptr [r8 - 0x7b], cl ; leave ; jne 0xffffff80007f5a38 ; pop rbp ; ret
0xffffff8000258831 : xor byte ptr [r8 - 0x7d], cl ; ret
0xffffff800082ca50 : xor byte ptr [r8 - 1], r9b ; ret
0xffffff8000830a88 : xor byte ptr [r8], al ; pop rbp ; ret
0xffffff800072d9fb : xor byte ptr [r8], r10b ; pop rbp ; ret
0xffffff800072da1b : xor byte ptr [r8], r12b ; pop rbp ; ret
0xffffff8000830a4e : xor byte ptr [r8], r8b ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800072d9db : xor byte ptr [r8], r9b ; pop rbp ; ret
0xffffff80005260c5 : xor byte ptr [r9 + 0x5dc03106], r9b ; ret
0xffffff80002d1222 : xor byte ptr [r9], r15b ; ret
0xffffff800072d9eb : xor byte ptr [r9], r8b ; pop rbp ; ret
0xffffff80002c5881 : xor byte ptr [rax + 0x29], cl ; ret
0xffffff800086af13 : xor byte ptr [rax + 0x31000005], 0xf6 ; pop rbp ; jmp rax
0xffffff80002810bc : xor byte ptr [rax + 0x39], cl ; ret
0xffffff8000698a40 : xor byte ptr [rax + 0x39], cl ; ret 0x1676
0xffffff800084a839 : xor byte ptr [rax + 0x39], cl ; ret 0x2174
0xffffff80005080c0 : xor byte ptr [rax + 0x39], cl ; ret 0x840f
0xffffff800075f327 : xor byte ptr [rax + 0x39], r9b ; ret
0xffffff80007719c5 : xor byte ptr [rax + 0x45c6c145], cl ; ret 0x4800
0xffffff800072dbf3 : xor byte ptr [rax + 0x5d000002], al ; ret
0xffffff800072dc0c : xor byte ptr [rax + 0x5d], al ; ret
0xffffff80008cd561 : xor byte ptr [rax + 0x63], cl ; ret
0xffffff8000630549 : xor byte ptr [rax + 0x63], cl ; ret 0x8d48
0xffffff80005cd7d2 : xor byte ptr [rax + 0x69], cl ; ret 0x3600
0xffffff80003e79c3 : xor byte ptr [rax + 0xf], cl ; ret
0xffffff800084daa9 : xor byte ptr [rax + rax + 0x75], cl ; or bh, bh ; ret 0xc031
0xffffff8000812915 : xor byte ptr [rax + rax*8 - 0xb7d68c], al ; ret
0xffffff80006f2bf4 : xor byte ptr [rax - 0x70f00001], al ; ret
0xffffff80008456e1 : xor byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0xff5d
0xffffff80006521e0 : xor byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff38 ; call qword ptr [rbx]
0xffffff8000651aba : xor byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff48 ; call qword ptr [r15]
0xffffff8000494ddc : xor byte ptr [rax - 0x75], cl ; push rcx ; sbb byte ptr [rax + 0x39], cl ; ret 0xf48
0xffffff8000716fdc : xor byte ptr [rax - 0x77683db], 0x5d ; ret
0xffffff80007b735b : xor byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002a83d8 : xor byte ptr [rax - 0x77], cl ; ret
0xffffff8000491866 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0xffffff8000420a62 : xor byte ptr [rax - 0x77], cl ; ret 0xff48
0xffffff800082ca03 : xor byte ptr [rax - 0x77], cl ; ret 0xff5d
0xffffff8000295a0a : xor byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0x4820
0xffffff80007f5a43 : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0xffffff80007f5a37 ; pop rbp ; ret
0xffffff8000258832 : xor byte ptr [rax - 0x7d], cl ; ret
0xffffff80005ab704 : xor byte ptr [rax - 0x7d], cl ; ret 0x3140
0xffffff80004f8fc7 : xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0xffffff80005a2b7e : xor byte ptr [rax - 0x7d], cl ; ret 0x4c40
0xffffff80008bd133 : xor byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0xffffff8000877770 : xor byte ptr [rax - 0x7f], cl ; ret 0x238
0xffffff8000493bae : xor byte ptr [rax - 1], cl ; ret
0xffffff8000880509 : xor byte ptr [rax - 1], cl ; ret 0x1f0f
0xffffff80003f0338 : xor byte ptr [rax - 1], cl ; ret 0x3948
0xffffff8000493bad : xor byte ptr [rax - 1], r9b ; ret
0xffffff800039a2ac : xor byte ptr [rax], 3 ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff800072da1c : xor byte ptr [rax], ah ; pop rbp ; ret
0xffffff8000525b0c : xor byte ptr [rax], ah ; xlatb ; lcall [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff80002cd876 : xor byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000742dbf : xor byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800029dd21 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rbp - 0x78] ; call r15
0xffffff80003a1714 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039a76e : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor rbp, rbp ; call rcx
0xffffff80007db654 : xor byte ptr [rax], al ; add byte ptr [rbp - 0x29], dh ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008e3e99 : xor byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff800082ee6d : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000830a4f : xor byte ptr [rax], al ; and byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff8000605056 : xor byte ptr [rax], al ; mov eax, dword ptr [rcx + rax*4] ; pop rbp ; ret
0xffffff80005f4df5 : xor byte ptr [rax], al ; pop rbp ; ret
0xffffff800082c1df : xor byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082e0bf : xor byte ptr [rax], al ; push rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800082b5bf : xor byte ptr [rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006a72a8 : xor byte ptr [rax], al ; xor edx, edx ; call 0xffffff80002d3cb7
0xffffff80008a3654 : xor byte ptr [rax], bh ; sub dword ptr [rax], eax ; pop rbp ; ret
0xffffff800072d9dc : xor byte ptr [rax], cl ; pop rbp ; ret
0xffffff80003cac3f : xor byte ptr [rax], cl ; ret
0xffffff800075c25c : xor byte ptr [rax], dh ; cmp eax, 0x67dbe800 ; ret
0xffffff800072d9fc : xor byte ptr [rax], dl ; pop rbp ; ret
0xffffff800083055e : xor byte ptr [rax], r8b ; pop rbp ; ret
0xffffff80004ba4d8 : xor byte ptr [rbp + 0x1a], 0xf7 ; ret
0xffffff80004887cc : xor byte ptr [rbp + 1], bl ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005322bf : xor byte ptr [rbp + 2], 0x5d ; ret
0xffffff800053a640 : xor byte ptr [rbp + 5], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff8000583c01 : xor byte ptr [rbp + 7], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80008cf4c8 : xor byte ptr [rbp + rdi - 1], dh ; ret
0xffffff80005d3e84 : xor byte ptr [rbp + rsi*2 - 9], dh ; ret 0
0xffffff8000387d1d : xor byte ptr [rbp - 0x37bbf00a], al ; mov eax, ecx ; pop rbp ; ret
0xffffff80002a69bd : xor byte ptr [rbp - 0x3d76b72e], al ; jle 0xffffff80002a69a9 ; pop rbp ; ret
0xffffff800055fe0c : xor byte ptr [rbp - 0x3d], bl ; lock add qword ptr [rdi + 0x10], rsi ; pop rbp ; ret
0xffffff8000605ed9 : xor byte ptr [rbp - 0x77], cl ; je 0xffffff8000605ec3 ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff8000678328 : xor byte ptr [rbp - 0x77], cl ; jl 0xffffff8000678313 ; cmp byte ptr [rax - 0x7d], cl ; ret
0xffffff8000511b8b : xor byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3e], 0x5d ; ret
0xffffff80002dbd5a : xor byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff800025d373 : xor byte ptr [rbx + 0x41], bl ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff800072d93a : xor byte ptr [rbx + 0x41], r11b ; pop rsi ; pop rbp ; ret
0xffffff80002d79a7 : xor byte ptr [rbx - 0x1377b], cl ; call rcx
0xffffff80002d8598 : xor byte ptr [rbx - 0x13f7b], cl ; call rcx
0xffffff80002d8027 : xor byte ptr [rbx - 0x1477b], cl ; call rcx
0xffffff80002d8026 : xor byte ptr [rbx - 0x1477b], r9b ; call rcx
0xffffff800074fde1 : xor byte ptr [rbx - 0x268a0140], al ; pop rbp ; ret
0xffffff80006d15ec : xor byte ptr [rbx - 0x40], dh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80007e59db : xor byte ptr [rbx - 0x6af0ff07], al ; ret 0xf44
0xffffff80004869df : xor byte ptr [rbx - 0x6bf0fe05], al ; ret
0xffffff80004709ac : xor byte ptr [rbx - 0x6bf0fe07], al ; ret 0xf44
0xffffff800036f780 : xor byte ptr [rbx - 0x7634f0e6], cl ; pop rbp ; mov al, 0x89 ; ret 0xc2c1
0xffffff8000851ec9 : xor byte ptr [rbx - 0x80], bh ; ret
0xffffff80004e4df4 : xor byte ptr [rbx], ah ; pop rdi ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0xffffff8000367166 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; and eax, 1 ; pop rbp ; ret
0xffffff80002886e7 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; mov dword ptr [rax + 0x58], ecx ; pop rbp ; ret
0xffffff80008d299f : xor byte ptr [rcx + 0x39], cl ; ret
0xffffff80005260c6 : xor byte ptr [rcx + 0x5dc03106], cl ; ret
0xffffff80007b9583 : xor byte ptr [rcx + 0x5e415bd8], cl ; pop rbp ; ret
0xffffff80006def07 : xor byte ptr [rcx + 1], al ; sbb byte ptr [r8 - 1], r9b ; ret
0xffffff800083dfc0 : xor byte ptr [rcx + rcx*4 - 9], cl ; mov edx, ebx ; call rcx
0xffffff80008cf955 : xor byte ptr [rcx + rdi - 1], dh ; ret
0xffffff80003736e1 : xor byte ptr [rcx - 0x3ea57d87], bl ; ret
0xffffff8000880a5a : xor byte ptr [rcx - 0x73], al ; push rdi ; dec dword ptr [rax - 0x7d] ; ret
0xffffff8000269374 : xor byte ptr [rcx - 0x75], al ; push rbp ; sub byte ptr [rcx], bh ; ret 0xc75
0xffffff80006b828c : xor byte ptr [rcx - 0x7ab20035], cl ; test byte ptr [rdi], 0x94 ; ret
0xffffff80004a6196 : xor byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0xffffff80006d0fc5 : xor byte ptr [rcx - 0x7d], cl ; ret
0xffffff8000491796 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4c2b
0xffffff80002dcb6c : xor byte ptr [rcx - 0x7f], al ; jmp rax
0xffffff80003bac07 : xor byte ptr [rcx], 0x83 ; loopne 0xffffff80003bac15 ; pop rbp ; ret
0xffffff80002bad73 : xor byte ptr [rcx], 0xc0 ; pop rbp ; ret
0xffffff800058dca1 : xor byte ptr [rcx], ah ; ret 0xd0f7
0xffffff800048b447 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80002a0ef5 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff80008a33c6 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; pop rbp ; ret
0xffffff800049d82e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff800074bdfd : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000824863 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff8000336208 : xor byte ptr [rcx], al ; call 0xffffff800074ac49
0xffffff800072d9ec : xor byte ptr [rcx], al ; pop rbp ; ret
0xffffff800074a3d8 : xor byte ptr [rcx], bh ; add byte ptr [rdi], cl ; mov dh, 0x14 ; sbb dword ptr [rcx], ecx ; ret 0x1488
0xffffff80002d1223 : xor byte ptr [rcx], bh ; ret
0xffffff80002673a7 : xor byte ptr [rcx], ch ; ret 0x8b49
0xffffff80005b8a6a : xor byte ptr [rcx], cl ; ret
0xffffff800039922b : xor byte ptr [rcx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0xffffff8000390088 : xor byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3d ; ret 0x5d18
0xffffff80008cf408 : xor byte ptr [rcx], r15b ; ret
0xffffff80003a24d0 : xor byte ptr [rdi + 0x5bfb0000], ah ; pop r14 ; pop rbp ; ret
0xffffff8000772c4c : xor byte ptr [rdi], bh ; ret 0x4cff
0xffffff800065288d : xor byte ptr [rdi], bl ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800083bbcf : xor byte ptr [rdi], cl ; add bh, bh ; dec dword ptr [rax + 0xf] ; ret 0x148
0xffffff8000737776 : xor byte ptr [rdi], cl ; mov bh, 0xc6 ; pop rbp ; ret
0xffffff80006d56cc : xor byte ptr [rdi], cl ; mov dh, 4 ; xor bh, byte ptr [rcx] ; ret
0xffffff80002b0fe0 : xor byte ptr [rdi], cl ; ret
0xffffff8000733697 : xor byte ptr [rdi], cl ; test byte ptr [rdi], dh ; ret
0xffffff800057ac58 : xor byte ptr [rdi], cl ; test dword ptr [rcx - 0xa000000], esp ; ret
0xffffff80005aff50 : xor byte ptr [rdi], cl ; test ecx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret
0xffffff800083d191 : xor byte ptr [rdi], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; ret
0xffffff80007580be : xor byte ptr [rdx + 0x20006453], bh ; xor ecx, ecx ; call rbx
0xffffff8000799a6a : xor byte ptr [rdx + 1], bh ; call rcx
0xffffff8000799a10 : xor byte ptr [rdx + 1], bh ; mov edi, r14d ; call rcx
0xffffff80007726da : xor byte ptr [rdx + rbx + 0x48], 0x81 ; ret
0xffffff8000742e3c : xor byte ptr [rdx - 0x4b], cl ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000855e4c : xor byte ptr [rdx - 0x76b80000], bl ; ret
0xffffff8000557151 : xor byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80007fef20 : xor byte ptr [rdx], al ; je 0xffffff80007fef2d ; xor eax, eax ; pop rbp ; ret
0xffffff800056bceb : xor byte ptr [rdx], al ; jmp 0xffffff800056bcff
0xffffff800078cbcb : xor byte ptr [rdx], al ; jne 0xffffff800078cbd6 ; pop rbp ; ret
0xffffff800072da0c : xor byte ptr [rdx], al ; pop rbp ; ret
0xffffff8000557150 : xor byte ptr [rdx], r12b ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800075c25d : xor byte ptr [rip + 0x67dbe800], bh ; ret
0xffffff800075c271 : xor byte ptr [rip + 0x6dc7e800], bh ; ret
0xffffff800055080c : xor byte ptr [rip - 0x76b80000], ch ; ret
0xffffff80006043ec : xor byte ptr [rip - 0x76beffe5], bh ; fmul dword ptr [rax - 0x77] ; ret
0xffffff8000b3d502 : xor byte ptr [rsi + 0x44], 0x29 ; ret 0xf281
0xffffff80005526f5 : xor byte ptr [rsi + 1], bh ; call rax
0xffffff80006aab1f : xor byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rax
0xffffff800070c9a3 : xor byte ptr [rsi - 0x77], ah ; ret 0x8b41
0xffffff800070c9a2 : xor byte ptr [rsi - 0x77], spl ; ret 0x8b41
0xffffff8000634bc0 : xor byte ptr [rsi - 0x7d], ah ; rcl byte ptr [rsi], 0x89 ; ret 0x8844
0xffffff800082ee6c : xor byte ptr gs:[rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff800082ebfe : xor byte ptr gs:[rax], al ; sub byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80007fb28a : xor ch, byte ptr [rcx - 0xb] ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000295a42 : xor ch, byte ptr [rcx] ; ret 0xe283
0xffffff80002f315a : xor ch, byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000743e0a : xor ch, byte ptr [rdx - 0x6f99ffcc] ; mov edi, dword ptr [rbx] ; call rcx
0xffffff80003fa8e3 : xor cl, byte ptr [rax + 0x63] ; ret
0xffffff80002fac44 : xor cl, byte ptr [rax + 0x69] ; ret 0xfc18
0xffffff800050effc : xor cl, byte ptr [rax + 0x6b] ; ret
0xffffff8000842562 : xor cl, byte ptr [rax - 0x3f] ; out dx, al ; or byte ptr [rax - 1], cl ; ret 0xc3ff
0xffffff80007b9a73 : xor cl, byte ptr [rax - 0x77] ; clc ; pop rbp ; ret
0xffffff80008bdc93 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4804
0xffffff80004c5eac : xor cl, byte ptr [rax - 0x7d] ; ret 0x4808
0xffffff8000295a0d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4820
0xffffff80008bca86 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0xffffff800061f1c2 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8308
0xffffff80007aa585 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8508
0xffffff80004b011b : xor cl, byte ptr [rax - 0x7d] ; ret 0x8518
0xffffff80005b237f : xor cl, byte ptr [rax - 1] ; ret
0xffffff80002644fa : xor cl, byte ptr [rax - 1] ; ret 0x8348
0xffffff800072db24 : xor cl, byte ptr [rax] ; pop rbp ; ret
0xffffff800031e15a : xor cl, byte ptr [rbx + rcx*4 + 0x6b] ; sbb byte ptr [rax - 0x7d], cl ; ret
0xffffff800076250a : xor cl, byte ptr [rbx] ; ret
0xffffff8000399203 : xor cl, byte ptr [rcx + 0x4568906] ; xor eax, eax ; ret
0xffffff80005c389c : xor cl, byte ptr [rcx + rcx*4 + 0x2c] ; ret 0x8b48
0xffffff8000696771 : xor cl, byte ptr [rcx + rcx*4 - 0x11] ; call 0xffffff8000392a46
0xffffff800028d0b3 : xor cl, byte ptr [rcx - 0x3e7cb7cf] ; adc byte ptr [rax - 0x7d], cl ; ret 0x8340
0xffffff80004ac90a : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4520
0xffffff8000326d4b : xor cl, dl ; shr byte ptr [rbp + 0x483374ba], 0x83 ; ret
0xffffff800071ea76 : xor dh, bh ; movzx eax, cx ; pop rbp ; ret
0xffffff80003ba508 : xor dh, bh ; ret 0
0xffffff800038dfb8 : xor dh, byte ptr [rax + rax + 0x48] ; mov eax, dword ptr [rax + 0x60] ; pop rbp ; ret
0xffffff80002f295a : xor dh, byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0xffffff800058e59a : xor dh, byte ptr [rdi] ; pop rcx ; add bl, ch ; or cl, byte ptr [rax - 0x7f] ; ret
0xffffff8000439a9c : xor dh, byte ptr [rsi] ; add byte ptr [rcx], ch ; ret
0xffffff8000273c3a : xor dh, cl ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbp ; ret
0xffffff8000299154 : xor dh, dh ; ret 0x7401
0xffffff80003ba522 : xor dh, dh ; ret 0x7402
0xffffff800061375d : xor dh, dh ; ret 0x7404
0xffffff800040c475 : xor dh, dh ; ret 0x7520
0xffffff80003efdfa : xor dil, dl ; push rsi ; ret
0xffffff80002f2fbb : xor dl, bh ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003b0fa6 : xor dl, byte ptr [rbx] ; push 0 ; pop rbp ; ret
0xffffff800066ff65 : xor dl, dl ; dec dword ptr [rax - 0x7f] ; ret
0xffffff800051bc2f : xor dword ptr [rax + 0x39], ecx ; ret 0xf48
0xffffff800072dbbc : xor dword ptr [rax + 0x5d], eax ; ret
0xffffff800087d0b6 : xor dword ptr [rax + 1], 0x80b80000 ; ret
0xffffff80003e72d0 : xor dword ptr [rax + 2], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0xffffff8000369cf7 : xor dword ptr [rax + rax + 0x5d], ebp ; ret
0xffffff80004152da : xor dword ptr [rax + rax + 0x6deb0000], 1 ; ret 0x562b
0xffffff800038e038 : xor dword ptr [rax + rax + 0xf], esi ; mov dh, 0x40 ; pop rbp ; ret
0xffffff8000271dfa : xor dword ptr [rax + rax], edi ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff8000271df9 : xor dword ptr [rax + rax], r15d ; add byte ptr [rax], al ; add bh, dh ; ret 0
0xffffff80002f8599 : xor dword ptr [rax - 0x1f3eb800], eax ; or al, 0x5d ; ret
0xffffff800077b4c1 : xor dword ptr [rax - 0x77], ecx ; ret
0xffffff8000597736 : xor dword ptr [rax - 0x78000000], 0x45 ; ret 0x838a
0xffffff8000553e4f : xor dword ptr [rax - 0x7d], ecx ; ret
0xffffff80004d2d90 : xor dword ptr [rax - 1], ecx ; ret
0xffffff800025c8ed : xor dword ptr [rax - 1], ecx ; ret 0x7a8d
0xffffff8000452a8c : xor dword ptr [rax - 1], ecx ; ret 0x8148
0xffffff80004a53a0 : xor dword ptr [rax - 1], ecx ; ret 0x8348
0xffffff800082d06e : xor dword ptr [rax], 0 ; pop rbp ; ret
0xffffff800040bade : xor dword ptr [rax], 0x5d ; ret
0xffffff800049d82d : xor dword ptr [rax], 0x5d000001 ; ret
0xffffff8000751c2a : xor dword ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80008180ef : xor dword ptr [rax], eax ; adc byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80006a977c : xor dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0xffffff800053f85a : xor dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne eax, ecx ; pop rbp ; ret
0xffffff800069cfb2 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xffffff800069cffe
0xffffff800026ac0b : xor dword ptr [rax], eax ; add cl, r13b ; ret
0xffffff8000697680 : xor dword ptr [rax], eax ; call 0xffffff800029e859
0xffffff800081629f : xor dword ptr [rax], eax ; cmp byte ptr [rbx + 0x41], bl ; pop rsi ; pop rbp ; ret
0xffffff80004f9bcf : xor dword ptr [rax], eax ; pop rbp ; ret
0xffffff80008202b5 : xor dword ptr [rax], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006a1ed0 : xor dword ptr [rax], eax ; xor eax, eax ; call 0xffffff800028e1b6
0xffffff800029980e : xor dword ptr [rax], ebp ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002991de : xor dword ptr [rax], ecx ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800072e5d9 : xor dword ptr [rax], ecx ; pop rbp ; ret
0xffffff80006b93af : xor dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800072d9ac : xor dword ptr [rax], edx ; pop rbp ; ret
0xffffff80002db460 : xor dword ptr [rax], esp ; mov rax, rdx ; pop rbp ; ret
0xffffff800072db9d : xor dword ptr [rax], esp ; pop rbp ; ret
0xffffff800029980d : xor dword ptr [rax], r13d ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff80002991dd : xor dword ptr [rax], r9d ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbp ; ret
0xffffff800084eebc : xor dword ptr [rbp - 0x77], ecx ; ret 0x894c
0xffffff80003a6f14 : xor dword ptr [rbp], 0xffffff8b ; add al, 0x81 ; pop rbp ; ret
0xffffff8000589429 : xor dword ptr [rbx + 0x41], ebx ; pop rsp ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000284e33 : xor dword ptr [rbx + rbp*8], eax ; add al, 0x8b ; push rsp ; xor dword ptr [rcx + rax], eax ; ret 0x894c
0xffffff800088203e : xor dword ptr [rbx], ebp ; add byte ptr [rax + 0x5b], bl ; pop r14 ; pop rbp ; ret
0xffffff8000536801 : xor dword ptr [rbx], edx ; call 0xffffff8000392a45
0xffffff8000767f0b : xor dword ptr [rcx + 0x37], ebp ; add al, ch ; sub al, 0xb1 ; ret 0x44ff
0xffffff8000284e39 : xor dword ptr [rcx + rax], eax ; ret 0x894c
0xffffff8000284cdf : xor dword ptr [rcx + rax], eax ; ret 0x8b48
0xffffff80004237eb : xor dword ptr [rcx - 0x15], edx ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000663e1e : xor dword ptr [rcx - 0x7f], eax ; call qword ptr [rax]
0xffffff800040aea3 : xor dword ptr [rcx], 0x4000001 ; jne 0xffffff800040aeb6 ; pop rbp ; ret
0xffffff800072e11c : xor dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80005d791c : xor dword ptr [rcx], ecx ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xff25
0xffffff80003851ed : xor dword ptr [rcx], ecx ; ret 0x1488
0xffffff8000622783 : xor dword ptr [rcx], edi ; bnd jns 0xffffff8000622779 ; mov dword ptr [rdi + 0x64], esi ; pop rbp ; ret
0xffffff80007d0c89 : xor dword ptr [rcx], esi ; test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebx ; call rax
0xffffff80003992e3 : xor dword ptr [rdi - 0x3d], ebx ; pop rdi ; mov eax, 0xe ; ret
0xffffff8000799ae9 : xor dword ptr [rdx + 1], edi ; call rax
0xffffff800072d9bc : xor dword ptr [rdx], eax ; pop rbp ; ret
0xffffff80008d8686 : xor dword ptr [rdx], edx ; add al, ch ; ret 0xf5a6
0xffffff800079c6ab : xor dword ptr [rip - 0x76b7fff9], eax ; ret
0xffffff80005efa97 : xor dword ptr [rsi + 0x5b000000], 0x41 ; pop rsi ; pop rbp ; ret
0xffffff800071700a : xor dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800090abc3 : xor dword ptr [rsi], edi ; sbb dword ptr [rax], eax ; ret
0xffffff8000654fd3 : xor dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005fb8c6 : xor eax, 0x1004de6 ; pop rbp ; ret
0xffffff80008deb93 : xor eax, 0x11e2b0 ; mov rdi, r13 ; call r15
0xffffff80008d64b3 : xor eax, 0x1250e8 ; mov rdi, r14 ; call rax
0xffffff80008a8c08 : xor eax, 0x14e997 ; mov rdi, rbx ; call r14
0xffffff800064aeed : xor eax, 0x158d4800 ; push rdx ; ret
0xffffff800064f8cc : xor eax, 0x158d4800 ; ret 0x3581
0xffffff800064fe92 : xor eax, 0x158d4800 ; ret 0x3583
0xffffff800064bfef : xor eax, 0x158d4800 ; ret 0x35b1
0xffffff8000859b9d : xor eax, 0x198af6 ; pop rbp ; jmp rax
0xffffff8000859b84 : xor eax, 0x198b0f ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80008270a3 : xor eax, 0x1c4816 ; mov rdi, r13 ; call rbx
0xffffff8000827183 : xor eax, 0x1c51ec ; mov rdi, r13 ; call rbx
0xffffff8000827343 : xor eax, 0x1c7834 ; mov rdi, r13 ; call rbx
0xffffff8000827263 : xor eax, 0x1c7902 ; mov rdi, r13 ; call rbx
0xffffff800075781b : xor eax, 0x1c8b4800 ; ret
0xffffff80008d7ab0 : xor eax, 0x25ee8b ; pop rbp ; jmp rax
0xffffff80008d7a80 : xor eax, 0x25eea3 ; pop rbp ; jmp rax
0xffffff800086df73 : xor eax, 0x2c8898 ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff8000865cf0 : xor eax, 0x2d0b0b ; pop rbp ; jmp rax
0xffffff8000865cd0 : xor eax, 0x2d0b2b ; pop rbp ; jmp rax
0xffffff8000865cb0 : xor eax, 0x2d0b4b ; pop rbp ; jmp rax
0xffffff80007fe243 : xor eax, 0x2e5ee0 ; call r14
0xffffff80007fe222 : xor eax, 0x2e5f01 ; call r12
0xffffff800065459b : xor eax, 0x3100486f ; shr al, 0xfa ; sahf ; ret
0xffffff80008126e2 : xor eax, 0x322b39 ; pop rbx ; pop r14 ; pop rbp ; jmp rax
0xffffff80007f05db : xor eax, 0x344208 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800076b57d : xor eax, 0x3732ce ; call 0xffffff80003986f8
0xffffff800076a259 : xor eax, 0x3745fa ; call 0xffffff8000398568
0xffffff80007760e7 : xor eax, 0x3b917c ; call 0xffffff80003987d8
0xffffff80007760d3 : xor eax, 0x3b91a0 ; call 0xffffff80003987d8
0xffffff80007760bf : xor eax, 0x3b91bc ; call 0xffffff80003987d8
0xffffff8000559b37 : xor eax, 0x415c415b ; pop rsi ; pop r15 ; pop rbp ; ret
0xffffff800075f1c7 : xor eax, 0x48000023 ; add esp, 0x10 ; pop rbp ; ret
0xffffff80003ba501 : xor eax, 0x480b9 ; add byte ptr [rdi], cl ; xor dh, bh ; ret 0
0xffffff800078e399 : xor eax, 0x48c03100 ; add esp, 0x10 ; pop rbp ; ret
0xffffff8000b3b7af : xor eax, 0x48ffffc1 ; mov dword ptr [rcx], eax ; pop rbp ; ret
0xffffff80008bdaf7 : xor eax, 0x48ffffdc ; add esp, 0x50 ; pop rbp ; ret
0xffffff80007b6f77 : xor eax, 0x48ffffe9 ; add esp, 0x10 ; pop rbp ; ret
0xffffff800054ff52 : xor eax, 0x588455 ; pop rbp ; ret
0xffffff800054ff4a : xor eax, 0x588459 ; pop rbp ; ret
0xffffff8000648caa : xor eax, 0x58d4c00 ; ret
0xffffff80004386f8 : xor eax, 0x5bc03100 ; pop r14 ; pop rbp ; ret
0xffffff80008d7457 : xor eax, 0x5d002601 ; ret
0xffffff80008ce197 : xor eax, 0x5d002692 ; ret
0xffffff8000864667 : xor eax, 0x5d00280f ; ret
0xffffff8000899c87 : xor eax, 0x5d0029d1 ; ret
0xffffff800088a457 : xor eax, 0x5d002ac7 ; ret
0xffffff800065648f : xor eax, 0x5d003b17 ; ret
0xffffff8000290ed7 : xor eax, 0x5d0085a4 ; ret
0xffffff80002f5c84 : xor eax, 0x5d5e415b ; ret
0xffffff8000656877 : xor eax, 0x7932e800 ; ret
0xffffff8000656821 : xor eax, 0x7988e800 ; ret
0xffffff8000337b27 : xor eax, 0x7c2824 ; pop rbp ; ret
0xffffff8000334a0a : xor eax, 0x7c5129 ; pop rbp ; ret
0xffffff80002be338 : xor eax, 0x7eb403 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80002fadc6 : xor eax, 0x7f8c4d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005cfd8e : xor eax, 0x814112eb ; call qword ptr [rax]
0xffffff800052874a : xor eax, 0x81da0944 ; ret 0x79b9
0xffffff800079b3d4 : xor eax, 0x83480034 ; ret
0xffffff8000744204 : xor eax, 0x8348003f ; ret 0x3108
0xffffff800073aad2 : xor eax, 0x8348ff9d ; ret
0xffffff800026269d : xor eax, 0x83d656 ; pop rbp ; ret
0xffffff80005451c7 : xor eax, 0x85000003 ; ror byte ptr [rdi], 0x85 ; ret
0xffffff8000670407 : xor eax, 0x89000417 ; ret
0xffffff800049b000 : xor eax, 0x89480000 ; ret
0xffffff80006c6bcf : xor eax, 0x8948000b ; ret 0x8548
0xffffff8000634b23 : xor eax, 0x89480018 ; ret
0xffffff80005351f2 : xor eax, 0x89480045 ; ret
0xffffff80005f673d : xor eax, 0x8948004e ; ret 0x98e8
0xffffff800038ee22 : xor eax, 0x894c0000 ; call 0xffffff7fc3657981
0xffffff8000287327 : xor eax, 0x89fffeee ; ret
0xffffff8000361cde : xor eax, 0x89ffffff ; ret 0xca29
0xffffff8000464607 : xor eax, 0x8b41ffe3 ; adc byte ptr [r8 - 1], r9b ; ret
0xffffff8000416f05 : xor eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0xffffff800061edfa : xor eax, 0x940fdb85 ; ret 0xc1f6
0xffffff8000448a87 : xor eax, 0xb0061bc ; add al, 0x8a ; pop rbp ; ret
0xffffff80007336c2 : xor eax, 0xb840f80 ; ret
0xffffff80002805aa : xor eax, 0xbe006c0d ; ret
0xffffff800055ab72 : xor eax, 0xc031ffbb ; pop rbp ; ret
0xffffff800065116a : xor eax, 0xd32fe800 ; ret
0xffffff80008d4ed4 : xor eax, 0xe8001266 ; ret
0xffffff800065ad83 : xor eax, 0xe8c03100 ; adc al, 0x37 ; ret
0xffffff8000657a93 : xor eax, 0xe8c03100 ; adc al, 0x67 ; ret
0xffffff800064e685 : xor eax, 0xe8c03100 ; adc bh, dh ; ret
0xffffff8000650685 : xor eax, 0xe8c03100 ; adc bl, dh ; ret
0xffffff8000650494 : xor eax, 0xe8c03100 ; add esp, eax ; ret
0xffffff800064e871 : xor eax, 0xe8c03100 ; cld ; ret
0xffffff8000652e5b : xor eax, 0xe8c03100 ; cmp al, 0xb6 ; ret
0xffffff800064fabc : xor eax, 0xe8c03100 ; fucomi st(1) ; ret
0xffffff8000655cb3 : xor eax, 0xe8c03100 ; in al, 0x87 ; ret
0xffffff800065982a : xor eax, 0xe8c03100 ; insd dword ptr [rdi], dx ; ret
0xffffff8000656a24 : xor eax, 0xe8c03100 ; jae 0xffffff8000656aac ; ret
0xffffff8000654e23 : xor eax, 0xe8c03100 ; je 0xffffff8000654dc7 ; ret
0xffffff8000654e22 : xor eax, 0xe8c03100 ; je 0xffffff8000654dc8 ; ret
0xffffff8000657d1a : xor eax, 0xe8c03100 ; jge 0xffffff8000657d8f ; ret
0xffffff800065321b : xor eax, 0xe8c03100 ; jl 0xffffff80006531db ; ret
0xffffff8000655926 : xor eax, 0xe8c03100 ; jno 0xffffff80006558bf ; ret
0xffffff8000655925 : xor eax, 0xe8c03100 ; jno 0xffffff80006558c0 ; ret
0xffffff8000659e37 : xor eax, 0xe8c03100 ; jo 0xffffff8000659e88 ; ret
0xffffff800065582d : xor eax, 0xe8c03100 ; jp 0xffffff80006557c4 ; ret
0xffffff800065031f : xor eax, 0xe8c03100 ; js 0xffffff800065030e ; ret
0xffffff8000652b2f : xor eax, 0xe8c03100 ; js 0xffffff8000652af3 ; ret
0xffffff80006572e3 : xor eax, 0xe8c03100 ; mov ah, 0x71 ; ret
0xffffff80006505e3 : xor eax, 0xe8c03100 ; mov ah, 0xde ; ret
0xffffff8000652ae0 : xor eax, 0xe8c03100 ; mov bh, 0xb9 ; ret
0xffffff800065b2e2 : xor eax, 0xe8c03100 ; mov ch, 0x31 ; ret
0xffffff8000652cf6 : xor eax, 0xe8c03100 ; mov cl, 0xb4 ; ret
0xffffff8000651b0c : xor eax, 0xe8c03100 ; mov ecx, ecx ; ret
0xffffff8000651af3 : xor eax, 0xe8c03100 ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; ret
0xffffff800065038b : xor eax, 0xe8c03100 ; or al, 0xe1 ; ret
0xffffff800065a6b1 : xor eax, 0xe8c03100 ; out 0x3d, al ; ret
0xffffff80006583b0 : xor eax, 0xe8c03100 ; out 0x60, eax ; ret
0xffffff80006579b1 : xor eax, 0xe8c03100 ; out 0x6a, al ; ret
0xffffff8000658a2d : xor eax, 0xe8c03100 ; push 0x5a ; ret
0xffffff8000653740 : xor eax, 0xe8c03100 ; push rdi ; lodsd eax, dword ptr [rsi] ; ret
0xffffff800065924b : xor eax, 0xe8c03100 ; push rdx ; ret
0xffffff80006567d5 : xor eax, 0xe8c03100 ; ret 0xc37c
0xffffff800065959a : xor eax, 0xe8c03100 ; std ; ret
0xffffff8000657e9c : xor eax, 0xe8c03100 ; sti ; ret
0xffffff8000654ded : xor eax, 0xe8c03100 ; stosb byte ptr [rdi], al ; xchg eax, esi ; ret
0xffffff8000659cff : xor eax, 0xe8c03100 ; test al, 0x44 ; ret
0xffffff800064fcef : xor eax, 0xe8c03100 ; test al, 0xe7 ; ret
0xffffff8000654e63 : xor eax, 0xe8c03100 ; xor al, 0x96 ; ret
0xffffff8000654287 : xor eax, 0xe9004d08 ; ret 8
0xffffff80004c67e8 : xor eax, 0xe95d0065 ; ret 0xffec
0xffffff80007c29d7 : xor eax, 0xe9ffffff ; ret
0xffffff80007fd01c : xor eax, 0xf54b9ee8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002883a7 : xor eax, 0xf6006823 ; ret
0xffffff8000716f6e : xor eax, 0xf8013c00 ; pop rbp ; ret
0xffffff8000716f8e : xor eax, 0xf801c400 ; pop rbp ; ret
0xffffff8000780ea2 : xor eax, 0xfd0d18e8 ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000789334 : xor eax, 0xfefeffb8 ; jmp qword ptr [rbx]
0xffffff8000505034 : xor eax, 1 ; add eax, ecx ; pop rbp ; ret
0xffffff80002bbecf : xor eax, 1 ; pop rbp ; ret
0xffffff800072e55c : xor eax, dword ptr [rax + 0x5d] ; ret
0xffffff800072e582 : xor eax, dword ptr [rax + 0x8c48348] ; pop rbx ; pop rbp ; ret
0xffffff80006b8331 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff80005a3143 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0xffffff80007f53e2 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0xffffff80007484d2 : xor eax, dword ptr [rax] ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d83
0xffffff80007f5f73 : xor eax, dword ptr [rax] ; call 0xffffff8000393048
0xffffff800074b398 : xor eax, dword ptr [rax] ; jg 0xffffff800074b3fe ; pop r14 ; pop rbp ; ret
0xffffff80006783e9 : xor eax, dword ptr [rax] ; mov rsi, rax ; call 0xffffff800029ab98
0xffffff80007a251e : xor eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000745050 : xor eax, dword ptr [rax] ; xor byte ptr [rbp + 5], 0x5b ; pop r14 ; pop rbp ; ret
0xffffff80006637d5 : xor eax, dword ptr [rax] ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff800067298c : xor eax, dword ptr [rax] ; xor eax, eax ; call 0xffffff800029e857
0xffffff800067d408 : xor eax, dword ptr [rax] ; xor eax, eax ; mov esi, ecx ; call 0xffffff800029e859
0xffffff80003bc084 : xor eax, dword ptr [rcx - 0x77] ; ret
0xffffff80008b7aa9 : xor eax, dword ptr [rcx] ; xor eax, eax ; pop rbp ; ret
0xffffff800086e5e8 : xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000289062 : xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0xffffff8000252c36 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0xffffff80007b1be6 : xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0xffffff800036ca3d : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0xffffff80004a2f5d : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0xffffff800029eb62 : xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0xffffff800050d5bf : xor eax, eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0xffffff800082a287 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp r8
0xffffff8000252a83 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002bacb8 : xor eax, eax ; and ecx, 7 ; cmovne eax, edx ; pop rbp ; ret
0xffffff80002c1f4a : xor eax, eax ; call 0xffffff800028e1b4
0xffffff800065e255 : xor eax, eax ; call 0xffffff800028e1b5
0xffffff8000279e0c : xor eax, eax ; call 0xffffff800028e1b8
0xffffff8000298005 : xor eax, eax ; call 0xffffff800028e1b9
0xffffff800055225e : xor eax, eax ; call 0xffffff800028e4a4
0xffffff800065e524 : xor eax, eax ; call 0xffffff800028e4a5
0xffffff80005d2860 : xor eax, eax ; call 0xffffff800028e4a9
0xffffff80004225c9 : xor eax, eax ; call 0xffffff800029e854
0xffffff80006723a7 : xor eax, eax ; call 0xffffff800029e855
0xffffff8000583b73 : xor eax, eax ; call 0xffffff800029e858
0xffffff80004a81cc : xor eax, eax ; call 0xffffff800029e859
0xffffff80007fed70 : xor eax, eax ; call 0xffffff80002eae49
0xffffff80002be9ae : xor eax, eax ; call 0xffffff800074ac44
0xffffff800027fc06 : xor eax, eax ; call 0xffffff800074ac48
0xffffff8000812509 : xor eax, eax ; call 0xffffff800080e764
0xffffff800081c607 : xor eax, eax ; call 0xffffff8000818824
0xffffff80008deed9 : xor eax, eax ; call 0xffffff80008edb18
0xffffff80003889a0 : xor eax, eax ; call 0xffffff80008edb19
0xffffff80002a6aec : xor eax, eax ; cmp ecx, 0 ; cmove eax, edx ; jmp 0xffffff80002a6b04
0xffffff800049f746 : xor eax, eax ; cmp ecx, edi ; cmovge eax, edx ; pop rbp ; ret
0xffffff8000366c97 : xor eax, eax ; cmp ecx, edx ; je 0xffffff8000366c87 ; pop rbp ; ret
0xffffff800083b16f : xor eax, eax ; cmp rcx, 0x10 ; jne 0xffffff800083b169 ; pop rbp ; ret
0xffffff8000829c2d : xor eax, eax ; cmp rdx, r8 ; jb 0xffffff8000829c18 ; pop rbp ; ret
0xffffff800026f1fa : xor eax, eax ; jmp 0xffffff800026f2f6
0xffffff800065e5e5 : xor eax, eax ; jmp 0xffffff800065e5af
0xffffff80007e9123 : xor eax, eax ; jmp 0xffffff80007e913f
0xffffff80008a0f7d : xor eax, eax ; jmp 0xffffff80008a0fa9
0xffffff800029d8c3 : xor eax, eax ; jmp rcx
0xffffff8000392faa : xor eax, eax ; leave ; ret
0xffffff800066f43b : xor eax, eax ; mov dword ptr [rbx + 0x14], eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80006e67f8 : xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; pop rbp ; ret
0xffffff80002a055c : xor eax, eax ; mov dword ptr [rsi], ecx ; pop rbp ; ret
0xffffff8000702579 : xor eax, eax ; mov ebx, ecx ; call 0xffffff800029e856
0xffffff800066c39e : xor eax, eax ; mov ecx, r14d ; call 0xffffff800028e4a8
0xffffff800065f8a7 : xor eax, eax ; mov edx, ebx ; call 0xffffff800028e4a7
0xffffff800067480d : xor eax, eax ; mov edx, ecx ; call 0xffffff800029e857
0xffffff80006632cd : xor eax, eax ; mov edx, edi ; call 0xffffff800028e4a7
0xffffff800065e4e7 : xor eax, eax ; mov edx, r12d ; call 0xffffff800028e4a8
0xffffff8000666891 : xor eax, eax ; mov edx, r14d ; call 0xffffff800028e4a8
0xffffff80007b1f87 : xor eax, eax ; mov edx, r15d ; call 0xffffff800028e1b7
0xffffff800065e4a7 : xor eax, eax ; mov edx, r15d ; call 0xffffff800028e4a8
0xffffff800067d40a : xor eax, eax ; mov esi, ecx ; call 0xffffff800029e857
0xffffff8000870ab1 : xor eax, eax ; mov esi, edx ; mov rdx, rax ; pop rbp ; jmp r9
0xffffff8000388227 : xor eax, eax ; mov esi, r14d ; call r15
0xffffff800066dc89 : xor eax, eax ; mov r8d, ebx ; call 0xffffff800028e4a8
0xffffff800082a1d8 : xor eax, eax ; mov rbx, r10 ; call rbx
0xffffff800042262c : xor eax, eax ; mov rdi, r12 ; call 0xffffff800029e857
0xffffff800042262b : xor eax, eax ; mov rdi, r12 ; call 0xffffff800029e858
0xffffff800042262a : xor eax, eax ; mov rdi, r12 ; call 0xffffff800029e859
0xffffff800038826c : xor eax, eax ; mov rdi, r14 ; call r15
0xffffff8000851882 : xor eax, eax ; mov rdi, r14 ; mov esi, ebx ; call 0xffffff80008edb19
0xffffff800065e90f : xor eax, eax ; mov rdi, r15 ; call 0xffffff800028e1b8
0xffffff80007b458f : xor eax, eax ; mov rdi, rbx ; call 0xffffff80007907d7
0xffffff80003518b8 : xor eax, eax ; mov rdi, rbx ; call 0xffffff80008edb17
0xffffff800065ecfc : xor eax, eax ; mov rdx, r12 ; call 0xffffff800028e1b8
0xffffff800066a368 : xor eax, eax ; mov rdx, r12 ; call 0xffffff800028e4a8
0xffffff80006636f7 : xor eax, eax ; mov rdx, r13 ; call 0xffffff800028e1b8
0xffffff8000669f0f : xor eax, eax ; mov rdx, r13 ; call 0xffffff800028e4a8
0xffffff8000451f92 : xor eax, eax ; mov rdx, r14 ; call 0xffffff800028e1b7
0xffffff8000781f29 : xor eax, eax ; mov rdx, r15 ; call 0xffffff800028e1b7
0xffffff800065f23c : xor eax, eax ; mov rdx, r15 ; call 0xffffff800028e1b8
0xffffff80005bc893 : xor eax, eax ; mov rdx, r15 ; call rbx
0xffffff8000691f5c : xor eax, eax ; mov rdx, rbx ; call 0xffffff800028e1b7
0xffffff8000662b40 : xor eax, eax ; mov rdx, rbx ; call 0xffffff800028e1b8
0xffffff8000669da8 : xor eax, eax ; mov rdx, rcx ; call 0xffffff800028e4a8
0xffffff800065ec7c : xor eax, eax ; mov rsi, r12 ; call 0xffffff800028e1b8
0xffffff8000829e88 : xor eax, eax ; mov rsi, r12 ; call r15
0xffffff800066366b : xor eax, eax ; mov rsi, r13 ; call 0xffffff800028e1b8
0xffffff80005025a4 : xor eax, eax ; mov rsi, r13 ; call 0xffffff800029e857
0xffffff8000502613 : xor eax, eax ; mov rsi, r13 ; mov edx, ebx ; call 0xffffff800029e859
0xffffff8000301f0d : xor eax, eax ; mov rsi, r14 ; call 0xffffff800028e1b7
0xffffff800065e994 : xor eax, eax ; mov rsi, r14 ; call 0xffffff800028e4a8
0xffffff80008838c2 : xor eax, eax ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff800088359f : xor eax, eax ; mov rsi, r14 ; mov rdx, rbx ; call rax
0xffffff800065f1c8 : xor eax, eax ; mov rsi, r15 ; call 0xffffff800028e1b8
0xffffff80008f5d1a : xor eax, eax ; mov rsi, r15 ; mov r9, r13 ; call rax
0xffffff800087f090 : xor eax, eax ; mov rsi, r15 ; mov rdx, r13 ; call rax
0xffffff8000301f26 : xor eax, eax ; mov rsi, rbx ; call 0xffffff800028e1b7
0xffffff8000662acd : xor eax, eax ; mov rsi, rbx ; call 0xffffff800028e1b8
0xffffff8000829d2d : xor eax, eax ; mov rsi, rbx ; call r15
0xffffff800087e8de : xor eax, eax ; mov rsi, rbx ; mov rdx, r13 ; call rax
0xffffff80008314a4 : xor eax, eax ; movsx eax, al ; pop rbp ; ret
0xffffff8000269820 : xor eax, eax ; movzx eax, al ; pop rbp ; ret
0xffffff8000488c60 : xor eax, eax ; movzx eax, al ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff8000563242 : xor eax, eax ; movzx eax, ax ; pop rbp ; ret
0xffffff80003923bf : xor eax, eax ; pop r9 ; ret
0xffffff800088d2ba : xor eax, eax ; pop rbp ; jmp rax
0xffffff800025a20d : xor eax, eax ; pop rbp ; ret
0xffffff800049e3f6 : xor eax, eax ; pop rbx ; pop r14 ; pop r15 ; pop rbp ; ret
0xffffff8000258bf1 : xor eax, eax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80005161d7 : xor eax, eax ; pop rbx ; pop rbp ; ret
0xffffff80003924b5 : xor eax, eax ; ret
0xffffff8000796197 : xor eax, eax ; test cl, 2 ; jne 0xffffff80007961a8 ; pop rbp ; ret
0xffffff8000366770 : xor eax, eax ; test cl, cl ; jne 0xffffff8000366767 ; pop rbp ; ret
0xffffff8000366827 : xor eax, eax ; test r8b, r8b ; jne 0xffffff80003667e8 ; pop rbp ; ret
0xffffff8000796146 : xor eax, eax ; test r9b, 2 ; jne 0xffffff8000796159 ; pop rbp ; ret
0xffffff80003a8bb6 : xor eax, eax ; xor edx, edx ; wrmsr ; pop rbp ; ret
0xffffff800029d8be : xor eax, eax ; xor esi, esi ; xor r8d, r8d ; jmp rcx
0xffffff80005ba8ac : xor eax, eax ; xor r9d, r9d ; call 0xffffff8000396b87
0xffffff800076b930 : xor eax, eax ; xor r9d, r9d ; call 0xffffff8000396b88
0xffffff80004a1d13 : xor eax, eax ; xor r9d, r9d ; call rax
0xffffff800049c8d2 : xor eax, eax ; xor r9d, r9d ; pop rbp ; jmp rax
0xffffff80006608fb : xor eax, ebx ; xor al, 0 ; xor eax, eax ; call 0xffffff800028e1b9
0xffffff80006c55e5 : xor eax, ecx ; dec dword ptr [rax - 0x77] ; ret
0xffffff80005c0b17 : xor eax, ecx ; pop rbp ; ret
0xffffff80002d3af5 : xor eax, edx ; pop rbp ; ret
0xffffff800049eaf8 : xor eax, esi ; pop rbp ; ret
0xffffff80004b3d5d : xor eax, r8d ; pop rbp ; ret
0xffffff800054d5ea : xor ebp, dword ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80003c7fc9 : xor ebp, dword ptr [rbp - 0x76b7ff90] ; ret
0xffffff800081be99 : xor ebp, dword ptr [rsi + 1] ; add byte ptr [rax - 0x77], cl ; ret
0xffffff800066c748 : xor ebp, ebp ; call 0xffffff800028e4a5
0xffffff80003993a4 : xor ebp, ebp ; call rbx
0xffffff800039a773 : xor ebp, ebp ; call rcx
0xffffff8000686ccc : xor ebp, ebp ; jmp 0xffffff8000686d97
0xffffff8000545f0c : xor ebp, ebp ; jmp rax
0xffffff80005512da : xor ebp, ebp ; mov dl, al ; jmp 0xffffff80005512ee
0xffffff800039a791 : xor ebp, ebp ; mov rsp, rsi ; call rdi
0xffffff800066d8cb : xor ebp, ebp ; xor esi, esi ; mov rdi, rdx ; call 0xffffff8000529b79
0xffffff80005877a5 : xor ebp, ecx ; ret
0xffffff80007fea48 : xor ebp, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004cfc6e : xor ebp, esp ; dec dword ptr [rcx + 0x5e415bd8] ; pop rbp ; ret
0xffffff8000656481 : xor ebx, dword ptr [rax] ; cmp eax, dword ptr [rax] ; pop rbp ; ret
0xffffff8000396156 : xor ebx, dword ptr [rbx + 0x41] ; pop rsi ; pop rbp ; ret
0xffffff8000699609 : xor ebx, dword ptr [rdi - 0x76b70015] ; ret
0xffffff80006a5745 : xor ebx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80004a1607 : xor ebx, ebp ; mov byte ptr [rax - 0x7c], 0xf6 ; je 0xffffff80004a1629 ; inc edx ; jmp 0xffffff80004a160e
0xffffff800027883b : xor ebx, ebx ; jmp 0xffffff800027888f
0xffffff80008952fe : xor ebx, ebx ; jmp 0xffffff80008957e4
0xffffff80008d5172 : xor ebx, ebx ; jmp 0xffffff80008d54d8
0xffffff80008881ae : xor ebx, ebx ; mov al, bl ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004937fb : xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800025d1b7 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80003a4989 : xor ebx, ebx ; syscall ; pop r11 ; pop rcx ; pop rax ; ret
0xffffff80003a48b8 : xor ebx, ebx ; sysenter
0xffffff80002ae892 : xor ebx, ebx ; test rax, rax ; je 0xffffff80002ae8a5 ; call rax
0xffffff800065e5a8 : xor ebx, ebx ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff800066d0f4 : xor ebx, ebx ; xor eax, eax ; call 0xffffff800028e4a7
0xffffff8000674792 : xor ebx, ebx ; xor eax, eax ; call 0xffffff800029e857
0xffffff800065e5e3 : xor ebx, ebx ; xor eax, eax ; jmp 0xffffff800065e5b1
0xffffff800067480b : xor ebx, ebx ; xor eax, eax ; mov edx, ecx ; call 0xffffff800029e859
0xffffff80003adbec : xor ebx, ebx ; xor ecx, ecx ; call 0xffffff80003a9ed6
0xffffff8000887ffa : xor ebx, ebx ; xor esi, esi ; call 0xffffff8000864246
0xffffff80007aae42 : xor ebx, ebx ; xor esi, esi ; call rax
0xffffff8000b3fa0b : xor ecx, dword ptr [rax + 0x31] ; ret 0x8d4c
0xffffff800041b426 : xor ecx, dword ptr [rax - 0x73] ; pop rbx ; add al, 0x75 ; ret
0xffffff8000674c54 : xor ecx, dword ptr [rax - 0x77] ; fucomip st(0) ; jrcxz 0xffffff8000674c90 ; ret 0xbbff
0xffffff800036b359 : xor ecx, dword ptr [rax - 0x77] ; ret 0x2148
0xffffff8000326d51 : xor ecx, dword ptr [rax - 0x7d] ; ret
0xffffff800082a96e : xor ecx, dword ptr [rax - 1] ; ret
0xffffff800050919e : xor ecx, dword ptr [rax - 1] ; ret 0x8148
0xffffff800053777e : xor ecx, dword ptr [rax - 1] ; ret 0x8348
0xffffff80005c9213 : xor ecx, dword ptr [rcx + rcx*4 - 9] ; call 0xffffff80005c5506
0xffffff80004c550f : xor ecx, dword ptr [rcx - 0x3f] ; jmp qword ptr [rax]
0xffffff80006c575c : xor ecx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002ae1fd : xor ecx, ecx ; call 0xffffff80002ca339
0xffffff80008ba245 : xor ecx, ecx ; call 0xffffff8000315289
0xffffff8000388890 : xor ecx, ecx ; call 0xffffff8000384b44
0xffffff800033967f : xor ecx, ecx ; call 0xffffff80003858e4
0xffffff80005ba8af : xor ecx, ecx ; call 0xffffff8000396b84
0xffffff800076b933 : xor ecx, ecx ; call 0xffffff8000396b85
0xffffff80007e303a : xor ecx, ecx ; call 0xffffff8000396b88
0xffffff80003adbee : xor ecx, ecx ; call 0xffffff80003a9ed4
0xffffff80007f8575 : xor ecx, ecx ; call 0xffffff80004cd169
0xffffff8000815072 : xor ecx, ecx ; call 0xffffff80008c12a4
0xffffff8000757b38 : xor ecx, ecx ; call r15
0xffffff80004a1d16 : xor ecx, ecx ; call rax
0xffffff800026715c : xor ecx, ecx ; call rbx
0xffffff800049162d : xor ecx, ecx ; jmp 0xffffff80004919c9
0xffffff80006bb6aa : xor ecx, ecx ; mov dl, al ; jmp 0xffffff80006bb6bf
0xffffff80002518e3 : xor ecx, ecx ; mov eax, ecx ; pop rbp ; ret
0xffffff80003a0b02 : xor ecx, ecx ; mov edi, ebx ; mov rsi, r12 ; call rax
0xffffff8000398da6 : xor ecx, ecx ; mov edi, ebx ; mov rsi, r15 ; call r12
0xffffff80007a5744 : xor ecx, ecx ; mov edi, r14d ; mov r8, rax ; call r15
0xffffff80002f7c37 : xor ecx, ecx ; mov qword ptr [rsi], rcx ; pop rbp ; ret
0xffffff800076f134 : xor ecx, ecx ; mov r14, rsi ; call 0xffffff8000396b88
0xffffff80006f0373 : xor ecx, ecx ; mov r8, r13 ; call 0xffffff80004fc587
0xffffff80006f0372 : xor ecx, ecx ; mov r8, r13 ; call 0xffffff80004fc588
0xffffff8000696504 : xor ecx, ecx ; mov r8, rbx ; call 0xffffff80002c53a8
0xffffff8000770ff4 : xor ecx, ecx ; mov rcx, r14 ; call 0xffffff8000396b88
0xffffff8000546b58 : xor ecx, ecx ; mov rdi, r14 ; call 0xffffff8000532e67
0xffffff800074f385 : xor ecx, ecx ; mov rdi, r15 ; mov edx, r14d ; call rax
0xffffff80003eee09 : xor ecx, ecx ; mov rdi, rbx ; call 0xffffff800044b0a7
0xffffff80007dab4f : xor ecx, ecx ; mov rdx, r12 ; call rax
0xffffff800076bbbd : xor ecx, ecx ; mov rdx, r14 ; call 0xffffff8000396b88
0xffffff8000772c84 : xor ecx, ecx ; mov rdx, r15 ; call 0xffffff8000396b88
0xffffff80007a498b : xor ecx, ecx ; mov rdx, rax ; pop rbp ; jmp r11
0xffffff800076ba83 : xor ecx, ecx ; mov rdx, rbx ; call 0xffffff8000396b88
0xffffff80004a1eaa : xor ecx, ecx ; mov rsi, r10 ; mov rdx, r10 ; pop rbp ; jmp rax
0xffffff80007723d6 : xor ecx, ecx ; mov rsi, r12 ; call 0xffffff8000396b88
0xffffff80007fa92a : xor ecx, ecx ; mov rsi, r13 ; call 0xffffff8000396b87
0xffffff800076ebaa : xor ecx, ecx ; mov rsi, r13 ; call 0xffffff8000396b88
0xffffff8000766da2 : xor ecx, ecx ; mov rsi, r15 ; call 0xffffff8000396b88
0xffffff800087e3ef : xor ecx, ecx ; mov rsi, rbx ; mov rdx, r14 ; call rax
0xffffff8000268ecb : xor ecx, ecx ; movzx eax, cl ; pop rbp ; ret
0xffffff8000359279 : xor ecx, ecx ; pop rbp ; jmp 0xffffff8000315575
0xffffff8000477a98 : xor ecx, ecx ; pop rbp ; jmp r9
0xffffff80003aefa3 : xor ecx, ecx ; pop rbp ; jmp rax
0xffffff800075a24b : xor ecx, ecx ; ret
0xffffff80005e046a : xor ecx, ecx ; sub eax, dword ptr [rdi + 0x18] ; cmovs eax, ecx ; pop rbp ; ret
0xffffff80002be9ab : xor ecx, ecx ; xor r8d, r8d ; call 0xffffff800074ac47
0xffffff80005bc890 : xor ecx, ecx ; xor r8d, r8d ; mov rdx, r15 ; call rbx
0xffffff800088d2b7 : xor ecx, ecx ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80004a1d10 : xor ecx, ecx ; xor r8d, r8d ; xor r9d, r9d ; call rax
0xffffff800049c8cf : xor ecx, ecx ; xor r8d, r8d ; xor r9d, r9d ; pop rbp ; jmp rax
0xffffff80005e5606 : xor ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800080dff2 : xor ecx, edi ; lock cmpxchg dword ptr [rsi], ecx ; jne 0xffffff800080dff9 ; pop rbp ; ret
0xffffff800065107b : xor ecx, edx ; ret
0xffffff800047ff17 : xor ecx, esi ; inc dword ptr [rbx - 0x70f0fe05] ; ret
0xffffff800036aff2 : xor edi, 1 ; call rax
0xffffff800038965b : xor edi, dword ptr [rcx] ; ret
0xffffff80002cfe51 : xor edi, edi ; call 0xffffff80002cb5d9
0xffffff800029a625 : xor edi, edi ; call qword ptr [rax]
0xffffff800026559c : xor edi, edi ; call rax
0xffffff8000803593 : xor edi, edi ; call rbx
0xffffff800068ea37 : xor edi, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027b6cf : xor edi, edi ; jmp 0xffffff800027b719
0xffffff80002d474f : xor edi, edi ; jmp 0xffffff80002d472d
0xffffff800067ec3b : xor edi, edi ; jmp rax
0xffffff800067f1eb : xor edi, edi ; jmp rcx
0xffffff8000499d47 : xor edi, edi ; jmp rsi
0xffffff80004489f4 : xor edi, edi ; mov eax, edi ; pop rbp ; ret
0xffffff80005d8378 : xor edi, edi ; mov esi, 1 ; call 0xffffff80007b4659
0xffffff80008266ce : xor edi, edi ; ret
0xffffff80008336e8 : xor edi, edi ; rol byte ptr [rbp + 0x481174f6], 0xff ; ret
0xffffff8000799c36 : xor edi, edi ; xor edx, edx ; mov rsi, qword ptr [rbp - 0x68] ; call rcx
0xffffff800039f0ce : xor edi, edi ; xor esi, esi ; call qword ptr [rax + 8]
0xffffff80003aefca : xor edi, edi ; xor esi, esi ; xor edx, edx ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff800078e7cb : xor edi, esp ; dec dword ptr [rax - 0x77] ; ret
0xffffff800027f1e9 : xor edx, dword ptr [rdi - 0x76b7fffb] ; ret
0xffffff80005d5557 : xor edx, eax ; dec dword ptr [rax - 0x77] ; ret
0xffffff800039a65a : xor edx, eax ; mov dword ptr [rsi], edx ; pop rbp ; ret
0xffffff80002f2eeb : xor edx, edi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80002eb087 : xor edx, edi ; inc dword ptr [rcx + 0x29] ; fisttp qword ptr [rax + 0x63] ; ret
0xffffff8000558d78 : xor edx, edx ; call 0xffffff8000289088
0xffffff80003983f8 : xor edx, edx ; call 0xffffff80002a46d4
0xffffff80004e163b : xor edx, edx ; call 0xffffff80002a46d9
0xffffff80006a449e : xor edx, edx ; call 0xffffff80002d3cb5
0xffffff800061c63b : xor edx, edx ; call 0xffffff80002d8924
0xffffff80006abce4 : xor edx, edx ; call 0xffffff80002d8925
0xffffff8000710dc1 : xor edx, edx ; call 0xffffff80004ccfd4
0xffffff80007dbc65 : xor edx, edx ; call 0xffffff800075df79
0xffffff8000749539 : xor edx, edx ; call qword ptr [rbx]
0xffffff8000266b28 : xor edx, edx ; call r14
0xffffff8000552759 : xor edx, edx ; call rax
0xffffff800084b721 : xor edx, edx ; div dword ptr [rdi + 0x24] ; mov eax, edx ; pop rbp ; ret
0xffffff800040c5e8 : xor edx, edx ; div r8 ; mov dword ptr [rsi + 0x70], edx ; pop rbp ; ret
0xffffff800084b73a : xor edx, edx ; div rcx ; mov eax, edx ; pop rbp ; ret
0xffffff8000606318 : xor edx, edx ; mov eax, edi ; div ecx ; mov eax, edx ; pop rbp ; ret
0xffffff80003a8c3a : xor edx, edx ; mov eax, esi ; wrmsr ; pop rbp ; ret
0xffffff80006b0ee5 : xor edx, edx ; mov rdi, r14 ; call 0xffffff80002d8928
0xffffff800051eaf9 : xor edx, edx ; mov rdi, r14 ; call rax
0xffffff80008aa156 : xor edx, edx ; mov rdi, r14 ; mov rsi, rax ; call r12
0xffffff800025c6c0 : xor edx, edx ; mov rdi, r15 ; call 0xffffff80002d8927
0xffffff800044844a : xor edx, edx ; mov rdi, rbx ; call 0xffffff80002a46d7
0xffffff80006cc67a : xor edx, edx ; mov rdi, rbx ; call 0xffffff80002d8927
0xffffff80006b61e0 : xor edx, edx ; mov rdi, rbx ; call 0xffffff80002d8928
0xffffff800085a12b : xor edx, edx ; mov rdi, rbx ; mov rsi, rax ; call r15
0xffffff8000799c67 : xor edx, edx ; mov rsi, qword ptr [rbp - 0x68] ; call rax
0xffffff8000799c38 : xor edx, edx ; mov rsi, qword ptr [rbp - 0x68] ; call rcx
0xffffff80006a249e : xor edx, edx ; mov rsi, r14 ; call 0xffffff80002c36c8
0xffffff80005548fd : xor edx, edx ; mov rsi, r14 ; call r12
0xffffff80005526a4 : xor edx, edx ; mov rsi, rax ; call rcx
0xffffff80006a1fee : xor edx, edx ; mov rsi, rax ; pop rbp ; jmp 0xffffff80002c36c9
0xffffff80008a9a1d : xor edx, edx ; mov rsi, rax ; pop rbp ; jmp rcx
0xffffff80006a256d : xor edx, edx ; mov rsi, rbx ; call 0xffffff80002c36c8
0xffffff80003384b3 : xor edx, edx ; pop rbp ; jmp 0xffffff80002a46d5
0xffffff800089a42b : xor edx, edx ; pop rbp ; jmp r9
0xffffff800038b265 : xor edx, edx ; wrmsr ; pop rbp ; ret
0xffffff800038888e : xor edx, edx ; xor ecx, ecx ; call 0xffffff8000384b46
0xffffff800033967d : xor edx, edx ; xor ecx, ecx ; call 0xffffff80003858e6
0xffffff800026715a : xor edx, edx ; xor ecx, ecx ; call rbx
0xffffff80003a0b00 : xor edx, edx ; xor ecx, ecx ; mov edi, ebx ; mov rsi, r12 ; call rax
0xffffff80003aefce : xor edx, edx ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff80002be9a9 : xor edx, edx ; xor ecx, ecx ; xor r8d, r8d ; call 0xffffff800074ac49
0xffffff80003c1ca0 : xor esi, dword ptr [rax + rax + 0x29] ; ret 0xaf0f
0xffffff800036b357 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x77] ; ret 0x2148
0xffffff800036b355 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x77] ; ret 0x2148
0xffffff800036b353 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x77] ; ret 0x2148
0xffffff800050f9a3 : xor esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5e ; pop rbp ; ret
0xffffff80007edfa8 : xor esi, dword ptr [rcx] ; test byte ptr [rcx + rcx*4 - 9], 0x4c ; mov edx, edi ; call rax
0xffffff8000656876 : xor esi, dword ptr [rip + 0x7932e800] ; ret
0xffffff8000656820 : xor esi, dword ptr [rip + 0x7988e800] ; ret
0xffffff80006567d4 : xor esi, dword ptr [rip - 0x173fcf00] ; ret 0xc37c
0xffffff800030beab : xor esi, edi ; clc ; dec dword ptr [rax - 0x7d] ; ret
0xffffff800087ae97 : xor esi, esi ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0xffffff80004e642b : xor esi, esi ; call 0xffffff800010e0d5
0xffffff80002e8bfa : xor esi, esi ; call 0xffffff80002d4ef4
0xffffff80003bba9c : xor esi, esi ; call 0xffffff800036b469
0xffffff8000634d73 : xor esi, esi ; call 0xffffff8000551034
0xffffff8000737bbd : xor esi, esi ; call 0xffffff80007379a9
0xffffff8000887ffc : xor esi, esi ; call 0xffffff8000864244
0xffffff80003a8001 : xor esi, esi ; call qword ptr [rax + 0x10]
0xffffff800039f0d0 : xor esi, esi ; call qword ptr [rax + 8]
0xffffff8000822915 : xor esi, esi ; call r15
0xffffff800029c7f7 : xor esi, esi ; call rax
0xffffff80007ab532 : xor esi, esi ; call rcx
0xffffff80008d305e : xor esi, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006aaf0c : xor esi, esi ; jmp 0xffffff80006aaf2b
0xffffff80003b6430 : xor esi, esi ; jmp rax
0xffffff80005197c3 : xor esi, esi ; jmp rcx
0xffffff800080ff2f : xor esi, esi ; mov al, r14b ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80004cdd58 : xor esi, esi ; mov eax, r14d ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007ab8f5 : xor esi, esi ; mov edi, ebx ; call rax
0xffffff80007aaf10 : xor esi, esi ; mov edi, r12d ; call rax
0xffffff80007ac521 : xor esi, esi ; mov edi, r13d ; call rax
0xffffff80007ab1f2 : xor esi, esi ; mov edi, r14d ; call rcx
0xffffff8000571e4e : xor esi, esi ; mov edx, 0x10 ; call 0xffffff800010e0d9
0xffffff80002671d1 : xor esi, esi ; mov edx, 0x28 ; call r15
0xffffff8000266c1a : xor esi, esi ; mov edx, 8 ; call r14
0xffffff8000267130 : xor esi, esi ; mov edx, 8 ; call r15
0xffffff800081131d : xor esi, esi ; mov edx, eax ; pop rbp ; jmp rcx
0xffffff800068e613 : xor esi, esi ; mov qword ptr [rbp - 0x80], rdi ; call rax
0xffffff80007acb20 : xor esi, esi ; mov r15, rdx ; call rax
0xffffff80005f1208 : xor esi, esi ; mov rax, r14 ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff80007d611f : xor esi, esi ; mov rbx, rdi ; call rax
0xffffff80002672b7 : xor esi, esi ; mov rcx, r14 ; call qword ptr [rbx]
0xffffff800068e28b : xor esi, esi ; mov rdi, qword ptr [rbp - 0x80] ; mov rdx, rbx ; call rax
0xffffff8000708cd5 : xor esi, esi ; mov rdi, r12 ; call 0xffffff80006d4f77
0xffffff80007d8f85 : xor esi, esi ; mov rdi, r12 ; call 0xffffff80007b51f7
0xffffff80005c27e2 : xor esi, esi ; mov rdi, r12 ; call rax
0xffffff80004e4601 : xor esi, esi ; mov rdi, r12 ; mov rdx, qword ptr [rbp + 0x28] ; call rax
0xffffff800064ab66 : xor esi, esi ; mov rdi, r12 ; mov rdx, r13 ; call rax
0xffffff80007c5699 : xor esi, esi ; mov rdi, r12 ; mov rdx, r13 ; call rcx
0xffffff800076ac37 : xor esi, esi ; mov rdi, r12 ; mov rdx, r14 ; call rax
0xffffff8000621aa9 : xor esi, esi ; mov rdi, r12 ; mov rdx, r15 ; call rax
0xffffff80005dca10 : xor esi, esi ; mov rdi, r12 ; mov rdx, rbx ; call rax
0xffffff80006ad895 : xor esi, esi ; mov rdi, r13 ; call 0xffffff80006a9b87
0xffffff80005c2655 : xor esi, esi ; mov rdi, r13 ; call rax
0xffffff800076a5f4 : xor esi, esi ; mov rdi, r13 ; mov qword ptr [rbp - 0x50], rdx ; call rax
0xffffff800076b295 : xor esi, esi ; mov rdi, r13 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff800076a716 : xor esi, esi ; mov rdi, r13 ; mov rdx, qword ptr [rbp - 0x50] ; call rax
0xffffff80006423a5 : xor esi, esi ; mov rdi, r13 ; mov rdx, r12 ; call rax
0xffffff8000646444 : xor esi, esi ; mov rdi, r13 ; mov rdx, r15 ; call rax
0xffffff80007c92bc : xor esi, esi ; mov rdi, r13 ; mov rdx, r8 ; call rcx
0xffffff80008cd7b7 : xor esi, esi ; mov rdi, r13 ; mov rdx, rax ; call r15
0xffffff800062bb68 : xor esi, esi ; mov rdi, r13 ; mov rdx, rbx ; call rax
0xffffff80007d0fdf : xor esi, esi ; mov rdi, r13 ; mov rdx, rbx ; call rcx
0xffffff8000546bb1 : xor esi, esi ; mov rdi, r14 ; call 0xffffff8000532e67
0xffffff8000554dcf : xor esi, esi ; mov rdi, r14 ; call 0xffffff8000551037
0xffffff800054ceec : xor esi, esi ; mov rdi, r14 ; call rax
0xffffff80005ee516 : xor esi, esi ; mov rdi, r14 ; mov qword ptr [rbp - 0x40], rdx ; call rax
0xffffff80005ee5f2 : xor esi, esi ; mov rdi, r14 ; mov rdx, qword ptr [rbp - 0x40] ; call rax
0xffffff8000557bf4 : xor esi, esi ; mov rdi, r14 ; mov rdx, r12 ; call rax
0xffffff800076a11d : xor esi, esi ; mov rdi, r14 ; mov rdx, r13 ; call rax
0xffffff800054d702 : xor esi, esi ; mov rdi, r14 ; mov rdx, r15 ; call rax
0xffffff800054cdd0 : xor esi, esi ; mov rdi, r14 ; mov rdx, rbx ; call rax
0xffffff800060cdde : xor esi, esi ; mov rdi, r15 ; call 0xffffff8000529007
0xffffff800054f8ee : xor esi, esi ; mov rdi, r15 ; call rax
0xffffff800054d41a : xor esi, esi ; mov rdi, r15 ; mov rdx, r12 ; call rax
0xffffff80006052aa : xor esi, esi ; mov rdi, r15 ; mov rdx, r13 ; call rax
0xffffff800064cfc8 : xor esi, esi ; mov rdi, r15 ; mov rdx, r14 ; call rax
0xffffff800054c159 : xor esi, esi ; mov rdi, r15 ; mov rdx, rbx ; call rax
0xffffff800082cc34 : xor esi, esi ; mov rdi, rax ; pop rbp ; jmp rcx
0xffffff800054bf99 : xor esi, esi ; mov rdi, rbx ; call r15
0xffffff8000529ba8 : xor esi, esi ; mov rdi, rbx ; call rax
0xffffff80005c17a1 : xor esi, esi ; mov rdi, rbx ; call rcx
0xffffff80007cf5fc : xor esi, esi ; mov rdi, rbx ; mov rdx, qword ptr [rbp - 0x48] ; call rax
0xffffff800064723e : xor esi, esi ; mov rdi, rbx ; mov rdx, qword ptr [rbp - 0x80] ; call rax
0xffffff80005ed3d0 : xor esi, esi ; mov rdi, rbx ; mov rdx, r12 ; call rax
0xffffff800062c223 : xor esi, esi ; mov rdi, rbx ; mov rdx, r13 ; call rax
0xffffff80007cefed : xor esi, esi ; mov rdi, rbx ; mov rdx, r13 ; call rcx
0xffffff800054c7a2 : xor esi, esi ; mov rdi, rbx ; mov rdx, r14 ; call rax
0xffffff800052b073 : xor esi, esi ; mov rdi, rbx ; mov rdx, r15 ; call rax
0xffffff800066d8cd : xor esi, esi ; mov rdi, rdx ; call 0xffffff8000529b77
0xffffff80007cf05d : xor esi, esi ; mov rdi, rdx ; mov rdx, r13 ; call rax
0xffffff80007dd239 : xor esi, esi ; mov rdi, rdx ; mov rdx, r14 ; call rax
0xffffff800068e027 : xor esi, esi ; mov rdx, r15 ; call rax
0xffffff800082c9e1 : xor esi, esi ; mov rdx, rax ; pop rbp ; jmp rcx
0xffffff80002670ff : xor esi, esi ; mov rdx, rbx ; call r15
0xffffff80008b4475 : xor esi, esi ; mov rdx, rcx ; pop rbp ; jmp rax
0xffffff80003a84b4 : xor esi, esi ; pop rbp ; jmp rax
0xffffff8000369887 : xor esi, esi ; ret 0x4801
0xffffff80007a5bf8 : xor esi, esi ; ret 0xf04
0xffffff80002b2047 : xor esi, esi ; test rax, rax ; je 0xffffff80002b205a ; call rax
0xffffff80002b2692 : xor esi, esi ; test rax, rax ; je 0xffffff80002b26a5 ; call rax
0xffffff800065e544 : xor esi, esi ; xor eax, eax ; call 0xffffff800028e1b7
0xffffff8000546b56 : xor esi, esi ; xor ecx, ecx ; mov rdi, r14 ; call 0xffffff8000532e69
0xffffff800088d2b5 : xor esi, esi ; xor ecx, ecx ; xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80003983f6 : xor esi, esi ; xor edx, edx ; call 0xffffff80002a46d6
0xffffff8000710dbf : xor esi, esi ; xor edx, edx ; call 0xffffff80004ccfd6
0xffffff800074b484 : xor esi, esi ; xor edx, edx ; call qword ptr [rbx]
0xffffff8000266b26 : xor esi, esi ; xor edx, edx ; call r14
0xffffff8000448448 : xor esi, esi ; xor edx, edx ; mov rdi, rbx ; call 0xffffff80002a46d9
0xffffff80003384b1 : xor esi, esi ; xor edx, edx ; pop rbp ; jmp 0xffffff80002a46d7
0xffffff800089a429 : xor esi, esi ; xor edx, edx ; pop rbp ; jmp r9
0xffffff800038888c : xor esi, esi ; xor edx, edx ; xor ecx, ecx ; call 0xffffff8000384b48
0xffffff8000267158 : xor esi, esi ; xor edx, edx ; xor ecx, ecx ; call rbx
0xffffff80003aefcc : xor esi, esi ; xor edx, edx ; xor ecx, ecx ; pop rbp ; jmp rax
0xffffff800029d8c0 : xor esi, esi ; xor r8d, r8d ; jmp rcx
0xffffff800068e026 : xor esi, r14d ; mov rdx, r15 ; call rax
0xffffff80002ba699 : xor esp, 0xfffffffa ; dec dword ptr [rax - 0x77] ; ret
0xffffff8000705589 : xor esp, 0xfffffffc ; push rsi ; ret
0xffffff80006df69c : xor esp, 0xffffffff ; call qword ptr [rdi]
0xffffff8000797989 : xor esp, dword ptr [rdx - 0x76b70005] ; ret
0xffffff8000660179 : xor esp, eax ; ret 0x48ff
0xffffff80008ce2cb : xor esp, esi ; dec dword ptr [rax - 0x77] ; ret
0xffffff80006b67d9 : xor esp, esp ; cmp eax, dword ptr [rax] ; call 0xffffff8000392a46
0xffffff80003fe3e1 : xor esp, esp ; jmp 0xffffff80003fda53
0xffffff80006bd3e2 : xor esp, esp ; jmp 0xffffff80006bd3ac
0xffffff800084c827 : xor esp, esp ; jmp 0xffffff800084c7d4
0xffffff800066df09 : xor esp, esp ; xor eax, eax ; call 0xffffff800028e4a7
0xffffff800072d9bb : xor qword ptr [r10], r8 ; pop rbp ; ret
0xffffff800072dbbb : xor qword ptr [r8 + 0x5d], r8 ; ret
0xffffff800072d9ab : xor qword ptr [r8], r10 ; pop rbp ; ret
0xffffff800072db9c : xor qword ptr [r8], r12 ; pop rbp ; ret
0xffffff800072e5d8 : xor qword ptr [r8], r9 ; pop rbp ; ret
0xffffff800072e11b : xor qword ptr [r9], r8 ; pop rbp ; ret
0xffffff8000536800 : xor qword ptr [rbx], r10 ; call 0xffffff8000392a46
0xffffff8000654fd2 : xor qword ptr [rsi], rdx ; add byte ptr [rax - 0x77], cl ; ret
0xffffff8000888915 : xor r10b, r15b ; dec dword ptr [rax - 0x77] ; ret
0xffffff80003fe3e0 : xor r12d, r12d ; jmp 0xffffff80003fda54
0xffffff80006bd3e1 : xor r12d, r12d ; jmp 0xffffff80006bd3ad
0xffffff800084c826 : xor r12d, r12d ; jmp 0xffffff800084c7d5
0xffffff800066df08 : xor r12d, r12d ; xor eax, eax ; call 0xffffff800028e4a8
0xffffff800066c747 : xor r13d, r13d ; call 0xffffff800028e4a6
0xffffff8000545f0b : xor r13d, r13d ; jmp rax
0xffffff80005512d9 : xor r13d, r13d ; mov dl, al ; jmp 0xffffff80005512ef
0xffffff80005c3d4a : xor r14, r14 ; mov rdi, r12 ; call rax
0xffffff80007dd15f : xor r14, r14 ; mov rdi, r12 ; mov rdx, rbx ; call rax
0xffffff8000605338 : xor r14, rsi ; mov rdi, r15 ; mov rdx, r12 ; call rax
0xffffff800038dfb7 : xor r14b, byte ptr [r8 + rax + 0x48] ; mov eax, dword ptr [rax + 0x60] ; pop rbp ; ret
0xffffff8000634d72 : xor r14d, esi ; call 0xffffff8000551035
0xffffff80007d1009 : xor r14d, esi ; mov rdi, r13 ; mov rdx, rbx ; call rcx
0xffffff8000605306 : xor r14d, esi ; mov rdi, r15 ; mov rdx, r12 ; call rax
0xffffff80005197c2 : xor r14d, r14d ; jmp rcx
0xffffff80002b2046 : xor r14d, r14d ; test rax, rax ; je 0xffffff80002b205b ; call rax
0xffffff80002b2691 : xor r14d, r14d ; test rax, rax ; je 0xffffff80002b26a6 ; call rax
0xffffff800065e543 : xor r14d, r14d ; xor eax, eax ; call 0xffffff800028e1b8
0xffffff800027b6ce : xor r15d, r15d ; jmp 0xffffff800027b71a
0xffffff80002d474e : xor r15d, r15d ; jmp 0xffffff80002d472e
0xffffff800067ec3a : xor r15d, r15d ; jmp rax
0xffffff800067f1ea : xor r15d, r15d ; jmp rcx
0xffffff800072e55b : xor r8, qword ptr [r8 + 0x5d] ; ret
0xffffff800072db8b : xor r8b, byte ptr [r10] ; pop rbp ; ret
0xffffff800072d97c : xor r8b, byte ptr [r9] ; pop rbp ; ret
0xffffff8000810aca : xor r8b, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff80002be9ad : xor r8d, r8d ; call 0xffffff800074ac45
0xffffff800027fc05 : xor r8d, r8d ; call 0xffffff800074ac49
0xffffff800029d8c2 : xor r8d, r8d ; jmp rcx
0xffffff80007b458e : xor r8d, r8d ; mov rdi, rbx ; call 0xffffff80007907d8
0xffffff80005bc892 : xor r8d, r8d ; mov rdx, r15 ; call rbx
0xffffff80008838c1 : xor r8d, r8d ; mov rsi, r14 ; mov rdx, r12 ; call rax
0xffffff800088359e : xor r8d, r8d ; mov rsi, r14 ; mov rdx, rbx ; call rax
0xffffff80008f5d19 : xor r8d, r8d ; mov rsi, r15 ; mov r9, r13 ; call rax
0xffffff800087f08f : xor r8d, r8d ; mov rsi, r15 ; mov rdx, r13 ; call rax
0xffffff800087e8dd : xor r8d, r8d ; mov rsi, rbx ; mov rdx, r13 ; call rax
0xffffff800088d2b9 : xor r8d, r8d ; pop rbp ; jmp rax
0xffffff80005ba8ab : xor r8d, r8d ; xor r9d, r9d ; call 0xffffff8000396b88
0xffffff800076b92f : xor r8d, r8d ; xor r9d, r9d ; call 0xffffff8000396b89
0xffffff80004a1d12 : xor r8d, r8d ; xor r9d, r9d ; call rax
0xffffff800049c8d1 : xor r8d, r8d ; xor r9d, r9d ; pop rbp ; jmp rax
0xffffff800072db23 : xor r9b, byte ptr [r8] ; pop rbp ; ret
0xffffff80005ba8ae : xor r9d, r9d ; call 0xffffff8000396b85
0xffffff800076b932 : xor r9d, r9d ; call 0xffffff8000396b86
0xffffff80007e3039 : xor r9d, r9d ; call 0xffffff8000396b89
0xffffff80004a1d15 : xor r9d, r9d ; call rax
0xffffff8000398da5 : xor r9d, r9d ; mov edi, ebx ; mov rsi, r15 ; call r12
0xffffff800076f133 : xor r9d, r9d ; mov r14, rsi ; call 0xffffff8000396b89
0xffffff8000696503 : xor r9d, r9d ; mov r8, rbx ; call 0xffffff80002c53a9
0xffffff8000770ff3 : xor r9d, r9d ; mov rcx, r14 ; call 0xffffff8000396b89
0xffffff800074f384 : xor r9d, r9d ; mov rdi, r15 ; mov edx, r14d ; call rax
0xffffff800076bbbc : xor r9d, r9d ; mov rdx, r14 ; call 0xffffff8000396b89
0xffffff8000772c83 : xor r9d, r9d ; mov rdx, r15 ; call 0xffffff8000396b89
0xffffff80007a498a : xor r9d, r9d ; mov rdx, rax ; pop rbp ; jmp r11
0xffffff800076ba82 : xor r9d, r9d ; mov rdx, rbx ; call 0xffffff8000396b89
0xffffff80007723d5 : xor r9d, r9d ; mov rsi, r12 ; call 0xffffff8000396b89
0xffffff80007fa929 : xor r9d, r9d ; mov rsi, r13 ; call 0xffffff8000396b88
0xffffff800076eba9 : xor r9d, r9d ; mov rsi, r13 ; call 0xffffff8000396b89
0xffffff8000766da1 : xor r9d, r9d ; mov rsi, r15 ; call 0xffffff8000396b89
0xffffff800049c8d4 : xor r9d, r9d ; pop rbp ; jmp rax
0xffffff80004386f7 : xor rax, 0x5bc03100 ; pop r14 ; pop rbp ; ret
0xffffff800072e581 : xor rax, qword ptr [r8 + 0x8c48348] ; pop rbx ; pop rbp ; ret
0xffffff800032663c : xor rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0xffffff8000392fa9 : xor rax, rax ; leave ; ret
0xffffff80003923be : xor rax, rax ; pop r9 ; ret
0xffffff8000313b61 : xor rax, rax ; pop rbp ; ret
0xffffff80007c3603 : xor rax, rax ; pop rbx ; pop r14 ; pop rbp ; ret
0xffffff800039324d : xor rax, rax ; ret
0xffffff80002d3af4 : xor rax, rdx ; pop rbp ; ret
0xffffff80003993a3 : xor rbp, rbp ; call rbx
0xffffff800039a772 : xor rbp, rbp ; call rcx
0xffffff800039a790 : xor rbp, rbp ; mov rsp, rsi ; call rdi
0xffffff800029c7f6 : xor rsi, r14 ; call rax
0xffffff8000822914 : xor rsi, rsi ; call r15
0xffffff80007d3f84 : xor rsi, rsi ; mov rdi, r12 ; call rax
0xffffff800081130a : xor rsi, rsi ; pop rbp ; jmp rax
0xffffff800071ea75 : xor sil, r15b ; movzx eax, cx ; pop rbp ; ret

Unique gadgets found: 47416
